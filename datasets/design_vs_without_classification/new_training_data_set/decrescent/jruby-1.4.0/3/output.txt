set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9984823655148196	WITHOUT_CLASSIFICATION	0.0015176344851804465	DESIGN
line 335	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9996745304274192	WITHOUT_CLASSIFICATION	3.2546957258073174E-4	DESIGN
line 362	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
line 391	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
^D	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
^Z	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9993296744436745	WITHOUT_CLASSIFICATION	6.703255563254386E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9993296744436745	WITHOUT_CLASSIFICATION	6.703255563254386E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
return result	WITHOUT_CLASSIFICATION	0.9999463282057139	WITHOUT_CLASSIFICATION	5.3671794286112524E-5	DESIGN
name	WITHOUT_CLASSIFICATION	0.997802870034717	WITHOUT_CLASSIFICATION	0.0021971299652829342	DESIGN
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9986962188848892	WITHOUT_CLASSIFICATION	0.0013037811151107826	DESIGN
Accessor methods.	WITHOUT_CLASSIFICATION	0.999603201528257	WITHOUT_CLASSIFICATION	3.967984717430398E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9994654057275311	WITHOUT_CLASSIFICATION	5.345942724688916E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9994654057275311	WITHOUT_CLASSIFICATION	5.345942724688916E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9994654057275311	WITHOUT_CLASSIFICATION	5.345942724688916E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9994654057275311	WITHOUT_CLASSIFICATION	5.345942724688916E-4	DESIGN
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9991828641290887	WITHOUT_CLASSIFICATION	8.171358709113664E-4	DESIGN
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9981531897683888	WITHOUT_CLASSIFICATION	0.0018468102316111918	DESIGN
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9996592420171946	WITHOUT_CLASSIFICATION	3.4075798280538874E-4	DESIGN
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9959295936674102	WITHOUT_CLASSIFICATION	0.004070406332589744	DESIGN
Version information:	WITHOUT_CLASSIFICATION	0.9996536328766936	WITHOUT_CLASSIFICATION	3.4636712330635464E-4	DESIGN
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.999710601802465	WITHOUT_CLASSIFICATION	2.89398197534985E-4	DESIGN
ARGF, $< object	WITHOUT_CLASSIFICATION	0.9997133483192205	WITHOUT_CLASSIFICATION	2.866516807794794E-4	DESIGN
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9994465071888013	WITHOUT_CLASSIFICATION	5.53492811198644E-4	DESIGN
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9024531236791559	WITHOUT_CLASSIFICATION	0.09754687632084405	DESIGN
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.998677292929579	WITHOUT_CLASSIFICATION	0.0013227070704211242	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9620924712649925	WITHOUT_CLASSIFICATION	0.03790752873500747	DESIGN
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9995904218972633	WITHOUT_CLASSIFICATION	4.0957810273665275E-4	DESIGN
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9913383893996219	WITHOUT_CLASSIFICATION	0.008661610600378025	DESIGN
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9762651988090657	WITHOUT_CLASSIFICATION	0.023734801190934265	DESIGN
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998720709684116	WITHOUT_CLASSIFICATION	1.279290315883983E-4	DESIGN
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9984150275178794	WITHOUT_CLASSIFICATION	0.001584972482120708	DESIGN
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9747701537862619	WITHOUT_CLASSIFICATION	0.025229846213738163	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9994654057275311	WITHOUT_CLASSIFICATION	5.345942724688916E-4	DESIGN
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997816590791248	WITHOUT_CLASSIFICATION	2.183409208751986E-4	DESIGN
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999753586118337	WITHOUT_CLASSIFICATION	2.464138816627438E-5	DESIGN
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999433865882338	WITHOUT_CLASSIFICATION	5.6613411766194514E-5	DESIGN
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9982099057409324	WITHOUT_CLASSIFICATION	0.00179009425906753	DESIGN
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9986757684302163	WITHOUT_CLASSIFICATION	0.001324231569783668	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9957901012767488	WITHOUT_CLASSIFICATION	0.0042098987232511206	DESIGN
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999570740158338	WITHOUT_CLASSIFICATION	4.292598416621393E-5	DESIGN
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9962260954380087	WITHOUT_CLASSIFICATION	0.0037739045619913435	DESIGN
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.993144816493692	WITHOUT_CLASSIFICATION	0.006855183506308018	DESIGN
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999042440945396	WITHOUT_CLASSIFICATION	9.575590546048787E-5	DESIGN
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9991765521119116	WITHOUT_CLASSIFICATION	8.234478880883687E-4	DESIGN
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9986906952920857	WITHOUT_CLASSIFICATION	0.0013093047079143058	DESIGN
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
IOT is also 6	WITHOUT_CLASSIFICATION	0.9998436214072894	WITHOUT_CLASSIFICATION	1.5637859271045622E-4	DESIGN
CLD is also 20	WITHOUT_CLASSIFICATION	0.9996146463824535	WITHOUT_CLASSIFICATION	3.853536175466179E-4	DESIGN
RubySignal	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9935934048866537	WITHOUT_CLASSIFICATION	0.0064065951133462935	DESIGN
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9993610212921813	WITHOUT_CLASSIFICATION	6.389787078187351E-4	DESIGN
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9997540066145153	WITHOUT_CLASSIFICATION	2.4599338548468564E-4	DESIGN
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9996615419037842	WITHOUT_CLASSIFICATION	3.384580962158147E-4	DESIGN
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9996888815713698	WITHOUT_CLASSIFICATION	3.111184286301827E-4	DESIGN
io.finish();	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.991336040375099	WITHOUT_CLASSIFICATION	0.008663959624900972	DESIGN
hmm...	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9867743380973488	WITHOUT_CLASSIFICATION	0.013225661902651072	DESIGN
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9743649673720168	WITHOUT_CLASSIFICATION	0.025635032627983067	DESIGN
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9977268346933471	WITHOUT_CLASSIFICATION	0.0022731653066529332	DESIGN
float number of seconds	WITHOUT_CLASSIFICATION	0.999760465782175	WITHOUT_CLASSIFICATION	2.3953421782491152E-4	DESIGN
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.999364821951732	WITHOUT_CLASSIFICATION	6.351780482679852E-4	DESIGN
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9992890166555009	WITHOUT_CLASSIFICATION	7.109833444991394E-4	DESIGN
Time class methods	WITHOUT_CLASSIFICATION	0.9988022627300599	WITHOUT_CLASSIFICATION	0.0011977372699400685	DESIGN
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9980805975648144	WITHOUT_CLASSIFICATION	0.0019194024351856438	DESIGN
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999086808586872	WITHOUT_CLASSIFICATION	9.131914131277119E-5	DESIGN
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9958924674315104	WITHOUT_CLASSIFICATION	0.004107532568489556	DESIGN
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.9975699046218286	WITHOUT_CLASSIFICATION	0.002430095378171373	DESIGN
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9981347423994891	WITHOUT_CLASSIFICATION	0.0018652576005110375	DESIGN
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9985437724523806	WITHOUT_CLASSIFICATION	0.001456227547619452	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9997732837520197	WITHOUT_CLASSIFICATION	2.2671624798032203E-4	DESIGN
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9997986391352489	WITHOUT_CLASSIFICATION	2.0136086475110577E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997784777045635	WITHOUT_CLASSIFICATION	2.2152229543632838E-4	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9754682051057076	WITHOUT_CLASSIFICATION	0.024531794894292337	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9995805496838323	WITHOUT_CLASSIFICATION	4.1945031616783267E-4	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9995805496838323	WITHOUT_CLASSIFICATION	4.1945031616783267E-4	DESIGN
no bignorm here needed	WITHOUT_CLASSIFICATION	0.9924109883974552	WITHOUT_CLASSIFICATION	0.007589011602544717	DESIGN
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9939077952048323	WITHOUT_CLASSIFICATION	0.006092204795167676	DESIGN
Pad with a 0	WITHOUT_CLASSIFICATION	0.9996563878261233	WITHOUT_CLASSIFICATION	3.436121738767797E-4	DESIGN
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9990210277678025	WITHOUT_CLASSIFICATION	9.789722321974588E-4	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9752954928919765	WITHOUT_CLASSIFICATION	0.024704507108023507	DESIGN
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9819256169874948	WITHOUT_CLASSIFICATION	0.018074383012505277	DESIGN
???	WITHOUT_CLASSIFICATION	0.9988034613797937	WITHOUT_CLASSIFICATION	0.0011965386202064138	DESIGN
PID	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997784777045635	WITHOUT_CLASSIFICATION	2.2152229543632838E-4	DESIGN
elements and trailing nils	WITHOUT_CLASSIFICATION	0.9995798562944955	WITHOUT_CLASSIFICATION	4.2014370550455456E-4	DESIGN
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999972918916754	WITHOUT_CLASSIFICATION	2.7081083246484487E-6	DESIGN
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.9999952429114405	WITHOUT_CLASSIFICATION	4.757088559527918E-6	DESIGN
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9984733422687918	WITHOUT_CLASSIFICATION	0.0015266577312082075	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9989695749758788	WITHOUT_CLASSIFICATION	0.0010304250241211475	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9989695749758788	WITHOUT_CLASSIFICATION	0.0010304250241211475	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9989695749758788	WITHOUT_CLASSIFICATION	0.0010304250241211475	DESIGN
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.9987272647351019	WITHOUT_CLASSIFICATION	0.0012727352648980736	DESIGN
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9992807614104244	WITHOUT_CLASSIFICATION	7.192385895755809E-4	DESIGN
Create global constants and variables	WITHOUT_CLASSIFICATION	0.999281159399676	WITHOUT_CLASSIFICATION	7.188406003240485E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9911084026118555	WITHOUT_CLASSIFICATION	0.008891597388144516	DESIGN
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.999752477290173	WITHOUT_CLASSIFICATION	2.4752270982699625E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9945983749059897	WITHOUT_CLASSIFICATION	0.005401625094010312	DESIGN
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9816362864735148	WITHOUT_CLASSIFICATION	0.01836371352648519	DESIGN
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999924814824025	WITHOUT_CLASSIFICATION	7.518517597421182E-6	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9997044560660227	WITHOUT_CLASSIFICATION	2.955439339774537E-4	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998154537681585	WITHOUT_CLASSIFICATION	1.8454623184153794E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.998597808563866	WITHOUT_CLASSIFICATION	0.0014021914361340595	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.998597808563866	WITHOUT_CLASSIFICATION	0.0014021914361340595	DESIGN
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9990949609251037	WITHOUT_CLASSIFICATION	9.05039074896213E-4	DESIGN
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9994382050333512	WITHOUT_CLASSIFICATION	5.617949666487661E-4	DESIGN
root fiber	WITHOUT_CLASSIFICATION	0.9966682059312378	WITHOUT_CLASSIFICATION	0.0033317940687621456	DESIGN
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.999382804900929	WITHOUT_CLASSIFICATION	6.171950990709525E-4	DESIGN
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9983744745687153	WITHOUT_CLASSIFICATION	0.001625525431284776	DESIGN
extras flag	WITHOUT_CLASSIFICATION	0.9996535926823268	WITHOUT_CLASSIFICATION	3.4640731767328695E-4	DESIGN
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
...nothing	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
utility method	WITHOUT_CLASSIFICATION	0.9996171551355278	WITHOUT_CLASSIFICATION	3.8284486447210184E-4	DESIGN
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9981700589077349	WITHOUT_CLASSIFICATION	0.0018299410922650286	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997784777045635	WITHOUT_CLASSIFICATION	2.2152229543632838E-4	DESIGN
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999907202955187	WITHOUT_CLASSIFICATION	9.279704481210591E-6	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9987641870931927	WITHOUT_CLASSIFICATION	0.001235812906807294	DESIGN
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9979992741958319	WITHOUT_CLASSIFICATION	0.002000725804168144	DESIGN
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9859939739819867	WITHOUT_CLASSIFICATION	0.014006026018013254	DESIGN
MRI does it!	WITHOUT_CLASSIFICATION	0.9998152627924404	WITHOUT_CLASSIFICATION	1.847372075597031E-4	DESIGN
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998307669379284	WITHOUT_CLASSIFICATION	1.6923306207162686E-4	DESIGN
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999600666979045	WITHOUT_CLASSIFICATION	3.993330209550061E-4	DESIGN
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9913736372205005	WITHOUT_CLASSIFICATION	0.00862636277949944	DESIGN
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999948512493555	WITHOUT_CLASSIFICATION	5.148750644538601E-6	DESIGN
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9581391064955449	WITHOUT_CLASSIFICATION	0.041860893504455134	DESIGN
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9995480527011416	WITHOUT_CLASSIFICATION	4.519472988584096E-4	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9997749642327758	WITHOUT_CLASSIFICATION	2.2503576722420087E-4	DESIGN
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9953310096554574	WITHOUT_CLASSIFICATION	0.004668990344542627	DESIGN
recheck condition	WITHOUT_CLASSIFICATION	0.9997583358279465	WITHOUT_CLASSIFICATION	2.4166417205347137E-4	DESIGN
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999855354758154	WITHOUT_CLASSIFICATION	1.4464524184595068E-4	DESIGN
Construct key services	WITHOUT_CLASSIFICATION	0.9956606747799914	WITHOUT_CLASSIFICATION	0.004339325220008682	DESIGN
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9992657325829153	WITHOUT_CLASSIFICATION	7.342674170848169E-4	DESIGN
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998170057758815	WITHOUT_CLASSIFICATION	1.8299422411842734E-4	DESIGN
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9992557923098226	WITHOUT_CLASSIFICATION	7.442076901772646E-4	DESIGN
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.7164694172913582	WITHOUT_CLASSIFICATION	0.2835305827086419	DESIGN
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.991747173797655	WITHOUT_CLASSIFICATION	0.008252826202344944	DESIGN
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9967595833247461	WITHOUT_CLASSIFICATION	0.0032404166752537916	DESIGN
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999523134635644	WITHOUT_CLASSIFICATION	4.7686536435688625E-5	DESIGN
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9989502217533317	WITHOUT_CLASSIFICATION	0.0010497782466683074	DESIGN
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.997551271282192	WITHOUT_CLASSIFICATION	0.0024487287178079375	DESIGN
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999340735958497	WITHOUT_CLASSIFICATION	6.592640415030456E-4	DESIGN
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9982159673796337	WITHOUT_CLASSIFICATION	0.0017840326203663061	DESIGN
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9997555445026031	WITHOUT_CLASSIFICATION	2.444554973969415E-4	DESIGN
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9997566310697974	WITHOUT_CLASSIFICATION	2.4336893020263307E-4	DESIGN
determine spacing	WITHOUT_CLASSIFICATION	0.9996432055658698	WITHOUT_CLASSIFICATION	3.567944341302081E-4	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9962960120569906	WITHOUT_CLASSIFICATION	0.0037039879430093865	DESIGN
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9997622466386809	WITHOUT_CLASSIFICATION	2.377533613191436E-4	DESIGN
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9900755946867901	WITHOUT_CLASSIFICATION	0.009924405313209969	DESIGN
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9990529130469078	WITHOUT_CLASSIFICATION	9.470869530922204E-4	DESIGN
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9915975173706748	WITHOUT_CLASSIFICATION	0.00840248262932516	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.990023172680465	WITHOUT_CLASSIFICATION	0.009976827319534986	DESIGN
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9993878564588646	WITHOUT_CLASSIFICATION	6.121435411354272E-4	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.9996418883075102	WITHOUT_CLASSIFICATION	3.581116924898881E-4	DESIGN
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9994311532288731	WITHOUT_CLASSIFICATION	5.688467711268766E-4	DESIGN
Default objects	WITHOUT_CLASSIFICATION	0.9998414955575491	WITHOUT_CLASSIFICATION	1.5850444245089592E-4	DESIGN
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9991674295983485	WITHOUT_CLASSIFICATION	8.32570401651561E-4	DESIGN
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9985866173832073	WITHOUT_CLASSIFICATION	0.0014133826167925954	DESIGN
Java support	WITHOUT_CLASSIFICATION	0.9991702531531764	WITHOUT_CLASSIFICATION	8.29746846823605E-4	DESIGN
Parser stats	WITHOUT_CLASSIFICATION	0.9994901093842654	WITHOUT_CLASSIFICATION	5.098906157345402E-4	DESIGN
Compilation	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9998436988891893	WITHOUT_CLASSIFICATION	1.5630111081072688E-4	DESIGN
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9994361281031227	WITHOUT_CLASSIFICATION	5.638718968773759E-4	DESIGN
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.999395532923232	WITHOUT_CLASSIFICATION	6.044670767680309E-4	DESIGN
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9989554395338114	WITHOUT_CLASSIFICATION	0.0010445604661886532	DESIGN
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.998907495553951	WITHOUT_CLASSIFICATION	0.0010925044460490608	DESIGN
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9997613227349608	WITHOUT_CLASSIFICATION	2.3867726503929825E-4	DESIGN
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9997787736768634	WITHOUT_CLASSIFICATION	2.2122632313650997E-4	DESIGN
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.994476524169775	WITHOUT_CLASSIFICATION	0.005523475830225021	DESIGN
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.6827800013088662	WITHOUT_CLASSIFICATION	0.3172199986911338	DESIGN
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.999858775514912	WITHOUT_CLASSIFICATION	1.4122448508794091E-4	DESIGN
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9964202546343187	WITHOUT_CLASSIFICATION	0.0035797453656812367	DESIGN
quoted-printable	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
default options	WITHOUT_CLASSIFICATION	0.9997677180599426	WITHOUT_CLASSIFICATION	2.3228194005738383E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9994271203599886	WITHOUT_CLASSIFICATION	5.728796400112844E-4	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9994271203599886	WITHOUT_CLASSIFICATION	5.728796400112844E-4	DESIGN
long name option	WITHOUT_CLASSIFICATION	0.9997495492029799	WITHOUT_CLASSIFICATION	2.504507970201403E-4	DESIGN
conversion	WITHOUT_CLASSIFICATION	0.9986688864525021	WITHOUT_CLASSIFICATION	0.0013311135474979945	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9997286917335002	WITHOUT_CLASSIFICATION	2.7130826649974263E-4	DESIGN
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9996207248946963	WITHOUT_CLASSIFICATION	3.792751053036486E-4	DESIGN
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.999637645004062	WITHOUT_CLASSIFICATION	3.623549959379518E-4	DESIGN
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.999719179833718	WITHOUT_CLASSIFICATION	2.8082016628197743E-4	DESIGN
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9996602895619918	WITHOUT_CLASSIFICATION	3.3971043800821673E-4	DESIGN
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9999840435262178	WITHOUT_CLASSIFICATION	1.595647378212197E-5	DESIGN
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9967505405290362	WITHOUT_CLASSIFICATION	0.0032494594709638535	DESIGN
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999716962141995	WITHOUT_CLASSIFICATION	2.8303785800588386E-5	DESIGN
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9993925509014352	WITHOUT_CLASSIFICATION	6.074490985647682E-4	DESIGN
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.999672724399875	WITHOUT_CLASSIFICATION	3.272756001249852E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.5450854587477121	WITHOUT_CLASSIFICATION	0.4549145412522879	DESIGN
must not reallocate	WITHOUT_CLASSIFICATION	0.9992373460096039	WITHOUT_CLASSIFICATION	7.626539903960606E-4	DESIGN
Illegal combination	WITHOUT_CLASSIFICATION	0.9995409663613402	WITHOUT_CLASSIFICATION	4.590336386598481E-4	DESIGN
use 1.8 impl	WITHOUT_CLASSIFICATION	0.9979623576040786	WITHOUT_CLASSIFICATION	0.002037642395921495	DESIGN
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9990384274879585	WITHOUT_CLASSIFICATION	9.615725120416006E-4	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999378324567824	WITHOUT_CLASSIFICATION	6.216754321761267E-5	DESIGN
len + margin	WITHOUT_CLASSIFICATION	0.9998360041071671	WITHOUT_CLASSIFICATION	1.6399589283283943E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9998530160887231	WITHOUT_CLASSIFICATION	1.4698391127689596E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9998530160887231	WITHOUT_CLASSIFICATION	1.4698391127689596E-4	DESIGN
copy pre-match substr	WITHOUT_CLASSIFICATION	0.999605346437859	WITHOUT_CLASSIFICATION	3.9465356214095446E-4	DESIGN
string given	WITHOUT_CLASSIFICATION	0.9999192998799119	WITHOUT_CLASSIFICATION	8.070012008806513E-5	DESIGN
hash given	WITHOUT_CLASSIFICATION	0.9989168805221796	WITHOUT_CLASSIFICATION	0.0010831194778203478	DESIGN
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9973624635787162	WITHOUT_CLASSIFICATION	0.0026375364212838774	DESIGN
substring longer than string	WITHOUT_CLASSIFICATION	0.9984751305450787	WITHOUT_CLASSIFICATION	0.0015248694549213025	DESIGN
rb_str_substr	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9995646219862677	WITHOUT_CLASSIFICATION	4.3537801373232793E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9995646219862677	WITHOUT_CLASSIFICATION	4.3537801373232793E-4	DESIGN
rb_str_splice	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.630973460009543	WITHOUT_CLASSIFICATION	0.369026539990457	DESIGN
keep cr ?	WITHOUT_CLASSIFICATION	0.9984737385431212	WITHOUT_CLASSIFICATION	0.001526261456878823	DESIGN
keep cr ?	WITHOUT_CLASSIFICATION	0.9984737385431212	WITHOUT_CLASSIFICATION	0.001526261456878823	DESIGN
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9944753963308426	WITHOUT_CLASSIFICATION	0.005524603669157346	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9995213996346126	WITHOUT_CLASSIFICATION	4.7860036538734585E-4	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9995213996346126	WITHOUT_CLASSIFICATION	4.7860036538734585E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9997618870351984	WITHOUT_CLASSIFICATION	2.3811296480162522E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9997618870351984	WITHOUT_CLASSIFICATION	2.3811296480162522E-4	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
QTRUE	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9997198850489638	WITHOUT_CLASSIFICATION	2.801149510362569E-4	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.991625935196606	WITHOUT_CLASSIFICATION	0.008374064803394058	DESIGN
long size bits in byte	WITHOUT_CLASSIFICATION	0.9998168777399766	WITHOUT_CLASSIFICATION	1.8312226002335967E-4	DESIGN
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9987894990751582	WITHOUT_CLASSIFICATION	0.0012105009248418522	DESIGN
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9980925736756128	WITHOUT_CLASSIFICATION	0.0019074263243873443	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9982449346440643	WITHOUT_CLASSIFICATION	0.0017550653559358005	DESIGN
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9987086532861655	WITHOUT_CLASSIFICATION	0.0012913467138344211	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9982449346440643	WITHOUT_CLASSIFICATION	0.0017550653559358005	DESIGN
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.998663322542778	WITHOUT_CLASSIFICATION	0.0013366774572219728	DESIGN
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9986117234830353	WITHOUT_CLASSIFICATION	0.001388276516964737	DESIGN
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9997970238085928	WITHOUT_CLASSIFICATION	2.0297619140730277E-4	DESIGN
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999374808144122	WITHOUT_CLASSIFICATION	6.251918558766622E-5	DESIGN
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999262513762899	WITHOUT_CLASSIFICATION	7.374862371012188E-5	DESIGN
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9980101743825814	WITHOUT_CLASSIFICATION	0.001989825617418599	DESIGN
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9987938234723859	WITHOUT_CLASSIFICATION	0.0012061765276140252	DESIGN
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9997121424516019	WITHOUT_CLASSIFICATION	2.878575483981364E-4	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9927144458869737	WITHOUT_CLASSIFICATION	0.007285554113026365	DESIGN
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9998539560808649	WITHOUT_CLASSIFICATION	1.460439191350292E-4	DESIGN
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9972024134815641	WITHOUT_CLASSIFICATION	0.0027975865184358766	DESIGN
file not given	WITHOUT_CLASSIFICATION	0.999686112525681	WITHOUT_CLASSIFICATION	3.138874743191075E-4	DESIGN
string to eval	WITHOUT_CLASSIFICATION	0.9998988748265327	WITHOUT_CLASSIFICATION	1.0112517346731222E-4	DESIGN
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9992769651547381	WITHOUT_CLASSIFICATION	7.230348452618843E-4	DESIGN
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.999785323989967	WITHOUT_CLASSIFICATION	2.1467601003309384E-4	DESIGN
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9966393360448419	WITHOUT_CLASSIFICATION	0.0033606639551581434	DESIGN
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9973913370356425	WITHOUT_CLASSIFICATION	0.002608662964357488	DESIGN
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9961823688774999	WITHOUT_CLASSIFICATION	0.003817631122500094	DESIGN
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9995373338818101	WITHOUT_CLASSIFICATION	4.626661181898704E-4	DESIGN
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9780445994099648	WITHOUT_CLASSIFICATION	0.021955400590035187	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9996050494772177	WITHOUT_CLASSIFICATION	3.9495052278217555E-4	DESIGN
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.999977146081138	WITHOUT_CLASSIFICATION	2.2853918861957885E-5	DESIGN
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9988591508449709	WITHOUT_CLASSIFICATION	0.0011408491550290642	DESIGN
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999762876689785	WITHOUT_CLASSIFICATION	2.3712331021460018E-5	DESIGN
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999355499651342	WITHOUT_CLASSIFICATION	6.44500348657719E-5	DESIGN
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999196148716952	WITHOUT_CLASSIFICATION	8.038512830472859E-5	DESIGN
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.999905093251267	WITHOUT_CLASSIFICATION	9.490674873306263E-5	DESIGN
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999909435392863	WITHOUT_CLASSIFICATION	9.056460713779722E-6	DESIGN
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999719078365114	WITHOUT_CLASSIFICATION	2.8092163488589404E-5	DESIGN
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999848656643782	WITHOUT_CLASSIFICATION	1.5134335621838541E-5	DESIGN
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9998773626030488	WITHOUT_CLASSIFICATION	1.226373969511457E-4	DESIGN
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9998676387166419	WITHOUT_CLASSIFICATION	1.3236128335814107E-4	DESIGN
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999688530693578	WITHOUT_CLASSIFICATION	3.114693064215896E-5	DESIGN
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999864217425758	WITHOUT_CLASSIFICATION	1.3578257424124554E-5	DESIGN
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9999791951165071	WITHOUT_CLASSIFICATION	2.080488349290887E-5	DESIGN
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999480364033148	WITHOUT_CLASSIFICATION	5.196359668531249E-5	DESIGN
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999916488632034	WITHOUT_CLASSIFICATION	8.351136796650098E-6	DESIGN
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999918986237948	WITHOUT_CLASSIFICATION	8.101376205191381E-6	DESIGN
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999550296710326	WITHOUT_CLASSIFICATION	4.497032896753584E-5	DESIGN
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9996817772476188	WITHOUT_CLASSIFICATION	3.182227523812483E-4	DESIGN
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999924476133873	WITHOUT_CLASSIFICATION	7.55238661263932E-6	DESIGN
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999884280417886	WITHOUT_CLASSIFICATION	1.1571958211501225E-5	DESIGN
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999873757685541	WITHOUT_CLASSIFICATION	1.2624231445829654E-5	DESIGN
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999882443061975	WITHOUT_CLASSIFICATION	1.1755693802470096E-5	DESIGN
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999930286221267	WITHOUT_CLASSIFICATION	6.9713778733272965E-6	DESIGN
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999933158563354	WITHOUT_CLASSIFICATION	6.6841436645515295E-6	DESIGN
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999651910735272	WITHOUT_CLASSIFICATION	3.480892647273984E-5	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9987503110139297	WITHOUT_CLASSIFICATION	0.0012496889860701805	DESIGN
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9991993347627444	WITHOUT_CLASSIFICATION	8.006652372556549E-4	DESIGN
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9991383602432242	WITHOUT_CLASSIFICATION	8.616397567757211E-4	DESIGN
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999736755706446	WITHOUT_CLASSIFICATION	2.6324429355369614E-5	DESIGN
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9993668853892074	WITHOUT_CLASSIFICATION	6.331146107926528E-4	DESIGN
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.99704349427527	WITHOUT_CLASSIFICATION	0.0029565057247301018	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9984600309317632	WITHOUT_CLASSIFICATION	0.001539969068236822	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9984600309317632	WITHOUT_CLASSIFICATION	0.001539969068236822	DESIGN
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9997864984091785	WITHOUT_CLASSIFICATION	2.1350159082136996E-4	DESIGN
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9996993949788314	WITHOUT_CLASSIFICATION	3.0060502116861695E-4	DESIGN
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9984149508807243	WITHOUT_CLASSIFICATION	0.0015850491192757855	DESIGN
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9992956730467141	WITHOUT_CLASSIFICATION	7.043269532858446E-4	DESIGN
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9995201115889175	WITHOUT_CLASSIFICATION	4.798884110824153E-4	DESIGN
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999875500870007	WITHOUT_CLASSIFICATION	1.2449912999291909E-5	DESIGN
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9973092454903834	WITHOUT_CLASSIFICATION	0.002690754509616682	DESIGN
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9992275633864156	WITHOUT_CLASSIFICATION	7.724366135844927E-4	DESIGN
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.998781080448133	WITHOUT_CLASSIFICATION	0.001218919551866999	DESIGN
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9998781995670553	WITHOUT_CLASSIFICATION	1.2180043294478589E-4	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999837645363158	WITHOUT_CLASSIFICATION	1.623546368423423E-5	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999837645363158	WITHOUT_CLASSIFICATION	1.623546368423423E-5	DESIGN
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.8867778228515727	DESIGN	0.11322217714842733	WITHOUT_CLASSIFICATION
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9884423326775292	WITHOUT_CLASSIFICATION	0.011557667322470778	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9919947010844499	WITHOUT_CLASSIFICATION	0.008005298915550192	DESIGN
Create Constants class	WITHOUT_CLASSIFICATION	0.9984904338025214	WITHOUT_CLASSIFICATION	0.0015095661974785597	DESIGN
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9996617149593379	WITHOUT_CLASSIFICATION	3.3828504066211833E-4	DESIGN
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9995425787985602	WITHOUT_CLASSIFICATION	4.5742120143973345E-4	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9994861460696175	WITHOUT_CLASSIFICATION	5.138539303825375E-4	DESIGN
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9976128473636783	WITHOUT_CLASSIFICATION	0.002387152636321619	DESIGN
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999994482551524	WITHOUT_CLASSIFICATION	5.5174484765644E-7	DESIGN
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9982018670201039	WITHOUT_CLASSIFICATION	0.0017981329798959665	DESIGN
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999134579874038	WITHOUT_CLASSIFICATION	8.654201259610329E-5	DESIGN
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999984507782259	WITHOUT_CLASSIFICATION	1.5492217739897523E-6	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9996566100707611	WITHOUT_CLASSIFICATION	3.4338992923887653E-4	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9996566100707611	WITHOUT_CLASSIFICATION	3.4338992923887653E-4	DESIGN
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9823836561978514	WITHOUT_CLASSIFICATION	0.017616343802148625	DESIGN
Should we do anything?	WITHOUT_CLASSIFICATION	0.983315188626334	WITHOUT_CLASSIFICATION	0.016684811373665898	DESIGN
File class methods	WITHOUT_CLASSIFICATION	0.9990102771320056	WITHOUT_CLASSIFICATION	9.897228679944298E-4	DESIGN
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9980000915914502	WITHOUT_CLASSIFICATION	0.001999908408549757	DESIGN
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9978355602926906	WITHOUT_CLASSIFICATION	0.0021644397073094287	DESIGN
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9991411286914312	WITHOUT_CLASSIFICATION	8.588713085688043E-4	DESIGN
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9997328790514062	WITHOUT_CLASSIFICATION	2.6712094859382754E-4	DESIGN
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9986724425198324	WITHOUT_CLASSIFICATION	0.001327557480167512	DESIGN
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.9985555751042698	WITHOUT_CLASSIFICATION	0.0014444248957301137	DESIGN
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9990238289825389	WITHOUT_CLASSIFICATION	9.76171017461045E-4	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9919947010844499	WITHOUT_CLASSIFICATION	0.008005298915550192	DESIGN
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9944143582539907	WITHOUT_CLASSIFICATION	0.00558564174600931	DESIGN
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9855102077451602	WITHOUT_CLASSIFICATION	0.01448979225483983	DESIGN
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.9999856720145285	WITHOUT_CLASSIFICATION	1.4327985471565769E-5	DESIGN
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9999992625611668	WITHOUT_CLASSIFICATION	7.374388331626257E-7	DESIGN
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9992768940612722	WITHOUT_CLASSIFICATION	7.231059387277225E-4	DESIGN
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9999891233881274	WITHOUT_CLASSIFICATION	1.0876611872735558E-5	DESIGN
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9996935623793567	WITHOUT_CLASSIFICATION	3.064376206433437E-4	DESIGN
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9990156434432949	WITHOUT_CLASSIFICATION	9.843565567050892E-4	DESIGN
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.999415728067849	WITHOUT_CLASSIFICATION	5.842719321510043E-4	DESIGN
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995471008479562	WITHOUT_CLASSIFICATION	4.5289915204375756E-4	DESIGN
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995471008479562	WITHOUT_CLASSIFICATION	4.5289915204375756E-4	DESIGN
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.996138554050779	WITHOUT_CLASSIFICATION	0.003861445949220905	DESIGN
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9998408366482103	WITHOUT_CLASSIFICATION	1.59163351789672E-4	DESIGN
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999214740814354	WITHOUT_CLASSIFICATION	7.852591856460479E-5	DESIGN
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9994507417984991	WITHOUT_CLASSIFICATION	5.492582015007835E-4	DESIGN
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999184632613158	WITHOUT_CLASSIFICATION	8.153673868419374E-4	DESIGN
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9924451009880327	WITHOUT_CLASSIFICATION	0.007554899011967264	DESIGN
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
rb: readable	WITHOUT_CLASSIFICATION	0.9996525005899105	WITHOUT_CLASSIFICATION	3.474994100895821E-4	DESIGN
rename is successful	WITHOUT_CLASSIFICATION	0.9748647702281938	WITHOUT_CLASSIFICATION	0.025135229771806086	DESIGN
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9998803124220599	WITHOUT_CLASSIFICATION	1.1968757794012095E-4	DESIGN
try to rename one more time	WITHOUT_CLASSIFICATION	0.9766856293432032	WITHOUT_CLASSIFICATION	0.023314370656796823	DESIGN
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9931173929716125	WITHOUT_CLASSIFICATION	0.006882607028387564	DESIGN
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9890934481295078	WITHOUT_CLASSIFICATION	0.010906551870492049	DESIGN
RubyContinuation	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9997649359029498	WITHOUT_CLASSIFICATION	2.3506409705028306E-4	DESIGN
16 ?	WITHOUT_CLASSIFICATION	0.9976400303866941	WITHOUT_CLASSIFICATION	0.002359969613305791	DESIGN
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9993697919459448	WITHOUT_CLASSIFICATION	6.302080540551643E-4	DESIGN
size + 1;	WITHOUT_CLASSIFICATION	0.9998948166288558	WITHOUT_CLASSIFICATION	1.0518337114407936E-4	DESIGN
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9953637285299389	WITHOUT_CLASSIFICATION	0.004636271470061066	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
put implementation	WITHOUT_CLASSIFICATION	0.9991662063860477	WITHOUT_CLASSIFICATION	8.337936139523402E-4	DESIGN
get implementation	WITHOUT_CLASSIFICATION	0.9992559568024053	WITHOUT_CLASSIFICATION	7.440431975946645E-4	DESIGN
specialized for value	WITHOUT_CLASSIFICATION	0.9995413934723804	WITHOUT_CLASSIFICATION	4.58606527619636E-4	DESIGN
delete implementation	WITHOUT_CLASSIFICATION	0.9996675883028435	WITHOUT_CLASSIFICATION	3.3241169715654046E-4	DESIGN
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9992141487105137	WITHOUT_CLASSIFICATION	7.858512894862608E-4	DESIGN
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.999471304295146	WITHOUT_CLASSIFICATION	5.286957048540754E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997784777045635	WITHOUT_CLASSIFICATION	2.2152229543632838E-4	DESIGN
update the hash value	WITHOUT_CLASSIFICATION	0.9998447588134716	WITHOUT_CLASSIFICATION	1.552411865283898E-4	DESIGN
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9886091128731664	WITHOUT_CLASSIFICATION	0.011390887126833555	DESIGN
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9992065339326984	WITHOUT_CLASSIFICATION	7.934660673016324E-4	DESIGN
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9990949609251037	WITHOUT_CLASSIFICATION	9.05039074896213E-4	DESIGN
remain where we are	WITHOUT_CLASSIFICATION	0.9997432604772448	WITHOUT_CLASSIFICATION	2.567395227551446E-4	DESIGN
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999550276201127	WITHOUT_CLASSIFICATION	4.4972379887324704E-5	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.9996418883075102	WITHOUT_CLASSIFICATION	3.581116924898881E-4	DESIGN
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9976447352180611	WITHOUT_CLASSIFICATION	0.002355264781938985	DESIGN
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9962348739907777	WITHOUT_CLASSIFICATION	0.0037651260092223574	DESIGN
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9980902802486199	WITHOUT_CLASSIFICATION	0.0019097197513801292	DESIGN
first try as directory	WITHOUT_CLASSIFICATION	0.9999920144433513	WITHOUT_CLASSIFICATION	7.985556648736225E-6	DESIGN
next as regular file	WITHOUT_CLASSIFICATION	0.9999315139974329	WITHOUT_CLASSIFICATION	6.848600256710043E-5	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.999585787770065	WITHOUT_CLASSIFICATION	4.1421222993505224E-4	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
Stream-based	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9948857695862848	WITHOUT_CLASSIFICATION	0.005114230413715181	DESIGN
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.9977922309679301	WITHOUT_CLASSIFICATION	0.0022077690320697536	DESIGN
Constants for seek	WITHOUT_CLASSIFICATION	0.9997305972151975	WITHOUT_CLASSIFICATION	2.694027848023899E-4	DESIGN
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9956718293776741	WITHOUT_CLASSIFICATION	0.004328170622325917	DESIGN
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9998883011254508	WITHOUT_CLASSIFICATION	1.1169887454923315E-4	DESIGN
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9928223445460057	WITHOUT_CLASSIFICATION	0.007177655453994291	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9996319086156085	WITHOUT_CLASSIFICATION	3.6809138439156916E-4	DESIGN
re-register the descriptor	WITHOUT_CLASSIFICATION	0.9992964589748004	WITHOUT_CLASSIFICATION	7.035410251995913E-4	DESIGN
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9085771938422327	WITHOUT_CLASSIFICATION	0.09142280615776728	DESIGN
re-register	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999465433029884	WITHOUT_CLASSIFICATION	5.3456697011586914E-5	DESIGN
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.9999918696945852	WITHOUT_CLASSIFICATION	8.130305414882527E-6	DESIGN
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999653413611808	WITHOUT_CLASSIFICATION	3.465863881920824E-5	DESIGN
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9987989876333937	WITHOUT_CLASSIFICATION	0.001201012366606288	DESIGN
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.7154015810072815	DESIGN	0.2845984189927186	WITHOUT_CLASSIFICATION
IO class methods.	WITHOUT_CLASSIFICATION	0.9981610852033519	WITHOUT_CLASSIFICATION	0.0018389147966481221	DESIGN
use original modes	WITHOUT_CLASSIFICATION	0.9991518473705374	WITHOUT_CLASSIFICATION	8.481526294626811E-4	DESIGN
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9998884567951462	WITHOUT_CLASSIFICATION	1.1154320485390535E-4	DESIGN
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9975733115328222	WITHOUT_CLASSIFICATION	0.0024266884671776713	DESIGN
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9990758302762888	WITHOUT_CLASSIFICATION	9.241697237111165E-4	DESIGN
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9997297654197046	WITHOUT_CLASSIFICATION	2.70234580295416E-4	DESIGN
isRetained=true	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.950615939556915	WITHOUT_CLASSIFICATION	0.049384060443084986	DESIGN
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9928577199681473	WITHOUT_CLASSIFICATION	0.00714228003185258	DESIGN
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9961107826557142	WITHOUT_CLASSIFICATION	0.00388921734428579	DESIGN
Everything written	WITHOUT_CLASSIFICATION	0.9997532503974914	WITHOUT_CLASSIFICATION	2.467496025085775E-4	DESIGN
return len - n;	WITHOUT_CLASSIFICATION	0.9996020693831743	WITHOUT_CLASSIFICATION	3.9793061682563463E-4	DESIGN
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9994063581055967	WITHOUT_CLASSIFICATION	5.93641894403243E-4	DESIGN
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9871005307370924	WITHOUT_CLASSIFICATION	0.01289946926290762	DESIGN
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9989264055461695	WITHOUT_CLASSIFICATION	0.001073594453830495	DESIGN
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9988047455750821	WITHOUT_CLASSIFICATION	0.0011952544249179335	DESIGN
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9995729298836673	WITHOUT_CLASSIFICATION	4.2707011633274415E-4	DESIGN
hmmmm	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.996863037416778	WITHOUT_CLASSIFICATION	0.003136962583222114	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9878559202616586	WITHOUT_CLASSIFICATION	0.012144079738341395	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9990854341451166	WITHOUT_CLASSIFICATION	9.145658548833903E-4	DESIGN
Length to read	WITHOUT_CLASSIFICATION	0.9996071202609675	WITHOUT_CLASSIFICATION	3.9287973903252534E-4	DESIGN
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9944389047236294	WITHOUT_CLASSIFICATION	0.0055610952763706445	DESIGN
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9993955241771335	WITHOUT_CLASSIFICATION	6.044758228664612E-4	DESIGN
select until read is ready	WITHOUT_CLASSIFICATION	0.9997243845365381	WITHOUT_CLASSIFICATION	2.756154634618263E-4	DESIGN
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9990024881986352	WITHOUT_CLASSIFICATION	9.975118013647157E-4	DESIGN
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9996534400288742	WITHOUT_CLASSIFICATION	3.465599711257422E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9992313507453529	WITHOUT_CLASSIFICATION	7.686492546471938E-4	DESIGN
rb: writable	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9992313507453529	WITHOUT_CLASSIFICATION	7.686492546471938E-4	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.886911823098061	WITHOUT_CLASSIFICATION	0.11308817690193894	DESIGN
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.854944603112728	WITHOUT_CLASSIFICATION	0.14505539688727195	DESIGN
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999406274359939	WITHOUT_CLASSIFICATION	5.937256400607713E-5	DESIGN
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.5984423470372077	WITHOUT_CLASSIFICATION	0.4015576529627924	DESIGN
class methods for IO	WITHOUT_CLASSIFICATION	0.9982475414055915	WITHOUT_CLASSIFICATION	0.0017524585944085319	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9994475976860511	WITHOUT_CLASSIFICATION	5.52402313948892E-4	DESIGN
write	WITHOUT_CLASSIFICATION	0.9986203210141686	WITHOUT_CLASSIFICATION	0.0013796789858313617	DESIGN
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.999769289833816	WITHOUT_CLASSIFICATION	2.3071016618390818E-4	DESIGN
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999944268113322	WITHOUT_CLASSIFICATION	5.573188667814319E-6	DESIGN
FIXME: process options	WITHOUT_CLASSIFICATION	0.8913769757060834	WITHOUT_CLASSIFICATION	0.10862302429391661	DESIGN
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9602052667444819	WITHOUT_CLASSIFICATION	0.03979473325551808	DESIGN
NIO based pipe	WITHOUT_CLASSIFICATION	0.9993628159650891	WITHOUT_CLASSIFICATION	6.371840349109042E-4	DESIGN
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9868860146945185	WITHOUT_CLASSIFICATION	0.013113985305481421	DESIGN
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9998791407301189	WITHOUT_CLASSIFICATION	1.2085926988119805E-4	DESIGN
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.984153238137496	WITHOUT_CLASSIFICATION	0.015846761862503937	DESIGN
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5584551710224067	WITHOUT_CLASSIFICATION	0.44154482897759323	DESIGN
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9944667419496402	WITHOUT_CLASSIFICATION	0.00553325805035978	DESIGN
The class of this object	WITHOUT_CLASSIFICATION	0.9984541218077488	WITHOUT_CLASSIFICATION	0.0015458781922511931	DESIGN
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9998857960914551	WITHOUT_CLASSIFICATION	1.1420390854479702E-4	DESIGN
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.8838945939657901	WITHOUT_CLASSIFICATION	0.11610540603420992	DESIGN
rb_class_boot	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
for interface impls	WITHOUT_CLASSIFICATION	0.9993397733025325	WITHOUT_CLASSIFICATION	6.602266974674192E-4	DESIGN
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9895802178489903	WITHOUT_CLASSIFICATION	0.010419782151009657	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9995877896883656	WITHOUT_CLASSIFICATION	4.122103116344229E-4	DESIGN
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9988983907201131	WITHOUT_CLASSIFICATION	0.00110160927988699	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9620924712649925	WITHOUT_CLASSIFICATION	0.03790752873500747	DESIGN
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9992754108470208	WITHOUT_CLASSIFICATION	7.24589152979124E-4	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.999662020581317	WITHOUT_CLASSIFICATION	3.379794186829425E-4	DESIGN
Struct methods	WITHOUT_CLASSIFICATION	0.9995352456843005	WITHOUT_CLASSIFICATION	4.6475431569954247E-4	DESIGN
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999895555985121	WITHOUT_CLASSIFICATION	1.0444401487890669E-4	DESIGN
define access methods.	WITHOUT_CLASSIFICATION	0.9995174315551958	WITHOUT_CLASSIFICATION	4.825684448041665E-4	DESIGN
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9829876615109713	WITHOUT_CLASSIFICATION	0.017012338489028753	DESIGN
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9988104821754024	WITHOUT_CLASSIFICATION	0.0011895178245976666	DESIGN
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9998951671548841	WITHOUT_CLASSIFICATION	1.0483284511596126E-4	DESIGN
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9997255700556201	WITHOUT_CLASSIFICATION	2.7442994437991495E-4	DESIGN
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9984954997876803	WITHOUT_CLASSIFICATION	0.001504500212319714	DESIGN
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9913071865406199	WITHOUT_CLASSIFICATION	0.008692813459380116	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9976095675749826	WITHOUT_CLASSIFICATION	0.0023904324250173382	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9976095675749826	WITHOUT_CLASSIFICATION	0.0023904324250173382	DESIGN
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9201224898210878	WITHOUT_CLASSIFICATION	0.07987751017891226	DESIGN
superClass may be null.	WITHOUT_CLASSIFICATION	0.9989803153628694	WITHOUT_CLASSIFICATION	0.0010196846371306302	DESIGN
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9847355338070468	WITHOUT_CLASSIFICATION	0.015264466192953116	DESIGN
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999485870557491	WITHOUT_CLASSIFICATION	5.1412944250980576E-5	DESIGN
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.9999581028047693	WITHOUT_CLASSIFICATION	4.1897195230767915E-5	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9999194777733154	WITHOUT_CLASSIFICATION	8.052222668455303E-5	DESIGN
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9970587594547632	WITHOUT_CLASSIFICATION	0.0029412405452367354	DESIGN
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9994319250273905	WITHOUT_CLASSIFICATION	5.680749726093965E-4	DESIGN
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9713247024733479	WITHOUT_CLASSIFICATION	0.028675297526652137	DESIGN
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9998713323095555	WITHOUT_CLASSIFICATION	1.2866769044450133E-4	DESIGN
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999586075217706	WITHOUT_CLASSIFICATION	4.139247822943327E-5	DESIGN
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9992042105944153	WITHOUT_CLASSIFICATION	7.957894055846381E-4	DESIGN
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9941752474960869	WITHOUT_CLASSIFICATION	0.005824752503913122	DESIGN
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9944739735541956	WITHOUT_CLASSIFICATION	0.005526026445804391	DESIGN
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.6765986043161542	DESIGN	0.3234013956838459	WITHOUT_CLASSIFICATION
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9895034396532982	WITHOUT_CLASSIFICATION	0.010496560346701744	DESIGN
superClazz = null;	WITHOUT_CLASSIFICATION	0.9995575842457299	WITHOUT_CLASSIFICATION	4.424157542701112E-4	DESIGN
reopen a java class	WITHOUT_CLASSIFICATION	0.9984243534771776	WITHOUT_CLASSIFICATION	0.001575646522822265	DESIGN
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.990575891083199	WITHOUT_CLASSIFICATION	0.00942410891680099	DESIGN
reopen a java module	WITHOUT_CLASSIFICATION	0.9985485253057672	WITHOUT_CLASSIFICATION	0.0014514746942327925	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.9405426930310465	WITHOUT_CLASSIFICATION	0.05945730696895345	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.9405426930310465	WITHOUT_CLASSIFICATION	0.05945730696895345	DESIGN
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9744157440513106	WITHOUT_CLASSIFICATION	0.025584255948689443	DESIGN
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9997952995610039	WITHOUT_CLASSIFICATION	2.047004389960106E-4	DESIGN
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9883753870045346	WITHOUT_CLASSIFICATION	0.011624612995465406	DESIGN
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9951983880906262	WITHOUT_CLASSIFICATION	0.004801611909373791	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9982720367399521	WITHOUT_CLASSIFICATION	0.0017279632600478627	DESIGN
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9995088769654441	WITHOUT_CLASSIFICATION	4.911230345558812E-4	DESIGN
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9984596253720659	WITHOUT_CLASSIFICATION	0.001540374627934123	DESIGN
Module class methods	WITHOUT_CLASSIFICATION	0.9987551596989468	WITHOUT_CLASSIFICATION	0.0012448403010532423	DESIGN
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.7727676713381715	WITHOUT_CLASSIFICATION	0.22723232866182852	DESIGN
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9997890230427181	WITHOUT_CLASSIFICATION	2.1097695728180892E-4	DESIGN
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9990167177521014	WITHOUT_CLASSIFICATION	9.832822478985032E-4	DESIGN
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9965949430416388	WITHOUT_CLASSIFICATION	0.0034050569583611765	DESIGN
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999888495791976	WITHOUT_CLASSIFICATION	1.115042080248688E-5	DESIGN
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9996913713914419	WITHOUT_CLASSIFICATION	3.086286085580485E-4	DESIGN
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9991147551955999	WITHOUT_CLASSIFICATION	8.852448044001213E-4	DESIGN
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9905279683428736	WITHOUT_CLASSIFICATION	0.00947203165712636	DESIGN
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9996696163759915	WITHOUT_CLASSIFICATION	3.303836240085273E-4	DESIGN
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9995923913693708	WITHOUT_CLASSIFICATION	4.0760863062917334E-4	DESIGN
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9819440335277861	WITHOUT_CLASSIFICATION	0.018055966472213938	DESIGN
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9227655862996091	WITHOUT_CLASSIFICATION	0.07723441370039087	DESIGN
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9996375292369712	WITHOUT_CLASSIFICATION	3.6247076302878636E-4	DESIGN
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9971017575983675	WITHOUT_CLASSIFICATION	0.0028982424016324566	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999402205114193	WITHOUT_CLASSIFICATION	5.977948858070528E-4	DESIGN
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9997827690401109	WITHOUT_CLASSIFICATION	2.1723095988912555E-4	DESIGN
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.996893916010501	WITHOUT_CLASSIFICATION	0.0031060839894989987	DESIGN
reopen	WITHOUT_CLASSIFICATION	0.9985101987759429	WITHOUT_CLASSIFICATION	0.001489801224057129	DESIGN
ARGF methods	WITHOUT_CLASSIFICATION	0.9995352456843005	WITHOUT_CLASSIFICATION	4.6475431569954247E-4	DESIGN
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
one optional, one required args	WITHOUT_CLASSIFICATION	0.9995666954015804	WITHOUT_CLASSIFICATION	4.3330459841958013E-4	DESIGN
one optional and no required args	WITHOUT_CLASSIFICATION	0.999863273280389	WITHOUT_CLASSIFICATION	1.367267196110043E-4	DESIGN
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9990171834512721	WITHOUT_CLASSIFICATION	9.828165487278796E-4	DESIGN
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9998013668369212	WITHOUT_CLASSIFICATION	1.9863316307875258E-4	DESIGN
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9996412724162801	WITHOUT_CLASSIFICATION	3.5872758371989304E-4	DESIGN
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.995520926891428	WITHOUT_CLASSIFICATION	0.00447907310857205	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.7188613952993591	WITHOUT_CLASSIFICATION	0.28113860470064095	DESIGN
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9996955943351182	WITHOUT_CLASSIFICATION	3.044056648817334E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9992252536514464	WITHOUT_CLASSIFICATION	7.74746348553587E-4	DESIGN
no script to run, return success below	WITHOUT_CLASSIFICATION	0.999107823193886	WITHOUT_CLASSIFICATION	8.921768061140429E-4	DESIGN
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.999967385629736	WITHOUT_CLASSIFICATION	3.26143702639849E-5	DESIGN
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9997155151867861	WITHOUT_CLASSIFICATION	2.844848132139608E-4	DESIGN
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.99967645714227	WITHOUT_CLASSIFICATION	3.2354285772994806E-4	DESIGN
ignore error	WITHOUT_CLASSIFICATION	0.999731019535614	WITHOUT_CLASSIFICATION	2.689804643859816E-4	DESIGN
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.999586838212467	WITHOUT_CLASSIFICATION	4.1316178753305217E-4	DESIGN
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9996081224030178	WITHOUT_CLASSIFICATION	3.9187759698228923E-4	DESIGN
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9894556465498852	WITHOUT_CLASSIFICATION	0.010544353450114834	DESIGN
odd	WITHOUT_CLASSIFICATION	0.9984753798018362	WITHOUT_CLASSIFICATION	0.0015246201981637532	DESIGN
JRubyClient	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9999123806337835	WITHOUT_CLASSIFICATION	8.76193662165334E-5	DESIGN
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.999637337894146	WITHOUT_CLASSIFICATION	3.626621058540786E-4	DESIGN
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9974776931937357	WITHOUT_CLASSIFICATION	0.0025223068062642526	DESIGN
r = x 2 y	WITHOUT_CLASSIFICATION	0.9998723573272857	WITHOUT_CLASSIFICATION	1.2764267271425222E-4	DESIGN
0!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
1!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
2!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
3!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
4!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
5!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
6!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
7!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
8!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
9!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
11!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
12!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
13!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
15!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
16!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
17!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
19!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
20!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
21!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
Static constants	WITHOUT_CLASSIFICATION	0.9996488725212465	WITHOUT_CLASSIFICATION	3.5112747875354404E-4	DESIGN
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9993919753743856	WITHOUT_CLASSIFICATION	6.080246256144212E-4	DESIGN
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9994049386441861	WITHOUT_CLASSIFICATION	5.950613558139721E-4	DESIGN
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9982843447125538	WITHOUT_CLASSIFICATION	0.0017156552874462163	DESIGN
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9991606163484715	WITHOUT_CLASSIFICATION	8.393836515284768E-4	DESIGN
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998016847487028	WITHOUT_CLASSIFICATION	1.9831525129714695E-4	DESIGN
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999164313238618	WITHOUT_CLASSIFICATION	8.356867613816967E-5	DESIGN
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.8542558410978631	WITHOUT_CLASSIFICATION	0.14574415890213693	DESIGN
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999660503970851	WITHOUT_CLASSIFICATION	3.3949602914982726E-5	DESIGN
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9953170150641942	WITHOUT_CLASSIFICATION	0.004682984935805753	DESIGN
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9652115664237493	DESIGN	0.0347884335762507	WITHOUT_CLASSIFICATION
integer division	WITHOUT_CLASSIFICATION	0.9996331733248195	WITHOUT_CLASSIFICATION	3.6682667518058766E-4	DESIGN
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999423118877189	WITHOUT_CLASSIFICATION	5.768811228099531E-5	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9996530427820016	WITHOUT_CLASSIFICATION	3.4695721799830886E-4	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9996530427820016	WITHOUT_CLASSIFICATION	3.4695721799830886E-4	DESIGN
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9998016847487028	WITHOUT_CLASSIFICATION	1.9831525129714695E-4	DESIGN
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9748078846787115	WITHOUT_CLASSIFICATION	0.025192115321288552	DESIGN
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9996577561413595	WITHOUT_CLASSIFICATION	3.422438586404791E-4	DESIGN
...round to that digit	WITHOUT_CLASSIFICATION	0.9986834528403968	WITHOUT_CLASSIFICATION	0.0013165471596030824	DESIGN
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999457774465118	WITHOUT_CLASSIFICATION	5.422255348810591E-5	DESIGN
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9988927172827851	WITHOUT_CLASSIFICATION	0.0011072827172148904	DESIGN
sign	WITHOUT_CLASSIFICATION	0.998539901823977	WITHOUT_CLASSIFICATION	0.0014600981760229924	DESIGN
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9993825942836195	WITHOUT_CLASSIFICATION	6.174057163804448E-4	DESIGN
normalize the value	WITHOUT_CLASSIFICATION	0.9998579390170971	WITHOUT_CLASSIFICATION	1.4206098290291634E-4	DESIGN
base	WITHOUT_CLASSIFICATION	0.9991448147304395	WITHOUT_CLASSIFICATION	8.55185269560498E-4	DESIGN
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9979609705139264	WITHOUT_CLASSIFICATION	0.0020390294860735156	DESIGN
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9823546556576596	WITHOUT_CLASSIFICATION	0.01764534434234047	DESIGN
eh?!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9997849307196467	WITHOUT_CLASSIFICATION	2.1506928035330518E-4	DESIGN
General number and precision checking	WITHOUT_CLASSIFICATION	0.9992134380003411	WITHOUT_CLASSIFICATION	7.865619996587696E-4	DESIGN
the requested precision	WITHOUT_CLASSIFICATION	0.9996605243334852	WITHOUT_CLASSIFICATION	3.394756665148641E-4	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9957901012767488	WITHOUT_CLASSIFICATION	0.0042098987232511206	DESIGN
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9940720684422458	WITHOUT_CLASSIFICATION	0.005927931557754186	DESIGN
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9928083066205194	WITHOUT_CLASSIFICATION	0.007191693379480558	DESIGN
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9991538876793209	WITHOUT_CLASSIFICATION	8.461123206791185E-4	DESIGN
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9996488759274363	WITHOUT_CLASSIFICATION	3.5112407256358266E-4	DESIGN
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9991187291300713	WITHOUT_CLASSIFICATION	8.81270869928686E-4	DESIGN
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999557002444023	WITHOUT_CLASSIFICATION	4.429975559776838E-5	DESIGN
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9988919254671862	WITHOUT_CLASSIFICATION	0.0011080745328138093	DESIGN
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9991894365830819	WITHOUT_CLASSIFICATION	8.105634169180819E-4	DESIGN
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9997998330136395	WITHOUT_CLASSIFICATION	2.0016698636051577E-4	DESIGN
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999788174257019	WITHOUT_CLASSIFICATION	2.1182574297955032E-5	DESIGN
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9950300162987796	WITHOUT_CLASSIFICATION	0.004969983701220467	DESIGN
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9998832954279856	WITHOUT_CLASSIFICATION	1.1670457201445711E-4	DESIGN
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998682551019629	WITHOUT_CLASSIFICATION	1.3174489803703454E-4	DESIGN
root x is ready!	WITHOUT_CLASSIFICATION	0.9995377253292698	WITHOUT_CLASSIFICATION	4.622746707302802E-4	DESIGN
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.999822069485766	WITHOUT_CLASSIFICATION	1.7793051423393985E-4	DESIGN
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9997209100690038	WITHOUT_CLASSIFICATION	2.7908993099623296E-4	DESIGN
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
c: bind_eval	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9997282814885425	WITHOUT_CLASSIFICATION	2.717185114574932E-4	DESIGN
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9992313507453529	WITHOUT_CLASSIFICATION	7.686492546471938E-4	DESIGN
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9985740212063339	WITHOUT_CLASSIFICATION	0.0014259787936661322	DESIGN
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9997920680197971	WITHOUT_CLASSIFICATION	2.079319802027491E-4	DESIGN
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.8147923729840454	WITHOUT_CLASSIFICATION	0.18520762701595456	DESIGN
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9881907177194936	WITHOUT_CLASSIFICATION	0.01180928228050643	DESIGN
try the normal property first	WITHOUT_CLASSIFICATION	0.9999740315413201	WITHOUT_CLASSIFICATION	2.5968458679865668E-5	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999627922210524	WITHOUT_CLASSIFICATION	3.7207778947660956E-5	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999627922210524	WITHOUT_CLASSIFICATION	3.7207778947660956E-5	DESIGN
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9992702855591672	WITHOUT_CLASSIFICATION	7.297144408329126E-4	DESIGN
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999436082393528	WITHOUT_CLASSIFICATION	5.639176064726516E-5	DESIGN
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9996602547632106	WITHOUT_CLASSIFICATION	3.397452367893885E-4	DESIGN
consume the file name	WITHOUT_CLASSIFICATION	0.9997217533705054	WITHOUT_CLASSIFICATION	2.7824662949469146E-4	DESIGN
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.999553044270749	WITHOUT_CLASSIFICATION	4.4695572925099875E-4	DESIGN
try cwd first	WITHOUT_CLASSIFICATION	0.9999576065413315	WITHOUT_CLASSIFICATION	4.239345866840616E-5	DESIGN
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9992794975850026	WITHOUT_CLASSIFICATION	7.205024149973348E-4	DESIGN
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.8576768263831419	DESIGN	0.14232317361685806	WITHOUT_CLASSIFICATION
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9995365592219474	WITHOUT_CLASSIFICATION	4.634407780526628E-4	DESIGN
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9996002961427788	WITHOUT_CLASSIFICATION	3.997038572211712E-4	DESIGN
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9995365592219474	WITHOUT_CLASSIFICATION	4.634407780526628E-4	DESIGN
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9997670377929009	WITHOUT_CLASSIFICATION	2.3296220709915867E-4	DESIGN
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.990023172680465	WITHOUT_CLASSIFICATION	0.009976827319534986	DESIGN
Symbol class methods.	WITHOUT_CLASSIFICATION	0.997238897147935	WITHOUT_CLASSIFICATION	0.0027611028520650076	DESIGN
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5584551710224067	WITHOUT_CLASSIFICATION	0.44154482897759323	DESIGN
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9874073082902206	WITHOUT_CLASSIFICATION	0.01259269170977937	DESIGN
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.996971234903323	WITHOUT_CLASSIFICATION	0.003028765096676913	DESIGN
must be power of 2!	WITHOUT_CLASSIFICATION	0.9997853533220126	WITHOUT_CLASSIFICATION	2.1464667798748536E-4	DESIGN
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999860797695194	WITHOUT_CLASSIFICATION	1.3920230480522024E-5	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.990023172680465	WITHOUT_CLASSIFICATION	0.009976827319534986	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999584509451771	WITHOUT_CLASSIFICATION	4.154905482297489E-5	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999584509451771	WITHOUT_CLASSIFICATION	4.154905482297489E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9993405692972646	WITHOUT_CLASSIFICATION	6.594307027354717E-4	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9996584834733266	WITHOUT_CLASSIFICATION	3.4151652667335644E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9985417084611429	WITHOUT_CLASSIFICATION	0.001458291538857127	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999499077588763	WITHOUT_CLASSIFICATION	5.0092241123750125E-5	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.991625935196606	WITHOUT_CLASSIFICATION	0.008374064803394058	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.993185785384963	WITHOUT_CLASSIFICATION	0.006814214615036956	DESIGN
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9955824973260243	WITHOUT_CLASSIFICATION	0.004417502673975689	DESIGN
Profile	WITHOUT_CLASSIFICATION	0.9989531620861088	WITHOUT_CLASSIFICATION	0.0010468379138911315	DESIGN
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.999565203353319	WITHOUT_CLASSIFICATION	4.347966466809117E-4	DESIGN
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.999986568396896	WITHOUT_CLASSIFICATION	1.343160310394305E-5	DESIGN
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9998767231788569	WITHOUT_CLASSIFICATION	1.2327682114306318E-4	DESIGN
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9999276521772754	WITHOUT_CLASSIFICATION	7.23478227245128E-5	DESIGN
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999399492879413	WITHOUT_CLASSIFICATION	6.00507120587706E-5	DESIGN
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9942486094831171	WITHOUT_CLASSIFICATION	0.0057513905168828485	DESIGN
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999498537830149	WITHOUT_CLASSIFICATION	5.01462169851436E-5	DESIGN
reset the state	WITHOUT_CLASSIFICATION	0.9999068398297764	WITHOUT_CLASSIFICATION	9.316017022366699E-5	DESIGN
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9953506778599228	WITHOUT_CLASSIFICATION	0.004649322140077164	DESIGN
rb_match_busy	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
str is frozen	WITHOUT_CLASSIFICATION	0.9995428001386506	WITHOUT_CLASSIFICATION	4.5719986134931266E-4	DESIGN
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9913169514081699	WITHOUT_CLASSIFICATION	0.008683048591830183	DESIGN
JRubyServer	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9975335601213766	WITHOUT_CLASSIFICATION	0.0024664398786234123	DESIGN
boot the Object class	WITHOUT_CLASSIFICATION	0.9979801923402315	WITHOUT_CLASSIFICATION	0.002019807659768525	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9995877896883656	WITHOUT_CLASSIFICATION	4.122103116344229E-4	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9999194777733154	WITHOUT_CLASSIFICATION	8.052222668455303E-5	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9996110797616651	WITHOUT_CLASSIFICATION	3.8892023833498284E-4	DESIGN
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9930166518970946	WITHOUT_CLASSIFICATION	0.006983348102905382	DESIGN
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9998061062116498	WITHOUT_CLASSIFICATION	1.938937883501537E-4	DESIGN
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9887258135034517	WITHOUT_CLASSIFICATION	0.011274186496548343	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.999117800663443	WITHOUT_CLASSIFICATION	8.821993365568563E-4	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.999117800663443	WITHOUT_CLASSIFICATION	8.821993365568563E-4	DESIGN
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9987136058589012	WITHOUT_CLASSIFICATION	0.0012863941410987943	DESIGN
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9994407293475696	WITHOUT_CLASSIFICATION	5.592706524305055E-4	DESIGN
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9996216522185358	WITHOUT_CLASSIFICATION	3.7834778146424386E-4	DESIGN
update all subclasses	WITHOUT_CLASSIFICATION	0.9998073961333588	WITHOUT_CLASSIFICATION	1.9260386664128013E-4	DESIGN
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9997800607171582	WITHOUT_CLASSIFICATION	2.1993928284172318E-4	DESIGN
static initializing method	WITHOUT_CLASSIFICATION	0.9992646231698942	WITHOUT_CLASSIFICATION	7.353768301057791E-4	DESIGN
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9967622516231877	WITHOUT_CLASSIFICATION	0.0032377483768122727	DESIGN
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999526101523434	WITHOUT_CLASSIFICATION	4.738984765666461E-5	DESIGN
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9982544247862218	WITHOUT_CLASSIFICATION	0.0017455752137780862	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9998520466602903	WITHOUT_CLASSIFICATION	1.4795333970977635E-4	DESIGN
self method name	WITHOUT_CLASSIFICATION	0.9980658768435108	WITHOUT_CLASSIFICATION	0.0019341231564892363	DESIGN
the default allocator	WITHOUT_CLASSIFICATION	0.9995897996244868	WITHOUT_CLASSIFICATION	4.102003755131654E-4	DESIGN
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9997646548539719	WITHOUT_CLASSIFICATION	2.3534514602813777E-4	DESIGN
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9987101247043598	WITHOUT_CLASSIFICATION	0.0012898752956402258	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998424361257342	WITHOUT_CLASSIFICATION	1.575638742657598E-4	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9997286917335002	WITHOUT_CLASSIFICATION	2.7130826649974263E-4	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8869084184034303	WITHOUT_CLASSIFICATION	0.11309158159656973	DESIGN
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9997875231272034	WITHOUT_CLASSIFICATION	2.124768727966884E-4	DESIGN
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9998897226942343	WITHOUT_CLASSIFICATION	1.1027730576562021E-4	DESIGN
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999960925160922	WITHOUT_CLASSIFICATION	3.907483907802205E-6	DESIGN
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9990977378149709	WITHOUT_CLASSIFICATION	9.02262185028987E-4	DESIGN
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9992421897147405	WITHOUT_CLASSIFICATION	7.578102852594099E-4	DESIGN
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
a gotcha	WITHOUT_CLASSIFICATION	0.997061160388174	WITHOUT_CLASSIFICATION	0.002938839611825993	DESIGN
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9997703273456279	WITHOUT_CLASSIFICATION	2.2967265437202737E-4	DESIGN
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9998069016848774	WITHOUT_CLASSIFICATION	1.930983151226528E-4	DESIGN
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9993878564588646	WITHOUT_CLASSIFICATION	6.121435411354272E-4	DESIGN
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9990764172633835	WITHOUT_CLASSIFICATION	9.235827366163785E-4	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998424361257342	WITHOUT_CLASSIFICATION	1.575638742657598E-4	DESIGN
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9998994751403875	WITHOUT_CLASSIFICATION	1.00524859612524E-4	DESIGN
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9965947808753848	WITHOUT_CLASSIFICATION	0.0034052191246151165	DESIGN
MRI behavior:	WITHOUT_CLASSIFICATION	0.999657625677998	WITHOUT_CLASSIFICATION	3.423743220020991E-4	DESIGN
Numeric.equal	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
provider is not available	WITHOUT_CLASSIFICATION	0.9894609988386908	WITHOUT_CLASSIFICATION	0.010539001161309219	DESIGN
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9953159076561172	WITHOUT_CLASSIFICATION	0.004684092343882828	DESIGN
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9988475825971463	WITHOUT_CLASSIFICATION	0.0011524174028536534	DESIGN
RubyDigest	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9780705950744089	WITHOUT_CLASSIFICATION	0.02192940492559118	DESIGN
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9994926988962853	WITHOUT_CLASSIFICATION	5.073011037147172E-4	DESIGN
we only add live threads	WITHOUT_CLASSIFICATION	0.9996795990377187	WITHOUT_CLASSIFICATION	3.204009622813055E-4	DESIGN
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9996305782588237	WITHOUT_CLASSIFICATION	3.6942174117628656E-4	DESIGN
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9984541325790056	WITHOUT_CLASSIFICATION	0.0015458674209943458	DESIGN
JRubyService	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
while	WITHOUT_CLASSIFICATION	0.9995728978365596	WITHOUT_CLASSIFICATION	4.2710216344042965E-4	DESIGN
\OOO	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.993918422108755	WITHOUT_CLASSIFICATION	0.006081577891245009	DESIGN
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999468623577135	WITHOUT_CLASSIFICATION	5.313764228655929E-5	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9890231765256744	WITHOUT_CLASSIFICATION	0.010976823474325584	DESIGN
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9989847826595499	WITHOUT_CLASSIFICATION	0.0010152173404500862	DESIGN
silent ?	WITHOUT_CLASSIFICATION	0.9976827831897441	WITHOUT_CLASSIFICATION	0.002317216810255884	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9992459308201028	WITHOUT_CLASSIFICATION	7.540691798970446E-4	DESIGN
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9979723228053984	WITHOUT_CLASSIFICATION	0.0020276771946015695	DESIGN
Surrogates	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
do not load the class if not used	WITHOUT_CLASSIFICATION	0.6418626160671385	DESIGN	0.35813738393286154	WITHOUT_CLASSIFICATION
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
\\uHHHH	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
inner switch	WITHOUT_CLASSIFICATION	0.999198817844013	WITHOUT_CLASSIFICATION	8.011821559870684E-4	DESIGN
newInstance here	WITHOUT_CLASSIFICATION	0.9983576155807004	WITHOUT_CLASSIFICATION	0.0016423844192996978	DESIGN
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999432723219377	WITHOUT_CLASSIFICATION	5.67276780623279E-5	DESIGN
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
option_to_str	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9997958008456894	WITHOUT_CLASSIFICATION	2.0419915431048557E-4	DESIGN
args should be before block	WITHOUT_CLASSIFICATION	0.9934458145918084	WITHOUT_CLASSIFICATION	0.00655418540819156	DESIGN
args should be at end	WITHOUT_CLASSIFICATION	0.9919487290972642	WITHOUT_CLASSIFICATION	0.008051270902735764	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9964595099693674	WITHOUT_CLASSIFICATION	0.0035404900306326395	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9964595099693674	WITHOUT_CLASSIFICATION	0.0035404900306326395	DESIGN
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9991131510153082	WITHOUT_CLASSIFICATION	8.868489846919206E-4	DESIGN
start a new populator	WITHOUT_CLASSIFICATION	0.9987772930656158	WITHOUT_CLASSIFICATION	0.0012227069343842842	DESIGN
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9995809902385693	WITHOUT_CLASSIFICATION	4.190097614306943E-4	DESIGN
add all names for this annotation	WITHOUT_CLASSIFICATION	0.9955049640492829	WITHOUT_CLASSIFICATION	0.004495035950717039	DESIGN
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9984668756238811	WITHOUT_CLASSIFICATION	0.001533124376118819	DESIGN
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999265429048093	WITHOUT_CLASSIFICATION	7.34570951907094E-5	DESIGN
single method, use normal logic	WITHOUT_CLASSIFICATION	0.9996774123107561	WITHOUT_CLASSIFICATION	3.2258768924389996E-4	DESIGN
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9985993050669264	WITHOUT_CLASSIFICATION	0.0014006949330736698	DESIGN
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9864963118632626	WITHOUT_CLASSIFICATION	0.013503688136737559	DESIGN
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9993356317235704	WITHOUT_CLASSIFICATION	6.643682764295836E-4	DESIGN
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9995365592219474	WITHOUT_CLASSIFICATION	4.634407780526628E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9982581640905936	WITHOUT_CLASSIFICATION	0.0017418359094063616	DESIGN
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9986589907735891	WITHOUT_CLASSIFICATION	0.0013410092264108519	DESIGN
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9979490025304618	WITHOUT_CLASSIFICATION	0.002050997469538261	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9959508178476226	WITHOUT_CLASSIFICATION	0.0040491821523773695	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9997516722059792	WITHOUT_CLASSIFICATION	2.4832779402084485E-4	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9993474307012459	WITHOUT_CLASSIFICATION	6.525692987540619E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9946123088417024	WITHOUT_CLASSIFICATION	0.005387691158297704	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9946123088417024	WITHOUT_CLASSIFICATION	0.005387691158297704	DESIGN
colon3	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
Colon3	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9979859290833926	WITHOUT_CLASSIFICATION	0.0020140709166074954	DESIGN
For b.foo	WITHOUT_CLASSIFICATION	0.9994465854669575	WITHOUT_CLASSIFICATION	5.534145330425361E-4	DESIGN
instance config for the script run	WITHOUT_CLASSIFICATION	0.9962114969046345	WITHOUT_CLASSIFICATION	0.003788503095365426	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9946123088417024	WITHOUT_CLASSIFICATION	0.005387691158297704	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9946123088417024	WITHOUT_CLASSIFICATION	0.005387691158297704	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998077734418901	WITHOUT_CLASSIFICATION	1.922265581098436E-4	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998077734418901	WITHOUT_CLASSIFICATION	1.922265581098436E-4	DESIGN
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9988565303971847	WITHOUT_CLASSIFICATION	0.001143469602815276	DESIGN
For 'b.foo'	WITHOUT_CLASSIFICATION	0.999877714596498	WITHOUT_CLASSIFICATION	1.2228540350201264E-4	DESIGN
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9850175785162897	WITHOUT_CLASSIFICATION	0.0149824214837103	DESIGN
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.5166818405981879	DESIGN	0.4833181594018121	WITHOUT_CLASSIFICATION
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996051522193056	WITHOUT_CLASSIFICATION	3.948477806944112E-4	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996051522193056	WITHOUT_CLASSIFICATION	3.948477806944112E-4	DESIGN
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9956592320949105	WITHOUT_CLASSIFICATION	0.004340767905089526	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9984870572183937	WITHOUT_CLASSIFICATION	0.0015129427816062484	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9990845440331503	WITHOUT_CLASSIFICATION	9.154559668497282E-4	DESIGN
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9845838191215643	WITHOUT_CLASSIFICATION	0.015416180878435614	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998077734418901	WITHOUT_CLASSIFICATION	1.922265581098436E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9996156717393172	WITHOUT_CLASSIFICATION	3.84328260682848E-4	DESIGN
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9845485113755865	WITHOUT_CLASSIFICATION	0.015451488624413506	DESIGN
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9991727938989895	WITHOUT_CLASSIFICATION	8.272061010105794E-4	DESIGN
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9936538113940023	WITHOUT_CLASSIFICATION	0.0063461886059977025	DESIGN
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9974316631909658	WITHOUT_CLASSIFICATION	0.002568336809034277	DESIGN
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9830509676870514	WITHOUT_CLASSIFICATION	0.016949032312948607	DESIGN
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9986900591636303	WITHOUT_CLASSIFICATION	0.001309940836369591	DESIGN
set argv from main's args	WITHOUT_CLASSIFICATION	0.9987472425671086	WITHOUT_CLASSIFICATION	0.0012527574328913443	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9997516722059792	WITHOUT_CLASSIFICATION	2.4832779402084485E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9946123088417024	WITHOUT_CLASSIFICATION	0.005387691158297704	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998077734418901	WITHOUT_CLASSIFICATION	1.922265581098436E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9996156717393172	WITHOUT_CLASSIFICATION	3.84328260682848E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.5752902769370404	DESIGN	0.42470972306295957	WITHOUT_CLASSIFICATION
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.5752902769370404	DESIGN	0.42470972306295957	WITHOUT_CLASSIFICATION
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.7627345990106909	WITHOUT_CLASSIFICATION	0.2372654009893092	DESIGN
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9978452259419324	WITHOUT_CLASSIFICATION	0.002154774058067576	DESIGN
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9975339948080695	WITHOUT_CLASSIFICATION	0.0024660051919306075	DESIGN
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9998678071125935	WITHOUT_CLASSIFICATION	1.3219288740649954E-4	DESIGN
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.95246592659921	WITHOUT_CLASSIFICATION	0.04753407340079005	DESIGN
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9996486280313092	WITHOUT_CLASSIFICATION	3.513719686908053E-4	DESIGN
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9961429046773937	WITHOUT_CLASSIFICATION	0.003857095322606352	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9986320874078123	WITHOUT_CLASSIFICATION	0.0013679125921877671	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9986477673365589	WITHOUT_CLASSIFICATION	0.001352232663441149	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9511427588311171	WITHOUT_CLASSIFICATION	0.04885724116888297	DESIGN
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9887615429049311	WITHOUT_CLASSIFICATION	0.011238457095068896	DESIGN
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.999941974209646	WITHOUT_CLASSIFICATION	5.80257903539118E-5	DESIGN
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999765749334042	WITHOUT_CLASSIFICATION	2.3425066595791026E-5	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9993474307012459	WITHOUT_CLASSIFICATION	6.525692987540619E-4	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998077734418901	WITHOUT_CLASSIFICATION	1.922265581098436E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9984870572183937	WITHOUT_CLASSIFICATION	0.0015129427816062484	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9990845440331503	WITHOUT_CLASSIFICATION	9.154559668497282E-4	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9990845440331503	WITHOUT_CLASSIFICATION	9.154559668497282E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998077734418901	WITHOUT_CLASSIFICATION	1.922265581098436E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9996156717393172	WITHOUT_CLASSIFICATION	3.84328260682848E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9996156717393172	WITHOUT_CLASSIFICATION	3.84328260682848E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.5752902769370404	DESIGN	0.42470972306295957	WITHOUT_CLASSIFICATION
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9996198743449816	WITHOUT_CLASSIFICATION	3.8012565501845694E-4	DESIGN
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9929235092992882	WITHOUT_CLASSIFICATION	0.0070764907007118205	DESIGN
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9998133970355984	WITHOUT_CLASSIFICATION	1.8660296440159663E-4	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9615420024672782	WITHOUT_CLASSIFICATION	0.03845799753272173	DESIGN
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9991800048435878	WITHOUT_CLASSIFICATION	8.199951564121331E-4	DESIGN
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9705736791993853	WITHOUT_CLASSIFICATION	0.02942632080061459	DESIGN
add in reverse order	WITHOUT_CLASSIFICATION	0.9997408612546981	WITHOUT_CLASSIFICATION	2.591387453019601E-4	DESIGN
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9983294380614978	WITHOUT_CLASSIFICATION	0.001670561938502236	DESIGN
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9989535609783304	WITHOUT_CLASSIFICATION	0.0010464390216695031	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9984870572183937	WITHOUT_CLASSIFICATION	0.0015129427816062484	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9990845440331503	WITHOUT_CLASSIFICATION	9.154559668497282E-4	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9990845440331503	WITHOUT_CLASSIFICATION	9.154559668497282E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998077734418901	WITHOUT_CLASSIFICATION	1.922265581098436E-4	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9986320874078123	WITHOUT_CLASSIFICATION	0.0013679125921877671	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9511427588311171	WITHOUT_CLASSIFICATION	0.04885724116888297	DESIGN
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999904192421019	WITHOUT_CLASSIFICATION	9.58075789819067E-6	DESIGN
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999963365355203	WITHOUT_CLASSIFICATION	3.663464479757333E-6	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9994513919217173	WITHOUT_CLASSIFICATION	5.486080782826889E-4	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9994513919217173	WITHOUT_CLASSIFICATION	5.486080782826889E-4	DESIGN
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9806635998422807	WITHOUT_CLASSIFICATION	0.01933640015771941	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999480102357188	WITHOUT_CLASSIFICATION	5.198976428119079E-5	DESIGN
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9921943013089546	WITHOUT_CLASSIFICATION	0.00780569869104545	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9995223508256941	WITHOUT_CLASSIFICATION	4.7764917430590697E-4	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.999275130175508	WITHOUT_CLASSIFICATION	7.248698244920457E-4	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.999275130175508	WITHOUT_CLASSIFICATION	7.248698244920457E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9993368738510114	WITHOUT_CLASSIFICATION	6.631261489885574E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9993368738510114	WITHOUT_CLASSIFICATION	6.631261489885574E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9997000795166475	WITHOUT_CLASSIFICATION	2.9992048335240537E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9997000795166475	WITHOUT_CLASSIFICATION	2.9992048335240537E-4	DESIGN
Execute rescue block	WITHOUT_CLASSIFICATION	0.9997742889411958	WITHOUT_CLASSIFICATION	2.257110588041574E-4	DESIGN
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9994630359377754	WITHOUT_CLASSIFICATION	5.369640622246186E-4	DESIGN
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9470572997077576	WITHOUT_CLASSIFICATION	0.05294270029224239	DESIGN
only a marker interface	WITHOUT_CLASSIFICATION	0.9980501023447769	WITHOUT_CLASSIFICATION	0.0019498976552230337	DESIGN
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9984513935065699	WITHOUT_CLASSIFICATION	0.0015486064934301929	DESIGN
pragmas	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9952615877507958	WITHOUT_CLASSIFICATION	0.004738412249204209	DESIGN
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9716633343876643	WITHOUT_CLASSIFICATION	0.028336665612335683	DESIGN
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9997786651502191	WITHOUT_CLASSIFICATION	2.213348497809897E-4	DESIGN
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9983741289527569	WITHOUT_CLASSIFICATION	0.0016258710472431951	DESIGN
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9972312669297716	WITHOUT_CLASSIFICATION	0.002768733070228426	DESIGN
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9945638648794961	WITHOUT_CLASSIFICATION	0.005436135120503982	DESIGN
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9976889257949648	WITHOUT_CLASSIFICATION	0.0023110742050352004	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.998906631647281	WITHOUT_CLASSIFICATION	0.001093368352719071	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.998906631647281	WITHOUT_CLASSIFICATION	0.001093368352719071	DESIGN
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9994671917589575	WITHOUT_CLASSIFICATION	5.328082410425074E-4	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.993185785384963	WITHOUT_CLASSIFICATION	0.006814214615036956	DESIGN
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9332082429728775	WITHOUT_CLASSIFICATION	0.06679175702712246	DESIGN
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9947651273117327	WITHOUT_CLASSIFICATION	0.005234872688267365	DESIGN
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9410956508768509	WITHOUT_CLASSIFICATION	0.05890434912314908	DESIGN
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.99918798547743	WITHOUT_CLASSIFICATION	8.120145225700014E-4	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9975858325916169	WITHOUT_CLASSIFICATION	0.0024141674083831485	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999135424747012	WITHOUT_CLASSIFICATION	8.645752529880158E-5	DESIGN
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999131521968754	WITHOUT_CLASSIFICATION	8.684780312462154E-5	DESIGN
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999421712953358	WITHOUT_CLASSIFICATION	5.782870466412398E-5	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9995646444271125	WITHOUT_CLASSIFICATION	4.353555728875625E-4	DESIGN
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9994449948019688	WITHOUT_CLASSIFICATION	5.550051980312159E-4	DESIGN
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.997060270205713	WITHOUT_CLASSIFICATION	0.0029397297942870865	DESIGN
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9582497244472084	WITHOUT_CLASSIFICATION	0.04175027555279156	DESIGN
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9916565447419659	WITHOUT_CLASSIFICATION	0.008343455258034064	DESIGN
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9995236496884355	WITHOUT_CLASSIFICATION	4.7635031156455574E-4	DESIGN
can't do it	WITHOUT_CLASSIFICATION	0.9995893838832125	WITHOUT_CLASSIFICATION	4.106161167875168E-4	DESIGN
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9986585936096536	WITHOUT_CLASSIFICATION	0.0013414063903463879	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9990469381526161	WITHOUT_CLASSIFICATION	9.530618473838026E-4	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9990469381526161	WITHOUT_CLASSIFICATION	9.530618473838026E-4	DESIGN
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.998773981954998	WITHOUT_CLASSIFICATION	0.0012260180450020689	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
[]	WITHOUT_CLASSIFICATION	0.99842602987654	WITHOUT_CLASSIFICATION	0.0015739701234600348	DESIGN
[]	WITHOUT_CLASSIFICATION	0.99842602987654	WITHOUT_CLASSIFICATION	0.0015739701234600348	DESIGN
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9989505622540269	WITHOUT_CLASSIFICATION	0.0010494377459730523	DESIGN
[RubyClass]	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.9989505622540269	WITHOUT_CLASSIFICATION	0.0010494377459730523	DESIGN
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9962131546341887	WITHOUT_CLASSIFICATION	0.0037868453658113405	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9996415058358515	WITHOUT_CLASSIFICATION	3.5849416414841285E-4	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9996415058358515	WITHOUT_CLASSIFICATION	3.5849416414841285E-4	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9973583502244318	WITHOUT_CLASSIFICATION	0.002641649775568191	DESIGN
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9979701529082166	WITHOUT_CLASSIFICATION	0.002029847091783426	DESIGN
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9987686751237235	WITHOUT_CLASSIFICATION	0.0012313248762764978	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
[RubyClass] []	WITHOUT_CLASSIFICATION	0.9996519303477838	WITHOUT_CLASSIFICATION	3.480696522162052E-4	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9959809515593373	WITHOUT_CLASSIFICATION	0.004019048440662716	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997882580463435	WITHOUT_CLASSIFICATION	2.1174195365647133E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997882580463435	WITHOUT_CLASSIFICATION	2.1174195365647133E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9978379322530153	WITHOUT_CLASSIFICATION	0.0021620677469846674	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9978379322530153	WITHOUT_CLASSIFICATION	0.0021620677469846674	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9978379322530153	WITHOUT_CLASSIFICATION	0.0021620677469846674	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997882580463435	WITHOUT_CLASSIFICATION	2.1174195365647133E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997882580463435	WITHOUT_CLASSIFICATION	2.1174195365647133E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9959809515593373	WITHOUT_CLASSIFICATION	0.004019048440662716	DESIGN
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9973628572458304	WITHOUT_CLASSIFICATION	0.002637142754169577	DESIGN
always false or nil	WITHOUT_CLASSIFICATION	0.9997556287496963	WITHOUT_CLASSIFICATION	2.443712503037593E-4	DESIGN
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999747748517798	WITHOUT_CLASSIFICATION	2.5225148220162648E-5	DESIGN
normal	WITHOUT_CLASSIFICATION	0.9989541259290159	WITHOUT_CLASSIFICATION	0.0010458740709840641	DESIGN
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.99917581879869	WITHOUT_CLASSIFICATION	8.241812013099904E-4	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9961171529119042	WITHOUT_CLASSIFICATION	0.0038828470880958653	DESIGN
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.99882164725904	WITHOUT_CLASSIFICATION	0.0011783527409599732	DESIGN
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999206472918853	WITHOUT_CLASSIFICATION	7.935270811471627E-5	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9995646444271125	WITHOUT_CLASSIFICATION	4.353555728875625E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997882580463435	WITHOUT_CLASSIFICATION	2.1174195365647133E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997882580463435	WITHOUT_CLASSIFICATION	2.1174195365647133E-4	DESIGN
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9993408238033101	WITHOUT_CLASSIFICATION	6.591761966898252E-4	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9999379162843991	WITHOUT_CLASSIFICATION	6.208371560084252E-5	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.9999192305059744	WITHOUT_CLASSIFICATION	8.076949402557728E-5	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999960059606537	WITHOUT_CLASSIFICATION	3.9940393463061917E-5	DESIGN
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9991041661725538	WITHOUT_CLASSIFICATION	8.958338274462208E-4	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9984932683363587	WITHOUT_CLASSIFICATION	0.0015067316636413724	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995478444636291	WITHOUT_CLASSIFICATION	4.521555363709447E-4	DESIGN
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9998830179207414	WITHOUT_CLASSIFICATION	1.1698207925867918E-4	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9996265836182916	WITHOUT_CLASSIFICATION	3.734163817083414E-4	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.998435139995201	WITHOUT_CLASSIFICATION	0.001564860004798961	DESIGN
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9995365592219474	WITHOUT_CLASSIFICATION	4.634407780526628E-4	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.9987785039659062	WITHOUT_CLASSIFICATION	0.0012214960340938014	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998494863551467	WITHOUT_CLASSIFICATION	1.505136448533769E-4	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9909926566377711	WITHOUT_CLASSIFICATION	0.00900734336222876	DESIGN
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9979763642256247	WITHOUT_CLASSIFICATION	0.0020236357743751944	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
compile into array	WITHOUT_CLASSIFICATION	0.9937907719273449	WITHOUT_CLASSIFICATION	0.006209228072655115	DESIGN
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9998518032576617	WITHOUT_CLASSIFICATION	1.4819674233832486E-4	DESIGN
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999736414371718	WITHOUT_CLASSIFICATION	2.6358562828163748E-5	DESIGN
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.975324857683365	WITHOUT_CLASSIFICATION	0.024675142316635024	DESIGN
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9997844172325594	WITHOUT_CLASSIFICATION	2.1558276744069175E-4	DESIGN
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9962486365034475	WITHOUT_CLASSIFICATION	0.003751363496552446	DESIGN
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9992474478244993	WITHOUT_CLASSIFICATION	7.525521755007309E-4	DESIGN
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9995296188561714	WITHOUT_CLASSIFICATION	4.7038114382849113E-4	DESIGN
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9963484280656935	WITHOUT_CLASSIFICATION	0.003651571934306506	DESIGN
leave as a normal array	WITHOUT_CLASSIFICATION	0.9996812445757901	WITHOUT_CLASSIFICATION	3.187554242098626E-4	DESIGN
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.987777738157764	WITHOUT_CLASSIFICATION	0.012222261842235954	DESIGN
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.8828206113595073	WITHOUT_CLASSIFICATION	0.11717938864049275	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9973583502244318	WITHOUT_CLASSIFICATION	0.002641649775568191	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997882580463435	WITHOUT_CLASSIFICATION	2.1174195365647133E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997882580463435	WITHOUT_CLASSIFICATION	2.1174195365647133E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9959809515593373	WITHOUT_CLASSIFICATION	0.004019048440662716	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9961171529119042	WITHOUT_CLASSIFICATION	0.0038828470880958653	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9999379162843991	WITHOUT_CLASSIFICATION	6.208371560084252E-5	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999960059606537	WITHOUT_CLASSIFICATION	3.9940393463061917E-5	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9984932683363587	WITHOUT_CLASSIFICATION	0.0015067316636413724	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.9999192305059744	WITHOUT_CLASSIFICATION	8.076949402557728E-5	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9995478444636291	WITHOUT_CLASSIFICATION	4.521555363709447E-4	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.998435139995201	WITHOUT_CLASSIFICATION	0.001564860004798961	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9996265836182916	WITHOUT_CLASSIFICATION	3.734163817083414E-4	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.9987785039659062	WITHOUT_CLASSIFICATION	0.0012214960340938014	DESIGN
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9994877310241045	WITHOUT_CLASSIFICATION	5.122689758953851E-4	DESIGN
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.7821168019666253	WITHOUT_CLASSIFICATION	0.21788319803337475	DESIGN
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.99935998480055	WITHOUT_CLASSIFICATION	6.400151994500124E-4	DESIGN
finally, grab the script	WITHOUT_CLASSIFICATION	0.9979658167424981	WITHOUT_CLASSIFICATION	0.002034183257501926	DESIGN
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9937265760019938	WITHOUT_CLASSIFICATION	0.006273423998006296	DESIGN
Time the compilation	WITHOUT_CLASSIFICATION	0.9990115524443606	WITHOUT_CLASSIFICATION	9.884475556395105E-4	DESIGN
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9944755739888393	WITHOUT_CLASSIFICATION	0.00552442601116071	DESIGN
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9991854555269207	WITHOUT_CLASSIFICATION	8.145444730793013E-4	DESIGN
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.99945859187731	WITHOUT_CLASSIFICATION	5.414081226899442E-4	DESIGN
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999028293844943	WITHOUT_CLASSIFICATION	9.717061550576722E-5	DESIGN
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9996740063440693	WITHOUT_CLASSIFICATION	3.259936559306526E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9850336642012115	WITHOUT_CLASSIFICATION	0.014966335798788474	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9959939158714979	WITHOUT_CLASSIFICATION	0.004006084128502092	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9784472810970181	WITHOUT_CLASSIFICATION	0.021552718902981927	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998248471713361	WITHOUT_CLASSIFICATION	1.7515282866384393E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9996534272919236	WITHOUT_CLASSIFICATION	3.465727080763601E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9947695564346343	WITHOUT_CLASSIFICATION	0.005230443565365793	DESIGN
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9986888555529696	WITHOUT_CLASSIFICATION	0.0013111444470304543	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998036444219593	WITHOUT_CLASSIFICATION	1.963555780407291E-4	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9991133181311914	WITHOUT_CLASSIFICATION	8.866818688085567E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9985947863456811	WITHOUT_CLASSIFICATION	0.0014052136543188218	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9728032753530512	WITHOUT_CLASSIFICATION	0.027196724646948795	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9728032753530512	WITHOUT_CLASSIFICATION	0.027196724646948795	DESIGN
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9976130382648243	WITHOUT_CLASSIFICATION	0.0023869617351757392	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9988501124642858	WITHOUT_CLASSIFICATION	0.0011498875357142731	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
arg2	WITHOUT_CLASSIFICATION	0.9984463319617128	WITHOUT_CLASSIFICATION	0.0015536680382870539	DESIGN
args	WITHOUT_CLASSIFICATION	0.9982682772208503	WITHOUT_CLASSIFICATION	0.001731722779149688	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9988501124642858	WITHOUT_CLASSIFICATION	0.0011498875357142731	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9508810348068821	WITHOUT_CLASSIFICATION	0.04911896519311798	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
args	WITHOUT_CLASSIFICATION	0.9982682772208503	WITHOUT_CLASSIFICATION	0.001731722779149688	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.9986652589400762	WITHOUT_CLASSIFICATION	0.001334741059923846	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.9986652589400762	WITHOUT_CLASSIFICATION	0.001334741059923846	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9988467597145408	WITHOUT_CLASSIFICATION	0.001153240285459138	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9988467597145408	WITHOUT_CLASSIFICATION	0.001153240285459138	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.998748534682696	WITHOUT_CLASSIFICATION	0.0012514653173040838	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.998748534682696	WITHOUT_CLASSIFICATION	0.0012514653173040838	DESIGN
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999532298423766	WITHOUT_CLASSIFICATION	4.6770157623414274E-5	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9986642352293236	WITHOUT_CLASSIFICATION	0.001335764770676537	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9986642352293236	WITHOUT_CLASSIFICATION	0.001335764770676537	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9994508024181133	WITHOUT_CLASSIFICATION	5.491975818867416E-4	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9994508024181133	WITHOUT_CLASSIFICATION	5.491975818867416E-4	DESIGN
eval value for assignment	WITHOUT_CLASSIFICATION	0.999690363140155	WITHOUT_CLASSIFICATION	3.0963685984495697E-4	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9967320914016433	WITHOUT_CLASSIFICATION	0.003267908598356696	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9967320914016433	WITHOUT_CLASSIFICATION	0.003267908598356696	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9986479340265327	WITHOUT_CLASSIFICATION	0.0013520659734671979	DESIGN
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9995516045032702	WITHOUT_CLASSIFICATION	4.483954967297962E-4	DESIGN
eval value and save it	WITHOUT_CLASSIFICATION	0.9996088930704211	WITHOUT_CLASSIFICATION	3.911069295789893E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9986479340265327	WITHOUT_CLASSIFICATION	0.0013520659734671979	DESIGN
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9994476195488728	WITHOUT_CLASSIFICATION	5.52380451127095E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9994640829964307	WITHOUT_CLASSIFICATION	5.359170035692533E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9982682772208503	WITHOUT_CLASSIFICATION	0.001731722779149688	DESIGN
block	WITHOUT_CLASSIFICATION	0.9991863803173603	WITHOUT_CLASSIFICATION	8.136196826397447E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9991863803173603	WITHOUT_CLASSIFICATION	8.136196826397447E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9998733226403367	WITHOUT_CLASSIFICATION	1.2667735966325172E-4	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.9998518351028413	WITHOUT_CLASSIFICATION	1.4816489715871684E-4	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.9998518351028413	WITHOUT_CLASSIFICATION	1.4816489715871684E-4	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9994632814380695	WITHOUT_CLASSIFICATION	5.367185619305013E-4	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9993677734166353	WITHOUT_CLASSIFICATION	6.322265833647278E-4	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9993677734166353	WITHOUT_CLASSIFICATION	6.322265833647278E-4	DESIGN
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9997873779651941	WITHOUT_CLASSIFICATION	2.1262203480598764E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9987475076209131	WITHOUT_CLASSIFICATION	0.001252492379086887	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9987475076209131	WITHOUT_CLASSIFICATION	0.001252492379086887	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9982682772208503	WITHOUT_CLASSIFICATION	0.001731722779149688	DESIGN
block	WITHOUT_CLASSIFICATION	0.9991863803173603	WITHOUT_CLASSIFICATION	8.136196826397447E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9998733226403367	WITHOUT_CLASSIFICATION	1.2667735966325172E-4	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.9998518351028413	WITHOUT_CLASSIFICATION	1.4816489715871684E-4	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.9998518351028413	WITHOUT_CLASSIFICATION	1.4816489715871684E-4	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9994632814380695	WITHOUT_CLASSIFICATION	5.367185619305013E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9987475076209131	WITHOUT_CLASSIFICATION	0.001252492379086887	DESIGN
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9997887971106645	WITHOUT_CLASSIFICATION	2.112028893355198E-4	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9977070982412491	WITHOUT_CLASSIFICATION	0.002292901758750887	DESIGN
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9993200284408125	WITHOUT_CLASSIFICATION	6.799715591874382E-4	DESIGN
add name to call site list	WITHOUT_CLASSIFICATION	0.9944018898464454	WITHOUT_CLASSIFICATION	0.005598110153554611	DESIGN
module is on top of stack	WITHOUT_CLASSIFICATION	0.9976483286924024	WITHOUT_CLASSIFICATION	0.002351671307597565	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.9996744234165191	WITHOUT_CLASSIFICATION	3.2557658348087554E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.9994509437991964	WITHOUT_CLASSIFICATION	5.490562008036376E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.9994509437991964	WITHOUT_CLASSIFICATION	5.490562008036376E-4	DESIGN
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9989882109902704	WITHOUT_CLASSIFICATION	0.001011789009729648	DESIGN
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9995130311816791	WITHOUT_CLASSIFICATION	4.869688183210083E-4	DESIGN
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9995130311816791	WITHOUT_CLASSIFICATION	4.869688183210083E-4	DESIGN
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9994685259509736	WITHOUT_CLASSIFICATION	5.314740490264493E-4	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9995130311816791	WITHOUT_CLASSIFICATION	4.869688183210083E-4	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9995130311816791	WITHOUT_CLASSIFICATION	4.869688183210083E-4	DESIGN
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9989230398062778	WITHOUT_CLASSIFICATION	0.0010769601937221456	DESIGN
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9989230398062778	WITHOUT_CLASSIFICATION	0.0010769601937221456	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9997489251189298	WITHOUT_CLASSIFICATION	2.5107488107020475E-4	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9997489251189298	WITHOUT_CLASSIFICATION	2.5107488107020475E-4	DESIGN
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9995130311816791	WITHOUT_CLASSIFICATION	4.869688183210083E-4	DESIGN
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.998963680821805	WITHOUT_CLASSIFICATION	0.0010363191781950524	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.999117800663443	WITHOUT_CLASSIFICATION	8.821993365568563E-4	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9995858198171923	WITHOUT_CLASSIFICATION	4.141801828076718E-4	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9974852928218282	WITHOUT_CLASSIFICATION	0.0025147071781719326	DESIGN
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999938253616338	WITHOUT_CLASSIFICATION	6.174638366174272E-6	DESIGN
load Object under value	WITHOUT_CLASSIFICATION	0.9990588833396669	WITHOUT_CLASSIFICATION	9.411166603330848E-4	DESIGN
put under object array already present	WITHOUT_CLASSIFICATION	0.9998142641136889	WITHOUT_CLASSIFICATION	1.8573588631108203E-4	DESIGN
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9892958255822191	WITHOUT_CLASSIFICATION	0.010704174417780921	DESIGN
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9995733957924979	WITHOUT_CLASSIFICATION	4.266042075021001E-4	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9991271564124043	WITHOUT_CLASSIFICATION	8.728435875955708E-4	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9991271564124043	WITHOUT_CLASSIFICATION	8.728435875955708E-4	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9986375510472969	WITHOUT_CLASSIFICATION	0.0013624489527031725	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9986375510472969	WITHOUT_CLASSIFICATION	0.0013624489527031725	DESIGN
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9987417938232594	WITHOUT_CLASSIFICATION	0.001258206176740551	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9993045828605814	WITHOUT_CLASSIFICATION	6.954171394185921E-4	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9993045828605814	WITHOUT_CLASSIFICATION	6.954171394185921E-4	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9993045828605814	WITHOUT_CLASSIFICATION	6.954171394185921E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999447592947669	WITHOUT_CLASSIFICATION	5.5240705233098515E-5	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998842029322115	WITHOUT_CLASSIFICATION	1.1579706778851733E-4	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998842029322115	WITHOUT_CLASSIFICATION	1.1579706778851733E-4	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999325431382589	WITHOUT_CLASSIFICATION	6.745686174115459E-5	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9999241021124631	WITHOUT_CLASSIFICATION	7.589788753696269E-5	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9996816642794664	WITHOUT_CLASSIFICATION	3.183357205336645E-4	DESIGN
skip catch block	WITHOUT_CLASSIFICATION	0.99990987627277	WITHOUT_CLASSIFICATION	9.012372723017193E-5	DESIGN
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9994996619376022	WITHOUT_CLASSIFICATION	5.003380623977853E-4	DESIGN
next jump	WITHOUT_CLASSIFICATION	0.9972060672096312	WITHOUT_CLASSIFICATION	0.0027939327903688757	DESIGN
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9986562447608308	WITHOUT_CLASSIFICATION	0.0013437552391692101	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9959939158714979	WITHOUT_CLASSIFICATION	0.004006084128502092	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9959939158714979	WITHOUT_CLASSIFICATION	0.004006084128502092	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999447592947669	WITHOUT_CLASSIFICATION	5.5240705233098515E-5	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999325431382589	WITHOUT_CLASSIFICATION	6.745686174115459E-5	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9998647245258572	WITHOUT_CLASSIFICATION	1.3527547414283737E-4	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9999241021124631	WITHOUT_CLASSIFICATION	7.589788753696269E-5	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9996816642794664	WITHOUT_CLASSIFICATION	3.183357205336645E-4	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999361949050356	WITHOUT_CLASSIFICATION	6.380509496439315E-5	DESIGN
break jump	WITHOUT_CLASSIFICATION	0.9973209778150411	WITHOUT_CLASSIFICATION	0.0026790221849588357	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9992231061361727	WITHOUT_CLASSIFICATION	7.768938638273276E-4	DESIGN
[reg]	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9986800241850261	WITHOUT_CLASSIFICATION	0.0013199758149739175	DESIGN
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9985721721297552	WITHOUT_CLASSIFICATION	0.0014278278702448475	DESIGN
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9921354155622853	WITHOUT_CLASSIFICATION	0.007864584437714693	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999361949050356	WITHOUT_CLASSIFICATION	6.380509496439315E-5	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999098218536195	WITHOUT_CLASSIFICATION	9.017814638048251E-5	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999098218536195	WITHOUT_CLASSIFICATION	9.017814638048251E-5	DESIGN
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9991001963640328	WITHOUT_CLASSIFICATION	8.998036359671769E-4	DESIGN
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.997126844173255	WITHOUT_CLASSIFICATION	0.002873155826745093	DESIGN
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9994073365051055	WITHOUT_CLASSIFICATION	5.926634948944567E-4	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9974119268488669	WITHOUT_CLASSIFICATION	0.002588073151132989	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9989044337727659	WITHOUT_CLASSIFICATION	0.0010955662272340281	DESIGN
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9981239978641565	WITHOUT_CLASSIFICATION	0.0018760021358435418	DESIGN
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9995012714989566	WITHOUT_CLASSIFICATION	4.987285010433751E-4	DESIGN
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.998142307722639	WITHOUT_CLASSIFICATION	0.0018576922773609497	DESIGN
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9987453533413344	WITHOUT_CLASSIFICATION	0.0012546466586656135	DESIGN
false zero	WITHOUT_CLASSIFICATION	0.9998772727576433	WITHOUT_CLASSIFICATION	1.22727242356726E-4	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9972577823456564	WITHOUT_CLASSIFICATION	0.0027422176543435432	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9974119268488669	WITHOUT_CLASSIFICATION	0.002588073151132989	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9989044337727659	WITHOUT_CLASSIFICATION	0.0010955662272340281	DESIGN
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9944500208580795	WITHOUT_CLASSIFICATION	0.005549979141920387	DESIGN
push false	WITHOUT_CLASSIFICATION	0.9993790810564345	WITHOUT_CLASSIFICATION	6.20918943565482E-4	DESIGN
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9998562749331928	WITHOUT_CLASSIFICATION	1.4372506680725646E-4	DESIGN
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
[C]	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
push true	WITHOUT_CLASSIFICATION	0.9986583704242635	WITHOUT_CLASSIFICATION	0.0013416295757364468	DESIGN
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999544159332016	WITHOUT_CLASSIFICATION	4.558406679848534E-5	DESIGN
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
[boolean]	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9993006741143557	WITHOUT_CLASSIFICATION	6.993258856443048E-4	DESIGN
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9998367796523651	WITHOUT_CLASSIFICATION	1.6322034763490147E-4	DESIGN
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9926671574029354	WITHOUT_CLASSIFICATION	0.007332842597064519	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9912706987104858	WITHOUT_CLASSIFICATION	0.008729301289514135	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9984606744414473	WITHOUT_CLASSIFICATION	0.0015393255585527607	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.999932062430574	WITHOUT_CLASSIFICATION	6.79375694260911E-5	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9998758545004307	WITHOUT_CLASSIFICATION	1.2414549956926786E-4	DESIGN
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9994530146048475	WITHOUT_CLASSIFICATION	5.469853951525684E-4	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9984606744414473	WITHOUT_CLASSIFICATION	0.0015393255585527607	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.999932062430574	WITHOUT_CLASSIFICATION	6.79375694260911E-5	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9998758545004307	WITHOUT_CLASSIFICATION	1.2414549956926786E-4	DESIGN
finally with exception	WITHOUT_CLASSIFICATION	0.9983449274271413	WITHOUT_CLASSIFICATION	0.0016550725728587345	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9781401513089918	WITHOUT_CLASSIFICATION	0.02185984869100823	DESIGN
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9995799375199215	WITHOUT_CLASSIFICATION	4.2006248007858465E-4	DESIGN
original exception is on stack	WITHOUT_CLASSIFICATION	0.9976507680508694	WITHOUT_CLASSIFICATION	0.0023492319491305934	DESIGN
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9960013967177919	WITHOUT_CLASSIFICATION	0.0039986032822080944	DESIGN
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9994933570438007	WITHOUT_CLASSIFICATION	5.066429561992038E-4	DESIGN
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9989632439685966	WITHOUT_CLASSIFICATION	0.00103675603140341	DESIGN
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9715185851977224	WITHOUT_CLASSIFICATION	0.028481414802277564	DESIGN
script object	WITHOUT_CLASSIFICATION	0.998977831891681	WITHOUT_CLASSIFICATION	0.001022168108319041	DESIGN
arities	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.6448758725849538	WITHOUT_CLASSIFICATION	0.35512412741504623	DESIGN
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9985985158375006	WITHOUT_CLASSIFICATION	0.001401484162499391	DESIGN
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9875098141494556	WITHOUT_CLASSIFICATION	0.01249018585054445	DESIGN
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999740879814502	WITHOUT_CLASSIFICATION	2.591201854981958E-5	DESIGN
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9995776077774245	WITHOUT_CLASSIFICATION	4.223922225753909E-4	DESIGN
normal case, create a new label	WITHOUT_CLASSIFICATION	0.9991200778479556	WITHOUT_CLASSIFICATION	8.799221520442606E-4	DESIGN
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9973496869770033	WITHOUT_CLASSIFICATION	0.0026503130229966186	DESIGN
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9940106874104849	WITHOUT_CLASSIFICATION	0.005989312589515114	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9993135217233254	WITHOUT_CLASSIFICATION	6.86478276674564E-4	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.999675730615247	WITHOUT_CLASSIFICATION	3.242693847530371E-4	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999821727144471	WITHOUT_CLASSIFICATION	1.7827285552878283E-5	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9998182898026038	WITHOUT_CLASSIFICATION	1.8171019739623862E-4	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9998182898026038	WITHOUT_CLASSIFICATION	1.8171019739623862E-4	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9981076933358625	WITHOUT_CLASSIFICATION	0.00189230666413758	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9981076933358625	WITHOUT_CLASSIFICATION	0.00189230666413758	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.998241896841683	WITHOUT_CLASSIFICATION	0.0017581031583170901	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.998241896841683	WITHOUT_CLASSIFICATION	0.0017581031583170901	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9994319225019531	WITHOUT_CLASSIFICATION	5.68077498046796E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999599362355189	WITHOUT_CLASSIFICATION	4.006376448109872E-4	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9976040286455792	WITHOUT_CLASSIFICATION	0.0023959713544207117	DESIGN
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.99987067747453	WITHOUT_CLASSIFICATION	1.2932252547006605E-4	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999969912123354	WITHOUT_CLASSIFICATION	3.0087876646061294E-5	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999945943972762	WITHOUT_CLASSIFICATION	5.405602723809381E-6	DESIGN
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999156530440702	WITHOUT_CLASSIFICATION	8.434695592980109E-4	DESIGN
then optional args	WITHOUT_CLASSIFICATION	0.9998407255691084	WITHOUT_CLASSIFICATION	1.592744308915988E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9959939158714979	WITHOUT_CLASSIFICATION	0.004006084128502092	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9994319225019531	WITHOUT_CLASSIFICATION	5.68077498046796E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999599362355189	WITHOUT_CLASSIFICATION	4.006376448109872E-4	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9976040286455792	WITHOUT_CLASSIFICATION	0.0023959713544207117	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999969912123354	WITHOUT_CLASSIFICATION	3.0087876646061294E-5	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999945943972762	WITHOUT_CLASSIFICATION	5.405602723809381E-6	DESIGN
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9996947838314872	WITHOUT_CLASSIFICATION	3.052161685127662E-4	DESIGN
finally, post args	WITHOUT_CLASSIFICATION	0.9995659029027202	WITHOUT_CLASSIFICATION	4.3409709727980177E-4	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.997162254143653	WITHOUT_CLASSIFICATION	0.0028377458563469907	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.997162254143653	WITHOUT_CLASSIFICATION	0.0028377458563469907	DESIGN
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9975110685712345	WITHOUT_CLASSIFICATION	0.0024889314287655697	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9996715409463308	WITHOUT_CLASSIFICATION	3.2845905366916646E-4	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9906394125286905	WITHOUT_CLASSIFICATION	0.00936058747130958	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9991366755828807	WITHOUT_CLASSIFICATION	8.633244171193048E-4	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9991366755828807	WITHOUT_CLASSIFICATION	8.633244171193048E-4	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998155255993433	WITHOUT_CLASSIFICATION	1.8447440065668625E-4	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9948571840160558	WITHOUT_CLASSIFICATION	0.005142815983944102	DESIGN
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9967325290085379	WITHOUT_CLASSIFICATION	0.003267470991462017	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9995510493006153	WITHOUT_CLASSIFICATION	4.489506993847605E-4	DESIGN
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9989411919612408	WITHOUT_CLASSIFICATION	0.0010588080387592164	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9784472810970181	WITHOUT_CLASSIFICATION	0.021552718902981927	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998248471713361	WITHOUT_CLASSIFICATION	1.7515282866384393E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9996534272919236	WITHOUT_CLASSIFICATION	3.465727080763601E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9947695564346343	WITHOUT_CLASSIFICATION	0.005230443565365793	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9991133181311914	WITHOUT_CLASSIFICATION	8.866818688085567E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9985947863456811	WITHOUT_CLASSIFICATION	0.0014052136543188218	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998155255993433	WITHOUT_CLASSIFICATION	1.8447440065668625E-4	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9948571840160558	WITHOUT_CLASSIFICATION	0.005142815983944102	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9995510493006153	WITHOUT_CLASSIFICATION	4.489506993847605E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9955392867856466	WITHOUT_CLASSIFICATION	0.004460713214353352	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9906394125286905	WITHOUT_CLASSIFICATION	0.00936058747130958	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9906394125286905	WITHOUT_CLASSIFICATION	0.00936058747130958	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9972577823456564	WITHOUT_CLASSIFICATION	0.0027422176543435432	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9972577823456564	WITHOUT_CLASSIFICATION	0.0027422176543435432	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9733867739668047	WITHOUT_CLASSIFICATION	0.026613226033195218	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9733867739668047	WITHOUT_CLASSIFICATION	0.026613226033195218	DESIGN
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9995190633039791	WITHOUT_CLASSIFICATION	4.8093669602087023E-4	DESIGN
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.996717391207021	WITHOUT_CLASSIFICATION	0.0032826087929790607	DESIGN
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9886995047051521	WITHOUT_CLASSIFICATION	0.0113004952948479	DESIGN
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9991829979037748	WITHOUT_CLASSIFICATION	8.170020962251492E-4	DESIGN
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9928694670047654	WITHOUT_CLASSIFICATION	0.007130532995234579	DESIGN
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9959756804671455	WITHOUT_CLASSIFICATION	0.004024319532854445	DESIGN
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9885740450971305	WITHOUT_CLASSIFICATION	0.01142595490286955	DESIGN
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9988976958061473	WITHOUT_CLASSIFICATION	0.0011023041938527727	DESIGN
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9992239513276805	WITHOUT_CLASSIFICATION	7.760486723194482E-4	DESIGN
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9850336642012115	WITHOUT_CLASSIFICATION	0.014966335798788474	DESIGN
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9958416030653858	WITHOUT_CLASSIFICATION	0.004158396934614138	DESIGN
verify the class	WITHOUT_CLASSIFICATION	0.9996249033864965	WITHOUT_CLASSIFICATION	3.75096613503644E-4	DESIGN
create dir if necessary	WITHOUT_CLASSIFICATION	0.994550802916578	WITHOUT_CLASSIFICATION	0.005449197083422042	DESIGN
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9991370500414186	WITHOUT_CLASSIFICATION	8.62949958581345E-4	DESIGN
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999746048807137	WITHOUT_CLASSIFICATION	2.5395119286258632E-5	DESIGN
thread context	WITHOUT_CLASSIFICATION	0.9997961563876551	WITHOUT_CLASSIFICATION	2.038436123449113E-4	DESIGN
line number	WITHOUT_CLASSIFICATION	0.9998639215436371	WITHOUT_CLASSIFICATION	1.360784563628456E-4	DESIGN
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9996007036800297	WITHOUT_CLASSIFICATION	3.992963199703285E-4	DESIGN
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9961418564469116	WITHOUT_CLASSIFICATION	0.0038581435530885134	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998248471713361	WITHOUT_CLASSIFICATION	1.7515282866384393E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9947695564346343	WITHOUT_CLASSIFICATION	0.005230443565365793	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9728032753530512	WITHOUT_CLASSIFICATION	0.027196724646948795	DESIGN
block	WITHOUT_CLASSIFICATION	0.9991863803173603	WITHOUT_CLASSIFICATION	8.136196826397447E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9991863803173603	WITHOUT_CLASSIFICATION	8.136196826397447E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9955392867856466	WITHOUT_CLASSIFICATION	0.004460713214353352	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9906394125286905	WITHOUT_CLASSIFICATION	0.00936058747130958	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9972577823456564	WITHOUT_CLASSIFICATION	0.0027422176543435432	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9733867739668047	WITHOUT_CLASSIFICATION	0.026613226033195218	DESIGN
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9960060231867541	DESIGN	0.003993976813245897	WITHOUT_CLASSIFICATION
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9829484731719982	DESIGN	0.017051526828001796	WITHOUT_CLASSIFICATION
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9998855895377066	WITHOUT_CLASSIFICATION	1.1441046229345564E-4	DESIGN
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.975610923450545	WITHOUT_CLASSIFICATION	0.024389076549455057	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.99818543818977	WITHOUT_CLASSIFICATION	0.0018145618102298963	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.99818543818977	WITHOUT_CLASSIFICATION	0.0018145618102298963	DESIGN
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9952139745917852	WITHOUT_CLASSIFICATION	0.004786025408214821	DESIGN
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9993864383644743	WITHOUT_CLASSIFICATION	6.135616355257622E-4	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9997824182257732	WITHOUT_CLASSIFICATION	2.175817742268511E-4	DESIGN
exact arg list __file__	WITHOUT_CLASSIFICATION	0.999255470432157	WITHOUT_CLASSIFICATION	7.4452956784293E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9997080538275408	WITHOUT_CLASSIFICATION	2.919461724591959E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9997080538275408	WITHOUT_CLASSIFICATION	2.919461724591959E-4	DESIGN
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9987032586510582	WITHOUT_CLASSIFICATION	0.0012967413489417697	DESIGN
normal closure	WITHOUT_CLASSIFICATION	0.9999472488151901	WITHOUT_CLASSIFICATION	5.2751184809899254E-5	DESIGN
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9998200494759271	WITHOUT_CLASSIFICATION	1.7995052407288853E-4	DESIGN
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.998961760843519	WITHOUT_CLASSIFICATION	0.0010382391564810118	DESIGN
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9994239112763613	WITHOUT_CLASSIFICATION	5.760887236386395E-4	DESIGN
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9997938644775706	WITHOUT_CLASSIFICATION	2.0613552242942123E-4	DESIGN
Ruby name	WITHOUT_CLASSIFICATION	0.997802870034717	WITHOUT_CLASSIFICATION	0.0021971299652829342	DESIGN
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9978082492221917	WITHOUT_CLASSIFICATION	0.0021917507778083088	DESIGN
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9944592548994312	WITHOUT_CLASSIFICATION	0.005540745100568774	DESIGN
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9916756946849862	WITHOUT_CLASSIFICATION	0.008324305315013908	DESIGN
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9973669461325888	WITHOUT_CLASSIFICATION	0.002633053867411116	DESIGN
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9972196450088437	WITHOUT_CLASSIFICATION	0.002780354991156295	DESIGN
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9923608550580078	WITHOUT_CLASSIFICATION	0.007639144941992218	DESIGN
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9807402773142362	WITHOUT_CLASSIFICATION	0.019259722685763828	DESIGN
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9986324797456466	WITHOUT_CLASSIFICATION	0.0013675202543533549	DESIGN
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.996625428619669	WITHOUT_CLASSIFICATION	0.003374571380330992	DESIGN
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9995443223884666	WITHOUT_CLASSIFICATION	4.5567761153341053E-4	DESIGN
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9990482755686325	WITHOUT_CLASSIFICATION	9.517244313674632E-4	DESIGN
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9992044138875918	WITHOUT_CLASSIFICATION	7.955861124082075E-4	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.9977947335280412	WITHOUT_CLASSIFICATION	0.002205266471958799	DESIGN
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9974499404223324	WITHOUT_CLASSIFICATION	0.0025500595776676203	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9987560087044901	WITHOUT_CLASSIFICATION	0.0012439912955098831	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9987560087044901	WITHOUT_CLASSIFICATION	0.0012439912955098831	DESIGN
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9665731443972898	WITHOUT_CLASSIFICATION	0.03342685560271023	DESIGN
Build the class body!	WITHOUT_CLASSIFICATION	0.9983668007445466	WITHOUT_CLASSIFICATION	0.0016331992554532839	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999135424747012	WITHOUT_CLASSIFICATION	8.645752529880158E-5	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999135424747012	WITHOUT_CLASSIFICATION	8.645752529880158E-5	DESIGN
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9504306070998467	DESIGN	0.04956939290015325	WITHOUT_CLASSIFICATION
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9992428123879311	WITHOUT_CLASSIFICATION	7.571876120688423E-4	DESIGN
done done done done	WITHOUT_CLASSIFICATION	0.9991820078352328	WITHOUT_CLASSIFICATION	8.179921647671274E-4	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9989113351671297	WITHOUT_CLASSIFICATION	0.0010886648328702927	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9989113351671297	WITHOUT_CLASSIFICATION	0.0010886648328702927	DESIGN
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9586892137515924	WITHOUT_CLASSIFICATION	0.04131078624840765	DESIGN
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9986407677319927	WITHOUT_CLASSIFICATION	0.0013592322680072149	DESIGN
build first node only and return false	WITHOUT_CLASSIFICATION	0.9999579507076336	WITHOUT_CLASSIFICATION	4.204929236644101E-5	DESIGN
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999459921220868	WITHOUT_CLASSIFICATION	5.400787791329738E-5	DESIGN
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9988507861787169	WITHOUT_CLASSIFICATION	0.001149213821283158	DESIGN
get the incoming case value	WITHOUT_CLASSIFICATION	0.9998230109040233	WITHOUT_CLASSIFICATION	1.769890959766204E-4	DESIGN
the CASE instruction	WITHOUT_CLASSIFICATION	0.9997280677185244	WITHOUT_CLASSIFICATION	2.719322814756415E-4	DESIGN
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9985538876701965	WITHOUT_CLASSIFICATION	0.0014461123298035354	DESIGN
build each "when"	WITHOUT_CLASSIFICATION	0.9994309442580291	WITHOUT_CLASSIFICATION	5.690557419709604E-4	DESIGN
multiple conditions for when	WITHOUT_CLASSIFICATION	0.9978631471666606	WITHOUT_CLASSIFICATION	0.0021368528333395157	DESIGN
build "else" if it exists	WITHOUT_CLASSIFICATION	0.9997081370758311	WITHOUT_CLASSIFICATION	2.9186292416893094E-4	DESIGN
now emit bodies	WITHOUT_CLASSIFICATION	0.9993315948520894	WITHOUT_CLASSIFICATION	6.68405147910606E-4	DESIGN
close it out	WITHOUT_CLASSIFICATION	0.9999858681883685	WITHOUT_CLASSIFICATION	1.4131811631511327E-5	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9959898271664492	WITHOUT_CLASSIFICATION	0.0040101728335507365	DESIGN
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9926312047084103	WITHOUT_CLASSIFICATION	0.0073687952915897316	DESIGN
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.998149557045486	WITHOUT_CLASSIFICATION	0.0018504429545140053	DESIGN
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9996531032472431	WITHOUT_CLASSIFICATION	3.468967527568194E-4	DESIGN
Build IR for args	WITHOUT_CLASSIFICATION	0.9997442202617216	WITHOUT_CLASSIFICATION	2.55779738278367E-4	DESIGN
Build IR for body	WITHOUT_CLASSIFICATION	0.999880465951419	WITHOUT_CLASSIFICATION	1.1953404858103358E-4	DESIGN
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9980646875465052	WITHOUT_CLASSIFICATION	0.00193531245349467	DESIGN
Instance method	WITHOUT_CLASSIFICATION	0.999442242708184	WITHOUT_CLASSIFICATION	5.577572918159389E-4	DESIGN
Class method	WITHOUT_CLASSIFICATION	0.9996731561722177	WITHOUT_CLASSIFICATION	3.2684382778223013E-4	DESIGN
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9866764765718741	WITHOUT_CLASSIFICATION	0.013323523428125985	DESIGN
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9974425018160011	WITHOUT_CLASSIFICATION	0.0025574981839989286	DESIGN
Now for the rest	WITHOUT_CLASSIFICATION	0.9999485389098433	WITHOUT_CLASSIFICATION	5.146109015665951E-5	DESIGN
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9995334699553606	WITHOUT_CLASSIFICATION	4.665300446393773E-4	DESIGN
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9996068497038992	WITHOUT_CLASSIFICATION	3.931502961007384E-4	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9997584043454499	WITHOUT_CLASSIFICATION	2.4159565455008505E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9985781396193946	WITHOUT_CLASSIFICATION	0.0014218603806054311	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999935568822966	WITHOUT_CLASSIFICATION	6.443117703430742E-6	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999214879598777	WITHOUT_CLASSIFICATION	7.851204012229363E-5	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9959898271664492	WITHOUT_CLASSIFICATION	0.0040101728335507365	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9997584043454499	WITHOUT_CLASSIFICATION	2.4159565455008505E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9985781396193946	WITHOUT_CLASSIFICATION	0.0014218603806054311	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999214879598777	WITHOUT_CLASSIFICATION	7.851204012229363E-5	DESIGN
Get the container for this new module	WITHOUT_CLASSIFICATION	0.9986725596654138	WITHOUT_CLASSIFICATION	0.0013274403345861958	DESIGN
Build the new module	WITHOUT_CLASSIFICATION	0.9992867615988663	WITHOUT_CLASSIFICATION	7.132384011336659E-4	DESIGN
Build the module body	WITHOUT_CLASSIFICATION	0.9992261935117548	WITHOUT_CLASSIFICATION	7.738064882452763E-4	DESIGN
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9996985142536832	WITHOUT_CLASSIFICATION	3.014857463168067E-4	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9998736559456426	WITHOUT_CLASSIFICATION	1.2634405435735306E-4	DESIGN
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9998339235449271	WITHOUT_CLASSIFICATION	1.6607645507294886E-4	DESIGN
get attr	WITHOUT_CLASSIFICATION	0.9968456699920829	WITHOUT_CLASSIFICATION	0.003154330007917184	DESIGN
call operator	WITHOUT_CLASSIFICATION	0.9994837897722331	WITHOUT_CLASSIFICATION	5.162102277668903E-4	DESIGN
set attr	WITHOUT_CLASSIFICATION	0.9966636224286035	WITHOUT_CLASSIFICATION	0.0033363775713964373	DESIGN
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9792240340092088	WITHOUT_CLASSIFICATION	0.02077596599079119	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9970161435310764	WITHOUT_CLASSIFICATION	0.002983856468923575	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9970161435310764	WITHOUT_CLASSIFICATION	0.002983856468923575	DESIGN
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9998334061007518	WITHOUT_CLASSIFICATION	1.6659389924825478E-4	DESIGN
build first node only and return true	WITHOUT_CLASSIFICATION	0.9999090822899325	WITHOUT_CLASSIFICATION	9.09177100675792E-5	DESIGN
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999243973027717	WITHOUT_CLASSIFICATION	7.560269722837279E-5	DESIGN
Top-level script!	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9996002200166114	WITHOUT_CLASSIFICATION	3.9977998338856796E-4	DESIGN
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9996226259921843	WITHOUT_CLASSIFICATION	3.7737400781561657E-4	DESIGN
What handles warnings	WITHOUT_CLASSIFICATION	0.9990301611094886	WITHOUT_CLASSIFICATION	9.698388905114187E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9671877912275203	WITHOUT_CLASSIFICATION	0.032812208772479694	DESIGN
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999448823020575	WITHOUT_CLASSIFICATION	5.5117697942539654E-5	DESIGN
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9994196185879202	WITHOUT_CLASSIFICATION	5.803814120797833E-4	DESIGN
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.995829370637138	WITHOUT_CLASSIFICATION	0.0041706293628620454	DESIGN
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9990049786145359	WITHOUT_CLASSIFICATION	9.950213854641877E-4	DESIGN
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9996318006396443	WITHOUT_CLASSIFICATION	3.6819936035563383E-4	DESIGN
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9994967809978238	WITHOUT_CLASSIFICATION	5.032190021761162E-4	DESIGN
alu operations	WITHOUT_CLASSIFICATION	0.9996899028402451	WITHOUT_CLASSIFICATION	3.1009715975497374E-4	DESIGN
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9982635933276969	WITHOUT_CLASSIFICATION	0.0017364066723030709	DESIGN
closure instructions	WITHOUT_CLASSIFICATION	0.9999205376647822	WITHOUT_CLASSIFICATION	7.946233521775752E-5	DESIGN
eval instructions	WITHOUT_CLASSIFICATION	0.9997573334699216	WITHOUT_CLASSIFICATION	2.426665300784165E-4	DESIGN
def instructions	WITHOUT_CLASSIFICATION	0.9993444324966121	WITHOUT_CLASSIFICATION	6.555675033879633E-4	DESIGN
exception instructions	WITHOUT_CLASSIFICATION	0.9983705925121782	WITHOUT_CLASSIFICATION	0.0016294074878217464	DESIGN
Loads	WITHOUT_CLASSIFICATION	0.9979484264574284	WITHOUT_CLASSIFICATION	0.0020515735425715846	DESIGN
Stores	WITHOUT_CLASSIFICATION	0.9981294031536206	WITHOUT_CLASSIFICATION	0.0018705968463793013	DESIGN
jump and branch operations	WITHOUT_CLASSIFICATION	0.9993471899550733	WITHOUT_CLASSIFICATION	6.528100449265668E-4	DESIGN
others	WITHOUT_CLASSIFICATION	0.964413136485545	WITHOUT_CLASSIFICATION	0.03558686351445493	DESIGN
a case/when branch	WITHOUT_CLASSIFICATION	0.9993540793602841	WITHOUT_CLASSIFICATION	6.459206397158428E-4	DESIGN
optimization guards	WITHOUT_CLASSIFICATION	0.9996618294775581	WITHOUT_CLASSIFICATION	3.3817052244186483E-4	DESIGN
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.6094802839981562	DESIGN	0.39051971600184376	WITHOUT_CLASSIFICATION
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.997380631074978	WITHOUT_CLASSIFICATION	0.002619368925021983	DESIGN
scripts	WITHOUT_CLASSIFICATION	0.9984559649656335	WITHOUT_CLASSIFICATION	0.0015440350343664808	DESIGN
scripts and modules	WITHOUT_CLASSIFICATION	0.9998573471113958	WITHOUT_CLASSIFICATION	1.426528886042065E-4	DESIGN
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9996150567923816	WITHOUT_CLASSIFICATION	3.8494320761841996E-4	DESIGN
methods and closures	WITHOUT_CLASSIFICATION	0.9996533360936609	WITHOUT_CLASSIFICATION	3.4666390633908347E-4	DESIGN
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9992258536548617	WITHOUT_CLASSIFICATION	7.741463451383233E-4	DESIGN
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9134831322169902	WITHOUT_CLASSIFICATION	0.08651686778300975	DESIGN
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9995695731682532	WITHOUT_CLASSIFICATION	4.304268317467845E-4	DESIGN
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999836723261284	WITHOUT_CLASSIFICATION	1.632767387155411E-5	DESIGN
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999372798122549	WITHOUT_CLASSIFICATION	6.272018774506424E-5	DESIGN
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9687466217810137	WITHOUT_CLASSIFICATION	0.031253378218986265	DESIGN
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9997527297414376	WITHOUT_CLASSIFICATION	2.472702585624245E-4	DESIGN
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.998606165980968	WITHOUT_CLASSIFICATION	0.0013938340190320225	DESIGN
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.997164898725329	WITHOUT_CLASSIFICATION	0.0028351012746709627	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9509808259271648	WITHOUT_CLASSIFICATION	0.04901917407283519	DESIGN
Readline	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9997375639522813	WITHOUT_CLASSIFICATION	2.624360477186991E-4	DESIGN
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9986413123171454	WITHOUT_CLASSIFICATION	0.001358687682854578	DESIGN
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.999888433983702	WITHOUT_CLASSIFICATION	1.115660162979711E-4	DESIGN
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.5788104742001002	DESIGN	0.4211895257998999	WITHOUT_CLASSIFICATION
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999026117600158	WITHOUT_CLASSIFICATION	9.738823998415406E-5	DESIGN
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.997962436966022	WITHOUT_CLASSIFICATION	0.0020375630339779017	DESIGN
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9960319800267653	WITHOUT_CLASSIFICATION	0.003968019973234768	DESIGN
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9976435657715607	WITHOUT_CLASSIFICATION	0.002356434228439316	DESIGN
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9934336201905957	WITHOUT_CLASSIFICATION	0.006566379809404254	DESIGN
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9887274635300292	WITHOUT_CLASSIFICATION	0.011272536469970973	DESIGN
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9994597387159124	WITHOUT_CLASSIFICATION	5.402612840875496E-4	DESIGN
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9905706491757392	WITHOUT_CLASSIFICATION	0.009429350824260763	DESIGN
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9997118327220019	WITHOUT_CLASSIFICATION	2.8816727799803413E-4	DESIGN
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9982341716847399	WITHOUT_CLASSIFICATION	0.001765828315260146	DESIGN
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999423172817421	WITHOUT_CLASSIFICATION	5.768271825789677E-4	DESIGN
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.8643771806877736	DESIGN	0.1356228193122264	WITHOUT_CLASSIFICATION
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9812744834100526	WITHOUT_CLASSIFICATION	0.018725516589947273	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9812744834100526	WITHOUT_CLASSIFICATION	0.018725516589947273	DESIGN
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9997098580199283	WITHOUT_CLASSIFICATION	2.901419800717461E-4	DESIGN
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.995873385133074	WITHOUT_CLASSIFICATION	0.004126614866926036	DESIGN
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9997210510543695	WITHOUT_CLASSIFICATION	2.7894894563050917E-4	DESIGN
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998579480977687	WITHOUT_CLASSIFICATION	1.4205190223136457E-4	DESIGN
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9998930730513815	WITHOUT_CLASSIFICATION	1.0692694861844638E-4	DESIGN
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.9531066051666964	WITHOUT_CLASSIFICATION	0.0468933948333036	DESIGN
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9902551750292006	WITHOUT_CLASSIFICATION	0.00974482497079945	DESIGN
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9990612213243972	WITHOUT_CLASSIFICATION	9.3877867560289E-4	DESIGN
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9944778349130905	WITHOUT_CLASSIFICATION	0.005522165086909494	DESIGN
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9992346422752761	WITHOUT_CLASSIFICATION	7.653577247238128E-4	DESIGN
class or module	WITHOUT_CLASSIFICATION	0.9980842030270229	WITHOUT_CLASSIFICATION	0.0019157969729770754	DESIGN
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9996002961427788	WITHOUT_CLASSIFICATION	3.997038572211712E-4	DESIGN
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9975237861375628	WITHOUT_CLASSIFICATION	0.0024762138624373083	DESIGN
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9994737276521863	WITHOUT_CLASSIFICATION	5.262723478137392E-4	DESIGN
IN is the same!	WITHOUT_CLASSIFICATION	0.9996323030397037	WITHOUT_CLASSIFICATION	3.6769696029621704E-4	DESIGN
IN changed!	WITHOUT_CLASSIFICATION	0.999663798390485	WITHOUT_CLASSIFICATION	3.362016095148867E-4	DESIGN
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9985103634325717	WITHOUT_CLASSIFICATION	0.0014896365674282425	DESIGN
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9965663424193641	WITHOUT_CLASSIFICATION	0.003433657580635929	DESIGN
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9940061392533429	WITHOUT_CLASSIFICATION	0.005993860746657056	DESIGN
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.9993505541791846	WITHOUT_CLASSIFICATION	6.494458208154242E-4	DESIGN
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.6299734385825765	WITHOUT_CLASSIFICATION	0.3700265614174235	DESIGN
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.998946751380218	WITHOUT_CLASSIFICATION	0.00105324861978196	DESIGN
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.8834515574823971	DESIGN	0.11654844251760278	WITHOUT_CLASSIFICATION
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.9986162995553136	WITHOUT_CLASSIFICATION	0.0013837004446863891	DESIGN
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.9979751830489306	WITHOUT_CLASSIFICATION	0.0020248169510692785	DESIGN
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.9012999788327402	WITHOUT_CLASSIFICATION	0.09870002116725975	DESIGN
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9992799576060142	WITHOUT_CLASSIFICATION	7.200423939858543E-4	DESIGN
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9993262401278238	WITHOUT_CLASSIFICATION	6.737598721761428E-4	DESIGN
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9472861030113283	WITHOUT_CLASSIFICATION	0.05271389698867175	DESIGN
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9985273846301197	WITHOUT_CLASSIFICATION	0.001472615369880393	DESIGN
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.998115575305098	WITHOUT_CLASSIFICATION	0.0018844246949020521	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9075470907920994	WITHOUT_CLASSIFICATION	0.09245290920790065	DESIGN
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9995410225035651	WITHOUT_CLASSIFICATION	4.5897749643496335E-4	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9075470907920994	WITHOUT_CLASSIFICATION	0.09245290920790065	DESIGN
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9995918313366006	WITHOUT_CLASSIFICATION	4.081686633993466E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998719797408366	WITHOUT_CLASSIFICATION	1.280202591633377E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998719797408366	WITHOUT_CLASSIFICATION	1.280202591633377E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998719797408366	WITHOUT_CLASSIFICATION	1.280202591633377E-4	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999839883727735	WITHOUT_CLASSIFICATION	1.6011627226572072E-5	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999839883727735	WITHOUT_CLASSIFICATION	1.6011627226572072E-5	DESIGN
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9999538679697423	WITHOUT_CLASSIFICATION	4.6132030257778553E-5	DESIGN
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9997880513196151	WITHOUT_CLASSIFICATION	2.119486803848983E-4	DESIGN
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999373985210918	WITHOUT_CLASSIFICATION	6.260147890827665E-5	DESIGN
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9390152086035851	WITHOUT_CLASSIFICATION	0.06098479139641484	DESIGN
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9998262883706873	WITHOUT_CLASSIFICATION	1.7371162931278524E-4	DESIGN
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9996945328670745	WITHOUT_CLASSIFICATION	3.054671329255472E-4	DESIGN
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9988758718225347	WITHOUT_CLASSIFICATION	0.0011241281774653537	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.9977581761165607	WITHOUT_CLASSIFICATION	0.0022418238834392436	DESIGN
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9998218581976697	WITHOUT_CLASSIFICATION	1.7814180233038278E-4	DESIGN
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9997596354883534	WITHOUT_CLASSIFICATION	2.403645116465028E-4	DESIGN
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9991072789515268	WITHOUT_CLASSIFICATION	8.927210484731661E-4	DESIGN
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.99937085670659	WITHOUT_CLASSIFICATION	6.291432934099716E-4	DESIGN
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9990565992751924	WITHOUT_CLASSIFICATION	9.434007248075113E-4	DESIGN
root-level logic	WITHOUT_CLASSIFICATION	0.9995628403699339	WITHOUT_CLASSIFICATION	4.371596300661258E-4	DESIGN
root-level methods	WITHOUT_CLASSIFICATION	0.9995352456843005	WITHOUT_CLASSIFICATION	4.6475431569954247E-4	DESIGN
root-level classes	WITHOUT_CLASSIFICATION	0.9997800624694965	WITHOUT_CLASSIFICATION	2.1993753050353424E-4	DESIGN
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999149991508166	WITHOUT_CLASSIFICATION	8.500084918335019E-5	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9989056107529427	WITHOUT_CLASSIFICATION	0.001094389247057218	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9989056107529427	WITHOUT_CLASSIFICATION	0.001094389247057218	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.9986492644609766	WITHOUT_CLASSIFICATION	0.0013507355390233748	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.9986492644609766	WITHOUT_CLASSIFICATION	0.0013507355390233748	DESIGN
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9999262513762899	WITHOUT_CLASSIFICATION	7.374862371012188E-5	DESIGN
Object[] args	WITHOUT_CLASSIFICATION	0.9994714893262162	WITHOUT_CLASSIFICATION	5.285106737838716E-4	DESIGN
load handle	WITHOUT_CLASSIFICATION	0.9957070654375352	WITHOUT_CLASSIFICATION	0.004292934562464782	DESIGN
args array	WITHOUT_CLASSIFICATION	0.9988261192539881	WITHOUT_CLASSIFICATION	0.0011738807460118233	DESIGN
i'th argument	WITHOUT_CLASSIFICATION	0.9999740822957863	WITHOUT_CLASSIFICATION	2.5917704213563262E-5	DESIGN
invoke specific arity version	WITHOUT_CLASSIFICATION	0.999571195664647	WITHOUT_CLASSIFICATION	4.2880433535305546E-4	DESIGN
Object arg0	WITHOUT_CLASSIFICATION	0.9996463769505516	WITHOUT_CLASSIFICATION	3.536230494483681E-4	DESIGN
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.99869417673847	WITHOUT_CLASSIFICATION	0.001305823261529884	DESIGN
No editing before startPos	WITHOUT_CLASSIFICATION	0.9998893195459188	WITHOUT_CLASSIFICATION	1.1068045408114626E-4	DESIGN
no silly ticks!	WITHOUT_CLASSIFICATION	0.9997519880390789	WITHOUT_CLASSIFICATION	2.480119609209995E-4	DESIGN
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9997499399311229	WITHOUT_CLASSIFICATION	2.500600688770133E-4	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9988228218778452	WITHOUT_CLASSIFICATION	0.0011771781221548213	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9996110797616651	WITHOUT_CLASSIFICATION	3.8892023833498284E-4	DESIGN
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9994961068347589	WITHOUT_CLASSIFICATION	5.038931652410254E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.9977581761165607	WITHOUT_CLASSIFICATION	0.0022418238834392436	DESIGN
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9994658124546326	WITHOUT_CLASSIFICATION	5.341875453674358E-4	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9999613398565673	WITHOUT_CLASSIFICATION	3.8660143432712226E-5	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9999613398565673	WITHOUT_CLASSIFICATION	3.8660143432712226E-5	DESIGN
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9988989474652207	WITHOUT_CLASSIFICATION	0.0011010525347793447	DESIGN
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9977614170151364	WITHOUT_CLASSIFICATION	0.0022385829848635135	DESIGN
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9990715248101915	WITHOUT_CLASSIFICATION	9.284751898084938E-4	DESIGN
restore position	WITHOUT_CLASSIFICATION	0.9997735386913367	WITHOUT_CLASSIFICATION	2.264613086632906E-4	DESIGN
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9994758015109894	WITHOUT_CLASSIFICATION	5.241984890106164E-4	DESIGN
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9998278952416155	WITHOUT_CLASSIFICATION	1.721047583843852E-4	DESIGN
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999798020137832	WITHOUT_CLASSIFICATION	2.0197986216782555E-5	DESIGN
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9959348994908938	WITHOUT_CLASSIFICATION	0.004065100509106291	DESIGN
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9993193560659555	WITHOUT_CLASSIFICATION	6.806439340445215E-4	DESIGN
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9992162811435311	WITHOUT_CLASSIFICATION	7.837188564688659E-4	DESIGN
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9997088089847472	WITHOUT_CLASSIFICATION	2.9119101525272985E-4	DESIGN
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9995257317468964	WITHOUT_CLASSIFICATION	4.742682531036346E-4	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9342592495506737	WITHOUT_CLASSIFICATION	0.06574075044932631	DESIGN
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.999653969218772	WITHOUT_CLASSIFICATION	3.460307812279315E-4	DESIGN
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998816478708871	WITHOUT_CLASSIFICATION	1.18352129112901E-4	DESIGN
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.8469439577688344	WITHOUT_CLASSIFICATION	0.15305604223116567	DESIGN
Timeout module methods	WITHOUT_CLASSIFICATION	0.997044319754482	WITHOUT_CLASSIFICATION	0.002955680245517973	DESIGN
Toplevel defines	WITHOUT_CLASSIFICATION	0.9996746110630887	WITHOUT_CLASSIFICATION	3.25388936911272E-4	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9995528737660772	WITHOUT_CLASSIFICATION	4.4712623392283634E-4	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9992845371401424	WITHOUT_CLASSIFICATION	7.154628598575334E-4	DESIGN
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9998411295978454	WITHOUT_CLASSIFICATION	1.5887040215449683E-4	DESIGN
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9978959509408322	WITHOUT_CLASSIFICATION	0.0021040490591678262	DESIGN
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9996148199065468	WITHOUT_CLASSIFICATION	3.85180093453163E-4	DESIGN
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9510176707104407	WITHOUT_CLASSIFICATION	0.04898232928955922	DESIGN
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.999299763459441	WITHOUT_CLASSIFICATION	7.002365405590926E-4	DESIGN
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9947617471407909	WITHOUT_CLASSIFICATION	0.005238252859209112	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.998129937953819	WITHOUT_CLASSIFICATION	0.0018700620461809838	DESIGN
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9683765407721661	WITHOUT_CLASSIFICATION	0.03162345922783393	DESIGN
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9989519140231696	WITHOUT_CLASSIFICATION	0.0010480859768303185	DESIGN
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9980112747959101	WITHOUT_CLASSIFICATION	0.001988725204089785	DESIGN
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999961587784205	WITHOUT_CLASSIFICATION	3.8412215794985164E-5	DESIGN
Windows is LLP64	WITHOUT_CLASSIFICATION	0.9995669474883349	WITHOUT_CLASSIFICATION	4.330525116651046E-4	DESIGN
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9995809654876535	WITHOUT_CLASSIFICATION	4.1903451234640915E-4	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999047997996533	WITHOUT_CLASSIFICATION	9.520020034671483E-5	DESIGN
$blah	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.998129937953819	WITHOUT_CLASSIFICATION	0.0018700620461809838	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9996864651523648	WITHOUT_CLASSIFICATION	3.1353484763520104E-4	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999047997996533	WITHOUT_CLASSIFICATION	9.520020034671483E-5	DESIGN
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9943583730256341	WITHOUT_CLASSIFICATION	0.005641626974365858	DESIGN
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9993139153995017	WITHOUT_CLASSIFICATION	6.8608460049826E-4	DESIGN
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.99983484336632	WITHOUT_CLASSIFICATION	1.6515663368000947E-4	DESIGN
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9989848139939886	WITHOUT_CLASSIFICATION	0.0010151860060113333	DESIGN
case FLOAT:	WITHOUT_CLASSIFICATION	0.9999262513762899	WITHOUT_CLASSIFICATION	7.374862371012188E-5	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.99920240234039	WITHOUT_CLASSIFICATION	7.975976596098951E-4	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.99920240234039	WITHOUT_CLASSIFICATION	7.975976596098951E-4	DESIGN
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998125676568331	WITHOUT_CLASSIFICATION	1.874323431667877E-4	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.996617661519639	WITHOUT_CLASSIFICATION	0.003382338480360852	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9997779024747183	WITHOUT_CLASSIFICATION	2.2209752528171424E-4	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9997779024747183	WITHOUT_CLASSIFICATION	2.2209752528171424E-4	DESIGN
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999947360111299	WITHOUT_CLASSIFICATION	5.263988870138432E-6	DESIGN
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9990006306991573	WITHOUT_CLASSIFICATION	9.99369300842732E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9995879644840199	WITHOUT_CLASSIFICATION	4.120355159801338E-4	DESIGN
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9994792341979957	WITHOUT_CLASSIFICATION	5.207658020042691E-4	DESIGN
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.990499739260404	WITHOUT_CLASSIFICATION	0.009500260739595994	DESIGN
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9990097706803625	WITHOUT_CLASSIFICATION	9.902293196375892E-4	DESIGN
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.8575701220210855	WITHOUT_CLASSIFICATION	0.14242987797891454	DESIGN
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999217481546921	WITHOUT_CLASSIFICATION	7.825184530787026E-5	DESIGN
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9991927539311328	WITHOUT_CLASSIFICATION	8.072460688671002E-4	DESIGN
host and port given	WITHOUT_CLASSIFICATION	0.9999125340846124	WITHOUT_CLASSIFICATION	8.746591538753653E-5	DESIGN
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9987310937590269	WITHOUT_CLASSIFICATION	0.0012689062409731308	DESIGN
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9975538460908815	WITHOUT_CLASSIFICATION	0.0024461539091184758	DESIGN
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998792166606735	WITHOUT_CLASSIFICATION	1.207833393265633E-4	DESIGN
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9957455805889449	WITHOUT_CLASSIFICATION	0.004254419411055062	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9965867802491986	WITHOUT_CLASSIFICATION	0.0034132197508013845	DESIGN
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9992571217107342	WITHOUT_CLASSIFICATION	7.428782892657598E-4	DESIGN
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9989026316256886	WITHOUT_CLASSIFICATION	0.001097368374311352	DESIGN
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.999058834606812	WITHOUT_CLASSIFICATION	9.411653931880741E-4	DESIGN
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9983046581377082	WITHOUT_CLASSIFICATION	0.0016953418622918368	DESIGN
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9997822874861905	WITHOUT_CLASSIFICATION	2.1771251380945937E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
255.255.255.255	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
0.0.0.0	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.996156850571252	WITHOUT_CLASSIFICATION	0.003843149428747997	DESIGN
line 323	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9992252536514464	WITHOUT_CLASSIFICATION	7.74746348553587E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9992252536514464	WITHOUT_CLASSIFICATION	7.74746348553587E-4	DESIGN
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999780425099479	WITHOUT_CLASSIFICATION	2.1957490052140333E-5	DESIGN
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9992964570160425	WITHOUT_CLASSIFICATION	7.035429839574022E-4	DESIGN
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9996002961427788	WITHOUT_CLASSIFICATION	3.997038572211712E-4	DESIGN
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9996248456963414	WITHOUT_CLASSIFICATION	3.751543036585694E-4	DESIGN
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999205927057453	WITHOUT_CLASSIFICATION	7.940729425477824E-5	DESIGN
RubySocket	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9995921255271766	WITHOUT_CLASSIFICATION	4.078744728234678E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996538588911591	WITHOUT_CLASSIFICATION	3.4614110884100756E-4	DESIGN
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.998793925993738	WITHOUT_CLASSIFICATION	0.0012060740062620004	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999928551535775	WITHOUT_CLASSIFICATION	7.144846422516436E-6	DESIGN
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999644396971664	WITHOUT_CLASSIFICATION	3.5560302833504806E-5	DESIGN
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9987149405201471	WITHOUT_CLASSIFICATION	0.0012850594798528476	DESIGN
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9994340123275846	WITHOUT_CLASSIFICATION	5.659876724154333E-4	DESIGN
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9916191704612453	WITHOUT_CLASSIFICATION	0.008380829538754662	DESIGN
Call the thread's code	WITHOUT_CLASSIFICATION	0.9975055548723378	WITHOUT_CLASSIFICATION	0.0024944451276621587	DESIGN
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9991193773927062	WITHOUT_CLASSIFICATION	8.806226072938639E-4	DESIGN
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999956628283	WITHOUT_CLASSIFICATION	4.337171699997881E-5	DESIGN
be dead	WITHOUT_CLASSIFICATION	0.9977587646381738	WITHOUT_CLASSIFICATION	0.002241235361826282	DESIGN
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999657401924016	WITHOUT_CLASSIFICATION	3.425980759840957E-4	DESIGN
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9998406140315423	WITHOUT_CLASSIFICATION	1.5938596845773345E-4	DESIGN
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9954135910542823	WITHOUT_CLASSIFICATION	0.004586408945717733	DESIGN
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9978349768185489	WITHOUT_CLASSIFICATION	0.0021650231814511374	DESIGN
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999118635382935	WITHOUT_CLASSIFICATION	8.813646170647154E-5	DESIGN
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999168605591391	WITHOUT_CLASSIFICATION	8.313944086090858E-5	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9901917792917322	WITHOUT_CLASSIFICATION	0.009808220708267801	DESIGN
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9979093611785776	WITHOUT_CLASSIFICATION	0.002090638821422333	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.998842642658304	WITHOUT_CLASSIFICATION	0.0011573573416959883	DESIGN
main body	WITHOUT_CLASSIFICATION	0.9994689371620749	WITHOUT_CLASSIFICATION	5.310628379252111E-4	DESIGN
return jump handling	WITHOUT_CLASSIFICATION	0.9995009888092008	WITHOUT_CLASSIFICATION	4.9901119079915E-4	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9986321988421628	WITHOUT_CLASSIFICATION	0.0013678011578372546	DESIGN
return result if we're still good	WITHOUT_CLASSIFICATION	0.999988245057072	WITHOUT_CLASSIFICATION	1.1754942928052741E-5	DESIGN
redo jump handling	WITHOUT_CLASSIFICATION	0.999103110470354	WITHOUT_CLASSIFICATION	8.968895296459182E-4	DESIGN
clear the redo	WITHOUT_CLASSIFICATION	0.999798267740304	WITHOUT_CLASSIFICATION	2.017322596960714E-4	DESIGN
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.997867871684773	WITHOUT_CLASSIFICATION	0.0021321283152270954	DESIGN
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999136466107218	WITHOUT_CLASSIFICATION	8.63533892781854E-5	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9985169986050805	WITHOUT_CLASSIFICATION	0.0014830013949195166	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9952494956595904	WITHOUT_CLASSIFICATION	0.004750504340409613	DESIGN
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999995439181075	WITHOUT_CLASSIFICATION	4.56081892491678E-6	DESIGN
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.999170566308907	WITHOUT_CLASSIFICATION	8.294336910930299E-4	DESIGN
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9997020374598348	WITHOUT_CLASSIFICATION	2.9796254016521456E-4	DESIGN
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9984911988623808	WITHOUT_CLASSIFICATION	0.0015088011376192432	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.8170418834776706	WITHOUT_CLASSIFICATION	0.18295811652232946	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.8170418834776706	WITHOUT_CLASSIFICATION	0.18295811652232946	DESIGN
normal all-rest method	WITHOUT_CLASSIFICATION	0.9988189481963695	WITHOUT_CLASSIFICATION	0.0011810518036305389	DESIGN
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9998894135237272	WITHOUT_CLASSIFICATION	1.1058647627286486E-4	DESIGN
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9973286328319112	WITHOUT_CLASSIFICATION	0.002671367168088869	DESIGN
return	WITHOUT_CLASSIFICATION	0.9991236205238287	WITHOUT_CLASSIFICATION	8.763794761713327E-4	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9993135217233254	WITHOUT_CLASSIFICATION	6.86478276674564E-4	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.999675730615247	WITHOUT_CLASSIFICATION	3.242693847530371E-4	DESIGN
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9996304281233178	WITHOUT_CLASSIFICATION	3.6957187668221143E-4	DESIGN
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9941430742657231	WITHOUT_CLASSIFICATION	0.0058569257342768665	DESIGN
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9997329562091117	WITHOUT_CLASSIFICATION	2.670437908882218E-4	DESIGN
tc	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
self name	WITHOUT_CLASSIFICATION	0.9955551852096434	WITHOUT_CLASSIFICATION	0.004444814790356585	DESIGN
no args	WITHOUT_CLASSIFICATION	0.9987559663520419	WITHOUT_CLASSIFICATION	0.0012440336479580232	DESIGN
variable args with block	WITHOUT_CLASSIFICATION	0.9986695077398614	WITHOUT_CLASSIFICATION	0.0013304922601385936	DESIGN
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.994851481023836	WITHOUT_CLASSIFICATION	0.005148518976164062	DESIGN
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9995368402834536	WITHOUT_CLASSIFICATION	4.631597165463996E-4	DESIGN
one arg with block	WITHOUT_CLASSIFICATION	0.9998772854410152	WITHOUT_CLASSIFICATION	1.2271455898471353E-4	DESIGN
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9982507609646321	WITHOUT_CLASSIFICATION	0.0017492390353678591	DESIGN
two args with block	WITHOUT_CLASSIFICATION	0.9997068055294411	WITHOUT_CLASSIFICATION	2.931944705589386E-4	DESIGN
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9970389595448038	WITHOUT_CLASSIFICATION	0.0029610404551961016	DESIGN
three args with block	WITHOUT_CLASSIFICATION	0.9995743998098352	WITHOUT_CLASSIFICATION	4.256001901648835E-4	DESIGN
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9983457352949204	WITHOUT_CLASSIFICATION	0.0016542647050795897	DESIGN
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9992309725852253	WITHOUT_CLASSIFICATION	7.690274147745843E-4	DESIGN
all other arg cases with block	WITHOUT_CLASSIFICATION	0.998849328298258	WITHOUT_CLASSIFICATION	0.0011506717017419807	DESIGN
all other arg cases without block	WITHOUT_CLASSIFICATION	0.9990527634038258	WITHOUT_CLASSIFICATION	9.472365961742985E-4	DESIGN
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997336691538339	WITHOUT_CLASSIFICATION	2.663308461661819E-4	DESIGN
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9995487015816923	WITHOUT_CLASSIFICATION	4.512984183076505E-4	DESIGN
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997079827985564	WITHOUT_CLASSIFICATION	2.920172014435744E-4	DESIGN
load target for invocations	WITHOUT_CLASSIFICATION	0.999779514368207	WITHOUT_CLASSIFICATION	2.2048563179296845E-4	DESIGN
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9951335671460141	WITHOUT_CLASSIFICATION	0.0048664328539859214	DESIGN
static invocation	WITHOUT_CLASSIFICATION	0.9998362309169015	WITHOUT_CLASSIFICATION	1.6376908309855391E-4	DESIGN
virtual invocation	WITHOUT_CLASSIFICATION	0.9995200739709298	WITHOUT_CLASSIFICATION	4.799260290702048E-4	DESIGN
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9903704732539339	WITHOUT_CLASSIFICATION	0.00962952674606615	DESIGN
normal finally and exit	WITHOUT_CLASSIFICATION	0.9996660446422745	WITHOUT_CLASSIFICATION	3.3395535772546604E-4	DESIGN
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9901603636194354	WITHOUT_CLASSIFICATION	0.00983963638056466	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9952494956595904	WITHOUT_CLASSIFICATION	0.004750504340409613	DESIGN
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9971878770333894	WITHOUT_CLASSIFICATION	0.0028121229666106203	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9975630142685313	WITHOUT_CLASSIFICATION	0.002436985731468591	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9975630142685313	WITHOUT_CLASSIFICATION	0.002436985731468591	DESIGN
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9991699340515561	WITHOUT_CLASSIFICATION	8.300659484440145E-4	DESIGN
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9580677587288908	WITHOUT_CLASSIFICATION	0.041932241271109165	DESIGN
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
never reached	WITHOUT_CLASSIFICATION	0.9998296911358722	WITHOUT_CLASSIFICATION	1.7030886412785758E-4	DESIGN
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9906054356259872	WITHOUT_CLASSIFICATION	0.009394564374012692	DESIGN
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9981279340617091	WITHOUT_CLASSIFICATION	0.001872065938290869	DESIGN
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9930896253749445	WITHOUT_CLASSIFICATION	0.00691037462505548	DESIGN
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9881219346651289	WITHOUT_CLASSIFICATION	0.011878065334871155	DESIGN
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9986753220598458	WITHOUT_CLASSIFICATION	0.0013246779401542591	DESIGN
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9951029760666874	WITHOUT_CLASSIFICATION	0.0048970239333126185	DESIGN
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9915703458984244	WITHOUT_CLASSIFICATION	0.008429654101575666	DESIGN
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9933377041445172	WITHOUT_CLASSIFICATION	0.006662295855482883	DESIGN
promise to implement N	WITHOUT_CLASSIFICATION	0.9866373116358876	WITHOUT_CLASSIFICATION	0.013362688364112274	DESIGN
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.8477454073260748	WITHOUT_CLASSIFICATION	0.15225459267392513	DESIGN
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.9982402452809053	WITHOUT_CLASSIFICATION	0.0017597547190947066	DESIGN
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9831226889743712	WITHOUT_CLASSIFICATION	0.016877311025628908	DESIGN
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9890156560393865	WITHOUT_CLASSIFICATION	0.010984343960613568	DESIGN
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.997808320377319	WITHOUT_CLASSIFICATION	0.002191679622680993	DESIGN
promise to implement one to three	WITHOUT_CLASSIFICATION	0.99191679841605	WITHOUT_CLASSIFICATION	0.008083201583950041	DESIGN
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9861177783046031	WITHOUT_CLASSIFICATION	0.013882221695396855	DESIGN
promise to implement three	WITHOUT_CLASSIFICATION	0.9905125966987269	WITHOUT_CLASSIFICATION	0.009487403301272963	DESIGN
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9978676964911602	WITHOUT_CLASSIFICATION	0.0021323035088397263	DESIGN
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9954787199196118	WITHOUT_CLASSIFICATION	0.004521280080388282	DESIGN
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9998427310140953	WITHOUT_CLASSIFICATION	1.5726898590468841E-4	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998605823956164	WITHOUT_CLASSIFICATION	1.3941760438368006E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9996712971248836	WITHOUT_CLASSIFICATION	3.287028751164468E-4	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9995728069559698	WITHOUT_CLASSIFICATION	4.271930440302191E-4	DESIGN
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9998985964834147	WITHOUT_CLASSIFICATION	1.014035165852285E-4	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9998368324809008	WITHOUT_CLASSIFICATION	1.6316751909911128E-4	DESIGN
start setup method	WITHOUT_CLASSIFICATION	0.9997647400846971	WITHOUT_CLASSIFICATION	2.352599153029512E-4	DESIGN
set RubyClass	WITHOUT_CLASSIFICATION	0.99948384541167	WITHOUT_CLASSIFICATION	5.161545883299836E-4	DESIGN
set Ruby	WITHOUT_CLASSIFICATION	0.9976673316111762	WITHOUT_CLASSIFICATION	0.002332668388823889	DESIGN
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999053491288427	WITHOUT_CLASSIFICATION	9.465087115731502E-5	DESIGN
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9996974030089864	WITHOUT_CLASSIFICATION	3.0259699101369344E-4	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999274843630306	WITHOUT_CLASSIFICATION	7.251563696946725E-5	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9994607540542095	WITHOUT_CLASSIFICATION	5.392459457904484E-4	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998605823956164	WITHOUT_CLASSIFICATION	1.3941760438368006E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9996712971248836	WITHOUT_CLASSIFICATION	3.287028751164468E-4	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9995728069559698	WITHOUT_CLASSIFICATION	4.271930440302191E-4	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9998368324809008	WITHOUT_CLASSIFICATION	1.6316751909911128E-4	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9941127453182685	WITHOUT_CLASSIFICATION	0.005887254681731564	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9808540550411647	WITHOUT_CLASSIFICATION	0.019145944958835294	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9990250494940245	WITHOUT_CLASSIFICATION	9.749505059755401E-4	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9990169668368846	WITHOUT_CLASSIFICATION	9.830331631154375E-4	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.999456420447565	WITHOUT_CLASSIFICATION	5.435795524349067E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999350367989136	WITHOUT_CLASSIFICATION	6.496320108642829E-5	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9998409663729358	WITHOUT_CLASSIFICATION	1.5903362706417692E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.998327272438939	WITHOUT_CLASSIFICATION	0.0016727275610609483	DESIGN
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9996571745272407	WITHOUT_CLASSIFICATION	3.428254727592523E-4	DESIGN
store the wrapper	WITHOUT_CLASSIFICATION	0.9999851390364105	WITHOUT_CLASSIFICATION	1.4860963589528862E-5	DESIGN
prepare temp locals	WITHOUT_CLASSIFICATION	0.9997852811208838	WITHOUT_CLASSIFICATION	2.1471887911615728E-4	DESIGN
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9988059994185576	WITHOUT_CLASSIFICATION	0.0011940005814424111	DESIGN
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9993900634583794	WITHOUT_CLASSIFICATION	6.099365416205992E-4	DESIGN
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998252448442934	WITHOUT_CLASSIFICATION	1.74755155706607E-4	DESIGN
store it	WITHOUT_CLASSIFICATION	0.9994384400335323	WITHOUT_CLASSIFICATION	5.61559966467663E-4	DESIGN
end of try block	WITHOUT_CLASSIFICATION	0.9999812862606989	WITHOUT_CLASSIFICATION	1.871373930114892E-5	DESIGN
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9947717685064126	WITHOUT_CLASSIFICATION	0.005228231493587459	DESIGN
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9731989269740701	WITHOUT_CLASSIFICATION	0.02680107302592991	DESIGN
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9968954580867365	WITHOUT_CLASSIFICATION	0.0031045419132635214	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9994607540542095	WITHOUT_CLASSIFICATION	5.392459457904484E-4	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9808540550411647	WITHOUT_CLASSIFICATION	0.019145944958835294	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9990250494940245	WITHOUT_CLASSIFICATION	9.749505059755401E-4	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.999456420447565	WITHOUT_CLASSIFICATION	5.435795524349067E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999350367989136	WITHOUT_CLASSIFICATION	6.496320108642829E-5	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9998409663729358	WITHOUT_CLASSIFICATION	1.5903362706417692E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.998327272438939	WITHOUT_CLASSIFICATION	0.0016727275610609483	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9992056681252628	WITHOUT_CLASSIFICATION	7.943318747371282E-4	DESIGN
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9944374806490128	WITHOUT_CLASSIFICATION	0.0055625193509871535	DESIGN
perform the dispatch	WITHOUT_CLASSIFICATION	0.9998657661539884	WITHOUT_CLASSIFICATION	1.3423384601171976E-4	DESIGN
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9995440561624749	WITHOUT_CLASSIFICATION	4.5594383752514076E-4	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9987017727459547	WITHOUT_CLASSIFICATION	0.0012982272540452454	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9987017727459547	WITHOUT_CLASSIFICATION	0.0012982272540452454	DESIGN
setup the class	WITHOUT_CLASSIFICATION	0.9995511543814779	WITHOUT_CLASSIFICATION	4.4884561852212996E-4	DESIGN
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9968229147857964	WITHOUT_CLASSIFICATION	0.0031770852142034766	DESIGN
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9971095087351713	WITHOUT_CLASSIFICATION	0.0028904912648286003	DESIGN
probably a primitive	WITHOUT_CLASSIFICATION	0.9988099419264226	WITHOUT_CLASSIFICATION	0.001190058073577497	DESIGN
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9997855806321272	WITHOUT_CLASSIFICATION	2.144193678728361E-4	DESIGN
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9991448985664995	WITHOUT_CLASSIFICATION	8.551014335005326E-4	DESIGN
set the full name	WITHOUT_CLASSIFICATION	0.9978643215798609	WITHOUT_CLASSIFICATION	0.002135678420139044	DESIGN
include all interfaces	WITHOUT_CLASSIFICATION	0.9992550250061062	WITHOUT_CLASSIFICATION	7.449749938939484E-4	DESIGN
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.999914912230747	WITHOUT_CLASSIFICATION	8.508776925295659E-5	DESIGN
add array construction methods	WITHOUT_CLASSIFICATION	0.9992781407469116	WITHOUT_CLASSIFICATION	7.218592530883818E-4	DESIGN
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9994893944024635	WITHOUT_CLASSIFICATION	5.106055975364239E-4	DESIGN
add all instance and static methods	WITHOUT_CLASSIFICATION	0.999555209971182	WITHOUT_CLASSIFICATION	4.447900288180705E-4	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997914891478431	WITHOUT_CLASSIFICATION	2.0851085215701422E-4	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9985308532736326	WITHOUT_CLASSIFICATION	0.0014691467263674698	DESIGN
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999453862641977	WITHOUT_CLASSIFICATION	5.461373580225376E-5	DESIGN
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9978810382839606	WITHOUT_CLASSIFICATION	0.0021189617160394204	DESIGN
add all static variables	WITHOUT_CLASSIFICATION	0.9990437913741446	WITHOUT_CLASSIFICATION	9.562086258555145E-4	DESIGN
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999835401305289	WITHOUT_CLASSIFICATION	1.6459869470986707E-5	DESIGN
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999481728959322	WITHOUT_CLASSIFICATION	5.1827104067853344E-5	DESIGN
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.9998945194706005	WITHOUT_CLASSIFICATION	1.0548052939961685E-4	DESIGN
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.9508500923444517	DESIGN	0.04914990765554832	WITHOUT_CLASSIFICATION
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9979472338219398	WITHOUT_CLASSIFICATION	0.0020527661780601696	DESIGN
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9997596028398307	WITHOUT_CLASSIFICATION	2.4039716016926367E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7669530068407454	WITHOUT_CLASSIFICATION	0.23304699315925453	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9953345860756487	WITHOUT_CLASSIFICATION	0.004665413924351252	DESIGN
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9994406865103059	WITHOUT_CLASSIFICATION	5.593134896939663E-4	DESIGN
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9994303821900459	WITHOUT_CLASSIFICATION	5.696178099540522E-4	DESIGN
line 326	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9953345860756487	WITHOUT_CLASSIFICATION	0.004665413924351252	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9985308532736326	WITHOUT_CLASSIFICATION	0.0014691467263674698	DESIGN
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9996630356846392	WITHOUT_CLASSIFICATION	3.3696431536072834E-4	DESIGN
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9997724075631779	WITHOUT_CLASSIFICATION	2.275924368220402E-4	DESIGN
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9987916596965523	WITHOUT_CLASSIFICATION	0.0012083403034477771	DESIGN
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9966011604629802	WITHOUT_CLASSIFICATION	0.0033988395370198508	DESIGN
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9996866303333437	WITHOUT_CLASSIFICATION	3.133696666562824E-4	DESIGN
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999442464774587	WITHOUT_CLASSIFICATION	5.575352254130161E-4	DESIGN
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.998713687036018	WITHOUT_CLASSIFICATION	0.0012863129639819326	DESIGN
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9996014493284631	WITHOUT_CLASSIFICATION	3.985506715368439E-4	DESIGN
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.8305136864351991	WITHOUT_CLASSIFICATION	0.1694863135648009	DESIGN
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9890471344853558	WITHOUT_CLASSIFICATION	0.010952865514644331	DESIGN
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9985237982014754	WITHOUT_CLASSIFICATION	0.0014762017985245973	DESIGN
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9906221850951267	WITHOUT_CLASSIFICATION	0.009377814904873338	DESIGN
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9850810971655263	WITHOUT_CLASSIFICATION	0.014918902834473658	DESIGN
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999992002634943	WITHOUT_CLASSIFICATION	7.9973650560082E-7	DESIGN
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.8121903070948193	WITHOUT_CLASSIFICATION	0.1878096929051806	DESIGN
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9969380345852675	WITHOUT_CLASSIFICATION	0.0030619654147325008	DESIGN
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9979725708519008	WITHOUT_CLASSIFICATION	0.002027429148099164	DESIGN
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.8832876681584171	WITHOUT_CLASSIFICATION	0.1167123318415829	DESIGN
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9937336844583387	WITHOUT_CLASSIFICATION	0.006266315541661395	DESIGN
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9995063827055545	WITHOUT_CLASSIFICATION	4.936172944455125E-4	DESIGN
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9683616144237928	WITHOUT_CLASSIFICATION	0.03163838557620729	DESIGN
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9936957187485448	WITHOUT_CLASSIFICATION	0.0063042812514552005	DESIGN
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.999623856013508	WITHOUT_CLASSIFICATION	3.7614398649197373E-4	DESIGN
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.7159023838140073	DESIGN	0.28409761618599283	WITHOUT_CLASSIFICATION
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.998846362874281	WITHOUT_CLASSIFICATION	0.0011536371257190228	DESIGN
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9992416493131284	WITHOUT_CLASSIFICATION	7.583506868716098E-4	DESIGN
array creation should use this variant	WITHOUT_CLASSIFICATION	0.8909479677477403	WITHOUT_CLASSIFICATION	0.10905203225225966	DESIGN
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9903708053835341	WITHOUT_CLASSIFICATION	0.009629194616465948	DESIGN
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9987946677058768	WITHOUT_CLASSIFICATION	0.0012053322941231867	DESIGN
add reference to interface module	WITHOUT_CLASSIFICATION	0.9915426144978363	WITHOUT_CLASSIFICATION	0.008457385502163675	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9995317485432458	WITHOUT_CLASSIFICATION	4.682514567542715E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9995317485432458	WITHOUT_CLASSIFICATION	4.682514567542715E-4	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997914891478431	WITHOUT_CLASSIFICATION	2.0851085215701422E-4	DESIGN
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9998153229144143	WITHOUT_CLASSIFICATION	1.846770855855902E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998882553235894	WITHOUT_CLASSIFICATION	1.1174467641062686E-4	DESIGN
weakly reserved names	WITHOUT_CLASSIFICATION	0.9992038007311868	WITHOUT_CLASSIFICATION	7.961992688132078E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999640047505837	WITHOUT_CLASSIFICATION	3.599524941627339E-5	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999640047505837	WITHOUT_CLASSIFICATION	3.599524941627339E-5	DESIGN
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999945484302405	WITHOUT_CLASSIFICATION	5.451569759428372E-6	DESIGN
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999700707724177	WITHOUT_CLASSIFICATION	2.9929227582250013E-5	DESIGN
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.999518125891265	WITHOUT_CLASSIFICATION	4.8187410873508206E-4	DESIGN
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9993129324319627	WITHOUT_CLASSIFICATION	6.870675680371904E-4	DESIGN
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.5960044945138274	WITHOUT_CLASSIFICATION	0.4039955054861725	DESIGN
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9760645858011371	WITHOUT_CLASSIFICATION	0.023935414198862862	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9998680942402601	WITHOUT_CLASSIFICATION	1.3190575973996468E-4	DESIGN
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9998736792584989	WITHOUT_CLASSIFICATION	1.2632074150102602E-4	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9997002540545482	WITHOUT_CLASSIFICATION	2.997459454517847E-4	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9996743472604901	WITHOUT_CLASSIFICATION	3.2565273950989793E-4	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9996510925071316	WITHOUT_CLASSIFICATION	3.489074928684872E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9996964453770694	WITHOUT_CLASSIFICATION	3.0355462293063057E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9994843117512071	WITHOUT_CLASSIFICATION	5.156882487929093E-4	DESIGN
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9992629939554482	WITHOUT_CLASSIFICATION	7.37006044551981E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
something?	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.999725170362171	WITHOUT_CLASSIFICATION	2.7482963782904537E-4	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.999725170362171	WITHOUT_CLASSIFICATION	2.7482963782904537E-4	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9998758743301438	WITHOUT_CLASSIFICATION	1.2412566985617248E-4	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9998758743301438	WITHOUT_CLASSIFICATION	1.2412566985617248E-4	DESIGN
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999549489485845	WITHOUT_CLASSIFICATION	4.505105141542124E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9934897583847326	WITHOUT_CLASSIFICATION	0.006510241615267323	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9922677219185443	WITHOUT_CLASSIFICATION	0.007732278081455823	DESIGN
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9794385177705249	WITHOUT_CLASSIFICATION	0.02056148222947508	DESIGN
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9943879274932522	WITHOUT_CLASSIFICATION	0.005612072506747754	DESIGN
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9956479278902262	WITHOUT_CLASSIFICATION	0.0043520721097738725	DESIGN
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9995031219734364	WITHOUT_CLASSIFICATION	4.968780265635974E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9996964453770694	WITHOUT_CLASSIFICATION	3.0355462293063057E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9994843117512071	WITHOUT_CLASSIFICATION	5.156882487929093E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9964886363371552	WITHOUT_CLASSIFICATION	0.0035113636628447123	DESIGN
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9511786918289145	WITHOUT_CLASSIFICATION	0.048821308171085556	DESIGN
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999692047280124	WITHOUT_CLASSIFICATION	3.079527198763909E-5	DESIGN
see note above re: return type	WITHOUT_CLASSIFICATION	0.9451721638443539	WITHOUT_CLASSIFICATION	0.05482783615564609	DESIGN
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9899434204994251	WITHOUT_CLASSIFICATION	0.010056579500574947	DESIGN
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9930709688253729	WITHOUT_CLASSIFICATION	0.00692903117462708	DESIGN
one-dimensional array	WITHOUT_CLASSIFICATION	0.9993862953206513	WITHOUT_CLASSIFICATION	6.137046793486673E-4	DESIGN
n-dimensional array	WITHOUT_CLASSIFICATION	0.999764054430783	WITHOUT_CLASSIFICATION	2.3594556921710042E-4	DESIGN
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9997242583133255	WITHOUT_CLASSIFICATION	2.757416866745787E-4	DESIGN
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9998397494777204	WITHOUT_CLASSIFICATION	1.6025052227976538E-4	DESIGN
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.6993037144876977	WITHOUT_CLASSIFICATION	0.30069628551230226	DESIGN
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9996869080983901	WITHOUT_CLASSIFICATION	3.130919016099935E-4	DESIGN
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9996480350492378	WITHOUT_CLASSIFICATION	3.5196495076217496E-4	DESIGN
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9994810375995992	WITHOUT_CLASSIFICATION	5.189624004009198E-4	DESIGN
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9975303320462511	WITHOUT_CLASSIFICATION	0.0024696679537488772	DESIGN
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9997353436891826	WITHOUT_CLASSIFICATION	2.646563108173473E-4	DESIGN
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9998132075987444	WITHOUT_CLASSIFICATION	1.867924012556966E-4	DESIGN
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9994952412140041	WITHOUT_CLASSIFICATION	5.047587859959659E-4	DESIGN
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9996653433139818	WITHOUT_CLASSIFICATION	3.346566860182131E-4	DESIGN
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9997381350980497	WITHOUT_CLASSIFICATION	2.6186490195035376E-4	DESIGN
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9997986405566143	WITHOUT_CLASSIFICATION	2.0135944338580322E-4	DESIGN
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9996405245074741	WITHOUT_CLASSIFICATION	3.594754925259482E-4	DESIGN
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.999713251411638	WITHOUT_CLASSIFICATION	2.867485883619752E-4	DESIGN
The template for interface modules	WITHOUT_CLASSIFICATION	0.9995783794439906	WITHOUT_CLASSIFICATION	4.2162055600936387E-4	DESIGN
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9995944743899327	WITHOUT_CLASSIFICATION	4.055256100673611E-4	DESIGN
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9985838467717002	WITHOUT_CLASSIFICATION	0.0014161532282997852	DESIGN
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999424335009501	WITHOUT_CLASSIFICATION	5.75664990499092E-4	DESIGN
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9983480038136158	WITHOUT_CLASSIFICATION	0.0016519961863842312	DESIGN
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9993378464698562	WITHOUT_CLASSIFICATION	6.621535301437876E-4	DESIGN
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9870406464636998	WITHOUT_CLASSIFICATION	0.012959353536300266	DESIGN
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9998547999581647	WITHOUT_CLASSIFICATION	1.452000418352673E-4	DESIGN
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999760245869611	WITHOUT_CLASSIFICATION	2.3975413038921347E-5	DESIGN
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9937690052803888	WITHOUT_CLASSIFICATION	0.0062309947196112145	DESIGN
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9993051763657179	WITHOUT_CLASSIFICATION	6.948236342821295E-4	DESIGN
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.996309886916707	WITHOUT_CLASSIFICATION	0.0036901130832929954	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9996644127247885	WITHOUT_CLASSIFICATION	3.3558727521153486E-4	DESIGN
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.999404904375558	WITHOUT_CLASSIFICATION	5.950956244420676E-4	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9995449611705743	WITHOUT_CLASSIFICATION	4.5503882942576755E-4	DESIGN
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999744348510576	WITHOUT_CLASSIFICATION	2.556514894233535E-5	DESIGN
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999018195367042	WITHOUT_CLASSIFICATION	9.818046329586086E-5	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998882553235894	WITHOUT_CLASSIFICATION	1.1174467641062686E-4	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9996644127247885	WITHOUT_CLASSIFICATION	3.3558727521153486E-4	DESIGN
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9904370542769799	WITHOUT_CLASSIFICATION	0.00956294572302006	DESIGN
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9979912757692062	WITHOUT_CLASSIFICATION	0.0020087242307938575	DESIGN
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9932350577351576	WITHOUT_CLASSIFICATION	0.006764942264842405	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9943536649005149	WITHOUT_CLASSIFICATION	0.005646335099485144	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9943536649005149	WITHOUT_CLASSIFICATION	0.005646335099485144	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9995958610150447	WITHOUT_CLASSIFICATION	4.0413898495518134E-4	DESIGN
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9540592474824939	WITHOUT_CLASSIFICATION	0.045940752517506046	DESIGN
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9906037123356742	WITHOUT_CLASSIFICATION	0.009396287664325658	DESIGN
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999255296385843	WITHOUT_CLASSIFICATION	7.447036141571856E-5	DESIGN
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9973783091669848	WITHOUT_CLASSIFICATION	0.0026216908330151164	DESIGN
Initialize some components.	WITHOUT_CLASSIFICATION	0.9986601679055785	WITHOUT_CLASSIFICATION	0.001339832094421447	DESIGN
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9971785448776536	WITHOUT_CLASSIFICATION	0.0028214551223464408	DESIGN
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9765151581373843	WITHOUT_CLASSIFICATION	0.023484841862615687	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998318764995	WITHOUT_CLASSIFICATION	1.6812350050001353E-4	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998318764995	WITHOUT_CLASSIFICATION	1.6812350050001353E-4	DESIGN
no matching ctor found	WITHOUT_CLASSIFICATION	0.9993488241105595	WITHOUT_CLASSIFICATION	6.511758894406342E-4	DESIGN
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9852571987108288	WITHOUT_CLASSIFICATION	0.014742801289171088	DESIGN
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9997103405733435	WITHOUT_CLASSIFICATION	2.8965942665650597E-4	DESIGN
must be a public method	WITHOUT_CLASSIFICATION	0.9987164426164649	WITHOUT_CLASSIFICATION	0.0012835573835351048	DESIGN
must be a public class	WITHOUT_CLASSIFICATION	0.9982499846368793	WITHOUT_CLASSIFICATION	0.0017500153631207658	DESIGN
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999210230446721	WITHOUT_CLASSIFICATION	7.897695532788123E-5	DESIGN
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.6252067551039743	WITHOUT_CLASSIFICATION	0.37479324489602567	DESIGN
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9989544361943669	WITHOUT_CLASSIFICATION	0.0010455638056330646	DESIGN
no matching method found	WITHOUT_CLASSIFICATION	0.9985051274151311	WITHOUT_CLASSIFICATION	0.0014948725848688289	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9861900629941692	WITHOUT_CLASSIFICATION	0.013809937005830861	DESIGN
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9932875480487636	WITHOUT_CLASSIFICATION	0.0067124519512363505	DESIGN
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9989096314011254	WITHOUT_CLASSIFICATION	0.0010903685988745682	DESIGN
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9972648560681497	WITHOUT_CLASSIFICATION	0.002735143931850282	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996538588911591	WITHOUT_CLASSIFICATION	3.4614110884100756E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996538588911591	WITHOUT_CLASSIFICATION	3.4614110884100756E-4	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999480102357188	WITHOUT_CLASSIFICATION	5.198976428119079E-5	DESIGN
end class	WITHOUT_CLASSIFICATION	0.998327272438939	WITHOUT_CLASSIFICATION	0.0016727275610609483	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9861900629941692	WITHOUT_CLASSIFICATION	0.013809937005830861	DESIGN
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9998156391078091	WITHOUT_CLASSIFICATION	1.8436089219079293E-4	DESIGN
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9999149386612723	WITHOUT_CLASSIFICATION	8.506133872758257E-5	DESIGN
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9928723166471692	WITHOUT_CLASSIFICATION	0.007127683352830689	DESIGN
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9988635027919223	WITHOUT_CLASSIFICATION	0.0011364972080777271	DESIGN
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9992080280369976	WITHOUT_CLASSIFICATION	7.919719630024127E-4	DESIGN
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9992321909290443	WITHOUT_CLASSIFICATION	7.678090709557977E-4	DESIGN
package scope	WITHOUT_CLASSIFICATION	0.9994240663735142	WITHOUT_CLASSIFICATION	5.759336264857994E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998882553235894	WITHOUT_CLASSIFICATION	1.1174467641062686E-4	DESIGN
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9995352456843005	WITHOUT_CLASSIFICATION	4.6475431569954247E-4	DESIGN
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9608159037515894	WITHOUT_CLASSIFICATION	0.0391840962484106	DESIGN
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9997441815326688	WITHOUT_CLASSIFICATION	2.558184673313315E-4	DESIGN
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9998704384009878	WITHOUT_CLASSIFICATION	1.295615990121158E-4	DESIGN
get any included interfaces	WITHOUT_CLASSIFICATION	0.9991352437658172	WITHOUT_CLASSIFICATION	8.647562341828808E-4	DESIGN
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9992970057387139	WITHOUT_CLASSIFICATION	7.029942612859932E-4	DESIGN
statically initialized below	WITHOUT_CLASSIFICATION	0.9997131874692348	WITHOUT_CLASSIFICATION	2.8681253076524697E-4	DESIGN
finish class initializer	WITHOUT_CLASSIFICATION	0.9981334618397566	WITHOUT_CLASSIFICATION	0.0018665381602433722	DESIGN
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9995994522964805	WITHOUT_CLASSIFICATION	4.0054770351947435E-4	DESIGN
should not happen!	WITHOUT_CLASSIFICATION	0.9909650914535693	WITHOUT_CLASSIFICATION	0.009034908546430768	DESIGN
start class	WITHOUT_CLASSIFICATION	0.9994528033723747	WITHOUT_CLASSIFICATION	5.471966276253376E-4	DESIGN
make getter for handler	WITHOUT_CLASSIFICATION	0.9975444911179523	WITHOUT_CLASSIFICATION	0.002455508882047737	DESIGN
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9970383577690913	WITHOUT_CLASSIFICATION	0.002961642230908676	DESIGN
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9974850700675273	DESIGN	0.002514929932472707	WITHOUT_CLASSIFICATION
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9965393020936614	WITHOUT_CLASSIFICATION	0.003460697906338536	DESIGN
create static private method field	WITHOUT_CLASSIFICATION	0.9921442730870484	WITHOUT_CLASSIFICATION	0.00785572691295159	DESIGN
load static empty array	WITHOUT_CLASSIFICATION	0.9991970327343693	WITHOUT_CLASSIFICATION	8.029672656306834E-4	DESIGN
box arguments	WITHOUT_CLASSIFICATION	0.9998155353522183	WITHOUT_CLASSIFICATION	1.8446464778170104E-4	DESIGN
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9892680146559196	WITHOUT_CLASSIFICATION	0.010731985344080415	DESIGN
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9981149127730718	WITHOUT_CLASSIFICATION	0.0018850872269281528	DESIGN
do a void return	WITHOUT_CLASSIFICATION	0.9989740417379729	WITHOUT_CLASSIFICATION	0.0010259582620270856	DESIGN
utility methods	WITHOUT_CLASSIFICATION	0.9997399299521917	WITHOUT_CLASSIFICATION	2.600700478082329E-4	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9995958610150447	WITHOUT_CLASSIFICATION	4.0413898495518134E-4	DESIGN
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9962562443618799	WITHOUT_CLASSIFICATION	0.0037437556381201362	DESIGN
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9980228608483379	WITHOUT_CLASSIFICATION	0.0019771391516620416	DESIGN
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9996092202174899	WITHOUT_CLASSIFICATION	3.90779782510203E-4	DESIGN
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9994635814301073	WITHOUT_CLASSIFICATION	5.364185698927755E-4	DESIGN
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9985734915131116	WITHOUT_CLASSIFICATION	0.0014265084868884156	DESIGN
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9991865934082578	WITHOUT_CLASSIFICATION	8.134065917421274E-4	DESIGN
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9997716132034214	WITHOUT_CLASSIFICATION	2.2838679657857878E-4	DESIGN
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9987112847589946	WITHOUT_CLASSIFICATION	0.0012887152410053916	DESIGN
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.9999789544774718	WITHOUT_CLASSIFICATION	2.1045522528215093E-5	DESIGN
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9992537788791329	WITHOUT_CLASSIFICATION	7.462211208670982E-4	DESIGN
NUL	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9985417084611429	WITHOUT_CLASSIFICATION	0.001458291538857127	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999499077588763	WITHOUT_CLASSIFICATION	5.0092241123750125E-5	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9986477673365589	WITHOUT_CLASSIFICATION	0.001352232663441149	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9615420024672782	WITHOUT_CLASSIFICATION	0.03845799753272173	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9936975731076865	WITHOUT_CLASSIFICATION	0.006302426892313495	DESIGN
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9996290073412764	WITHOUT_CLASSIFICATION	3.709926587236272E-4	DESIGN
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9962005661346511	WITHOUT_CLASSIFICATION	0.003799433865348941	DESIGN
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9964541312300976	WITHOUT_CLASSIFICATION	0.003545868769902413	DESIGN
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9989677695957054	WITHOUT_CLASSIFICATION	0.0010322304042945645	DESIGN
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9247907919263001	WITHOUT_CLASSIFICATION	0.07520920807369984	DESIGN
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9961038206241808	WITHOUT_CLASSIFICATION	0.0038961793758192273	DESIGN
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9994884102551866	WITHOUT_CLASSIFICATION	5.115897448134336E-4	DESIGN
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.9999715578591818	WITHOUT_CLASSIFICATION	2.8442140818226532E-5	DESIGN
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9687057391925621	WITHOUT_CLASSIFICATION	0.03129426080743786	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9997477874783657	WITHOUT_CLASSIFICATION	2.5221252163432783E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9997477874783657	WITHOUT_CLASSIFICATION	2.5221252163432783E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9997477874783657	WITHOUT_CLASSIFICATION	2.5221252163432783E-4	DESIGN
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999091999773844	WITHOUT_CLASSIFICATION	9.080002261562412E-5	DESIGN
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9998229835926854	WITHOUT_CLASSIFICATION	1.770164073146709E-4	DESIGN
Single node in list	WITHOUT_CLASSIFICATION	0.9997270000967977	WITHOUT_CLASSIFICATION	2.729999032022726E-4	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9990169198967005	WITHOUT_CLASSIFICATION	9.83080103299455E-4	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9990169198967005	WITHOUT_CLASSIFICATION	9.83080103299455E-4	DESIGN
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9978530351923086	WITHOUT_CLASSIFICATION	0.0021469648076913525	DESIGN
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9918147121376508	WITHOUT_CLASSIFICATION	0.008185287862349226	DESIGN
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999323882511795	WITHOUT_CLASSIFICATION	6.761174882049139E-5	DESIGN
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9995086059411467	WITHOUT_CLASSIFICATION	4.913940588532784E-4	DESIGN
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9954881087363117	WITHOUT_CLASSIFICATION	0.004511891263688366	DESIGN
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998070951541003	WITHOUT_CLASSIFICATION	1.9290484589979943E-4	DESIGN
Last full line read.	WITHOUT_CLASSIFICATION	0.9992267755152993	WITHOUT_CLASSIFICATION	7.732244847007818E-4	DESIGN
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9997393611967812	WITHOUT_CLASSIFICATION	2.606388032188323E-4	DESIGN
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.999937133952339	WITHOUT_CLASSIFICATION	6.286604766102292E-5	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998880464023541	WITHOUT_CLASSIFICATION	1.1195359764591787E-4	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998880464023541	WITHOUT_CLASSIFICATION	1.1195359764591787E-4	DESIGN
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9998932589502624	WITHOUT_CLASSIFICATION	1.0674104973767733E-4	DESIGN
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9996591179606942	WITHOUT_CLASSIFICATION	3.408820393058665E-4	DESIGN
Single-quote fast path	WITHOUT_CLASSIFICATION	0.9994553352813418	WITHOUT_CLASSIFICATION	5.446647186581986E-4	DESIGN
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9996580064130663	WITHOUT_CLASSIFICATION	3.4199358693361235E-4	DESIGN
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9974681238715293	WITHOUT_CLASSIFICATION	0.0025318761284707247	DESIGN
just ignore	WITHOUT_CLASSIFICATION	0.9992053978832108	WITHOUT_CLASSIFICATION	7.946021167893052E-4	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9996640462384155	WITHOUT_CLASSIFICATION	3.3595376158449485E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9996643876300586	WITHOUT_CLASSIFICATION	3.356123699413502E-4	DESIGN
PUSH(1)	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
POP	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999795386927	WITHOUT_CLASSIFICATION	2.0461307300062027E-5	DESIGN
LEXPOP	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
SET_P	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9992392506409119	WITHOUT_CLASSIFICATION	7.60749359088185E-4	DESIGN
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9984870339644845	WITHOUT_CLASSIFICATION	0.001512966035515569	DESIGN
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9998502327914356	WITHOUT_CLASSIFICATION	1.4976720856450457E-4	DESIGN
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999154296680536	WITHOUT_CLASSIFICATION	8.457033194642775E-5	DESIGN
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999537058829417	WITHOUT_CLASSIFICATION	4.629411705820908E-5	DESIGN
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9991215523921252	WITHOUT_CLASSIFICATION	8.784476078749572E-4	DESIGN
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9997467459235534	WITHOUT_CLASSIFICATION	2.5325407644664205E-4	DESIGN
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9469123215997634	DESIGN	0.053087678400236676	WITHOUT_CLASSIFICATION
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9975931952071624	WITHOUT_CLASSIFICATION	0.002406804792837641	DESIGN
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9983939194684152	WITHOUT_CLASSIFICATION	0.0016060805315848271	DESIGN
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9945138748000871	WITHOUT_CLASSIFICATION	0.0054861251999128195	DESIGN
1.9 only	WITHOUT_CLASSIFICATION	0.9992291155455238	WITHOUT_CLASSIFICATION	7.708844544761912E-4	DESIGN
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9992241075565131	WITHOUT_CLASSIFICATION	7.7589244348681E-4	DESIGN
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9993307871242767	WITHOUT_CLASSIFICATION	6.69212875723249E-4	DESIGN
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.9994404720443717	WITHOUT_CLASSIFICATION	5.595279556283466E-4	DESIGN
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.9561326784850264	WITHOUT_CLASSIFICATION	0.04386732151497356	DESIGN
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.9996554900234101	WITHOUT_CLASSIFICATION	3.445099765899433E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
end of script.	WITHOUT_CLASSIFICATION	0.9999073542581468	WITHOUT_CLASSIFICATION	9.264574185323741E-5	DESIGN
white spaces	WITHOUT_CLASSIFICATION	0.9998200139348697	WITHOUT_CLASSIFICATION	1.7998606513026637E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
it's a comment	WITHOUT_CLASSIFICATION	0.9990449103240522	WITHOUT_CLASSIFICATION	9.550896759478422E-4	DESIGN
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9997909567435201	WITHOUT_CLASSIFICATION	2.0904325647984304E-4	DESIGN
$\: output record separator	WITHOUT_CLASSIFICATION	0.9997775624564612	WITHOUT_CLASSIFICATION	2.2243754353876385E-4	DESIGN
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9981564251836238	WITHOUT_CLASSIFICATION	0.0018435748163762628	DESIGN
documentation nodes	WITHOUT_CLASSIFICATION	0.9999545913797422	WITHOUT_CLASSIFICATION	4.540862025779065E-5	DESIGN
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9998125890310879	WITHOUT_CLASSIFICATION	1.874109689121986E-4	DESIGN
Just a plain bang	WITHOUT_CLASSIFICATION	0.9996801428602344	WITHOUT_CLASSIFICATION	3.198571397656135E-4	DESIGN
$_: last read line string	WITHOUT_CLASSIFICATION	0.999916468161759	WITHOUT_CLASSIFICATION	8.353183824091511E-5	DESIGN
$~: match-data	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
$: argv	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
$$: pid	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
$?: last status	WITHOUT_CLASSIFICATION	0.9997940184323204	WITHOUT_CLASSIFICATION	2.0598156767965414E-4	DESIGN
$!: error string	WITHOUT_CLASSIFICATION	0.9999464710580833	WITHOUT_CLASSIFICATION	5.352894191669576E-5	DESIGN
$@: error position	WITHOUT_CLASSIFICATION	0.9998486920005392	WITHOUT_CLASSIFICATION	1.5130799946085432E-4	DESIGN
$/: input record separator	WITHOUT_CLASSIFICATION	0.9994286550828322	WITHOUT_CLASSIFICATION	5.713449171678193E-4	DESIGN
$;: field separator	WITHOUT_CLASSIFICATION	0.9997586429017781	WITHOUT_CLASSIFICATION	2.41357098221981E-4	DESIGN
$,: output field separator	WITHOUT_CLASSIFICATION	0.9996068575979099	WITHOUT_CLASSIFICATION	3.9314240209010955E-4	DESIGN
$.: last read line number	WITHOUT_CLASSIFICATION	0.9998393648779877	WITHOUT_CLASSIFICATION	1.6063512201233427E-4	DESIGN
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
$:: load path	WITHOUT_CLASSIFICATION	0.9990505063744229	WITHOUT_CLASSIFICATION	9.494936255770641E-4	DESIGN
$<: reading filename	WITHOUT_CLASSIFICATION	0.9999289864569622	WITHOUT_CLASSIFICATION	7.101354303787616E-5	DESIGN
$": already loaded files	WITHOUT_CLASSIFICATION	0.9999262964455112	WITHOUT_CLASSIFICATION	7.370355448867402E-5	DESIGN
$&: last match	WITHOUT_CLASSIFICATION	0.9998945196787729	WITHOUT_CLASSIFICATION	1.0548032122713795E-4	DESIGN
$`: string before last match	WITHOUT_CLASSIFICATION	0.9999084742441477	WITHOUT_CLASSIFICATION	9.152575585227904E-5	DESIGN
$': string after last match	WITHOUT_CLASSIFICATION	0.999878877362564	WITHOUT_CLASSIFICATION	1.2112263743600582E-4	DESIGN
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999708475127698	WITHOUT_CLASSIFICATION	2.915248723024349E-5	DESIGN
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.9991012608553658	WITHOUT_CLASSIFICATION	8.987391446342755E-4	DESIGN
enum lex_state	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
block (primary)	WITHOUT_CLASSIFICATION	0.9998201818189011	WITHOUT_CLASSIFICATION	1.7981818109883164E-4	DESIGN
block (expr)	WITHOUT_CLASSIFICATION	0.9998201818189011	WITHOUT_CLASSIFICATION	1.7981818109883164E-4	DESIGN
hash	WITHOUT_CLASSIFICATION	0.9986752029795892	WITHOUT_CLASSIFICATION	0.0013247970204106842	DESIGN
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9945473554047758	WITHOUT_CLASSIFICATION	0.005452644595224172	DESIGN
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9063383446935246	WITHOUT_CLASSIFICATION	0.09366165530647538	DESIGN
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.999964252854716	WITHOUT_CLASSIFICATION	3.574714528399472E-5	DESIGN
hexadecimal	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
binary	WITHOUT_CLASSIFICATION	0.9992927064491047	WITHOUT_CLASSIFICATION	7.072935508952189E-4	DESIGN
decimal	WITHOUT_CLASSIFICATION	0.9984420796652819	WITHOUT_CLASSIFICATION	0.0015579203347181375	DESIGN
Octal	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.9997145759317043	WITHOUT_CLASSIFICATION	2.8542406829562046E-4	DESIGN
backslash	WITHOUT_CLASSIFICATION	0.9986249553883355	WITHOUT_CLASSIFICATION	0.0013750446116645226	DESIGN
newline	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
horizontal tab	WITHOUT_CLASSIFICATION	0.9997890555935497	WITHOUT_CLASSIFICATION	2.109444064502284E-4	DESIGN
form feed	WITHOUT_CLASSIFICATION	0.9990703717921658	WITHOUT_CLASSIFICATION	9.296282078341598E-4	DESIGN
vertical tab	WITHOUT_CLASSIFICATION	0.9997850601389336	WITHOUT_CLASSIFICATION	2.149398610663534E-4	DESIGN
alarm(bell)	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
escape	WITHOUT_CLASSIFICATION	0.9993193779226905	WITHOUT_CLASSIFICATION	6.806220773094979E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9996643876300586	WITHOUT_CLASSIFICATION	3.356123699413502E-4	DESIGN
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9997777895895532	WITHOUT_CLASSIFICATION	2.2221041044673078E-4	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999539643741012	WITHOUT_CLASSIFICATION	4.603562589874741E-5	DESIGN
space	WITHOUT_CLASSIFICATION	0.9997637010561622	WITHOUT_CLASSIFICATION	2.3629894383793082E-4	DESIGN
Where we started this marker match	WITHOUT_CLASSIFICATION	0.9955351453783384	WITHOUT_CLASSIFICATION	0.004464854621661629	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998431035612088	WITHOUT_CLASSIFICATION	1.568964387912618E-4	DESIGN
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9987793726264869	WITHOUT_CLASSIFICATION	0.0012206273735131431	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999539643741012	WITHOUT_CLASSIFICATION	4.603562589874741E-5	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.7402687602271233	WITHOUT_CLASSIFICATION	0.2597312397728767	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.7402687602271233	WITHOUT_CLASSIFICATION	0.2597312397728767	DESIGN
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9986099294875248	WITHOUT_CLASSIFICATION	0.0013900705124752046	DESIGN
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9987479734890266	WITHOUT_CLASSIFICATION	0.001252026510973448	DESIGN
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9958532259303164	WITHOUT_CLASSIFICATION	0.004146774069683598	DESIGN
Character read before previous read	WITHOUT_CLASSIFICATION	0.9990426728289005	WITHOUT_CLASSIFICATION	9.573271710994871E-4	DESIGN
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9951534483942784	WITHOUT_CLASSIFICATION	0.00484655160572162	DESIGN
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.9855244603748855	DESIGN	0.014475539625114546	WITHOUT_CLASSIFICATION
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9966432473175622	WITHOUT_CLASSIFICATION	0.0033567526824379175	DESIGN
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9886944794013696	WITHOUT_CLASSIFICATION	0.011305520598630398	DESIGN
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9992834610734779	WITHOUT_CLASSIFICATION	7.165389265221624E-4	DESIGN
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9995457571698733	WITHOUT_CLASSIFICATION	4.54242830126761E-4	DESIGN
this set is only for darwin	WITHOUT_CLASSIFICATION	0.9967285218369153	WITHOUT_CLASSIFICATION	0.0032714781630846378	DESIGN
DigestLibrary	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9461903438823496	WITHOUT_CLASSIFICATION	0.053809656117650435	DESIGN
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.963025937798643	WITHOUT_CLASSIFICATION	0.036974062201356975	DESIGN
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9997865082128286	WITHOUT_CLASSIFICATION	2.1349178717153982E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
line 329	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9987062360992769	WITHOUT_CLASSIFICATION	0.0012937639007231025	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9997234628135592	WITHOUT_CLASSIFICATION	2.7653718644081427E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9920548767068192	WITHOUT_CLASSIFICATION	0.007945123293180851	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996093719272467	WITHOUT_CLASSIFICATION	3.906280727532423E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9994669826197178	WITHOUT_CLASSIFICATION	5.330173802822616E-4	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9994872840128509	WITHOUT_CLASSIFICATION	5.127159871491123E-4	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.9997676563987812	WITHOUT_CLASSIFICATION	2.3234360121875456E-4	DESIGN
line 271	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 274	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 303	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 311	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 314	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 317	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 332	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 338	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 341	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 344	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 358	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 367	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 378	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 407	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 411	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 414	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 434	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 443	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 446	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 452	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 457	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 464	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 467	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 470	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 479	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 484	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 492	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 498	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 501	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 504	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 507	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 510	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 519	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 525	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 556	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 559	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 563	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 569	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 575	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 578	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 587	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 596	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 604	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 607	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 613	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 616	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 634	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 638	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 643	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 646	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 655	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 660	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 667	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 670	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 701	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 717	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 720	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 726	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 729	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 735	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 738	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 751	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 754	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 757	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 760	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 763	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 769	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 775	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 797	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 803	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 806	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 809	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 815	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 818	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 821	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 824	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 830	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 833	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 836	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 852	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 858	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 861	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 868	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 871	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 876	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 879	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 883	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 903	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 907	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 915	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 920	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 923	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 926	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 936	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 940	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 948	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 956	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 964	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 967	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 978	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 984	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 986	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 996	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1001	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1008	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1014	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1029	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1032	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1034	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1045	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1048	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1051	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1058	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1070	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1073	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1076	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1079	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1082	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1089	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1100	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1103	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1107	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1113	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1115	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1119	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1135	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1137	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1151	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1154	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1164	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1175	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1178	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1187	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1189	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1193	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1214	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1234	WITHOUT_CLASSIFICATION	0.9988731274894433	WITHOUT_CLASSIFICATION	0.0011268725105566977	DESIGN
line 1239	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1243	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1263	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1269	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1280	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1283	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1290	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1296	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1299	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1302	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1309	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1313	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1315	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1328	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1335	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1352	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1358	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1374	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1381	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1415	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1431	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1434	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1440	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1443	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1453	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1465	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1477	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1480	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1485	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1488	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1510	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1516	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1533	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1550	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1553	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1556	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1565	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1568	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1571	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1574	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1577	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1587	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1600	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1609	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1623	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1626	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1638	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1641	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1644	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1649	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1655	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1658	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1661	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1672	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1677	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1687	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1694	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1733	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1745	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1757	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1769	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1775	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1784	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1808	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1814	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9992192199451012	WITHOUT_CLASSIFICATION	7.807800548988597E-4	DESIGN
XXX 0;	WITHOUT_CLASSIFICATION	0.9988205730998015	WITHOUT_CLASSIFICATION	0.0011794269001984827	DESIGN
$$ = $3;	WITHOUT_CLASSIFICATION	0.9993047173326463	WITHOUT_CLASSIFICATION	6.952826673537382E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9982581640905936	WITHOUT_CLASSIFICATION	0.0017418359094063616	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9913714197820233	WITHOUT_CLASSIFICATION	0.00862858021797682	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9916005981467718	WITHOUT_CLASSIFICATION	0.008399401853228277	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.964961602342073	WITHOUT_CLASSIFICATION	0.03503839765792709	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.964961602342073	WITHOUT_CLASSIFICATION	0.03503839765792709	DESIGN
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9993401972451246	WITHOUT_CLASSIFICATION	6.598027548753843E-4	DESIGN
mirko: check	WITHOUT_CLASSIFICATION	0.9998668547817904	WITHOUT_CLASSIFICATION	1.331452182096141E-4	DESIGN
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9884658055751252	WITHOUT_CLASSIFICATION	0.01153419442487492	DESIGN
line 529	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
XXX	WITHOUT_CLASSIFICATION	0.9987333087865233	WITHOUT_CLASSIFICATION	0.001266691213476604	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9999644753075253	WITHOUT_CLASSIFICATION	3.552469247466308E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9994690882241497	WITHOUT_CLASSIFICATION	5.309117758502873E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9991013984460745	WITHOUT_CLASSIFICATION	8.986015539253696E-4	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9992473052886652	WITHOUT_CLASSIFICATION	7.526947113347645E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991286205623384	WITHOUT_CLASSIFICATION	8.713794376614742E-4	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9987062360992769	WITHOUT_CLASSIFICATION	0.0012937639007231025	DESIGN
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9997537350938729	WITHOUT_CLASSIFICATION	2.4626490612711816E-4	DESIGN
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999676360803996	WITHOUT_CLASSIFICATION	3.236391960038581E-5	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998917769875064	WITHOUT_CLASSIFICATION	1.0822301249354463E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998917769875064	WITHOUT_CLASSIFICATION	1.0822301249354463E-4	DESIGN
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999859573967748	WITHOUT_CLASSIFICATION	1.4042603225102033E-5	DESIGN
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9849080926233397	WITHOUT_CLASSIFICATION	0.015091907376660298	DESIGN
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9990802784172956	WITHOUT_CLASSIFICATION	9.197215827043112E-4	DESIGN
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9938030263727093	WITHOUT_CLASSIFICATION	0.006196973627290724	DESIGN
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9658052476159028	WITHOUT_CLASSIFICATION	0.034194752384097186	DESIGN
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9996910193261199	WITHOUT_CLASSIFICATION	3.0898067388004165E-4	DESIGN
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9995727627448615	WITHOUT_CLASSIFICATION	4.272372551385647E-4	DESIGN
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9990722298644478	WITHOUT_CLASSIFICATION	9.277701355523339E-4	DESIGN
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9928713265127077	WITHOUT_CLASSIFICATION	0.007128673487292315	DESIGN
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9991310963390964	WITHOUT_CLASSIFICATION	8.689036609035439E-4	DESIGN
Parser states:	WITHOUT_CLASSIFICATION	0.999420403155784	WITHOUT_CLASSIFICATION	5.795968442160787E-4	DESIGN
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9987406054622717	WITHOUT_CLASSIFICATION	0.00125939453772828	DESIGN
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.7141387030947622	WITHOUT_CLASSIFICATION	0.28586129690523765	DESIGN
LOCALVAR	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
CONSTANT	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9970706913221548	WITHOUT_CLASSIFICATION	0.002929308677845208	DESIGN
MRI: block_append	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.9991907891193353	WITHOUT_CLASSIFICATION	8.09210880664712E-4	DESIGN
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9992217345845574	WITHOUT_CLASSIFICATION	7.782654154426183E-4	DESIGN
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9992800490682172	WITHOUT_CLASSIFICATION	7.199509317828229E-4	DESIGN
Node	WITHOUT_CLASSIFICATION	0.9982408666864225	WITHOUT_CLASSIFICATION	0.0017591333135774608	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9683409656095926	DESIGN	0.031659034390407494	WITHOUT_CLASSIFICATION
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9997953310120556	WITHOUT_CLASSIFICATION	2.0466898794437274E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9683409656095926	DESIGN	0.031659034390407494	WITHOUT_CLASSIFICATION
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9997953310120556	WITHOUT_CLASSIFICATION	2.0466898794437274E-4	DESIGN
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9997953310120556	WITHOUT_CLASSIFICATION	2.0466898794437274E-4	DESIGN
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.6601599968383133	WITHOUT_CLASSIFICATION	0.3398400031616866	DESIGN
MRI: range_op	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999309609008141	WITHOUT_CLASSIFICATION	6.903909918588782E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9962394546269915	WITHOUT_CLASSIFICATION	0.0037605453730086055	DESIGN
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9979001635349181	WITHOUT_CLASSIFICATION	0.0020998364650819602	DESIGN
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9995942326778037	WITHOUT_CLASSIFICATION	4.0576732219632444E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9997234628135592	WITHOUT_CLASSIFICATION	2.7653718644081427E-4	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996093719272467	WITHOUT_CLASSIFICATION	3.906280727532423E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9994669826197178	WITHOUT_CLASSIFICATION	5.330173802822616E-4	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9994872840128509	WITHOUT_CLASSIFICATION	5.127159871491123E-4	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.9997676563987812	WITHOUT_CLASSIFICATION	2.3234360121875456E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 280	WITHOUT_CLASSIFICATION	0.998893123693253	WITHOUT_CLASSIFICATION	0.0011068763067469457	DESIGN
line 283	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 296	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 324	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 327	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 331	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 333	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 336	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 342	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 345	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 348	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 354	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 368	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 377	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 388	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 392	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 397	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 429	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 432	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 436	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 445	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 448	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 454	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 459	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 466	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 469	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 478	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 481	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 488	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 494	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 497	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 503	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 506	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 509	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 512	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 521	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 526	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 534	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 549	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 552	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 558	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 561	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 571	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 574	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 579	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 586	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 589	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 592	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 595	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 598	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 623	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 627	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 630	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 633	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 639	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 648	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 657	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 661	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 666	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 678	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 682	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 688	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 699	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 706	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 708	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 727	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 737	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 753	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 779	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 801	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 808	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 811	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 817	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 820	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 826	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 829	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 832	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 851	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 857	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 860	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 863	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 866	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 869	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 875	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 884	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 887	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 890	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 902	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 909	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 912	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 916	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 922	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 928	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 941	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 947	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 951	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 955	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 965	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 969	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 977	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 983	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1013	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1023	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1035	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1041	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1043	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1054	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1057	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1060	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1069	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1075	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1078	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1084	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1087	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1090	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1093	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1114	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1116	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1118	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1124	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1126	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1138	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1144	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1149	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1155	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1162	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1173	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1179	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1182	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1190	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1196	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1213	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1217	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1231	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1236	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1244	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1254	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1258	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1264	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1270	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1273	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1276	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1279	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1282	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1289	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1292	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1295	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1298	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1305	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1308	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1311	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1317	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1323	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1326	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1329	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1337	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1342	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1345	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1354	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1359	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1366	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1369	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1373	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1377	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1383	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1399	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1401	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1406	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1417	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1424	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1427	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1430	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1433	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1436	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1442	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1445	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1458	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1464	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1489	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1493	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1507	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1519	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1532	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1538	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1542	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1557	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1573	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1591	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1607	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1610	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1622	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1625	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1636	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1639	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1647	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1651	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1657	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1660	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1663	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1678	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1702	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1711	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1719	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1722	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1731	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1734	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1738	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1746	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1756	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1758	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1761	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1767	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1776	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1782	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1785	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1788	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1791	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1797	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1800	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1803	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1806	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1809	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1815	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1825	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1828	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1831	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1847	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.964961602342073	WITHOUT_CLASSIFICATION	0.03503839765792709	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.964961602342073	WITHOUT_CLASSIFICATION	0.03503839765792709	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9999644753075253	WITHOUT_CLASSIFICATION	3.552469247466308E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9994690882241497	WITHOUT_CLASSIFICATION	5.309117758502873E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9991013984460745	WITHOUT_CLASSIFICATION	8.986015539253696E-4	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
line 1854	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1869	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1872	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1877	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1886	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1898	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1902	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1905	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1911	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1918	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1935	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1938	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1942	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1948	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1960	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1963	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1968	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1972	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1982	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1995	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 2000	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 2006	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 2010	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9999371619246281	WITHOUT_CLASSIFICATION	6.283807537195736E-5	DESIGN
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9996259802592543	WITHOUT_CLASSIFICATION	3.7401974074562284E-4	DESIGN
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.999490918960939	WITHOUT_CLASSIFICATION	5.09081039060985E-4	DESIGN
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9997200112141708	WITHOUT_CLASSIFICATION	2.799887858291667E-4	DESIGN
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9994384924189985	WITHOUT_CLASSIFICATION	5.615075810014946E-4	DESIGN
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9997233544651632	WITHOUT_CLASSIFICATION	2.766455348367634E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991286205623384	WITHOUT_CLASSIFICATION	8.713794376614742E-4	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9987062360992769	WITHOUT_CLASSIFICATION	0.0012937639007231025	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998917769875064	WITHOUT_CLASSIFICATION	1.0822301249354463E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998917769875064	WITHOUT_CLASSIFICATION	1.0822301249354463E-4	DESIGN
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9994293753022577	WITHOUT_CLASSIFICATION	5.706246977422235E-4	DESIGN
was $$ = null;	WITHOUT_CLASSIFICATION	0.9996706555285931	WITHOUT_CLASSIFICATION	3.293444714068395E-4	DESIGN
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9993507974092317	WITHOUT_CLASSIFICATION	6.492025907683804E-4	DESIGN
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9997537350938729	WITHOUT_CLASSIFICATION	2.4626490612711816E-4	DESIGN
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9996366424497637	WITHOUT_CLASSIFICATION	3.633575502362915E-4	DESIGN
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999589694050116	WITHOUT_CLASSIFICATION	4.103059498845168E-5	DESIGN
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9231029307057961	WITHOUT_CLASSIFICATION	0.076897069294204	DESIGN
Live reference to module	WITHOUT_CLASSIFICATION	0.9982214206770644	WITHOUT_CLASSIFICATION	0.0017785793229355771	DESIGN
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9997444283051743	WITHOUT_CLASSIFICATION	2.555716948257724E-4	DESIGN
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9998591433501008	WITHOUT_CLASSIFICATION	1.408566498991368E-4	DESIGN
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9981886528411779	WITHOUT_CLASSIFICATION	0.0018113471588221733	DESIGN
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9969748694445436	WITHOUT_CLASSIFICATION	0.0030251305554563367	DESIGN
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9887392546883668	WITHOUT_CLASSIFICATION	0.011260745311633187	DESIGN
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999788869547402	WITHOUT_CLASSIFICATION	2.1113045259690855E-5	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9989002037007815	WITHOUT_CLASSIFICATION	0.0010997962992185632	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9989002037007815	WITHOUT_CLASSIFICATION	0.0010997962992185632	DESIGN
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.9978134446251757	WITHOUT_CLASSIFICATION	0.002186555374824354	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9996948330233963	WITHOUT_CLASSIFICATION	3.0516697660364523E-4	DESIGN
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9992894649022706	WITHOUT_CLASSIFICATION	7.105350977294276E-4	DESIGN
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9986303199250419	WITHOUT_CLASSIFICATION	0.0013696800749579744	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998216577406823	WITHOUT_CLASSIFICATION	1.7834225931771138E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9982243333063179	WITHOUT_CLASSIFICATION	0.0017756666936821937	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9998691505886457	WITHOUT_CLASSIFICATION	1.3084941135434034E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9982243333063179	WITHOUT_CLASSIFICATION	0.0017756666936821937	DESIGN
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999565010789703	WITHOUT_CLASSIFICATION	4.349892102978102E-5	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9692766544148371	WITHOUT_CLASSIFICATION	0.03072334558516284	DESIGN
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.5041811839015982	WITHOUT_CLASSIFICATION	0.49581881609840195	DESIGN
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.6146956792644268	WITHOUT_CLASSIFICATION	0.38530432073557314	DESIGN
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9875874091565354	WITHOUT_CLASSIFICATION	0.012412590843464513	DESIGN
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9875874091565354	WITHOUT_CLASSIFICATION	0.012412590843464513	DESIGN
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.992994669648673	WITHOUT_CLASSIFICATION	0.007005330351326944	DESIGN
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999737435940177	WITHOUT_CLASSIFICATION	2.6256405982292094E-4	DESIGN
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9996726387030813	WITHOUT_CLASSIFICATION	3.2736129691868763E-4	DESIGN
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.9944704112235181	DESIGN	0.005529588776481904	WITHOUT_CLASSIFICATION
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.7635375865700706	DESIGN	0.23646241342992938	WITHOUT_CLASSIFICATION
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9851949762990537	WITHOUT_CLASSIFICATION	0.014805023700946305	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999677612196723	WITHOUT_CLASSIFICATION	3.2238780327679885E-5	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999677612196723	WITHOUT_CLASSIFICATION	3.2238780327679885E-5	DESIGN
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9983652198675724	WITHOUT_CLASSIFICATION	0.0016347801324276116	DESIGN
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998986892918208	WITHOUT_CLASSIFICATION	1.013107081791488E-4	DESIGN
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9987332177682893	WITHOUT_CLASSIFICATION	0.0012667822317107415	DESIGN
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9984892941636418	WITHOUT_CLASSIFICATION	0.0015107058363581685	DESIGN
required and optional only	WITHOUT_CLASSIFICATION	0.9999004594105092	WITHOUT_CLASSIFICATION	9.954058949070146E-5	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9982243333063179	WITHOUT_CLASSIFICATION	0.0017756666936821937	DESIGN
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9964191852316829	WITHOUT_CLASSIFICATION	0.0035808147683170106	DESIGN
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.99998450147331	WITHOUT_CLASSIFICATION	1.5498526690017927E-5	DESIGN
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9994275557897293	WITHOUT_CLASSIFICATION	5.724442102707299E-4	DESIGN
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9964191852316829	WITHOUT_CLASSIFICATION	0.0035808147683170106	DESIGN
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999806928741544	WITHOUT_CLASSIFICATION	1.9307125845577997E-5	DESIGN
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9998964288866691	WITHOUT_CLASSIFICATION	1.0357111333095348E-4	DESIGN
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999239343819013	WITHOUT_CLASSIFICATION	7.606561809876423E-5	DESIGN
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9968427962880946	WITHOUT_CLASSIFICATION	0.003157203711905408	DESIGN
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.9937009639413013	DESIGN	0.006299036058698722	WITHOUT_CLASSIFICATION
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9939703158034018	WITHOUT_CLASSIFICATION	0.006029684196598156	DESIGN
No argument blocks	WITHOUT_CLASSIFICATION	0.9999920019327229	WITHOUT_CLASSIFICATION	7.998067277087117E-6	DESIGN
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9988636796430185	WITHOUT_CLASSIFICATION	0.0011363203569814365	DESIGN
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.7809633475558574	WITHOUT_CLASSIFICATION	0.21903665244414267	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995297637450788	WITHOUT_CLASSIFICATION	4.7023625492113635E-4	DESIGN
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9203220481875233	WITHOUT_CLASSIFICATION	0.07967795181247676	DESIGN
Highest reserved id	WITHOUT_CLASSIFICATION	0.9997531329637671	WITHOUT_CLASSIFICATION	2.4686703623285694E-4	DESIGN
binary typed calls	WITHOUT_CLASSIFICATION	0.99991573491471	WITHOUT_CLASSIFICATION	8.426508529001886E-5	DESIGN
id must always be even	WITHOUT_CLASSIFICATION	0.997120691338466	WITHOUT_CLASSIFICATION	0.0028793086615340768	DESIGN
with block pass	WITHOUT_CLASSIFICATION	0.9998489196947583	WITHOUT_CLASSIFICATION	1.5108030524165907E-4	DESIGN
no block	WITHOUT_CLASSIFICATION	0.9994156638785923	WITHOUT_CLASSIFICATION	5.843361214076302E-4	DESIGN
with block literal (iter)	WITHOUT_CLASSIFICATION	0.9994598764257386	WITHOUT_CLASSIFICATION	5.401235742613972E-4	DESIGN
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9802854017858246	WITHOUT_CLASSIFICATION	0.019714598214175323	DESIGN
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.9769379420617443	WITHOUT_CLASSIFICATION	0.023062057938255654	DESIGN
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9994792603722664	WITHOUT_CLASSIFICATION	5.207396277334657E-4	DESIGN
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9994158138121617	WITHOUT_CLASSIFICATION	5.841861878383745E-4	DESIGN
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9998249841557258	WITHOUT_CLASSIFICATION	1.7501584427413066E-4	DESIGN
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9885087793152865	WITHOUT_CLASSIFICATION	0.011491220684713576	DESIGN
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9993464148463943	WITHOUT_CLASSIFICATION	6.53585153605659E-4	DESIGN
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9980345536851999	WITHOUT_CLASSIFICATION	0.001965446314800135	DESIGN
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9983106928476335	WITHOUT_CLASSIFICATION	0.0016893071523664956	DESIGN
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9982370293879306	WITHOUT_CLASSIFICATION	0.001762970612069544	DESIGN
Lastline	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9994803410940337	WITHOUT_CLASSIFICATION	5.196589059663443E-4	DESIGN
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.998520200927921	WITHOUT_CLASSIFICATION	0.0014797990720789057	DESIGN
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9998556844104194	WITHOUT_CLASSIFICATION	1.4431558958054913E-4	DESIGN
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9991819303789996	WITHOUT_CLASSIFICATION	8.180696210003286E-4	DESIGN
Some helper functions:	WITHOUT_CLASSIFICATION	0.9992075804056066	WITHOUT_CLASSIFICATION	7.924195943932713E-4	DESIGN
silently ignore	WITHOUT_CLASSIFICATION	0.9995901793305141	WITHOUT_CLASSIFICATION	4.09820669486009E-4	DESIGN
used by compiler	WITHOUT_CLASSIFICATION	0.9883615880486081	WITHOUT_CLASSIFICATION	0.011638411951391994	DESIGN
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9997976625447199	WITHOUT_CLASSIFICATION	2.0233745528003554E-4	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999257444050238	WITHOUT_CLASSIFICATION	7.425559497621089E-4	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9996584834733266	WITHOUT_CLASSIFICATION	3.4151652667335644E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9985417084611429	WITHOUT_CLASSIFICATION	0.001458291538857127	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999499077588763	WITHOUT_CLASSIFICATION	5.0092241123750125E-5	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9692766544148371	WITHOUT_CLASSIFICATION	0.03072334558516284	DESIGN
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9897343162676471	WITHOUT_CLASSIFICATION	0.01026568373235291	DESIGN
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9927010432656044	WITHOUT_CLASSIFICATION	0.007298956734395535	DESIGN
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9995522717499075	WITHOUT_CLASSIFICATION	4.4772825009254665E-4	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9997049490886339	WITHOUT_CLASSIFICATION	2.9505091136594575E-4	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9997049490886339	WITHOUT_CLASSIFICATION	2.9505091136594575E-4	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998283274249982	WITHOUT_CLASSIFICATION	1.716725750017288E-4	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998283274249982	WITHOUT_CLASSIFICATION	1.716725750017288E-4	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998283274249982	WITHOUT_CLASSIFICATION	1.716725750017288E-4	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9990576451815917	WITHOUT_CLASSIFICATION	9.42354818408265E-4	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9990576451815917	WITHOUT_CLASSIFICATION	9.42354818408265E-4	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9994953952577935	WITHOUT_CLASSIFICATION	5.046047422065175E-4	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9994953952577935	WITHOUT_CLASSIFICATION	5.046047422065175E-4	DESIGN
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9959858610375836	WITHOUT_CLASSIFICATION	0.004014138962416422	DESIGN
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9591691894582427	WITHOUT_CLASSIFICATION	0.04083081054175732	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9976095675749826	WITHOUT_CLASSIFICATION	0.0023904324250173382	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9976095675749826	WITHOUT_CLASSIFICATION	0.0023904324250173382	DESIGN
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9990955385220113	WITHOUT_CLASSIFICATION	9.044614779888599E-4	DESIGN
retrieve method module name	WITHOUT_CLASSIFICATION	0.9966851508634894	WITHOUT_CLASSIFICATION	0.0033148491365106005	DESIGN
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9988823071059676	WITHOUT_CLASSIFICATION	0.001117692894032406	DESIGN
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9996145182235042	WITHOUT_CLASSIFICATION	3.854817764957603E-4	DESIGN
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9982198474051195	WITHOUT_CLASSIFICATION	0.0017801525948805351	DESIGN
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9985397392392111	WITHOUT_CLASSIFICATION	0.0014602607607888123	DESIGN
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9997515621563837	WITHOUT_CLASSIFICATION	2.484378436162921E-4	DESIGN
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.999280387788252	WITHOUT_CLASSIFICATION	7.19612211747982E-4	DESIGN
caller	WITHOUT_CLASSIFICATION	0.9989246491549276	WITHOUT_CLASSIFICATION	0.0010753508450723663	DESIGN
calltype block	WITHOUT_CLASSIFICATION	0.9998201818189011	WITHOUT_CLASSIFICATION	1.7981818109883164E-4	DESIGN
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.999966842444069	WITHOUT_CLASSIFICATION	3.315755593107566E-5	DESIGN
load arity for check	WITHOUT_CLASSIFICATION	0.9996572920917455	WITHOUT_CLASSIFICATION	3.42707908254568E-4	DESIGN
throw	WITHOUT_CLASSIFICATION	0.9967177511539819	WITHOUT_CLASSIFICATION	0.0032822488460181013	DESIGN
load arity for error	WITHOUT_CLASSIFICATION	0.9995140244597054	WITHOUT_CLASSIFICATION	4.8597554029467015E-4	DESIGN
arity ok, continue	WITHOUT_CLASSIFICATION	0.9998137154117378	WITHOUT_CLASSIFICATION	1.8628458826210596E-4	DESIGN
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9975001936734201	WITHOUT_CLASSIFICATION	0.0024998063265799244	DESIGN
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
InvocationCallback	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999400538804083	WITHOUT_CLASSIFICATION	5.994611959156067E-5	DESIGN
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998002877740941	WITHOUT_CLASSIFICATION	1.9971222590596633E-4	DESIGN
load the encoding	WITHOUT_CLASSIFICATION	0.9998027741949903	WITHOUT_CLASSIFICATION	1.9722580500966788E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9989050798944583	WITHOUT_CLASSIFICATION	0.0010949201055417191	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9989050798944583	WITHOUT_CLASSIFICATION	0.0010949201055417191	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9989050798944583	WITHOUT_CLASSIFICATION	0.0010949201055417191	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9989895539710227	WITHOUT_CLASSIFICATION	0.0010104460289772428	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9989895539710227	WITHOUT_CLASSIFICATION	0.0010104460289772428	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9989895539710227	WITHOUT_CLASSIFICATION	0.0010104460289772428	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9989895539710227	WITHOUT_CLASSIFICATION	0.0010104460289772428	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9989895539710227	WITHOUT_CLASSIFICATION	0.0010104460289772428	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9986570904618323	WITHOUT_CLASSIFICATION	0.0013429095381677196	DESIGN
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
ThreadContext	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9996673857339705	WITHOUT_CLASSIFICATION	3.326142660294467E-4	DESIGN
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9995772834048465	WITHOUT_CLASSIFICATION	4.2271659515346504E-4	DESIGN
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9997870434535703	WITHOUT_CLASSIFICATION	2.1295654642967848E-4	DESIGN
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9988554226008775	WITHOUT_CLASSIFICATION	0.0011445773991225294	DESIGN
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9991967872017472	WITHOUT_CLASSIFICATION	8.032127982526983E-4	DESIGN
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9885720737852708	WITHOUT_CLASSIFICATION	0.01142792621472912	DESIGN
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.5123339574900356	WITHOUT_CLASSIFICATION	0.4876660425099643	DESIGN
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9996962503229817	WITHOUT_CLASSIFICATION	3.037496770183073E-4	DESIGN
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999923621326504	WITHOUT_CLASSIFICATION	7.637867349616137E-6	DESIGN
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9978248651367966	WITHOUT_CLASSIFICATION	0.002175134863203368	DESIGN
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9907649690698324	WITHOUT_CLASSIFICATION	0.00923503093016771	DESIGN
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9992931243630582	WITHOUT_CLASSIFICATION	7.068756369419052E-4	DESIGN
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9964108462564825	WITHOUT_CLASSIFICATION	0.0035891537435174476	DESIGN
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9998164859320329	WITHOUT_CLASSIFICATION	1.8351406796709947E-4	DESIGN
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9867226436236328	WITHOUT_CLASSIFICATION	0.013277356376367268	DESIGN
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9980257171664705	WITHOUT_CLASSIFICATION	0.0019742828335295296	DESIGN
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9991661866500838	WITHOUT_CLASSIFICATION	8.338133499162032E-4	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9998691505886457	WITHOUT_CLASSIFICATION	1.3084941135434034E-4	DESIGN
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.7575838468340925	WITHOUT_CLASSIFICATION	0.24241615316590745	DESIGN
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.8712194832835781	WITHOUT_CLASSIFICATION	0.12878051671642177	DESIGN
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999681916332582	WITHOUT_CLASSIFICATION	3.180836674176865E-5	DESIGN
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9990237409040715	WITHOUT_CLASSIFICATION	9.762590959283344E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9977457028392817	WITHOUT_CLASSIFICATION	0.0022542971607183164	DESIGN
extension extensions	WITHOUT_CLASSIFICATION	0.9992003680338608	WITHOUT_CLASSIFICATION	7.996319661392116E-4	DESIGN
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.998995242672158	WITHOUT_CLASSIFICATION	0.0010047573278420489	DESIGN
try all extensions	WITHOUT_CLASSIFICATION	0.9998983808510267	WITHOUT_CLASSIFICATION	1.0161914897334034E-4	DESIGN
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9998095547785335	WITHOUT_CLASSIFICATION	1.9044522146643682E-4	DESIGN
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9989296224822011	WITHOUT_CLASSIFICATION	0.0010703775177989825	DESIGN
try only literal search	WITHOUT_CLASSIFICATION	0.9998701237529161	WITHOUT_CLASSIFICATION	1.298762470839452E-4	DESIGN
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9924941282781731	WITHOUT_CLASSIFICATION	0.0075058717218270095	DESIGN
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998711265453097	WITHOUT_CLASSIFICATION	1.2887345469020245E-4	DESIGN
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9979765580470267	WITHOUT_CLASSIFICATION	0.0020234419529733725	DESIGN
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.988909375776692	WITHOUT_CLASSIFICATION	0.011090624223307987	DESIGN
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999990471925391	WITHOUT_CLASSIFICATION	9.528074609388277E-7	DESIGN
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9996527120577203	WITHOUT_CLASSIFICATION	3.472879422797606E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998883809989885	WITHOUT_CLASSIFICATION	1.116190010114522E-4	DESIGN
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9987218002457057	WITHOUT_CLASSIFICATION	0.0012781997542943779	DESIGN
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.99974320298659	WITHOUT_CLASSIFICATION	2.567970134100769E-4	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9991522310850526	WITHOUT_CLASSIFICATION	8.477689149474513E-4	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9991522310850526	WITHOUT_CLASSIFICATION	8.477689149474513E-4	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9964916951195883	WITHOUT_CLASSIFICATION	0.0035083048804117477	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9964916951195883	WITHOUT_CLASSIFICATION	0.0035083048804117477	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9994501594430425	WITHOUT_CLASSIFICATION	5.498405569574292E-4	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9994501594430425	WITHOUT_CLASSIFICATION	5.498405569574292E-4	DESIGN
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9994288396483542	WITHOUT_CLASSIFICATION	5.711603516458545E-4	DESIGN
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9992500035679439	WITHOUT_CLASSIFICATION	7.499964320559905E-4	DESIGN
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9992655453653266	WITHOUT_CLASSIFICATION	7.344546346733517E-4	DESIGN
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999329699595035	WITHOUT_CLASSIFICATION	6.703004049645404E-5	DESIGN
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9951422058675178	WITHOUT_CLASSIFICATION	0.004857794132482182	DESIGN
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9728736626702967	WITHOUT_CLASSIFICATION	0.027126337329703286	DESIGN
signed short, native	WITHOUT_CLASSIFICATION	0.9997175825391587	WITHOUT_CLASSIFICATION	2.82417460841277E-4	DESIGN
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999840499520842	WITHOUT_CLASSIFICATION	1.5950047915725795E-5	DESIGN
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9949125728390181	WITHOUT_CLASSIFICATION	0.005087427160981941	DESIGN
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9996583089488693	WITHOUT_CLASSIFICATION	3.416910511306778E-4	DESIGN
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999444170475671	WITHOUT_CLASSIFICATION	5.5582952432978335E-5	DESIGN
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9978453658683878	WITHOUT_CLASSIFICATION	0.002154634131612134	DESIGN
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9951460656687137	WITHOUT_CLASSIFICATION	0.004853934331286393	DESIGN
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.9484757101512454	WITHOUT_CLASSIFICATION	0.051524289848754644	DESIGN
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9983331766598904	WITHOUT_CLASSIFICATION	0.0016668233401095976	DESIGN
write('S');	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9952908780216116	WITHOUT_CLASSIFICATION	0.004709121978388299	DESIGN
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9953255867640562	WITHOUT_CLASSIFICATION	0.004674413235943727	DESIGN
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9907979161854076	WITHOUT_CLASSIFICATION	0.009202083814592388	DESIGN
w_symbol	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
w_unique	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9981116027884269	WITHOUT_CLASSIFICATION	0.0018883972115730512	DESIGN
Major Minor	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9994987925251357	WITHOUT_CLASSIFICATION	5.012074748642109E-4	DESIGN
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.99906169959047	WITHOUT_CLASSIFICATION	9.383004095299122E-4	DESIGN
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9997950613770531	WITHOUT_CLASSIFICATION	2.0493862294685027E-4	DESIGN
sic	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998576593100826	WITHOUT_CLASSIFICATION	1.423406899173728E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998576593100826	WITHOUT_CLASSIFICATION	1.423406899173728E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998576593100826	WITHOUT_CLASSIFICATION	1.423406899173728E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9988079240256857	WITHOUT_CLASSIFICATION	0.0011920759743142063	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9988079240256857	WITHOUT_CLASSIFICATION	0.0011920759743142063	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995297637450788	WITHOUT_CLASSIFICATION	4.7023625492113635E-4	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995297637450788	WITHOUT_CLASSIFICATION	4.7023625492113635E-4	DESIGN
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9990026650867319	WITHOUT_CLASSIFICATION	9.973349132681884E-4	DESIGN
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9985351854909204	WITHOUT_CLASSIFICATION	0.0014648145090796504	DESIGN
unsigned short, native	WITHOUT_CLASSIFICATION	0.9992087404928481	WITHOUT_CLASSIFICATION	7.912595071517972E-4	DESIGN
int, native long, native	WITHOUT_CLASSIFICATION	0.9994896778323361	WITHOUT_CLASSIFICATION	5.10322167663811E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998576593100826	WITHOUT_CLASSIFICATION	1.423406899173728E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998576593100826	WITHOUT_CLASSIFICATION	1.423406899173728E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998576593100826	WITHOUT_CLASSIFICATION	1.423406899173728E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9988079240256857	WITHOUT_CLASSIFICATION	0.0011920759743142063	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9988079240256857	WITHOUT_CLASSIFICATION	0.0011920759743142063	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9988079240256857	WITHOUT_CLASSIFICATION	0.0011920759743142063	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995297637450788	WITHOUT_CLASSIFICATION	4.7023625492113635E-4	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9995297637450788	WITHOUT_CLASSIFICATION	4.7023625492113635E-4	DESIGN
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999759804571353	WITHOUT_CLASSIFICATION	2.4019542864718603E-5	DESIGN
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9994905069848996	WITHOUT_CLASSIFICATION	5.094930151004628E-4	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9954926156348045	WITHOUT_CLASSIFICATION	0.004507384365195393	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9954926156348045	WITHOUT_CLASSIFICATION	0.004507384365195393	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9954926156348045	WITHOUT_CLASSIFICATION	0.004507384365195393	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9954926156348045	WITHOUT_CLASSIFICATION	0.004507384365195393	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9954926156348045	WITHOUT_CLASSIFICATION	0.004507384365195393	DESIGN
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
All braces pushed..	WITHOUT_CLASSIFICATION	0.9997393341871739	WITHOUT_CLASSIFICATION	2.6066581282611044E-4	DESIGN
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9796573643043723	WITHOUT_CLASSIFICATION	0.02034263569562756	DESIGN
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999113223480881	WITHOUT_CLASSIFICATION	8.867765191185516E-5	DESIGN
are we at ''	WITHOUT_CLASSIFICATION	0.9995447474831306	WITHOUT_CLASSIFICATION	4.5525251686935803E-4	DESIGN
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9989024648028637	WITHOUT_CLASSIFICATION	0.0010975351971362192	DESIGN
not enough bytes	WITHOUT_CLASSIFICATION	0.9988482336612495	WITHOUT_CLASSIFICATION	0.0011517663387505112	DESIGN
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9985250486663111	WITHOUT_CLASSIFICATION	0.001474951333688988	DESIGN
skip inner braces	WITHOUT_CLASSIFICATION	0.9989067669814855	WITHOUT_CLASSIFICATION	0.0010932330185145452	DESIGN
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.9991712368581297	WITHOUT_CLASSIFICATION	8.287631418702319E-4	DESIGN
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9993041010316553	WITHOUT_CLASSIFICATION	6.958989683447011E-4	DESIGN
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999987010699835	WITHOUT_CLASSIFICATION	1.2989300164858935E-6	DESIGN
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.999138376292471	WITHOUT_CLASSIFICATION	8.616237075288387E-4	DESIGN
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9903773734043991	WITHOUT_CLASSIFICATION	0.009622626595600838	DESIGN
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9971933245686669	WITHOUT_CLASSIFICATION	0.0028066754313330338	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9986994817377123	WITHOUT_CLASSIFICATION	0.00130051826228779	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9986994817377123	WITHOUT_CLASSIFICATION	0.00130051826228779	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9986994817377123	WITHOUT_CLASSIFICATION	0.00130051826228779	DESIGN
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9967219740689044	WITHOUT_CLASSIFICATION	0.00327802593109553	DESIGN
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9973989268494176	WITHOUT_CLASSIFICATION	0.002601073150582389	DESIGN
SimpleSampler	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9963828150843361	WITHOUT_CLASSIFICATION	0.0036171849156637495	DESIGN
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9992117062111093	WITHOUT_CLASSIFICATION	7.882937888907582E-4	DESIGN
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9995638625890827	WITHOUT_CLASSIFICATION	4.361374109172586E-4	DESIGN
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9996238458962212	WITHOUT_CLASSIFICATION	3.7615410377882615E-4	DESIGN
single precision, native	WITHOUT_CLASSIFICATION	0.9996686552403548	WITHOUT_CLASSIFICATION	3.313447596452673E-4	DESIGN
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9996158146962971	WITHOUT_CLASSIFICATION	3.8418530370294647E-4	DESIGN
double precision, little-endian	WITHOUT_CLASSIFICATION	0.9998640770360055	WITHOUT_CLASSIFICATION	1.3592296399450265E-4	DESIGN
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9998827757776639	WITHOUT_CLASSIFICATION	1.1722422233597757E-4	DESIGN
double precision, native	WITHOUT_CLASSIFICATION	0.999896743295102	WITHOUT_CLASSIFICATION	1.0325670489793955E-4	DESIGN
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9991661866500838	WITHOUT_CLASSIFICATION	8.338133499162032E-4	DESIGN
signed char	WITHOUT_CLASSIFICATION	0.9998203010841131	WITHOUT_CLASSIFICATION	1.796989158868282E-4	DESIGN
unsigned char	WITHOUT_CLASSIFICATION	0.9998064129995622	WITHOUT_CLASSIFICATION	1.9358700043778894E-4	DESIGN
long, little-endian	WITHOUT_CLASSIFICATION	0.9996759609422035	WITHOUT_CLASSIFICATION	3.2403905779653284E-4	DESIGN
long, big-endian	WITHOUT_CLASSIFICATION	0.9996759609422035	WITHOUT_CLASSIFICATION	3.2403905779653284E-4	DESIGN
unsigned int, native	WITHOUT_CLASSIFICATION	0.9997891682480045	WITHOUT_CLASSIFICATION	2.1083175199560096E-4	DESIGN
int, native	WITHOUT_CLASSIFICATION	0.9997891682480045	WITHOUT_CLASSIFICATION	2.1083175199560096E-4	DESIGN
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9993578007588122	WITHOUT_CLASSIFICATION	6.421992411877635E-4	DESIGN
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9901293936641663	WITHOUT_CLASSIFICATION	0.009870606335833768	DESIGN
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9995474007309211	WITHOUT_CLASSIFICATION	4.5259926907883905E-4	DESIGN
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9661816886644263	WITHOUT_CLASSIFICATION	0.033818311335573725	DESIGN
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9990887599548615	WITHOUT_CLASSIFICATION	9.11240045138604E-4	DESIGN
obtain a	WITHOUT_CLASSIFICATION	0.997194752514848	WITHOUT_CLASSIFICATION	0.002805247485151936	DESIGN
obtain b	WITHOUT_CLASSIFICATION	0.9992170018729802	WITHOUT_CLASSIFICATION	7.829981270197586E-4	DESIGN
obtain c	WITHOUT_CLASSIFICATION	0.9989177325990112	WITHOUT_CLASSIFICATION	0.0010822674009888329	DESIGN
obtain d	WITHOUT_CLASSIFICATION	0.998582859148538	WITHOUT_CLASSIFICATION	0.0014171408514620791	DESIGN
encode.limit() -	WITHOUT_CLASSIFICATION	0.9992814186442192	WITHOUT_CLASSIFICATION	7.185813557808876E-4	DESIGN
1	WITHOUT_CLASSIFICATION	0.9989422809075974	WITHOUT_CLASSIFICATION	0.0010577190924026543	DESIGN
2	WITHOUT_CLASSIFICATION	0.9990971906975017	WITHOUT_CLASSIFICATION	9.028093024982908E-4	DESIGN
3	WITHOUT_CLASSIFICATION	0.9964634986804602	WITHOUT_CLASSIFICATION	0.003536501319539736	DESIGN
4	WITHOUT_CLASSIFICATION	0.9988627523949599	WITHOUT_CLASSIFICATION	0.001137247605040008	DESIGN
5	WITHOUT_CLASSIFICATION	0.9994683903193581	WITHOUT_CLASSIFICATION	5.316096806418175E-4	DESIGN
6	WITHOUT_CLASSIFICATION	0.9989499449116521	WITHOUT_CLASSIFICATION	0.0010500550883479323	DESIGN
7	WITHOUT_CLASSIFICATION	0.998469735077414	WITHOUT_CLASSIFICATION	0.0015302649225860318	DESIGN
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9998802218668598	WITHOUT_CLASSIFICATION	1.1977813314018688E-4	DESIGN
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999035773872331	WITHOUT_CLASSIFICATION	9.642261276683962E-5	DESIGN
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999277863477958	WITHOUT_CLASSIFICATION	7.221365220419951E-5	DESIGN
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.9528960052882314	WITHOUT_CLASSIFICATION	0.04710399471176871	DESIGN
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999725531193782	WITHOUT_CLASSIFICATION	2.7446880621859957E-5	DESIGN
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9989367117844901	WITHOUT_CLASSIFICATION	0.0010632882155099139	DESIGN
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9778865859273246	WITHOUT_CLASSIFICATION	0.022113414072675433	DESIGN
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9974405680134585	WITHOUT_CLASSIFICATION	0.0025594319865414644	DESIGN
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.999792863331737	WITHOUT_CLASSIFICATION	2.0713666826295356E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.9082045123032485	WITHOUT_CLASSIFICATION	0.09179548769675143	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9851093983532858	WITHOUT_CLASSIFICATION	0.014890601646714232	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9851093983532858	WITHOUT_CLASSIFICATION	0.014890601646714232	DESIGN
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.7787032762986805	WITHOUT_CLASSIFICATION	0.22129672370131945	DESIGN
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9998024431201669	WITHOUT_CLASSIFICATION	1.9755687983324274E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9115368772650851	WITHOUT_CLASSIFICATION	0.08846312273491488	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9997796216493288	WITHOUT_CLASSIFICATION	2.203783506712235E-4	DESIGN
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9994077892321744	WITHOUT_CLASSIFICATION	5.92210767825668E-4	DESIGN
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9981492657354545	WITHOUT_CLASSIFICATION	0.001850734264545493	DESIGN
are we recursing?	WITHOUT_CLASSIFICATION	0.9995142433699206	WITHOUT_CLASSIFICATION	4.857566300794584E-4	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9997117188100545	WITHOUT_CLASSIFICATION	2.882811899454799E-4	DESIGN
default PidGetter	WITHOUT_CLASSIFICATION	0.9998077678136481	WITHOUT_CLASSIFICATION	1.9223218635188997E-4	DESIGN
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9998692719195742	WITHOUT_CLASSIFICATION	1.3072808042583755E-4	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9976212451150117	WITHOUT_CLASSIFICATION	0.0023787548849882527	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9976212451150117	WITHOUT_CLASSIFICATION	0.0023787548849882527	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9976212451150117	WITHOUT_CLASSIFICATION	0.0023787548849882527	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9976212451150117	WITHOUT_CLASSIFICATION	0.0023787548849882527	DESIGN
try both	WITHOUT_CLASSIFICATION	0.999249274974009	WITHOUT_CLASSIFICATION	7.507250259911397E-4	DESIGN
just unix	WITHOUT_CLASSIFICATION	0.9974790725938619	WITHOUT_CLASSIFICATION	0.002520927406138091	DESIGN
just windows	WITHOUT_CLASSIFICATION	0.9995750063604483	WITHOUT_CLASSIFICATION	4.249936395517568E-4	DESIGN
neither	WITHOUT_CLASSIFICATION	0.9984294515455122	WITHOUT_CLASSIFICATION	0.0015705484544877675	DESIGN
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.8423349036258437	DESIGN	0.15766509637415632	WITHOUT_CLASSIFICATION
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9998760039240112	WITHOUT_CLASSIFICATION	1.2399607598877568E-4	DESIGN
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9969099442857193	WITHOUT_CLASSIFICATION	0.00309005571428057	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9997155581955774	WITHOUT_CLASSIFICATION	2.844418044226016E-4	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9997155581955774	WITHOUT_CLASSIFICATION	2.844418044226016E-4	DESIGN
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.999986000341138	WITHOUT_CLASSIFICATION	1.3999658861992799E-5	DESIGN
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9901624463889603	WITHOUT_CLASSIFICATION	0.009837553611039655	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998786181395755	WITHOUT_CLASSIFICATION	1.2138186042441222E-4	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9992206864155538	WITHOUT_CLASSIFICATION	7.793135844462641E-4	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9992206864155538	WITHOUT_CLASSIFICATION	7.793135844462641E-4	DESIGN
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9996508747877106	WITHOUT_CLASSIFICATION	3.4912521228931106E-4	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9991085743029532	WITHOUT_CLASSIFICATION	8.914256970468837E-4	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9991085743029532	WITHOUT_CLASSIFICATION	8.914256970468837E-4	DESIGN
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9677103278126273	WITHOUT_CLASSIFICATION	0.03228967218737268	DESIGN
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999390333971999	WITHOUT_CLASSIFICATION	6.096660280003208E-5	DESIGN
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999890951246098	WITHOUT_CLASSIFICATION	1.090487539018896E-5	DESIGN
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9889071926904482	WITHOUT_CLASSIFICATION	0.01109280730955176	DESIGN
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9998701401285218	WITHOUT_CLASSIFICATION	1.2985987147825777E-4	DESIGN
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999870321975183	WITHOUT_CLASSIFICATION	1.2967802481691669E-5	DESIGN
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.999645395839041	WITHOUT_CLASSIFICATION	3.5460416095901197E-4	DESIGN
sequential	WITHOUT_CLASSIFICATION	0.9994159158292515	WITHOUT_CLASSIFICATION	5.840841707485426E-4	DESIGN
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999632942871842	WITHOUT_CLASSIFICATION	3.670571281577645E-5	DESIGN
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9998401982617596	WITHOUT_CLASSIFICATION	1.5980173824033388E-4	DESIGN
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9981978126992997	WITHOUT_CLASSIFICATION	0.0018021873007002872	DESIGN
SignalFacade	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9975799340753945	WITHOUT_CLASSIFICATION	0.002420065924605643	DESIGN
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.998089751539976	WITHOUT_CLASSIFICATION	0.001910248460023984	DESIGN
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.994962147598701	WITHOUT_CLASSIFICATION	0.005037852401298911	DESIGN
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9537419618679459	WITHOUT_CLASSIFICATION	0.0462580381320541	DESIGN
Args	WITHOUT_CLASSIFICATION	0.9984773311042845	WITHOUT_CLASSIFICATION	0.001522668895715499	DESIGN
static methods only	WITHOUT_CLASSIFICATION	0.9999312692669576	WITHOUT_CLASSIFICATION	6.873073304233652E-5	DESIGN
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9994965081681668	WITHOUT_CLASSIFICATION	5.034918318331871E-4	DESIGN
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9934847732688012	WITHOUT_CLASSIFICATION	0.0065152267311987585	DESIGN
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9965143229177041	WITHOUT_CLASSIFICATION	0.00348567708229577	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9998577868197591	WITHOUT_CLASSIFICATION	1.4221318024086477E-4	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9998849218140733	WITHOUT_CLASSIFICATION	1.1507818592668682E-4	DESIGN
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9999576737781197	WITHOUT_CLASSIFICATION	4.232622188030351E-5	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9998522556257938	WITHOUT_CLASSIFICATION	1.4774437420627334E-4	DESIGN
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.8484186820850668	WITHOUT_CLASSIFICATION	0.15158131791493326	DESIGN
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9992633429458061	WITHOUT_CLASSIFICATION	7.366570541937903E-4	DESIGN
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9998972335291404	WITHOUT_CLASSIFICATION	1.027664708595592E-4	DESIGN
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9825089418934168	WITHOUT_CLASSIFICATION	0.0174910581065832	DESIGN
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9896547134379817	WITHOUT_CLASSIFICATION	0.01034528656201824	DESIGN
..	WITHOUT_CLASSIFICATION	0.9935049738993911	WITHOUT_CLASSIFICATION	0.006495026100608918	DESIGN
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9997669247428088	WITHOUT_CLASSIFICATION	2.3307525719129055E-4	DESIGN
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.894276544373765	DESIGN	0.10572345562623492	WITHOUT_CLASSIFICATION
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9955565568302747	WITHOUT_CLASSIFICATION	0.004443443169725298	DESIGN
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.9978739026382795	WITHOUT_CLASSIFICATION	0.0021260973617204504	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9588366000352754	WITHOUT_CLASSIFICATION	0.041163399964724644	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998498854531013	WITHOUT_CLASSIFICATION	1.5011454689866537E-4	DESIGN
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9994965081681668	WITHOUT_CLASSIFICATION	5.034918318331871E-4	DESIGN
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9995298050517697	WITHOUT_CLASSIFICATION	4.701949482302838E-4	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9588366000352754	WITHOUT_CLASSIFICATION	0.041163399964724644	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998498854531013	WITHOUT_CLASSIFICATION	1.5011454689866537E-4	DESIGN
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9992121546212444	WITHOUT_CLASSIFICATION	7.878453787555536E-4	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9992073822694929	WITHOUT_CLASSIFICATION	7.926177305070558E-4	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9992073822694929	WITHOUT_CLASSIFICATION	7.926177305070558E-4	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9991914677622719	WITHOUT_CLASSIFICATION	8.085322377280284E-4	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.8791873396882233	WITHOUT_CLASSIFICATION	0.12081266031177683	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999741408913119	WITHOUT_CLASSIFICATION	2.5859108688060597E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999446489150855	WITHOUT_CLASSIFICATION	5.535108491458982E-5	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9836819789594058	WITHOUT_CLASSIFICATION	0.016318021040594183	DESIGN
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9850994094106648	WITHOUT_CLASSIFICATION	0.0149005905893353	DESIGN
'.' is printed	WITHOUT_CLASSIFICATION	0.9995440038789702	WITHOUT_CLASSIFICATION	4.559961210297282E-4	DESIGN
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9993016149990848	WITHOUT_CLASSIFICATION	6.983850009152249E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9993305274451773	WITHOUT_CLASSIFICATION	6.694725548227069E-4	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9984460533428847	WITHOUT_CLASSIFICATION	0.001553946657115272	DESIGN
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9938995243637632	WITHOUT_CLASSIFICATION	0.00610047563623688	DESIGN
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9997982104246661	WITHOUT_CLASSIFICATION	2.0178957533380289E-4	DESIGN
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9996356768948774	WITHOUT_CLASSIFICATION	3.6432310512260116E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9996554378220923	WITHOUT_CLASSIFICATION	3.4456217790766123E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9996554378220923	WITHOUT_CLASSIFICATION	3.4456217790766123E-4	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9814018102063429	WITHOUT_CLASSIFICATION	0.01859818979365714	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9814018102063429	WITHOUT_CLASSIFICATION	0.01859818979365714	DESIGN
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.999743144884861	WITHOUT_CLASSIFICATION	2.5685511513887175E-4	DESIGN
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
(1|intlen)	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9988667468042746	WITHOUT_CLASSIFICATION	0.0011332531957254973	DESIGN
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9994810186862609	WITHOUT_CLASSIFICATION	5.189813137391135E-4	DESIGN
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9994965081681668	WITHOUT_CLASSIFICATION	5.034918318331871E-4	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999741408913119	WITHOUT_CLASSIFICATION	2.5859108688060597E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999446489150855	WITHOUT_CLASSIFICATION	5.535108491458982E-5	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9993305274451773	WITHOUT_CLASSIFICATION	6.694725548227069E-4	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9984460533428847	WITHOUT_CLASSIFICATION	0.001553946657115272	DESIGN
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9997868999688979	WITHOUT_CLASSIFICATION	2.1310003110210044E-4	DESIGN
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9994503048872887	WITHOUT_CLASSIFICATION	5.496951127114183E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
dangling '%' char	WITHOUT_CLASSIFICATION	0.9998064129995622	WITHOUT_CLASSIFICATION	1.9358700043778894E-4	DESIGN
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.999945749051753	WITHOUT_CLASSIFICATION	5.425094824706646E-5	DESIGN
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9997745289816993	WITHOUT_CLASSIFICATION	2.2547101830069856E-4	DESIGN
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9935281449725282	WITHOUT_CLASSIFICATION	0.006471855027471825	DESIGN
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9996584498493353	WITHOUT_CLASSIFICATION	3.415501506647589E-4	DESIGN
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999501944945546	WITHOUT_CLASSIFICATION	4.980550544536085E-5	DESIGN
negative values	WITHOUT_CLASSIFICATION	0.9999019940526565	WITHOUT_CLASSIFICATION	9.800594734357827E-5	DESIGN
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9998969403592055	WITHOUT_CLASSIFICATION	1.0305964079448315E-4	DESIGN
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999597085798849	WITHOUT_CLASSIFICATION	4.0291420115051896E-5	DESIGN
no such luck...	WITHOUT_CLASSIFICATION	0.9998988005760547	WITHOUT_CLASSIFICATION	1.0119942394523972E-4	DESIGN
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9980808270542889	WITHOUT_CLASSIFICATION	0.0019191729457110071	DESIGN
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9994620059246467	WITHOUT_CLASSIFICATION	5.37994075353342E-4	DESIGN
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9772875470025775	WITHOUT_CLASSIFICATION	0.022712452997422472	DESIGN
constant vector a	WITHOUT_CLASSIFICATION	0.9960789976019364	WITHOUT_CLASSIFICATION	0.003921002398063682	DESIGN
most significant w-r bits	WITHOUT_CLASSIFICATION	0.9993149509343509	WITHOUT_CLASSIFICATION	6.850490656492268E-4	DESIGN
least significant r bits	WITHOUT_CLASSIFICATION	0.9988683913159248	WITHOUT_CLASSIFICATION	0.0011316086840752596	DESIGN
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9997645241607378	WITHOUT_CLASSIFICATION	2.3547583926212488E-4	DESIGN
Tempering	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9998190255502024	WITHOUT_CLASSIFICATION	1.8097444979757002E-4	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9995018304816362	WITHOUT_CLASSIFICATION	4.981695183636945E-4	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9995018304816362	WITHOUT_CLASSIFICATION	4.981695183636945E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9994965081681668	WITHOUT_CLASSIFICATION	5.034918318331871E-4	DESIGN
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.999385226905164	WITHOUT_CLASSIFICATION	6.147730948360539E-4	DESIGN
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.999385226905164	WITHOUT_CLASSIFICATION	6.147730948360539E-4	DESIGN
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9994965081681668	WITHOUT_CLASSIFICATION	5.034918318331871E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9994965081681668	WITHOUT_CLASSIFICATION	5.034918318331871E-4	DESIGN
no number	WITHOUT_CLASSIFICATION	0.9993830554773196	WITHOUT_CLASSIFICATION	6.169445226802725E-4	DESIGN
trailing garbage	WITHOUT_CLASSIFICATION	0.9995830917537838	WITHOUT_CLASSIFICATION	4.1690824621623063E-4	DESIGN
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9994174165864684	WITHOUT_CLASSIFICATION	5.825834135315607E-4	DESIGN
it was not found at all!	WITHOUT_CLASSIFICATION	0.9971564990733561	WITHOUT_CLASSIFICATION	0.0028435009266438707	DESIGN
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9869779373155726	WITHOUT_CLASSIFICATION	0.013022062684427455	DESIGN
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9995605405656025	WITHOUT_CLASSIFICATION	4.394594343975468E-4	DESIGN
goto next bucket	WITHOUT_CLASSIFICATION	0.9994341535559397	WITHOUT_CLASSIFICATION	5.658464440603804E-4	DESIGN
we reached the end	WITHOUT_CLASSIFICATION	0.9998429647291159	WITHOUT_CLASSIFICATION	1.5703527088398506E-4	DESIGN
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9980551746334887	WITHOUT_CLASSIFICATION	0.001944825366511219	DESIGN
states	WITHOUT_CLASSIFICATION	0.9982064920737347	WITHOUT_CLASSIFICATION	0.001793507926265252	DESIGN
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.9978770224294131	WITHOUT_CLASSIFICATION	0.0021229775705869183	DESIGN
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999688068941098	WITHOUT_CLASSIFICATION	3.119310589022992E-5	DESIGN
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9991462213643276	WITHOUT_CLASSIFICATION	8.537786356722436E-4	DESIGN
drop through for sign	WITHOUT_CLASSIFICATION	0.9959950798631787	WITHOUT_CLASSIFICATION	0.004004920136821285	DESIGN
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9873733548745204	WITHOUT_CLASSIFICATION	0.012626645125479619	DESIGN
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9953838839373331	WITHOUT_CLASSIFICATION	0.0046161160626668534	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999379259267784	WITHOUT_CLASSIFICATION	6.207407322153386E-5	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9982074816129183	WITHOUT_CLASSIFICATION	0.0017925183870817767	DESIGN
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9995468135130624	WITHOUT_CLASSIFICATION	4.5318648693752747E-4	DESIGN
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9985357808096708	WITHOUT_CLASSIFICATION	0.0014642191903293496	DESIGN
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9959218752228325	WITHOUT_CLASSIFICATION	0.004078124777167544	DESIGN
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9986297384390487	WITHOUT_CLASSIFICATION	0.0013702615609513583	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.99995698968357	WITHOUT_CLASSIFICATION	4.301031643004623E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.99995698968357	WITHOUT_CLASSIFICATION	4.301031643004623E-5	DESIGN
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.9883327513838038	WITHOUT_CLASSIFICATION	0.011667248616196215	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.999392635452985	WITHOUT_CLASSIFICATION	6.073645470149457E-4	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.999392635452985	WITHOUT_CLASSIFICATION	6.073645470149457E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.998712665617683	WITHOUT_CLASSIFICATION	0.0012873343823169956	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.998712665617683	WITHOUT_CLASSIFICATION	0.0012873343823169956	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9984312323363982	WITHOUT_CLASSIFICATION	0.0015687676636018996	DESIGN
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999833126802543	WITHOUT_CLASSIFICATION	1.6687319745694798E-4	DESIGN
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9990753216623399	WITHOUT_CLASSIFICATION	9.246783376601026E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9994561129109004	WITHOUT_CLASSIFICATION	5.438870890996792E-4	DESIGN
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9992023581778328	WITHOUT_CLASSIFICATION	7.976418221672447E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9991863803173603	WITHOUT_CLASSIFICATION	8.136196826397447E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9991863803173603	WITHOUT_CLASSIFICATION	8.136196826397447E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999379259267784	WITHOUT_CLASSIFICATION	6.207407322153386E-5	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999379259267784	WITHOUT_CLASSIFICATION	6.207407322153386E-5	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999379259267784	WITHOUT_CLASSIFICATION	6.207407322153386E-5	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9982074816129183	WITHOUT_CLASSIFICATION	0.0017925183870817767	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.99995698968357	WITHOUT_CLASSIFICATION	4.301031643004623E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.99995698968357	WITHOUT_CLASSIFICATION	4.301031643004623E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.99995698968357	WITHOUT_CLASSIFICATION	4.301031643004623E-5	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9984312323363982	WITHOUT_CLASSIFICATION	0.0015687676636018996	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9984312323363982	WITHOUT_CLASSIFICATION	0.0015687676636018996	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9984312323363982	WITHOUT_CLASSIFICATION	0.0015687676636018996	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9994561129109004	WITHOUT_CLASSIFICATION	5.438870890996792E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9994561129109004	WITHOUT_CLASSIFICATION	5.438870890996792E-4	DESIGN
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9981625389630209	WITHOUT_CLASSIFICATION	0.0018374610369791002	DESIGN
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9985871589741958	WITHOUT_CLASSIFICATION	0.0014128410258041836	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9966250366205689	WITHOUT_CLASSIFICATION	0.0033749633794311943	DESIGN
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9992809989917744	DESIGN	7.190010082256778E-4	WITHOUT_CLASSIFICATION
no digits, error	WITHOUT_CLASSIFICATION	0.9998644128021641	WITHOUT_CLASSIFICATION	1.3558719783589082E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.99977618262422	WITHOUT_CLASSIFICATION	2.2381737578010987E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.99977618262422	WITHOUT_CLASSIFICATION	2.2381737578010987E-4	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9984375973680981	WITHOUT_CLASSIFICATION	0.001562402631901844	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998362515609014	WITHOUT_CLASSIFICATION	1.6374843909861586E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998362515609014	WITHOUT_CLASSIFICATION	1.6374843909861586E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998362515609014	WITHOUT_CLASSIFICATION	1.6374843909861586E-4	DESIGN
first char must be digit	WITHOUT_CLASSIFICATION	0.9998560827138671	WITHOUT_CLASSIFICATION	1.4391728613300235E-4	DESIGN
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9995358774119364	WITHOUT_CLASSIFICATION	4.641225880635262E-4	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9982074816129183	WITHOUT_CLASSIFICATION	0.0017925183870817767	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9984312323363982	WITHOUT_CLASSIFICATION	0.0015687676636018996	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9984312323363982	WITHOUT_CLASSIFICATION	0.0015687676636018996	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998362515609014	WITHOUT_CLASSIFICATION	1.6374843909861586E-4	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9984375973680981	WITHOUT_CLASSIFICATION	0.001562402631901844	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9994093889715011	WITHOUT_CLASSIFICATION	5.906110284989304E-4	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9998844408852956	WITHOUT_CLASSIFICATION	1.1555911470447383E-4	DESIGN
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9995827696360448	WITHOUT_CLASSIFICATION	4.1723036395527037E-4	DESIGN
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9987484827118445	WITHOUT_CLASSIFICATION	0.0012515172881555922	DESIGN
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9988937563682525	WITHOUT_CLASSIFICATION	0.0011062436317474794	DESIGN
arg cannot be negative	WITHOUT_CLASSIFICATION	0.9995138535843681	WITHOUT_CLASSIFICATION	4.8614641563191475E-4	DESIGN
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9655261788833751	WITHOUT_CLASSIFICATION	0.034473821116624954	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9075433878643581	WITHOUT_CLASSIFICATION	0.09245661213564185	DESIGN
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999182355332317	WITHOUT_CLASSIFICATION	8.176446676833176E-5	DESIGN
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9943545163894981	WITHOUT_CLASSIFICATION	0.005645483610501942	DESIGN
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9996802117244162	WITHOUT_CLASSIFICATION	3.1978827558377373E-4	DESIGN
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9988001409870557	WITHOUT_CLASSIFICATION	0.0011998590129442955	DESIGN
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.9996407367422518	WITHOUT_CLASSIFICATION	3.592632577481129E-4	DESIGN
advance to first entry	WITHOUT_CLASSIFICATION	0.9994261296731393	WITHOUT_CLASSIFICATION	5.738703268606662E-4	DESIGN
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.7973086344778518	WITHOUT_CLASSIFICATION	0.20269136552214814	DESIGN
package-protected	WITHOUT_CLASSIFICATION	0.999730964199036	WITHOUT_CLASSIFICATION	2.690358009640149E-4	DESIGN
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9994117863380809	WITHOUT_CLASSIFICATION	5.882136619190113E-4	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9984280172651124	WITHOUT_CLASSIFICATION	0.0015719827348874998	DESIGN
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9997459856220942	WITHOUT_CLASSIFICATION	2.54014377905885E-4	DESIGN
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999131320318628	WITHOUT_CLASSIFICATION	8.686796813713129E-5	DESIGN
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999955860036811	WITHOUT_CLASSIFICATION	4.413996318859367E-6	DESIGN
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9990942307499826	WITHOUT_CLASSIFICATION	9.057692500174092E-4	DESIGN
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.8653790395213355	WITHOUT_CLASSIFICATION	0.1346209604786644	DESIGN
unread back	WITHOUT_CLASSIFICATION	0.9998021272935034	WITHOUT_CLASSIFICATION	1.9787270649652364E-4	DESIGN
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.999700063530668	WITHOUT_CLASSIFICATION	2.999364693320805E-4	DESIGN
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9994475445123698	WITHOUT_CLASSIFICATION	5.524554876301985E-4	DESIGN
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999016173507116	WITHOUT_CLASSIFICATION	9.838264928841319E-5	DESIGN
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999842921836922	WITHOUT_CLASSIFICATION	1.570781630784091E-5	DESIGN
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.999965427318576	WITHOUT_CLASSIFICATION	3.457268142398414E-5	DESIGN
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9988917010329742	WITHOUT_CLASSIFICATION	0.0011082989670258808	DESIGN
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9998855421552274	WITHOUT_CLASSIFICATION	1.144578447724997E-4	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9994093889715011	WITHOUT_CLASSIFICATION	5.906110284989304E-4	DESIGN
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.999778910744839	WITHOUT_CLASSIFICATION	2.2108925516095787E-4	DESIGN
not closing from finalize	WITHOUT_CLASSIFICATION	0.9975949315192904	WITHOUT_CLASSIFICATION	0.0024050684807097908	DESIGN
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9997711148030569	WITHOUT_CLASSIFICATION	2.2888519694298467E-4	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9997587776025662	WITHOUT_CLASSIFICATION	2.4122239743392884E-4	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9997587776025662	WITHOUT_CLASSIFICATION	2.4122239743392884E-4	DESIGN
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999300439887093	WITHOUT_CLASSIFICATION	6.995601129068321E-5	DESIGN
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9998621343503041	WITHOUT_CLASSIFICATION	1.3786564969583197E-4	DESIGN
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999074907218149	WITHOUT_CLASSIFICATION	9.250927818509867E-4	DESIGN
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9938197536439665	WITHOUT_CLASSIFICATION	0.006180246356033513	DESIGN
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9996989953526035	WITHOUT_CLASSIFICATION	3.010046473964554E-4	DESIGN
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.996736378480869	WITHOUT_CLASSIFICATION	0.003263621519130911	DESIGN
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9970872630897232	WITHOUT_CLASSIFICATION	0.002912736910276856	DESIGN
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.999024837470822	WITHOUT_CLASSIFICATION	9.751625291779672E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9854037404776537	WITHOUT_CLASSIFICATION	0.014596259522346347	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9990668057904883	WITHOUT_CLASSIFICATION	9.331942095117283E-4	DESIGN
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9997936883614396	WITHOUT_CLASSIFICATION	2.0631163856046366E-4	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999731943946882	WITHOUT_CLASSIFICATION	2.6805605311755948E-5	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999731943946882	WITHOUT_CLASSIFICATION	2.6805605311755948E-5	DESIGN
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9931796632530321	WITHOUT_CLASSIFICATION	0.006820336746967912	DESIGN
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9854597265130276	WITHOUT_CLASSIFICATION	0.014540273486972339	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.998361523825601	WITHOUT_CLASSIFICATION	0.0016384761743989604	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.998361523825601	WITHOUT_CLASSIFICATION	0.0016384761743989604	DESIGN
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999476614272123	WITHOUT_CLASSIFICATION	5.233857278782382E-5	DESIGN
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9996160377008566	WITHOUT_CLASSIFICATION	3.8396229914333533E-4	DESIGN
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9988806077278067	WITHOUT_CLASSIFICATION	0.0011193922721932077	DESIGN
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9998526709770409	WITHOUT_CLASSIFICATION	1.4732902295911418E-4	DESIGN
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.999971936242173	WITHOUT_CLASSIFICATION	2.8063757827065704E-5	DESIGN
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9844047908047515	WITHOUT_CLASSIFICATION	0.015595209195248507	DESIGN
save the ungot	WITHOUT_CLASSIFICATION	0.9995800537557904	WITHOUT_CLASSIFICATION	4.199462442095978E-4	DESIGN
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9983627243000454	WITHOUT_CLASSIFICATION	0.0016372756999546228	DESIGN
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9893024214072464	WITHOUT_CLASSIFICATION	0.010697578592753568	DESIGN
flush first	WITHOUT_CLASSIFICATION	0.9999535623415864	WITHOUT_CLASSIFICATION	4.643765841370014E-5	DESIGN
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9985525214183123	WITHOUT_CLASSIFICATION	0.0014474785816876684	DESIGN
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.9935641748638833	WITHOUT_CLASSIFICATION	0.006435825136116855	DESIGN
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999674504035407	WITHOUT_CLASSIFICATION	3.2549596459317446E-5	DESIGN
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9990690227395232	WITHOUT_CLASSIFICATION	9.309772604768062E-4	DESIGN
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999934848458097	WITHOUT_CLASSIFICATION	6.515154190301458E-5	DESIGN
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9917674406699934	WITHOUT_CLASSIFICATION	0.008232559330006559	DESIGN
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9985140927480288	WITHOUT_CLASSIFICATION	0.0014859072519711647	DESIGN
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.997470230030434	WITHOUT_CLASSIFICATION	0.0025297699695660744	DESIGN
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9998765822970217	WITHOUT_CLASSIFICATION	1.234177029783484E-4	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9943150101767251	WITHOUT_CLASSIFICATION	0.005684989823274918	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8865678544476118	DESIGN	0.11343214555238823	WITHOUT_CLASSIFICATION
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9815721253569987	WITHOUT_CLASSIFICATION	0.018427874643001312	DESIGN
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9878431729531735	WITHOUT_CLASSIFICATION	0.012156827046826572	DESIGN
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999026008442922	WITHOUT_CLASSIFICATION	9.739915570785772E-5	DESIGN
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9997936809185045	WITHOUT_CLASSIFICATION	2.0631908149551032E-4	DESIGN
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9984765533072151	WITHOUT_CLASSIFICATION	0.0015234466927849977	DESIGN
else leave it null	WITHOUT_CLASSIFICATION	0.99983887862709	WITHOUT_CLASSIFICATION	1.611213729100046E-4	DESIGN
TypeMatcher	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9969083757112527	WITHOUT_CLASSIFICATION	0.0030916242887471888	DESIGN
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9991661134885845	WITHOUT_CLASSIFICATION	8.338865114154138E-4	DESIGN
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999365030577261	WITHOUT_CLASSIFICATION	6.349694227397603E-5	DESIGN
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999986690058826	WITHOUT_CLASSIFICATION	1.3309941173480486E-6	DESIGN
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.999976302267957	WITHOUT_CLASSIFICATION	2.3697732043005485E-5	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9993106003322682	WITHOUT_CLASSIFICATION	6.893996677317789E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9993106003322682	WITHOUT_CLASSIFICATION	6.893996677317789E-4	DESIGN
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9997917019300299	WITHOUT_CLASSIFICATION	2.082980699701992E-4	DESIGN
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.998752362172198	WITHOUT_CLASSIFICATION	0.0012476378278019771	DESIGN
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.998991109375553	WITHOUT_CLASSIFICATION	0.0010088906244469444	DESIGN
Init	WITHOUT_CLASSIFICATION	0.9986707089116791	WITHOUT_CLASSIFICATION	0.0013292910883208639	DESIGN
Block	WITHOUT_CLASSIFICATION	0.9984282270217429	WITHOUT_CLASSIFICATION	0.0015717729782569465	DESIGN
Copy constructor	WITHOUT_CLASSIFICATION	0.9997026949800704	WITHOUT_CLASSIFICATION	2.973050199296017E-4	DESIGN
presumably this require should fail	WITHOUT_CLASSIFICATION	0.9114004153812079	WITHOUT_CLASSIFICATION	0.08859958461879222	DESIGN
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.9114004153812079	WITHOUT_CLASSIFICATION	0.08859958461879222	DESIGN
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999286454573536	WITHOUT_CLASSIFICATION	7.13545426464332E-5	DESIGN
ok	WITHOUT_CLASSIFICATION	0.9963470318250125	WITHOUT_CLASSIFICATION	0.0036529681749876215	DESIGN
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.7976501478541635	WITHOUT_CLASSIFICATION	0.20234985214583645	DESIGN
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9635130256027615	WITHOUT_CLASSIFICATION	0.03648697439723848	DESIGN
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9997756343256515	WITHOUT_CLASSIFICATION	2.2436567434842852E-4	DESIGN
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9996890851160506	WITHOUT_CLASSIFICATION	3.109148839493242E-4	DESIGN
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9996982789195991	WITHOUT_CLASSIFICATION	3.0172108040090194E-4	DESIGN
wait for the go signal	WITHOUT_CLASSIFICATION	0.9997222910329889	WITHOUT_CLASSIFICATION	2.77708967011046E-4	DESIGN
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9895638957862424	WITHOUT_CLASSIFICATION	0.010436104213757662	DESIGN
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9998953779999269	WITHOUT_CLASSIFICATION	1.0462200007317606E-4	DESIGN
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9988771672042633	WITHOUT_CLASSIFICATION	0.0011228327957367391	DESIGN
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9998242945902678	WITHOUT_CLASSIFICATION	1.7570540973222735E-4	DESIGN
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.8997092006791461	WITHOUT_CLASSIFICATION	0.10029079932085397	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999378324567824	WITHOUT_CLASSIFICATION	6.216754321761267E-5	DESIGN
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9995208699401283	WITHOUT_CLASSIFICATION	4.791300598716171E-4	DESIGN
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9997304185968293	WITHOUT_CLASSIFICATION	2.6958140317070105E-4	DESIGN
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9121804857657585	WITHOUT_CLASSIFICATION	0.08781951423424149	DESIGN
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9988223856668523	WITHOUT_CLASSIFICATION	0.001177614333147617	DESIGN
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9995365592219474	WITHOUT_CLASSIFICATION	4.634407780526628E-4	DESIGN
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
void methods should work	WITHOUT_CLASSIFICATION	0.9919949920503478	WITHOUT_CLASSIFICATION	0.008005007949652235	DESIGN
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9987736703200155	WITHOUT_CLASSIFICATION	0.0012263296799844908	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999920391415826	WITHOUT_CLASSIFICATION	7.960858417355007E-6	DESIGN
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999973125386794	WITHOUT_CLASSIFICATION	2.6874613205551212E-6	DESIGN
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9997593232220513	WITHOUT_CLASSIFICATION	2.4067677794872201E-4	DESIGN
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
int n = 10;	WITHOUT_CLASSIFICATION	0.9998883884154456	WITHOUT_CLASSIFICATION	1.1161158455446942E-4	DESIGN
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.99963396732285	WITHOUT_CLASSIFICATION	3.6603267714995495E-4	DESIGN
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9997203709169942	WITHOUT_CLASSIFICATION	2.796290830057892E-4	DESIGN
value equality	WITHOUT_CLASSIFICATION	0.9998181110966743	WITHOUT_CLASSIFICATION	1.818889033258323E-4	DESIGN
identity equality	WITHOUT_CLASSIFICATION	0.9998674660348271	WITHOUT_CLASSIFICATION	1.3253396517290856E-4	DESIGN
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9988940512272396	WITHOUT_CLASSIFICATION	0.0011059487727602903	DESIGN
bench Integer fib	WITHOUT_CLASSIFICATION	0.9996421995987694	WITHOUT_CLASSIFICATION	3.578004012305249E-4	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9991010181701273	WITHOUT_CLASSIFICATION	8.98981829872572E-4	DESIGN
bench Long fib	WITHOUT_CLASSIFICATION	0.99963958790907	WITHOUT_CLASSIFICATION	3.604120909299378E-4	DESIGN
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9888482753861931	WITHOUT_CLASSIFICATION	0.011151724613806887	DESIGN
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9998430035301894	WITHOUT_CLASSIFICATION	1.5699646981060596E-4	DESIGN
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9995345692255974	WITHOUT_CLASSIFICATION	4.654307744026539E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9728032753530512	WITHOUT_CLASSIFICATION	0.027196724646948795	DESIGN
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9688910504959409	WITHOUT_CLASSIFICATION	0.031108949504059073	DESIGN
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9953593584197955	WITHOUT_CLASSIFICATION	0.004640641580204385	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999960056390736	WITHOUT_CLASSIFICATION	3.994360926409779E-6	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9508810348068821	WITHOUT_CLASSIFICATION	0.04911896519311798	DESIGN
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9709477482063071	WITHOUT_CLASSIFICATION	0.029052251793692824	DESIGN
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9878370833093315	WITHOUT_CLASSIFICATION	0.012162916690668471	DESIGN
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.999784524135013	WITHOUT_CLASSIFICATION	2.1547586498709998E-4	DESIGN
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.7787777896110358	WITHOUT_CLASSIFICATION	0.22122221038896422	DESIGN
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9979912757692062	WITHOUT_CLASSIFICATION	0.0020087242307938575	DESIGN
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9996773591916401	WITHOUT_CLASSIFICATION	3.2264080835983546E-4	DESIGN
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9980347929678663	DESIGN	0.001965207032133683	WITHOUT_CLASSIFICATION
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999598390215892	WITHOUT_CLASSIFICATION	4.016097841079486E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9980799032759889	WITHOUT_CLASSIFICATION	0.0019200967240109736	DESIGN
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.999998809064999	WITHOUT_CLASSIFICATION	1.1909350009819865E-6	DESIGN
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9942745667740864	WITHOUT_CLASSIFICATION	0.005725433225913644	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9997002540545482	WITHOUT_CLASSIFICATION	2.997459454517847E-4	DESIGN
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9968951434346526	WITHOUT_CLASSIFICATION	0.0031048565653475006	DESIGN
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9958965182073443	WITHOUT_CLASSIFICATION	0.004103481792655676	DESIGN
construct the proxy method	WITHOUT_CLASSIFICATION	0.9994391558883776	WITHOUT_CLASSIFICATION	5.608441116224748E-4	DESIGN
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9993009346587023	WITHOUT_CLASSIFICATION	6.990653412977703E-4	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999805088618879	WITHOUT_CLASSIFICATION	1.9491138112028985E-5	DESIGN
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9993009346587023	WITHOUT_CLASSIFICATION	6.990653412977703E-4	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999921557187129	WITHOUT_CLASSIFICATION	7.844281287054833E-6	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999805088618879	WITHOUT_CLASSIFICATION	1.9491138112028985E-5	DESIGN
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999395174422318	WITHOUT_CLASSIFICATION	6.048255776814964E-5	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9998522556257938	WITHOUT_CLASSIFICATION	1.4774437420627334E-4	DESIGN
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9999355171897212	WITHOUT_CLASSIFICATION	6.448281027882301E-5	DESIGN
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8730738932995407	DESIGN	0.1269261067004594	WITHOUT_CLASSIFICATION
check visibility dup method	WITHOUT_CLASSIFICATION	0.9987862820838462	WITHOUT_CLASSIFICATION	0.0012137179161537605	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9954926156348045	WITHOUT_CLASSIFICATION	0.004507384365195393	DESIGN
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9994083121170315	WITHOUT_CLASSIFICATION	5.916878829685898E-4	DESIGN
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9973932296971353	WITHOUT_CLASSIFICATION	0.002606770302864681	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.8791873396882233	WITHOUT_CLASSIFICATION	0.12081266031177683	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9943150101767251	WITHOUT_CLASSIFICATION	0.005684989823274918	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9966250366205689	WITHOUT_CLASSIFICATION	0.0033749633794311943	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.5752902769370404	DESIGN	0.42470972306295957	WITHOUT_CLASSIFICATION
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9980961178377636	WITHOUT_CLASSIFICATION	0.0019038821622363524	DESIGN
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.9982469218471389	WITHOUT_CLASSIFICATION	0.0017530781528609623	DESIGN
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9998844408852956	WITHOUT_CLASSIFICATION	1.1555911470447383E-4	DESIGN
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9527806763070492	WITHOUT_CLASSIFICATION	0.04721932369295086	DESIGN
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.847764874789411	WITHOUT_CLASSIFICATION	0.15223512521058902	DESIGN
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9988404499744257	WITHOUT_CLASSIFICATION	0.0011595500255742555	DESIGN
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.5305179893102142	WITHOUT_CLASSIFICATION	0.4694820106897858	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9995449611705743	WITHOUT_CLASSIFICATION	4.5503882942576755E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9993296744436745	WITHOUT_CLASSIFICATION	6.703255563254386E-4	DESIGN
constructor	WITHOUT_CLASSIFICATION	0.9995883981181612	WITHOUT_CLASSIFICATION	4.1160188183873397E-4	DESIGN
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9998760451005796	WITHOUT_CLASSIFICATION	1.2395489942035917E-4	DESIGN
$>: default output handle	WITHOUT_CLASSIFICATION	0.9987764520406113	WITHOUT_CLASSIFICATION	0.0012235479593887535	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.997785657011684	WITHOUT_CLASSIFICATION	0.0022143429883160494	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9996319086156085	WITHOUT_CLASSIFICATION	3.6809138439156916E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.7188613952993591	WITHOUT_CLASSIFICATION	0.28113860470064095	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.7188613952993591	WITHOUT_CLASSIFICATION	0.28113860470064095	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9990469381526161	WITHOUT_CLASSIFICATION	9.530618473838026E-4	DESIGN
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999779622575181	WITHOUT_CLASSIFICATION	2.2037742481903802E-5	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.996617661519639	WITHOUT_CLASSIFICATION	0.003382338480360852	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7669530068407454	WITHOUT_CLASSIFICATION	0.23304699315925453	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7669530068407454	WITHOUT_CLASSIFICATION	0.23304699315925453	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7669530068407454	WITHOUT_CLASSIFICATION	0.23304699315925453	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7669530068407454	WITHOUT_CLASSIFICATION	0.23304699315925453	DESIGN
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.9954373350366774	WITHOUT_CLASSIFICATION	0.004562664963322538	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9909926566377711	WITHOUT_CLASSIFICATION	0.00900734336222876	DESIGN
"else" body	WITHOUT_CLASSIFICATION	0.9998209986021318	WITHOUT_CLASSIFICATION	1.7900139786813693E-4	DESIGN
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.7941893196940052	DESIGN	0.20581068030599475	WITHOUT_CLASSIFICATION
read-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.99993075453084	WITHOUT_CLASSIFICATION	6.924546915999534E-5	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9962960120569906	WITHOUT_CLASSIFICATION	0.0037039879430093865	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9962960120569906	WITHOUT_CLASSIFICATION	0.0037039879430093865	DESIGN
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9960295942537634	WITHOUT_CLASSIFICATION	0.0039704057462366825	DESIGN
10!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9997141176608582	WITHOUT_CLASSIFICATION	2.8588233914187403E-4	DESIGN
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9191017442352685	WITHOUT_CLASSIFICATION	0.08089825576473159	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998494863551467	WITHOUT_CLASSIFICATION	1.505136448533769E-4	DESIGN
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9996358149554607	WITHOUT_CLASSIFICATION	3.6418504453927667E-4	DESIGN
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9974241246961021	WITHOUT_CLASSIFICATION	0.002575875303897828	DESIGN
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9998559999279668	WITHOUT_CLASSIFICATION	1.4400007203326374E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999921557187129	WITHOUT_CLASSIFICATION	7.844281287054833E-6	DESIGN
line 449	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 495	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
Management/monitoring	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999924092499929	WITHOUT_CLASSIFICATION	7.590750007135012E-6	DESIGN
14!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9999624552583747	WITHOUT_CLASSIFICATION	3.7544741625370787E-5	DESIGN
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9963176360733104	WITHOUT_CLASSIFICATION	0.0036823639266897377	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999821727144471	WITHOUT_CLASSIFICATION	1.7827285552878283E-5	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999821727144471	WITHOUT_CLASSIFICATION	1.7827285552878283E-5	DESIGN
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9997141176608582	WITHOUT_CLASSIFICATION	2.8588233914187403E-4	DESIGN
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.9998384277377189	WITHOUT_CLASSIFICATION	1.615722622810745E-4	DESIGN
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9749977111515384	WITHOUT_CLASSIFICATION	0.025002288848461545	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9998182898026038	WITHOUT_CLASSIFICATION	1.8171019739623862E-4	DESIGN
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9987569574815597	WITHOUT_CLASSIFICATION	0.0012430425184403338	DESIGN
18!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9959508178476226	WITHOUT_CLASSIFICATION	0.0040491821523773695	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9850336642012115	WITHOUT_CLASSIFICATION	0.014966335798788474	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9850336642012115	WITHOUT_CLASSIFICATION	0.014966335798788474	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9850336642012115	WITHOUT_CLASSIFICATION	0.014966335798788474	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9850336642012115	WITHOUT_CLASSIFICATION	0.014966335798788474	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9989113351671297	WITHOUT_CLASSIFICATION	0.0010886648328702927	DESIGN
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.9996183271233738	WITHOUT_CLASSIFICATION	3.8167287662615426E-4	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9965867802491986	WITHOUT_CLASSIFICATION	0.0034132197508013845	DESIGN
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9974891846074404	WITHOUT_CLASSIFICATION	0.0025108153925595743	DESIGN
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9997206805393886	WITHOUT_CLASSIFICATION	2.793194606113832E-4	DESIGN
22!	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9997516722059792	WITHOUT_CLASSIFICATION	2.4832779402084485E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9959939158714979	WITHOUT_CLASSIFICATION	0.004006084128502092	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9959939158714979	WITHOUT_CLASSIFICATION	0.004006084128502092	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9959939158714979	WITHOUT_CLASSIFICATION	0.004006084128502092	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9996715409463308	WITHOUT_CLASSIFICATION	3.2845905366916646E-4	DESIGN
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9948960929149985	WITHOUT_CLASSIFICATION	0.005103907085001595	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9075470907920994	WITHOUT_CLASSIFICATION	0.09245290920790065	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9075470907920994	WITHOUT_CLASSIFICATION	0.09245290920790065	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9999988884743937	WITHOUT_CLASSIFICATION	1.1115256063105869E-6	DESIGN
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9640280483428917	WITHOUT_CLASSIFICATION	0.03597195165710831	DESIGN
BASE64	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9997347603420366	WITHOUT_CLASSIFICATION	2.6523965796342323E-4	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9993474307012459	WITHOUT_CLASSIFICATION	6.525692987540619E-4	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9784472810970181	WITHOUT_CLASSIFICATION	0.021552718902981927	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9784472810970181	WITHOUT_CLASSIFICATION	0.021552718902981927	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9991366755828807	WITHOUT_CLASSIFICATION	8.633244171193048E-4	DESIGN
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999968760055922	WITHOUT_CLASSIFICATION	3.1239944078667923E-6	DESIGN
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9933919091420528	WITHOUT_CLASSIFICATION	0.006608090857947155	DESIGN
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9972123793649674	WITHOUT_CLASSIFICATION	0.002787620635032632	DESIGN
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9933377041445172	WITHOUT_CLASSIFICATION	0.006662295855482883	DESIGN
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9998475790482793	WITHOUT_CLASSIFICATION	1.5242095172071223E-4	DESIGN
carriage return	WITHOUT_CLASSIFICATION	0.9998063017921317	WITHOUT_CLASSIFICATION	1.9369820786824485E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9920548767068192	WITHOUT_CLASSIFICATION	0.007945123293180851	DESIGN
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9999840435262178	WITHOUT_CLASSIFICATION	1.595647378212197E-5	DESIGN
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.9999864503990198	WITHOUT_CLASSIFICATION	1.3549600980159423E-5	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998248471713361	WITHOUT_CLASSIFICATION	1.7515282866384393E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9733867739668047	WITHOUT_CLASSIFICATION	0.026613226033195218	DESIGN
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.9990515784154883	WITHOUT_CLASSIFICATION	9.484215845117944E-4	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999928551535775	WITHOUT_CLASSIFICATION	7.144846422516436E-6	DESIGN
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.995261907777837	WITHOUT_CLASSIFICATION	0.004738092222162993	DESIGN
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9620535996550851	WITHOUT_CLASSIFICATION	0.03794640034491491	DESIGN
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9991350069970831	WITHOUT_CLASSIFICATION	8.649930029168423E-4	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998036444219593	WITHOUT_CLASSIFICATION	1.963555780407291E-4	DESIGN
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9980797279084543	WITHOUT_CLASSIFICATION	0.001920272091545707	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999935568822966	WITHOUT_CLASSIFICATION	6.443117703430742E-6	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9941127453182685	WITHOUT_CLASSIFICATION	0.005887254681731564	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9995317485432458	WITHOUT_CLASSIFICATION	4.682514567542715E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9995317485432458	WITHOUT_CLASSIFICATION	4.682514567542715E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9995317485432458	WITHOUT_CLASSIFICATION	4.682514567542715E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9995317485432458	WITHOUT_CLASSIFICATION	4.682514567542715E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9995317485432458	WITHOUT_CLASSIFICATION	4.682514567542715E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9995317485432458	WITHOUT_CLASSIFICATION	4.682514567542715E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9995317485432458	WITHOUT_CLASSIFICATION	4.682514567542715E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9995317485432458	WITHOUT_CLASSIFICATION	4.682514567542715E-4	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9922677219185443	WITHOUT_CLASSIFICATION	0.007732278081455823	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9994696457055754	WITHOUT_CLASSIFICATION	5.30354294424556E-4	DESIGN
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9996532606636505	WITHOUT_CLASSIFICATION	3.4673933634957063E-4	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.886911823098061	WITHOUT_CLASSIFICATION	0.11308817690193894	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9728032753530512	WITHOUT_CLASSIFICATION	0.027196724646948795	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9728032753530512	WITHOUT_CLASSIFICATION	0.027196724646948795	DESIGN
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9997812657625736	WITHOUT_CLASSIFICATION	2.1873423742648217E-4	DESIGN
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9901030526663731	DESIGN	0.009896947333626963	WITHOUT_CLASSIFICATION
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9978082129767978	WITHOUT_CLASSIFICATION	0.0021917870232023165	DESIGN
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.99790314616116	WITHOUT_CLASSIFICATION	0.002096853838840027	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999274843630306	WITHOUT_CLASSIFICATION	7.251563696946725E-5	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9996640462384155	WITHOUT_CLASSIFICATION	3.3595376158449485E-4	DESIGN
read	WITHOUT_CLASSIFICATION	0.998781303178163	WITHOUT_CLASSIFICATION	0.001218696821836964	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.5450854587477121	WITHOUT_CLASSIFICATION	0.4549145412522879	DESIGN
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9953170150641942	WITHOUT_CLASSIFICATION	0.004682984935805753	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9946123088417024	WITHOUT_CLASSIFICATION	0.005387691158297704	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9946123088417024	WITHOUT_CLASSIFICATION	0.005387691158297704	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9946123088417024	WITHOUT_CLASSIFICATION	0.005387691158297704	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.99818543818977	WITHOUT_CLASSIFICATION	0.0018145618102298963	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9988228218778452	WITHOUT_CLASSIFICATION	0.0011771781221548213	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9990384274879585	WITHOUT_CLASSIFICATION	9.615725120416006E-4	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9994475976860511	WITHOUT_CLASSIFICATION	5.52402313948892E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.998435028603341	WITHOUT_CLASSIFICATION	0.0015649713966590282	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9997824182257732	WITHOUT_CLASSIFICATION	2.175817742268511E-4	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9998736559456426	WITHOUT_CLASSIFICATION	1.2634405435735306E-4	DESIGN
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9995182280393923	WITHOUT_CLASSIFICATION	4.81771960607632E-4	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9901917792917322	WITHOUT_CLASSIFICATION	0.009808220708267801	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9901917792917322	WITHOUT_CLASSIFICATION	0.009808220708267801	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9990169668368846	WITHOUT_CLASSIFICATION	9.830331631154375E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998882553235894	WITHOUT_CLASSIFICATION	1.1174467641062686E-4	DESIGN
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9988155646941271	WITHOUT_CLASSIFICATION	0.001184435305872896	DESIGN
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.99977085134623	WITHOUT_CLASSIFICATION	2.2914865377013268E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9998530160887231	WITHOUT_CLASSIFICATION	1.4698391127689596E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9998530160887231	WITHOUT_CLASSIFICATION	1.4698391127689596E-4	DESIGN
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.7698804213043406	DESIGN	0.23011957869565938	WITHOUT_CLASSIFICATION
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9995972764194667	WITHOUT_CLASSIFICATION	4.0272358053316604E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9984870572183937	WITHOUT_CLASSIFICATION	0.0015129427816062484	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
self	WITHOUT_CLASSIFICATION	0.9968123889986193	WITHOUT_CLASSIFICATION	0.003187611001380661	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9997080538275408	WITHOUT_CLASSIFICATION	2.919461724591959E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9994658124546326	WITHOUT_CLASSIFICATION	5.341875453674358E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9994658124546326	WITHOUT_CLASSIFICATION	5.341875453674358E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9998668547817904	WITHOUT_CLASSIFICATION	1.331452182096141E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9998668547817904	WITHOUT_CLASSIFICATION	1.331452182096141E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9992056681252628	WITHOUT_CLASSIFICATION	7.943318747371282E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999640047505837	WITHOUT_CLASSIFICATION	3.599524941627339E-5	DESIGN
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9997777991022956	WITHOUT_CLASSIFICATION	2.2220089770438688E-4	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.999557344840075	WITHOUT_CLASSIFICATION	4.42655159925081E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998077734418901	WITHOUT_CLASSIFICATION	1.922265581098436E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9991863803173603	WITHOUT_CLASSIFICATION	8.136196826397447E-4	DESIGN
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.9998059091181511	WITHOUT_CLASSIFICATION	1.9409088184882707E-4	DESIGN
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9776281942175693	WITHOUT_CLASSIFICATION	0.02237180578243076	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9342592495506737	WITHOUT_CLASSIFICATION	0.06574075044932631	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.998842642658304	WITHOUT_CLASSIFICATION	0.0011573573416959883	DESIGN
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9829776467842782	WITHOUT_CLASSIFICATION	0.0170223532157218	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9998680942402601	WITHOUT_CLASSIFICATION	1.3190575973996468E-4	DESIGN
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.6577620214344322	WITHOUT_CLASSIFICATION	0.3422379785655679	DESIGN
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9405983793946864	WITHOUT_CLASSIFICATION	0.0594016206053137	DESIGN
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9976459849943407	WITHOUT_CLASSIFICATION	0.002354015005659444	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9927144458869737	WITHOUT_CLASSIFICATION	0.007285554113026365	DESIGN
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999995404161204	WITHOUT_CLASSIFICATION	4.5958387960320835E-7	DESIGN
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9995381975154543	WITHOUT_CLASSIFICATION	4.618024845457975E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.5752902769370404	DESIGN	0.42470972306295957	WITHOUT_CLASSIFICATION
arg	WITHOUT_CLASSIFICATION	0.9987475076209131	WITHOUT_CLASSIFICATION	0.001252492379086887	DESIGN
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999503867837464	WITHOUT_CLASSIFICATION	4.9613216253657716E-5	DESIGN
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.999879898298183	WITHOUT_CLASSIFICATION	1.2010170181703817E-4	DESIGN
coerce arguments	WITHOUT_CLASSIFICATION	0.9995727837593195	WITHOUT_CLASSIFICATION	4.2721624068060545E-4	DESIGN
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9976047716652349	WITHOUT_CLASSIFICATION	0.0023952283347650886	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9995449611705743	WITHOUT_CLASSIFICATION	4.5503882942576755E-4	DESIGN
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9993839249022003	WITHOUT_CLASSIFICATION	6.160750977996541E-4	DESIGN
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9986374891217163	WITHOUT_CLASSIFICATION	0.0013625108782836287	DESIGN
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9974861645562254	WITHOUT_CLASSIFICATION	0.002513835443774511	DESIGN
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9992747215660536	WITHOUT_CLASSIFICATION	7.252784339464558E-4	DESIGN
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9985768816426722	WITHOUT_CLASSIFICATION	0.0014231183573278575	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9977070982412491	WITHOUT_CLASSIFICATION	0.002292901758750887	DESIGN
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999327838256092	WITHOUT_CLASSIFICATION	6.721617439080108E-5	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9996050494772177	WITHOUT_CLASSIFICATION	3.9495052278217555E-4	DESIGN
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9588633446267704	WITHOUT_CLASSIFICATION	0.041136655373229705	DESIGN
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9988436280557771	WITHOUT_CLASSIFICATION	0.0011563719442229052	DESIGN
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9976958153992334	WITHOUT_CLASSIFICATION	0.0023041846007666824	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.9996744234165191	WITHOUT_CLASSIFICATION	3.2557658348087554E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9671877912275203	WITHOUT_CLASSIFICATION	0.032812208772479694	DESIGN
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.6972908274887394	DESIGN	0.3027091725112605	WITHOUT_CLASSIFICATION
finally	WITHOUT_CLASSIFICATION	0.9986321988421628	WITHOUT_CLASSIFICATION	0.0013678011578372546	DESIGN
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9965115558250013	WITHOUT_CLASSIFICATION	0.00348844417499867	DESIGN
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999664067381586	WITHOUT_CLASSIFICATION	3.359326184133969E-5	DESIGN
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9175525463392834	WITHOUT_CLASSIFICATION	0.08244745366071657	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9615420024672782	WITHOUT_CLASSIFICATION	0.03845799753272173	DESIGN
specific arity	WITHOUT_CLASSIFICATION	0.9995478648595406	WITHOUT_CLASSIFICATION	4.5213514045941194E-4	DESIGN
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999988970348299	WITHOUT_CLASSIFICATION	1.102965170007337E-6	DESIGN
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999907927360641	WITHOUT_CLASSIFICATION	9.207263935884118E-6	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9993211305545866	WITHOUT_CLASSIFICATION	6.788694454134875E-4	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9995223508256941	WITHOUT_CLASSIFICATION	4.7764917430590697E-4	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9995223508256941	WITHOUT_CLASSIFICATION	4.7764917430590697E-4	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9995858198171923	WITHOUT_CLASSIFICATION	4.141801828076718E-4	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9995858198171923	WITHOUT_CLASSIFICATION	4.141801828076718E-4	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9509808259271648	WITHOUT_CLASSIFICATION	0.04901917407283519	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9509808259271648	WITHOUT_CLASSIFICATION	0.04901917407283519	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9997732837520197	WITHOUT_CLASSIFICATION	2.2671624798032203E-4	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9997732837520197	WITHOUT_CLASSIFICATION	2.2671624798032203E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9974852928218282	WITHOUT_CLASSIFICATION	0.0025147071781719326	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9974852928218282	WITHOUT_CLASSIFICATION	0.0025147071781719326	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9974852928218282	WITHOUT_CLASSIFICATION	0.0025147071781719326	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9996743472604901	WITHOUT_CLASSIFICATION	3.2565273950989793E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997784777045635	WITHOUT_CLASSIFICATION	2.2152229543632838E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997784777045635	WITHOUT_CLASSIFICATION	2.2152229543632838E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9997784777045635	WITHOUT_CLASSIFICATION	2.2152229543632838E-4	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9987503110139297	WITHOUT_CLASSIFICATION	0.0012496889860701805	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9987503110139297	WITHOUT_CLASSIFICATION	0.0012496889860701805	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9987503110139297	WITHOUT_CLASSIFICATION	0.0012496889860701805	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9990944142363972	WITHOUT_CLASSIFICATION	9.05585763602719E-4	DESIGN
backspace	WITHOUT_CLASSIFICATION	0.9984466009918432	WITHOUT_CLASSIFICATION	0.0015533990081568428	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
package-private	WITHOUT_CLASSIFICATION	0.9996579277269557	WITHOUT_CLASSIFICATION	3.420722730443054E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9994696457055754	WITHOUT_CLASSIFICATION	5.30354294424556E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9994696457055754	WITHOUT_CLASSIFICATION	5.30354294424556E-4	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9754682051057076	WITHOUT_CLASSIFICATION	0.024531794894292337	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999974289288723	WITHOUT_CLASSIFICATION	2.571071127688701E-6	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999974289288723	WITHOUT_CLASSIFICATION	2.571071127688701E-6	DESIGN
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.7022830980515872	DESIGN	0.29771690194841277	WITHOUT_CLASSIFICATION
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999257444050238	WITHOUT_CLASSIFICATION	7.425559497621089E-4	DESIGN
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9993953338864396	WITHOUT_CLASSIFICATION	6.046661135603667E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999447592947669	WITHOUT_CLASSIFICATION	5.5240705233098515E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999447592947669	WITHOUT_CLASSIFICATION	5.5240705233098515E-5	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9752954928919765	WITHOUT_CLASSIFICATION	0.024704507108023507	DESIGN
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999991522467304	WITHOUT_CLASSIFICATION	8.47753269603571E-6	DESIGN
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9155925957287878	WITHOUT_CLASSIFICATION	0.08440740427121217	DESIGN
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.9845309620606165	WITHOUT_CLASSIFICATION	0.015469037939383456	DESIGN
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9970886347542058	WITHOUT_CLASSIFICATION	0.0029113652457942135	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999447592947669	WITHOUT_CLASSIFICATION	5.5240705233098515E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999447592947669	WITHOUT_CLASSIFICATION	5.5240705233098515E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999447592947669	WITHOUT_CLASSIFICATION	5.5240705233098515E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999447592947669	WITHOUT_CLASSIFICATION	5.5240705233098515E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999447592947669	WITHOUT_CLASSIFICATION	5.5240705233098515E-5	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9995528737660772	WITHOUT_CLASSIFICATION	4.4712623392283634E-4	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9985169986050805	WITHOUT_CLASSIFICATION	0.0014830013949195166	DESIGN
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9997013719563292	WITHOUT_CLASSIFICATION	2.9862804367074687E-4	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9996510925071316	WITHOUT_CLASSIFICATION	3.489074928684872E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9999924973104403	WITHOUT_CLASSIFICATION	7.5026895597669935E-6	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9988242624767384	WITHOUT_CLASSIFICATION	0.0011757375232616762	DESIGN
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.7631879095878652	WITHOUT_CLASSIFICATION	0.23681209041213488	DESIGN
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9887258135034517	WITHOUT_CLASSIFICATION	0.011274186496548343	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9998647245258572	WITHOUT_CLASSIFICATION	1.3527547414283737E-4	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.9977947335280412	WITHOUT_CLASSIFICATION	0.002205266471958799	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9992845371401424	WITHOUT_CLASSIFICATION	7.154628598575334E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9980799032759889	WITHOUT_CLASSIFICATION	0.0019200967240109736	DESIGN
only public methods	WITHOUT_CLASSIFICATION	0.9999037293505006	WITHOUT_CLASSIFICATION	9.627064949934471E-5	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998154537681585	WITHOUT_CLASSIFICATION	1.8454623184153794E-4	DESIGN
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9999763243105996	WITHOUT_CLASSIFICATION	2.3675689400481525E-5	DESIGN
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.9393647892269614	WITHOUT_CLASSIFICATION	0.06063521077303868	DESIGN
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9991142960221487	WITHOUT_CLASSIFICATION	8.857039778512272E-4	DESIGN
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9992517584143656	WITHOUT_CLASSIFICATION	7.482415856343538E-4	DESIGN
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9993940821980463	WITHOUT_CLASSIFICATION	6.059178019537007E-4	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9994861460696175	WITHOUT_CLASSIFICATION	5.138539303825375E-4	DESIGN
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9994520872596468	WITHOUT_CLASSIFICATION	5.479127403530942E-4	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9998520466602903	WITHOUT_CLASSIFICATION	1.4795333970977635E-4	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999960056390736	WITHOUT_CLASSIFICATION	3.994360926409779E-6	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9992231061361727	WITHOUT_CLASSIFICATION	7.768938638273276E-4	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9992231061361727	WITHOUT_CLASSIFICATION	7.768938638273276E-4	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9992231061361727	WITHOUT_CLASSIFICATION	7.768938638273276E-4	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9992231061361727	WITHOUT_CLASSIFICATION	7.768938638273276E-4	DESIGN
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999780146585019	WITHOUT_CLASSIFICATION	2.1985341498053845E-5	DESIGN
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9854872674472778	WITHOUT_CLASSIFICATION	0.01451273255272228	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9993517446070688	WITHOUT_CLASSIFICATION	6.482553929312387E-4	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9993517446070688	WITHOUT_CLASSIFICATION	6.482553929312387E-4	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9912706987104858	WITHOUT_CLASSIFICATION	0.008729301289514135	DESIGN
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.9986832179370689	WITHOUT_CLASSIFICATION	0.0013167820629311658	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9996864651523648	WITHOUT_CLASSIFICATION	3.1353484763520104E-4	DESIGN
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999183215029913	WITHOUT_CLASSIFICATION	8.167849700866576E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9934897583847326	WITHOUT_CLASSIFICATION	0.006510241615267323	DESIGN
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9876505302003895	WITHOUT_CLASSIFICATION	0.012349469799610486	DESIGN
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9979060788291281	WITHOUT_CLASSIFICATION	0.002093921170871921	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.999120921097249	WITHOUT_CLASSIFICATION	8.79078902750984E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.999120921097249	WITHOUT_CLASSIFICATION	8.79078902750984E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.999120921097249	WITHOUT_CLASSIFICATION	8.79078902750984E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.999120921097249	WITHOUT_CLASSIFICATION	8.79078902750984E-4	DESIGN
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999891499385002	WITHOUT_CLASSIFICATION	1.085006149975243E-5	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9982720367399521	WITHOUT_CLASSIFICATION	0.0017279632600478627	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9982720367399521	WITHOUT_CLASSIFICATION	0.0017279632600478627	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9982720367399521	WITHOUT_CLASSIFICATION	0.0017279632600478627	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9975858325916169	WITHOUT_CLASSIFICATION	0.0024141674083831485	DESIGN
finally with no exception	WITHOUT_CLASSIFICATION	0.99881105597636	WITHOUT_CLASSIFICATION	0.0011889440236400475	DESIGN
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9468071959781295	WITHOUT_CLASSIFICATION	0.05319280402187046	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7669530068407454	WITHOUT_CLASSIFICATION	0.23304699315925453	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7669530068407454	WITHOUT_CLASSIFICATION	0.23304699315925453	DESIGN
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.98281818770445	WITHOUT_CLASSIFICATION	0.017181812295550106	DESIGN
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999930754251204	WITHOUT_CLASSIFICATION	6.9245748797102005E-6	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.994064467658549	WITHOUT_CLASSIFICATION	0.005935532341450975	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.994064467658549	WITHOUT_CLASSIFICATION	0.005935532341450975	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8869084184034303	WITHOUT_CLASSIFICATION	0.11309158159656973	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.8869084184034303	WITHOUT_CLASSIFICATION	0.11309158159656973	DESIGN
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9986588704957018	WITHOUT_CLASSIFICATION	0.0013411295042982082	DESIGN
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.8993787504749968	WITHOUT_CLASSIFICATION	0.10062124952500315	DESIGN
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9989500939326318	WITHOUT_CLASSIFICATION	0.0010499060673682767	DESIGN
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999442933231291	WITHOUT_CLASSIFICATION	5.5706676870827195E-5	DESIGN
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.999870082127858	WITHOUT_CLASSIFICATION	1.2991787214198386E-4	DESIGN
create the default thread group	WITHOUT_CLASSIFICATION	0.9993018263559055	WITHOUT_CLASSIFICATION	6.981736440946207E-4	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9987641870931927	WITHOUT_CLASSIFICATION	0.001235812906807294	DESIGN
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.998031512780479	WITHOUT_CLASSIFICATION	0.001968487219520972	DESIGN
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.9364669450832693	WITHOUT_CLASSIFICATION	0.0635330549167307	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9890231765256744	WITHOUT_CLASSIFICATION	0.010976823474325584	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9890231765256744	WITHOUT_CLASSIFICATION	0.010976823474325584	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9997749642327758	WITHOUT_CLASSIFICATION	2.2503576722420087E-4	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9997749642327758	WITHOUT_CLASSIFICATION	2.2503576722420087E-4	DESIGN
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9932853252302705	WITHOUT_CLASSIFICATION	0.006714674769729541	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999402205114193	WITHOUT_CLASSIFICATION	5.977948858070528E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9987062360992769	WITHOUT_CLASSIFICATION	0.0012937639007231025	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9987062360992769	WITHOUT_CLASSIFICATION	0.0012937639007231025	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9987062360992769	WITHOUT_CLASSIFICATION	0.0012937639007231025	DESIGN
line 286	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 476	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 513	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 530	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 533	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 551	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
end loop	WITHOUT_CLASSIFICATION	0.999769810960961	WITHOUT_CLASSIFICATION	2.3018903903912705E-4	DESIGN
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.99982099935941	WITHOUT_CLASSIFICATION	1.7900064058985936E-4	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9781401513089918	WITHOUT_CLASSIFICATION	0.02185984869100823	DESIGN
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9988750279507118	WITHOUT_CLASSIFICATION	0.001124972049288169	DESIGN
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9997358513629968	WITHOUT_CLASSIFICATION	2.641486370031922E-4	DESIGN
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9992312019832548	WITHOUT_CLASSIFICATION	7.687980167453328E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.7669530068407454	WITHOUT_CLASSIFICATION	0.23304699315925453	DESIGN
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9769232501027328	WITHOUT_CLASSIFICATION	0.023076749897267098	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.999585787770065	WITHOUT_CLASSIFICATION	4.1421222993505224E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.7188613952993591	WITHOUT_CLASSIFICATION	0.28113860470064095	DESIGN
value	WITHOUT_CLASSIFICATION	0.9990186983378927	WITHOUT_CLASSIFICATION	9.81301662107358E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9990186983378927	WITHOUT_CLASSIFICATION	9.81301662107358E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9990186983378927	WITHOUT_CLASSIFICATION	9.81301662107358E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9990186983378927	WITHOUT_CLASSIFICATION	9.81301662107358E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9990186983378927	WITHOUT_CLASSIFICATION	9.81301662107358E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9984253278466549	WITHOUT_CLASSIFICATION	0.0015746721533450108	DESIGN
value	WITHOUT_CLASSIFICATION	0.9990186983378927	WITHOUT_CLASSIFICATION	9.81301662107358E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9990186983378927	WITHOUT_CLASSIFICATION	9.81301662107358E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9990186983378927	WITHOUT_CLASSIFICATION	9.81301662107358E-4	DESIGN
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.9001537394295084	WITHOUT_CLASSIFICATION	0.09984626057049163	DESIGN
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9942063831697461	WITHOUT_CLASSIFICATION	0.005793616830253927	DESIGN
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9988006796489433	WITHOUT_CLASSIFICATION	0.001199320351056809	DESIGN
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9970423978149472	WITHOUT_CLASSIFICATION	0.002957602185052763	DESIGN
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9972969904352084	WITHOUT_CLASSIFICATION	0.0027030095647916272	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998431035612088	WITHOUT_CLASSIFICATION	1.568964387912618E-4	DESIGN
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.999954916373597	WITHOUT_CLASSIFICATION	4.508362640293329E-5	DESIGN
line 572	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 625	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 649	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 723	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 745	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 766	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 800	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 812	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 827	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 864	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 886	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 911	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 929	WITHOUT_CLASSIFICATION	0.9989258062659777	WITHOUT_CLASSIFICATION	0.0010741937340223062	DESIGN
line 952	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 970	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 991	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1011	WITHOUT_CLASSIFICATION	0.9931908671383236	WITHOUT_CLASSIFICATION	0.006809132861676444	DESIGN
line 1026	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1067	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1085	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1145	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1169	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1201	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1229	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1287	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1293	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1307	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1325	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1363	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1398	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1473	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1492	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1523	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1562	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1582	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1620	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1635	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1652	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1681	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1755	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1789	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996517749093445	WITHOUT_CLASSIFICATION	3.4822509065544584E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9992192199451012	WITHOUT_CLASSIFICATION	7.807800548988597E-4	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9913714197820233	WITHOUT_CLASSIFICATION	0.00862858021797682	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9916005981467718	WITHOUT_CLASSIFICATION	0.008399401853228277	DESIGN
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9995002514121004	WITHOUT_CLASSIFICATION	4.997485878995691E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991286205623384	WITHOUT_CLASSIFICATION	8.713794376614742E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991286205623384	WITHOUT_CLASSIFICATION	8.713794376614742E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991286205623384	WITHOUT_CLASSIFICATION	8.713794376614742E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9991286205623384	WITHOUT_CLASSIFICATION	8.713794376614742E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9683409656095926	DESIGN	0.031659034390407494	WITHOUT_CLASSIFICATION
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.9943897960543301	WITHOUT_CLASSIFICATION	0.005610203945669835	DESIGN
line 313	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 339	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 361	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 413	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 451	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 472	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 500	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 515	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 555	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 582	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 619	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 636	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 669	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 703	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 776	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 814	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 823	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 854	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 872	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 905	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 925	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 958	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 992	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1047	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1072	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1081	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1108	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1136	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1168	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1192	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1241	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1267	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1286	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1301	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1314	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1333	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1362	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1395	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1420	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1439	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1476	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1535	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1588	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1618	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1643	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1669	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1728	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1753	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1779	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1794	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1812	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1837	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1895	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1925	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1950	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 1992	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
line 2014	WITHOUT_CLASSIFICATION	0.9988709240552189	WITHOUT_CLASSIFICATION	0.0011290759447810147	DESIGN
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.901097611675726	WITHOUT_CLASSIFICATION	0.09890238832427399	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9996948330233963	WITHOUT_CLASSIFICATION	3.0516697660364523E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998216577406823	WITHOUT_CLASSIFICATION	1.7834225931771138E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998216577406823	WITHOUT_CLASSIFICATION	1.7834225931771138E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998216577406823	WITHOUT_CLASSIFICATION	1.7834225931771138E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998216577406823	WITHOUT_CLASSIFICATION	1.7834225931771138E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998216577406823	WITHOUT_CLASSIFICATION	1.7834225931771138E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998216577406823	WITHOUT_CLASSIFICATION	1.7834225931771138E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998216577406823	WITHOUT_CLASSIFICATION	1.7834225931771138E-4	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9692766544148371	WITHOUT_CLASSIFICATION	0.03072334558516284	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9692766544148371	WITHOUT_CLASSIFICATION	0.03072334558516284	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9692766544148371	WITHOUT_CLASSIFICATION	0.03072334558516284	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9692766544148371	WITHOUT_CLASSIFICATION	0.03072334558516284	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9851949762990537	WITHOUT_CLASSIFICATION	0.014805023700946305	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9851949762990537	WITHOUT_CLASSIFICATION	0.014805023700946305	DESIGN
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.7707870304874671	DESIGN	0.2292129695125328	WITHOUT_CLASSIFICATION
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9997049490886339	WITHOUT_CLASSIFICATION	2.9505091136594575E-4	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9997049490886339	WITHOUT_CLASSIFICATION	2.9505091136594575E-4	DESIGN
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9966718943338356	WITHOUT_CLASSIFICATION	0.003328105666164396	DESIGN
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9949418837107671	WITHOUT_CLASSIFICATION	0.005058116289232894	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9988887140536427	WITHOUT_CLASSIFICATION	0.0011112859463573465	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9977457028392817	WITHOUT_CLASSIFICATION	0.0022542971607183164	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9977457028392817	WITHOUT_CLASSIFICATION	0.0022542971607183164	DESIGN
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9998070865586797	WITHOUT_CLASSIFICATION	1.9291344132031863E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998883809989885	WITHOUT_CLASSIFICATION	1.116190010114522E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9998883809989885	WITHOUT_CLASSIFICATION	1.116190010114522E-4	DESIGN
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.973575480801556	WITHOUT_CLASSIFICATION	0.026424519198444005	DESIGN
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.9994771432290565	DESIGN	5.228567709434594E-4	WITHOUT_CLASSIFICATION
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9997794365567272	WITHOUT_CLASSIFICATION	2.2056344327287222E-4	DESIGN
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9997579457655333	WITHOUT_CLASSIFICATION	2.4205423446669412E-4	DESIGN
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.999880272281821	WITHOUT_CLASSIFICATION	1.1972771817893267E-4	DESIGN
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9993578007588122	WITHOUT_CLASSIFICATION	6.421992411877635E-4	DESIGN
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999822653313721	WITHOUT_CLASSIFICATION	1.773466862785207E-5	DESIGN
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9985554566069573	WITHOUT_CLASSIFICATION	0.0014445433930426466	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998786181395755	WITHOUT_CLASSIFICATION	1.2138186042441222E-4	DESIGN
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9858276979694088	WITHOUT_CLASSIFICATION	0.014172302030591095	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9997796216493288	WITHOUT_CLASSIFICATION	2.203783506712235E-4	DESIGN
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.7260138710397316	WITHOUT_CLASSIFICATION	0.27398612896026847	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9997117188100545	WITHOUT_CLASSIFICATION	2.882811899454799E-4	DESIGN
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9865723769942852	WITHOUT_CLASSIFICATION	0.013427623005714706	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9991914677622719	WITHOUT_CLASSIFICATION	8.085322377280284E-4	DESIGN
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9994387058251115	WITHOUT_CLASSIFICATION	5.61294174888369E-4	DESIGN
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9989078954342921	WITHOUT_CLASSIFICATION	0.0010921045657078794	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9836819789594058	WITHOUT_CLASSIFICATION	0.016318021040594183	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9993305274451773	WITHOUT_CLASSIFICATION	6.694725548227069E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9993305274451773	WITHOUT_CLASSIFICATION	6.694725548227069E-4	DESIGN
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9989140614774216	WITHOUT_CLASSIFICATION	0.0010859385225784788	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.99995698968357	WITHOUT_CLASSIFICATION	4.301031643004623E-5	DESIGN
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9964577904267092	WITHOUT_CLASSIFICATION	0.0035422095732907995	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9980723113018019	WITHOUT_CLASSIFICATION	0.0019276886981981658	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9988937563682525	WITHOUT_CLASSIFICATION	0.0011062436317474794	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9988937563682525	WITHOUT_CLASSIFICATION	0.0011062436317474794	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9988937563682525	WITHOUT_CLASSIFICATION	0.0011062436317474794	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9075433878643581	WITHOUT_CLASSIFICATION	0.09245661213564185	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9984280172651124	WITHOUT_CLASSIFICATION	0.0015719827348874998	DESIGN
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9984484464103263	WITHOUT_CLASSIFICATION	0.0015515535896738163	DESIGN
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9997972866650314	WITHOUT_CLASSIFICATION	2.0271333496853607E-4	DESIGN
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.5547187834014603	WITHOUT_CLASSIFICATION	0.4452812165985397	DESIGN
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999965798808789	WITHOUT_CLASSIFICATION	3.4201191210565004E-6	DESIGN
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9974258951113597	WITHOUT_CLASSIFICATION	0.002574104888640176	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9990668057904883	WITHOUT_CLASSIFICATION	9.331942095117283E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9854037404776537	WITHOUT_CLASSIFICATION	0.014596259522346347	DESIGN
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.999802754667307	WITHOUT_CLASSIFICATION	1.9724533269313462E-4	DESIGN
reset buffer	WITHOUT_CLASSIFICATION	0.9999088479144401	WITHOUT_CLASSIFICATION	9.115208555985366E-5	DESIGN
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9963249944056094	WITHOUT_CLASSIFICATION	0.0036750055943906104	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8865678544476118	DESIGN	0.11343214555238823	WITHOUT_CLASSIFICATION
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.6325897810875247	WITHOUT_CLASSIFICATION	0.3674102189124753	DESIGN
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999469350750282	WITHOUT_CLASSIFICATION	5.306492497179525E-5	DESIGN
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999343509168814	WITHOUT_CLASSIFICATION	6.564908311856373E-5	DESIGN
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9972855260454374	WITHOUT_CLASSIFICATION	0.002714473954562482	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999920391415826	WITHOUT_CLASSIFICATION	7.960858417355007E-6	DESIGN
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9960731610742306	WITHOUT_CLASSIFICATION	0.003926838925769479	DESIGN
Fixme: Do we need the check or does Main.java not call this...they should consolidate	DESIGN	0.8672488376031534	WITHOUT_CLASSIFICATION	0.13275116239684662	DESIGN
FIXME: move out of this class!	DESIGN	0.6871683446503819	DESIGN	0.31283165534961804	WITHOUT_CLASSIFICATION
this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI we search all keys for a case-insensitive match, and use that	DESIGN	0.9631950242580404	DESIGN	0.03680497574195964	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.7048129934602234	DESIGN	0.29518700653977653	WITHOUT_CLASSIFICATION
FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9038920678902742	DESIGN	0.09610793210972587	WITHOUT_CLASSIFICATION
TODO: eliminate?	DESIGN	0.7669530068407454	WITHOUT_CLASSIFICATION	0.23304699315925453	DESIGN
TODO: People extending GzipWriter/reader will break. Find better way here.	DESIGN	0.9916887836756383	DESIGN	0.008311216324361638	WITHOUT_CLASSIFICATION
For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9959487898712795	WITHOUT_CLASSIFICATION	0.004051210128720423	DESIGN
we might need to perform a DST correction	DESIGN	0.9826035684686842	WITHOUT_CLASSIFICATION	0.017396431531315783	DESIGN
rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9958053322528726	WITHOUT_CLASSIFICATION	0.004194667747127425	DESIGN
rb_ary_push_m FIXME: Whis is this named "push_m"?	DESIGN	0.5314140449343572	DESIGN	0.46858595506564277	WITHOUT_CLASSIFICATION
from DUP_SETUP rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9958053322528726	WITHOUT_CLASSIFICATION	0.004194667747127425	DESIGN
TODO: ary_sort_check should be done here	DESIGN	0.9910598916174953	DESIGN	0.008940108382504726	WITHOUT_CLASSIFICATION
TODO: ary_sort_check should be done here	DESIGN	0.9910598916174953	DESIGN	0.008940108382504726	WITHOUT_CLASSIFICATION
TODO: is this correct ?	DESIGN	0.9793841690046037	DESIGN	0.020615830995396295	WITHOUT_CLASSIFICATION
TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.912574772128267	DESIGN	0.08742522787173294	WITHOUT_CLASSIFICATION
TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. How can we support this operation?	DESIGN	0.9967222994556312	DESIGN	0.0032777005443688557	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.925680090699525	DESIGN	0.07431990930047509	WITHOUT_CLASSIFICATION
FIXME: This table will get moved into POSIX library so we can get all actual supported signals. This is a quick fix to support basic signals until that happens.	DESIGN	0.9856656539110487	DESIGN	0.014334346088951419	WITHOUT_CLASSIFICATION
The implementations of these are all bonus (see TODO above) I was going to throw an error from these, but it appears to be the wrong place to do it.	DESIGN	0.8441216118617496	DESIGN	0.1558783881382503	WITHOUT_CLASSIFICATION
TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.7644053080474498	DESIGN	0.23559469195255028	WITHOUT_CLASSIFICATION
TODO: remove	DESIGN	0.6640524748665287	DESIGN	0.33594752513347126	WITHOUT_CLASSIFICATION
FIXME moved this here to get what's obviously a utility method out of IRubyObject. perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999897870170718	DESIGN	1.0212982928270723E-5	WITHOUT_CLASSIFICATION
FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.816015748167418	WITHOUT_CLASSIFICATION	0.183984251832582	DESIGN
TODO: Should frozen error have its own distinct class? If not should more share?	DESIGN	0.9978617795566943	DESIGN	0.0021382204433056853	WITHOUT_CLASSIFICATION
TODO: this is kinda gross	DESIGN	0.9919954727545292	DESIGN	0.008004527245470764	WITHOUT_CLASSIFICATION
Not sure how well this works, but it works much better than just currentTimeMillis by itself.	DESIGN	0.5604884422474264	DESIGN	0.4395115577525735	WITHOUT_CLASSIFICATION
TODO: exec should replace the current process. This could be possible with JNA.	DESIGN	0.989140857079676	DESIGN	0.010859142920324028	WITHOUT_CLASSIFICATION
FIXME: In order for Thread to play well with the standard 'new' behavior, it must provide an allocator that can create empty object instances which initialize then fills with appropriate data.	DESIGN	0.9963478798516567	WITHOUT_CLASSIFICATION	0.003652120148343168	DESIGN
TODO: not sure that we should skip calling join() altogether. Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9806796927663102	DESIGN	0.019320307233689833	WITHOUT_CLASSIFICATION
FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9466392082952688	DESIGN	0.05336079170473124	WITHOUT_CLASSIFICATION
FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9581221257149809	DESIGN	0.04187787428501903	WITHOUT_CLASSIFICATION
TODO: no java stringity	DESIGN	0.6482191373275366	WITHOUT_CLASSIFICATION	0.35178086267246356	DESIGN
need to reexamine this	DESIGN	0.975355817186917	WITHOUT_CLASSIFICATION	0.024644182813082983	DESIGN
TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.583888013431826	DESIGN	0.416111986568174	WITHOUT_CLASSIFICATION
TODO: why are we duplicating the constants here, and then in File::Constants below? File::Constants is included in IO.	DESIGN	0.8238377634011615	DESIGN	0.17616223659883848	WITHOUT_CLASSIFICATION
TODO: this method is not present in MRI!	DESIGN	0.9850449520148992	DESIGN	0.014955047985100845	WITHOUT_CLASSIFICATION
TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.6067818499829362	WITHOUT_CLASSIFICATION	0.39321815001706373	DESIGN
Something wrong we don't know the cwd... TODO: Is this behavior really desirable? /mov	DESIGN	0.9991375753016928	DESIGN	8.624246983072363E-4	WITHOUT_CLASSIFICATION
Fixme: This does not have exact same semantics as RubyArray.join, but they probably could be consolidated (perhaps as join(args[], sep, doChomp)).	DESIGN	0.7919744629339489	WITHOUT_CLASSIFICATION	0.20802553706605106	DESIGN
TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9990195066638281	DESIGN	9.8049333617184E-4	WITHOUT_CLASSIFICATION
TODO: Implement tty? and isatty. We have no real capability to determine this from java, but if we could set tty status, then we could invoke jruby differently to allow stdin to return true on this. This would allow things like cgi.rb to work properly.	DESIGN	0.9444001764791805	DESIGN	0.055599823520819595	WITHOUT_CLASSIFICATION
TODO: better error handling	DESIGN	0.9443310779568699	DESIGN	0.05566892204313018	WITHOUT_CLASSIFICATION
this seems unlikely to happen unless it's a totally bogus fileno ...so do we even need to bother trying to create one?	DESIGN	0.9874306599278921	WITHOUT_CLASSIFICATION	0.012569340072107815	DESIGN
IN FACT, we should probably raise an error, yes?	DESIGN	0.9873780204626876	WITHOUT_CLASSIFICATION	0.012621979537312448	DESIGN
TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.7506970292229014	WITHOUT_CLASSIFICATION	0.24930297077709862	DESIGN
FIXME we should probably still be dyncalling 'write' here	DESIGN	0.8609461610856917	DESIGN	0.13905383891430825	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9663355845760442	DESIGN	0.03366441542395576	WITHOUT_CLASSIFICATION
FIXME: I don't like the null checks here	DESIGN	0.9242121332861541	DESIGN	0.07578786671384585	WITHOUT_CLASSIFICATION
TODO: handle writing into original buffer better	DESIGN	0.9965021917336708	DESIGN	0.003497808266329159	WITHOUT_CLASSIFICATION
TODO: is this the right thing to do?	DESIGN	0.9989740236972032	DESIGN	0.0010259763027968011	WITHOUT_CLASSIFICATION
TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.7158123210993088	DESIGN	0.28418767890069113	WITHOUT_CLASSIFICATION
FIXME: If NativeException is expected to be used from Ruby code, it should provide a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.5245575586139334	DESIGN	0.47544244138606656	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.9161310502756088	DESIGN	0.08386894972439118	WITHOUT_CLASSIFICATION
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9448090171588008	DESIGN	0.05519098284119905	WITHOUT_CLASSIFICATION
FIXME: Obvious issue that not all platforms can display all attributes. Ugly hacks. Using generic posix library makes pushing inspect behavior into specific system impls rather painful.	DESIGN	0.999367478855048	DESIGN	6.325211449519382E-4	WITHOUT_CLASSIFICATION
Workaround for JRUBY-4149	DESIGN	0.9989738911259394	WITHOUT_CLASSIFICATION	0.001026108874060652	DESIGN
TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.6629895030834716	WITHOUT_CLASSIFICATION	0.3370104969165283	DESIGN
FIXME: This is copied code from RubyArray. Both RE, Struct, and Array should share one impl This is also hacky since I construct ruby objects to access ruby arrays through aref instead of something lower.	DESIGN	0.992362733773874	DESIGN	0.007637266226126008	WITHOUT_CLASSIFICATION
FIXME: We should not be regenerating this over and over	DESIGN	0.9770181758110155	DESIGN	0.022981824188984524	WITHOUT_CLASSIFICATION
FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9732087211712046	DESIGN	0.026791278828795357	WITHOUT_CLASSIFICATION
TODO: Consider a better way of synchronizing	DESIGN	0.9949869359694938	DESIGN	0.005013064030506153	WITHOUT_CLASSIFICATION
FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.5236297039599924	WITHOUT_CLASSIFICATION	0.4763702960400076	DESIGN
A cloned method now belongs to a new class. Set it. TODO: Make DynamicMethod immutable	DESIGN	0.8854447983881092	DESIGN	0.11455520161189071	WITHOUT_CLASSIFICATION
FIXME: figure out why we get null sometimes	DESIGN	0.9112716228972059	DESIGN	0.08872837710279408	WITHOUT_CLASSIFICATION
FIXME: Can get optimized for IEqlNode	DESIGN	0.6961630651120165	DESIGN	0.3038369348879835	WITHOUT_CLASSIFICATION
rb_mod_remove_cvar FIXME: any good reason to have two identical methods? (same as remove_class_variable)	DESIGN	0.8151320468740957	WITHOUT_CLASSIFICATION	0.1848679531259043	DESIGN
FIXME: these descriptions should probably be moved out, to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9654707046658236	DESIGN	0.03452929533417628	WITHOUT_CLASSIFICATION
TODO: what about n arg?	DESIGN	0.9325669612674047	DESIGN	0.06743303873259532	WITHOUT_CLASSIFICATION
TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9941484937991824	DESIGN	0.0058515062008176215	WITHOUT_CLASSIFICATION
regular division with some default precision TODO: proper algorithm to set the precision	DESIGN	0.9307207623153487	DESIGN	0.06927923768465126	WITHOUT_CLASSIFICATION
TODO: better algorithm to set precision needed	DESIGN	0.9891226867625516	DESIGN	0.010877313237448574	WITHOUT_CLASSIFICATION
FIXME: what should these really be? Numeric? assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.8148405003870028	DESIGN	0.18515949961299716	WITHOUT_CLASSIFICATION
FIXME: what should this really be? assert x instanceof RubyComplex;	DESIGN	0.9515534817692642	DESIGN	0.048446518230735806	WITHOUT_CLASSIFICATION
FIXME: the code below is a copy of RubyIO.puts, and we should avoid copy-paste.	DESIGN	0.7615460143645371	DESIGN	0.238453985635463	WITHOUT_CLASSIFICATION
Yow...this is still ugly	DESIGN	0.9781246749506507	WITHOUT_CLASSIFICATION	0.021875325049349272	DESIGN
end hack	DESIGN	0.7214358614011103	DESIGN	0.27856413859888973	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.6895473171854755	DESIGN	0.31045268281452454	WITHOUT_CLASSIFICATION
TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9969598981143116	DESIGN	0.003040101885688328	WITHOUT_CLASSIFICATION
TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.7148398021996955	DESIGN	0.28516019780030455	WITHOUT_CLASSIFICATION
FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.7320735474007233	WITHOUT_CLASSIFICATION	0.2679264525992767	DESIGN
TODO: This is almost RubyModule#instance_methods on the metaClass. Perhaps refactor.	DESIGN	0.9762683593080984	DESIGN	0.023731640691901538	WITHOUT_CLASSIFICATION
The following three methods must be defined fast, since they expect to modify the current frame (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999964640048985	WITHOUT_CLASSIFICATION	3.53599510151152E-6	DESIGN
FIXME: I think this chunk is equivalent to MRI id2name (and not our public method id2name). Make into method if used more than once.	DESIGN	0.9999986212504561	DESIGN	1.3787495438463313E-6	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7867012416180318	WITHOUT_CLASSIFICATION	0.2132987583819683	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7867012416180318	WITHOUT_CLASSIFICATION	0.2132987583819683	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7867012416180318	WITHOUT_CLASSIFICATION	0.2132987583819683	DESIGN
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.7230203768581297	WITHOUT_CLASSIFICATION	0.27697962314187047	DESIGN
TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9749283450202283	DESIGN	0.025071654979771797	WITHOUT_CLASSIFICATION
TODO: wire into new exception handling mechanism	DESIGN	0.984764897242436	DESIGN	0.015235102757563906	WITHOUT_CLASSIFICATION
FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name never exist at the same time.	DESIGN	0.5782330683442334	WITHOUT_CLASSIFICATION	0.4217669316557665	DESIGN
TODO: do above but not below for additional newline nodes	DESIGN	0.515124589352234	WITHOUT_CLASSIFICATION	0.48487541064776596	DESIGN
TODO: Figure out how this can happen and possibly remove	DESIGN	0.99903944402519	DESIGN	9.605559748100109E-4	WITHOUT_CLASSIFICATION
TODO: At least ParserSupport.attrset passes argsNode as null. ImplicitNil is wrong magic for setupArgs since it will IRubyObject[] { nil }. So we need to figure out a nice fast null pattern for setupArgs. assert argsNode != null : "receiverNode is not null";	DESIGN	0.999872195050968	DESIGN	1.278049490319901E-4	WITHOUT_CLASSIFICATION
FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9989735789394516	DESIGN	0.0010264210605483728	WITHOUT_CLASSIFICATION
FIXME: I use a for block to implement END node because we need a proc which captures its enclosing scope. ForBlock now represents these node and should be renamed.	DESIGN	0.9990926044257135	DESIGN	9.07395574286573E-4	WITHOUT_CLASSIFICATION
method has more than 500 lines; we'll need to split it and therefore need to use a heap-based scope	DESIGN	0.5903033698892648	WITHOUT_CLASSIFICATION	0.40969663011073515	DESIGN
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.7065260108377757	DESIGN	0.2934739891622242	WITHOUT_CLASSIFICATION
If it's a single-arg when but contains an array, we know it's a real literal array FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.964209774576316	DESIGN	0.03579022542368395	WITHOUT_CLASSIFICATION
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.7065260108377757	DESIGN	0.2934739891622242	WITHOUT_CLASSIFICATION
XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9828001624011209	WITHOUT_CLASSIFICATION	0.01719983759887904	DESIGN
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.8077183783251096	DESIGN	0.19228162167489038	WITHOUT_CLASSIFICATION
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.8077183783251096	DESIGN	0.19228162167489038	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9963025437372824	DESIGN	0.0036974562627175175	WITHOUT_CLASSIFICATION
TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999730395064426	DESIGN	2.696049355743747E-5	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9963025437372824	DESIGN	0.0036974562627175175	WITHOUT_CLASSIFICATION
arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9679088226091156	DESIGN	0.032091177390884504	WITHOUT_CLASSIFICATION
FIXME: This is temporary since the variable compilers assume we want args already on stack for assignment. We just pop and continue with 1.9 args logic.	DESIGN	0.5408057458909129	DESIGN	0.4591942541090871	WITHOUT_CLASSIFICATION
TODO: reads/writes from frame TODO: information on scoping TODO: visibility?	DESIGN	0.6811944367547239	WITHOUT_CLASSIFICATION	0.31880556324527615	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.5066953756550817	DESIGN	0.49330462434491834	WITHOUT_CLASSIFICATION
TODO: cache?	DESIGN	0.6756498062098572	WITHOUT_CLASSIFICATION	0.3243501937901428	DESIGN
TODO: cache?	DESIGN	0.6756498062098572	WITHOUT_CLASSIFICATION	0.3243501937901428	DESIGN
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.805870642955686	WITHOUT_CLASSIFICATION	0.19412935704431403	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9981894716279393	WITHOUT_CLASSIFICATION	0.0018105283720607544	DESIGN
FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9246520615133549	DESIGN	0.07534793848664517	WITHOUT_CLASSIFICATION
install invokedynamic bootstrapper TODO need to abstract this setup behind another compiler interface	DESIGN	0.9969427264300593	DESIGN	0.003057273569940648	WITHOUT_CLASSIFICATION
FIXME: This isn't right for within ensured/rescued code	DESIGN	0.941893786059411	DESIGN	0.058106213940588965	WITHOUT_CLASSIFICATION
SSS FIXME: Deprecated! Going forward, all instructions should come from the CFG	DESIGN	0.6594815373482457	WITHOUT_CLASSIFICATION	0.34051846265175445	DESIGN
SSS FIXME: Do we need to check if l is same as whatever popped?	DESIGN	0.8250030026766294	WITHOUT_CLASSIFICATION	0.17499699732337062	DESIGN
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.8476430989186233	DESIGN	0.15235690108137667	WITHOUT_CLASSIFICATION
SSS FIXME: I added this in. Is this correct?	DESIGN	0.9925643246191885	DESIGN	0.00743567538081152	WITHOUT_CLASSIFICATION
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.8476430989186233	DESIGN	0.15235690108137667	WITHOUT_CLASSIFICATION
SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes! i.e. |(a,b)|?	DESIGN	0.658545263132068	WITHOUT_CLASSIFICATION	0.3414547368679322	DESIGN
SSS FIXME: Can this return anything other than nil?	DESIGN	0.6711938275636538	DESIGN	0.32880617243634624	WITHOUT_CLASSIFICATION
SSS FIXME: What happens to the add class in this case??	DESIGN	0.9752423320099268	DESIGN	0.02475766799007321	WITHOUT_CLASSIFICATION
CON FIXME: I don't know how to make case be an expression...does that logic need to go here?	DESIGN	0.9952998909257241	DESIGN	0.004700109074275853	WITHOUT_CLASSIFICATION
SSS FIXME: Where is this set up? How is this diff from ClassVarDeclNode??	DESIGN	0.8443089344291409	DESIGN	0.15569106557085916	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.9920243505216328	DESIGN	0.007975649478367172	WITHOUT_CLASSIFICATION
SSS FIXME: Used anywhere? I don't see calls to this anywhere public Operand buildDAsgnAssignment(Node node, IR_Scope s) { DAsgnNode dasgnNode = (DAsgnNode) node; s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth()); }	DESIGN	0.9193059344416344	WITHOUT_CLASSIFICATION	0.08069406555836546	DESIGN
SSS FIXME: Receiver -- this is the class meta object basically? Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.6746172391967865	WITHOUT_CLASSIFICATION	0.32538276080321343	DESIGN
self = args[0] SSS FIXME: Verify that this is correct	DESIGN	0.8178573248753918	DESIGN	0.18214267512460824	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.9920243505216328	DESIGN	0.007975649478367172	WITHOUT_CLASSIFICATION
SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9633897817030795	DESIGN	0.03661021829692059	WITHOUT_CLASSIFICATION
add a "self" recv here TODO: is this right?	DESIGN	0.9886845611345575	DESIGN	0.011315438865442475	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9251401573279446	DESIGN	0.07485984267205538	WITHOUT_CLASSIFICATION
SSS FIXME: Where does this go? m.setLinePosition(arrayNode.getPosition());	DESIGN	0.537807309517868	DESIGN	0.462192690482132	WITHOUT_CLASSIFICATION
SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9809586252469674	DESIGN	0.01904137475303259	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be a string literal or a string? Dummy class for the script	DESIGN	0.9585521815574944	DESIGN	0.041447818442505585	WITHOUT_CLASSIFICATION
SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9261209197779783	DESIGN	0.0738790802220218	WITHOUT_CLASSIFICATION
SSS FIXME: Correct? Where does closure arg come from?	DESIGN	0.9581263443890533	WITHOUT_CLASSIFICATION	0.04187365561094667	DESIGN
SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.957000357597299	DESIGN	0.042999642402700926	WITHOUT_CLASSIFICATION
Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.8116334475690151	DESIGN	0.18836655243098496	WITHOUT_CLASSIFICATION
SSS FIXME: This should never get called for constant svalues	DESIGN	0.6918665787884704	DESIGN	0.3081334212115296	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be Operand or CompoundString? Can it happen that symbols are built out of other than compound strings? Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9995030618255833	DESIGN	4.969381744166797E-4	WITHOUT_CLASSIFICATION
TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9966013464612921	DESIGN	0.003398653538707896	WITHOUT_CLASSIFICATION
Hack in to replace usual readline with this	DESIGN	0.9612186720093314	DESIGN	0.03878132799066859	WITHOUT_CLASSIFICATION
bit risky if someone changes completor, but useful for method calls	DESIGN	0.9997805528119031	WITHOUT_CLASSIFICATION	2.1944718809693993E-4	DESIGN
FIXME: This determine module is in a strange location and should somehow be in block	DESIGN	0.8309000292428643	DESIGN	0.16909997075713562	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9951534318127232	WITHOUT_CLASSIFICATION	0.004846568187276767	DESIGN
we basically ignore protocol. let someone report it...	DESIGN	0.9995177323879709	WITHOUT_CLASSIFICATION	4.82267612029074E-4	DESIGN
Workaround for a bug in Sun's JDK 1.5.x, see http:bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9756506750304582	WITHOUT_CLASSIFICATION	0.024349324969541817	DESIGN
context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9977671056379189	WITHOUT_CLASSIFICATION	0.002232894362081096	DESIGN
FIXME we want to eliminate these type casts when possible	DESIGN	0.8597596266714361	DESIGN	0.14024037332856393	WITHOUT_CLASSIFICATION
TODO: Determine whether we should perhaps store non-singleton class in the implementationClass	DESIGN	0.9990865644956263	DESIGN	9.134355043738135E-4	WITHOUT_CLASSIFICATION
FIXME: set up a CallConfiguration for this	DESIGN	0.7263767884116064	DESIGN	0.27362321158839364	WITHOUT_CLASSIFICATION
FIXME: set up a call configuration for this	DESIGN	0.8587549037849128	DESIGN	0.1412450962150873	WITHOUT_CLASSIFICATION
TODO: make this do specific-arity calling	DESIGN	0.9798474769172565	DESIGN	0.02015252308274353	WITHOUT_CLASSIFICATION
add 'new' with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9889195540561507	DESIGN	0.01108044594384934	WITHOUT_CLASSIFICATION
add method with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.994330727791539	DESIGN	0.005669272208460971	WITHOUT_CLASSIFICATION
FIXME This whole thing could probably be implemented as a module and mixed into appropriate classes, especially if it uses either IOInput/OutputStream or is smart about the kind of IO-like object it's being used against.	DESIGN	0.9999938272614847	DESIGN	6.1727385152893205E-6	WITHOUT_CLASSIFICATION
using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9998687682875717	WITHOUT_CLASSIFICATION	1.3123171242839128E-4	DESIGN
using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9998687682875717	WITHOUT_CLASSIFICATION	1.3123171242839128E-4	DESIGN
using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9998403986762595	WITHOUT_CLASSIFICATION	1.596013237404672E-4	DESIGN
these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.891035707000937	WITHOUT_CLASSIFICATION	0.10896429299906293	DESIGN
TODO: WRONG - get interfaces from class	DESIGN	0.8686528143240569	DESIGN	0.131347185675943	WITHOUT_CLASSIFICATION
TODO: catch exception if constant is already set by other thread	DESIGN	0.9775630398999233	WITHOUT_CLASSIFICATION	0.022436960100076574	DESIGN
TODO: public only?	DESIGN	0.8666174515278015	WITHOUT_CLASSIFICATION	0.1333825484721986	DESIGN
see note below re: 2-field kludge	DESIGN	0.9983633041215693	WITHOUT_CLASSIFICATION	0.0016366958784307729	DESIGN
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.9980995639669361	DESIGN	0.0019004360330639367	WITHOUT_CLASSIFICATION
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.9980995639669361	DESIGN	0.0019004360330639367	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods	DESIGN	0.7186809362452126	DESIGN	0.28131906375478744	WITHOUT_CLASSIFICATION
FIXME: This doesn't actually support anything but String	DESIGN	0.7298121123508665	WITHOUT_CLASSIFICATION	0.2701878876491335	DESIGN
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9146016941452279	DESIGN	0.08539830585477211	WITHOUT_CLASSIFICATION
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9146016941452279	DESIGN	0.08539830585477211	WITHOUT_CLASSIFICATION
this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.6996814046672587	WITHOUT_CLASSIFICATION	0.3003185953327414	DESIGN
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.6805512073662339	WITHOUT_CLASSIFICATION	0.31944879263376613	DESIGN
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.6805512073662339	WITHOUT_CLASSIFICATION	0.31944879263376613	DESIGN
this covers the rare case of lower-case class names (and thus will fail 99.999% of the time). fortunately, we'll only do this once per package name. (and seriously, folks, look into best practices...)	DESIGN	0.9840748503693085	WITHOUT_CLASSIFICATION	0.015925149630691415	DESIGN
FIXME: we should also support orgs that use capitalized package names (including, embarrassingly, the one I work for), but this should be enabled by a system property, as the expected default behavior for an upper-case value should be (and is) to treat it as a class name, and raise an exception if it's not found	DESIGN	0.8792799004312203	DESIGN	0.12072009956877965	WITHOUT_CLASSIFICATION
TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9725216014075921	WITHOUT_CLASSIFICATION	0.027478398592407895	DESIGN
upper-case package name TODO: top-level upper-case package was supported in the previous (Ruby-based) implementation, so leaving as is. see note at #getProxyOrPackageUnderPackage re: future approach below the top-level.	DESIGN	0.7478948898397493	WITHOUT_CLASSIFICATION	0.2521051101602507	DESIGN
FIXME: wtf is this? Why would these use the class?	DESIGN	0.9965754892575067	DESIGN	0.0034245107424933727	WITHOUT_CLASSIFICATION
FIXME: needs to be rethought	DESIGN	0.6033777791804248	DESIGN	0.3966222208195754	WITHOUT_CLASSIFICATION
TODO: specifying soft refs, may want to compare memory consumption, behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.5239325666421293	DESIGN	0.4760674333578707	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9472667572812373	DESIGN	0.05273324271876257	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9472667572812373	DESIGN	0.05273324271876257	WITHOUT_CLASSIFICATION
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.5791243363442581	WITHOUT_CLASSIFICATION	0.42087566365574186	DESIGN
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes)	DESIGN	0.7558387597232068	DESIGN	0.24416124027679326	WITHOUT_CLASSIFICATION
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes) TODO: not sure we need this at all, since we only expose public fields. field.setAccessible(true);	DESIGN	0.9806505426145756	DESIGN	0.01934945738542441	WITHOUT_CLASSIFICATION
FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9288788659465662	DESIGN	0.07112113405343376	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods. also, the getDeclared calls may throw SecurityException if we're running under a restrictive security policy.	DESIGN	0.5567762464766228	WITHOUT_CLASSIFICATION	0.44322375352337723	DESIGN
don't bother to check if final method, it won't be there (not generated, can't be!)	DESIGN	0.9999929810605269	WITHOUT_CLASSIFICATION	7.018939473047521E-6	DESIGN
super calls from proxies must use reflected method FIXME: possible to make handles do the superclass call?	DESIGN	0.639705387055648	DESIGN	0.36029461294435206	WITHOUT_CLASSIFICATION
actual type does not exactly match method return type, re-get converter FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.8377830756532096	WITHOUT_CLASSIFICATION	0.16221692434679033	DESIGN
FIXME: Ideally JavaObject instances should be marshallable, which means that the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.6501675678572111	WITHOUT_CLASSIFICATION	0.34983243214278903	DESIGN
FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.7841186331436644	WITHOUT_CLASSIFICATION	0.21588136685633552	DESIGN
We always prepend an org.jruby.proxy package to the beginning because java and javax packages are protected and signed jars prevent us generating new classes with those package names. See JRUBY-2439.	DESIGN	0.9509260009642462	WITHOUT_CLASSIFICATION	0.049073999035753796	DESIGN
TODO: Only used by interface implementation; eliminate it	DESIGN	0.9949846076773908	DESIGN	0.005015392322609151	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9951534318127232	WITHOUT_CLASSIFICATION	0.004846568187276767	DESIGN
modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.997076203455999	WITHOUT_CLASSIFICATION	0.0029237965440009426	DESIGN
lame generics issues: making Segment class static and manually inserting cache reference to work around various problems generically referencing methods/vars across classes.	DESIGN	0.9959856793201686	WITHOUT_CLASSIFICATION	0.004014320679831499	DESIGN
entry exists, proxy doesn't match. replace. this could happen if old proxy was gc'ed TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.7025629515018681	DESIGN	0.29743704849813185	WITHOUT_CLASSIFICATION
FIXME: How much more obtuse can this be? Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9781834621743903	DESIGN	0.02181653782560965	WITHOUT_CLASSIFICATION
ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9858470074165141	WITHOUT_CLASSIFICATION	0.01415299258348588	DESIGN
Hacky: Advance position to eat newline here....	DESIGN	0.9987680551620762	WITHOUT_CLASSIFICATION	0.0012319448379237027	DESIGN
FIXME: Not sure what the semantics of transfer are cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9556013566814618	DESIGN	0.044398643318538225	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.7598051495891801	DESIGN	0.2401948504108199	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.7598051495891801	DESIGN	0.2401948504108199	WITHOUT_CLASSIFICATION
ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9911034109473799	WITHOUT_CLASSIFICATION	0.008896589052620143	DESIGN
FIXME: Remove this from grammars.	DESIGN	0.674700392945853	DESIGN	0.32529960705414707	WITHOUT_CLASSIFICATION
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.8982540884545139	WITHOUT_CLASSIFICATION	0.101745911545486	DESIGN
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.9503545327632666	WITHOUT_CLASSIFICATION	0.04964546723673328	DESIGN
FIXME: lose syntactical elements here (and others like this)	DESIGN	0.9909732868774215	DESIGN	0.009026713122578552	WITHOUT_CLASSIFICATION
ENEBO: Lots of optz in 1.9 parser here	DESIGN	0.9938989685843711	WITHOUT_CLASSIFICATION	0.006101031415628879	DESIGN
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.6867744849783282	WITHOUT_CLASSIFICATION	0.3132255150216719	DESIGN
This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9689468972483817	DESIGN	0.031053102751618298	WITHOUT_CLASSIFICATION
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.6999228271972372	DESIGN	0.30007717280276286	WITHOUT_CLASSIFICATION
TODO: This probably isn't the best hack, but it works until we can have different root frame setup for 1.9 easily.	DESIGN	0.9699421640052622	DESIGN	0.03005783599473785	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9969495688601987	DESIGN	0.003050431139801382	WITHOUT_CLASSIFICATION
FIXME: I think we need these pushed somewhere?	DESIGN	0.9842289657876789	DESIGN	0.015771034212321008	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9969495688601987	DESIGN	0.003050431139801382	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9969495688601987	DESIGN	0.003050431139801382	WITHOUT_CLASSIFICATION
XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9996960660598494	WITHOUT_CLASSIFICATION	3.0393394015059636E-4	DESIGN
FIXME: This version is faster than the previous, but both suffer from a crucial flaw: It is impossible to create an ObjectSpace with an iterator that doesn't either: a. hold on to objects that might otherwise be collected or b. have no way to guarantee that a call to hasNext() will be correct or that a subsequent call to next() will produce an object. For our purposes, for now, this may be acceptable.	DESIGN	0.5896733340657031	WITHOUT_CLASSIFICATION	0.4103266659342968	DESIGN
FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9990495336042785	DESIGN	9.504663957214178E-4	WITHOUT_CLASSIFICATION
FIXME: This is gross. Don't do this.	DESIGN	0.6211608578962073	DESIGN	0.37883914210379255	WITHOUT_CLASSIFICATION
@author headius FIXME convert to enum ?	DESIGN	0.73828254826749	WITHOUT_CLASSIFICATION	0.26171745173251	DESIGN
FIXME: No, I don't like it.	DESIGN	0.8811107378201893	WITHOUT_CLASSIFICATION	0.1188892621798106	DESIGN
TODO: This is probably BAD...	DESIGN	0.8906891886823857	DESIGN	0.1093108113176144	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9037367935149955	DESIGN	0.09626320648500454	WITHOUT_CLASSIFICATION
invoke callMethodMissing method directly TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9740897866721869	DESIGN	0.025910213327813073	WITHOUT_CLASSIFICATION
TODO this is really ineffient, and potentially a problem everytime anyone require's something. we should try to make LoadPath a special array object.	DESIGN	0.9996667745424728	DESIGN	3.3322545752718013E-4	WITHOUT_CLASSIFICATION
FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.7487065244044683	WITHOUT_CLASSIFICATION	0.25129347559553167	DESIGN
FIXME: not very efficient	DESIGN	0.9037367935149955	DESIGN	0.09626320648500454	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9037367935149955	DESIGN	0.09626320648500454	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9037367935149955	DESIGN	0.09626320648500454	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9037367935149955	DESIGN	0.09626320648500454	WITHOUT_CLASSIFICATION
FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9977018013766678	DESIGN	0.002298198623332192	WITHOUT_CLASSIFICATION
FIXME: potentially could just use ByteList here?	DESIGN	0.8622204810528569	DESIGN	0.13777951894714316	WITHOUT_CLASSIFICATION
FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.607031180210187	WITHOUT_CLASSIFICATION	0.3929688197898129	DESIGN
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.5608031906593414	WITHOUT_CLASSIFICATION	0.4391968093406586	DESIGN
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.5608031906593414	WITHOUT_CLASSIFICATION	0.4391968093406586	DESIGN
grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, so we must do all this (the next 70 lines of code), which has already been done by FloatingDecimal.	DESIGN	0.999597656386959	WITHOUT_CLASSIFICATION	4.0234361304103243E-4	DESIGN
it would be nice (and logical!) if exponent form behaved like E/e, and decimal form behaved like f, but no such luck. hence:	DESIGN	0.9968942447685077	WITHOUT_CLASSIFICATION	0.0031057552314922173	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9988672628011322	WITHOUT_CLASSIFICATION	0.0011327371988677352	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9988672628011322	WITHOUT_CLASSIFICATION	0.0011327371988677352	DESIGN
TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.8402360014149004	DESIGN	0.15976399858509957	WITHOUT_CLASSIFICATION
TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.6242829776940978	WITHOUT_CLASSIFICATION	0.37571702230590226	DESIGN
FIXME: this probably belongs in a different package.	DESIGN	0.9451449330086458	DESIGN	0.054855066991354326	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9995255032679735	DESIGN	4.744967320265367E-4	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9995255032679735	DESIGN	4.744967320265367E-4	WITHOUT_CLASSIFICATION
FIXME: I don't like this	DESIGN	0.8806501189487548	DESIGN	0.11934988105124524	WITHOUT_CLASSIFICATION
TODO: It's perhaps just a coincidence that all the channels for which we should raise are instanceof SelectableChannel, since stdio is not...so this bothers me slightly. -CON	DESIGN	0.9994882777397641	DESIGN	5.117222602359507E-4	WITHOUT_CLASSIFICATION
FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.5259105839292069	DESIGN	0.4740894160707931	WITHOUT_CLASSIFICATION
TODO this should entry into error handling somewhere	DESIGN	0.9984149228084448	DESIGN	0.001585077191555253	WITHOUT_CLASSIFICATION
FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.5619243466102881	WITHOUT_CLASSIFICATION	0.4380756533897117	DESIGN
We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it)	DESIGN	0.9987793166777521	WITHOUT_CLASSIFICATION	0.0012206833222478904	DESIGN
TODO: Ruby does not seem to care about invalid numeric mode values I am not sure if ruby overflows here also...	DESIGN	0.9361081826856129	DESIGN	0.06389181731438709	WITHOUT_CLASSIFICATION
TODO: Make this more intelligible value	DESIGN	0.8918191034876491	DESIGN	0.10818089651235081	WITHOUT_CLASSIFICATION
XXX: do something?	DESIGN	0.9992997348346735	WITHOUT_CLASSIFICATION	7.002651653266281E-4	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.5066953756550817	DESIGN	0.49330462434491834	WITHOUT_CLASSIFICATION
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.5066953756550817	DESIGN	0.49330462434491834	WITHOUT_CLASSIFICATION
up to ten, stuff into tmp locals, load in reverse order, and assign FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.8507714517786624	DESIGN	0.14922854822133746	WITHOUT_CLASSIFICATION
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.805870642955686	WITHOUT_CLASSIFICATION	0.19412935704431403	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9981894716279393	WITHOUT_CLASSIFICATION	0.0018105283720607544	DESIGN
SSS FIXME: These should get normally compiled or initialized some other way ... SSS FIXME: Parent/super-type info is incorrect! These are just placeholders for now .. this needs to be updated with real class objects later!	DESIGN	0.9999518897879571	DESIGN	4.811021204278556E-5	WITHOUT_CLASSIFICATION
SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class Holy cow! Just to append two darned arrays!	DESIGN	0.9991850672031819	DESIGN	8.149327968179805E-4	WITHOUT_CLASSIFICATION
SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. It calls regular to_ary on the object. But, if it encounters a method_missing, the value is inserted into an 1-element array! try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. Ex: http:gist.github.com/163551	DESIGN	0.8051632255575182	DESIGN	0.1948367744424817	WITHOUT_CLASSIFICATION
This is for JRUBY-2988, since after a suspend the terminal seems to need to be reinitialized. Since we can't easily detect suspension, initialize after every readline. Probably not fast, but this is for interactive terminals anyway...so who cares?	DESIGN	0.9836761986232768	WITHOUT_CLASSIFICATION	0.01632380137672319	DESIGN
set up a field for the CacheEntry TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9816207008996302	DESIGN	0.018379299100369867	WITHOUT_CLASSIFICATION
exit monitor before making call FIXME: this not being in a finally is a little worrisome	DESIGN	0.931517644699826	DESIGN	0.06848235530017403	WITHOUT_CLASSIFICATION
FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct this resulted in object being null after unmarshalling...	DESIGN	0.6865374793826449	DESIGN	0.3134625206173551	WITHOUT_CLASSIFICATION
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.5791243363442581	WITHOUT_CLASSIFICATION	0.42087566365574186	DESIGN
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.6999228271972372	DESIGN	0.30007717280276286	WITHOUT_CLASSIFICATION
TODO: This is actually now returning the scope of whoever called Method#to_proc which is obviously wrong; but there's no scope to provide for many methods. It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9640751636756111	DESIGN	0.035924836324388816	WITHOUT_CLASSIFICATION
FIXME: We should be getting this from the runtime rather than assume none? return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9273904553223257	DESIGN	0.07260954467767439	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.7598051495891801	DESIGN	0.2401948504108199	WITHOUT_CLASSIFICATION
This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9193602790748867	DESIGN	0.08063972092511325	WITHOUT_CLASSIFICATION
XXX This constructor is a hack to implement the __END__ syntax. Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9993954278788165	DESIGN	6.045721211834511E-4	WITHOUT_CLASSIFICATION
FIXME: Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need to totally change marshalling to work with overridden core classes.	DESIGN	0.9998558986492518	DESIGN	1.44101350748153E-4	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999978692858282	DESIGN	2.1307141717735084E-6	WITHOUT_CLASSIFICATION
We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its provider's constructor which require it to be executed in a secure context. Ideally this hack should be removed. See JRUBY-3919 and this BC bug: http:www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9999399027844802	DESIGN	6.0097215519892945E-5	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9793808634903628	DESIGN	0.02061913650963719	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9793808634903628	DESIGN	0.02061913650963719	WITHOUT_CLASSIFICATION
hack to get right style for input	DESIGN	0.9607801929520116	DESIGN	0.03921980704798842	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9871585332152015	DESIGN	0.012841466784798406	WITHOUT_CLASSIFICATION
small hack to save a cast later on	DESIGN	0.9920082059621437	DESIGN	0.007991794037856341	WITHOUT_CLASSIFICATION
temporary hack to handle non-Ruby values will come up with better solution shortly	DESIGN	0.9997275655918557	DESIGN	2.7243440814420826E-4	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9871585332152015	DESIGN	0.012841466784798406	WITHOUT_CLASSIFICATION
HACK: in order to have stdout/err act like ttys and flush always, we set anything assigned to stdout/stderr to sync	DESIGN	0.9993129716448618	WITHOUT_CLASSIFICATION	6.870283551381947E-4	DESIGN
HACK: force clinit to be created	DESIGN	0.9771757975977919	WITHOUT_CLASSIFICATION	0.02282420240220811	DESIGN
FIXME: This is pretty gross; we should have a cleaner initialization that doesn't depend on package-visible fields and ideally is atomic, probably using an immutable structure we replace all at once. lazy, null when no groups defined	DESIGN	0.9285882548759243	DESIGN	0.07141174512407569	WITHOUT_CLASSIFICATION
TODO: should probably apply the null object pattern for a non-allowed class, rather than null	DESIGN	0.99294132026017	DESIGN	0.007058679739829999	WITHOUT_CLASSIFICATION
TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8475281882376892	DESIGN	0.15247181176231084	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7867012416180318	WITHOUT_CLASSIFICATION	0.2132987583819683	DESIGN
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.7598051495891801	DESIGN	0.2401948504108199	WITHOUT_CLASSIFICATION
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.7230203768581297	WITHOUT_CLASSIFICATION	0.27697962314187047	DESIGN
not intended to be called directly by users (private) OLD TODO from Ruby code: This should be implemented in JavaClass.java, where we can check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9958835902908358	DESIGN	0.004116409709164098	WITHOUT_CLASSIFICATION
TODO? I think this ends up propagating from normal Java exceptions sys_fail(openFile.getPath())	DESIGN	0.975261254205472	WITHOUT_CLASSIFICATION	0.024738745794527953	DESIGN
TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9046105801473389	DESIGN	0.09538941985266115	WITHOUT_CLASSIFICATION
TODO: the rest of this...seeking to same position is unnecessary since we share a channel but some of this may be needed?	DESIGN	0.9991170977415059	DESIGN	8.829022584941467E-4	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9663355845760442	DESIGN	0.03366441542395576	WITHOUT_CLASSIFICATION
FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.5878988874159482	DESIGN	0.41210111258405185	WITHOUT_CLASSIFICATION
ignore; job was cancelled FIXME: Is this ok?	DESIGN	0.9998613464294936	DESIGN	1.386535705064152E-4	WITHOUT_CLASSIFICATION
TODO: MRI behavior: Call "+" or "add", depending on the call. But this leads to exceptions when Floats are added. See: http:blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 return callCoerced(context, op, b, true); -- this is MRI behavior. We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9468361097150457	DESIGN	0.05316389028495428	WITHOUT_CLASSIFICATION
Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9975439355071344	WITHOUT_CLASSIFICATION	0.002456064492865643	DESIGN
TODO: wire into new exception handling mechanism	DESIGN	0.984764897242436	DESIGN	0.015235102757563906	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9472667572812373	DESIGN	0.05273324271876257	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.925680090699525	DESIGN	0.07431990930047509	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.925680090699525	DESIGN	0.07431990930047509	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.925680090699525	DESIGN	0.07431990930047509	WITHOUT_CLASSIFICATION
FIXME: Determine if a real allocator is needed here. Do people want to extend JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should you be able to? TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999998173223812	DESIGN	1.8267761879695885E-7	WITHOUT_CLASSIFICATION
SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method But, if the mehod is modified, we create a new method object which in turn gets a new token. What makes sense?? Intuitively, it seems the first one ... but let us see ... Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.7940647233888173	DESIGN	0.20593527661118263	WITHOUT_CLASSIFICATION
FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.842733825667366	WITHOUT_CLASSIFICATION	0.15726617433263387	DESIGN
FIXME: bit of a kludge here (non-interface classes assigned to both class and module fields). simplifies proxy extender code, will go away when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9116828141294147	DESIGN	0.08831718587058535	WITHOUT_CLASSIFICATION
There's not a compelling reason to keep JavaClass instances in a weak map (any proxies created are [were] kept in a non-weak map, so in most cases they will stick around anyway), and some good reasons not to (JavaClass creation is expensive, for one; many lookups are performed when passing parameters to/from methods; etc.). TODO: faster custom concurrent map	DESIGN	0.936753106848036	DESIGN	0.06324689315196387	WITHOUT_CLASSIFICATION
TODO: we should be able to optimize this quite a bit post-1.0. JavaClass already has all the methods organized by method name; the next version (supporting protected methods/fields) will have them organized even further. So collectMethods here can just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9999829605271768	DESIGN	1.7039472823211764E-5	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.9161310502756088	DESIGN	0.08386894972439118	WITHOUT_CLASSIFICATION
FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.773240113773011	WITHOUT_CLASSIFICATION	0.22675988622698898	DESIGN
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9448090171588008	DESIGN	0.05519098284119905	WITHOUT_CLASSIFICATION
TODO: Bleeding runtime into parser. Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9847035958203098	DESIGN	0.015296404179690104	WITHOUT_CLASSIFICATION
SSS FIXME: Maybe this is not really a concern after all ... Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused with semantic nesting of scopes across files. Consider this code in a file f class M1::M2::M3::C ... end So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). This is primarily used to ensure that variable names don't clash! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! private int _lexicalNestingLevel;	DESIGN	0.9999996687211377	DESIGN	3.3127886231721425E-7	WITHOUT_CLASSIFICATION
Sometimes the value can be retrieved at "compile time". If we succeed, nothing like it! We might not .. for the following reasons: 1. The constant is missing, 2. The reference is a forward-reference, 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) 4. Our compiler isn't able to right away infer that this is a constant. SSS FIXME: 1. The operand can be a literal array, range, or hash -- hence Operand because Array, Range, and Hash derive from Operand and not Constant ... Is there a way to fix this impedance mismatch? 2. It should be possible to handle the forward-reference case by creating a new ForwardReference operand and then inform the scope of the forward reference which the scope can fix up when the reference gets defined. At code-gen time, if the reference is unresolved, when a value is retrieved for the forward-ref and we get a null, we can throw a ConstMissing exception! Not sure!	DESIGN	0.9998746921051351	DESIGN	1.253078948649603E-4	WITHOUT_CLASSIFICATION
Reset value map if this instruction is the start/end of a basic block Right now, calls are considered hard boundaries for optimization and information cannot be propagated across them! SSS FIXME: Rather than treat all calls with a broad brush, what we need is to capture different attributes about a call : - uses closures - known call target - can modify scope, - etc. This information is probably already present in the AST Inspector	DESIGN	0.9982140080635549	DESIGN	0.0017859919364451927	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.7048129934602234	DESIGN	0.29518700653977653	WITHOUT_CLASSIFICATION
XXX: This check previously used callMethod("==") to check for equality between classes when scanning the hierarchy. However the == check may be safe; we should only ever have one instance bound to a given type/constant. If it's found to be unsafe, examine ways to avoid the == call.	DESIGN	0.7553097836202258	WITHOUT_CLASSIFICATION	0.2446902163797742	DESIGN
end hack	DESIGN	0.7214358614011103	DESIGN	0.27856413859888973	WITHOUT_CLASSIFICATION
if not overloaded, we add a method that guesses at which signature to use TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9779392031306223	DESIGN	0.02206079686937771	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999978692858282	DESIGN	2.1307141717735084E-6	WITHOUT_CLASSIFICATION
TODO: This version is better than the hackish previous one. Windows behavior needs to be defined though. I suppose this version could be improved more too. TODO: /etc/passwd is also inadequate for MacOSX since it does not use /etc/passwd for regular user accounts	DESIGN	0.9998563822748517	DESIGN	1.4361772514825732E-4	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.6895473171854755	DESIGN	0.31045268281452454	WITHOUT_CLASSIFICATION
Let's only generate methods for those the user may actually intend to override. That includes any defined in the current class, and any ancestors that are also JavaProxyClasses (but none from any other ancestor classes). Methods defined in mixins will be considered intentionally overridden, except those from Kernel, Java, and JavaProxyMethods, as well as Enumerable. TODO: may want to exclude other common mixins?	DESIGN	0.9999772636190455	WITHOUT_CLASSIFICATION	2.2736380954504383E-5	DESIGN
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.8982540884545139	WITHOUT_CLASSIFICATION	0.101745911545486	DESIGN
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.9503545327632666	WITHOUT_CLASSIFICATION	0.04964546723673328	DESIGN
FIXME: We should really not be creating the dynamic scope for the root of the AST before parsing. This makes us end up needing to readjust this dynamic scope coming out of parse (and for local static scopes it will always happen because of $~ and $_). FIXME: Because we end up adjusting this after-the-fact, we can't use any of the specific-size scopes.	DESIGN	0.9976580302004767	DESIGN	0.0023419697995232386	WITHOUT_CLASSIFICATION
FIXME: Resolve what the hell is going on	DESIGN	0.595576090449131	DESIGN	0.40442390955086893	WITHOUT_CLASSIFICATION
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.6867744849783282	WITHOUT_CLASSIFICATION	0.3132255150216719	DESIGN
If variables were added then we may need to grow the dynamic scope to match the static one. FIXME: Make this so we only need to check this for blockScope != null. We cannot currently since we create the DynamicScope for a LocalStaticScope before parse begins. Refactoring should make this fixable.	DESIGN	0.9875006298318862	WITHOUT_CLASSIFICATION	0.01249937016811371	DESIGN
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9969495688601987	DESIGN	0.003050431139801382	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9969495688601987	DESIGN	0.003050431139801382	WITHOUT_CLASSIFICATION
we're depending on the side effect of the load, which loads the class but does not turn it into a script I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9768256806084125	DESIGN	0.02317431939158753	WITHOUT_CLASSIFICATION
TODO: for now, we use a faithful reimplementation of MRI's algorithm, but should use UTF8Encoding facilities from Joni, once it starts prefroming UTF-8 content validation.	DESIGN	0.7113735344316449	WITHOUT_CLASSIFICATION	0.2886264655683552	DESIGN
Process streams get Channel.newChannel()ed into FileChannel but are not actually seekable. So instead of just the isSeekable check doing instanceof FileChannel, we must also add this boolean to check, which we set to false when it's known that the incoming channel is from a process. FIXME: This is gross, and it's NIO's fault for not providing a nice way to tell if a channel is "really" seekable.	DESIGN	0.9995607246072244	DESIGN	4.392753927754274E-4	WITHOUT_CLASSIFICATION
