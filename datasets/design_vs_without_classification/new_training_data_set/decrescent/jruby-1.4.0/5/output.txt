set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9975412658661779	WITHOUT_CLASSIFICATION	0.0024587341338220244	DESIGN
line 335	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9997011347214652	WITHOUT_CLASSIFICATION	2.98865278534837E-4	DESIGN
line 362	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
line 391	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
^D	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
^Z	WITHOUT_CLASSIFICATION	0.9989785810350761	WITHOUT_CLASSIFICATION	0.0010214189649239986	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9995207863334334	WITHOUT_CLASSIFICATION	4.7921366656657964E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9995207863334334	WITHOUT_CLASSIFICATION	4.7921366656657964E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
return result	WITHOUT_CLASSIFICATION	0.9999204032818917	WITHOUT_CLASSIFICATION	7.959671810826204E-5	DESIGN
name	WITHOUT_CLASSIFICATION	0.9985486107823838	WITHOUT_CLASSIFICATION	0.0014513892176162876	DESIGN
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999041179895277	WITHOUT_CLASSIFICATION	9.588201047230396E-4	DESIGN
Accessor methods.	WITHOUT_CLASSIFICATION	0.9993464548976057	WITHOUT_CLASSIFICATION	6.535451023944362E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.999054230058596	WITHOUT_CLASSIFICATION	9.457699414039912E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.999054230058596	WITHOUT_CLASSIFICATION	9.457699414039912E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.999054230058596	WITHOUT_CLASSIFICATION	9.457699414039912E-4	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.999054230058596	WITHOUT_CLASSIFICATION	9.457699414039912E-4	DESIGN
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9998671816476645	WITHOUT_CLASSIFICATION	1.328183523355332E-4	DESIGN
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9979278983421038	WITHOUT_CLASSIFICATION	0.002072101657896153	DESIGN
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.999701288096396	WITHOUT_CLASSIFICATION	2.987119036039364E-4	DESIGN
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9972105527993648	WITHOUT_CLASSIFICATION	0.0027894472006352354	DESIGN
Version information:	WITHOUT_CLASSIFICATION	0.9993794485276661	WITHOUT_CLASSIFICATION	6.205514723337997E-4	DESIGN
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9998666198856657	WITHOUT_CLASSIFICATION	1.3338011433426352E-4	DESIGN
ARGF, $< object	WITHOUT_CLASSIFICATION	0.999296778144589	WITHOUT_CLASSIFICATION	7.032218554110705E-4	DESIGN
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999370563328706	WITHOUT_CLASSIFICATION	6.294366712943624E-5	DESIGN
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.6836687162169941	WITHOUT_CLASSIFICATION	0.3163312837830059	DESIGN
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9989107352966389	WITHOUT_CLASSIFICATION	0.0010892647033611045	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9666985812208992	WITHOUT_CLASSIFICATION	0.03330141877910076	DESIGN
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999063755824862	WITHOUT_CLASSIFICATION	9.362441751384127E-5	DESIGN
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9912605625568705	WITHOUT_CLASSIFICATION	0.008739437443129551	DESIGN
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9965755764448038	WITHOUT_CLASSIFICATION	0.0034244235551962724	DESIGN
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9992320960024672	WITHOUT_CLASSIFICATION	7.679039975328359E-4	DESIGN
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9987568800546665	WITHOUT_CLASSIFICATION	0.0012431199453335595	DESIGN
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9426852244641709	WITHOUT_CLASSIFICATION	0.05731477553582919	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.999054230058596	WITHOUT_CLASSIFICATION	9.457699414039912E-4	DESIGN
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999538725893841	WITHOUT_CLASSIFICATION	4.612741061605623E-5	DESIGN
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.99998268155709	WITHOUT_CLASSIFICATION	1.7318442909979708E-5	DESIGN
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996221818320076	WITHOUT_CLASSIFICATION	3.7781816799243684E-4	DESIGN
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9952769885745337	WITHOUT_CLASSIFICATION	0.004723011425466303	DESIGN
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9979493909168269	WITHOUT_CLASSIFICATION	0.002050609083173089	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9968740715156702	WITHOUT_CLASSIFICATION	0.0031259284843298363	DESIGN
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999852707784668	WITHOUT_CLASSIFICATION	1.4729221533212424E-5	DESIGN
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9981993853499889	WITHOUT_CLASSIFICATION	0.0018006146500111552	DESIGN
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9597655111590842	WITHOUT_CLASSIFICATION	0.040234488840915836	DESIGN
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999750877019229	WITHOUT_CLASSIFICATION	2.4912298077057247E-5	DESIGN
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9995470389003145	WITHOUT_CLASSIFICATION	4.529610996855882E-4	DESIGN
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9996693222789188	WITHOUT_CLASSIFICATION	3.3067772108120357E-4	DESIGN
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
IOT is also 6	WITHOUT_CLASSIFICATION	0.9998208688567471	WITHOUT_CLASSIFICATION	1.791311432529857E-4	DESIGN
CLD is also 20	WITHOUT_CLASSIFICATION	0.9998462056997911	WITHOUT_CLASSIFICATION	1.537943002088705E-4	DESIGN
RubySignal	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9959916656063836	WITHOUT_CLASSIFICATION	0.004008334393616397	DESIGN
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.99937982739928	WITHOUT_CLASSIFICATION	6.201726007200336E-4	DESIGN
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999270632334957	WITHOUT_CLASSIFICATION	7.293676650434931E-5	DESIGN
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9996471812228197	WITHOUT_CLASSIFICATION	3.528187771803049E-4	DESIGN
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9995790735118624	WITHOUT_CLASSIFICATION	4.209264881375863E-4	DESIGN
io.finish();	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9863804426510029	WITHOUT_CLASSIFICATION	0.013619557348997212	DESIGN
hmm...	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9980125173753595	WITHOUT_CLASSIFICATION	0.0019874826246405997	DESIGN
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9475666763583945	WITHOUT_CLASSIFICATION	0.052433323641605585	DESIGN
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9996771106598258	WITHOUT_CLASSIFICATION	3.228893401741998E-4	DESIGN
float number of seconds	WITHOUT_CLASSIFICATION	0.9989048755147732	WITHOUT_CLASSIFICATION	0.001095124485226714	DESIGN
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9998828071512643	WITHOUT_CLASSIFICATION	1.1719284873566573E-4	DESIGN
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9988589904604968	WITHOUT_CLASSIFICATION	0.001141009539503245	DESIGN
Time class methods	WITHOUT_CLASSIFICATION	0.9977323171267461	WITHOUT_CLASSIFICATION	0.002267682873253941	DESIGN
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9975571074636431	WITHOUT_CLASSIFICATION	0.0024428925363568408	DESIGN
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999302983169283	WITHOUT_CLASSIFICATION	6.970168307174896E-5	DESIGN
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9724950713328314	WITHOUT_CLASSIFICATION	0.027504928667168613	DESIGN
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.999724395619058	WITHOUT_CLASSIFICATION	2.756043809419958E-4	DESIGN
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9981828598116705	WITHOUT_CLASSIFICATION	0.0018171401883293901	DESIGN
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9964551384545594	WITHOUT_CLASSIFICATION	0.0035448615454405706	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9985040610475274	WITHOUT_CLASSIFICATION	0.0014959389524724818	DESIGN
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9999123646446846	WITHOUT_CLASSIFICATION	8.76353553153993E-5	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999538889029512	WITHOUT_CLASSIFICATION	4.611109704871576E-5	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.967335729203585	WITHOUT_CLASSIFICATION	0.032664270796415054	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9996227934835279	WITHOUT_CLASSIFICATION	3.7720651647203234E-4	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9996227934835279	WITHOUT_CLASSIFICATION	3.7720651647203234E-4	DESIGN
no bignorm here needed	WITHOUT_CLASSIFICATION	0.9883500301928028	WITHOUT_CLASSIFICATION	0.011649969807197132	DESIGN
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9924253214448885	WITHOUT_CLASSIFICATION	0.007574678555111518	DESIGN
Pad with a 0	WITHOUT_CLASSIFICATION	0.999204966209617	WITHOUT_CLASSIFICATION	7.950337903829402E-4	DESIGN
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9992619577907977	WITHOUT_CLASSIFICATION	7.380422092021651E-4	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8024038343391771	WITHOUT_CLASSIFICATION	0.19759616566082294	DESIGN
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9876965606596625	WITHOUT_CLASSIFICATION	0.012303439340337518	DESIGN
???	WITHOUT_CLASSIFICATION	0.9940634121388409	WITHOUT_CLASSIFICATION	0.005936587861159041	DESIGN
PID	WITHOUT_CLASSIFICATION	0.9989426794780017	WITHOUT_CLASSIFICATION	0.0010573205219982413	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999538889029512	WITHOUT_CLASSIFICATION	4.611109704871576E-5	DESIGN
elements and trailing nils	WITHOUT_CLASSIFICATION	0.9994009127708712	WITHOUT_CLASSIFICATION	5.990872291289363E-4	DESIGN
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999979423068484	WITHOUT_CLASSIFICATION	2.0576931516476707E-6	DESIGN
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.9999930124792747	WITHOUT_CLASSIFICATION	6.987520725340692E-6	DESIGN
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9998037532532132	WITHOUT_CLASSIFICATION	1.9624674678672845E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9998806687007643	WITHOUT_CLASSIFICATION	1.1933129923572772E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9998806687007643	WITHOUT_CLASSIFICATION	1.1933129923572772E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9998806687007643	WITHOUT_CLASSIFICATION	1.1933129923572772E-4	DESIGN
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.995977793008898	WITHOUT_CLASSIFICATION	0.00402220699110198	DESIGN
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9989652681734031	WITHOUT_CLASSIFICATION	0.0010347318265968265	DESIGN
Create global constants and variables	WITHOUT_CLASSIFICATION	0.999949324316466	WITHOUT_CLASSIFICATION	5.067568353399652E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.7039798370980055	WITHOUT_CLASSIFICATION	0.2960201629019945	DESIGN
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.9992689806135656	WITHOUT_CLASSIFICATION	7.310193864343672E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9963092122297158	WITHOUT_CLASSIFICATION	0.0036907877702841868	DESIGN
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9694360025098472	WITHOUT_CLASSIFICATION	0.030563997490152893	DESIGN
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999936923190911	WITHOUT_CLASSIFICATION	6.307680908881504E-6	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9992606983467138	WITHOUT_CLASSIFICATION	7.393016532861903E-4	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998626453070155	WITHOUT_CLASSIFICATION	1.3735469298450836E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9992500825977604	WITHOUT_CLASSIFICATION	7.499174022396206E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9992500825977604	WITHOUT_CLASSIFICATION	7.499174022396206E-4	DESIGN
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9990555307288626	WITHOUT_CLASSIFICATION	9.444692711374802E-4	DESIGN
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9984309162385117	WITHOUT_CLASSIFICATION	0.0015690837614883077	DESIGN
root fiber	WITHOUT_CLASSIFICATION	0.9982415879690852	WITHOUT_CLASSIFICATION	0.001758412030914688	DESIGN
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.9996557134817742	WITHOUT_CLASSIFICATION	3.4428651822588323E-4	DESIGN
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.999490515726508	WITHOUT_CLASSIFICATION	5.094842734919252E-4	DESIGN
extras flag	WITHOUT_CLASSIFICATION	0.9997734157155352	WITHOUT_CLASSIFICATION	2.2658428446467547E-4	DESIGN
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
...nothing	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
utility method	WITHOUT_CLASSIFICATION	0.9997495532023585	WITHOUT_CLASSIFICATION	2.504467976415084E-4	DESIGN
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9980475554160678	WITHOUT_CLASSIFICATION	0.001952444583932278	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999538889029512	WITHOUT_CLASSIFICATION	4.611109704871576E-5	DESIGN
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999933247153509	WITHOUT_CLASSIFICATION	6.675284649154759E-6	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999201182922693	WITHOUT_CLASSIFICATION	7.988170773069082E-4	DESIGN
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9980695432649079	WITHOUT_CLASSIFICATION	0.0019304567350921246	DESIGN
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9733826595877895	WITHOUT_CLASSIFICATION	0.026617340412210467	DESIGN
MRI does it!	WITHOUT_CLASSIFICATION	0.99970675390589	WITHOUT_CLASSIFICATION	2.932460941099689E-4	DESIGN
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996948536790097	WITHOUT_CLASSIFICATION	3.051463209902603E-4	DESIGN
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9995103131838406	WITHOUT_CLASSIFICATION	4.896868161593801E-4	DESIGN
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9944016787653199	WITHOUT_CLASSIFICATION	0.005598321234680017	DESIGN
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999952496292037	WITHOUT_CLASSIFICATION	4.750370796262091E-6	DESIGN
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9726041091264747	WITHOUT_CLASSIFICATION	0.02739589087352543	DESIGN
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9973186318583345	WITHOUT_CLASSIFICATION	0.0026813681416655312	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998244245881237	WITHOUT_CLASSIFICATION	1.7557541187625202E-4	DESIGN
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9941457992243524	WITHOUT_CLASSIFICATION	0.005854200775647591	DESIGN
recheck condition	WITHOUT_CLASSIFICATION	0.9995482364545213	WITHOUT_CLASSIFICATION	4.517635454785906E-4	DESIGN
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999248470469817	WITHOUT_CLASSIFICATION	7.515295301835138E-5	DESIGN
Construct key services	WITHOUT_CLASSIFICATION	0.9954288953269068	WITHOUT_CLASSIFICATION	0.004571104673093226	DESIGN
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9996425028495413	WITHOUT_CLASSIFICATION	3.574971504586747E-4	DESIGN
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999612368985319	WITHOUT_CLASSIFICATION	3.876310146810008E-5	DESIGN
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.999753610915154	WITHOUT_CLASSIFICATION	2.463890848459704E-4	DESIGN
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.8101764106100121	WITHOUT_CLASSIFICATION	0.18982358938998795	DESIGN
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9911494064064837	WITHOUT_CLASSIFICATION	0.00885059359351628	DESIGN
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9971684547073385	WITHOUT_CLASSIFICATION	0.002831545292661491	DESIGN
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999961468518032	WITHOUT_CLASSIFICATION	3.853148196850092E-6	DESIGN
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9978325374438604	WITHOUT_CLASSIFICATION	0.0021674625561397326	DESIGN
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9837894975276542	WITHOUT_CLASSIFICATION	0.01621050247234587	DESIGN
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999173456465169	WITHOUT_CLASSIFICATION	8.265435348311068E-4	DESIGN
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9994694266008692	WITHOUT_CLASSIFICATION	5.30573399130799E-4	DESIGN
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9998272942594735	WITHOUT_CLASSIFICATION	1.7270574052649152E-4	DESIGN
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9972040708087483	WITHOUT_CLASSIFICATION	0.0027959291912517436	DESIGN
determine spacing	WITHOUT_CLASSIFICATION	0.9992985055606113	WITHOUT_CLASSIFICATION	7.014944393886683E-4	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9940755905915591	WITHOUT_CLASSIFICATION	0.005924409408440853	DESIGN
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998255535025429	WITHOUT_CLASSIFICATION	1.7444649745716688E-4	DESIGN
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9852434390927778	WITHOUT_CLASSIFICATION	0.014756560907222297	DESIGN
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9996471623076987	WITHOUT_CLASSIFICATION	3.5283769230133E-4	DESIGN
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9969381947266216	WITHOUT_CLASSIFICATION	0.0030618052733784188	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9887202982393519	WITHOUT_CLASSIFICATION	0.011279701760648153	DESIGN
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9989984631574846	WITHOUT_CLASSIFICATION	0.0010015368425153426	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.9989559842401463	WITHOUT_CLASSIFICATION	0.0010440157598536268	DESIGN
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.999865436867323	WITHOUT_CLASSIFICATION	1.345631326770028E-4	DESIGN
Default objects	WITHOUT_CLASSIFICATION	0.9997465875908719	WITHOUT_CLASSIFICATION	2.5341240912803533E-4	DESIGN
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9997474954294108	WITHOUT_CLASSIFICATION	2.5250457058921565E-4	DESIGN
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9989667969361183	WITHOUT_CLASSIFICATION	0.0010332030638816072	DESIGN
Java support	WITHOUT_CLASSIFICATION	0.9984643553993855	WITHOUT_CLASSIFICATION	0.0015356446006145996	DESIGN
Parser stats	WITHOUT_CLASSIFICATION	0.9991700270525891	WITHOUT_CLASSIFICATION	8.299729474109339E-4	DESIGN
Compilation	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9998965996152007	WITHOUT_CLASSIFICATION	1.0340038479929945E-4	DESIGN
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999161804678489	WITHOUT_CLASSIFICATION	8.381953215104521E-5	DESIGN
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998616986596001	WITHOUT_CLASSIFICATION	1.3830134039997312E-4	DESIGN
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9997336603383395	WITHOUT_CLASSIFICATION	2.663396616604388E-4	DESIGN
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9994931003920946	WITHOUT_CLASSIFICATION	5.068996079054612E-4	DESIGN
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9997036041473675	WITHOUT_CLASSIFICATION	2.963958526325247E-4	DESIGN
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9998177392394991	WITHOUT_CLASSIFICATION	1.8226076050084498E-4	DESIGN
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9989908408032813	WITHOUT_CLASSIFICATION	0.0010091591967186415	DESIGN
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.6194822881031649	WITHOUT_CLASSIFICATION	0.38051771189683503	DESIGN
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.644367656952388	WITHOUT_CLASSIFICATION	0.35563234304761215	DESIGN
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.99916431366774	WITHOUT_CLASSIFICATION	8.356863322599925E-4	DESIGN
quoted-printable	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
default options	WITHOUT_CLASSIFICATION	0.9997640109323775	WITHOUT_CLASSIFICATION	2.3598906762234894E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9996667822703982	WITHOUT_CLASSIFICATION	3.3321772960181036E-4	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9996667822703982	WITHOUT_CLASSIFICATION	3.3321772960181036E-4	DESIGN
long name option	WITHOUT_CLASSIFICATION	0.9998309630045298	WITHOUT_CLASSIFICATION	1.6903699547027838E-4	DESIGN
conversion	WITHOUT_CLASSIFICATION	0.9997724566076965	WITHOUT_CLASSIFICATION	2.2754339230340875E-4	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9977962877297988	WITHOUT_CLASSIFICATION	0.0022037122702012355	DESIGN
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9997583966668517	WITHOUT_CLASSIFICATION	2.416033331482693E-4	DESIGN
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9997252949796058	WITHOUT_CLASSIFICATION	2.74705020394133E-4	DESIGN
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9997963189832451	WITHOUT_CLASSIFICATION	2.0368101675506935E-4	DESIGN
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.99965183152202	WITHOUT_CLASSIFICATION	3.481684779800869E-4	DESIGN
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9999604723478797	WITHOUT_CLASSIFICATION	3.952765212036454E-5	DESIGN
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9978572701489332	WITHOUT_CLASSIFICATION	0.0021427298510668033	DESIGN
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9998794303046823	WITHOUT_CLASSIFICATION	1.2056969531763304E-4	DESIGN
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999409546614281	WITHOUT_CLASSIFICATION	5.904533857190521E-5	DESIGN
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9997647474745963	WITHOUT_CLASSIFICATION	2.3525252540370026E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6562354360875928	DESIGN	0.34376456391240723	WITHOUT_CLASSIFICATION
must not reallocate	WITHOUT_CLASSIFICATION	0.9980344102146013	WITHOUT_CLASSIFICATION	0.001965589785398728	DESIGN
Illegal combination	WITHOUT_CLASSIFICATION	0.9991532806407318	WITHOUT_CLASSIFICATION	8.467193592681074E-4	DESIGN
use 1.8 impl	WITHOUT_CLASSIFICATION	0.9950867699138881	WITHOUT_CLASSIFICATION	0.004913230086111948	DESIGN
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9982646228963308	WITHOUT_CLASSIFICATION	0.0017353771036693114	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.999952000370965	WITHOUT_CLASSIFICATION	4.79996290349062E-5	DESIGN
len + margin	WITHOUT_CLASSIFICATION	0.99966212104246	WITHOUT_CLASSIFICATION	3.3787895754001094E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9998581298994893	WITHOUT_CLASSIFICATION	1.418701005106435E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9998581298994893	WITHOUT_CLASSIFICATION	1.418701005106435E-4	DESIGN
copy pre-match substr	WITHOUT_CLASSIFICATION	0.9979245216038705	WITHOUT_CLASSIFICATION	0.0020754783961295857	DESIGN
string given	WITHOUT_CLASSIFICATION	0.9998427869312362	WITHOUT_CLASSIFICATION	1.5721306876384736E-4	DESIGN
hash given	WITHOUT_CLASSIFICATION	0.9995563593592668	WITHOUT_CLASSIFICATION	4.436406407331856E-4	DESIGN
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9295302721400694	WITHOUT_CLASSIFICATION	0.07046972785993053	DESIGN
substring longer than string	WITHOUT_CLASSIFICATION	0.9992827729228095	WITHOUT_CLASSIFICATION	7.172270771905601E-4	DESIGN
rb_str_substr	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9997204456426566	WITHOUT_CLASSIFICATION	2.7955435734346564E-4	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9997204456426566	WITHOUT_CLASSIFICATION	2.7955435734346564E-4	DESIGN
rb_str_splice	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.5690400603373118	DESIGN	0.4309599396626881	WITHOUT_CLASSIFICATION
keep cr ?	WITHOUT_CLASSIFICATION	0.9953973673179256	WITHOUT_CLASSIFICATION	0.004602632682074452	DESIGN
keep cr ?	WITHOUT_CLASSIFICATION	0.9953973673179256	WITHOUT_CLASSIFICATION	0.004602632682074452	DESIGN
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9875924099119677	WITHOUT_CLASSIFICATION	0.012407590088032298	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9997425745084921	WITHOUT_CLASSIFICATION	2.574254915078981E-4	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9997425745084921	WITHOUT_CLASSIFICATION	2.574254915078981E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9998852927412305	WITHOUT_CLASSIFICATION	1.1470725876955156E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.9998852927412305	WITHOUT_CLASSIFICATION	1.1470725876955156E-4	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
QTRUE	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9995852721082712	WITHOUT_CLASSIFICATION	4.147278917287826E-4	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.994672772333585	WITHOUT_CLASSIFICATION	0.00532722766641504	DESIGN
long size bits in byte	WITHOUT_CLASSIFICATION	0.999793154294705	WITHOUT_CLASSIFICATION	2.0684570529495687E-4	DESIGN
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9991342174324235	WITHOUT_CLASSIFICATION	8.657825675763859E-4	DESIGN
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9983261414983992	WITHOUT_CLASSIFICATION	0.0016738585016008464	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9966232124571061	WITHOUT_CLASSIFICATION	0.0033767875428938506	DESIGN
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9986041233514362	WITHOUT_CLASSIFICATION	0.0013958766485638182	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9966232124571061	WITHOUT_CLASSIFICATION	0.0033767875428938506	DESIGN
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9993222444921975	WITHOUT_CLASSIFICATION	6.777555078024858E-4	DESIGN
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9973217298929139	WITHOUT_CLASSIFICATION	0.002678270107086113	DESIGN
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999231870801352	WITHOUT_CLASSIFICATION	7.681291986487701E-5	DESIGN
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.999827610664266	WITHOUT_CLASSIFICATION	1.7238933573410534E-4	DESIGN
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999131321135614	WITHOUT_CLASSIFICATION	8.686788643859551E-5	DESIGN
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9889118137239595	WITHOUT_CLASSIFICATION	0.011088186276040423	DESIGN
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9993583158941598	WITHOUT_CLASSIFICATION	6.416841058402359E-4	DESIGN
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9995019825606397	WITHOUT_CLASSIFICATION	4.980174393603632E-4	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.991885526907228	WITHOUT_CLASSIFICATION	0.008114473092771997	DESIGN
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9997806998720014	WITHOUT_CLASSIFICATION	2.1930012799865442E-4	DESIGN
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9986620907417797	WITHOUT_CLASSIFICATION	0.001337909258220313	DESIGN
file not given	WITHOUT_CLASSIFICATION	0.9991772394118034	WITHOUT_CLASSIFICATION	8.227605881967343E-4	DESIGN
string to eval	WITHOUT_CLASSIFICATION	0.9998528285539915	WITHOUT_CLASSIFICATION	1.4717144600844071E-4	DESIGN
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9991489343408224	WITHOUT_CLASSIFICATION	8.510656591775537E-4	DESIGN
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9996074179219432	WITHOUT_CLASSIFICATION	3.925820780567782E-4	DESIGN
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9980685096157965	WITHOUT_CLASSIFICATION	0.0019314903842035415	DESIGN
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9989999695233432	WITHOUT_CLASSIFICATION	0.001000030476656779	DESIGN
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9868586714240631	WITHOUT_CLASSIFICATION	0.013141328575936787	DESIGN
No catch active for this throw	WITHOUT_CLASSIFICATION	0.99894923189837	WITHOUT_CLASSIFICATION	0.0010507681016299311	DESIGN
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9899395900826904	WITHOUT_CLASSIFICATION	0.010060409917309575	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998039963518165	WITHOUT_CLASSIFICATION	1.9600364818359584E-4	DESIGN
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999870308692793	WITHOUT_CLASSIFICATION	1.2969130720700866E-5	DESIGN
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9997129560313461	WITHOUT_CLASSIFICATION	2.8704396865387907E-4	DESIGN
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999756894001833	WITHOUT_CLASSIFICATION	2.431059981668736E-5	DESIGN
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999783162039725	WITHOUT_CLASSIFICATION	2.1683796027576326E-5	DESIGN
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999642721895841	WITHOUT_CLASSIFICATION	3.572781041589562E-5	DESIGN
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999452925351673	WITHOUT_CLASSIFICATION	5.4707464832713224E-5	DESIGN
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999931870784144	WITHOUT_CLASSIFICATION	6.812921585652496E-6	DESIGN
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999823802151983	WITHOUT_CLASSIFICATION	1.7619784801753266E-5	DESIGN
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999173778895094	WITHOUT_CLASSIFICATION	8.262211049049915E-5	DESIGN
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.999941631051734	WITHOUT_CLASSIFICATION	5.836894826606173E-5	DESIGN
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9996192543721616	WITHOUT_CLASSIFICATION	3.807456278384167E-4	DESIGN
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999892708326238	WITHOUT_CLASSIFICATION	1.0729167376183322E-5	DESIGN
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999913339332206	WITHOUT_CLASSIFICATION	8.666066779428834E-6	DESIGN
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.999983271333457	WITHOUT_CLASSIFICATION	1.6728666543053688E-5	DESIGN
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999526348392025	WITHOUT_CLASSIFICATION	4.736516079759443E-5	DESIGN
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.999993177113041	WITHOUT_CLASSIFICATION	6.822886958990389E-6	DESIGN
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999946401020419	WITHOUT_CLASSIFICATION	5.359897958217297E-6	DESIGN
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999563569729638	WITHOUT_CLASSIFICATION	4.364302703621716E-5	DESIGN
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9989706874067548	WITHOUT_CLASSIFICATION	0.0010293125932451877	DESIGN
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999930924213718	WITHOUT_CLASSIFICATION	6.907578628143753E-6	DESIGN
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999866658345147	WITHOUT_CLASSIFICATION	1.3334165485280172E-5	DESIGN
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999836488656402	WITHOUT_CLASSIFICATION	1.6351134359914646E-5	DESIGN
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999916803955018	WITHOUT_CLASSIFICATION	8.319604498248576E-6	DESIGN
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999979889499551	WITHOUT_CLASSIFICATION	2.011050044967311E-6	DESIGN
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999981266655854	WITHOUT_CLASSIFICATION	1.8733344145013383E-6	DESIGN
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999714158337906	WITHOUT_CLASSIFICATION	2.858416620940145E-5	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9975336963665485	WITHOUT_CLASSIFICATION	0.002466303633451509	DESIGN
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9965311503610029	WITHOUT_CLASSIFICATION	0.0034688496389971126	DESIGN
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9991573356170775	WITHOUT_CLASSIFICATION	8.426643829225407E-4	DESIGN
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999737472025432	WITHOUT_CLASSIFICATION	2.6252797456822686E-5	DESIGN
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9998933909689909	WITHOUT_CLASSIFICATION	1.0660903100912403E-4	DESIGN
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9910976887041747	WITHOUT_CLASSIFICATION	0.008902311295825293	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9990520205684417	WITHOUT_CLASSIFICATION	9.479794315583674E-4	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9990520205684417	WITHOUT_CLASSIFICATION	9.479794315583674E-4	DESIGN
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9997179575760279	WITHOUT_CLASSIFICATION	2.820424239721704E-4	DESIGN
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9997766602315364	WITHOUT_CLASSIFICATION	2.2333976846351537E-4	DESIGN
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9994033485360233	WITHOUT_CLASSIFICATION	5.966514639766378E-4	DESIGN
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9995542279894485	WITHOUT_CLASSIFICATION	4.457720105515355E-4	DESIGN
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9997409321850685	WITHOUT_CLASSIFICATION	2.590678149315137E-4	DESIGN
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999991977968553	WITHOUT_CLASSIFICATION	8.022031447634131E-7	DESIGN
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9992850455855049	WITHOUT_CLASSIFICATION	7.14954414495105E-4	DESIGN
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9997575720655648	WITHOUT_CLASSIFICATION	2.4242793443523457E-4	DESIGN
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9981301296232237	WITHOUT_CLASSIFICATION	0.0018698703767763662	DESIGN
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999912575838014	WITHOUT_CLASSIFICATION	8.742416198659425E-6	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999948656802198	WITHOUT_CLASSIFICATION	5.134319780188866E-6	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999948656802198	WITHOUT_CLASSIFICATION	5.134319780188866E-6	DESIGN
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.9983721501225333	DESIGN	0.0016278498774666514	WITHOUT_CLASSIFICATION
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9990525402142568	WITHOUT_CLASSIFICATION	9.474597857431186E-4	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9924817811067874	WITHOUT_CLASSIFICATION	0.007518218893212519	DESIGN
Create Constants class	WITHOUT_CLASSIFICATION	0.9985772879293339	WITHOUT_CLASSIFICATION	0.0014227120706661574	DESIGN
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999503854524368	WITHOUT_CLASSIFICATION	4.9614547563272396E-5	DESIGN
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9982744859549544	WITHOUT_CLASSIFICATION	0.0017255140450455945	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9998195709107403	WITHOUT_CLASSIFICATION	1.8042908925971604E-4	DESIGN
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9986097531354039	WITHOUT_CLASSIFICATION	0.0013902468645961533	DESIGN
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999961747021741	WITHOUT_CLASSIFICATION	3.825297825926183E-6	DESIGN
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9997501608618256	WITHOUT_CLASSIFICATION	2.49839138174439E-4	DESIGN
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999274922881444	WITHOUT_CLASSIFICATION	7.250771185570249E-5	DESIGN
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999993723601525	WITHOUT_CLASSIFICATION	6.27639847492536E-7	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9994795800319446	WITHOUT_CLASSIFICATION	5.204199680554812E-4	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9994795800319446	WITHOUT_CLASSIFICATION	5.204199680554812E-4	DESIGN
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.992536174379943	WITHOUT_CLASSIFICATION	0.007463825620056995	DESIGN
Should we do anything?	WITHOUT_CLASSIFICATION	0.9577725568655555	WITHOUT_CLASSIFICATION	0.04222744313444453	DESIGN
File class methods	WITHOUT_CLASSIFICATION	0.9990993496377736	WITHOUT_CLASSIFICATION	9.006503622265062E-4	DESIGN
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9973912600813177	WITHOUT_CLASSIFICATION	0.00260873991868217	DESIGN
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9992926458040279	WITHOUT_CLASSIFICATION	7.073541959721467E-4	DESIGN
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.999273652682864	WITHOUT_CLASSIFICATION	7.263473171358371E-4	DESIGN
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999756981308525	WITHOUT_CLASSIFICATION	2.4301869147514473E-4	DESIGN
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9982760442890203	WITHOUT_CLASSIFICATION	0.0017239557109798378	DESIGN
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.999316621868115	WITHOUT_CLASSIFICATION	6.833781318851357E-4	DESIGN
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9986417405014654	WITHOUT_CLASSIFICATION	0.0013582594985346026	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9924817811067874	WITHOUT_CLASSIFICATION	0.007518218893212519	DESIGN
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9970074262362263	WITHOUT_CLASSIFICATION	0.002992573763773687	DESIGN
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9948434752956647	WITHOUT_CLASSIFICATION	0.005156524704335198	DESIGN
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.999992774532048	WITHOUT_CLASSIFICATION	7.225467951948036E-6	DESIGN
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9999996083869797	WITHOUT_CLASSIFICATION	3.9161302036230997E-7	DESIGN
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9979104721383326	WITHOUT_CLASSIFICATION	0.0020895278616674274	DESIGN
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9999729967854234	WITHOUT_CLASSIFICATION	2.70032145765944E-5	DESIGN
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998978836465131	WITHOUT_CLASSIFICATION	1.0211635348685301E-4	DESIGN
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9991841381994793	WITHOUT_CLASSIFICATION	8.158618005208356E-4	DESIGN
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9989398682984344	WITHOUT_CLASSIFICATION	0.0010601317015656241	DESIGN
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995016833468308	WITHOUT_CLASSIFICATION	4.983166531692424E-4	DESIGN
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995016833468308	WITHOUT_CLASSIFICATION	4.983166531692424E-4	DESIGN
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.7935978071517292	WITHOUT_CLASSIFICATION	0.20640219284827085	DESIGN
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9998557106799562	WITHOUT_CLASSIFICATION	1.442893200439319E-4	DESIGN
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.999961211727794	WITHOUT_CLASSIFICATION	3.878827220605653E-5	DESIGN
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9995376921501911	WITHOUT_CLASSIFICATION	4.6230784980884495E-4	DESIGN
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9994448425195369	WITHOUT_CLASSIFICATION	5.551574804631455E-4	DESIGN
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9939371346936304	WITHOUT_CLASSIFICATION	0.006062865306369487	DESIGN
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
rb: readable	WITHOUT_CLASSIFICATION	0.9993610375408652	WITHOUT_CLASSIFICATION	6.389624591348046E-4	DESIGN
rename is successful	WITHOUT_CLASSIFICATION	0.98458090913847	WITHOUT_CLASSIFICATION	0.015419090861529988	DESIGN
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9982929658710228	WITHOUT_CLASSIFICATION	0.001707034128977242	DESIGN
try to rename one more time	WITHOUT_CLASSIFICATION	0.9766888951097232	WITHOUT_CLASSIFICATION	0.02331110489027677	DESIGN
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.993389793393404	WITHOUT_CLASSIFICATION	0.006610206606595995	DESIGN
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9965019974770589	WITHOUT_CLASSIFICATION	0.0034980025229409527	DESIGN
RubyContinuation	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9997960292742246	WITHOUT_CLASSIFICATION	2.0397072577535845E-4	DESIGN
16 ?	WITHOUT_CLASSIFICATION	0.9981639809406927	WITHOUT_CLASSIFICATION	0.0018360190593073808	DESIGN
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9997510383716687	WITHOUT_CLASSIFICATION	2.48961628331343E-4	DESIGN
size + 1;	WITHOUT_CLASSIFICATION	0.9998974897177576	WITHOUT_CLASSIFICATION	1.0251028224238739E-4	DESIGN
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.999389524658304	WITHOUT_CLASSIFICATION	6.104753416958809E-4	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9987232180365763	WITHOUT_CLASSIFICATION	0.00127678196342379	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9987232180365763	WITHOUT_CLASSIFICATION	0.00127678196342379	DESIGN
put implementation	WITHOUT_CLASSIFICATION	0.9993174888235686	WITHOUT_CLASSIFICATION	6.825111764314572E-4	DESIGN
get implementation	WITHOUT_CLASSIFICATION	0.998924330071108	WITHOUT_CLASSIFICATION	0.001075669928891944	DESIGN
specialized for value	WITHOUT_CLASSIFICATION	0.9994669527041197	WITHOUT_CLASSIFICATION	5.330472958803874E-4	DESIGN
delete implementation	WITHOUT_CLASSIFICATION	0.9997567965720642	WITHOUT_CLASSIFICATION	2.4320342793583558E-4	DESIGN
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999313910924644	WITHOUT_CLASSIFICATION	6.860890753556333E-5	DESIGN
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9998399501174599	WITHOUT_CLASSIFICATION	1.6004988254016876E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999538889029512	WITHOUT_CLASSIFICATION	4.611109704871576E-5	DESIGN
update the hash value	WITHOUT_CLASSIFICATION	0.9999605116342595	WITHOUT_CLASSIFICATION	3.948836574049704E-5	DESIGN
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9963538781032716	WITHOUT_CLASSIFICATION	0.0036461218967283764	DESIGN
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9993818356548069	WITHOUT_CLASSIFICATION	6.181643451931598E-4	DESIGN
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9990555307288626	WITHOUT_CLASSIFICATION	9.444692711374802E-4	DESIGN
remain where we are	WITHOUT_CLASSIFICATION	0.9996110024527811	WITHOUT_CLASSIFICATION	3.8899754721879E-4	DESIGN
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999935679384683	WITHOUT_CLASSIFICATION	6.432061531778459E-6	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.9989559842401463	WITHOUT_CLASSIFICATION	0.0010440157598536268	DESIGN
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9992405210124479	WITHOUT_CLASSIFICATION	7.594789875521869E-4	DESIGN
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9984963927398114	WITHOUT_CLASSIFICATION	0.0015036072601887069	DESIGN
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9984135047130593	WITHOUT_CLASSIFICATION	0.00158649528694066	DESIGN
first try as directory	WITHOUT_CLASSIFICATION	0.9999754986486504	WITHOUT_CLASSIFICATION	2.4501351349680434E-5	DESIGN
next as regular file	WITHOUT_CLASSIFICATION	0.9982234321489558	WITHOUT_CLASSIFICATION	0.001776567851044277	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9994139658018416	WITHOUT_CLASSIFICATION	5.860341981583929E-4	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
Stream-based	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9875085932338412	WITHOUT_CLASSIFICATION	0.012491406766158822	DESIGN
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.9996676616682992	WITHOUT_CLASSIFICATION	3.323383317006981E-4	DESIGN
Constants for seek	WITHOUT_CLASSIFICATION	0.9995724681208022	WITHOUT_CLASSIFICATION	4.2753187919772004E-4	DESIGN
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9927880564615983	WITHOUT_CLASSIFICATION	0.0072119435384017955	DESIGN
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.999792620627656	WITHOUT_CLASSIFICATION	2.07379372344043E-4	DESIGN
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.983868006566629	WITHOUT_CLASSIFICATION	0.01613199343337093	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998254895134506	WITHOUT_CLASSIFICATION	1.74510486549321E-4	DESIGN
re-register the descriptor	WITHOUT_CLASSIFICATION	0.9992206151836396	WITHOUT_CLASSIFICATION	7.793848163604618E-4	DESIGN
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9240524623274214	WITHOUT_CLASSIFICATION	0.0759475376725786	DESIGN
re-register	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999824283248422	WITHOUT_CLASSIFICATION	1.7571675157793837E-5	DESIGN
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.9999903602827651	WITHOUT_CLASSIFICATION	9.639717234856988E-6	DESIGN
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999904815694107	WITHOUT_CLASSIFICATION	9.518430589312945E-6	DESIGN
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9996417250893844	WITHOUT_CLASSIFICATION	3.582749106154913E-4	DESIGN
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9186826736793812	DESIGN	0.08131732632061882	WITHOUT_CLASSIFICATION
IO class methods.	WITHOUT_CLASSIFICATION	0.9983516636260075	WITHOUT_CLASSIFICATION	0.0016483363739925282	DESIGN
use original modes	WITHOUT_CLASSIFICATION	0.998795362476011	WITHOUT_CLASSIFICATION	0.0012046375239890528	DESIGN
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999244292852407	WITHOUT_CLASSIFICATION	7.557071475926166E-5	DESIGN
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9992383914468299	WITHOUT_CLASSIFICATION	7.616085531701594E-4	DESIGN
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9992373381374355	WITHOUT_CLASSIFICATION	7.626618625644743E-4	DESIGN
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9927874266124386	WITHOUT_CLASSIFICATION	0.0072125733875614976	DESIGN
isRetained=true	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.7962539240751507	WITHOUT_CLASSIFICATION	0.20374607592484933	DESIGN
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9962439883203094	WITHOUT_CLASSIFICATION	0.0037560116796906983	DESIGN
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9976932450400638	WITHOUT_CLASSIFICATION	0.002306754959936243	DESIGN
Everything written	WITHOUT_CLASSIFICATION	0.9996400996901468	WITHOUT_CLASSIFICATION	3.5990030985318756E-4	DESIGN
return len - n;	WITHOUT_CLASSIFICATION	0.9991350808616735	WITHOUT_CLASSIFICATION	8.649191383264974E-4	DESIGN
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999210920031717	WITHOUT_CLASSIFICATION	7.890799682825274E-5	DESIGN
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9730755944250016	WITHOUT_CLASSIFICATION	0.026924405574998495	DESIGN
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9985912597019346	WITHOUT_CLASSIFICATION	0.0014087402980652686	DESIGN
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9983630805181335	WITHOUT_CLASSIFICATION	0.0016369194818665117	DESIGN
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9996483062145739	WITHOUT_CLASSIFICATION	3.5169378542607426E-4	DESIGN
hmmmm	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9931510945463352	WITHOUT_CLASSIFICATION	0.006848905453664737	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9989087024355128	WITHOUT_CLASSIFICATION	0.0010912975644872315	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999184786144032	WITHOUT_CLASSIFICATION	8.152138559679253E-5	DESIGN
Length to read	WITHOUT_CLASSIFICATION	0.9995457219803747	WITHOUT_CLASSIFICATION	4.542780196252572E-4	DESIGN
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9952907578686682	WITHOUT_CLASSIFICATION	0.0047092421313318375	DESIGN
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9992763142971077	WITHOUT_CLASSIFICATION	7.236857028923196E-4	DESIGN
select until read is ready	WITHOUT_CLASSIFICATION	0.9998297677725444	WITHOUT_CLASSIFICATION	1.702322274556383E-4	DESIGN
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9966657159456461	WITHOUT_CLASSIFICATION	0.003334284054353893	DESIGN
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9993391546659319	WITHOUT_CLASSIFICATION	6.608453340679418E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9985556511542261	WITHOUT_CLASSIFICATION	0.0014443488457738642	DESIGN
rb: writable	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9985556511542261	WITHOUT_CLASSIFICATION	0.0014443488457738642	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9890362783671999	DESIGN	0.01096372163280009	WITHOUT_CLASSIFICATION
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.8664407186706633	WITHOUT_CLASSIFICATION	0.1335592813293368	DESIGN
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999450122351049	WITHOUT_CLASSIFICATION	5.4987764895024096E-5	DESIGN
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.5820947864485089	DESIGN	0.41790521355149124	WITHOUT_CLASSIFICATION
class methods for IO	WITHOUT_CLASSIFICATION	0.9982076847036799	WITHOUT_CLASSIFICATION	0.0017923152963200482	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9992742481924766	WITHOUT_CLASSIFICATION	7.25751807523362E-4	DESIGN
write	WITHOUT_CLASSIFICATION	0.9990045358706866	WITHOUT_CLASSIFICATION	9.95464129313304E-4	DESIGN
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9997944451455668	WITHOUT_CLASSIFICATION	2.0555485443313583E-4	DESIGN
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.999998070650835	WITHOUT_CLASSIFICATION	1.9293491650293025E-6	DESIGN
FIXME: process options	WITHOUT_CLASSIFICATION	0.9223568126174498	WITHOUT_CLASSIFICATION	0.07764318738255019	DESIGN
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.7778903953745198	WITHOUT_CLASSIFICATION	0.22210960462548027	DESIGN
NIO based pipe	WITHOUT_CLASSIFICATION	0.9991544499924927	WITHOUT_CLASSIFICATION	8.455500075072952E-4	DESIGN
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9944491716851117	WITHOUT_CLASSIFICATION	0.0055508283148883245	DESIGN
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999717364864276	WITHOUT_CLASSIFICATION	2.826351357245344E-5	DESIGN
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9850336701439197	WITHOUT_CLASSIFICATION	0.014966329856080336	DESIGN
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5535546300268741	DESIGN	0.446445369973126	WITHOUT_CLASSIFICATION
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.99545657506964	WITHOUT_CLASSIFICATION	0.004543424930359962	DESIGN
The class of this object	WITHOUT_CLASSIFICATION	0.9969276531985356	WITHOUT_CLASSIFICATION	0.0030723468014644023	DESIGN
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9997066350571413	WITHOUT_CLASSIFICATION	2.933649428586654E-4	DESIGN
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.8414397851436672	WITHOUT_CLASSIFICATION	0.1585602148563328	DESIGN
rb_class_boot	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
for interface impls	WITHOUT_CLASSIFICATION	0.9992798605037084	WITHOUT_CLASSIFICATION	7.20139496291477E-4	DESIGN
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9578886252692228	WITHOUT_CLASSIFICATION	0.04211137473077728	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9975775414798188	WITHOUT_CLASSIFICATION	0.002422458520181239	DESIGN
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9978520120492649	WITHOUT_CLASSIFICATION	0.0021479879507351	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9666985812208992	WITHOUT_CLASSIFICATION	0.03330141877910076	DESIGN
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9988818354117416	WITHOUT_CLASSIFICATION	0.001118164588258372	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9986144626294152	WITHOUT_CLASSIFICATION	0.0013855373705847105	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9976495270834432	WITHOUT_CLASSIFICATION	0.002350472916556825	DESIGN
Struct methods	WITHOUT_CLASSIFICATION	0.9991576027376264	WITHOUT_CLASSIFICATION	8.423972623734969E-4	DESIGN
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999883332327628	WITHOUT_CLASSIFICATION	1.1666767237201692E-4	DESIGN
define access methods.	WITHOUT_CLASSIFICATION	0.9988569692529645	WITHOUT_CLASSIFICATION	0.001143030747035565	DESIGN
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9634921942846668	WITHOUT_CLASSIFICATION	0.036507805715333165	DESIGN
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9993705810478458	WITHOUT_CLASSIFICATION	6.294189521541957E-4	DESIGN
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9998630904231408	WITHOUT_CLASSIFICATION	1.36909576859164E-4	DESIGN
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.999915971265995	WITHOUT_CLASSIFICATION	8.40287340050648E-5	DESIGN
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9987433110585766	WITHOUT_CLASSIFICATION	0.001256688941423353	DESIGN
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9722932941636859	WITHOUT_CLASSIFICATION	0.027706705836314148	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9970594405095642	WITHOUT_CLASSIFICATION	0.0029405594904357494	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9970594405095642	WITHOUT_CLASSIFICATION	0.0029405594904357494	DESIGN
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9210645390499166	WITHOUT_CLASSIFICATION	0.07893546095008343	DESIGN
superClass may be null.	WITHOUT_CLASSIFICATION	0.9980817873953787	WITHOUT_CLASSIFICATION	0.0019182126046214292	DESIGN
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9650505397190338	WITHOUT_CLASSIFICATION	0.03494946028096615	DESIGN
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999708685738146	WITHOUT_CLASSIFICATION	2.9131426185499804E-5	DESIGN
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.9999734226386896	WITHOUT_CLASSIFICATION	2.6577361310425592E-5	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9999603659672315	WITHOUT_CLASSIFICATION	3.963403276846693E-5	DESIGN
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9950933000860215	WITHOUT_CLASSIFICATION	0.004906699913978497	DESIGN
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9985934363176869	WITHOUT_CLASSIFICATION	0.0014065636823131287	DESIGN
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9757591633665114	WITHOUT_CLASSIFICATION	0.024240836633488635	DESIGN
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999665532351619	WITHOUT_CLASSIFICATION	3.34467648381782E-5	DESIGN
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999558536967394	WITHOUT_CLASSIFICATION	4.414630326064522E-5	DESIGN
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9981160684107894	WITHOUT_CLASSIFICATION	0.0018839315892106715	DESIGN
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9949890774485982	WITHOUT_CLASSIFICATION	0.005010922551401888	DESIGN
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9942336518432352	WITHOUT_CLASSIFICATION	0.005766348156764692	DESIGN
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.6643181787893456	WITHOUT_CLASSIFICATION	0.3356818212106543	DESIGN
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.996897428944089	WITHOUT_CLASSIFICATION	0.0031025710559109817	DESIGN
superClazz = null;	WITHOUT_CLASSIFICATION	0.998970526023314	WITHOUT_CLASSIFICATION	0.0010294739766859747	DESIGN
reopen a java class	WITHOUT_CLASSIFICATION	0.9927725847885059	WITHOUT_CLASSIFICATION	0.007227415211494097	DESIGN
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9932612717614221	WITHOUT_CLASSIFICATION	0.006738728238577921	DESIGN
reopen a java module	WITHOUT_CLASSIFICATION	0.9933921020840545	WITHOUT_CLASSIFICATION	0.0066078979159454815	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.9168128034825251	WITHOUT_CLASSIFICATION	0.08318719651747489	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.9168128034825251	WITHOUT_CLASSIFICATION	0.08318719651747489	DESIGN
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.999112069563563	WITHOUT_CLASSIFICATION	8.879304364369374E-4	DESIGN
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9997535546730263	WITHOUT_CLASSIFICATION	2.4644532697364486E-4	DESIGN
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9473259298861834	WITHOUT_CLASSIFICATION	0.05267407011381661	DESIGN
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9884446161793493	WITHOUT_CLASSIFICATION	0.0115553838206506	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9985720901748205	WITHOUT_CLASSIFICATION	0.001427909825179549	DESIGN
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9987143994606268	WITHOUT_CLASSIFICATION	0.001285600539373256	DESIGN
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9989025947077262	WITHOUT_CLASSIFICATION	0.0010974052922737595	DESIGN
Module class methods	WITHOUT_CLASSIFICATION	0.9975398721767874	WITHOUT_CLASSIFICATION	0.002460127823212647	DESIGN
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.8564492574803843	DESIGN	0.1435507425196158	WITHOUT_CLASSIFICATION
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9999631195132159	WITHOUT_CLASSIFICATION	3.6880486784040004E-5	DESIGN
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9992966854516673	WITHOUT_CLASSIFICATION	7.033145483326151E-4	DESIGN
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9985563610538964	WITHOUT_CLASSIFICATION	0.0014436389461035429	DESIGN
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9998200241949172	WITHOUT_CLASSIFICATION	1.7997580508273336E-4	DESIGN
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999118236072516	WITHOUT_CLASSIFICATION	8.817639274841226E-5	DESIGN
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9986520555360934	WITHOUT_CLASSIFICATION	0.0013479444639066009	DESIGN
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.8116192037577807	DESIGN	0.1883807962422192	WITHOUT_CLASSIFICATION
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9975363007606435	WITHOUT_CLASSIFICATION	0.002463699239356478	DESIGN
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9985210570792055	WITHOUT_CLASSIFICATION	0.001478942920794474	DESIGN
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9986725461137507	WITHOUT_CLASSIFICATION	0.0013274538862492787	DESIGN
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.841929549271046	DESIGN	0.158070450728954	WITHOUT_CLASSIFICATION
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9994595023259655	WITHOUT_CLASSIFICATION	5.404976740344604E-4	DESIGN
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9987060046378438	WITHOUT_CLASSIFICATION	0.00129399536215616	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9996519705207348	WITHOUT_CLASSIFICATION	3.4802947926509416E-4	DESIGN
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999809647658227	WITHOUT_CLASSIFICATION	1.9035234177310807E-4	DESIGN
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9880494321542015	WITHOUT_CLASSIFICATION	0.011950567845798394	DESIGN
reopen	WITHOUT_CLASSIFICATION	0.999044795857782	WITHOUT_CLASSIFICATION	9.552041422179421E-4	DESIGN
ARGF methods	WITHOUT_CLASSIFICATION	0.9991576027376264	WITHOUT_CLASSIFICATION	8.423972623734969E-4	DESIGN
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
one optional, one required args	WITHOUT_CLASSIFICATION	0.9996535517464026	WITHOUT_CLASSIFICATION	3.464482535974069E-4	DESIGN
one optional and no required args	WITHOUT_CLASSIFICATION	0.9998262926686128	WITHOUT_CLASSIFICATION	1.7370733138716556E-4	DESIGN
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9987664631431344	WITHOUT_CLASSIFICATION	0.0012335368568655487	DESIGN
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9996614435325354	WITHOUT_CLASSIFICATION	3.385564674646968E-4	DESIGN
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9983935305172367	WITHOUT_CLASSIFICATION	0.0016064694827633047	DESIGN
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9964099524134019	WITHOUT_CLASSIFICATION	0.0035900475865980794	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.5647025267641405	DESIGN	0.4352974732358596	WITHOUT_CLASSIFICATION
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998149886944169	WITHOUT_CLASSIFICATION	1.8501130558323055E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9968971270745568	WITHOUT_CLASSIFICATION	0.0031028729254431223	DESIGN
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9998510836849196	WITHOUT_CLASSIFICATION	1.4891631508043797E-4	DESIGN
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999345747187728	WITHOUT_CLASSIFICATION	6.542528122712571E-5	DESIGN
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9996962897146542	WITHOUT_CLASSIFICATION	3.0371028534576785E-4	DESIGN
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9997509399048228	WITHOUT_CLASSIFICATION	2.490600951772892E-4	DESIGN
ignore error	WITHOUT_CLASSIFICATION	0.9985544281051182	WITHOUT_CLASSIFICATION	0.0014455718948817046	DESIGN
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9997002245278032	WITHOUT_CLASSIFICATION	2.9977547219684907E-4	DESIGN
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9984022983302514	WITHOUT_CLASSIFICATION	0.0015977016697485077	DESIGN
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9951459467489056	WITHOUT_CLASSIFICATION	0.0048540532510944695	DESIGN
odd	WITHOUT_CLASSIFICATION	0.9989531349966373	WITHOUT_CLASSIFICATION	0.0010468650033627568	DESIGN
JRubyClient	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9999742131571614	WITHOUT_CLASSIFICATION	2.578684283849306E-5	DESIGN
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998355028924487	WITHOUT_CLASSIFICATION	1.644971075513095E-4	DESIGN
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9979433445510446	WITHOUT_CLASSIFICATION	0.002056655448955398	DESIGN
r = x 2 y	WITHOUT_CLASSIFICATION	0.9999178479059035	WITHOUT_CLASSIFICATION	8.215209409645371E-5	DESIGN
0!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
1!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
2!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
3!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
4!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
5!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
6!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
7!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
8!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
9!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
11!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
12!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
13!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
15!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
16!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
17!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
19!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
20!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
21!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
Static constants	WITHOUT_CLASSIFICATION	0.9997148618965892	WITHOUT_CLASSIFICATION	2.851381034108455E-4	DESIGN
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9765440285435751	WITHOUT_CLASSIFICATION	0.023455971456424845	DESIGN
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9996318532834271	WITHOUT_CLASSIFICATION	3.6814671657293003E-4	DESIGN
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9988132080721893	WITHOUT_CLASSIFICATION	0.001186791927810637	DESIGN
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9951154896974926	WITHOUT_CLASSIFICATION	0.004884510302507271	DESIGN
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9997852282371037	WITHOUT_CLASSIFICATION	2.1477176289629938E-4	DESIGN
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.999926661096938	WITHOUT_CLASSIFICATION	7.333890306202347E-5	DESIGN
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.7064272124776317	DESIGN	0.2935727875223683	WITHOUT_CLASSIFICATION
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999811486202379	WITHOUT_CLASSIFICATION	1.8851379762027668E-5	DESIGN
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9943452593276605	WITHOUT_CLASSIFICATION	0.00565474067233952	DESIGN
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9751185034442011	DESIGN	0.024881496555798934	WITHOUT_CLASSIFICATION
integer division	WITHOUT_CLASSIFICATION	0.9993233223480382	WITHOUT_CLASSIFICATION	6.766776519617336E-4	DESIGN
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999903676039594	WITHOUT_CLASSIFICATION	9.632396040506396E-6	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.999343652987913	WITHOUT_CLASSIFICATION	6.563470120870628E-4	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.999343652987913	WITHOUT_CLASSIFICATION	6.563470120870628E-4	DESIGN
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9997852282371037	WITHOUT_CLASSIFICATION	2.1477176289629938E-4	DESIGN
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9953602600717611	WITHOUT_CLASSIFICATION	0.0046397399282388585	DESIGN
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999627304634575	WITHOUT_CLASSIFICATION	3.726953654256561E-5	DESIGN
...round to that digit	WITHOUT_CLASSIFICATION	0.9988104036520207	WITHOUT_CLASSIFICATION	0.0011895963479794166	DESIGN
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999421320658435	WITHOUT_CLASSIFICATION	5.786793415644378E-5	DESIGN
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9963981133341432	WITHOUT_CLASSIFICATION	0.003601886665856757	DESIGN
sign	WITHOUT_CLASSIFICATION	0.9989628051491182	WITHOUT_CLASSIFICATION	0.0010371948508817559	DESIGN
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9996030486641622	WITHOUT_CLASSIFICATION	3.9695133583786516E-4	DESIGN
normalize the value	WITHOUT_CLASSIFICATION	0.9998049362089027	WITHOUT_CLASSIFICATION	1.950637910974195E-4	DESIGN
base	WITHOUT_CLASSIFICATION	0.999240200147005	WITHOUT_CLASSIFICATION	7.597998529949923E-4	DESIGN
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.997803876578691	WITHOUT_CLASSIFICATION	0.0021961234213089833	DESIGN
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9843620037830131	WITHOUT_CLASSIFICATION	0.015637996216986954	DESIGN
eh?!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9938316400435834	WITHOUT_CLASSIFICATION	0.0061683599564166915	DESIGN
General number and precision checking	WITHOUT_CLASSIFICATION	0.998130885127202	WITHOUT_CLASSIFICATION	0.0018691148727979577	DESIGN
the requested precision	WITHOUT_CLASSIFICATION	0.9997839796456114	WITHOUT_CLASSIFICATION	2.160203543886804E-4	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9968740715156702	WITHOUT_CLASSIFICATION	0.0031259284843298363	DESIGN
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9916252850924479	WITHOUT_CLASSIFICATION	0.008374714907552127	DESIGN
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9905712611137832	WITHOUT_CLASSIFICATION	0.009428738886216655	DESIGN
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9996799431935909	WITHOUT_CLASSIFICATION	3.2005680640915943E-4	DESIGN
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999614799527424	WITHOUT_CLASSIFICATION	3.852004725763683E-5	DESIGN
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9992809060623711	WITHOUT_CLASSIFICATION	7.190939376288552E-4	DESIGN
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9993501702445096	WITHOUT_CLASSIFICATION	6.498297554904235E-4	DESIGN
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999738803576813	WITHOUT_CLASSIFICATION	2.611964231869391E-5	DESIGN
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9994297321612815	WITHOUT_CLASSIFICATION	5.702678387185357E-4	DESIGN
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9993362854345615	WITHOUT_CLASSIFICATION	6.637145654384558E-4	DESIGN
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.999908741677351	WITHOUT_CLASSIFICATION	9.125832264897979E-5	DESIGN
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999888616569175	WITHOUT_CLASSIFICATION	1.1138343082547285E-5	DESIGN
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9953083774129333	WITHOUT_CLASSIFICATION	0.004691622587066767	DESIGN
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9998288837830935	WITHOUT_CLASSIFICATION	1.7111621690643784E-4	DESIGN
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9994861636911156	WITHOUT_CLASSIFICATION	5.13836308884328E-4	DESIGN
root x is ready!	WITHOUT_CLASSIFICATION	0.9992230324266353	WITHOUT_CLASSIFICATION	7.769675733646864E-4	DESIGN
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.999791455822691	WITHOUT_CLASSIFICATION	2.0854417730905274E-4	DESIGN
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9991293672108771	WITHOUT_CLASSIFICATION	8.706327891230178E-4	DESIGN
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
c: bind_eval	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9977826158241923	WITHOUT_CLASSIFICATION	0.0022173841758077865	DESIGN
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9985556511542261	WITHOUT_CLASSIFICATION	0.0014443488457738642	DESIGN
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9991407874925629	WITHOUT_CLASSIFICATION	8.592125074371469E-4	DESIGN
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9996827999438462	WITHOUT_CLASSIFICATION	3.172000561537864E-4	DESIGN
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9288761814298997	WITHOUT_CLASSIFICATION	0.07112381857010022	DESIGN
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.987487408398405	WITHOUT_CLASSIFICATION	0.012512591601595088	DESIGN
try the normal property first	WITHOUT_CLASSIFICATION	0.9998793683876416	WITHOUT_CLASSIFICATION	1.2063161235849261E-4	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.9998412877593056	WITHOUT_CLASSIFICATION	1.5871224069431816E-4	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.9998412877593056	WITHOUT_CLASSIFICATION	1.5871224069431816E-4	DESIGN
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.997092829930579	WITHOUT_CLASSIFICATION	0.0029071700694209435	DESIGN
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999423544643531	WITHOUT_CLASSIFICATION	5.764553564693856E-5	DESIGN
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9942090383373767	WITHOUT_CLASSIFICATION	0.0057909616626232955	DESIGN
consume the file name	WITHOUT_CLASSIFICATION	0.9994350392499209	WITHOUT_CLASSIFICATION	5.649607500790506E-4	DESIGN
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.99980067921844	WITHOUT_CLASSIFICATION	1.9932078156007107E-4	DESIGN
try cwd first	WITHOUT_CLASSIFICATION	0.999826672213435	WITHOUT_CLASSIFICATION	1.7332778656505178E-4	DESIGN
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9985208874931989	WITHOUT_CLASSIFICATION	0.001479112506801095	DESIGN
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.8132267026078746	DESIGN	0.18677329739212548	WITHOUT_CLASSIFICATION
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9997295737122691	WITHOUT_CLASSIFICATION	2.704262877308795E-4	DESIGN
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9996019106328221	WITHOUT_CLASSIFICATION	3.980893671778135E-4	DESIGN
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9997295737122691	WITHOUT_CLASSIFICATION	2.704262877308795E-4	DESIGN
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9994901198999576	WITHOUT_CLASSIFICATION	5.098801000424037E-4	DESIGN
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9887202982393519	WITHOUT_CLASSIFICATION	0.011279701760648153	DESIGN
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9963616006741638	WITHOUT_CLASSIFICATION	0.0036383993258363055	DESIGN
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5535546300268741	DESIGN	0.446445369973126	WITHOUT_CLASSIFICATION
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9909219367180946	WITHOUT_CLASSIFICATION	0.009078063281905514	DESIGN
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9968898641390855	WITHOUT_CLASSIFICATION	0.0031101358609143476	DESIGN
must be power of 2!	WITHOUT_CLASSIFICATION	0.9990914261507052	WITHOUT_CLASSIFICATION	9.085738492948046E-4	DESIGN
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999344531112432	WITHOUT_CLASSIFICATION	6.554688875688475E-5	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9887202982393519	WITHOUT_CLASSIFICATION	0.011279701760648153	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999086783373536	WITHOUT_CLASSIFICATION	9.132166264634702E-5	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999086783373536	WITHOUT_CLASSIFICATION	9.132166264634702E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9994398036816817	WITHOUT_CLASSIFICATION	5.601963183183581E-4	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9997115907443239	WITHOUT_CLASSIFICATION	2.8840925567611244E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9973729143800644	WITHOUT_CLASSIFICATION	0.0026270856199356297	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999941780422217	WITHOUT_CLASSIFICATION	5.821957778292851E-5	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.994672772333585	WITHOUT_CLASSIFICATION	0.00532722766641504	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9971429796593113	WITHOUT_CLASSIFICATION	0.0028570203406886405	DESIGN
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9898263209168945	WITHOUT_CLASSIFICATION	0.010173679083105427	DESIGN
Profile	WITHOUT_CLASSIFICATION	0.9991899551540957	WITHOUT_CLASSIFICATION	8.100448459042622E-4	DESIGN
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.9979660006419405	WITHOUT_CLASSIFICATION	0.002033999358059441	DESIGN
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999865057604578	WITHOUT_CLASSIFICATION	1.3494239542292787E-5	DESIGN
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999177521109736	WITHOUT_CLASSIFICATION	8.224788902644651E-5	DESIGN
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9996111006954522	WITHOUT_CLASSIFICATION	3.8889930454777204E-4	DESIGN
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999737589792389	WITHOUT_CLASSIFICATION	2.6241020761120774E-5	DESIGN
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9974466808090424	WITHOUT_CLASSIFICATION	0.002553319190957556	DESIGN
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9998899549951833	WITHOUT_CLASSIFICATION	1.1004500481675288E-4	DESIGN
reset the state	WITHOUT_CLASSIFICATION	0.999762732302004	WITHOUT_CLASSIFICATION	2.3726769799608746E-4	DESIGN
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.998832784609147	WITHOUT_CLASSIFICATION	0.0011672153908529504	DESIGN
rb_match_busy	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
str is frozen	WITHOUT_CLASSIFICATION	0.9992099179585436	WITHOUT_CLASSIFICATION	7.900820414563291E-4	DESIGN
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9969870556807846	WITHOUT_CLASSIFICATION	0.0030129443192154874	DESIGN
JRubyServer	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9925287544173947	WITHOUT_CLASSIFICATION	0.00747124558260522	DESIGN
boot the Object class	WITHOUT_CLASSIFICATION	0.9982102534290066	WITHOUT_CLASSIFICATION	0.0017897465709934108	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9975775414798188	WITHOUT_CLASSIFICATION	0.002422458520181239	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9999603659672315	WITHOUT_CLASSIFICATION	3.963403276846693E-5	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9997837147895322	WITHOUT_CLASSIFICATION	2.1628521046788084E-4	DESIGN
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9961953621111044	WITHOUT_CLASSIFICATION	0.0038046378888955804	DESIGN
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9998902683890544	WITHOUT_CLASSIFICATION	1.0973161094565498E-4	DESIGN
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9945531268990289	WITHOUT_CLASSIFICATION	0.005446873100971157	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.997858882980036	WITHOUT_CLASSIFICATION	0.002141117019963973	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.997858882980036	WITHOUT_CLASSIFICATION	0.002141117019963973	DESIGN
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9959977092432162	WITHOUT_CLASSIFICATION	0.00400229075678377	DESIGN
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9997517204948629	WITHOUT_CLASSIFICATION	2.482795051371163E-4	DESIGN
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9998050377084547	WITHOUT_CLASSIFICATION	1.9496229154523963E-4	DESIGN
update all subclasses	WITHOUT_CLASSIFICATION	0.9998647339148574	WITHOUT_CLASSIFICATION	1.3526608514249116E-4	DESIGN
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9996623219796612	WITHOUT_CLASSIFICATION	3.376780203387747E-4	DESIGN
static initializing method	WITHOUT_CLASSIFICATION	0.9906189825401227	WITHOUT_CLASSIFICATION	0.009381017459877336	DESIGN
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9984489473202071	WITHOUT_CLASSIFICATION	0.0015510526797929156	DESIGN
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.994017135289255	WITHOUT_CLASSIFICATION	0.005982864710745057	DESIGN
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9991488100791316	WITHOUT_CLASSIFICATION	8.511899208684835E-4	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9996462006478493	WITHOUT_CLASSIFICATION	3.5379935215068325E-4	DESIGN
self method name	WITHOUT_CLASSIFICATION	0.99757421137386	WITHOUT_CLASSIFICATION	0.0024257886261399297	DESIGN
the default allocator	WITHOUT_CLASSIFICATION	0.9995764335364349	WITHOUT_CLASSIFICATION	4.2356646356512845E-4	DESIGN
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9994874662035836	WITHOUT_CLASSIFICATION	5.125337964162965E-4	DESIGN
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9982459674634625	WITHOUT_CLASSIFICATION	0.001754032536537586	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999206555652446	WITHOUT_CLASSIFICATION	7.934443475540345E-5	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9977962877297988	WITHOUT_CLASSIFICATION	0.0022037122702012355	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9400218735538003	WITHOUT_CLASSIFICATION	0.059978126446199743	DESIGN
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999067906184479	WITHOUT_CLASSIFICATION	9.320938155207824E-5	DESIGN
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999072118466709	WITHOUT_CLASSIFICATION	9.278815332912742E-5	DESIGN
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999798799190454	WITHOUT_CLASSIFICATION	2.0120080954594723E-5	DESIGN
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9994688284977664	WITHOUT_CLASSIFICATION	5.311715022336658E-4	DESIGN
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9995321200279564	WITHOUT_CLASSIFICATION	4.6787997204346247E-4	DESIGN
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
a gotcha	WITHOUT_CLASSIFICATION	0.997843711850474	WITHOUT_CLASSIFICATION	0.0021562881495259807	DESIGN
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9998604406243445	WITHOUT_CLASSIFICATION	1.3955937565538894E-4	DESIGN
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999046071884874	WITHOUT_CLASSIFICATION	9.539281151259948E-5	DESIGN
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9989984631574846	WITHOUT_CLASSIFICATION	0.0010015368425153426	DESIGN
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9946716415634346	WITHOUT_CLASSIFICATION	0.005328358436565441	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999206555652446	WITHOUT_CLASSIFICATION	7.934443475540345E-5	DESIGN
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9996046609342852	WITHOUT_CLASSIFICATION	3.9533906571479426E-4	DESIGN
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9977861313377983	WITHOUT_CLASSIFICATION	0.002213868662201693	DESIGN
MRI behavior:	WITHOUT_CLASSIFICATION	0.9993581796029352	WITHOUT_CLASSIFICATION	6.418203970648755E-4	DESIGN
Numeric.equal	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
provider is not available	WITHOUT_CLASSIFICATION	0.9859872043784335	WITHOUT_CLASSIFICATION	0.014012795621566675	DESIGN
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9972101693353128	WITHOUT_CLASSIFICATION	0.0027898306646872545	DESIGN
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9989656866877893	WITHOUT_CLASSIFICATION	0.0010343133122106796	DESIGN
RubyDigest	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.8953534974231734	WITHOUT_CLASSIFICATION	0.10464650257682659	DESIGN
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9995750564377343	WITHOUT_CLASSIFICATION	4.249435622657901E-4	DESIGN
we only add live threads	WITHOUT_CLASSIFICATION	0.9997783970116912	WITHOUT_CLASSIFICATION	2.2160298830862615E-4	DESIGN
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998710120392948	WITHOUT_CLASSIFICATION	1.2898796070514324E-4	DESIGN
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9997059439171826	WITHOUT_CLASSIFICATION	2.940560828173992E-4	DESIGN
JRubyService	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
while	WITHOUT_CLASSIFICATION	0.9994253491341014	WITHOUT_CLASSIFICATION	5.746508658985894E-4	DESIGN
\OOO	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.9951773984615125	WITHOUT_CLASSIFICATION	0.0048226015384875	DESIGN
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9997984639080693	WITHOUT_CLASSIFICATION	2.015360919308071E-4	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9792049654561013	WITHOUT_CLASSIFICATION	0.0207950345438987	DESIGN
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9994338947061405	WITHOUT_CLASSIFICATION	5.661052938595567E-4	DESIGN
silent ?	WITHOUT_CLASSIFICATION	0.9957746898737402	WITHOUT_CLASSIFICATION	0.00422531012625987	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9992611627278636	WITHOUT_CLASSIFICATION	7.388372721364951E-4	DESIGN
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9991299730033224	WITHOUT_CLASSIFICATION	8.700269966775677E-4	DESIGN
Surrogates	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
do not load the class if not used	WITHOUT_CLASSIFICATION	0.5044784077039133	WITHOUT_CLASSIFICATION	0.4955215922960866	DESIGN
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
\\uHHHH	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
inner switch	WITHOUT_CLASSIFICATION	0.9974014999568741	WITHOUT_CLASSIFICATION	0.0025985000431260064	DESIGN
newInstance here	WITHOUT_CLASSIFICATION	0.9963330195801956	WITHOUT_CLASSIFICATION	0.0036669804198043356	DESIGN
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999019835457966	WITHOUT_CLASSIFICATION	9.80164542033284E-5	DESIGN
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
option_to_str	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9997052862528166	WITHOUT_CLASSIFICATION	2.947137471834332E-4	DESIGN
args should be before block	WITHOUT_CLASSIFICATION	0.9934064315873832	WITHOUT_CLASSIFICATION	0.006593568412616783	DESIGN
args should be at end	WITHOUT_CLASSIFICATION	0.9867891290548738	WITHOUT_CLASSIFICATION	0.013210870945126192	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9974572609313502	WITHOUT_CLASSIFICATION	0.0025427390686497834	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9974572609313502	WITHOUT_CLASSIFICATION	0.0025427390686497834	DESIGN
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9998578780464813	WITHOUT_CLASSIFICATION	1.4212195351877657E-4	DESIGN
start a new populator	WITHOUT_CLASSIFICATION	0.997914999094198	WITHOUT_CLASSIFICATION	0.002085000905802081	DESIGN
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.999780589727307	WITHOUT_CLASSIFICATION	2.19410272692936E-4	DESIGN
add all names for this annotation	WITHOUT_CLASSIFICATION	0.9972220822684851	WITHOUT_CLASSIFICATION	0.0027779177315148825	DESIGN
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9997557704905842	WITHOUT_CLASSIFICATION	2.442295094157837E-4	DESIGN
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9996084422495777	WITHOUT_CLASSIFICATION	3.915577504223512E-4	DESIGN
single method, use normal logic	WITHOUT_CLASSIFICATION	0.9998981803981924	WITHOUT_CLASSIFICATION	1.0181960180762084E-4	DESIGN
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9979238350971354	WITHOUT_CLASSIFICATION	0.0020761649028645268	DESIGN
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9931726025212128	WITHOUT_CLASSIFICATION	0.006827397478787263	DESIGN
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9943997680779544	WITHOUT_CLASSIFICATION	0.005600231922045624	DESIGN
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9997295737122691	WITHOUT_CLASSIFICATION	2.704262877308795E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9985247740578239	WITHOUT_CLASSIFICATION	0.001475225942176092	DESIGN
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.998381248926506	WITHOUT_CLASSIFICATION	0.0016187510734939304	DESIGN
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999614201512059	WITHOUT_CLASSIFICATION	3.8579848794095367E-4	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9996253884266748	WITHOUT_CLASSIFICATION	3.7461157332520514E-4	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9995662120516643	WITHOUT_CLASSIFICATION	4.337879483357669E-4	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9976939206577209	WITHOUT_CLASSIFICATION	0.0023060793422791967	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9904451246801461	WITHOUT_CLASSIFICATION	0.009554875319853877	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9904451246801461	WITHOUT_CLASSIFICATION	0.009554875319853877	DESIGN
colon3	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
Colon3	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9978429543382071	WITHOUT_CLASSIFICATION	0.002157045661792846	DESIGN
For b.foo	WITHOUT_CLASSIFICATION	0.9996167402318601	WITHOUT_CLASSIFICATION	3.8325976813998255E-4	DESIGN
instance config for the script run	WITHOUT_CLASSIFICATION	0.9948064504505081	WITHOUT_CLASSIFICATION	0.0051935495494918734	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9904451246801461	WITHOUT_CLASSIFICATION	0.009554875319853877	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9904451246801461	WITHOUT_CLASSIFICATION	0.009554875319853877	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999767658709021	WITHOUT_CLASSIFICATION	2.3234129097907718E-4	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999767658709021	WITHOUT_CLASSIFICATION	2.3234129097907718E-4	DESIGN
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.999277552403399	WITHOUT_CLASSIFICATION	7.224475966009693E-4	DESIGN
For 'b.foo'	WITHOUT_CLASSIFICATION	0.9997645046900091	WITHOUT_CLASSIFICATION	2.3549530999083173E-4	DESIGN
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9823203055409013	WITHOUT_CLASSIFICATION	0.017679694459098668	DESIGN
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.7985606386927154	WITHOUT_CLASSIFICATION	0.2014393613072846	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996581946646291	WITHOUT_CLASSIFICATION	3.418053353708448E-4	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996581946646291	WITHOUT_CLASSIFICATION	3.418053353708448E-4	DESIGN
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9982970237628659	WITHOUT_CLASSIFICATION	0.0017029762371341122	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9986619476541493	WITHOUT_CLASSIFICATION	0.0013380523458506274	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998065293468584	WITHOUT_CLASSIFICATION	1.9347065314170725E-4	DESIGN
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9412795480821271	WITHOUT_CLASSIFICATION	0.05872045191787285	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999767658709021	WITHOUT_CLASSIFICATION	2.3234129097907718E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9998944254638764	WITHOUT_CLASSIFICATION	1.0557453612365913E-4	DESIGN
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9975213851293214	WITHOUT_CLASSIFICATION	0.0024786148706785467	DESIGN
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9992206859882102	WITHOUT_CLASSIFICATION	7.793140117897105E-4	DESIGN
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9903222189352583	WITHOUT_CLASSIFICATION	0.009677781064741658	DESIGN
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9995853533523928	WITHOUT_CLASSIFICATION	4.1464664760706597E-4	DESIGN
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.990260388245086	WITHOUT_CLASSIFICATION	0.009739611754913993	DESIGN
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9974682898212415	WITHOUT_CLASSIFICATION	0.002531710178758552	DESIGN
set argv from main's args	WITHOUT_CLASSIFICATION	0.9969308355544262	WITHOUT_CLASSIFICATION	0.0030691644455737937	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9995662120516643	WITHOUT_CLASSIFICATION	4.337879483357669E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9904451246801461	WITHOUT_CLASSIFICATION	0.009554875319853877	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999767658709021	WITHOUT_CLASSIFICATION	2.3234129097907718E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9998944254638764	WITHOUT_CLASSIFICATION	1.0557453612365913E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.987839795066137	WITHOUT_CLASSIFICATION	0.012160204933863057	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.987839795066137	WITHOUT_CLASSIFICATION	0.012160204933863057	DESIGN
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.6319357969726207	DESIGN	0.3680642030273792	WITHOUT_CLASSIFICATION
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9996713671090846	WITHOUT_CLASSIFICATION	3.286328909154661E-4	DESIGN
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9859750451224698	WITHOUT_CLASSIFICATION	0.014024954877530218	DESIGN
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999738206933588	WITHOUT_CLASSIFICATION	2.6179306641160913E-5	DESIGN
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9865594991204287	WITHOUT_CLASSIFICATION	0.013440500879571328	DESIGN
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.999773864761905	WITHOUT_CLASSIFICATION	2.2613523809501506E-4	DESIGN
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9979771070968149	WITHOUT_CLASSIFICATION	0.0020228929031851682	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9850729582975857	WITHOUT_CLASSIFICATION	0.014927041702414304	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9988163146040882	WITHOUT_CLASSIFICATION	0.0011836853959118704	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9637021229551749	WITHOUT_CLASSIFICATION	0.03629787704482507	DESIGN
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9407561754527383	WITHOUT_CLASSIFICATION	0.05924382454726178	DESIGN
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999794434667636	WITHOUT_CLASSIFICATION	2.055653323631524E-5	DESIGN
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999795982161236	WITHOUT_CLASSIFICATION	2.0401783876458616E-5	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9976939206577209	WITHOUT_CLASSIFICATION	0.0023060793422791967	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999767658709021	WITHOUT_CLASSIFICATION	2.3234129097907718E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9986619476541493	WITHOUT_CLASSIFICATION	0.0013380523458506274	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998065293468584	WITHOUT_CLASSIFICATION	1.9347065314170725E-4	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998065293468584	WITHOUT_CLASSIFICATION	1.9347065314170725E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999767658709021	WITHOUT_CLASSIFICATION	2.3234129097907718E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9998944254638764	WITHOUT_CLASSIFICATION	1.0557453612365913E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9998944254638764	WITHOUT_CLASSIFICATION	1.0557453612365913E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.987839795066137	WITHOUT_CLASSIFICATION	0.012160204933863057	DESIGN
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9992138406082236	WITHOUT_CLASSIFICATION	7.861593917763638E-4	DESIGN
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9770040123687288	WITHOUT_CLASSIFICATION	0.02299598763127117	DESIGN
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999964731167926	WITHOUT_CLASSIFICATION	3.526883207321221E-6	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.995529046303742	WITHOUT_CLASSIFICATION	0.0044709536962581	DESIGN
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9498400838094387	WITHOUT_CLASSIFICATION	0.05015991619056127	DESIGN
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9782099407469832	WITHOUT_CLASSIFICATION	0.021790059253016813	DESIGN
add in reverse order	WITHOUT_CLASSIFICATION	0.9993810867211587	WITHOUT_CLASSIFICATION	6.189132788413515E-4	DESIGN
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9993380950117613	WITHOUT_CLASSIFICATION	6.619049882386667E-4	DESIGN
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999097759292766	WITHOUT_CLASSIFICATION	9.02240707233967E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9986619476541493	WITHOUT_CLASSIFICATION	0.0013380523458506274	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998065293468584	WITHOUT_CLASSIFICATION	1.9347065314170725E-4	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998065293468584	WITHOUT_CLASSIFICATION	1.9347065314170725E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999767658709021	WITHOUT_CLASSIFICATION	2.3234129097907718E-4	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9850729582975857	WITHOUT_CLASSIFICATION	0.014927041702414304	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9637021229551749	WITHOUT_CLASSIFICATION	0.03629787704482507	DESIGN
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999949982991774	WITHOUT_CLASSIFICATION	5.001700822616035E-6	DESIGN
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.999998138724864	WITHOUT_CLASSIFICATION	1.8612751360431734E-6	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9996182492508898	WITHOUT_CLASSIFICATION	3.817507491102781E-4	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9996182492508898	WITHOUT_CLASSIFICATION	3.817507491102781E-4	DESIGN
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9786825168094838	WITHOUT_CLASSIFICATION	0.021317483190516125	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999089093498668	WITHOUT_CLASSIFICATION	9.109065013327435E-5	DESIGN
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.991018771832714	WITHOUT_CLASSIFICATION	0.008981228167286057	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9983343311300823	WITHOUT_CLASSIFICATION	0.0016656688699176864	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9993345491233405	WITHOUT_CLASSIFICATION	6.654508766595414E-4	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9993345491233405	WITHOUT_CLASSIFICATION	6.654508766595414E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9995596969613736	WITHOUT_CLASSIFICATION	4.403030386263261E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9995596969613736	WITHOUT_CLASSIFICATION	4.403030386263261E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9993281657087887	WITHOUT_CLASSIFICATION	6.7183429121129E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9993281657087887	WITHOUT_CLASSIFICATION	6.7183429121129E-4	DESIGN
Execute rescue block	WITHOUT_CLASSIFICATION	0.9998706510273505	WITHOUT_CLASSIFICATION	1.293489726494707E-4	DESIGN
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9998798502180876	WITHOUT_CLASSIFICATION	1.2014978191247046E-4	DESIGN
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9906540938472861	WITHOUT_CLASSIFICATION	0.00934590615271388	DESIGN
only a marker interface	WITHOUT_CLASSIFICATION	0.9987743467293779	WITHOUT_CLASSIFICATION	0.0012256532706221225	DESIGN
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9990978982326931	WITHOUT_CLASSIFICATION	9.02101767306857E-4	DESIGN
pragmas	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9983679903041861	WITHOUT_CLASSIFICATION	0.0016320096958139386	DESIGN
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9921936678328538	WITHOUT_CLASSIFICATION	0.007806332167146293	DESIGN
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9995873777095458	WITHOUT_CLASSIFICATION	4.126222904542485E-4	DESIGN
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.989463877294863	WITHOUT_CLASSIFICATION	0.010536122705137001	DESIGN
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9993798802381387	WITHOUT_CLASSIFICATION	6.20119761861378E-4	DESIGN
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.865846974850696	WITHOUT_CLASSIFICATION	0.13415302514930405	DESIGN
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9941171897513327	WITHOUT_CLASSIFICATION	0.005882810248667338	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9996999057350705	WITHOUT_CLASSIFICATION	3.0009426492944084E-4	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9996999057350705	WITHOUT_CLASSIFICATION	3.0009426492944084E-4	DESIGN
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9981437516669673	WITHOUT_CLASSIFICATION	0.0018562483330326848	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9971429796593113	WITHOUT_CLASSIFICATION	0.0028570203406886405	DESIGN
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9902255837430924	WITHOUT_CLASSIFICATION	0.00977441625690749	DESIGN
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9978292906205198	WITHOUT_CLASSIFICATION	0.0021707093794801277	DESIGN
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9756295673686295	WITHOUT_CLASSIFICATION	0.02437043263137052	DESIGN
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9990894655946304	WITHOUT_CLASSIFICATION	9.10534405369625E-4	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9963810782300685	WITHOUT_CLASSIFICATION	0.003618921769931545	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999540445344074	WITHOUT_CLASSIFICATION	4.595546559261131E-5	DESIGN
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9998636817863478	WITHOUT_CLASSIFICATION	1.3631821365213723E-4	DESIGN
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999820254193706	WITHOUT_CLASSIFICATION	1.7974580629358867E-5	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9997972082008665	WITHOUT_CLASSIFICATION	2.0279179913355264E-4	DESIGN
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9995715343351241	WITHOUT_CLASSIFICATION	4.2846566487580117E-4	DESIGN
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9955794035165323	WITHOUT_CLASSIFICATION	0.00442059648346767	DESIGN
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.8733965554814386	DESIGN	0.12660344451856143	WITHOUT_CLASSIFICATION
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9907729943954405	WITHOUT_CLASSIFICATION	0.009227005604559486	DESIGN
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9993592505239237	WITHOUT_CLASSIFICATION	6.407494760763289E-4	DESIGN
can't do it	WITHOUT_CLASSIFICATION	0.9994641284114646	WITHOUT_CLASSIFICATION	5.358715885354107E-4	DESIGN
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9995360542214972	WITHOUT_CLASSIFICATION	4.6394577850287366E-4	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9993841840120208	WITHOUT_CLASSIFICATION	6.158159879791686E-4	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9993841840120208	WITHOUT_CLASSIFICATION	6.158159879791686E-4	DESIGN
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9986552420954565	WITHOUT_CLASSIFICATION	0.0013447579045434116	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
[]	WITHOUT_CLASSIFICATION	0.9983605306147046	WITHOUT_CLASSIFICATION	0.0016394693852953407	DESIGN
[]	WITHOUT_CLASSIFICATION	0.9983605306147046	WITHOUT_CLASSIFICATION	0.0016394693852953407	DESIGN
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9986620831402752	WITHOUT_CLASSIFICATION	0.0013379168597249013	DESIGN
[RubyClass]	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.9986620831402752	WITHOUT_CLASSIFICATION	0.0013379168597249013	DESIGN
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9987292797733163	WITHOUT_CLASSIFICATION	0.001270720226683767	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9996967128850063	WITHOUT_CLASSIFICATION	3.032871149936329E-4	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9996967128850063	WITHOUT_CLASSIFICATION	3.032871149936329E-4	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9991436313074773	WITHOUT_CLASSIFICATION	8.563686925227199E-4	DESIGN
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.99936921967793	WITHOUT_CLASSIFICATION	6.307803220699002E-4	DESIGN
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9984930304721306	WITHOUT_CLASSIFICATION	0.0015069695278693764	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
[RubyClass] []	WITHOUT_CLASSIFICATION	0.9989921339566445	WITHOUT_CLASSIFICATION	0.0010078660433555126	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9970604358001751	WITHOUT_CLASSIFICATION	0.0029395641998249513	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997957464429104	WITHOUT_CLASSIFICATION	2.0425355708965712E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997957464429104	WITHOUT_CLASSIFICATION	2.0425355708965712E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996992831815558	WITHOUT_CLASSIFICATION	3.007168184442786E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996992831815558	WITHOUT_CLASSIFICATION	3.007168184442786E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996992831815558	WITHOUT_CLASSIFICATION	3.007168184442786E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997957464429104	WITHOUT_CLASSIFICATION	2.0425355708965712E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997957464429104	WITHOUT_CLASSIFICATION	2.0425355708965712E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9970604358001751	WITHOUT_CLASSIFICATION	0.0029395641998249513	DESIGN
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9995380153573902	WITHOUT_CLASSIFICATION	4.619846426098373E-4	DESIGN
always false or nil	WITHOUT_CLASSIFICATION	0.9998419930312554	WITHOUT_CLASSIFICATION	1.5800696874451384E-4	DESIGN
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999754859514588	WITHOUT_CLASSIFICATION	2.451404854130074E-5	DESIGN
normal	WITHOUT_CLASSIFICATION	0.9996487669965518	WITHOUT_CLASSIFICATION	3.5123300344816087E-4	DESIGN
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9997776259882435	WITHOUT_CLASSIFICATION	2.2237401175663167E-4	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9976834722084238	WITHOUT_CLASSIFICATION	0.0023165277915762005	DESIGN
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9996984100885445	WITHOUT_CLASSIFICATION	3.0158991145539944E-4	DESIGN
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998488884254001	WITHOUT_CLASSIFICATION	1.5111157459985578E-4	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9997972082008665	WITHOUT_CLASSIFICATION	2.0279179913355264E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997957464429104	WITHOUT_CLASSIFICATION	2.0425355708965712E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997957464429104	WITHOUT_CLASSIFICATION	2.0425355708965712E-4	DESIGN
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9998883993879905	WITHOUT_CLASSIFICATION	1.1160061200955084E-4	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9997951927713825	WITHOUT_CLASSIFICATION	2.0480722861748081E-4	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.9998415388411966	WITHOUT_CLASSIFICATION	1.5846115880329773E-4	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999822448816384	WITHOUT_CLASSIFICATION	1.775511836163488E-5	DESIGN
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9993803008587282	WITHOUT_CLASSIFICATION	6.19699141271867E-4	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9980251139751458	WITHOUT_CLASSIFICATION	0.0019748860248540996	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9996201011544193	WITHOUT_CLASSIFICATION	3.7989884558059885E-4	DESIGN
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999169140662546	WITHOUT_CLASSIFICATION	8.308593374542192E-5	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9998493378698421	WITHOUT_CLASSIFICATION	1.506621301579154E-4	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9989906205406326	WITHOUT_CLASSIFICATION	0.0010093794593674453	DESIGN
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9997295737122691	WITHOUT_CLASSIFICATION	2.704262877308795E-4	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.9988236137857215	WITHOUT_CLASSIFICATION	0.0011763862142785749	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9997789216066588	WITHOUT_CLASSIFICATION	2.2107839334124105E-4	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9985210865204418	WITHOUT_CLASSIFICATION	0.0014789134795580943	DESIGN
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9997724192935463	WITHOUT_CLASSIFICATION	2.2758070645368964E-4	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
compile into array	WITHOUT_CLASSIFICATION	0.9938620755125054	WITHOUT_CLASSIFICATION	0.006137924487494701	DESIGN
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9998733406586601	WITHOUT_CLASSIFICATION	1.2665934133995632E-4	DESIGN
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999231639086025	WITHOUT_CLASSIFICATION	7.683609139761183E-5	DESIGN
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9909832986553022	WITHOUT_CLASSIFICATION	0.009016701344697835	DESIGN
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9991516714631323	WITHOUT_CLASSIFICATION	8.483285368675843E-4	DESIGN
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9991356952113065	WITHOUT_CLASSIFICATION	8.643047886935439E-4	DESIGN
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9980632154356318	WITHOUT_CLASSIFICATION	0.0019367845643683073	DESIGN
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9987416995293218	WITHOUT_CLASSIFICATION	0.0012583004706781759	DESIGN
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9990448391989963	WITHOUT_CLASSIFICATION	9.551608010036031E-4	DESIGN
leave as a normal array	WITHOUT_CLASSIFICATION	0.9998638801107742	WITHOUT_CLASSIFICATION	1.3611988922572756E-4	DESIGN
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9823781531902606	WITHOUT_CLASSIFICATION	0.017621846809739376	DESIGN
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.8927709100322956	WITHOUT_CLASSIFICATION	0.10722908996770442	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9991436313074773	WITHOUT_CLASSIFICATION	8.563686925227199E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997957464429104	WITHOUT_CLASSIFICATION	2.0425355708965712E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9997957464429104	WITHOUT_CLASSIFICATION	2.0425355708965712E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9970604358001751	WITHOUT_CLASSIFICATION	0.0029395641998249513	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9976834722084238	WITHOUT_CLASSIFICATION	0.0023165277915762005	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.9997951927713825	WITHOUT_CLASSIFICATION	2.0480722861748081E-4	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999822448816384	WITHOUT_CLASSIFICATION	1.775511836163488E-5	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9980251139751458	WITHOUT_CLASSIFICATION	0.0019748860248540996	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.9998415388411966	WITHOUT_CLASSIFICATION	1.5846115880329773E-4	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9996201011544193	WITHOUT_CLASSIFICATION	3.7989884558059885E-4	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9989906205406326	WITHOUT_CLASSIFICATION	0.0010093794593674453	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9998493378698421	WITHOUT_CLASSIFICATION	1.506621301579154E-4	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.9988236137857215	WITHOUT_CLASSIFICATION	0.0011763862142785749	DESIGN
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9990935559219736	WITHOUT_CLASSIFICATION	9.064440780264665E-4	DESIGN
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.6834598348836379	DESIGN	0.3165401651163621	WITHOUT_CLASSIFICATION
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9991273067028851	WITHOUT_CLASSIFICATION	8.726932971150589E-4	DESIGN
finally, grab the script	WITHOUT_CLASSIFICATION	0.9988912770622926	WITHOUT_CLASSIFICATION	0.0011087229377074283	DESIGN
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9965438616280559	WITHOUT_CLASSIFICATION	0.003456138371944096	DESIGN
Time the compilation	WITHOUT_CLASSIFICATION	0.9983869369864921	WITHOUT_CLASSIFICATION	0.0016130630135078887	DESIGN
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9981621963141173	WITHOUT_CLASSIFICATION	0.001837803685882704	DESIGN
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9994505667848971	WITHOUT_CLASSIFICATION	5.494332151029915E-4	DESIGN
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9994553922391584	WITHOUT_CLASSIFICATION	5.446077608415415E-4	DESIGN
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9997060776479102	WITHOUT_CLASSIFICATION	2.9392235208986736E-4	DESIGN
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9994475381531336	WITHOUT_CLASSIFICATION	5.524618468664313E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9774411456853502	WITHOUT_CLASSIFICATION	0.022558854314649802	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978353301912535	WITHOUT_CLASSIFICATION	0.002164669808746452	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9971694878255766	WITHOUT_CLASSIFICATION	0.0028305121744233767	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998542557991599	WITHOUT_CLASSIFICATION	1.4574420084006965E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9999428754233589	WITHOUT_CLASSIFICATION	5.712457664120107E-5	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9994702831087482	WITHOUT_CLASSIFICATION	5.29716891251811E-4	DESIGN
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9995418294787579	WITHOUT_CLASSIFICATION	4.5817052124213424E-4	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999069782386114	WITHOUT_CLASSIFICATION	9.302176138854142E-5	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.999775665648022	WITHOUT_CLASSIFICATION	2.2433435197790862E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998998848890392	WITHOUT_CLASSIFICATION	1.001151109608504E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.987570130773406	WITHOUT_CLASSIFICATION	0.012429869226593922	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.987570130773406	WITHOUT_CLASSIFICATION	0.012429869226593922	DESIGN
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9986647640999134	WITHOUT_CLASSIFICATION	0.0013352359000864814	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9989131167283691	WITHOUT_CLASSIFICATION	0.0010868832716308789	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
arg2	WITHOUT_CLASSIFICATION	0.9989383849629436	WITHOUT_CLASSIFICATION	0.0010616150370564015	DESIGN
args	WITHOUT_CLASSIFICATION	0.9991310825670306	WITHOUT_CLASSIFICATION	8.689174329692241E-4	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9989131167283691	WITHOUT_CLASSIFICATION	0.0010868832716308789	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9869439660318764	WITHOUT_CLASSIFICATION	0.013056033968123647	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
args	WITHOUT_CLASSIFICATION	0.9991310825670306	WITHOUT_CLASSIFICATION	8.689174329692241E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.9997413248177051	WITHOUT_CLASSIFICATION	2.5867518229489775E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.9997413248177051	WITHOUT_CLASSIFICATION	2.5867518229489775E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999147324959612	WITHOUT_CLASSIFICATION	8.52675040387855E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999147324959612	WITHOUT_CLASSIFICATION	8.52675040387855E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9994718531339014	WITHOUT_CLASSIFICATION	5.281468660986245E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9994718531339014	WITHOUT_CLASSIFICATION	5.281468660986245E-4	DESIGN
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999142365454907	WITHOUT_CLASSIFICATION	8.576345450933671E-5	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9980343075010965	WITHOUT_CLASSIFICATION	0.0019656924989035303	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9980343075010965	WITHOUT_CLASSIFICATION	0.0019656924989035303	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999131070131977	WITHOUT_CLASSIFICATION	8.68929868023911E-5	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999131070131977	WITHOUT_CLASSIFICATION	8.68929868023911E-5	DESIGN
eval value for assignment	WITHOUT_CLASSIFICATION	0.9998457292447387	WITHOUT_CLASSIFICATION	1.5427075526137316E-4	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9985675979042331	WITHOUT_CLASSIFICATION	0.0014324020957668848	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9985675979042331	WITHOUT_CLASSIFICATION	0.0014324020957668848	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999310295528182	WITHOUT_CLASSIFICATION	6.897044718185583E-5	DESIGN
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9991973901320668	WITHOUT_CLASSIFICATION	8.026098679332923E-4	DESIGN
eval value and save it	WITHOUT_CLASSIFICATION	0.9993225468486989	WITHOUT_CLASSIFICATION	6.77453151301087E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999310295528182	WITHOUT_CLASSIFICATION	6.897044718185583E-5	DESIGN
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.999365529651639	WITHOUT_CLASSIFICATION	6.344703483608545E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999148110383446	WITHOUT_CLASSIFICATION	8.518896165548089E-5	DESIGN
args	WITHOUT_CLASSIFICATION	0.9991310825670306	WITHOUT_CLASSIFICATION	8.689174329692241E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9997801188231996	WITHOUT_CLASSIFICATION	2.1988117680029695E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9997801188231996	WITHOUT_CLASSIFICATION	2.1988117680029695E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9998930498279395	WITHOUT_CLASSIFICATION	1.0695017206047939E-4	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.9998154295579906	WITHOUT_CLASSIFICATION	1.8457044200938523E-4	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.9998154295579906	WITHOUT_CLASSIFICATION	1.8457044200938523E-4	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.999555823280854	WITHOUT_CLASSIFICATION	4.441767191459824E-4	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9967722678924859	WITHOUT_CLASSIFICATION	0.0032277321075141253	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9967722678924859	WITHOUT_CLASSIFICATION	0.0032277321075141253	DESIGN
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9998789498118134	WITHOUT_CLASSIFICATION	1.2105018818666326E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.99926599551988	WITHOUT_CLASSIFICATION	7.340044801198673E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.99926599551988	WITHOUT_CLASSIFICATION	7.340044801198673E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9991310825670306	WITHOUT_CLASSIFICATION	8.689174329692241E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9997801188231996	WITHOUT_CLASSIFICATION	2.1988117680029695E-4	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9998930498279395	WITHOUT_CLASSIFICATION	1.0695017206047939E-4	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.9998154295579906	WITHOUT_CLASSIFICATION	1.8457044200938523E-4	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.9998154295579906	WITHOUT_CLASSIFICATION	1.8457044200938523E-4	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.999555823280854	WITHOUT_CLASSIFICATION	4.441767191459824E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.99926599551988	WITHOUT_CLASSIFICATION	7.340044801198673E-4	DESIGN
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998851208467149	WITHOUT_CLASSIFICATION	1.1487915328509924E-4	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.993760086811449	WITHOUT_CLASSIFICATION	0.006239913188550996	DESIGN
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9996714440272344	WITHOUT_CLASSIFICATION	3.285559727656616E-4	DESIGN
add name to call site list	WITHOUT_CLASSIFICATION	0.9976791639631566	WITHOUT_CLASSIFICATION	0.002320836036843417	DESIGN
module is on top of stack	WITHOUT_CLASSIFICATION	0.9978501957340367	WITHOUT_CLASSIFICATION	0.0021498042659633394	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.9998703771066241	WITHOUT_CLASSIFICATION	1.2962289337603637E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.9996412815562676	WITHOUT_CLASSIFICATION	3.587184437324616E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.9996412815562676	WITHOUT_CLASSIFICATION	3.587184437324616E-4	DESIGN
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9987632700837188	WITHOUT_CLASSIFICATION	0.0012367299162813026	DESIGN
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9990767452732554	WITHOUT_CLASSIFICATION	9.232547267446333E-4	DESIGN
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9990767452732554	WITHOUT_CLASSIFICATION	9.232547267446333E-4	DESIGN
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9996332772451311	WITHOUT_CLASSIFICATION	3.667227548689816E-4	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9981397664491884	WITHOUT_CLASSIFICATION	0.0018602335508115888	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9981397664491884	WITHOUT_CLASSIFICATION	0.0018602335508115888	DESIGN
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9993183836518668	WITHOUT_CLASSIFICATION	6.816163481331942E-4	DESIGN
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9993183836518668	WITHOUT_CLASSIFICATION	6.816163481331942E-4	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998128048278582	WITHOUT_CLASSIFICATION	1.871951721418338E-4	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998128048278582	WITHOUT_CLASSIFICATION	1.871951721418338E-4	DESIGN
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9990767452732554	WITHOUT_CLASSIFICATION	9.232547267446333E-4	DESIGN
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9982873384232435	WITHOUT_CLASSIFICATION	0.001712661576756481	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.997858882980036	WITHOUT_CLASSIFICATION	0.002141117019963973	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998025381367357	WITHOUT_CLASSIFICATION	1.9746186326427507E-4	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9954428011605587	WITHOUT_CLASSIFICATION	0.004557198839441255	DESIGN
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999888513958437	WITHOUT_CLASSIFICATION	1.114860415633541E-5	DESIGN
load Object under value	WITHOUT_CLASSIFICATION	0.9994194324429836	WITHOUT_CLASSIFICATION	5.805675570164279E-4	DESIGN
put under object array already present	WITHOUT_CLASSIFICATION	0.999917649537188	WITHOUT_CLASSIFICATION	8.23504628119908E-5	DESIGN
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9985256120971419	WITHOUT_CLASSIFICATION	0.00147438790285809	DESIGN
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9996447589881526	WITHOUT_CLASSIFICATION	3.552410118473032E-4	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998278794521225	WITHOUT_CLASSIFICATION	1.7212054787743363E-4	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998278794521225	WITHOUT_CLASSIFICATION	1.7212054787743363E-4	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9995912218076665	WITHOUT_CLASSIFICATION	4.087781923336294E-4	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9995912218076665	WITHOUT_CLASSIFICATION	4.087781923336294E-4	DESIGN
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9982566181402066	WITHOUT_CLASSIFICATION	0.0017433818597934593	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995696707623276	WITHOUT_CLASSIFICATION	4.3032923767234846E-4	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995696707623276	WITHOUT_CLASSIFICATION	4.3032923767234846E-4	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995696707623276	WITHOUT_CLASSIFICATION	4.3032923767234846E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998074131221432	WITHOUT_CLASSIFICATION	1.9258687785678958E-4	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999843423209421	WITHOUT_CLASSIFICATION	1.565767905785853E-5	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999843423209421	WITHOUT_CLASSIFICATION	1.565767905785853E-5	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999869129280236	WITHOUT_CLASSIFICATION	1.3087071976312848E-5	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9998789995562389	WITHOUT_CLASSIFICATION	1.2100044376106677E-4	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9989128616931795	WITHOUT_CLASSIFICATION	0.0010871383068205174	DESIGN
skip catch block	WITHOUT_CLASSIFICATION	0.9999424893692471	WITHOUT_CLASSIFICATION	5.751063075276271E-5	DESIGN
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9979550737285735	WITHOUT_CLASSIFICATION	0.0020449262714264662	DESIGN
next jump	WITHOUT_CLASSIFICATION	0.9979716079706521	WITHOUT_CLASSIFICATION	0.002028392029347869	DESIGN
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.999453686957983	WITHOUT_CLASSIFICATION	5.463130420170116E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978353301912535	WITHOUT_CLASSIFICATION	0.002164669808746452	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978353301912535	WITHOUT_CLASSIFICATION	0.002164669808746452	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998074131221432	WITHOUT_CLASSIFICATION	1.9258687785678958E-4	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999869129280236	WITHOUT_CLASSIFICATION	1.3087071976312848E-5	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9879224371112921	WITHOUT_CLASSIFICATION	0.012077562888707809	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9998789995562389	WITHOUT_CLASSIFICATION	1.2100044376106677E-4	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9989128616931795	WITHOUT_CLASSIFICATION	0.0010871383068205174	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999762815525578	WITHOUT_CLASSIFICATION	2.3718447442211167E-5	DESIGN
break jump	WITHOUT_CLASSIFICATION	0.9982102352415578	WITHOUT_CLASSIFICATION	0.0017897647584421428	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9985553163533029	WITHOUT_CLASSIFICATION	0.0014446836466971314	DESIGN
[reg]	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9966394351682558	WITHOUT_CLASSIFICATION	0.0033605648317442454	DESIGN
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9997336246540877	WITHOUT_CLASSIFICATION	2.6637534591227876E-4	DESIGN
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9981054060503085	WITHOUT_CLASSIFICATION	0.001894593949691611	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999762815525578	WITHOUT_CLASSIFICATION	2.3718447442211167E-5	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999985428285036	WITHOUT_CLASSIFICATION	1.4571714963941976E-5	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999985428285036	WITHOUT_CLASSIFICATION	1.4571714963941976E-5	DESIGN
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9945137167505559	WITHOUT_CLASSIFICATION	0.00548628324944413	DESIGN
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9994044055037222	WITHOUT_CLASSIFICATION	5.955944962777723E-4	DESIGN
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9922742355909009	WITHOUT_CLASSIFICATION	0.007725764409099132	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9946125532736101	WITHOUT_CLASSIFICATION	0.005387446726389919	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9993668129752346	WITHOUT_CLASSIFICATION	6.331870247655664E-4	DESIGN
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9992017781508709	WITHOUT_CLASSIFICATION	7.982218491291174E-4	DESIGN
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9996862689277124	WITHOUT_CLASSIFICATION	3.1373107228763804E-4	DESIGN
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9957273001273012	WITHOUT_CLASSIFICATION	0.004272699872698866	DESIGN
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999320394043926	WITHOUT_CLASSIFICATION	6.796059560739022E-5	DESIGN
false zero	WITHOUT_CLASSIFICATION	0.9999631982477226	WITHOUT_CLASSIFICATION	3.68017522772844E-5	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9985531853368864	WITHOUT_CLASSIFICATION	0.001446814663113646	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9946125532736101	WITHOUT_CLASSIFICATION	0.005387446726389919	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.9993668129752346	WITHOUT_CLASSIFICATION	6.331870247655664E-4	DESIGN
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.998078947972014	WITHOUT_CLASSIFICATION	0.0019210520279859336	DESIGN
push false	WITHOUT_CLASSIFICATION	0.9999182914919257	WITHOUT_CLASSIFICATION	8.170850807436513E-5	DESIGN
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9996235530571389	WITHOUT_CLASSIFICATION	3.7644694286108305E-4	DESIGN
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
[C]	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
push true	WITHOUT_CLASSIFICATION	0.9997794368460606	WITHOUT_CLASSIFICATION	2.205631539394697E-4	DESIGN
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9998962965701144	WITHOUT_CLASSIFICATION	1.0370342988567521E-4	DESIGN
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
[boolean]	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9986405982956299	WITHOUT_CLASSIFICATION	0.0013594017043701407	DESIGN
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999636683974302	WITHOUT_CLASSIFICATION	3.633160256980922E-5	DESIGN
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9968815493164294	WITHOUT_CLASSIFICATION	0.003118450683570568	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9827774172257955	WITHOUT_CLASSIFICATION	0.017222582774204433	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9988774951222639	WITHOUT_CLASSIFICATION	0.0011225048777361343	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9985578350482082	WITHOUT_CLASSIFICATION	0.00144216495179182	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999516299054632	WITHOUT_CLASSIFICATION	4.837009453685497E-5	DESIGN
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9996249906138689	WITHOUT_CLASSIFICATION	3.750093861310466E-4	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9988774951222639	WITHOUT_CLASSIFICATION	0.0011225048777361343	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9985578350482082	WITHOUT_CLASSIFICATION	0.00144216495179182	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999516299054632	WITHOUT_CLASSIFICATION	4.837009453685497E-5	DESIGN
finally with exception	WITHOUT_CLASSIFICATION	0.9968057466593152	WITHOUT_CLASSIFICATION	0.0031942533406848447	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9948298682859489	WITHOUT_CLASSIFICATION	0.00517013171405116	DESIGN
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.999776863518537	WITHOUT_CLASSIFICATION	2.2313648146297908E-4	DESIGN
original exception is on stack	WITHOUT_CLASSIFICATION	0.9992874036202813	WITHOUT_CLASSIFICATION	7.125963797187114E-4	DESIGN
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9972073657158624	WITHOUT_CLASSIFICATION	0.002792634284137692	DESIGN
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.999703799525082	WITHOUT_CLASSIFICATION	2.962004749179725E-4	DESIGN
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9998700459730627	WITHOUT_CLASSIFICATION	1.2995402693722607E-4	DESIGN
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9966760536612537	WITHOUT_CLASSIFICATION	0.0033239463387463434	DESIGN
script object	WITHOUT_CLASSIFICATION	0.9988660399095162	WITHOUT_CLASSIFICATION	0.0011339600904838464	DESIGN
arities	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9351876873718451	WITHOUT_CLASSIFICATION	0.06481231262815491	DESIGN
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9992710047822916	WITHOUT_CLASSIFICATION	7.289952177084422E-4	DESIGN
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9961735295832834	WITHOUT_CLASSIFICATION	0.003826470416716615	DESIGN
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999782799527833	WITHOUT_CLASSIFICATION	2.1720047216700197E-5	DESIGN
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9997094316877471	WITHOUT_CLASSIFICATION	2.90568312252956E-4	DESIGN
normal case, create a new label	WITHOUT_CLASSIFICATION	0.9997621356787411	WITHOUT_CLASSIFICATION	2.3786432125892467E-4	DESIGN
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9940054755638692	WITHOUT_CLASSIFICATION	0.005994524436130832	DESIGN
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9980050004897999	WITHOUT_CLASSIFICATION	0.001994999510200159	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998606522295069	WITHOUT_CLASSIFICATION	1.393477704931289E-4	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9992247344283125	WITHOUT_CLASSIFICATION	7.752655716874614E-4	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999883982282088	WITHOUT_CLASSIFICATION	1.1601771791149664E-5	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999553088697403	WITHOUT_CLASSIFICATION	4.469113025980698E-5	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999553088697403	WITHOUT_CLASSIFICATION	4.469113025980698E-5	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9944356456832777	WITHOUT_CLASSIFICATION	0.005564354316722317	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9944356456832777	WITHOUT_CLASSIFICATION	0.005564354316722317	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9988227547885541	WITHOUT_CLASSIFICATION	0.0011772452114459937	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9988227547885541	WITHOUT_CLASSIFICATION	0.0011772452114459937	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9997267759444006	WITHOUT_CLASSIFICATION	2.73224055599351E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9987802370345569	WITHOUT_CLASSIFICATION	0.0012197629654431775	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9817903230615962	WITHOUT_CLASSIFICATION	0.018209676938403762	DESIGN
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9998961754094577	WITHOUT_CLASSIFICATION	1.038245905422558E-4	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999949596020096	WITHOUT_CLASSIFICATION	5.040397990454068E-6	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999992247756481	WITHOUT_CLASSIFICATION	7.752243518266172E-7	DESIGN
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9994426004487554	WITHOUT_CLASSIFICATION	5.573995512446516E-4	DESIGN
then optional args	WITHOUT_CLASSIFICATION	0.999617223909794	WITHOUT_CLASSIFICATION	3.82776090205946E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978353301912535	WITHOUT_CLASSIFICATION	0.002164669808746452	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9997267759444006	WITHOUT_CLASSIFICATION	2.73224055599351E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9987802370345569	WITHOUT_CLASSIFICATION	0.0012197629654431775	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9817903230615962	WITHOUT_CLASSIFICATION	0.018209676938403762	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999949596020096	WITHOUT_CLASSIFICATION	5.040397990454068E-6	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999992247756481	WITHOUT_CLASSIFICATION	7.752243518266172E-7	DESIGN
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999483186397845	WITHOUT_CLASSIFICATION	5.168136021549697E-4	DESIGN
finally, post args	WITHOUT_CLASSIFICATION	0.9988418789971235	WITHOUT_CLASSIFICATION	0.0011581210028764782	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9878244832418192	WITHOUT_CLASSIFICATION	0.012175516758180951	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9878244832418192	WITHOUT_CLASSIFICATION	0.012175516758180951	DESIGN
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9990950604934554	WITHOUT_CLASSIFICATION	9.049395065445654E-4	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999179315221688	WITHOUT_CLASSIFICATION	8.206847783120852E-5	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9909034443726893	WITHOUT_CLASSIFICATION	0.009096555627310812	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9988688487260112	WITHOUT_CLASSIFICATION	0.0011311512739888196	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9988688487260112	WITHOUT_CLASSIFICATION	0.0011311512739888196	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999765253584932	WITHOUT_CLASSIFICATION	2.3474641506805185E-4	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9848754281614078	WITHOUT_CLASSIFICATION	0.015124571838592154	DESIGN
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9995726648377151	WITHOUT_CLASSIFICATION	4.2733516228484397E-4	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999857715202048	WITHOUT_CLASSIFICATION	1.4228479795193812E-4	DESIGN
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9974962260595142	WITHOUT_CLASSIFICATION	0.0025037739404857617	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9971694878255766	WITHOUT_CLASSIFICATION	0.0028305121744233767	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998542557991599	WITHOUT_CLASSIFICATION	1.4574420084006965E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9999428754233589	WITHOUT_CLASSIFICATION	5.712457664120107E-5	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9994702831087482	WITHOUT_CLASSIFICATION	5.29716891251811E-4	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.999775665648022	WITHOUT_CLASSIFICATION	2.2433435197790862E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998998848890392	WITHOUT_CLASSIFICATION	1.001151109608504E-4	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999765253584932	WITHOUT_CLASSIFICATION	2.3474641506805185E-4	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9848754281614078	WITHOUT_CLASSIFICATION	0.015124571838592154	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999857715202048	WITHOUT_CLASSIFICATION	1.4228479795193812E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9986175136225962	WITHOUT_CLASSIFICATION	0.0013824863774038352	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9909034443726893	WITHOUT_CLASSIFICATION	0.009096555627310812	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9909034443726893	WITHOUT_CLASSIFICATION	0.009096555627310812	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9985531853368864	WITHOUT_CLASSIFICATION	0.001446814663113646	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9985531853368864	WITHOUT_CLASSIFICATION	0.001446814663113646	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9973302867629006	WITHOUT_CLASSIFICATION	0.002669713237099406	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9973302867629006	WITHOUT_CLASSIFICATION	0.002669713237099406	DESIGN
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999500890142211	WITHOUT_CLASSIFICATION	4.9910985778868075E-5	DESIGN
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9906625135363705	WITHOUT_CLASSIFICATION	0.00933748646362946	DESIGN
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9942421505643977	WITHOUT_CLASSIFICATION	0.005757849435602234	DESIGN
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9996901577336663	WITHOUT_CLASSIFICATION	3.0984226633363045E-4	DESIGN
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9996658797704708	WITHOUT_CLASSIFICATION	3.341202295292124E-4	DESIGN
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9995267460981859	WITHOUT_CLASSIFICATION	4.732539018140984E-4	DESIGN
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.985951808398935	WITHOUT_CLASSIFICATION	0.01404819160106501	DESIGN
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9998628982655211	WITHOUT_CLASSIFICATION	1.3710173447896274E-4	DESIGN
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9725802730477999	WITHOUT_CLASSIFICATION	0.027419726952200102	DESIGN
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9774411456853502	WITHOUT_CLASSIFICATION	0.022558854314649802	DESIGN
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9986484017550792	WITHOUT_CLASSIFICATION	0.0013515982449208426	DESIGN
verify the class	WITHOUT_CLASSIFICATION	0.9979490698671254	WITHOUT_CLASSIFICATION	0.002050930132874653	DESIGN
create dir if necessary	WITHOUT_CLASSIFICATION	0.9933571353207413	WITHOUT_CLASSIFICATION	0.0066428646792586745	DESIGN
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999373823185298	WITHOUT_CLASSIFICATION	6.261768147018895E-4	DESIGN
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999938399630641	WITHOUT_CLASSIFICATION	6.160036935922666E-6	DESIGN
thread context	WITHOUT_CLASSIFICATION	0.999882425054223	WITHOUT_CLASSIFICATION	1.1757494577694483E-4	DESIGN
line number	WITHOUT_CLASSIFICATION	0.9996269254566622	WITHOUT_CLASSIFICATION	3.7307454333774365E-4	DESIGN
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9998686657251364	WITHOUT_CLASSIFICATION	1.3133427486365128E-4	DESIGN
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9986433347563625	WITHOUT_CLASSIFICATION	0.00135666524363752	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998542557991599	WITHOUT_CLASSIFICATION	1.4574420084006965E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9994702831087482	WITHOUT_CLASSIFICATION	5.29716891251811E-4	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.987570130773406	WITHOUT_CLASSIFICATION	0.012429869226593922	DESIGN
block	WITHOUT_CLASSIFICATION	0.9997801188231996	WITHOUT_CLASSIFICATION	2.1988117680029695E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9997801188231996	WITHOUT_CLASSIFICATION	2.1988117680029695E-4	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9986175136225962	WITHOUT_CLASSIFICATION	0.0013824863774038352	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9909034443726893	WITHOUT_CLASSIFICATION	0.009096555627310812	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9985531853368864	WITHOUT_CLASSIFICATION	0.001446814663113646	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9973302867629006	WITHOUT_CLASSIFICATION	0.002669713237099406	DESIGN
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.990957583914386	DESIGN	0.009042416085613882	WITHOUT_CLASSIFICATION
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.8184756974418644	DESIGN	0.18152430255813565	WITHOUT_CLASSIFICATION
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9993602229039622	WITHOUT_CLASSIFICATION	6.397770960377478E-4	DESIGN
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.994117036641778	WITHOUT_CLASSIFICATION	0.005882963358221961	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9979464196728131	WITHOUT_CLASSIFICATION	0.0020535803271870016	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9979464196728131	WITHOUT_CLASSIFICATION	0.0020535803271870016	DESIGN
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.996870411340195	WITHOUT_CLASSIFICATION	0.003129588659805051	DESIGN
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9994571759003619	WITHOUT_CLASSIFICATION	5.428240996381334E-4	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9970333523056322	WITHOUT_CLASSIFICATION	0.002966647694367806	DESIGN
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9989354661353581	WITHOUT_CLASSIFICATION	0.0010645338646418322	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9993432558770464	WITHOUT_CLASSIFICATION	6.567441229536507E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9993432558770464	WITHOUT_CLASSIFICATION	6.567441229536507E-4	DESIGN
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9989846742027294	WITHOUT_CLASSIFICATION	0.0010153257972706064	DESIGN
normal closure	WITHOUT_CLASSIFICATION	0.9999582554451787	WITHOUT_CLASSIFICATION	4.1744554821302154E-5	DESIGN
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999809262731083	WITHOUT_CLASSIFICATION	1.9073726891762316E-5	DESIGN
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9997753378952038	WITHOUT_CLASSIFICATION	2.2466210479631175E-4	DESIGN
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9997938471510278	WITHOUT_CLASSIFICATION	2.0615284897228811E-4	DESIGN
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9998783685689477	WITHOUT_CLASSIFICATION	1.2163143105225432E-4	DESIGN
Ruby name	WITHOUT_CLASSIFICATION	0.9985486107823838	WITHOUT_CLASSIFICATION	0.0014513892176162876	DESIGN
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9982265372775921	WITHOUT_CLASSIFICATION	0.0017734627224079093	DESIGN
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9974303114816401	WITHOUT_CLASSIFICATION	0.0025696885183600373	DESIGN
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9996273893965805	WITHOUT_CLASSIFICATION	3.726106034194875E-4	DESIGN
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9977310761077859	WITHOUT_CLASSIFICATION	0.002268923892214088	DESIGN
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9978023975816716	WITHOUT_CLASSIFICATION	0.0021976024183284625	DESIGN
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9980384512482865	WITHOUT_CLASSIFICATION	0.0019615487517135517	DESIGN
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9978968122384815	WITHOUT_CLASSIFICATION	0.0021031877615185217	DESIGN
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9990083615166562	WITHOUT_CLASSIFICATION	9.916384833438068E-4	DESIGN
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9966795865231679	WITHOUT_CLASSIFICATION	0.003320413476832094	DESIGN
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9991643699520525	WITHOUT_CLASSIFICATION	8.356300479475389E-4	DESIGN
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9989793001605363	WITHOUT_CLASSIFICATION	0.0010206998394637424	DESIGN
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9984932391602714	WITHOUT_CLASSIFICATION	0.0015067608397285844	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.9987891762354779	WITHOUT_CLASSIFICATION	0.0012108237645220348	DESIGN
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9991898439627729	WITHOUT_CLASSIFICATION	8.101560372272053E-4	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9989361103419501	WITHOUT_CLASSIFICATION	0.001063889658049902	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9989361103419501	WITHOUT_CLASSIFICATION	0.001063889658049902	DESIGN
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9951029557262302	WITHOUT_CLASSIFICATION	0.0048970442737697635	DESIGN
Build the class body!	WITHOUT_CLASSIFICATION	0.9978742451160338	WITHOUT_CLASSIFICATION	0.0021257548839661716	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999540445344074	WITHOUT_CLASSIFICATION	4.595546559261131E-5	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999540445344074	WITHOUT_CLASSIFICATION	4.595546559261131E-5	DESIGN
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9605606329015955	DESIGN	0.03943936709840448	WITHOUT_CLASSIFICATION
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9997496267488458	WITHOUT_CLASSIFICATION	2.503732511540823E-4	DESIGN
done done done done	WITHOUT_CLASSIFICATION	0.9988930513650958	WITHOUT_CLASSIFICATION	0.0011069486349043075	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9994868594154888	WITHOUT_CLASSIFICATION	5.131405845112263E-4	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9994868594154888	WITHOUT_CLASSIFICATION	5.131405845112263E-4	DESIGN
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.992735641586489	WITHOUT_CLASSIFICATION	0.007264358413511008	DESIGN
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9992900511586872	WITHOUT_CLASSIFICATION	7.099488413127544E-4	DESIGN
build first node only and return false	WITHOUT_CLASSIFICATION	0.9999935813660153	WITHOUT_CLASSIFICATION	6.418633984715334E-6	DESIGN
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999780431311939	WITHOUT_CLASSIFICATION	2.1956868806060285E-5	DESIGN
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9998889638923814	WITHOUT_CLASSIFICATION	1.1103610761867134E-4	DESIGN
get the incoming case value	WITHOUT_CLASSIFICATION	0.9999375174424721	WITHOUT_CLASSIFICATION	6.248255752793832E-5	DESIGN
the CASE instruction	WITHOUT_CLASSIFICATION	0.9996918847823582	WITHOUT_CLASSIFICATION	3.081152176418106E-4	DESIGN
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9991198035570344	WITHOUT_CLASSIFICATION	8.801964429655182E-4	DESIGN
build each "when"	WITHOUT_CLASSIFICATION	0.9995215261061021	WITHOUT_CLASSIFICATION	4.784738938978603E-4	DESIGN
multiple conditions for when	WITHOUT_CLASSIFICATION	0.9942783128013605	WITHOUT_CLASSIFICATION	0.005721687198639601	DESIGN
build "else" if it exists	WITHOUT_CLASSIFICATION	0.9998278457424481	WITHOUT_CLASSIFICATION	1.72154257551778E-4	DESIGN
now emit bodies	WITHOUT_CLASSIFICATION	0.9988876549760706	WITHOUT_CLASSIFICATION	0.0011123450239294002	DESIGN
close it out	WITHOUT_CLASSIFICATION	0.9999791487602337	WITHOUT_CLASSIFICATION	2.085123976626929E-5	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9973861197444865	WITHOUT_CLASSIFICATION	0.0026138802555135295	DESIGN
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9938769930752084	WITHOUT_CLASSIFICATION	0.0061230069247916455	DESIGN
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9971792910060462	WITHOUT_CLASSIFICATION	0.002820708993953787	DESIGN
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9996670212276615	WITHOUT_CLASSIFICATION	3.329787723384927E-4	DESIGN
Build IR for args	WITHOUT_CLASSIFICATION	0.9996178279933524	WITHOUT_CLASSIFICATION	3.821720066476947E-4	DESIGN
Build IR for body	WITHOUT_CLASSIFICATION	0.9998436567350294	WITHOUT_CLASSIFICATION	1.5634326497069594E-4	DESIGN
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9994442217233098	WITHOUT_CLASSIFICATION	5.557782766902462E-4	DESIGN
Instance method	WITHOUT_CLASSIFICATION	0.9999844167409702	WITHOUT_CLASSIFICATION	1.55832590298526E-5	DESIGN
Class method	WITHOUT_CLASSIFICATION	0.9997364287575522	WITHOUT_CLASSIFICATION	2.635712424477528E-4	DESIGN
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9968367652913795	WITHOUT_CLASSIFICATION	0.0031632347086204787	DESIGN
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9983180318061224	WITHOUT_CLASSIFICATION	0.0016819681938776438	DESIGN
Now for the rest	WITHOUT_CLASSIFICATION	0.9999038008075731	WITHOUT_CLASSIFICATION	9.619919242691969E-5	DESIGN
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.999952128169427	WITHOUT_CLASSIFICATION	4.787183057295213E-5	DESIGN
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9997484978150983	WITHOUT_CLASSIFICATION	2.51502184901599E-4	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9998167136362341	WITHOUT_CLASSIFICATION	1.8328636376594665E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9992628225733832	WITHOUT_CLASSIFICATION	7.371774266168243E-4	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999967288862979	WITHOUT_CLASSIFICATION	3.271113702227697E-6	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999993927236002	WITHOUT_CLASSIFICATION	6.072763998076668E-6	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9973861197444865	WITHOUT_CLASSIFICATION	0.0026138802555135295	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9998167136362341	WITHOUT_CLASSIFICATION	1.8328636376594665E-4	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9992628225733832	WITHOUT_CLASSIFICATION	7.371774266168243E-4	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999993927236002	WITHOUT_CLASSIFICATION	6.072763998076668E-6	DESIGN
Get the container for this new module	WITHOUT_CLASSIFICATION	0.9985646114257866	WITHOUT_CLASSIFICATION	0.0014353885742133924	DESIGN
Build the new module	WITHOUT_CLASSIFICATION	0.9988985704419405	WITHOUT_CLASSIFICATION	0.0011014295580595221	DESIGN
Build the module body	WITHOUT_CLASSIFICATION	0.9993545682418784	WITHOUT_CLASSIFICATION	6.454317581215878E-4	DESIGN
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999082601127636	WITHOUT_CLASSIFICATION	9.173988723639447E-5	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.999729815777753	WITHOUT_CLASSIFICATION	2.7018422224701016E-4	DESIGN
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9997792834914393	WITHOUT_CLASSIFICATION	2.2071650856070907E-4	DESIGN
get attr	WITHOUT_CLASSIFICATION	0.9983598380905839	WITHOUT_CLASSIFICATION	0.0016401619094160882	DESIGN
call operator	WITHOUT_CLASSIFICATION	0.9993215428844369	WITHOUT_CLASSIFICATION	6.784571155631461E-4	DESIGN
set attr	WITHOUT_CLASSIFICATION	0.996203108180519	WITHOUT_CLASSIFICATION	0.003796891819480983	DESIGN
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9441136541290336	WITHOUT_CLASSIFICATION	0.05588634587096636	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9962935201560881	WITHOUT_CLASSIFICATION	0.003706479843911993	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9962935201560881	WITHOUT_CLASSIFICATION	0.003706479843911993	DESIGN
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9996114904278638	WITHOUT_CLASSIFICATION	3.885095721362456E-4	DESIGN
build first node only and return true	WITHOUT_CLASSIFICATION	0.9999826713843734	WITHOUT_CLASSIFICATION	1.7328615626646355E-5	DESIGN
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999944638348383	WITHOUT_CLASSIFICATION	5.5361651616994786E-5	DESIGN
Top-level script!	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999764678056566	WITHOUT_CLASSIFICATION	2.3532194343279633E-5	DESIGN
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9997570116868488	WITHOUT_CLASSIFICATION	2.4298831315125788E-4	DESIGN
What handles warnings	WITHOUT_CLASSIFICATION	0.9992355369493388	WITHOUT_CLASSIFICATION	7.644630506612614E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9092015138228327	WITHOUT_CLASSIFICATION	0.0907984861771673	DESIGN
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999925387965536	WITHOUT_CLASSIFICATION	7.461203446414937E-6	DESIGN
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9993304205311097	WITHOUT_CLASSIFICATION	6.695794688904365E-4	DESIGN
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9965112351792077	WITHOUT_CLASSIFICATION	0.003488764820792262	DESIGN
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9707703492899881	WITHOUT_CLASSIFICATION	0.029229650710011955	DESIGN
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999436152309592	WITHOUT_CLASSIFICATION	5.638476904071198E-5	DESIGN
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9998562611060422	WITHOUT_CLASSIFICATION	1.4373889395780085E-4	DESIGN
alu operations	WITHOUT_CLASSIFICATION	0.9997417694277533	WITHOUT_CLASSIFICATION	2.582305722466956E-4	DESIGN
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9997076264148825	WITHOUT_CLASSIFICATION	2.9237358511749294E-4	DESIGN
closure instructions	WITHOUT_CLASSIFICATION	0.9998791088103917	WITHOUT_CLASSIFICATION	1.2089118960836676E-4	DESIGN
eval instructions	WITHOUT_CLASSIFICATION	0.9994485180680694	WITHOUT_CLASSIFICATION	5.514819319305891E-4	DESIGN
def instructions	WITHOUT_CLASSIFICATION	0.999152940565402	WITHOUT_CLASSIFICATION	8.470594345980941E-4	DESIGN
exception instructions	WITHOUT_CLASSIFICATION	0.998256403269543	WITHOUT_CLASSIFICATION	0.0017435967304570122	DESIGN
Loads	WITHOUT_CLASSIFICATION	0.9988374042608139	WITHOUT_CLASSIFICATION	0.001162595739186104	DESIGN
Stores	WITHOUT_CLASSIFICATION	0.9986986156004489	WITHOUT_CLASSIFICATION	0.0013013843995511147	DESIGN
jump and branch operations	WITHOUT_CLASSIFICATION	0.9998544166190075	WITHOUT_CLASSIFICATION	1.4558338099260025E-4	DESIGN
others	WITHOUT_CLASSIFICATION	0.9891082152912797	WITHOUT_CLASSIFICATION	0.010891784708720334	DESIGN
a case/when branch	WITHOUT_CLASSIFICATION	0.9993862689197983	WITHOUT_CLASSIFICATION	6.137310802017568E-4	DESIGN
optimization guards	WITHOUT_CLASSIFICATION	0.9993752320447526	WITHOUT_CLASSIFICATION	6.247679552473428E-4	DESIGN
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.5573406917342137	WITHOUT_CLASSIFICATION	0.44265930826578626	DESIGN
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9932094478726625	WITHOUT_CLASSIFICATION	0.006790552127337383	DESIGN
scripts	WITHOUT_CLASSIFICATION	0.9990479356292012	WITHOUT_CLASSIFICATION	9.520643707986818E-4	DESIGN
scripts and modules	WITHOUT_CLASSIFICATION	0.999625031256026	WITHOUT_CLASSIFICATION	3.7496874397400197E-4	DESIGN
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9989111324347136	WITHOUT_CLASSIFICATION	0.0010888675652863957	DESIGN
methods and closures	WITHOUT_CLASSIFICATION	0.9990776248415056	WITHOUT_CLASSIFICATION	9.223751584944062E-4	DESIGN
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999457566502934	WITHOUT_CLASSIFICATION	5.424334970666812E-5	DESIGN
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9697288643712121	WITHOUT_CLASSIFICATION	0.030271135628788	DESIGN
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999646972020229	WITHOUT_CLASSIFICATION	3.530279797714627E-5	DESIGN
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999607655588243	WITHOUT_CLASSIFICATION	3.923444117572162E-5	DESIGN
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999667916226758	WITHOUT_CLASSIFICATION	3.3208377324333146E-5	DESIGN
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9863216983008558	WITHOUT_CLASSIFICATION	0.013678301699144146	DESIGN
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.999962618463589	WITHOUT_CLASSIFICATION	3.7381536411036805E-5	DESIGN
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9997167228413656	WITHOUT_CLASSIFICATION	2.832771586343767E-4	DESIGN
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9988318363253871	WITHOUT_CLASSIFICATION	0.0011681636746129515	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9615634965508313	WITHOUT_CLASSIFICATION	0.038436503449168706	DESIGN
Readline	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999291045862931	WITHOUT_CLASSIFICATION	7.089541370681364E-5	DESIGN
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9952825231261849	WITHOUT_CLASSIFICATION	0.004717476873815088	DESIGN
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9774717688007748	WITHOUT_CLASSIFICATION	0.02252823119922522	DESIGN
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.899615457120933	DESIGN	0.10038454287906695	WITHOUT_CLASSIFICATION
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9783002281191948	WITHOUT_CLASSIFICATION	0.021699771880805213	DESIGN
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9998498517880409	WITHOUT_CLASSIFICATION	1.5014821195916337E-4	DESIGN
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9972383184234355	WITHOUT_CLASSIFICATION	0.002761681576564519	DESIGN
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9975491094340336	WITHOUT_CLASSIFICATION	0.00245089056596639	DESIGN
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9668496306685447	WITHOUT_CLASSIFICATION	0.03315036933145541	DESIGN
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9991118210965874	WITHOUT_CLASSIFICATION	8.881789034126971E-4	DESIGN
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9997479332133132	WITHOUT_CLASSIFICATION	2.520667866867623E-4	DESIGN
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9930020304802532	WITHOUT_CLASSIFICATION	0.006997969519746924	DESIGN
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998275362733015	WITHOUT_CLASSIFICATION	1.7246372669844548E-4	DESIGN
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9978965372799141	WITHOUT_CLASSIFICATION	0.002103462720085869	DESIGN
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9997811946217754	WITHOUT_CLASSIFICATION	2.188053782244765E-4	DESIGN
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.5734253364140981	WITHOUT_CLASSIFICATION	0.42657466358590196	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9719754181412283	WITHOUT_CLASSIFICATION	0.028024581858771706	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9719754181412283	WITHOUT_CLASSIFICATION	0.028024581858771706	DESIGN
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998186136068623	WITHOUT_CLASSIFICATION	1.8138639313759283E-4	DESIGN
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9997216881144494	WITHOUT_CLASSIFICATION	2.783118855506374E-4	DESIGN
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9998314636941092	WITHOUT_CLASSIFICATION	1.6853630589074242E-4	DESIGN
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999308420801838	WITHOUT_CLASSIFICATION	6.915791981624363E-5	DESIGN
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9999195535428662	WITHOUT_CLASSIFICATION	8.044645713370244E-5	DESIGN
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.6494489233539367	WITHOUT_CLASSIFICATION	0.35055107664606344	DESIGN
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9973257476918019	WITHOUT_CLASSIFICATION	0.00267425230819813	DESIGN
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9983178547878834	WITHOUT_CLASSIFICATION	0.0016821452121166835	DESIGN
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.995104251510072	WITHOUT_CLASSIFICATION	0.0048957484899281	DESIGN
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9993942011176565	WITHOUT_CLASSIFICATION	6.057988823434569E-4	DESIGN
class or module	WITHOUT_CLASSIFICATION	0.9970519900166122	WITHOUT_CLASSIFICATION	0.0029480099833878214	DESIGN
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9996019106328221	WITHOUT_CLASSIFICATION	3.980893671778135E-4	DESIGN
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9992186809465189	WITHOUT_CLASSIFICATION	7.813190534810812E-4	DESIGN
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9997869797260787	WITHOUT_CLASSIFICATION	2.1302027392132764E-4	DESIGN
IN is the same!	WITHOUT_CLASSIFICATION	0.998805387257679	WITHOUT_CLASSIFICATION	0.0011946127423210116	DESIGN
IN changed!	WITHOUT_CLASSIFICATION	0.9985343741453032	WITHOUT_CLASSIFICATION	0.0014656258546968375	DESIGN
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9993784029899739	WITHOUT_CLASSIFICATION	6.215970100260578E-4	DESIGN
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9993466322282528	WITHOUT_CLASSIFICATION	6.533677717472595E-4	DESIGN
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9848147982078395	WITHOUT_CLASSIFICATION	0.015185201792160643	DESIGN
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.9996446461632302	WITHOUT_CLASSIFICATION	3.5535383676982106E-4	DESIGN
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.5669214582152858	WITHOUT_CLASSIFICATION	0.4330785417847142	DESIGN
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.998051446258737	WITHOUT_CLASSIFICATION	0.0019485537412629646	DESIGN
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.9983331072015459	DESIGN	0.0016668927984541118	WITHOUT_CLASSIFICATION
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.9988883118419641	WITHOUT_CLASSIFICATION	0.0011116881580358808	DESIGN
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.9983812403069519	WITHOUT_CLASSIFICATION	0.0016187596930480747	DESIGN
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.985079428862244	WITHOUT_CLASSIFICATION	0.014920571137755962	DESIGN
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9963756553245086	WITHOUT_CLASSIFICATION	0.0036243446754915297	DESIGN
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9995460455685498	WITHOUT_CLASSIFICATION	4.539544314501969E-4	DESIGN
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9893942325267135	WITHOUT_CLASSIFICATION	0.010605767473286518	DESIGN
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9997955018462849	WITHOUT_CLASSIFICATION	2.0449815371518813E-4	DESIGN
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9990591200628068	WITHOUT_CLASSIFICATION	9.408799371931266E-4	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.978049732619267	WITHOUT_CLASSIFICATION	0.021950267380733104	DESIGN
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.999845268752374	WITHOUT_CLASSIFICATION	1.5473124762595977E-4	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.978049732619267	WITHOUT_CLASSIFICATION	0.021950267380733104	DESIGN
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.998838828727773	WITHOUT_CLASSIFICATION	0.0011611712722269987	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998195591684441	WITHOUT_CLASSIFICATION	1.804408315558335E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998195591684441	WITHOUT_CLASSIFICATION	1.804408315558335E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998195591684441	WITHOUT_CLASSIFICATION	1.804408315558335E-4	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999995372271187	WITHOUT_CLASSIFICATION	4.627728813052677E-6	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999995372271187	WITHOUT_CLASSIFICATION	4.627728813052677E-6	DESIGN
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9999907878376125	WITHOUT_CLASSIFICATION	9.212162387417277E-6	DESIGN
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9995931831088063	WITHOUT_CLASSIFICATION	4.0681689119364774E-4	DESIGN
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999057033505158	WITHOUT_CLASSIFICATION	9.429664948426007E-5	DESIGN
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.5648684666464936	DESIGN	0.4351315333535064	WITHOUT_CLASSIFICATION
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9997478087242928	WITHOUT_CLASSIFICATION	2.521912757071805E-4	DESIGN
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9998685193727128	WITHOUT_CLASSIFICATION	1.3148062728712077E-4	DESIGN
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9995749241266728	WITHOUT_CLASSIFICATION	4.2507587332722105E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.9989977518300338	WITHOUT_CLASSIFICATION	0.0010022481699661376	DESIGN
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9999520473594717	WITHOUT_CLASSIFICATION	4.795264052837589E-5	DESIGN
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9998867502912452	WITHOUT_CLASSIFICATION	1.1324970875487796E-4	DESIGN
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9987707610984646	WITHOUT_CLASSIFICATION	0.001229238901535448	DESIGN
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9996289416629521	WITHOUT_CLASSIFICATION	3.7105833704790446E-4	DESIGN
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.999170290114468	WITHOUT_CLASSIFICATION	8.29709885532005E-4	DESIGN
root-level logic	WITHOUT_CLASSIFICATION	0.9990400582680332	WITHOUT_CLASSIFICATION	9.599417319667971E-4	DESIGN
root-level methods	WITHOUT_CLASSIFICATION	0.9991576027376264	WITHOUT_CLASSIFICATION	8.423972623734969E-4	DESIGN
root-level classes	WITHOUT_CLASSIFICATION	0.9996776737578681	WITHOUT_CLASSIFICATION	3.2232624213195495E-4	DESIGN
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999801789672359	WITHOUT_CLASSIFICATION	1.982103276408855E-5	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9983239807757046	WITHOUT_CLASSIFICATION	0.0016760192242954413	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9983239807757046	WITHOUT_CLASSIFICATION	0.0016760192242954413	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.998231010289783	WITHOUT_CLASSIFICATION	0.0017689897102170084	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.998231010289783	WITHOUT_CLASSIFICATION	0.0017689897102170084	DESIGN
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9999131321135614	WITHOUT_CLASSIFICATION	8.686788643859551E-5	DESIGN
Object[] args	WITHOUT_CLASSIFICATION	0.9993235859946187	WITHOUT_CLASSIFICATION	6.764140053812756E-4	DESIGN
load handle	WITHOUT_CLASSIFICATION	0.9935406933179834	WITHOUT_CLASSIFICATION	0.006459306682016556	DESIGN
args array	WITHOUT_CLASSIFICATION	0.999577882781943	WITHOUT_CLASSIFICATION	4.2211721805691254E-4	DESIGN
i'th argument	WITHOUT_CLASSIFICATION	0.9999565614625999	WITHOUT_CLASSIFICATION	4.34385374000507E-5	DESIGN
invoke specific arity version	WITHOUT_CLASSIFICATION	0.9997097693417767	WITHOUT_CLASSIFICATION	2.9023065822338074E-4	DESIGN
Object arg0	WITHOUT_CLASSIFICATION	0.999530015696688	WITHOUT_CLASSIFICATION	4.6998430331208384E-4	DESIGN
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9993602196868066	WITHOUT_CLASSIFICATION	6.397803131934385E-4	DESIGN
No editing before startPos	WITHOUT_CLASSIFICATION	0.9999610739208613	WITHOUT_CLASSIFICATION	3.8926079138630795E-5	DESIGN
no silly ticks!	WITHOUT_CLASSIFICATION	0.9976710756451777	WITHOUT_CLASSIFICATION	0.00232892435482243	DESIGN
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9994653895941774	WITHOUT_CLASSIFICATION	5.346104058226603E-4	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9995509441217104	WITHOUT_CLASSIFICATION	4.4905587828955395E-4	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9997837147895322	WITHOUT_CLASSIFICATION	2.1628521046788084E-4	DESIGN
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9993946718066493	WITHOUT_CLASSIFICATION	6.053281933506954E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.9989977518300338	WITHOUT_CLASSIFICATION	0.0010022481699661376	DESIGN
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9990384899131804	WITHOUT_CLASSIFICATION	9.615100868195428E-4	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9999293646691777	WITHOUT_CLASSIFICATION	7.063533082219158E-5	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9999293646691777	WITHOUT_CLASSIFICATION	7.063533082219158E-5	DESIGN
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9991323862980834	WITHOUT_CLASSIFICATION	8.676137019164628E-4	DESIGN
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9930408228348291	WITHOUT_CLASSIFICATION	0.0069591771651708444	DESIGN
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9996781144403951	WITHOUT_CLASSIFICATION	3.218855596048688E-4	DESIGN
restore position	WITHOUT_CLASSIFICATION	0.9993619328772956	WITHOUT_CLASSIFICATION	6.380671227044911E-4	DESIGN
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9993722198243697	WITHOUT_CLASSIFICATION	6.27780175630189E-4	DESIGN
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999694030035489	WITHOUT_CLASSIFICATION	3.059699645117025E-5	DESIGN
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999789142389421	WITHOUT_CLASSIFICATION	2.108576105793952E-5	DESIGN
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9938211626110902	WITHOUT_CLASSIFICATION	0.006178837388909813	DESIGN
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9997965071507237	WITHOUT_CLASSIFICATION	2.034928492764013E-4	DESIGN
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.998673938208959	WITHOUT_CLASSIFICATION	0.0013260617910409891	DESIGN
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9998735075733601	WITHOUT_CLASSIFICATION	1.2649242663988216E-4	DESIGN
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9992688635323608	WITHOUT_CLASSIFICATION	7.311364676392847E-4	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8746419779199968	WITHOUT_CLASSIFICATION	0.12535802208000318	DESIGN
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9990846469368463	WITHOUT_CLASSIFICATION	9.153530631537551E-4	DESIGN
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998593035130514	WITHOUT_CLASSIFICATION	1.4069648694852615E-4	DESIGN
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.5215750064159629	WITHOUT_CLASSIFICATION	0.4784249935840372	DESIGN
Timeout module methods	WITHOUT_CLASSIFICATION	0.9956769457082588	WITHOUT_CLASSIFICATION	0.004323054291741182	DESIGN
Toplevel defines	WITHOUT_CLASSIFICATION	0.9993740537147919	WITHOUT_CLASSIFICATION	6.259462852081282E-4	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.999753720086083	WITHOUT_CLASSIFICATION	2.462799139170155E-4	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.998953033523383	WITHOUT_CLASSIFICATION	0.0010469664766169973	DESIGN
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9997558102699625	WITHOUT_CLASSIFICATION	2.441897300374255E-4	DESIGN
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9955819351530654	WITHOUT_CLASSIFICATION	0.0044180648469347	DESIGN
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9992332042982078	WITHOUT_CLASSIFICATION	7.667957017921798E-4	DESIGN
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9732535040731863	WITHOUT_CLASSIFICATION	0.026746495926813704	DESIGN
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.9999733854921468	WITHOUT_CLASSIFICATION	2.6614507853189227E-5	DESIGN
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9652738350548775	WITHOUT_CLASSIFICATION	0.03472616494512252	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9884998066956985	WITHOUT_CLASSIFICATION	0.011500193304301536	DESIGN
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9807693244616524	WITHOUT_CLASSIFICATION	0.019230675538347623	DESIGN
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9994915190305745	WITHOUT_CLASSIFICATION	5.084809694254783E-4	DESIGN
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9979492244693312	WITHOUT_CLASSIFICATION	0.0020507755306688152	DESIGN
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999963262488859	WITHOUT_CLASSIFICATION	3.6737511140698033E-6	DESIGN
Windows is LLP64	WITHOUT_CLASSIFICATION	0.9697870015468109	WITHOUT_CLASSIFICATION	0.030212998453189255	DESIGN
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9971004099810791	WITHOUT_CLASSIFICATION	0.0028995900189208827	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999164570842403	WITHOUT_CLASSIFICATION	8.354291575962776E-5	DESIGN
$blah	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9884998066956985	WITHOUT_CLASSIFICATION	0.011500193304301536	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9995112556219402	WITHOUT_CLASSIFICATION	4.88744378059867E-4	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999164570842403	WITHOUT_CLASSIFICATION	8.354291575962776E-5	DESIGN
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9984765058761321	WITHOUT_CLASSIFICATION	0.001523494123867819	DESIGN
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9996262880323924	WITHOUT_CLASSIFICATION	3.7371196760757874E-4	DESIGN
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.999817857884728	WITHOUT_CLASSIFICATION	1.8214211527189323E-4	DESIGN
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9995094929509784	WITHOUT_CLASSIFICATION	4.905070490216587E-4	DESIGN
case FLOAT:	WITHOUT_CLASSIFICATION	0.9999131321135614	WITHOUT_CLASSIFICATION	8.686788643859551E-5	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9990130457315409	WITHOUT_CLASSIFICATION	9.869542684590668E-4	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9990130457315409	WITHOUT_CLASSIFICATION	9.869542684590668E-4	DESIGN
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998955826709566	WITHOUT_CLASSIFICATION	1.044173290433655E-4	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9976345908192186	WITHOUT_CLASSIFICATION	0.002365409180781431	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999370235461432	WITHOUT_CLASSIFICATION	6.297645385672049E-5	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999370235461432	WITHOUT_CLASSIFICATION	6.297645385672049E-5	DESIGN
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999960131138433	WITHOUT_CLASSIFICATION	3.986886156609542E-6	DESIGN
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9994964586542432	WITHOUT_CLASSIFICATION	5.035413457567346E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9998916584933287	WITHOUT_CLASSIFICATION	1.0834150667129495E-4	DESIGN
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9996324763322019	WITHOUT_CLASSIFICATION	3.675236677981123E-4	DESIGN
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9572475991775431	WITHOUT_CLASSIFICATION	0.04275240082245695	DESIGN
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9406011848560301	WITHOUT_CLASSIFICATION	0.059398815143970066	DESIGN
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9219306480082311	WITHOUT_CLASSIFICATION	0.07806935199176884	DESIGN
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999747512762651	WITHOUT_CLASSIFICATION	2.5248723734848808E-5	DESIGN
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9997882888472723	WITHOUT_CLASSIFICATION	2.1171115272764084E-4	DESIGN
host and port given	WITHOUT_CLASSIFICATION	0.9997336048002166	WITHOUT_CLASSIFICATION	2.663951997833636E-4	DESIGN
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9995966232491349	WITHOUT_CLASSIFICATION	4.033767508651428E-4	DESIGN
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9993465302210439	WITHOUT_CLASSIFICATION	6.534697789560722E-4	DESIGN
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9998760875567008	WITHOUT_CLASSIFICATION	1.2391244329929596E-4	DESIGN
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9900006525942312	WITHOUT_CLASSIFICATION	0.00999934740576879	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9949888960210244	WITHOUT_CLASSIFICATION	0.005011103978975702	DESIGN
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.999511741427162	WITHOUT_CLASSIFICATION	4.882585728380179E-4	DESIGN
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9996955785760069	WITHOUT_CLASSIFICATION	3.0442142399303695E-4	DESIGN
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9995428592889103	WITHOUT_CLASSIFICATION	4.571407110897058E-4	DESIGN
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9992876037755841	WITHOUT_CLASSIFICATION	7.123962244158871E-4	DESIGN
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9998075092418405	WITHOUT_CLASSIFICATION	1.924907581594301E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
255.255.255.255	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
0.0.0.0	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9987178778942482	WITHOUT_CLASSIFICATION	0.0012821221057518009	DESIGN
line 323	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9968971270745568	WITHOUT_CLASSIFICATION	0.0031028729254431223	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9968971270745568	WITHOUT_CLASSIFICATION	0.0031028729254431223	DESIGN
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999380214855321	WITHOUT_CLASSIFICATION	6.197851446779104E-5	DESIGN
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.999032739444078	WITHOUT_CLASSIFICATION	9.672605559219841E-4	DESIGN
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9995524332299818	WITHOUT_CLASSIFICATION	4.4756677001817703E-4	DESIGN
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9990520964320093	WITHOUT_CLASSIFICATION	9.479035679906634E-4	DESIGN
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999630309865792	WITHOUT_CLASSIFICATION	3.696901342076001E-5	DESIGN
RubySocket	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9993972049354103	WITHOUT_CLASSIFICATION	6.027950645898305E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9995838297129447	WITHOUT_CLASSIFICATION	4.161702870553279E-4	DESIGN
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9992840100716219	WITHOUT_CLASSIFICATION	7.159899283780535E-4	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999701958847076	WITHOUT_CLASSIFICATION	2.980411529246483E-5	DESIGN
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999321758379276	WITHOUT_CLASSIFICATION	6.782416207241138E-5	DESIGN
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9993456375457197	WITHOUT_CLASSIFICATION	6.543624542801888E-4	DESIGN
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9994625166259512	WITHOUT_CLASSIFICATION	5.374833740488185E-4	DESIGN
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.998642943434902	WITHOUT_CLASSIFICATION	0.0013570565650979406	DESIGN
Call the thread's code	WITHOUT_CLASSIFICATION	0.9965142459359103	WITHOUT_CLASSIFICATION	0.003485754064089766	DESIGN
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999419336007942	WITHOUT_CLASSIFICATION	5.806639920583973E-5	DESIGN
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999800814043691	WITHOUT_CLASSIFICATION	1.991859563091727E-5	DESIGN
be dead	WITHOUT_CLASSIFICATION	0.968006852635061	WITHOUT_CLASSIFICATION	0.03199314736493894	DESIGN
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9982920480614055	WITHOUT_CLASSIFICATION	0.0017079519385945399	DESIGN
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999780280592203	WITHOUT_CLASSIFICATION	2.197194077972609E-5	DESIGN
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9993987416889315	WITHOUT_CLASSIFICATION	6.012583110685255E-4	DESIGN
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9998411794046903	WITHOUT_CLASSIFICATION	1.588205953096453E-4	DESIGN
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999622626493451	WITHOUT_CLASSIFICATION	3.7737350654966484E-5	DESIGN
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999505561762205	WITHOUT_CLASSIFICATION	4.944382377958412E-5	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.976483164541932	WITHOUT_CLASSIFICATION	0.02351683545806814	DESIGN
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9997799273803987	WITHOUT_CLASSIFICATION	2.200726196014761E-4	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995723408260707	WITHOUT_CLASSIFICATION	4.276591739292154E-4	DESIGN
main body	WITHOUT_CLASSIFICATION	0.9998164738110776	WITHOUT_CLASSIFICATION	1.8352618892239893E-4	DESIGN
return jump handling	WITHOUT_CLASSIFICATION	0.9996572849351423	WITHOUT_CLASSIFICATION	3.4271506485766264E-4	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9989194420937247	WITHOUT_CLASSIFICATION	0.0010805579062752244	DESIGN
return result if we're still good	WITHOUT_CLASSIFICATION	0.9998748752098662	WITHOUT_CLASSIFICATION	1.251247901338881E-4	DESIGN
redo jump handling	WITHOUT_CLASSIFICATION	0.9993177032375065	WITHOUT_CLASSIFICATION	6.822967624934899E-4	DESIGN
clear the redo	WITHOUT_CLASSIFICATION	0.9995186311270967	WITHOUT_CLASSIFICATION	4.8136887290335656E-4	DESIGN
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9988437317492257	WITHOUT_CLASSIFICATION	0.001156268250774282	DESIGN
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9956699822857429	WITHOUT_CLASSIFICATION	0.004330017714257068	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9991977024681958	WITHOUT_CLASSIFICATION	8.022975318042098E-4	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9979569254941124	WITHOUT_CLASSIFICATION	0.002043074505887649	DESIGN
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999867507621532	WITHOUT_CLASSIFICATION	1.3249237846982742E-5	DESIGN
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9996020366083773	WITHOUT_CLASSIFICATION	3.9796339162268267E-4	DESIGN
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9985496843705581	WITHOUT_CLASSIFICATION	0.0014503156294419057	DESIGN
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9988178109565806	WITHOUT_CLASSIFICATION	0.0011821890434193555	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9457391595414198	WITHOUT_CLASSIFICATION	0.054260840458580144	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9457391595414198	WITHOUT_CLASSIFICATION	0.054260840458580144	DESIGN
normal all-rest method	WITHOUT_CLASSIFICATION	0.9995189987559625	WITHOUT_CLASSIFICATION	4.8100124403749225E-4	DESIGN
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9998961953645403	WITHOUT_CLASSIFICATION	1.0380463545964993E-4	DESIGN
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9953219683308382	WITHOUT_CLASSIFICATION	0.004678031669161798	DESIGN
return	WITHOUT_CLASSIFICATION	0.9994620116137592	WITHOUT_CLASSIFICATION	5.379883862407951E-4	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998606522295069	WITHOUT_CLASSIFICATION	1.393477704931289E-4	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9992247344283125	WITHOUT_CLASSIFICATION	7.752655716874614E-4	DESIGN
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997108392277655	WITHOUT_CLASSIFICATION	2.891607722344407E-4	DESIGN
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9956072888188927	WITHOUT_CLASSIFICATION	0.004392711181107268	DESIGN
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9995567160939421	WITHOUT_CLASSIFICATION	4.432839060578217E-4	DESIGN
tc	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
self name	WITHOUT_CLASSIFICATION	0.9965409837923741	WITHOUT_CLASSIFICATION	0.003459016207625938	DESIGN
no args	WITHOUT_CLASSIFICATION	0.9992941703014249	WITHOUT_CLASSIFICATION	7.058296985752374E-4	DESIGN
variable args with block	WITHOUT_CLASSIFICATION	0.9997270793625073	WITHOUT_CLASSIFICATION	2.7292063749268896E-4	DESIGN
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9997517747617399	WITHOUT_CLASSIFICATION	2.482252382600557E-4	DESIGN
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9996863633545698	WITHOUT_CLASSIFICATION	3.136366454301672E-4	DESIGN
one arg with block	WITHOUT_CLASSIFICATION	0.9998994866085702	WITHOUT_CLASSIFICATION	1.0051339142971537E-4	DESIGN
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9988577940002074	WITHOUT_CLASSIFICATION	0.0011422059997925813	DESIGN
two args with block	WITHOUT_CLASSIFICATION	0.9996089439658601	WITHOUT_CLASSIFICATION	3.9105603413999837E-4	DESIGN
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9963497346698923	WITHOUT_CLASSIFICATION	0.0036502653301076606	DESIGN
three args with block	WITHOUT_CLASSIFICATION	0.9997345257879072	WITHOUT_CLASSIFICATION	2.654742120928124E-4	DESIGN
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9987296236698336	WITHOUT_CLASSIFICATION	0.0012703763301663302	DESIGN
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9996494400378653	WITHOUT_CLASSIFICATION	3.5055996213470363E-4	DESIGN
all other arg cases with block	WITHOUT_CLASSIFICATION	0.9992034646335102	WITHOUT_CLASSIFICATION	7.965353664898437E-4	DESIGN
all other arg cases without block	WITHOUT_CLASSIFICATION	0.9995735645450695	WITHOUT_CLASSIFICATION	4.264354549304453E-4	DESIGN
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9996369949448938	WITHOUT_CLASSIFICATION	3.6300505510619035E-4	DESIGN
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9988379168004543	WITHOUT_CLASSIFICATION	0.0011620831995456911	DESIGN
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997257113935409	WITHOUT_CLASSIFICATION	2.7428860645900495E-4	DESIGN
load target for invocations	WITHOUT_CLASSIFICATION	0.999683833571508	WITHOUT_CLASSIFICATION	3.161664284919776E-4	DESIGN
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9997205544053467	WITHOUT_CLASSIFICATION	2.794455946532917E-4	DESIGN
static invocation	WITHOUT_CLASSIFICATION	0.999124714620245	WITHOUT_CLASSIFICATION	8.75285379754971E-4	DESIGN
virtual invocation	WITHOUT_CLASSIFICATION	0.999839391281516	WITHOUT_CLASSIFICATION	1.606087184840354E-4	DESIGN
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9970563917799892	WITHOUT_CLASSIFICATION	0.0029436082200108966	DESIGN
normal finally and exit	WITHOUT_CLASSIFICATION	0.9997193677918101	WITHOUT_CLASSIFICATION	2.806322081897986E-4	DESIGN
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9835769184206326	WITHOUT_CLASSIFICATION	0.016423081579367452	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9979569254941124	WITHOUT_CLASSIFICATION	0.002043074505887649	DESIGN
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9988938198940788	WITHOUT_CLASSIFICATION	0.0011061801059212054	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9844565748226451	WITHOUT_CLASSIFICATION	0.015543425177354925	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9844565748226451	WITHOUT_CLASSIFICATION	0.015543425177354925	DESIGN
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9963695484901013	WITHOUT_CLASSIFICATION	0.0036304515098987177	DESIGN
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.8514487966053832	WITHOUT_CLASSIFICATION	0.14855120339461678	DESIGN
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
never reached	WITHOUT_CLASSIFICATION	0.9997675213558409	WITHOUT_CLASSIFICATION	2.3247864415903505E-4	DESIGN
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9936572445908161	WITHOUT_CLASSIFICATION	0.006342755409183964	DESIGN
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9988709180588542	WITHOUT_CLASSIFICATION	0.0011290819411458582	DESIGN
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9960003468058136	WITHOUT_CLASSIFICATION	0.003999653194186346	DESIGN
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9869722141642518	WITHOUT_CLASSIFICATION	0.013027785835748032	DESIGN
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9991891137306873	WITHOUT_CLASSIFICATION	8.1088626931277E-4	DESIGN
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9971251929860842	WITHOUT_CLASSIFICATION	0.0028748070139157683	DESIGN
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9906121638459375	WITHOUT_CLASSIFICATION	0.009387836154062404	DESIGN
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9954380370547159	WITHOUT_CLASSIFICATION	0.004561962945284071	DESIGN
promise to implement N	WITHOUT_CLASSIFICATION	0.974144773807912	WITHOUT_CLASSIFICATION	0.02585522619208797	DESIGN
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9434042927456979	WITHOUT_CLASSIFICATION	0.05659570725430208	DESIGN
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.9512455245407896	WITHOUT_CLASSIFICATION	0.04875447545921036	DESIGN
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9479711439271098	WITHOUT_CLASSIFICATION	0.05202885607289014	DESIGN
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9872224123099449	WITHOUT_CLASSIFICATION	0.012777587690055232	DESIGN
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9977132728673752	WITHOUT_CLASSIFICATION	0.0022867271326247993	DESIGN
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9919233094297776	WITHOUT_CLASSIFICATION	0.008076690570222362	DESIGN
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9739332211777791	WITHOUT_CLASSIFICATION	0.026066778822220783	DESIGN
promise to implement three	WITHOUT_CLASSIFICATION	0.981300794787708	WITHOUT_CLASSIFICATION	0.018699205212292062	DESIGN
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9978763518370163	WITHOUT_CLASSIFICATION	0.0021236481629837156	DESIGN
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9944033932705566	WITHOUT_CLASSIFICATION	0.005596606729443445	DESIGN
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9998212576990558	WITHOUT_CLASSIFICATION	1.7874230094429026E-4	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9997617126116524	WITHOUT_CLASSIFICATION	2.3828738834757687E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9986333726913273	WITHOUT_CLASSIFICATION	0.0013666273086725793	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9972592972606117	WITHOUT_CLASSIFICATION	0.002740702739388406	DESIGN
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999463679024018	WITHOUT_CLASSIFICATION	5.363209759823813E-5	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.999652658791549	WITHOUT_CLASSIFICATION	3.4734120845103696E-4	DESIGN
start setup method	WITHOUT_CLASSIFICATION	0.9996826158352942	WITHOUT_CLASSIFICATION	3.173841647058174E-4	DESIGN
set RubyClass	WITHOUT_CLASSIFICATION	0.9982751040711679	WITHOUT_CLASSIFICATION	0.0017248959288319787	DESIGN
set Ruby	WITHOUT_CLASSIFICATION	0.9971954183091216	WITHOUT_CLASSIFICATION	0.00280458169087838	DESIGN
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999882752775563	WITHOUT_CLASSIFICATION	1.172472244364974E-5	DESIGN
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9990983756592646	WITHOUT_CLASSIFICATION	9.016243407353867E-4	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999155548766842	WITHOUT_CLASSIFICATION	8.44451233159631E-5	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.996715370871822	WITHOUT_CLASSIFICATION	0.0032846291281780067	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9997617126116524	WITHOUT_CLASSIFICATION	2.3828738834757687E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9986333726913273	WITHOUT_CLASSIFICATION	0.0013666273086725793	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9972592972606117	WITHOUT_CLASSIFICATION	0.002740702739388406	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.999652658791549	WITHOUT_CLASSIFICATION	3.4734120845103696E-4	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.998256427356123	WITHOUT_CLASSIFICATION	0.0017435726438770718	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9895613151517174	WITHOUT_CLASSIFICATION	0.010438684848282639	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9992515545617248	WITHOUT_CLASSIFICATION	7.484454382751403E-4	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.99960548214612	WITHOUT_CLASSIFICATION	3.945178538800384E-4	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.9996299386721453	WITHOUT_CLASSIFICATION	3.7006132785465204E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999750095398143	WITHOUT_CLASSIFICATION	2.499046018562631E-5	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9999279140346088	WITHOUT_CLASSIFICATION	7.20859653911601E-5	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9994827338535749	WITHOUT_CLASSIFICATION	5.172661464252057E-4	DESIGN
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9915143615736078	WITHOUT_CLASSIFICATION	0.008485638426392172	DESIGN
store the wrapper	WITHOUT_CLASSIFICATION	0.9999854199102698	WITHOUT_CLASSIFICATION	1.4580089730223425E-5	DESIGN
prepare temp locals	WITHOUT_CLASSIFICATION	0.9997637255262015	WITHOUT_CLASSIFICATION	2.3627447379845148E-4	DESIGN
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9998954285241567	WITHOUT_CLASSIFICATION	1.0457147584330156E-4	DESIGN
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9982979393693902	WITHOUT_CLASSIFICATION	0.0017020606306098916	DESIGN
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998068316486101	WITHOUT_CLASSIFICATION	1.931683513899065E-4	DESIGN
store it	WITHOUT_CLASSIFICATION	0.9998351771148098	WITHOUT_CLASSIFICATION	1.6482288519017844E-4	DESIGN
end of try block	WITHOUT_CLASSIFICATION	0.9999831148874869	WITHOUT_CLASSIFICATION	1.688511251315902E-5	DESIGN
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9990122779930555	WITHOUT_CLASSIFICATION	9.877220069444738E-4	DESIGN
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9906742723302848	WITHOUT_CLASSIFICATION	0.009325727669715143	DESIGN
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9984893297875779	WITHOUT_CLASSIFICATION	0.0015106702124221961	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.996715370871822	WITHOUT_CLASSIFICATION	0.0032846291281780067	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9895613151517174	WITHOUT_CLASSIFICATION	0.010438684848282639	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9992515545617248	WITHOUT_CLASSIFICATION	7.484454382751403E-4	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.9996299386721453	WITHOUT_CLASSIFICATION	3.7006132785465204E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999750095398143	WITHOUT_CLASSIFICATION	2.499046018562631E-5	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9999279140346088	WITHOUT_CLASSIFICATION	7.20859653911601E-5	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9994827338535749	WITHOUT_CLASSIFICATION	5.172661464252057E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9983259701189665	WITHOUT_CLASSIFICATION	0.0016740298810334795	DESIGN
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9989676815950678	WITHOUT_CLASSIFICATION	0.0010323184049322598	DESIGN
perform the dispatch	WITHOUT_CLASSIFICATION	0.9997709883080997	WITHOUT_CLASSIFICATION	2.2901169190020553E-4	DESIGN
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9997131793051869	WITHOUT_CLASSIFICATION	2.868206948131364E-4	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9980835243699788	WITHOUT_CLASSIFICATION	0.0019164756300211834	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9980835243699788	WITHOUT_CLASSIFICATION	0.0019164756300211834	DESIGN
setup the class	WITHOUT_CLASSIFICATION	0.9992534528620862	WITHOUT_CLASSIFICATION	7.465471379138059E-4	DESIGN
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9948357753410325	WITHOUT_CLASSIFICATION	0.005164224658967449	DESIGN
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9980456715143218	WITHOUT_CLASSIFICATION	0.0019543284856782207	DESIGN
probably a primitive	WITHOUT_CLASSIFICATION	0.9827589206515316	WITHOUT_CLASSIFICATION	0.017241079348468403	DESIGN
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9998188937181655	WITHOUT_CLASSIFICATION	1.81106281834611E-4	DESIGN
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9989451747034663	WITHOUT_CLASSIFICATION	0.0010548252965335945	DESIGN
set the full name	WITHOUT_CLASSIFICATION	0.9949017906389648	WITHOUT_CLASSIFICATION	0.005098209361035224	DESIGN
include all interfaces	WITHOUT_CLASSIFICATION	0.9989898373381764	WITHOUT_CLASSIFICATION	0.0010101626618235547	DESIGN
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9998844288785299	WITHOUT_CLASSIFICATION	1.1557112146999702E-4	DESIGN
add array construction methods	WITHOUT_CLASSIFICATION	0.9994429718297035	WITHOUT_CLASSIFICATION	5.570281702965426E-4	DESIGN
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9995543868770749	WITHOUT_CLASSIFICATION	4.456131229250048E-4	DESIGN
add all instance and static methods	WITHOUT_CLASSIFICATION	0.975296495856156	WITHOUT_CLASSIFICATION	0.024703504143844094	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997694015105386	WITHOUT_CLASSIFICATION	2.3059848946146953E-4	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9968715288256271	WITHOUT_CLASSIFICATION	0.0031284711743728546	DESIGN
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9991786444888714	WITHOUT_CLASSIFICATION	8.213555111285648E-4	DESIGN
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9988010316785204	WITHOUT_CLASSIFICATION	0.0011989683214794992	DESIGN
add all static variables	WITHOUT_CLASSIFICATION	0.9967057129230917	WITHOUT_CLASSIFICATION	0.0032942870769083013	DESIGN
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999800616883432	WITHOUT_CLASSIFICATION	1.99383116567918E-5	DESIGN
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999898091555075	WITHOUT_CLASSIFICATION	1.0190844492477664E-5	DESIGN
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.9999903151882644	WITHOUT_CLASSIFICATION	9.684811735501613E-6	DESIGN
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.9170314453932419	DESIGN	0.08296855460675809	WITHOUT_CLASSIFICATION
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9995559089718627	WITHOUT_CLASSIFICATION	4.4409102813721427E-4	DESIGN
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999555157854261	WITHOUT_CLASSIFICATION	4.448421457385875E-5	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6119152993796069	WITHOUT_CLASSIFICATION	0.3880847006203932	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9970790319058701	WITHOUT_CLASSIFICATION	0.0029209680941299347	DESIGN
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9998397776229235	WITHOUT_CLASSIFICATION	1.60222377076416E-4	DESIGN
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9996513985272953	WITHOUT_CLASSIFICATION	3.4860147270466277E-4	DESIGN
line 326	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9970790319058701	WITHOUT_CLASSIFICATION	0.0029209680941299347	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9968715288256271	WITHOUT_CLASSIFICATION	0.0031284711743728546	DESIGN
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9997522305209672	WITHOUT_CLASSIFICATION	2.47769479032805E-4	DESIGN
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9997625477380462	WITHOUT_CLASSIFICATION	2.37452261953771E-4	DESIGN
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9974716835134073	WITHOUT_CLASSIFICATION	0.002528316486592761	DESIGN
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9902655374916072	WITHOUT_CLASSIFICATION	0.009734462508392917	DESIGN
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9988074822945423	WITHOUT_CLASSIFICATION	0.0011925177054576935	DESIGN
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9993200315773734	WITHOUT_CLASSIFICATION	6.799684226267338E-4	DESIGN
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9969030397736958	WITHOUT_CLASSIFICATION	0.0030969602263041887	DESIGN
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9987691738182405	WITHOUT_CLASSIFICATION	0.0012308261817594605	DESIGN
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.902132211968291	WITHOUT_CLASSIFICATION	0.09786778803170912	DESIGN
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9776790026031776	WITHOUT_CLASSIFICATION	0.02232099739682232	DESIGN
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.990421986026	WITHOUT_CLASSIFICATION	0.009578013974000042	DESIGN
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9902521243715245	WITHOUT_CLASSIFICATION	0.009747875628475436	DESIGN
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9987313311850265	WITHOUT_CLASSIFICATION	0.0012686688149734547	DESIGN
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999993959230773	WITHOUT_CLASSIFICATION	6.040769227148256E-7	DESIGN
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9670012374173513	WITHOUT_CLASSIFICATION	0.03299876258264874	DESIGN
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9912992141007726	WITHOUT_CLASSIFICATION	0.00870078589922731	DESIGN
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9991610818976628	WITHOUT_CLASSIFICATION	8.389181023371659E-4	DESIGN
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.8479345768457298	WITHOUT_CLASSIFICATION	0.15206542315427019	DESIGN
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9989343686753893	WITHOUT_CLASSIFICATION	0.0010656313246106858	DESIGN
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9996460850150783	WITHOUT_CLASSIFICATION	3.539149849217222E-4	DESIGN
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9628018112185384	WITHOUT_CLASSIFICATION	0.03719818878146167	DESIGN
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.997675077134551	WITHOUT_CLASSIFICATION	0.0023249228654489743	DESIGN
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9997041472911031	WITHOUT_CLASSIFICATION	2.9585270889695447E-4	DESIGN
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.7109655297653077	WITHOUT_CLASSIFICATION	0.2890344702346924	DESIGN
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9994259476565193	WITHOUT_CLASSIFICATION	5.740523434807363E-4	DESIGN
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9982108644639105	WITHOUT_CLASSIFICATION	0.001789135536089536	DESIGN
array creation should use this variant	WITHOUT_CLASSIFICATION	0.83687706419083	WITHOUT_CLASSIFICATION	0.16312293580917006	DESIGN
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.98494474595625	WITHOUT_CLASSIFICATION	0.015055254043750023	DESIGN
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9997980327727181	WITHOUT_CLASSIFICATION	2.0196722728197782E-4	DESIGN
add reference to interface module	WITHOUT_CLASSIFICATION	0.9968080102214921	WITHOUT_CLASSIFICATION	0.0031919897785077805	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9986765673854824	WITHOUT_CLASSIFICATION	0.0013234326145176519	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9986765673854824	WITHOUT_CLASSIFICATION	0.0013234326145176519	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997694015105386	WITHOUT_CLASSIFICATION	2.3059848946146953E-4	DESIGN
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9998721293032491	WITHOUT_CLASSIFICATION	1.2787069675100542E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999811939639681	WITHOUT_CLASSIFICATION	1.880603603189587E-5	DESIGN
weakly reserved names	WITHOUT_CLASSIFICATION	0.9990821413733593	WITHOUT_CLASSIFICATION	9.178586266407235E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999571587560473	WITHOUT_CLASSIFICATION	4.284124395283001E-5	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999571587560473	WITHOUT_CLASSIFICATION	4.284124395283001E-5	DESIGN
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999936049731265	WITHOUT_CLASSIFICATION	6.3950268735781645E-6	DESIGN
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999672210761048	WITHOUT_CLASSIFICATION	3.2778923895172305E-5	DESIGN
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9989275078778042	WITHOUT_CLASSIFICATION	0.0010724921221957641	DESIGN
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.998459385043465	WITHOUT_CLASSIFICATION	0.0015406149565350205	DESIGN
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.835395807730134	WITHOUT_CLASSIFICATION	0.16460419226986592	DESIGN
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9165971183673123	WITHOUT_CLASSIFICATION	0.08340288163268773	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999859750410736	WITHOUT_CLASSIFICATION	1.4024958926525228E-5	DESIGN
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9993606356859667	WITHOUT_CLASSIFICATION	6.393643140332676E-4	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999107381241087	WITHOUT_CLASSIFICATION	8.926187589129508E-5	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9987136194509617	WITHOUT_CLASSIFICATION	0.0012863805490382631	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997164120234481	WITHOUT_CLASSIFICATION	2.835879765519069E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9995657846254871	WITHOUT_CLASSIFICATION	4.342153745129579E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9995735138436618	WITHOUT_CLASSIFICATION	4.2648615633822823E-4	DESIGN
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9991332343034655	WITHOUT_CLASSIFICATION	8.667656965345237E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
something?	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999593452516541	WITHOUT_CLASSIFICATION	4.0654748346008954E-5	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999593452516541	WITHOUT_CLASSIFICATION	4.0654748346008954E-5	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999425241764659	WITHOUT_CLASSIFICATION	5.747582353401032E-5	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999425241764659	WITHOUT_CLASSIFICATION	5.747582353401032E-5	DESIGN
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.999950943049973	WITHOUT_CLASSIFICATION	4.905695002695475E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9980588894048815	WITHOUT_CLASSIFICATION	0.0019411105951184743	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9728262982798049	WITHOUT_CLASSIFICATION	0.02717370172019506	DESIGN
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9963872818922053	WITHOUT_CLASSIFICATION	0.003612718107794789	DESIGN
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.998693890755553	WITHOUT_CLASSIFICATION	0.0013061092444469132	DESIGN
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9952705616155241	WITHOUT_CLASSIFICATION	0.004729438384475914	DESIGN
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9992705080992188	WITHOUT_CLASSIFICATION	7.294919007812781E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9995657846254871	WITHOUT_CLASSIFICATION	4.342153745129579E-4	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9995735138436618	WITHOUT_CLASSIFICATION	4.2648615633822823E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9977895894440729	WITHOUT_CLASSIFICATION	0.0022104105559272017	DESIGN
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9555226165126168	WITHOUT_CLASSIFICATION	0.044477383487383115	DESIGN
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999782494652498	WITHOUT_CLASSIFICATION	2.1750534750222483E-5	DESIGN
see note above re: return type	WITHOUT_CLASSIFICATION	0.9677370755573567	WITHOUT_CLASSIFICATION	0.03226292444264334	DESIGN
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.999158285050865	WITHOUT_CLASSIFICATION	8.41714949135082E-4	DESIGN
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9959214261301544	WITHOUT_CLASSIFICATION	0.004078573869845467	DESIGN
one-dimensional array	WITHOUT_CLASSIFICATION	0.999375165486338	WITHOUT_CLASSIFICATION	6.24834513662002E-4	DESIGN
n-dimensional array	WITHOUT_CLASSIFICATION	0.999680301471127	WITHOUT_CLASSIFICATION	3.1969852887295925E-4	DESIGN
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999221579057149	WITHOUT_CLASSIFICATION	7.784209428505588E-5	DESIGN
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9993993240618936	WITHOUT_CLASSIFICATION	6.006759381064423E-4	DESIGN
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9596360134713638	WITHOUT_CLASSIFICATION	0.040363986528636084	DESIGN
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9995848971748306	WITHOUT_CLASSIFICATION	4.1510282516939005E-4	DESIGN
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9997050295174403	WITHOUT_CLASSIFICATION	2.9497048255955913E-4	DESIGN
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9994436656826972	WITHOUT_CLASSIFICATION	5.563343173027966E-4	DESIGN
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9979567866485549	WITHOUT_CLASSIFICATION	0.0020432133514451368	DESIGN
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9998475066081888	WITHOUT_CLASSIFICATION	1.5249339181125796E-4	DESIGN
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9997447491411672	WITHOUT_CLASSIFICATION	2.5525085883291613E-4	DESIGN
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9994077011811477	WITHOUT_CLASSIFICATION	5.922988188521968E-4	DESIGN
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9997826846452917	WITHOUT_CLASSIFICATION	2.173153547083497E-4	DESIGN
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999371490964165	WITHOUT_CLASSIFICATION	6.285090358355812E-5	DESIGN
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9996970432838799	WITHOUT_CLASSIFICATION	3.02956716120056E-4	DESIGN
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9997769148137184	WITHOUT_CLASSIFICATION	2.2308518628168158E-4	DESIGN
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9998769999542361	WITHOUT_CLASSIFICATION	1.2300004576400192E-4	DESIGN
The template for interface modules	WITHOUT_CLASSIFICATION	0.9998979873646519	WITHOUT_CLASSIFICATION	1.0201263534818487E-4	DESIGN
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9998631909946386	WITHOUT_CLASSIFICATION	1.3680900536134605E-4	DESIGN
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9980426508875367	WITHOUT_CLASSIFICATION	0.001957349112463254	DESIGN
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9957423715288852	WITHOUT_CLASSIFICATION	0.0042576284711147655	DESIGN
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9988561844456157	WITHOUT_CLASSIFICATION	0.0011438155543842762	DESIGN
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9993233831341921	WITHOUT_CLASSIFICATION	6.766168658080169E-4	DESIGN
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9891986194113045	WITHOUT_CLASSIFICATION	0.010801380588695545	DESIGN
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9995092938531304	WITHOUT_CLASSIFICATION	4.907061468695451E-4	DESIGN
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9998623581244167	WITHOUT_CLASSIFICATION	1.376418755834232E-4	DESIGN
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9933159878910489	WITHOUT_CLASSIFICATION	0.0066840121089510205	DESIGN
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9988761335643493	WITHOUT_CLASSIFICATION	0.0011238664356506608	DESIGN
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9965214509040441	WITHOUT_CLASSIFICATION	0.0034785490959559208	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9997329420575007	WITHOUT_CLASSIFICATION	2.670579424992457E-4	DESIGN
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.9994397307905317	WITHOUT_CLASSIFICATION	5.602692094683405E-4	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9998060983760262	WITHOUT_CLASSIFICATION	1.9390162397392712E-4	DESIGN
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.999741201691682	WITHOUT_CLASSIFICATION	2.587983083180029E-4	DESIGN
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.999860019508944	WITHOUT_CLASSIFICATION	1.3998049105596097E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999811939639681	WITHOUT_CLASSIFICATION	1.880603603189587E-5	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9997329420575007	WITHOUT_CLASSIFICATION	2.670579424992457E-4	DESIGN
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9963064633845765	WITHOUT_CLASSIFICATION	0.0036935366154235063	DESIGN
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9943775278285998	WITHOUT_CLASSIFICATION	0.005622472171400199	DESIGN
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9940404281056009	WITHOUT_CLASSIFICATION	0.005959571894399193	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9921772997271746	WITHOUT_CLASSIFICATION	0.007822700272825302	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9921772997271746	WITHOUT_CLASSIFICATION	0.007822700272825302	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.999977186683871	WITHOUT_CLASSIFICATION	2.2813316129008984E-5	DESIGN
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9853636689148098	WITHOUT_CLASSIFICATION	0.014636331085190121	DESIGN
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9742260266739868	WITHOUT_CLASSIFICATION	0.025773973326013104	DESIGN
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999343395228117	WITHOUT_CLASSIFICATION	6.566047718823919E-5	DESIGN
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9991167858411817	WITHOUT_CLASSIFICATION	8.832141588183162E-4	DESIGN
Initialize some components.	WITHOUT_CLASSIFICATION	0.9982098264082943	WITHOUT_CLASSIFICATION	0.0017901735917058284	DESIGN
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9965359597240159	WITHOUT_CLASSIFICATION	0.003464040275984187	DESIGN
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9221588943561478	WITHOUT_CLASSIFICATION	0.07784110564385216	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999575797772919	WITHOUT_CLASSIFICATION	4.242022270793456E-5	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999575797772919	WITHOUT_CLASSIFICATION	4.242022270793456E-5	DESIGN
no matching ctor found	WITHOUT_CLASSIFICATION	0.9994783428332814	WITHOUT_CLASSIFICATION	5.216571667185879E-4	DESIGN
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9951779189371353	WITHOUT_CLASSIFICATION	0.004822081062864824	DESIGN
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999358255620493	WITHOUT_CLASSIFICATION	6.417443795069768E-5	DESIGN
must be a public method	WITHOUT_CLASSIFICATION	0.9992331400268137	WITHOUT_CLASSIFICATION	7.668599731862404E-4	DESIGN
must be a public class	WITHOUT_CLASSIFICATION	0.9980352192468916	WITHOUT_CLASSIFICATION	0.0019647807531083363	DESIGN
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9996074842710267	WITHOUT_CLASSIFICATION	3.925157289732968E-4	DESIGN
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.8620040323867213	WITHOUT_CLASSIFICATION	0.1379959676132786	DESIGN
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9995195575183715	WITHOUT_CLASSIFICATION	4.8044248162856324E-4	DESIGN
no matching method found	WITHOUT_CLASSIFICATION	0.9991330702103738	WITHOUT_CLASSIFICATION	8.669297896261051E-4	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9196936932590111	WITHOUT_CLASSIFICATION	0.0803063067409889	DESIGN
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9912182114919196	WITHOUT_CLASSIFICATION	0.008781788508080493	DESIGN
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9991749796638275	WITHOUT_CLASSIFICATION	8.250203361724839E-4	DESIGN
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9979258937313517	WITHOUT_CLASSIFICATION	0.002074106268648319	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9995838297129447	WITHOUT_CLASSIFICATION	4.161702870553279E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9995838297129447	WITHOUT_CLASSIFICATION	4.161702870553279E-4	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999089093498668	WITHOUT_CLASSIFICATION	9.109065013327435E-5	DESIGN
end class	WITHOUT_CLASSIFICATION	0.9994827338535749	WITHOUT_CLASSIFICATION	5.172661464252057E-4	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9196936932590111	WITHOUT_CLASSIFICATION	0.0803063067409889	DESIGN
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9997940844894635	WITHOUT_CLASSIFICATION	2.0591551053648736E-4	DESIGN
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9998618326517492	WITHOUT_CLASSIFICATION	1.3816734825069195E-4	DESIGN
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9988330724196699	WITHOUT_CLASSIFICATION	0.0011669275803301053	DESIGN
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9989753342624815	WITHOUT_CLASSIFICATION	0.0010246657375184826	DESIGN
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9983808746986659	WITHOUT_CLASSIFICATION	0.0016191253013341173	DESIGN
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9987058881828235	WITHOUT_CLASSIFICATION	0.0012941118171765913	DESIGN
package scope	WITHOUT_CLASSIFICATION	0.9989777193925321	WITHOUT_CLASSIFICATION	0.0010222806074678926	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999811939639681	WITHOUT_CLASSIFICATION	1.880603603189587E-5	DESIGN
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9991576027376264	WITHOUT_CLASSIFICATION	8.423972623734969E-4	DESIGN
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.969724359866612	WITHOUT_CLASSIFICATION	0.030275640133388033	DESIGN
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.999870379943939	WITHOUT_CLASSIFICATION	1.2962005606094275E-4	DESIGN
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9998547260533203	WITHOUT_CLASSIFICATION	1.452739466797591E-4	DESIGN
get any included interfaces	WITHOUT_CLASSIFICATION	0.9993178596211717	WITHOUT_CLASSIFICATION	6.821403788283277E-4	DESIGN
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9987437271823717	WITHOUT_CLASSIFICATION	0.0012562728176283677	DESIGN
statically initialized below	WITHOUT_CLASSIFICATION	0.998997057805831	WITHOUT_CLASSIFICATION	0.0010029421941690007	DESIGN
finish class initializer	WITHOUT_CLASSIFICATION	0.9979178273680787	WITHOUT_CLASSIFICATION	0.0020821726319214407	DESIGN
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.999875215164481	WITHOUT_CLASSIFICATION	1.2478483551897404E-4	DESIGN
should not happen!	WITHOUT_CLASSIFICATION	0.967152627863521	WITHOUT_CLASSIFICATION	0.03284737213647908	DESIGN
start class	WITHOUT_CLASSIFICATION	0.9986017108412972	WITHOUT_CLASSIFICATION	0.0013982891587027443	DESIGN
make getter for handler	WITHOUT_CLASSIFICATION	0.9976657564584125	WITHOUT_CLASSIFICATION	0.0023342435415874773	DESIGN
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9962900349711172	WITHOUT_CLASSIFICATION	0.0037099650288828353	DESIGN
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9864496429358638	DESIGN	0.013550357064136334	WITHOUT_CLASSIFICATION
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9988411473062622	WITHOUT_CLASSIFICATION	0.001158852693737762	DESIGN
create static private method field	WITHOUT_CLASSIFICATION	0.9616232599727966	WITHOUT_CLASSIFICATION	0.03837674002720343	DESIGN
load static empty array	WITHOUT_CLASSIFICATION	0.9880151974806884	WITHOUT_CLASSIFICATION	0.011984802519311553	DESIGN
box arguments	WITHOUT_CLASSIFICATION	0.9998562253698294	WITHOUT_CLASSIFICATION	1.437746301706149E-4	DESIGN
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9913038835478966	WITHOUT_CLASSIFICATION	0.008696116452103362	DESIGN
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9993404437681901	WITHOUT_CLASSIFICATION	6.595562318100007E-4	DESIGN
do a void return	WITHOUT_CLASSIFICATION	0.9984987050974016	WITHOUT_CLASSIFICATION	0.0015012949025984788	DESIGN
utility methods	WITHOUT_CLASSIFICATION	0.9997188484341114	WITHOUT_CLASSIFICATION	2.8115156588863087E-4	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.999977186683871	WITHOUT_CLASSIFICATION	2.2813316129008984E-5	DESIGN
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9989047088727735	WITHOUT_CLASSIFICATION	0.0010952911272265266	DESIGN
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9974400947563945	WITHOUT_CLASSIFICATION	0.0025599052436054994	DESIGN
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9993297878554026	WITHOUT_CLASSIFICATION	6.702121445974295E-4	DESIGN
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9992679943207352	WITHOUT_CLASSIFICATION	7.320056792647453E-4	DESIGN
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9964306870544778	WITHOUT_CLASSIFICATION	0.003569312945522154	DESIGN
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9979208641245946	WITHOUT_CLASSIFICATION	0.002079135875405452	DESIGN
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9998398482958476	WITHOUT_CLASSIFICATION	1.6015170415245271E-4	DESIGN
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9837665713695992	WITHOUT_CLASSIFICATION	0.016233428630400747	DESIGN
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.9999954331570654	WITHOUT_CLASSIFICATION	4.566842934562977E-6	DESIGN
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999732994244257	WITHOUT_CLASSIFICATION	2.6700575574294435E-5	DESIGN
NUL	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9973729143800644	WITHOUT_CLASSIFICATION	0.0026270856199356297	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999941780422217	WITHOUT_CLASSIFICATION	5.821957778292851E-5	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9988163146040882	WITHOUT_CLASSIFICATION	0.0011836853959118704	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.995529046303742	WITHOUT_CLASSIFICATION	0.0044709536962581	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9940952401911934	WITHOUT_CLASSIFICATION	0.005904759808806654	DESIGN
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9991710955166138	WITHOUT_CLASSIFICATION	8.289044833862877E-4	DESIGN
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9979417077773354	WITHOUT_CLASSIFICATION	0.002058292222664618	DESIGN
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.999163361481234	WITHOUT_CLASSIFICATION	8.366385187660322E-4	DESIGN
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9989965409543152	WITHOUT_CLASSIFICATION	0.0010034590456847335	DESIGN
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9721169243551022	WITHOUT_CLASSIFICATION	0.027883075644897844	DESIGN
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.999383519607735	WITHOUT_CLASSIFICATION	6.164803922650386E-4	DESIGN
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9987351965819276	WITHOUT_CLASSIFICATION	0.0012648034180724535	DESIGN
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.9998812134748816	WITHOUT_CLASSIFICATION	1.1878652511832591E-4	DESIGN
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9566463616761235	WITHOUT_CLASSIFICATION	0.043353638323876474	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9994756299372941	WITHOUT_CLASSIFICATION	5.243700627058087E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9994756299372941	WITHOUT_CLASSIFICATION	5.243700627058087E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9994756299372941	WITHOUT_CLASSIFICATION	5.243700627058087E-4	DESIGN
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9985928115153371	WITHOUT_CLASSIFICATION	0.0014071884846629328	DESIGN
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9998533130949072	WITHOUT_CLASSIFICATION	1.4668690509274515E-4	DESIGN
Single node in list	WITHOUT_CLASSIFICATION	0.999769238782727	WITHOUT_CLASSIFICATION	2.3076121727296357E-4	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9986846528087964	WITHOUT_CLASSIFICATION	0.0013153471912036147	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9986846528087964	WITHOUT_CLASSIFICATION	0.0013153471912036147	DESIGN
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9966479255620899	WITHOUT_CLASSIFICATION	0.0033520744379100997	DESIGN
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9977050068558466	WITHOUT_CLASSIFICATION	0.0022949931441534847	DESIGN
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999666087488581	WITHOUT_CLASSIFICATION	3.339125114189341E-5	DESIGN
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9998177042453417	WITHOUT_CLASSIFICATION	1.8229575465838183E-4	DESIGN
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9954204254852301	WITHOUT_CLASSIFICATION	0.004579574514769896	DESIGN
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998734700109692	WITHOUT_CLASSIFICATION	1.2652998903092864E-4	DESIGN
Last full line read.	WITHOUT_CLASSIFICATION	0.9995722540126136	WITHOUT_CLASSIFICATION	4.2774598738633723E-4	DESIGN
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9996275987784834	WITHOUT_CLASSIFICATION	3.7240122151660347E-4	DESIGN
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.999922942703472	WITHOUT_CLASSIFICATION	7.70572965280469E-5	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999535325956789	WITHOUT_CLASSIFICATION	4.6467404321162394E-5	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999535325956789	WITHOUT_CLASSIFICATION	4.6467404321162394E-5	DESIGN
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999571338972941	WITHOUT_CLASSIFICATION	4.2866102705747586E-5	DESIGN
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9994550577209154	WITHOUT_CLASSIFICATION	5.44942279084628E-4	DESIGN
Single-quote fast path	WITHOUT_CLASSIFICATION	0.9994145786663582	WITHOUT_CLASSIFICATION	5.854213336418287E-4	DESIGN
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9991490145525388	WITHOUT_CLASSIFICATION	8.509854474612649E-4	DESIGN
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9988306294131302	WITHOUT_CLASSIFICATION	0.001169370586869773	DESIGN
just ignore	WITHOUT_CLASSIFICATION	0.9995629526873708	WITHOUT_CLASSIFICATION	4.370473126291794E-4	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9995565189765471	WITHOUT_CLASSIFICATION	4.434810234529761E-4	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9996456503304298	WITHOUT_CLASSIFICATION	3.54349669570091E-4	DESIGN
PUSH(1)	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
POP	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999935456008453	WITHOUT_CLASSIFICATION	6.454399154673704E-6	DESIGN
LEXPOP	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
SET_P	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9992876635213267	WITHOUT_CLASSIFICATION	7.123364786732079E-4	DESIGN
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9995459110367606	WITHOUT_CLASSIFICATION	4.5408896323941196E-4	DESIGN
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9991684821830914	WITHOUT_CLASSIFICATION	8.315178169085433E-4	DESIGN
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999954564293904	WITHOUT_CLASSIFICATION	4.543570609604652E-5	DESIGN
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999813848738804	WITHOUT_CLASSIFICATION	1.861512611952443E-5	DESIGN
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9997826035801416	WITHOUT_CLASSIFICATION	2.1739641985846984E-4	DESIGN
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9997117539390393	WITHOUT_CLASSIFICATION	2.882460609606453E-4	DESIGN
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9579360109693559	DESIGN	0.042063989030644136	WITHOUT_CLASSIFICATION
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9958501614733224	WITHOUT_CLASSIFICATION	0.004149838526677625	DESIGN
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9990331069620632	WITHOUT_CLASSIFICATION	9.668930379368292E-4	DESIGN
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9946734484991275	WITHOUT_CLASSIFICATION	0.005326551500872487	DESIGN
1.9 only	WITHOUT_CLASSIFICATION	0.9995915989945419	WITHOUT_CLASSIFICATION	4.0840100545811624E-4	DESIGN
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9992751503979621	WITHOUT_CLASSIFICATION	7.248496020378659E-4	DESIGN
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9989331916796327	WITHOUT_CLASSIFICATION	0.0010668083203673566	DESIGN
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.9992856276894564	WITHOUT_CLASSIFICATION	7.143723105436662E-4	DESIGN
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.7301776437925277	WITHOUT_CLASSIFICATION	0.26982235620747225	DESIGN
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.9993511207499125	WITHOUT_CLASSIFICATION	6.488792500875005E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
end of script.	WITHOUT_CLASSIFICATION	0.9999310243749365	WITHOUT_CLASSIFICATION	6.897562506339648E-5	DESIGN
white spaces	WITHOUT_CLASSIFICATION	0.9996022938260601	WITHOUT_CLASSIFICATION	3.9770617393991857E-4	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
it's a comment	WITHOUT_CLASSIFICATION	0.9982793882513554	WITHOUT_CLASSIFICATION	0.0017206117486444899	DESIGN
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9992044453677809	WITHOUT_CLASSIFICATION	7.955546322191609E-4	DESIGN
$\: output record separator	WITHOUT_CLASSIFICATION	0.9997557723179028	WITHOUT_CLASSIFICATION	2.44227682097249E-4	DESIGN
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9972615177519915	WITHOUT_CLASSIFICATION	0.0027384822480084367	DESIGN
documentation nodes	WITHOUT_CLASSIFICATION	0.9999170054818382	WITHOUT_CLASSIFICATION	8.299451816192668E-5	DESIGN
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9998934868444602	WITHOUT_CLASSIFICATION	1.065131555396899E-4	DESIGN
Just a plain bang	WITHOUT_CLASSIFICATION	0.9994640692093497	WITHOUT_CLASSIFICATION	5.359307906503866E-4	DESIGN
$_: last read line string	WITHOUT_CLASSIFICATION	0.9999647827804521	WITHOUT_CLASSIFICATION	3.5217219547852966E-5	DESIGN
$~: match-data	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
$: argv	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
$$: pid	WITHOUT_CLASSIFICATION	0.9989331680111854	WITHOUT_CLASSIFICATION	0.0010668319888145665	DESIGN
$?: last status	WITHOUT_CLASSIFICATION	0.999427634730063	WITHOUT_CLASSIFICATION	5.723652699371129E-4	DESIGN
$!: error string	WITHOUT_CLASSIFICATION	0.9996484456489021	WITHOUT_CLASSIFICATION	3.515543510979465E-4	DESIGN
$@: error position	WITHOUT_CLASSIFICATION	0.9983261761097579	WITHOUT_CLASSIFICATION	0.00167382389024207	DESIGN
$/: input record separator	WITHOUT_CLASSIFICATION	0.9994282759010152	WITHOUT_CLASSIFICATION	5.717240989848045E-4	DESIGN
$;: field separator	WITHOUT_CLASSIFICATION	0.9995186327647518	WITHOUT_CLASSIFICATION	4.81367235248152E-4	DESIGN
$,: output field separator	WITHOUT_CLASSIFICATION	0.9994339909032498	WITHOUT_CLASSIFICATION	5.660090967502623E-4	DESIGN
$.: last read line number	WITHOUT_CLASSIFICATION	0.9997052278208468	WITHOUT_CLASSIFICATION	2.947721791531817E-4	DESIGN
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
$:: load path	WITHOUT_CLASSIFICATION	0.9984872808167325	WITHOUT_CLASSIFICATION	0.0015127191832674794	DESIGN
$<: reading filename	WITHOUT_CLASSIFICATION	0.9999121491370525	WITHOUT_CLASSIFICATION	8.785086294742007E-5	DESIGN
$": already loaded files	WITHOUT_CLASSIFICATION	0.9998074939066502	WITHOUT_CLASSIFICATION	1.9250609334985644E-4	DESIGN
$&: last match	WITHOUT_CLASSIFICATION	0.9998575265871367	WITHOUT_CLASSIFICATION	1.424734128634295E-4	DESIGN
$`: string before last match	WITHOUT_CLASSIFICATION	0.9999358617850803	WITHOUT_CLASSIFICATION	6.413821491966995E-5	DESIGN
$': string after last match	WITHOUT_CLASSIFICATION	0.9999344174336162	WITHOUT_CLASSIFICATION	6.558256638376248E-5	DESIGN
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999239180893454	WITHOUT_CLASSIFICATION	7.608191065458378E-5	DESIGN
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.9995465092251001	WITHOUT_CLASSIFICATION	4.534907748999084E-4	DESIGN
enum lex_state	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
block (primary)	WITHOUT_CLASSIFICATION	0.9998649017521156	WITHOUT_CLASSIFICATION	1.350982478843843E-4	DESIGN
block (expr)	WITHOUT_CLASSIFICATION	0.9998649017521156	WITHOUT_CLASSIFICATION	1.350982478843843E-4	DESIGN
hash	WITHOUT_CLASSIFICATION	0.9995775294688738	WITHOUT_CLASSIFICATION	4.2247053112623494E-4	DESIGN
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9943023591747167	WITHOUT_CLASSIFICATION	0.005697640825283374	DESIGN
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9227645345245923	WITHOUT_CLASSIFICATION	0.07723546547540779	DESIGN
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9989480619111146	WITHOUT_CLASSIFICATION	0.0010519380888852853	DESIGN
hexadecimal	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
binary	WITHOUT_CLASSIFICATION	0.9996211502036425	WITHOUT_CLASSIFICATION	3.788497963575606E-4	DESIGN
decimal	WITHOUT_CLASSIFICATION	0.9995025421893647	WITHOUT_CLASSIFICATION	4.97457810635284E-4	DESIGN
Octal	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.9995248110739439	WITHOUT_CLASSIFICATION	4.751889260561444E-4	DESIGN
backslash	WITHOUT_CLASSIFICATION	0.9990666214287951	WITHOUT_CLASSIFICATION	9.333785712050309E-4	DESIGN
newline	WITHOUT_CLASSIFICATION	0.9991229407895176	WITHOUT_CLASSIFICATION	8.77059210482307E-4	DESIGN
horizontal tab	WITHOUT_CLASSIFICATION	0.9987771648371792	WITHOUT_CLASSIFICATION	0.0012228351628208866	DESIGN
form feed	WITHOUT_CLASSIFICATION	0.9986229654073157	WITHOUT_CLASSIFICATION	0.001377034592684346	DESIGN
vertical tab	WITHOUT_CLASSIFICATION	0.9987057785019642	WITHOUT_CLASSIFICATION	0.0012942214980357918	DESIGN
alarm(bell)	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
escape	WITHOUT_CLASSIFICATION	0.9989972974142715	WITHOUT_CLASSIFICATION	0.0010027025857285321	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9996456503304298	WITHOUT_CLASSIFICATION	3.54349669570091E-4	DESIGN
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9998173940612509	WITHOUT_CLASSIFICATION	1.8260593874904512E-4	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999873392835243	WITHOUT_CLASSIFICATION	1.2660716475603395E-5	DESIGN
space	WITHOUT_CLASSIFICATION	0.9999076818608171	WITHOUT_CLASSIFICATION	9.231813918283978E-5	DESIGN
Where we started this marker match	WITHOUT_CLASSIFICATION	0.997253977460086	WITHOUT_CLASSIFICATION	0.0027460225399139385	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999189873883806	WITHOUT_CLASSIFICATION	8.10126116194065E-5	DESIGN
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9945698947470755	WITHOUT_CLASSIFICATION	0.0054301052529244906	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999873392835243	WITHOUT_CLASSIFICATION	1.2660716475603395E-5	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.7902934410968352	WITHOUT_CLASSIFICATION	0.20970655890316484	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.7902934410968352	WITHOUT_CLASSIFICATION	0.20970655890316484	DESIGN
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9989427932589776	WITHOUT_CLASSIFICATION	0.0010572067410224554	DESIGN
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9991082598210724	WITHOUT_CLASSIFICATION	8.917401789275103E-4	DESIGN
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9989425684830867	WITHOUT_CLASSIFICATION	0.0010574315169132602	DESIGN
Character read before previous read	WITHOUT_CLASSIFICATION	0.9997461912722286	WITHOUT_CLASSIFICATION	2.538087277713954E-4	DESIGN
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9040414164501224	WITHOUT_CLASSIFICATION	0.09595858354987766	DESIGN
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.9899616605943015	DESIGN	0.01003833940569863	WITHOUT_CLASSIFICATION
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9981334636769656	WITHOUT_CLASSIFICATION	0.0018665363230344313	DESIGN
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.8079315976974948	WITHOUT_CLASSIFICATION	0.19206840230250524	DESIGN
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9992668231047065	WITHOUT_CLASSIFICATION	7.331768952936168E-4	DESIGN
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9998286024005725	WITHOUT_CLASSIFICATION	1.7139759942748868E-4	DESIGN
this set is only for darwin	WITHOUT_CLASSIFICATION	0.9918253125282522	WITHOUT_CLASSIFICATION	0.008174687471747691	DESIGN
DigestLibrary	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.8960462648313371	WITHOUT_CLASSIFICATION	0.10395373516866288	DESIGN
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9184288988348215	WITHOUT_CLASSIFICATION	0.0815711011651785	DESIGN
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999140592602529	WITHOUT_CLASSIFICATION	8.594073974720085E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
line 329	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9990323595462999	WITHOUT_CLASSIFICATION	9.676404537001837E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9995141362291086	WITHOUT_CLASSIFICATION	4.858637708914451E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9980133379429329	WITHOUT_CLASSIFICATION	0.0019866620570671975	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9993183983658834	WITHOUT_CLASSIFICATION	6.816016341166299E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9993767933994723	WITHOUT_CLASSIFICATION	6.232066005277451E-4	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9988478310567338	WITHOUT_CLASSIFICATION	0.0011521689432661979	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.9998348934939646	WITHOUT_CLASSIFICATION	1.6510650603533233E-4	DESIGN
line 271	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 274	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 303	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 311	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 314	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 317	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 332	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 338	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 341	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 344	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 358	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 367	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 378	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 407	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 411	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 414	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 434	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 443	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 446	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 452	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 457	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 464	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 467	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 470	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 479	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 484	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 492	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 498	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 501	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 504	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 507	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 510	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 519	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 525	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 556	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 559	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 563	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 569	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 575	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 578	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 587	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 596	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 604	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 607	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 613	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 616	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 634	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 638	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 643	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 646	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 655	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 660	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 667	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 670	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 701	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 717	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 720	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 726	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 729	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 735	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 738	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 751	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 754	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 757	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 760	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 763	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 769	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 775	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 797	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 803	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 806	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 809	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 815	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 818	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 821	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 824	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 830	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 833	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 836	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 852	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 858	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 861	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 868	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 871	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 876	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 879	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 883	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 903	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 907	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 915	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 920	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 923	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 926	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 936	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 940	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 948	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 956	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 964	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 967	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 978	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 984	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 986	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 996	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1001	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1008	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1014	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1029	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1032	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1034	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1045	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1048	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1051	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1058	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1070	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1073	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1076	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1079	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1082	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1089	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1100	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1103	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1107	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9996874445437842	WITHOUT_CLASSIFICATION	3.125554562158593E-4	DESIGN
line 1113	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1115	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1119	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1135	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1137	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1151	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1154	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1164	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1175	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1178	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1187	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1189	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1193	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1214	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1234	WITHOUT_CLASSIFICATION	0.9996814841251642	WITHOUT_CLASSIFICATION	3.185158748357288E-4	DESIGN
line 1239	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1243	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1263	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1269	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1280	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1283	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1290	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1296	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1299	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1302	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1309	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1313	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1315	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1328	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1335	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1352	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1358	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1374	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1381	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1415	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1431	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1434	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1440	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1443	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1453	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1465	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1477	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1480	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1485	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1488	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1510	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1516	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1533	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1550	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1553	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1556	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1565	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1568	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1571	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1574	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1577	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1587	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1600	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1609	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1623	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1626	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1638	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1641	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1644	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1649	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1655	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1658	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1661	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1672	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1677	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1687	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1694	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1733	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1745	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1757	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1769	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1775	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1784	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1808	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1814	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9992308508639505	WITHOUT_CLASSIFICATION	7.69149136049508E-4	DESIGN
XXX 0;	WITHOUT_CLASSIFICATION	0.9685980406598602	WITHOUT_CLASSIFICATION	0.031401959340139805	DESIGN
$$ = $3;	WITHOUT_CLASSIFICATION	0.9996685425876358	WITHOUT_CLASSIFICATION	3.314574123642761E-4	DESIGN
}	WITHOUT_CLASSIFICATION	0.9985247740578239	WITHOUT_CLASSIFICATION	0.001475225942176092	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9815133632782863	WITHOUT_CLASSIFICATION	0.018486636721713648	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.7908124373002464	WITHOUT_CLASSIFICATION	0.20918756269975367	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9427315277154257	WITHOUT_CLASSIFICATION	0.05726847228457443	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9427315277154257	WITHOUT_CLASSIFICATION	0.05726847228457443	DESIGN
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9993193199504866	WITHOUT_CLASSIFICATION	6.806800495134422E-4	DESIGN
mirko: check	WITHOUT_CLASSIFICATION	0.9997359721300525	WITHOUT_CLASSIFICATION	2.6402786994749865E-4	DESIGN
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9907387401187049	WITHOUT_CLASSIFICATION	0.009261259881295114	DESIGN
line 529	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
XXX	WITHOUT_CLASSIFICATION	0.9667420042590865	WITHOUT_CLASSIFICATION	0.03325799574091342	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9999099778924408	WITHOUT_CLASSIFICATION	9.002210755923748E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9997097167359117	WITHOUT_CLASSIFICATION	2.902832640882916E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9987173022638249	WITHOUT_CLASSIFICATION	0.001282697736175116	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997396985732135	WITHOUT_CLASSIFICATION	2.603014267864498E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9973342146144727	WITHOUT_CLASSIFICATION	0.002665785385527199	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9990323595462999	WITHOUT_CLASSIFICATION	9.676404537001837E-4	DESIGN
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9998089610505962	WITHOUT_CLASSIFICATION	1.910389494037146E-4	DESIGN
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.999960352343791	WITHOUT_CLASSIFICATION	3.964765620910204E-5	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998924036646016	WITHOUT_CLASSIFICATION	1.075963353983398E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998924036646016	WITHOUT_CLASSIFICATION	1.075963353983398E-4	DESIGN
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999954403353625	WITHOUT_CLASSIFICATION	4.559664637566956E-6	DESIGN
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.988044734217148	WITHOUT_CLASSIFICATION	0.011955265782852035	DESIGN
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999446855541186	WITHOUT_CLASSIFICATION	5.531444588140305E-4	DESIGN
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9996045942447821	WITHOUT_CLASSIFICATION	3.954057552178831E-4	DESIGN
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9818118356347514	WITHOUT_CLASSIFICATION	0.018188164365248595	DESIGN
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9998836305860522	WITHOUT_CLASSIFICATION	1.1636941394782723E-4	DESIGN
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9994638938394704	WITHOUT_CLASSIFICATION	5.361061605296449E-4	DESIGN
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9987350343170001	WITHOUT_CLASSIFICATION	0.0012649656829998507	DESIGN
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9790010507852273	WITHOUT_CLASSIFICATION	0.02099894921477273	DESIGN
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9977291997428375	WITHOUT_CLASSIFICATION	0.0022708002571624514	DESIGN
Parser states:	WITHOUT_CLASSIFICATION	0.999080180745891	WITHOUT_CLASSIFICATION	9.198192541089875E-4	DESIGN
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9975083574980488	WITHOUT_CLASSIFICATION	0.002491642501951206	DESIGN
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.945301122121647	WITHOUT_CLASSIFICATION	0.054698877878352946	DESIGN
LOCALVAR	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
CONSTANT	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9977622155783379	WITHOUT_CLASSIFICATION	0.002237784421661993	DESIGN
MRI: block_append	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.9996606263527376	WITHOUT_CLASSIFICATION	3.3937364726243735E-4	DESIGN
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9995511684574837	WITHOUT_CLASSIFICATION	4.488315425162714E-4	DESIGN
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9995138888029396	WITHOUT_CLASSIFICATION	4.861111970605012E-4	DESIGN
Node	WITHOUT_CLASSIFICATION	0.9990074944507494	WITHOUT_CLASSIFICATION	9.925055492506032E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.976266983583379	DESIGN	0.023733016416620942	WITHOUT_CLASSIFICATION
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9998906565767776	WITHOUT_CLASSIFICATION	1.093434232224914E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.976266983583379	DESIGN	0.023733016416620942	WITHOUT_CLASSIFICATION
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9998906565767776	WITHOUT_CLASSIFICATION	1.093434232224914E-4	DESIGN
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9998906565767776	WITHOUT_CLASSIFICATION	1.093434232224914E-4	DESIGN
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.5006163094299821	DESIGN	0.49938369057001786	WITHOUT_CLASSIFICATION
MRI: range_op	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9978182902473187	WITHOUT_CLASSIFICATION	0.002181709752681403	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9914871692470832	WITHOUT_CLASSIFICATION	0.008512830752916723	DESIGN
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9992297453167166	WITHOUT_CLASSIFICATION	7.702546832832722E-4	DESIGN
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9965390433057226	WITHOUT_CLASSIFICATION	0.0034609566942773538	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9995141362291086	WITHOUT_CLASSIFICATION	4.858637708914451E-4	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9993183983658834	WITHOUT_CLASSIFICATION	6.816016341166299E-4	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.9993767933994723	WITHOUT_CLASSIFICATION	6.232066005277451E-4	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9988478310567338	WITHOUT_CLASSIFICATION	0.0011521689432661979	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.9998348934939646	WITHOUT_CLASSIFICATION	1.6510650603533233E-4	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 280	WITHOUT_CLASSIFICATION	0.9996855651174065	WITHOUT_CLASSIFICATION	3.1443488259348597E-4	DESIGN
line 283	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 296	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 324	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 327	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 331	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 333	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 336	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 342	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 345	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 348	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 354	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 368	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 377	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 388	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 392	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 397	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 429	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 432	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 436	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 445	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 448	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 454	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 459	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 466	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 469	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 478	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 481	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 488	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 494	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 497	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 503	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 506	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 509	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 512	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 521	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 526	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 534	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 549	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 552	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 558	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 561	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 571	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 574	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 579	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 586	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 589	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 592	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 595	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 598	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 623	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 627	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 630	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 633	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 639	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 648	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 657	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 661	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 666	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 678	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 682	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 688	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 699	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 706	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 708	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 727	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 737	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 753	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 779	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 801	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 808	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 811	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 817	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 820	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 826	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 829	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 832	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 851	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 857	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 860	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 863	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 866	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 869	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 875	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 884	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 887	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 890	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 902	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 909	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 912	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 916	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 922	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 928	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 941	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 947	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 951	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 955	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 965	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 969	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 977	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 983	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1013	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1023	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1035	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1041	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1043	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1054	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1057	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1060	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1069	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1075	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9996874445437842	WITHOUT_CLASSIFICATION	3.125554562158593E-4	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1078	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1084	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1087	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1090	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1093	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1114	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1116	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1118	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1124	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1126	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1138	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1144	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1149	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1155	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1162	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1173	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1179	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1182	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1190	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1196	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1213	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1217	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1231	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1236	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1244	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1254	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1258	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1264	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1270	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1273	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1276	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1279	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1282	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1289	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1292	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1295	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1298	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1305	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1308	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1311	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1317	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1323	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1326	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1329	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1337	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1342	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1345	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1354	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1359	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1366	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1369	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1373	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1377	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1383	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1399	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1401	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1406	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1417	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1424	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1427	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1430	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1433	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1436	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1442	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1445	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1458	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1464	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1489	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1493	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1507	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1519	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1532	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1538	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1542	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1557	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1573	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1591	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1607	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1610	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1622	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1625	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1636	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1639	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1647	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1651	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1657	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1660	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1663	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1678	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1702	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1711	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1719	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1722	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1731	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1734	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1738	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1746	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1756	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1758	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1761	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1767	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1776	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1782	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1785	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1788	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1791	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1797	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1800	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1803	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1806	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1809	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1815	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1825	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1828	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1831	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1847	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9427315277154257	WITHOUT_CLASSIFICATION	0.05726847228457443	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9427315277154257	WITHOUT_CLASSIFICATION	0.05726847228457443	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.9999099778924408	WITHOUT_CLASSIFICATION	9.002210755923748E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9997097167359117	WITHOUT_CLASSIFICATION	2.902832640882916E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9987173022638249	WITHOUT_CLASSIFICATION	0.001282697736175116	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
line 1854	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1869	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1872	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1877	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1886	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1898	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1902	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1905	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1911	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1918	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1935	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1938	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1942	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1948	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1960	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1963	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1968	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1972	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1982	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1995	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 2000	WITHOUT_CLASSIFICATION	0.9996159147057109	WITHOUT_CLASSIFICATION	3.840852942891977E-4	DESIGN
line 2006	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 2010	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.999733085292198	WITHOUT_CLASSIFICATION	2.669147078020688E-4	DESIGN
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9994744252622956	WITHOUT_CLASSIFICATION	5.255747377044793E-4	DESIGN
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9995771760471741	WITHOUT_CLASSIFICATION	4.228239528257961E-4	DESIGN
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9994014276533681	WITHOUT_CLASSIFICATION	5.985723466317868E-4	DESIGN
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9997107905993889	WITHOUT_CLASSIFICATION	2.8920940061110615E-4	DESIGN
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9997323207148824	WITHOUT_CLASSIFICATION	2.676792851176512E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9973342146144727	WITHOUT_CLASSIFICATION	0.002665785385527199	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9990323595462999	WITHOUT_CLASSIFICATION	9.676404537001837E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998924036646016	WITHOUT_CLASSIFICATION	1.075963353983398E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998924036646016	WITHOUT_CLASSIFICATION	1.075963353983398E-4	DESIGN
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9980928389937104	WITHOUT_CLASSIFICATION	0.0019071610062896427	DESIGN
was $$ = null;	WITHOUT_CLASSIFICATION	0.9993541871743612	WITHOUT_CLASSIFICATION	6.458128256388093E-4	DESIGN
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.999616813414982	WITHOUT_CLASSIFICATION	3.8318658501809504E-4	DESIGN
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9998089610505962	WITHOUT_CLASSIFICATION	1.910389494037146E-4	DESIGN
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999108634139066	WITHOUT_CLASSIFICATION	8.913658609343302E-5	DESIGN
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999735440211084	WITHOUT_CLASSIFICATION	2.6455978891654675E-5	DESIGN
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9898447785839962	WITHOUT_CLASSIFICATION	0.010155221416003718	DESIGN
Live reference to module	WITHOUT_CLASSIFICATION	0.9980500776208419	WITHOUT_CLASSIFICATION	0.0019499223791581521	DESIGN
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9998833295470275	WITHOUT_CLASSIFICATION	1.1667045297239618E-4	DESIGN
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999686562150348	WITHOUT_CLASSIFICATION	3.134378496513996E-5	DESIGN
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9987068858762038	WITHOUT_CLASSIFICATION	0.001293114123796252	DESIGN
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9986899053181179	WITHOUT_CLASSIFICATION	0.0013100946818821266	DESIGN
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9993295879474805	WITHOUT_CLASSIFICATION	6.704120525194303E-4	DESIGN
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999915973778182	WITHOUT_CLASSIFICATION	8.40262218186284E-6	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9993963981725589	WITHOUT_CLASSIFICATION	6.036018274412367E-4	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9993963981725589	WITHOUT_CLASSIFICATION	6.036018274412367E-4	DESIGN
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.768161259768046	WITHOUT_CLASSIFICATION	0.23183874023195403	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9973125811832381	WITHOUT_CLASSIFICATION	0.002687418816761996	DESIGN
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9993312825189833	WITHOUT_CLASSIFICATION	6.687174810166629E-4	DESIGN
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9994291683902683	WITHOUT_CLASSIFICATION	5.708316097317143E-4	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999705402845168	WITHOUT_CLASSIFICATION	2.9459715483172113E-5	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9988591860738719	WITHOUT_CLASSIFICATION	0.001140813926128148	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9997824207228018	WITHOUT_CLASSIFICATION	2.175792771981268E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9988591860738719	WITHOUT_CLASSIFICATION	0.001140813926128148	DESIGN
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9980972611003865	WITHOUT_CLASSIFICATION	0.0019027388996135175	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.97312462957282	WITHOUT_CLASSIFICATION	0.026875370427180117	DESIGN
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.8382349327858809	WITHOUT_CLASSIFICATION	0.16176506721411904	DESIGN
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.6326706462952889	DESIGN	0.3673293537047112	WITHOUT_CLASSIFICATION
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9950507285653046	WITHOUT_CLASSIFICATION	0.004949271434695355	DESIGN
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9950507285653046	WITHOUT_CLASSIFICATION	0.004949271434695355	DESIGN
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.9720865327108744	WITHOUT_CLASSIFICATION	0.02791346728912562	DESIGN
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999058852058481	WITHOUT_CLASSIFICATION	9.411479415190385E-5	DESIGN
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9997584799200039	WITHOUT_CLASSIFICATION	2.4152007999620303E-4	DESIGN
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.9848458267348893	DESIGN	0.015154173265110786	WITHOUT_CLASSIFICATION
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.6630972482774156	WITHOUT_CLASSIFICATION	0.3369027517225845	DESIGN
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9892853173091538	WITHOUT_CLASSIFICATION	0.01071468269084619	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9997847341751859	WITHOUT_CLASSIFICATION	2.1526582481408253E-4	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9997847341751859	WITHOUT_CLASSIFICATION	2.1526582481408253E-4	DESIGN
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9992309724000535	WITHOUT_CLASSIFICATION	7.690275999463795E-4	DESIGN
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999776950919007	WITHOUT_CLASSIFICATION	2.2304908099257146E-5	DESIGN
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9991879824365483	WITHOUT_CLASSIFICATION	8.120175634517095E-4	DESIGN
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9989212350092268	WITHOUT_CLASSIFICATION	0.0010787649907732099	DESIGN
required and optional only	WITHOUT_CLASSIFICATION	0.9997648663717261	WITHOUT_CLASSIFICATION	2.3513362827375347E-4	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9988591860738719	WITHOUT_CLASSIFICATION	0.001140813926128148	DESIGN
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9969979726760526	WITHOUT_CLASSIFICATION	0.003002027323947344	DESIGN
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.999996658462143	WITHOUT_CLASSIFICATION	3.341537856948261E-6	DESIGN
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999638049983503	WITHOUT_CLASSIFICATION	3.619500164969892E-4	DESIGN
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9969979726760526	WITHOUT_CLASSIFICATION	0.003002027323947344	DESIGN
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999918967622647	WITHOUT_CLASSIFICATION	8.103237735272945E-6	DESIGN
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9997206650550505	WITHOUT_CLASSIFICATION	2.793349449495256E-4	DESIGN
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999216065365135	WITHOUT_CLASSIFICATION	7.839346348655361E-5	DESIGN
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9997661443714246	WITHOUT_CLASSIFICATION	2.3385562857528404E-4	DESIGN
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.9924766471054252	DESIGN	0.007523352894574863	WITHOUT_CLASSIFICATION
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9991671824027517	WITHOUT_CLASSIFICATION	8.328175972483063E-4	DESIGN
No argument blocks	WITHOUT_CLASSIFICATION	0.9999922262107969	WITHOUT_CLASSIFICATION	7.773789203130525E-6	DESIGN
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.999893882329377	WITHOUT_CLASSIFICATION	1.061176706229484E-4	DESIGN
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.8780218938259691	WITHOUT_CLASSIFICATION	0.12197810617403092	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9984127879712378	WITHOUT_CLASSIFICATION	0.0015872120287622172	DESIGN
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.8412931066539636	WITHOUT_CLASSIFICATION	0.15870689334603635	DESIGN
Highest reserved id	WITHOUT_CLASSIFICATION	0.999451790596188	WITHOUT_CLASSIFICATION	5.48209403811952E-4	DESIGN
binary typed calls	WITHOUT_CLASSIFICATION	0.9997055704743871	WITHOUT_CLASSIFICATION	2.944295256128832E-4	DESIGN
id must always be even	WITHOUT_CLASSIFICATION	0.992537412649499	WITHOUT_CLASSIFICATION	0.007462587350501005	DESIGN
with block pass	WITHOUT_CLASSIFICATION	0.9998155676353392	WITHOUT_CLASSIFICATION	1.8443236466087758E-4	DESIGN
no block	WITHOUT_CLASSIFICATION	0.9998214102528997	WITHOUT_CLASSIFICATION	1.7858974710014972E-4	DESIGN
with block literal (iter)	WITHOUT_CLASSIFICATION	0.999274651098535	WITHOUT_CLASSIFICATION	7.253489014650258E-4	DESIGN
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9873631367976489	WITHOUT_CLASSIFICATION	0.012636863202351179	DESIGN
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.9861010298378454	WITHOUT_CLASSIFICATION	0.013898970162154663	DESIGN
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9989060304135492	WITHOUT_CLASSIFICATION	0.0010939695864508915	DESIGN
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9995610545084571	WITHOUT_CLASSIFICATION	4.389454915429463E-4	DESIGN
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.999952385331607	WITHOUT_CLASSIFICATION	4.761466839301597E-5	DESIGN
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9894129410696695	WITHOUT_CLASSIFICATION	0.01058705893033058	DESIGN
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9997640353231196	WITHOUT_CLASSIFICATION	2.3596467688037645E-4	DESIGN
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9991760921426941	WITHOUT_CLASSIFICATION	8.239078573059199E-4	DESIGN
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9963268552318394	WITHOUT_CLASSIFICATION	0.0036731447681605653	DESIGN
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9971471683953123	WITHOUT_CLASSIFICATION	0.0028528316046876707	DESIGN
Lastline	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9994985484553628	WITHOUT_CLASSIFICATION	5.014515446372573E-4	DESIGN
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9990858962491485	WITHOUT_CLASSIFICATION	9.14103750851476E-4	DESIGN
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9996093701361783	WITHOUT_CLASSIFICATION	3.906298638217098E-4	DESIGN
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9993444850143733	WITHOUT_CLASSIFICATION	6.555149856266895E-4	DESIGN
Some helper functions:	WITHOUT_CLASSIFICATION	0.9989539575516483	WITHOUT_CLASSIFICATION	0.0010460424483517729	DESIGN
silently ignore	WITHOUT_CLASSIFICATION	0.9994421689598855	WITHOUT_CLASSIFICATION	5.578310401145275E-4	DESIGN
used by compiler	WITHOUT_CLASSIFICATION	0.9752997973287745	WITHOUT_CLASSIFICATION	0.024700202671225545	DESIGN
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9945482799057703	WITHOUT_CLASSIFICATION	0.0054517200942296755	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999585790921826	WITHOUT_CLASSIFICATION	4.1420907817520735E-5	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9997115907443239	WITHOUT_CLASSIFICATION	2.8840925567611244E-4	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9973729143800644	WITHOUT_CLASSIFICATION	0.0026270856199356297	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999941780422217	WITHOUT_CLASSIFICATION	5.821957778292851E-5	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.97312462957282	WITHOUT_CLASSIFICATION	0.026875370427180117	DESIGN
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9909632593660782	WITHOUT_CLASSIFICATION	0.00903674063392189	DESIGN
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9316437194354595	WITHOUT_CLASSIFICATION	0.06835628056454054	DESIGN
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9981196734185841	WITHOUT_CLASSIFICATION	0.0018803265814158977	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999541128456538	WITHOUT_CLASSIFICATION	4.588715434617435E-5	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999541128456538	WITHOUT_CLASSIFICATION	4.588715434617435E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999976460877404	WITHOUT_CLASSIFICATION	2.353912259599423E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999976460877404	WITHOUT_CLASSIFICATION	2.353912259599423E-5	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999976460877404	WITHOUT_CLASSIFICATION	2.353912259599423E-5	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9987044649935457	WITHOUT_CLASSIFICATION	0.0012955350064542469	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9987044649935457	WITHOUT_CLASSIFICATION	0.0012955350064542469	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9991836995913503	WITHOUT_CLASSIFICATION	8.163004086496235E-4	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9991836995913503	WITHOUT_CLASSIFICATION	8.163004086496235E-4	DESIGN
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.997969339602934	WITHOUT_CLASSIFICATION	0.002030660397065943	DESIGN
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9566754000275144	WITHOUT_CLASSIFICATION	0.04332459997248569	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9970594405095642	WITHOUT_CLASSIFICATION	0.0029405594904357494	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9970594405095642	WITHOUT_CLASSIFICATION	0.0029405594904357494	DESIGN
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9980036787886781	WITHOUT_CLASSIFICATION	0.0019963212113218733	DESIGN
retrieve method module name	WITHOUT_CLASSIFICATION	0.9972680452647572	WITHOUT_CLASSIFICATION	0.002731954735242773	DESIGN
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.99907504016204	WITHOUT_CLASSIFICATION	9.249598379601904E-4	DESIGN
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999135106696928	WITHOUT_CLASSIFICATION	8.648933030722159E-5	DESIGN
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9996765861597374	WITHOUT_CLASSIFICATION	3.234138402624933E-4	DESIGN
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9997836671565534	WITHOUT_CLASSIFICATION	2.163328434466096E-4	DESIGN
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999394286868831	WITHOUT_CLASSIFICATION	6.0571313116829604E-5	DESIGN
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9993657063375999	WITHOUT_CLASSIFICATION	6.342936624001073E-4	DESIGN
caller	WITHOUT_CLASSIFICATION	0.9993809413333343	WITHOUT_CLASSIFICATION	6.190586666656814E-4	DESIGN
calltype block	WITHOUT_CLASSIFICATION	0.9998649017521156	WITHOUT_CLASSIFICATION	1.350982478843843E-4	DESIGN
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999987524624243	WITHOUT_CLASSIFICATION	1.2475375756931556E-6	DESIGN
load arity for check	WITHOUT_CLASSIFICATION	0.999430223547513	WITHOUT_CLASSIFICATION	5.697764524870102E-4	DESIGN
throw	WITHOUT_CLASSIFICATION	0.9980865492274955	WITHOUT_CLASSIFICATION	0.001913450772504406	DESIGN
load arity for error	WITHOUT_CLASSIFICATION	0.9966719390807739	WITHOUT_CLASSIFICATION	0.003328060919226103	DESIGN
arity ok, continue	WITHOUT_CLASSIFICATION	0.9993489048605124	WITHOUT_CLASSIFICATION	6.510951394875239E-4	DESIGN
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9974934224584452	WITHOUT_CLASSIFICATION	0.00250657754155486	DESIGN
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
InvocationCallback	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999401626601542	WITHOUT_CLASSIFICATION	5.983733984582197E-5	DESIGN
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998740524632704	WITHOUT_CLASSIFICATION	1.2594753672962294E-4	DESIGN
load the encoding	WITHOUT_CLASSIFICATION	0.9996902837246796	WITHOUT_CLASSIFICATION	3.097162753203175E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986995270146688	WITHOUT_CLASSIFICATION	0.0013004729853312617	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986995270146688	WITHOUT_CLASSIFICATION	0.0013004729853312617	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9986995270146688	WITHOUT_CLASSIFICATION	0.0013004729853312617	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999220990981054	WITHOUT_CLASSIFICATION	7.79009018946008E-4	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999220990981054	WITHOUT_CLASSIFICATION	7.79009018946008E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999220990981054	WITHOUT_CLASSIFICATION	7.79009018946008E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999220990981054	WITHOUT_CLASSIFICATION	7.79009018946008E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999220990981054	WITHOUT_CLASSIFICATION	7.79009018946008E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9993820137504583	WITHOUT_CLASSIFICATION	6.179862495417137E-4	DESIGN
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
ThreadContext	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9997294302750326	WITHOUT_CLASSIFICATION	2.705697249675077E-4	DESIGN
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999793840783161	WITHOUT_CLASSIFICATION	2.0615921683922636E-5	DESIGN
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9996977104886573	WITHOUT_CLASSIFICATION	3.0228951134269753E-4	DESIGN
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9990888910922952	WITHOUT_CLASSIFICATION	9.111089077049182E-4	DESIGN
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9993790902667692	WITHOUT_CLASSIFICATION	6.209097332308184E-4	DESIGN
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9941009323526363	WITHOUT_CLASSIFICATION	0.005899067647363741	DESIGN
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.5569664445921043	WITHOUT_CLASSIFICATION	0.4430335554078957	DESIGN
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9995720521021728	WITHOUT_CLASSIFICATION	4.2794789782722075E-4	DESIGN
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999958309324608	WITHOUT_CLASSIFICATION	4.1690675391529095E-6	DESIGN
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9813289595334809	WITHOUT_CLASSIFICATION	0.018671040466519098	DESIGN
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9832751087302474	WITHOUT_CLASSIFICATION	0.016724891269752636	DESIGN
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9993233769374477	WITHOUT_CLASSIFICATION	6.766230625522625E-4	DESIGN
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9930872495309396	WITHOUT_CLASSIFICATION	0.006912750469060464	DESIGN
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9989586456122105	WITHOUT_CLASSIFICATION	0.00104135438778961	DESIGN
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9903878827893362	WITHOUT_CLASSIFICATION	0.009612117210663906	DESIGN
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9972134127003938	WITHOUT_CLASSIFICATION	0.0027865872996061963	DESIGN
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9994048278184239	WITHOUT_CLASSIFICATION	5.951721815762035E-4	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9997824207228018	WITHOUT_CLASSIFICATION	2.175792771981268E-4	DESIGN
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.8292239019451307	WITHOUT_CLASSIFICATION	0.1707760980548693	DESIGN
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.7196520977602796	WITHOUT_CLASSIFICATION	0.28034790223972034	DESIGN
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9981783709275227	WITHOUT_CLASSIFICATION	0.001821629072477237	DESIGN
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9996427308761142	WITHOUT_CLASSIFICATION	3.572691238857506E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9980715125658591	WITHOUT_CLASSIFICATION	0.0019284874341407782	DESIGN
extension extensions	WITHOUT_CLASSIFICATION	0.9988922919517289	WITHOUT_CLASSIFICATION	0.0011077080482711445	DESIGN
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9984033124467062	WITHOUT_CLASSIFICATION	0.00159668755329383	DESIGN
try all extensions	WITHOUT_CLASSIFICATION	0.9996095140513769	WITHOUT_CLASSIFICATION	3.9048594862310616E-4	DESIGN
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9997765019558577	WITHOUT_CLASSIFICATION	2.234980441424511E-4	DESIGN
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9980900055050269	WITHOUT_CLASSIFICATION	0.0019099944949730017	DESIGN
try only literal search	WITHOUT_CLASSIFICATION	0.9990542234427221	WITHOUT_CLASSIFICATION	9.4577655727793E-4	DESIGN
attempt to load the found library	WITHOUT_CLASSIFICATION	0.99710400658844	WITHOUT_CLASSIFICATION	0.002895993411560063	DESIGN
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998219694369873	WITHOUT_CLASSIFICATION	1.780305630125461E-4	DESIGN
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9967362893565646	WITHOUT_CLASSIFICATION	0.003263710643435363	DESIGN
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9854053193575736	WITHOUT_CLASSIFICATION	0.014594680642426503	DESIGN
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999992173600437	WITHOUT_CLASSIFICATION	7.826399562764964E-7	DESIGN
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9998915231486656	WITHOUT_CLASSIFICATION	1.0847685133445174E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999294130024032	WITHOUT_CLASSIFICATION	7.058699759678969E-5	DESIGN
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9979823070122712	WITHOUT_CLASSIFICATION	0.002017692987728865	DESIGN
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9996311421931336	WITHOUT_CLASSIFICATION	3.6885780686630857E-4	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9973850891259225	WITHOUT_CLASSIFICATION	0.002614910874077383	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9973850891259225	WITHOUT_CLASSIFICATION	0.002614910874077383	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9977347119994595	WITHOUT_CLASSIFICATION	0.0022652880005404503	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9977347119994595	WITHOUT_CLASSIFICATION	0.0022652880005404503	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9997309226785245	WITHOUT_CLASSIFICATION	2.6907732147544116E-4	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9997309226785245	WITHOUT_CLASSIFICATION	2.6907732147544116E-4	DESIGN
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9997005103584266	WITHOUT_CLASSIFICATION	2.9948964157344124E-4	DESIGN
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9993452570924564	WITHOUT_CLASSIFICATION	6.547429075436786E-4	DESIGN
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9997221990997732	WITHOUT_CLASSIFICATION	2.7780090022673856E-4	DESIGN
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999783362571067	WITHOUT_CLASSIFICATION	2.1663742893305902E-5	DESIGN
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9946358198975047	WITHOUT_CLASSIFICATION	0.005364180102495304	DESIGN
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.915373674528503	WITHOUT_CLASSIFICATION	0.084626325471497	DESIGN
signed short, native	WITHOUT_CLASSIFICATION	0.9997166161875414	WITHOUT_CLASSIFICATION	2.8338381245860246E-4	DESIGN
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999969383723138	WITHOUT_CLASSIFICATION	3.061627686166184E-6	DESIGN
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9614425115557591	WITHOUT_CLASSIFICATION	0.03855748844424093	DESIGN
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9998826306493115	WITHOUT_CLASSIFICATION	1.1736935068851758E-4	DESIGN
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9991497373494028	WITHOUT_CLASSIFICATION	8.502626505971865E-4	DESIGN
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9986610672898528	WITHOUT_CLASSIFICATION	0.0013389327101471558	DESIGN
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9982131523501075	WITHOUT_CLASSIFICATION	0.001786847649892442	DESIGN
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.7665728233300021	WITHOUT_CLASSIFICATION	0.2334271766699979	DESIGN
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.997471827298027	WITHOUT_CLASSIFICATION	0.002528172701972985	DESIGN
write('S');	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9987988598529813	WITHOUT_CLASSIFICATION	0.00120114014701866	DESIGN
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9996169679287044	WITHOUT_CLASSIFICATION	3.83032071295595E-4	DESIGN
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9973125736785525	WITHOUT_CLASSIFICATION	0.002687426321447565	DESIGN
w_symbol	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
w_unique	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9990794830730378	WITHOUT_CLASSIFICATION	9.205169269621429E-4	DESIGN
Major Minor	WITHOUT_CLASSIFICATION	0.999356062843508	WITHOUT_CLASSIFICATION	6.439371564920038E-4	DESIGN
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9997742732559248	WITHOUT_CLASSIFICATION	2.2572674407524306E-4	DESIGN
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9995589122278206	WITHOUT_CLASSIFICATION	4.410877721793504E-4	DESIGN
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999015165545381	WITHOUT_CLASSIFICATION	9.848344546198735E-5	DESIGN
sic	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994896429628326	WITHOUT_CLASSIFICATION	5.103570371675157E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994896429628326	WITHOUT_CLASSIFICATION	5.103570371675157E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994896429628326	WITHOUT_CLASSIFICATION	5.103570371675157E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9975053205253023	WITHOUT_CLASSIFICATION	0.0024946794746977556	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9975053205253023	WITHOUT_CLASSIFICATION	0.0024946794746977556	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9984127879712378	WITHOUT_CLASSIFICATION	0.0015872120287622172	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9984127879712378	WITHOUT_CLASSIFICATION	0.0015872120287622172	DESIGN
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9997765921312336	WITHOUT_CLASSIFICATION	2.23407868766375E-4	DESIGN
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9744204685838306	WITHOUT_CLASSIFICATION	0.02557953141616943	DESIGN
unsigned short, native	WITHOUT_CLASSIFICATION	0.999158466070086	WITHOUT_CLASSIFICATION	8.415339299140161E-4	DESIGN
int, native long, native	WITHOUT_CLASSIFICATION	0.9993310002902308	WITHOUT_CLASSIFICATION	6.68999709769071E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994896429628326	WITHOUT_CLASSIFICATION	5.103570371675157E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994896429628326	WITHOUT_CLASSIFICATION	5.103570371675157E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9994896429628326	WITHOUT_CLASSIFICATION	5.103570371675157E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9975053205253023	WITHOUT_CLASSIFICATION	0.0024946794746977556	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9975053205253023	WITHOUT_CLASSIFICATION	0.0024946794746977556	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9975053205253023	WITHOUT_CLASSIFICATION	0.0024946794746977556	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9984127879712378	WITHOUT_CLASSIFICATION	0.0015872120287622172	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9984127879712378	WITHOUT_CLASSIFICATION	0.0015872120287622172	DESIGN
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999824412963135	WITHOUT_CLASSIFICATION	1.755870368643537E-5	DESIGN
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9998226790095905	WITHOUT_CLASSIFICATION	1.7732099040940313E-4	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9921091427696385	WITHOUT_CLASSIFICATION	0.007890857230361524	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9921091427696385	WITHOUT_CLASSIFICATION	0.007890857230361524	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9921091427696385	WITHOUT_CLASSIFICATION	0.007890857230361524	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9921091427696385	WITHOUT_CLASSIFICATION	0.007890857230361524	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9921091427696385	WITHOUT_CLASSIFICATION	0.007890857230361524	DESIGN
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
All braces pushed..	WITHOUT_CLASSIFICATION	0.9997520417833146	WITHOUT_CLASSIFICATION	2.479582166853949E-4	DESIGN
failed : try next recursion	WITHOUT_CLASSIFICATION	0.7845021817774575	WITHOUT_CLASSIFICATION	0.2154978182225425	DESIGN
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9997999014037807	WITHOUT_CLASSIFICATION	2.0009859621937818E-4	DESIGN
are we at ''	WITHOUT_CLASSIFICATION	0.9992935681369939	WITHOUT_CLASSIFICATION	7.064318630060786E-4	DESIGN
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9996328639841544	WITHOUT_CLASSIFICATION	3.671360158455437E-4	DESIGN
not enough bytes	WITHOUT_CLASSIFICATION	0.9986818488009916	WITHOUT_CLASSIFICATION	0.0013181511990082956	DESIGN
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9993356513490896	WITHOUT_CLASSIFICATION	6.643486509103714E-4	DESIGN
skip inner braces	WITHOUT_CLASSIFICATION	0.9985617783851182	WITHOUT_CLASSIFICATION	0.001438221614881801	DESIGN
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.9993507457434794	WITHOUT_CLASSIFICATION	6.492542565205092E-4	DESIGN
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9995054925075023	WITHOUT_CLASSIFICATION	4.945074924977273E-4	DESIGN
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.999998983407612	WITHOUT_CLASSIFICATION	1.0165923880314455E-6	DESIGN
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9996458492101333	WITHOUT_CLASSIFICATION	3.541507898666712E-4	DESIGN
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9976078849774971	WITHOUT_CLASSIFICATION	0.0023921150225029537	DESIGN
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9579125943089385	WITHOUT_CLASSIFICATION	0.04208740569106156	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.997097206185481	WITHOUT_CLASSIFICATION	0.002902793814518963	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.997097206185481	WITHOUT_CLASSIFICATION	0.002902793814518963	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.997097206185481	WITHOUT_CLASSIFICATION	0.002902793814518963	DESIGN
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9963625357838982	WITHOUT_CLASSIFICATION	0.0036374642161017445	DESIGN
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9971705747280346	WITHOUT_CLASSIFICATION	0.0028294252719653613	DESIGN
SimpleSampler	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9982941356290161	WITHOUT_CLASSIFICATION	0.001705864370983844	DESIGN
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9993255188079782	WITHOUT_CLASSIFICATION	6.744811920218889E-4	DESIGN
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9996870711500851	WITHOUT_CLASSIFICATION	3.129288499147345E-4	DESIGN
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9995398321946355	WITHOUT_CLASSIFICATION	4.6016780536438704E-4	DESIGN
single precision, native	WITHOUT_CLASSIFICATION	0.9995717631795681	WITHOUT_CLASSIFICATION	4.282368204318828E-4	DESIGN
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9997090914170588	WITHOUT_CLASSIFICATION	2.9090858294127006E-4	DESIGN
double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999100655858385	WITHOUT_CLASSIFICATION	8.993441416141684E-5	DESIGN
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9998677358573602	WITHOUT_CLASSIFICATION	1.322641426398188E-4	DESIGN
double precision, native	WITHOUT_CLASSIFICATION	0.9998769164510694	WITHOUT_CLASSIFICATION	1.2308354893059677E-4	DESIGN
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9994042076930226	WITHOUT_CLASSIFICATION	5.957923069774393E-4	DESIGN
signed char	WITHOUT_CLASSIFICATION	0.999830886580687	WITHOUT_CLASSIFICATION	1.6911341931298405E-4	DESIGN
unsigned char	WITHOUT_CLASSIFICATION	0.9997430065391849	WITHOUT_CLASSIFICATION	2.5699346081515314E-4	DESIGN
long, little-endian	WITHOUT_CLASSIFICATION	0.9994784540373363	WITHOUT_CLASSIFICATION	5.21545962663794E-4	DESIGN
long, big-endian	WITHOUT_CLASSIFICATION	0.9994789969243422	WITHOUT_CLASSIFICATION	5.210030756578369E-4	DESIGN
unsigned int, native	WITHOUT_CLASSIFICATION	0.9996478958645681	WITHOUT_CLASSIFICATION	3.521041354318799E-4	DESIGN
int, native	WITHOUT_CLASSIFICATION	0.9995863143111227	WITHOUT_CLASSIFICATION	4.136856888773983E-4	DESIGN
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9996756489922173	WITHOUT_CLASSIFICATION	3.243510077827411E-4	DESIGN
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9777088708764252	WITHOUT_CLASSIFICATION	0.02229112912357489	DESIGN
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999121181723983	WITHOUT_CLASSIFICATION	8.788182760161501E-5	DESIGN
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9661695946896082	WITHOUT_CLASSIFICATION	0.03383040531039188	DESIGN
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9975699678086868	WITHOUT_CLASSIFICATION	0.002430032191313164	DESIGN
obtain a	WITHOUT_CLASSIFICATION	0.9988432870352403	WITHOUT_CLASSIFICATION	0.0011567129647597266	DESIGN
obtain b	WITHOUT_CLASSIFICATION	0.999846122763022	WITHOUT_CLASSIFICATION	1.538772369779592E-4	DESIGN
obtain c	WITHOUT_CLASSIFICATION	0.9995835903534339	WITHOUT_CLASSIFICATION	4.164096465660078E-4	DESIGN
obtain d	WITHOUT_CLASSIFICATION	0.9994502447713027	WITHOUT_CLASSIFICATION	5.497552286972851E-4	DESIGN
encode.limit() -	WITHOUT_CLASSIFICATION	0.9982349293284414	WITHOUT_CLASSIFICATION	0.0017650706715585634	DESIGN
1	WITHOUT_CLASSIFICATION	0.9992706722804294	WITHOUT_CLASSIFICATION	7.29327719570475E-4	DESIGN
2	WITHOUT_CLASSIFICATION	0.9992641075088392	WITHOUT_CLASSIFICATION	7.358924911607371E-4	DESIGN
3	WITHOUT_CLASSIFICATION	0.9980025458074676	WITHOUT_CLASSIFICATION	0.0019974541925324454	DESIGN
4	WITHOUT_CLASSIFICATION	0.9986153312105659	WITHOUT_CLASSIFICATION	0.0013846687894341458	DESIGN
5	WITHOUT_CLASSIFICATION	0.9996776942609803	WITHOUT_CLASSIFICATION	3.223057390196918E-4	DESIGN
6	WITHOUT_CLASSIFICATION	0.9992750847138768	WITHOUT_CLASSIFICATION	7.249152861232372E-4	DESIGN
7	WITHOUT_CLASSIFICATION	0.9988408671139765	WITHOUT_CLASSIFICATION	0.0011591328860235907	DESIGN
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999439516965385	WITHOUT_CLASSIFICATION	5.604830346151881E-5	DESIGN
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9995707920622997	WITHOUT_CLASSIFICATION	4.2920793770030344E-4	DESIGN
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999882056635738	WITHOUT_CLASSIFICATION	1.1794336426164573E-5	DESIGN
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.9837832565540247	WITHOUT_CLASSIFICATION	0.016216743445975335	DESIGN
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9998206730737953	WITHOUT_CLASSIFICATION	1.7932692620461612E-4	DESIGN
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9992900198450316	WITHOUT_CLASSIFICATION	7.099801549684081E-4	DESIGN
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9904129120503555	WITHOUT_CLASSIFICATION	0.009587087949644532	DESIGN
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9993826639653968	WITHOUT_CLASSIFICATION	6.173360346031823E-4	DESIGN
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.9990662633989394	WITHOUT_CLASSIFICATION	9.33736601060524E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.9814728896519678	WITHOUT_CLASSIFICATION	0.0185271103480323	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9718364868234419	WITHOUT_CLASSIFICATION	0.028163513176558096	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9718364868234419	WITHOUT_CLASSIFICATION	0.028163513176558096	DESIGN
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.7232964705872384	WITHOUT_CLASSIFICATION	0.2767035294127616	DESIGN
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9996400379868224	WITHOUT_CLASSIFICATION	3.599620131775587E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9782773202229086	WITHOUT_CLASSIFICATION	0.021722679777091428	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9991431382906927	WITHOUT_CLASSIFICATION	8.568617093073279E-4	DESIGN
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9924609090443169	WITHOUT_CLASSIFICATION	0.007539090955683034	DESIGN
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9982692959805385	WITHOUT_CLASSIFICATION	0.0017307040194614385	DESIGN
are we recursing?	WITHOUT_CLASSIFICATION	0.9992874152501667	WITHOUT_CLASSIFICATION	7.125847498333412E-4	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9997951874731366	WITHOUT_CLASSIFICATION	2.0481252686356443E-4	DESIGN
default PidGetter	WITHOUT_CLASSIFICATION	0.9996750422729302	WITHOUT_CLASSIFICATION	3.249577270697494E-4	DESIGN
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9988054643385702	WITHOUT_CLASSIFICATION	0.0011945356614297775	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9965893582736712	WITHOUT_CLASSIFICATION	0.0034106417263288493	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9965893582736712	WITHOUT_CLASSIFICATION	0.0034106417263288493	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9965893582736712	WITHOUT_CLASSIFICATION	0.0034106417263288493	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9965893582736712	WITHOUT_CLASSIFICATION	0.0034106417263288493	DESIGN
try both	WITHOUT_CLASSIFICATION	0.9982503491776662	WITHOUT_CLASSIFICATION	0.0017496508223338752	DESIGN
just unix	WITHOUT_CLASSIFICATION	0.9992401167969627	WITHOUT_CLASSIFICATION	7.598832030373469E-4	DESIGN
just windows	WITHOUT_CLASSIFICATION	0.9986404471572295	WITHOUT_CLASSIFICATION	0.0013595528427703645	DESIGN
neither	WITHOUT_CLASSIFICATION	0.9989750198954206	WITHOUT_CLASSIFICATION	0.0010249801045793766	DESIGN
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.5016156562829749	WITHOUT_CLASSIFICATION	0.498384343717025	DESIGN
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999465844749019	WITHOUT_CLASSIFICATION	5.341552509794807E-5	DESIGN
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9996347429683726	WITHOUT_CLASSIFICATION	3.652570316274122E-4	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9993971072609439	WITHOUT_CLASSIFICATION	6.02892739056088E-4	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9993971072609439	WITHOUT_CLASSIFICATION	6.02892739056088E-4	DESIGN
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999960616818441	WITHOUT_CLASSIFICATION	3.9383181559132455E-6	DESIGN
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9020782250294853	WITHOUT_CLASSIFICATION	0.09792177497051459	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998703812727644	WITHOUT_CLASSIFICATION	1.2961872723564745E-4	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9989976608804888	WITHOUT_CLASSIFICATION	0.0010023391195112079	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9989976608804888	WITHOUT_CLASSIFICATION	0.0010023391195112079	DESIGN
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9996874881664878	WITHOUT_CLASSIFICATION	3.1251183351228514E-4	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9992637336309167	WITHOUT_CLASSIFICATION	7.362663690832556E-4	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9992637336309167	WITHOUT_CLASSIFICATION	7.362663690832556E-4	DESIGN
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9626250428742337	WITHOUT_CLASSIFICATION	0.03737495712576627	DESIGN
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999993105202847	WITHOUT_CLASSIFICATION	6.894797152518192E-7	DESIGN
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999956038513326	WITHOUT_CLASSIFICATION	4.396148667423329E-6	DESIGN
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9917882613150583	WITHOUT_CLASSIFICATION	0.00821173868494161	DESIGN
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9998816347734193	WITHOUT_CLASSIFICATION	1.183652265807637E-4	DESIGN
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999962084602593	WITHOUT_CLASSIFICATION	3.791539740791386E-6	DESIGN
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9812354181106356	WITHOUT_CLASSIFICATION	0.018764581889364362	DESIGN
sequential	WITHOUT_CLASSIFICATION	0.9997015645525017	WITHOUT_CLASSIFICATION	2.9843544749834757E-4	DESIGN
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999903371765018	WITHOUT_CLASSIFICATION	9.662823498226033E-6	DESIGN
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9998903058510072	WITHOUT_CLASSIFICATION	1.0969414899279051E-4	DESIGN
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9991811667948625	WITHOUT_CLASSIFICATION	8.188332051375141E-4	DESIGN
SignalFacade	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9911408823826283	WITHOUT_CLASSIFICATION	0.008859117617371678	DESIGN
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9956961455058716	WITHOUT_CLASSIFICATION	0.004303854494128335	DESIGN
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9988580204205415	WITHOUT_CLASSIFICATION	0.0011419795794584938	DESIGN
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.8303225175671948	WITHOUT_CLASSIFICATION	0.1696774824328052	DESIGN
Args	WITHOUT_CLASSIFICATION	0.9989895227181784	WITHOUT_CLASSIFICATION	0.0010104772818214957	DESIGN
static methods only	WITHOUT_CLASSIFICATION	0.9984958557023639	WITHOUT_CLASSIFICATION	0.0015041442976361807	DESIGN
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995319579516183	WITHOUT_CLASSIFICATION	4.6804204838174436E-4	DESIGN
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9799311225770045	WITHOUT_CLASSIFICATION	0.02006887742299546	DESIGN
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9990864504990923	WITHOUT_CLASSIFICATION	9.135495009077221E-4	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9984477007577842	WITHOUT_CLASSIFICATION	0.0015522992422157733	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.998765049680737	WITHOUT_CLASSIFICATION	0.0012349503192630874	DESIGN
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9999173521847972	WITHOUT_CLASSIFICATION	8.264781520275999E-5	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9993425406570688	WITHOUT_CLASSIFICATION	6.574593429311914E-4	DESIGN
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9762468943775869	WITHOUT_CLASSIFICATION	0.02375310562241303	DESIGN
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9987161628161587	WITHOUT_CLASSIFICATION	0.0012838371838413618	DESIGN
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999712914520835	WITHOUT_CLASSIFICATION	2.8708547916492783E-5	DESIGN
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.6927751940292811	WITHOUT_CLASSIFICATION	0.30722480597071883	DESIGN
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9983094216985166	WITHOUT_CLASSIFICATION	0.0016905783014833915	DESIGN
..	WITHOUT_CLASSIFICATION	0.995028991668999	WITHOUT_CLASSIFICATION	0.004971008331001004	DESIGN
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9998957831232707	WITHOUT_CLASSIFICATION	1.0421687672930539E-4	DESIGN
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9109325097909636	DESIGN	0.08906749020903643	WITHOUT_CLASSIFICATION
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9971156852814463	WITHOUT_CLASSIFICATION	0.0028843147185537844	DESIGN
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.9990823421605732	WITHOUT_CLASSIFICATION	9.176578394267057E-4	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9771844317463627	WITHOUT_CLASSIFICATION	0.022815568253637262	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998057786234144	WITHOUT_CLASSIFICATION	1.9422137658570246E-4	DESIGN
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9995319579516183	WITHOUT_CLASSIFICATION	4.6804204838174436E-4	DESIGN
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9995526926669887	WITHOUT_CLASSIFICATION	4.4730733301138857E-4	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9771844317463627	WITHOUT_CLASSIFICATION	0.022815568253637262	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9998057786234144	WITHOUT_CLASSIFICATION	1.9422137658570246E-4	DESIGN
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9997430456537322	WITHOUT_CLASSIFICATION	2.5695434626790226E-4	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9951879408760526	WITHOUT_CLASSIFICATION	0.004812059123947473	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9951879408760526	WITHOUT_CLASSIFICATION	0.004812059123947473	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9990527204464664	WITHOUT_CLASSIFICATION	9.472795535336422E-4	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9667605449659668	WITHOUT_CLASSIFICATION	0.033239455034033236	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999807392510754	WITHOUT_CLASSIFICATION	1.9260748924545628E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999171704697863	WITHOUT_CLASSIFICATION	8.282953021371219E-5	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9872658699715384	WITHOUT_CLASSIFICATION	0.012734130028461674	DESIGN
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9909124401621177	WITHOUT_CLASSIFICATION	0.009087559837882252	DESIGN
'.' is printed	WITHOUT_CLASSIFICATION	0.9993519666152119	WITHOUT_CLASSIFICATION	6.480333847881567E-4	DESIGN
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9995278039060483	WITHOUT_CLASSIFICATION	4.721960939517664E-4	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.99843088206168	WITHOUT_CLASSIFICATION	0.001569117938320022	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9991340717359876	WITHOUT_CLASSIFICATION	8.659282640125284E-4	DESIGN
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9991714086571108	WITHOUT_CLASSIFICATION	8.285913428891974E-4	DESIGN
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999720148898072	WITHOUT_CLASSIFICATION	2.7985110192716992E-5	DESIGN
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9997778167813633	WITHOUT_CLASSIFICATION	2.221832186367195E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9996429845454589	WITHOUT_CLASSIFICATION	3.5701545454121074E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9996429845454589	WITHOUT_CLASSIFICATION	3.5701545454121074E-4	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9815222929906015	WITHOUT_CLASSIFICATION	0.01847770700939854	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.9815222929906015	WITHOUT_CLASSIFICATION	0.01847770700939854	DESIGN
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999151544497533	WITHOUT_CLASSIFICATION	8.484555024672694E-5	DESIGN
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
(1|intlen)	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9987058567222514	WITHOUT_CLASSIFICATION	0.001294143277748527	DESIGN
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9989876814397549	WITHOUT_CLASSIFICATION	0.0010123185602450694	DESIGN
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9995319579516183	WITHOUT_CLASSIFICATION	4.6804204838174436E-4	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999807392510754	WITHOUT_CLASSIFICATION	1.9260748924545628E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999171704697863	WITHOUT_CLASSIFICATION	8.282953021371219E-5	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.99843088206168	WITHOUT_CLASSIFICATION	0.001569117938320022	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9991340717359876	WITHOUT_CLASSIFICATION	8.659282640125284E-4	DESIGN
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998662218756198	WITHOUT_CLASSIFICATION	1.337781243801687E-4	DESIGN
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9998770839000619	WITHOUT_CLASSIFICATION	1.2291609993803952E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
dangling '%' char	WITHOUT_CLASSIFICATION	0.9991802918285367	WITHOUT_CLASSIFICATION	8.197081714633793E-4	DESIGN
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.999958409177824	WITHOUT_CLASSIFICATION	4.1590822175918E-5	DESIGN
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9993988186227033	WITHOUT_CLASSIFICATION	6.011813772966817E-4	DESIGN
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9906070129895939	WITHOUT_CLASSIFICATION	0.00939298701040612	DESIGN
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9993727234556595	WITHOUT_CLASSIFICATION	6.272765443404643E-4	DESIGN
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999087673677691	WITHOUT_CLASSIFICATION	9.123263223091553E-5	DESIGN
negative values	WITHOUT_CLASSIFICATION	0.9995362405646662	WITHOUT_CLASSIFICATION	4.6375943533385724E-4	DESIGN
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9999454670717713	WITHOUT_CLASSIFICATION	5.4532928228680374E-5	DESIGN
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999496994539144	WITHOUT_CLASSIFICATION	5.030054608552835E-5	DESIGN
no such luck...	WITHOUT_CLASSIFICATION	0.998905262293218	WITHOUT_CLASSIFICATION	0.001094737706782046	DESIGN
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9822199148615212	WITHOUT_CLASSIFICATION	0.01778008513847885	DESIGN
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9998587093149964	WITHOUT_CLASSIFICATION	1.4129068500361755E-4	DESIGN
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9958380558780023	WITHOUT_CLASSIFICATION	0.004161944121997699	DESIGN
constant vector a	WITHOUT_CLASSIFICATION	0.9962677362671877	WITHOUT_CLASSIFICATION	0.0037322637328122553	DESIGN
most significant w-r bits	WITHOUT_CLASSIFICATION	0.9990126419876435	WITHOUT_CLASSIFICATION	9.873580123564512E-4	DESIGN
least significant r bits	WITHOUT_CLASSIFICATION	0.9993033574794045	WITHOUT_CLASSIFICATION	6.966425205954962E-4	DESIGN
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9987206682634191	WITHOUT_CLASSIFICATION	0.0012793317365809296	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9987206682634191	WITHOUT_CLASSIFICATION	0.0012793317365809296	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9987206682634191	WITHOUT_CLASSIFICATION	0.0012793317365809296	DESIGN
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9998753889821376	WITHOUT_CLASSIFICATION	1.2461101786244894E-4	DESIGN
Tempering	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9997024300767665	WITHOUT_CLASSIFICATION	2.975699232333854E-4	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999538588763823	WITHOUT_CLASSIFICATION	4.6141123617700455E-4	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999538588763823	WITHOUT_CLASSIFICATION	4.6141123617700455E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9995319579516183	WITHOUT_CLASSIFICATION	4.6804204838174436E-4	DESIGN
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9995202276131094	WITHOUT_CLASSIFICATION	4.797723868904795E-4	DESIGN
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9995202276131094	WITHOUT_CLASSIFICATION	4.797723868904795E-4	DESIGN
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995319579516183	WITHOUT_CLASSIFICATION	4.6804204838174436E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9995319579516183	WITHOUT_CLASSIFICATION	4.6804204838174436E-4	DESIGN
no number	WITHOUT_CLASSIFICATION	0.99834551222705	WITHOUT_CLASSIFICATION	0.001654487772950026	DESIGN
trailing garbage	WITHOUT_CLASSIFICATION	0.9996274339994006	WITHOUT_CLASSIFICATION	3.7256600059946737E-4	DESIGN
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9995254293401007	WITHOUT_CLASSIFICATION	4.745706598993774E-4	DESIGN
it was not found at all!	WITHOUT_CLASSIFICATION	0.9970051024930608	WITHOUT_CLASSIFICATION	0.0029948975069390826	DESIGN
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9950681745833166	WITHOUT_CLASSIFICATION	0.004931825416683381	DESIGN
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999177491110571	WITHOUT_CLASSIFICATION	8.225088894295896E-5	DESIGN
goto next bucket	WITHOUT_CLASSIFICATION	0.9978215305440442	WITHOUT_CLASSIFICATION	0.0021784694559558865	DESIGN
we reached the end	WITHOUT_CLASSIFICATION	0.9999564559433979	WITHOUT_CLASSIFICATION	4.3544056602134135E-5	DESIGN
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9976928894818844	WITHOUT_CLASSIFICATION	0.002307110518115628	DESIGN
states	WITHOUT_CLASSIFICATION	0.9987666874938861	WITHOUT_CLASSIFICATION	0.0012333125061139041	DESIGN
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.999362121502909	WITHOUT_CLASSIFICATION	6.378784970909848E-4	DESIGN
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.999975696477533	WITHOUT_CLASSIFICATION	2.4303522467020945E-5	DESIGN
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9990778635269809	WITHOUT_CLASSIFICATION	9.221364730191007E-4	DESIGN
drop through for sign	WITHOUT_CLASSIFICATION	0.9937805228180847	WITHOUT_CLASSIFICATION	0.006219477181915251	DESIGN
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9823713398929331	WITHOUT_CLASSIFICATION	0.017628660107066853	DESIGN
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9981043073142075	WITHOUT_CLASSIFICATION	0.0018956926857924851	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999814033740887	WITHOUT_CLASSIFICATION	1.8596625911317767E-5	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.998994975637091	WITHOUT_CLASSIFICATION	0.0010050243629088722	DESIGN
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9998227170919635	WITHOUT_CLASSIFICATION	1.7728290803658382E-4	DESIGN
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999152718902762	WITHOUT_CLASSIFICATION	8.472810972380019E-4	DESIGN
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9857283533218846	WITHOUT_CLASSIFICATION	0.014271646678115363	DESIGN
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9993021902667389	WITHOUT_CLASSIFICATION	6.978097332609686E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999212448046939	WITHOUT_CLASSIFICATION	7.875519530611752E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999212448046939	WITHOUT_CLASSIFICATION	7.875519530611752E-5	DESIGN
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.9967908657896689	WITHOUT_CLASSIFICATION	0.003209134210331074	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.999269305584875	WITHOUT_CLASSIFICATION	7.306944151249764E-4	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.999269305584875	WITHOUT_CLASSIFICATION	7.306944151249764E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9998901864884221	WITHOUT_CLASSIFICATION	1.0981351157798715E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9998901864884221	WITHOUT_CLASSIFICATION	1.0981351157798715E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9989283474463503	WITHOUT_CLASSIFICATION	0.0010716525536497677	DESIGN
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9998013252533138	WITHOUT_CLASSIFICATION	1.9867474668618074E-4	DESIGN
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999911652824278	WITHOUT_CLASSIFICATION	8.834717572204526E-5	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9996250033015868	WITHOUT_CLASSIFICATION	3.749966984132181E-4	DESIGN
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9985332714272823	WITHOUT_CLASSIFICATION	0.00146672857271768	DESIGN
block	WITHOUT_CLASSIFICATION	0.9997801188231996	WITHOUT_CLASSIFICATION	2.1988117680029695E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9997801188231996	WITHOUT_CLASSIFICATION	2.1988117680029695E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999814033740887	WITHOUT_CLASSIFICATION	1.8596625911317767E-5	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999814033740887	WITHOUT_CLASSIFICATION	1.8596625911317767E-5	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999814033740887	WITHOUT_CLASSIFICATION	1.8596625911317767E-5	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.998994975637091	WITHOUT_CLASSIFICATION	0.0010050243629088722	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999212448046939	WITHOUT_CLASSIFICATION	7.875519530611752E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999212448046939	WITHOUT_CLASSIFICATION	7.875519530611752E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999212448046939	WITHOUT_CLASSIFICATION	7.875519530611752E-5	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9989283474463503	WITHOUT_CLASSIFICATION	0.0010716525536497677	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9989283474463503	WITHOUT_CLASSIFICATION	0.0010716525536497677	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9989283474463503	WITHOUT_CLASSIFICATION	0.0010716525536497677	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9996250033015868	WITHOUT_CLASSIFICATION	3.749966984132181E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9996250033015868	WITHOUT_CLASSIFICATION	3.749966984132181E-4	DESIGN
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.997800987322935	WITHOUT_CLASSIFICATION	0.002199012677065	DESIGN
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9984830145831908	WITHOUT_CLASSIFICATION	0.0015169854168092312	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9987239653717116	WITHOUT_CLASSIFICATION	0.0012760346282883128	DESIGN
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999522502347373	DESIGN	4.774976526278589E-5	WITHOUT_CLASSIFICATION
no digits, error	WITHOUT_CLASSIFICATION	0.9987570921961554	WITHOUT_CLASSIFICATION	0.001242907803844587	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.9992702615710269	WITHOUT_CLASSIFICATION	7.2973842897306E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.9992702615710269	WITHOUT_CLASSIFICATION	7.2973842897306E-4	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9938655784495869	WITHOUT_CLASSIFICATION	0.006134421550413021	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999085707255021	WITHOUT_CLASSIFICATION	9.142927449792596E-5	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999085707255021	WITHOUT_CLASSIFICATION	9.142927449792596E-5	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999085707255021	WITHOUT_CLASSIFICATION	9.142927449792596E-5	DESIGN
first char must be digit	WITHOUT_CLASSIFICATION	0.9997075247948326	WITHOUT_CLASSIFICATION	2.924752051672904E-4	DESIGN
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9975106266101725	WITHOUT_CLASSIFICATION	0.002489373389827529	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.998994975637091	WITHOUT_CLASSIFICATION	0.0010050243629088722	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9989283474463503	WITHOUT_CLASSIFICATION	0.0010716525536497677	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9989283474463503	WITHOUT_CLASSIFICATION	0.0010716525536497677	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999085707255021	WITHOUT_CLASSIFICATION	9.142927449792596E-5	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9938655784495869	WITHOUT_CLASSIFICATION	0.006134421550413021	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9992399198107383	WITHOUT_CLASSIFICATION	7.600801892616917E-4	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9995810962784856	WITHOUT_CLASSIFICATION	4.189037215145076E-4	DESIGN
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9999204044816999	WITHOUT_CLASSIFICATION	7.959551830004275E-5	DESIGN
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9926496724977546	WITHOUT_CLASSIFICATION	0.007350327502245335	DESIGN
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9973872298460041	WITHOUT_CLASSIFICATION	0.0026127701539957896	DESIGN
arg cannot be negative	WITHOUT_CLASSIFICATION	0.999769749573516	WITHOUT_CLASSIFICATION	2.302504264838644E-4	DESIGN
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9747627674046115	WITHOUT_CLASSIFICATION	0.025237232595388518	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.7138513887973597	WITHOUT_CLASSIFICATION	0.28614861120264046	DESIGN
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9997411467513078	WITHOUT_CLASSIFICATION	2.588532486921613E-4	DESIGN
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9953733523962746	WITHOUT_CLASSIFICATION	0.004626647603725518	DESIGN
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9998606233755393	WITHOUT_CLASSIFICATION	1.3937662446073654E-4	DESIGN
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9990449511195308	WITHOUT_CLASSIFICATION	9.550488804690265E-4	DESIGN
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.9995961485613085	WITHOUT_CLASSIFICATION	4.0385143869157693E-4	DESIGN
advance to first entry	WITHOUT_CLASSIFICATION	0.999277640010398	WITHOUT_CLASSIFICATION	7.22359989601992E-4	DESIGN
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.7753368713648799	WITHOUT_CLASSIFICATION	0.22466312863512006	DESIGN
package-protected	WITHOUT_CLASSIFICATION	0.9994658549695178	WITHOUT_CLASSIFICATION	5.341450304822244E-4	DESIGN
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9995890107060428	WITHOUT_CLASSIFICATION	4.1098929395730067E-4	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997193632898648	WITHOUT_CLASSIFICATION	2.806367101352609E-4	DESIGN
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998087506976461	WITHOUT_CLASSIFICATION	1.912493023538403E-4	DESIGN
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998367781451907	WITHOUT_CLASSIFICATION	1.6322185480931132E-4	DESIGN
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.999989951311474	WITHOUT_CLASSIFICATION	1.0048688526084884E-5	DESIGN
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9990622259046987	WITHOUT_CLASSIFICATION	9.377740953012429E-4	DESIGN
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.8131790626605497	WITHOUT_CLASSIFICATION	0.18682093733945032	DESIGN
unread back	WITHOUT_CLASSIFICATION	0.9988754032564325	WITHOUT_CLASSIFICATION	0.0011245967435673891	DESIGN
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9995633622337575	WITHOUT_CLASSIFICATION	4.366377662424665E-4	DESIGN
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9991312257004545	WITHOUT_CLASSIFICATION	8.687742995454825E-4	DESIGN
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9993270954442518	WITHOUT_CLASSIFICATION	6.729045557482736E-4	DESIGN
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999976810918092	WITHOUT_CLASSIFICATION	2.318908190927426E-6	DESIGN
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.9999826717233864	WITHOUT_CLASSIFICATION	1.732827661361022E-5	DESIGN
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9997111087265145	WITHOUT_CLASSIFICATION	2.888912734855595E-4	DESIGN
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9998682563413331	WITHOUT_CLASSIFICATION	1.3174365866680347E-4	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9992399198107383	WITHOUT_CLASSIFICATION	7.600801892616917E-4	DESIGN
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9996168257833662	WITHOUT_CLASSIFICATION	3.831742166337939E-4	DESIGN
not closing from finalize	WITHOUT_CLASSIFICATION	0.9960470703022066	WITHOUT_CLASSIFICATION	0.003952929697793451	DESIGN
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999074004883042	WITHOUT_CLASSIFICATION	9.25995116958222E-5	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9994646055924045	WITHOUT_CLASSIFICATION	5.35394407595475E-4	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9994646055924045	WITHOUT_CLASSIFICATION	5.35394407595475E-4	DESIGN
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999539379277772	WITHOUT_CLASSIFICATION	4.6062072222908224E-5	DESIGN
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999371653430024	WITHOUT_CLASSIFICATION	6.283465699760788E-4	DESIGN
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9995940155911641	WITHOUT_CLASSIFICATION	4.059844088359396E-4	DESIGN
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.998416192728212	WITHOUT_CLASSIFICATION	0.0015838072717879426	DESIGN
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.999744090947964	WITHOUT_CLASSIFICATION	2.559090520359671E-4	DESIGN
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9949211505662983	WITHOUT_CLASSIFICATION	0.005078849433701763	DESIGN
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.996927718958786	WITHOUT_CLASSIFICATION	0.0030722810412140704	DESIGN
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9995135781979396	WITHOUT_CLASSIFICATION	4.864218020604839E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.988569142902759	WITHOUT_CLASSIFICATION	0.011430857097240973	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.999891215630597	WITHOUT_CLASSIFICATION	1.087843694030226E-4	DESIGN
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9998125362979798	WITHOUT_CLASSIFICATION	1.8746370202013185E-4	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999694746486091	WITHOUT_CLASSIFICATION	3.052535139095301E-5	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999694746486091	WITHOUT_CLASSIFICATION	3.052535139095301E-5	DESIGN
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9992233806759883	WITHOUT_CLASSIFICATION	7.766193240118025E-4	DESIGN
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9824236574699553	WITHOUT_CLASSIFICATION	0.017576342530044677	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9974316354764211	WITHOUT_CLASSIFICATION	0.002568364523578842	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9974316354764211	WITHOUT_CLASSIFICATION	0.002568364523578842	DESIGN
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.999994746368102	WITHOUT_CLASSIFICATION	5.253631897939102E-6	DESIGN
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9996488029781234	WITHOUT_CLASSIFICATION	3.511970218766292E-4	DESIGN
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9980519206591135	WITHOUT_CLASSIFICATION	0.0019480793408864813	DESIGN
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9995193984476969	WITHOUT_CLASSIFICATION	4.8060155230319974E-4	DESIGN
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.999956313825467	WITHOUT_CLASSIFICATION	4.3686174532949516E-5	DESIGN
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9531414569032672	WITHOUT_CLASSIFICATION	0.046858543096732826	DESIGN
save the ungot	WITHOUT_CLASSIFICATION	0.9994078787353871	WITHOUT_CLASSIFICATION	5.921212646130119E-4	DESIGN
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9983933249162323	WITHOUT_CLASSIFICATION	0.0016066750837676728	DESIGN
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9942227710693894	WITHOUT_CLASSIFICATION	0.005777228930610562	DESIGN
flush first	WITHOUT_CLASSIFICATION	0.9997607015431529	WITHOUT_CLASSIFICATION	2.3929845684709857E-4	DESIGN
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9988618737752519	WITHOUT_CLASSIFICATION	0.001138126224748119	DESIGN
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.997783963431356	WITHOUT_CLASSIFICATION	0.0022160365686440856	DESIGN
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999823588455141	WITHOUT_CLASSIFICATION	1.76411544858259E-5	DESIGN
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.999458005272351	WITHOUT_CLASSIFICATION	5.419947276489841E-4	DESIGN
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999229482443825	WITHOUT_CLASSIFICATION	7.705175561746675E-5	DESIGN
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9982259303028391	WITHOUT_CLASSIFICATION	0.0017740696971608174	DESIGN
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9959043874804915	WITHOUT_CLASSIFICATION	0.004095612519508544	DESIGN
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9984984067876628	WITHOUT_CLASSIFICATION	0.001501593212337217	DESIGN
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9999377773686042	WITHOUT_CLASSIFICATION	6.22226313957296E-5	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9972767846368078	WITHOUT_CLASSIFICATION	0.0027232153631922534	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.875988240661461	DESIGN	0.12401175933853892	WITHOUT_CLASSIFICATION
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9949959913591226	WITHOUT_CLASSIFICATION	0.0050040086408773415	DESIGN
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9974113666116476	WITHOUT_CLASSIFICATION	0.0025886333883522964	DESIGN
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9998585994300506	WITHOUT_CLASSIFICATION	1.4140056994942196E-4	DESIGN
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9986953614315016	WITHOUT_CLASSIFICATION	0.0013046385684983917	DESIGN
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9967317324890246	WITHOUT_CLASSIFICATION	0.0032682675109753302	DESIGN
else leave it null	WITHOUT_CLASSIFICATION	0.9998677491498986	WITHOUT_CLASSIFICATION	1.322508501014071E-4	DESIGN
TypeMatcher	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9991372079608322	WITHOUT_CLASSIFICATION	8.627920391677369E-4	DESIGN
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9997270987702546	WITHOUT_CLASSIFICATION	2.7290122974541104E-4	DESIGN
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999325115659837	WITHOUT_CLASSIFICATION	6.74884340163243E-5	DESIGN
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999942850031843	WITHOUT_CLASSIFICATION	5.714996815777761E-6	DESIGN
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9992895129028296	WITHOUT_CLASSIFICATION	7.104870971702966E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995282172241556	WITHOUT_CLASSIFICATION	4.717827758442929E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9995282172241556	WITHOUT_CLASSIFICATION	4.717827758442929E-4	DESIGN
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9991551725031238	WITHOUT_CLASSIFICATION	8.448274968762622E-4	DESIGN
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999527810021681	WITHOUT_CLASSIFICATION	4.7218997831975203E-5	DESIGN
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9991649031405161	WITHOUT_CLASSIFICATION	8.350968594839972E-4	DESIGN
Init	WITHOUT_CLASSIFICATION	0.9990184377052251	WITHOUT_CLASSIFICATION	9.815622947748756E-4	DESIGN
Block	WITHOUT_CLASSIFICATION	0.9989459293221615	WITHOUT_CLASSIFICATION	0.0010540706778384486	DESIGN
Copy constructor	WITHOUT_CLASSIFICATION	0.9985447183441418	WITHOUT_CLASSIFICATION	0.0014552816558581329	DESIGN
presumably this require should fail	WITHOUT_CLASSIFICATION	0.9292164070017797	WITHOUT_CLASSIFICATION	0.07078359299822039	DESIGN
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.9292164070017797	WITHOUT_CLASSIFICATION	0.07078359299822039	DESIGN
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999278170305604	WITHOUT_CLASSIFICATION	7.218296943958749E-5	DESIGN
ok	WITHOUT_CLASSIFICATION	0.997703328315188	WITHOUT_CLASSIFICATION	0.0022966716848119547	DESIGN
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.6127460918786768	DESIGN	0.38725390812132315	WITHOUT_CLASSIFICATION
load should work several times in a row	WITHOUT_CLASSIFICATION	0.915835290241626	WITHOUT_CLASSIFICATION	0.08416470975837395	DESIGN
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.999482404297946	WITHOUT_CLASSIFICATION	5.175957020540369E-4	DESIGN
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9997124050646987	WITHOUT_CLASSIFICATION	2.87594935301357E-4	DESIGN
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999852057913937	WITHOUT_CLASSIFICATION	1.4794208606231795E-5	DESIGN
wait for the go signal	WITHOUT_CLASSIFICATION	0.9998878647449234	WITHOUT_CLASSIFICATION	1.1213525507665969E-4	DESIGN
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9805650951941981	WITHOUT_CLASSIFICATION	0.019434904805801893	DESIGN
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999516493400064	WITHOUT_CLASSIFICATION	4.8350659993757064E-5	DESIGN
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9997503763169241	WITHOUT_CLASSIFICATION	2.496236830759691E-4	DESIGN
wait until thread has completed	WITHOUT_CLASSIFICATION	0.999988264689214	WITHOUT_CLASSIFICATION	1.1735310786116347E-5	DESIGN
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9498826305532869	WITHOUT_CLASSIFICATION	0.05011736944671308	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.999952000370965	WITHOUT_CLASSIFICATION	4.79996290349062E-5	DESIGN
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9985043784418531	WITHOUT_CLASSIFICATION	0.0014956215581469364	DESIGN
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.999665466461035	WITHOUT_CLASSIFICATION	3.3453353896495186E-4	DESIGN
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9721167505384803	WITHOUT_CLASSIFICATION	0.027883249461519648	DESIGN
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9964287371434947	WITHOUT_CLASSIFICATION	0.0035712628565052872	DESIGN
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9997295737122691	WITHOUT_CLASSIFICATION	2.704262877308795E-4	DESIGN
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
void methods should work	WITHOUT_CLASSIFICATION	0.9686294646441503	WITHOUT_CLASSIFICATION	0.03137053535584958	DESIGN
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.990238182973538	WITHOUT_CLASSIFICATION	0.009761817026462031	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999942311117689	WITHOUT_CLASSIFICATION	5.768888231184459E-6	DESIGN
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999990262656532	WITHOUT_CLASSIFICATION	9.737343468158576E-7	DESIGN
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.998561658323502	WITHOUT_CLASSIFICATION	0.0014383416764980508	DESIGN
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
int n = 10;	WITHOUT_CLASSIFICATION	0.9998815808832908	WITHOUT_CLASSIFICATION	1.1841911670913516E-4	DESIGN
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998961568751538	WITHOUT_CLASSIFICATION	1.0384312484629773E-4	DESIGN
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9996523733579197	WITHOUT_CLASSIFICATION	3.476266420803552E-4	DESIGN
value equality	WITHOUT_CLASSIFICATION	0.9997171811321385	WITHOUT_CLASSIFICATION	2.8281886786151643E-4	DESIGN
identity equality	WITHOUT_CLASSIFICATION	0.9996159119812947	WITHOUT_CLASSIFICATION	3.8408801870528817E-4	DESIGN
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9991016298801427	WITHOUT_CLASSIFICATION	8.983701198572917E-4	DESIGN
bench Integer fib	WITHOUT_CLASSIFICATION	0.9990265383077835	WITHOUT_CLASSIFICATION	9.734616922165104E-4	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9990186924096465	WITHOUT_CLASSIFICATION	9.813075903535083E-4	DESIGN
bench Long fib	WITHOUT_CLASSIFICATION	0.9993499558927853	WITHOUT_CLASSIFICATION	6.50044107214589E-4	DESIGN
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9667440950652582	WITHOUT_CLASSIFICATION	0.033255904934741835	DESIGN
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9975854531205497	WITHOUT_CLASSIFICATION	0.0024145468794502098	DESIGN
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9965915479102601	WITHOUT_CLASSIFICATION	0.0034084520897399244	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.987570130773406	WITHOUT_CLASSIFICATION	0.012429869226593922	DESIGN
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.6625778654614362	DESIGN	0.33742213453856373	WITHOUT_CLASSIFICATION
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9995524879211211	WITHOUT_CLASSIFICATION	4.475120788788632E-4	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999972277562704	WITHOUT_CLASSIFICATION	2.772243729469226E-6	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9869439660318764	WITHOUT_CLASSIFICATION	0.013056033968123647	DESIGN
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.8839781831245892	WITHOUT_CLASSIFICATION	0.11602181687541079	DESIGN
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9947608024901698	WITHOUT_CLASSIFICATION	0.005239197509830147	DESIGN
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.9998176321454412	WITHOUT_CLASSIFICATION	1.8236785455883698E-4	DESIGN
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.7965818857525053	DESIGN	0.20341811424749473	WITHOUT_CLASSIFICATION
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9943775278285998	WITHOUT_CLASSIFICATION	0.005622472171400199	DESIGN
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9998509814365295	WITHOUT_CLASSIFICATION	1.490185634704513E-4	DESIGN
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9923011009268047	DESIGN	0.007698899073195276	WITHOUT_CLASSIFICATION
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9996494241514395	WITHOUT_CLASSIFICATION	3.5057584856036796E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.997851556888578	WITHOUT_CLASSIFICATION	0.002148443111422001	DESIGN
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9999999142007144	WITHOUT_CLASSIFICATION	8.579928560631687E-8	DESIGN
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9991494055462986	WITHOUT_CLASSIFICATION	8.505944537014218E-4	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999107381241087	WITHOUT_CLASSIFICATION	8.926187589129508E-5	DESIGN
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9993035830022039	WITHOUT_CLASSIFICATION	6.964169977961115E-4	DESIGN
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9971183947888831	WITHOUT_CLASSIFICATION	0.0028816052111168633	DESIGN
construct the proxy method	WITHOUT_CLASSIFICATION	0.9994843930998648	WITHOUT_CLASSIFICATION	5.156069001352084E-4	DESIGN
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9998517236407783	WITHOUT_CLASSIFICATION	1.4827635922173976E-4	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9997088825415601	WITHOUT_CLASSIFICATION	2.911174584398876E-4	DESIGN
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9998517236407783	WITHOUT_CLASSIFICATION	1.4827635922173976E-4	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999987483264525	WITHOUT_CLASSIFICATION	1.2516735474203703E-6	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9997088825415601	WITHOUT_CLASSIFICATION	2.911174584398876E-4	DESIGN
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.999997106859122	WITHOUT_CLASSIFICATION	2.8931408780308796E-6	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9993425406570688	WITHOUT_CLASSIFICATION	6.574593429311914E-4	DESIGN
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9999679504042216	WITHOUT_CLASSIFICATION	3.204959577838557E-5	DESIGN
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.80501190601497	DESIGN	0.19498809398503006	WITHOUT_CLASSIFICATION
check visibility dup method	WITHOUT_CLASSIFICATION	0.998869662146769	WITHOUT_CLASSIFICATION	0.0011303378532309645	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9921091427696385	WITHOUT_CLASSIFICATION	0.007890857230361524	DESIGN
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9996131565270345	WITHOUT_CLASSIFICATION	3.868434729653793E-4	DESIGN
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9817253900120824	WITHOUT_CLASSIFICATION	0.018274609987917606	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9667605449659668	WITHOUT_CLASSIFICATION	0.033239455034033236	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9972767846368078	WITHOUT_CLASSIFICATION	0.0027232153631922534	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9987239653717116	WITHOUT_CLASSIFICATION	0.0012760346282883128	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.987839795066137	WITHOUT_CLASSIFICATION	0.012160204933863057	DESIGN
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9989699437182351	WITHOUT_CLASSIFICATION	0.0010300562817649806	DESIGN
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.9996566425089576	WITHOUT_CLASSIFICATION	3.4335749104242723E-4	DESIGN
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9995810962784856	WITHOUT_CLASSIFICATION	4.189037215145076E-4	DESIGN
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.7252177469028029	WITHOUT_CLASSIFICATION	0.274782253097197	DESIGN
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9893714636521488	WITHOUT_CLASSIFICATION	0.010628536347851176	DESIGN
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9992526216791389	WITHOUT_CLASSIFICATION	7.473783208610584E-4	DESIGN
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.6813876895557347	DESIGN	0.31861231044426547	WITHOUT_CLASSIFICATION
expected	WITHOUT_CLASSIFICATION	0.9998060983760262	WITHOUT_CLASSIFICATION	1.9390162397392712E-4	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9995207863334334	WITHOUT_CLASSIFICATION	4.7921366656657964E-4	DESIGN
constructor	WITHOUT_CLASSIFICATION	0.9978991559332645	WITHOUT_CLASSIFICATION	0.0021008440667355443	DESIGN
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9999850188964489	WITHOUT_CLASSIFICATION	1.4981103551164118E-5	DESIGN
$>: default output handle	WITHOUT_CLASSIFICATION	0.9985276431380322	WITHOUT_CLASSIFICATION	0.0014723568619677983	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9990694133139314	WITHOUT_CLASSIFICATION	9.30586686068669E-4	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998254895134506	WITHOUT_CLASSIFICATION	1.74510486549321E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.5647025267641405	DESIGN	0.4352974732358596	WITHOUT_CLASSIFICATION
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.5647025267641405	DESIGN	0.4352974732358596	WITHOUT_CLASSIFICATION
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9993841840120208	WITHOUT_CLASSIFICATION	6.158159879791686E-4	DESIGN
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999943857283304	WITHOUT_CLASSIFICATION	5.614271669634068E-6	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9976345908192186	WITHOUT_CLASSIFICATION	0.002365409180781431	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6119152993796069	WITHOUT_CLASSIFICATION	0.3880847006203932	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6119152993796069	WITHOUT_CLASSIFICATION	0.3880847006203932	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6119152993796069	WITHOUT_CLASSIFICATION	0.3880847006203932	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6119152993796069	WITHOUT_CLASSIFICATION	0.3880847006203932	DESIGN
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.9966295902067251	WITHOUT_CLASSIFICATION	0.0033704097932748985	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9985210865204418	WITHOUT_CLASSIFICATION	0.0014789134795580943	DESIGN
"else" body	WITHOUT_CLASSIFICATION	0.9997815217618097	WITHOUT_CLASSIFICATION	2.1847823819043895E-4	DESIGN
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.5227020111638562	WITHOUT_CLASSIFICATION	0.477297988836144	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9999518373838051	WITHOUT_CLASSIFICATION	4.816261619483966E-5	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9940755905915591	WITHOUT_CLASSIFICATION	0.005924409408440853	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9940755905915591	WITHOUT_CLASSIFICATION	0.005924409408440853	DESIGN
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9949889885115859	WITHOUT_CLASSIFICATION	0.005011011488414144	DESIGN
10!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9999039083733472	WITHOUT_CLASSIFICATION	9.609162665282158E-5	DESIGN
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.8438526905277626	WITHOUT_CLASSIFICATION	0.15614730947223737	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9997789216066588	WITHOUT_CLASSIFICATION	2.2107839334124105E-4	DESIGN
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9996253675033755	WITHOUT_CLASSIFICATION	3.7463249662447474E-4	DESIGN
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.998983321702117	WITHOUT_CLASSIFICATION	0.0010166782978830245	DESIGN
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999300934533707	WITHOUT_CLASSIFICATION	6.990654662921987E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999987483264525	WITHOUT_CLASSIFICATION	1.2516735474203703E-6	DESIGN
line 449	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 495	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
Management/monitoring	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.999998449257907	WITHOUT_CLASSIFICATION	1.5507420930042802E-6	DESIGN
14!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9999457614642442	WITHOUT_CLASSIFICATION	5.4238535755793053E-5	DESIGN
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9953573982764438	WITHOUT_CLASSIFICATION	0.004642601723556148	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999883982282088	WITHOUT_CLASSIFICATION	1.1601771791149664E-5	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999883982282088	WITHOUT_CLASSIFICATION	1.1601771791149664E-5	DESIGN
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9999039083733472	WITHOUT_CLASSIFICATION	9.609162665282158E-5	DESIGN
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.996733375363888	WITHOUT_CLASSIFICATION	0.0032666246361119874	DESIGN
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9962961826990197	WITHOUT_CLASSIFICATION	0.0037038173009804284	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.9999553088697403	WITHOUT_CLASSIFICATION	4.469113025980698E-5	DESIGN
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9995108619778961	WITHOUT_CLASSIFICATION	4.891380221039405E-4	DESIGN
18!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9996253884266748	WITHOUT_CLASSIFICATION	3.7461157332520514E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9774411456853502	WITHOUT_CLASSIFICATION	0.022558854314649802	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9774411456853502	WITHOUT_CLASSIFICATION	0.022558854314649802	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9774411456853502	WITHOUT_CLASSIFICATION	0.022558854314649802	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9774411456853502	WITHOUT_CLASSIFICATION	0.022558854314649802	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9994868594154888	WITHOUT_CLASSIFICATION	5.131405845112263E-4	DESIGN
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.9881804299930996	WITHOUT_CLASSIFICATION	0.011819570006900457	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9949888960210244	WITHOUT_CLASSIFICATION	0.005011103978975702	DESIGN
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9993016350915377	WITHOUT_CLASSIFICATION	6.983649084623113E-4	DESIGN
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999857772373688	WITHOUT_CLASSIFICATION	1.422276263130131E-5	DESIGN
22!	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9995662120516643	WITHOUT_CLASSIFICATION	4.337879483357669E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978353301912535	WITHOUT_CLASSIFICATION	0.002164669808746452	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978353301912535	WITHOUT_CLASSIFICATION	0.002164669808746452	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978353301912535	WITHOUT_CLASSIFICATION	0.002164669808746452	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999179315221688	WITHOUT_CLASSIFICATION	8.206847783120852E-5	DESIGN
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9995268179040624	WITHOUT_CLASSIFICATION	4.731820959376576E-4	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.978049732619267	WITHOUT_CLASSIFICATION	0.021950267380733104	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.978049732619267	WITHOUT_CLASSIFICATION	0.021950267380733104	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9999999131456448	WITHOUT_CLASSIFICATION	8.685435514303948E-8	DESIGN
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.8842895831269357	WITHOUT_CLASSIFICATION	0.1157104168730643	DESIGN
BASE64	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9999815413883227	WITHOUT_CLASSIFICATION	1.8458611677223858E-5	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9976939206577209	WITHOUT_CLASSIFICATION	0.0023060793422791967	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9971694878255766	WITHOUT_CLASSIFICATION	0.0028305121744233767	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9971694878255766	WITHOUT_CLASSIFICATION	0.0028305121744233767	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9988688487260112	WITHOUT_CLASSIFICATION	0.0011311512739888196	DESIGN
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.999999981694892	WITHOUT_CLASSIFICATION	1.830510799674716E-8	DESIGN
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.71873363118742	WITHOUT_CLASSIFICATION	0.2812663688125801	DESIGN
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9983361097374258	WITHOUT_CLASSIFICATION	0.00166389026257429	DESIGN
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9954380370547159	WITHOUT_CLASSIFICATION	0.004561962945284071	DESIGN
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999890375975918	WITHOUT_CLASSIFICATION	1.0962402408140297E-5	DESIGN
carriage return	WITHOUT_CLASSIFICATION	0.999669855155639	WITHOUT_CLASSIFICATION	3.3014484436101035E-4	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9980133379429329	WITHOUT_CLASSIFICATION	0.0019866620570671975	DESIGN
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9999604723478797	WITHOUT_CLASSIFICATION	3.952765212036454E-5	DESIGN
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.9999981466356157	WITHOUT_CLASSIFICATION	1.8533643842764185E-6	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9998542557991599	WITHOUT_CLASSIFICATION	1.4574420084006965E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9973302867629006	WITHOUT_CLASSIFICATION	0.002669713237099406	DESIGN
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999916091111551	WITHOUT_CLASSIFICATION	8.390888844923107E-6	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999701958847076	WITHOUT_CLASSIFICATION	2.980411529246483E-5	DESIGN
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9880208837797196	WITHOUT_CLASSIFICATION	0.01197911622028038	DESIGN
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9836829388957363	WITHOUT_CLASSIFICATION	0.016317061104263668	DESIGN
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9994265033989009	WITHOUT_CLASSIFICATION	5.734966010990813E-4	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999069782386114	WITHOUT_CLASSIFICATION	9.302176138854142E-5	DESIGN
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999169005289262	WITHOUT_CLASSIFICATION	8.309947107386012E-5	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999967288862979	WITHOUT_CLASSIFICATION	3.271113702227697E-6	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.998256427356123	WITHOUT_CLASSIFICATION	0.0017435726438770718	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9986765673854824	WITHOUT_CLASSIFICATION	0.0013234326145176519	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9986765673854824	WITHOUT_CLASSIFICATION	0.0013234326145176519	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9986765673854824	WITHOUT_CLASSIFICATION	0.0013234326145176519	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9986765673854824	WITHOUT_CLASSIFICATION	0.0013234326145176519	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9986765673854824	WITHOUT_CLASSIFICATION	0.0013234326145176519	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9986765673854824	WITHOUT_CLASSIFICATION	0.0013234326145176519	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9986765673854824	WITHOUT_CLASSIFICATION	0.0013234326145176519	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9986765673854824	WITHOUT_CLASSIFICATION	0.0013234326145176519	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9728262982798049	WITHOUT_CLASSIFICATION	0.02717370172019506	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.999606353726835	WITHOUT_CLASSIFICATION	3.936462731649698E-4	DESIGN
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9995228315824983	WITHOUT_CLASSIFICATION	4.7716841750161497E-4	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9890362783671999	DESIGN	0.01096372163280009	WITHOUT_CLASSIFICATION
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.987570130773406	WITHOUT_CLASSIFICATION	0.012429869226593922	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.987570130773406	WITHOUT_CLASSIFICATION	0.012429869226593922	DESIGN
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999784324642383	WITHOUT_CLASSIFICATION	2.1567535761682295E-5	DESIGN
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9975032522307533	DESIGN	0.002496747769246636	WITHOUT_CLASSIFICATION
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9994026667333937	WITHOUT_CLASSIFICATION	5.973332666061705E-4	DESIGN
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9994470136150071	WITHOUT_CLASSIFICATION	5.52986384992968E-4	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999155548766842	WITHOUT_CLASSIFICATION	8.44451233159631E-5	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9995565189765471	WITHOUT_CLASSIFICATION	4.434810234529761E-4	DESIGN
read	WITHOUT_CLASSIFICATION	0.9993117754789975	WITHOUT_CLASSIFICATION	6.882245210026016E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6562354360875928	DESIGN	0.34376456391240723	WITHOUT_CLASSIFICATION
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9943452593276605	WITHOUT_CLASSIFICATION	0.00565474067233952	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9904451246801461	WITHOUT_CLASSIFICATION	0.009554875319853877	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9904451246801461	WITHOUT_CLASSIFICATION	0.009554875319853877	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9904451246801461	WITHOUT_CLASSIFICATION	0.009554875319853877	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9979464196728131	WITHOUT_CLASSIFICATION	0.0020535803271870016	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9995509441217104	WITHOUT_CLASSIFICATION	4.4905587828955395E-4	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9982646228963308	WITHOUT_CLASSIFICATION	0.0017353771036693114	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.9992742481924766	WITHOUT_CLASSIFICATION	7.25751807523362E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9989333072847968	WITHOUT_CLASSIFICATION	0.0010666927152031558	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9970333523056322	WITHOUT_CLASSIFICATION	0.002966647694367806	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.999729815777753	WITHOUT_CLASSIFICATION	2.7018422224701016E-4	DESIGN
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9994014087599393	WITHOUT_CLASSIFICATION	5.985912400607271E-4	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.976483164541932	WITHOUT_CLASSIFICATION	0.02351683545806814	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.976483164541932	WITHOUT_CLASSIFICATION	0.02351683545806814	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.99960548214612	WITHOUT_CLASSIFICATION	3.945178538800384E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999811939639681	WITHOUT_CLASSIFICATION	1.880603603189587E-5	DESIGN
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9990711396986628	WITHOUT_CLASSIFICATION	9.288603013370793E-4	DESIGN
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9997957721632863	WITHOUT_CLASSIFICATION	2.0422783671378302E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9998581298994893	WITHOUT_CLASSIFICATION	1.418701005106435E-4	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9998581298994893	WITHOUT_CLASSIFICATION	1.418701005106435E-4	DESIGN
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9443697785770541	DESIGN	0.055630221422946026	WITHOUT_CLASSIFICATION
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999087941573845	WITHOUT_CLASSIFICATION	9.120584261542911E-5	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9986619476541493	WITHOUT_CLASSIFICATION	0.0013380523458506274	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
self	WITHOUT_CLASSIFICATION	0.9974465540784463	WITHOUT_CLASSIFICATION	0.0025534459215536356	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9993432558770464	WITHOUT_CLASSIFICATION	6.567441229536507E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9990384899131804	WITHOUT_CLASSIFICATION	9.615100868195428E-4	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9990384899131804	WITHOUT_CLASSIFICATION	9.615100868195428E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9997359721300525	WITHOUT_CLASSIFICATION	2.6402786994749865E-4	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9997359721300525	WITHOUT_CLASSIFICATION	2.6402786994749865E-4	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9983259701189665	WITHOUT_CLASSIFICATION	0.0016740298810334795	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999571587560473	WITHOUT_CLASSIFICATION	4.284124395283001E-5	DESIGN
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999093888809741	WITHOUT_CLASSIFICATION	9.061111902577272E-5	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999283620963791	WITHOUT_CLASSIFICATION	7.163790362091512E-5	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999767658709021	WITHOUT_CLASSIFICATION	2.3234129097907718E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9997801188231996	WITHOUT_CLASSIFICATION	2.1988117680029695E-4	DESIGN
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.999951891040045	WITHOUT_CLASSIFICATION	4.810895995504082E-5	DESIGN
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9856859738947542	WITHOUT_CLASSIFICATION	0.014314026105245698	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8746419779199968	WITHOUT_CLASSIFICATION	0.12535802208000318	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995723408260707	WITHOUT_CLASSIFICATION	4.276591739292154E-4	DESIGN
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.993916360109051	WITHOUT_CLASSIFICATION	0.006083639890948861	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999859750410736	WITHOUT_CLASSIFICATION	1.4024958926525228E-5	DESIGN
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9565032347650806	WITHOUT_CLASSIFICATION	0.0434967652349195	DESIGN
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9939360042719951	WITHOUT_CLASSIFICATION	0.006063995728004797	DESIGN
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9894544645798093	WITHOUT_CLASSIFICATION	0.010545535420190658	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.991885526907228	WITHOUT_CLASSIFICATION	0.008114473092771997	DESIGN
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999987299602158	WITHOUT_CLASSIFICATION	1.270039784240622E-6	DESIGN
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9996628432516931	WITHOUT_CLASSIFICATION	3.371567483069642E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.987839795066137	WITHOUT_CLASSIFICATION	0.012160204933863057	DESIGN
arg	WITHOUT_CLASSIFICATION	0.99926599551988	WITHOUT_CLASSIFICATION	7.340044801198673E-4	DESIGN
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999968847357809	WITHOUT_CLASSIFICATION	3.115264219073165E-6	DESIGN
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999023576407177	WITHOUT_CLASSIFICATION	9.764235928228494E-5	DESIGN
coerce arguments	WITHOUT_CLASSIFICATION	0.9993079877412335	WITHOUT_CLASSIFICATION	6.920122587665324E-4	DESIGN
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9994330103073649	WITHOUT_CLASSIFICATION	5.669896926352519E-4	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9998060983760262	WITHOUT_CLASSIFICATION	1.9390162397392712E-4	DESIGN
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9997047587879535	WITHOUT_CLASSIFICATION	2.952412120464086E-4	DESIGN
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9991785061584978	WITHOUT_CLASSIFICATION	8.21493841502164E-4	DESIGN
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9978469376068998	WITHOUT_CLASSIFICATION	0.00215306239310027	DESIGN
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9991024925493475	WITHOUT_CLASSIFICATION	8.97507450652507E-4	DESIGN
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9994763166338816	WITHOUT_CLASSIFICATION	5.236833661183741E-4	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.993760086811449	WITHOUT_CLASSIFICATION	0.006239913188550996	DESIGN
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999282078497506	WITHOUT_CLASSIFICATION	7.17921502493963E-5	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998039963518165	WITHOUT_CLASSIFICATION	1.9600364818359584E-4	DESIGN
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9998290233705304	WITHOUT_CLASSIFICATION	1.709766294696985E-4	DESIGN
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9975220461588088	WITHOUT_CLASSIFICATION	0.0024779538411911035	DESIGN
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.997614718491981	WITHOUT_CLASSIFICATION	0.002385281508018894	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.9998703771066241	WITHOUT_CLASSIFICATION	1.2962289337603637E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9092015138228327	WITHOUT_CLASSIFICATION	0.0907984861771673	DESIGN
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.8552347821240923	WITHOUT_CLASSIFICATION	0.14476521787590765	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9989194420937247	WITHOUT_CLASSIFICATION	0.0010805579062752244	DESIGN
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9983298969775413	WITHOUT_CLASSIFICATION	0.0016701030224586587	DESIGN
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999675225473214	WITHOUT_CLASSIFICATION	3.247745267866324E-5	DESIGN
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9882626132127805	WITHOUT_CLASSIFICATION	0.011737386787219448	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.995529046303742	WITHOUT_CLASSIFICATION	0.0044709536962581	DESIGN
specific arity	WITHOUT_CLASSIFICATION	0.9990590308189163	WITHOUT_CLASSIFICATION	9.409691810836251E-4	DESIGN
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999998928591783	WITHOUT_CLASSIFICATION	1.0714082158486187E-7	DESIGN
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999895010998395	WITHOUT_CLASSIFICATION	1.0498900160407222E-5	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9986144626294152	WITHOUT_CLASSIFICATION	0.0013855373705847105	DESIGN
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9997590734490398	WITHOUT_CLASSIFICATION	2.4092655096033452E-4	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9983343311300823	WITHOUT_CLASSIFICATION	0.0016656688699176864	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9983343311300823	WITHOUT_CLASSIFICATION	0.0016656688699176864	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998025381367357	WITHOUT_CLASSIFICATION	1.9746186326427507E-4	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998025381367357	WITHOUT_CLASSIFICATION	1.9746186326427507E-4	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9615634965508313	WITHOUT_CLASSIFICATION	0.038436503449168706	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9615634965508313	WITHOUT_CLASSIFICATION	0.038436503449168706	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9985040610475274	WITHOUT_CLASSIFICATION	0.0014959389524724818	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9985040610475274	WITHOUT_CLASSIFICATION	0.0014959389524724818	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9954428011605587	WITHOUT_CLASSIFICATION	0.004557198839441255	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9954428011605587	WITHOUT_CLASSIFICATION	0.004557198839441255	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9954428011605587	WITHOUT_CLASSIFICATION	0.004557198839441255	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9987136194509617	WITHOUT_CLASSIFICATION	0.0012863805490382631	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999538889029512	WITHOUT_CLASSIFICATION	4.611109704871576E-5	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999538889029512	WITHOUT_CLASSIFICATION	4.611109704871576E-5	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999538889029512	WITHOUT_CLASSIFICATION	4.611109704871576E-5	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9975336963665485	WITHOUT_CLASSIFICATION	0.002466303633451509	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9975336963665485	WITHOUT_CLASSIFICATION	0.002466303633451509	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9975336963665485	WITHOUT_CLASSIFICATION	0.002466303633451509	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9987140702694227	WITHOUT_CLASSIFICATION	0.0012859297305773572	DESIGN
backspace	WITHOUT_CLASSIFICATION	0.9989693042749608	WITHOUT_CLASSIFICATION	0.0010306957250392232	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
package-private	WITHOUT_CLASSIFICATION	0.9994540171067191	WITHOUT_CLASSIFICATION	5.459828932808937E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.999606353726835	WITHOUT_CLASSIFICATION	3.936462731649698E-4	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.999606353726835	WITHOUT_CLASSIFICATION	3.936462731649698E-4	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.967335729203585	WITHOUT_CLASSIFICATION	0.032664270796415054	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997473770535	WITHOUT_CLASSIFICATION	2.526229465542197E-7	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997473770535	WITHOUT_CLASSIFICATION	2.526229465542197E-7	DESIGN
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.5191866041238519	WITHOUT_CLASSIFICATION	0.4808133958761481	DESIGN
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999585790921826	WITHOUT_CLASSIFICATION	4.1420907817520735E-5	DESIGN
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9994722358131707	WITHOUT_CLASSIFICATION	5.277641868293196E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998074131221432	WITHOUT_CLASSIFICATION	1.9258687785678958E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998074131221432	WITHOUT_CLASSIFICATION	1.9258687785678958E-4	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8024038343391771	WITHOUT_CLASSIFICATION	0.19759616566082294	DESIGN
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999603200183506	WITHOUT_CLASSIFICATION	3.96799816494852E-5	DESIGN
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9432895272379045	WITHOUT_CLASSIFICATION	0.056710472762095517	DESIGN
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.986464674964648	DESIGN	0.013535325035352113	WITHOUT_CLASSIFICATION
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9974692892323859	WITHOUT_CLASSIFICATION	0.0025307107676142008	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998074131221432	WITHOUT_CLASSIFICATION	1.9258687785678958E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998074131221432	WITHOUT_CLASSIFICATION	1.9258687785678958E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998074131221432	WITHOUT_CLASSIFICATION	1.9258687785678958E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998074131221432	WITHOUT_CLASSIFICATION	1.9258687785678958E-4	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998074131221432	WITHOUT_CLASSIFICATION	1.9258687785678958E-4	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.999753720086083	WITHOUT_CLASSIFICATION	2.462799139170155E-4	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9991977024681958	WITHOUT_CLASSIFICATION	8.022975318042098E-4	DESIGN
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9986784236735807	WITHOUT_CLASSIFICATION	0.0013215763264192262	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997164120234481	WITHOUT_CLASSIFICATION	2.835879765519069E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9998943253356329	WITHOUT_CLASSIFICATION	1.0567466436702268E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9990208341239784	WITHOUT_CLASSIFICATION	9.791658760216388E-4	DESIGN
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9688599816501249	DESIGN	0.031140018349875117	WITHOUT_CLASSIFICATION
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9945531268990289	WITHOUT_CLASSIFICATION	0.005446873100971157	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9879224371112921	WITHOUT_CLASSIFICATION	0.012077562888707809	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.9987891762354779	WITHOUT_CLASSIFICATION	0.0012108237645220348	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.998953033523383	WITHOUT_CLASSIFICATION	0.0010469664766169973	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.997851556888578	WITHOUT_CLASSIFICATION	0.002148443111422001	DESIGN
only public methods	WITHOUT_CLASSIFICATION	0.9999530192079967	WITHOUT_CLASSIFICATION	4.698079200335651E-5	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998626453070155	WITHOUT_CLASSIFICATION	1.3735469298450836E-4	DESIGN
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9998350680310999	WITHOUT_CLASSIFICATION	1.6493196890002008E-4	DESIGN
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.9001067592413966	WITHOUT_CLASSIFICATION	0.0998932407586034	DESIGN
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9991649269998606	WITHOUT_CLASSIFICATION	8.350730001393142E-4	DESIGN
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9999994259662159	WITHOUT_CLASSIFICATION	5.74033784148844E-7	DESIGN
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9994172403377312	WITHOUT_CLASSIFICATION	5.827596622688448E-4	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9998195709107403	WITHOUT_CLASSIFICATION	1.8042908925971604E-4	DESIGN
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9994388907907461	WITHOUT_CLASSIFICATION	5.611092092539159E-4	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9996462006478493	WITHOUT_CLASSIFICATION	3.5379935215068325E-4	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999972277562704	WITHOUT_CLASSIFICATION	2.772243729469226E-6	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9985553163533029	WITHOUT_CLASSIFICATION	0.0014446836466971314	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9985553163533029	WITHOUT_CLASSIFICATION	0.0014446836466971314	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9985553163533029	WITHOUT_CLASSIFICATION	0.0014446836466971314	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9985553163533029	WITHOUT_CLASSIFICATION	0.0014446836466971314	DESIGN
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999911043916987	WITHOUT_CLASSIFICATION	8.895608301271273E-6	DESIGN
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9989529887318565	WITHOUT_CLASSIFICATION	0.0010470112681435473	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998117291330804	WITHOUT_CLASSIFICATION	1.8827086691961692E-4	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998117291330804	WITHOUT_CLASSIFICATION	1.8827086691961692E-4	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9827774172257955	WITHOUT_CLASSIFICATION	0.017222582774204433	DESIGN
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.9991142090984053	WITHOUT_CLASSIFICATION	8.857909015946127E-4	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9995112556219402	WITHOUT_CLASSIFICATION	4.88744378059867E-4	DESIGN
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999323331299227	WITHOUT_CLASSIFICATION	6.76668700772844E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9980588894048815	WITHOUT_CLASSIFICATION	0.0019411105951184743	DESIGN
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9975358456642224	WITHOUT_CLASSIFICATION	0.00246415433577758	DESIGN
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9997366725140817	WITHOUT_CLASSIFICATION	2.6332748591832413E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9994086295241916	WITHOUT_CLASSIFICATION	5.913704758083128E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9994086295241916	WITHOUT_CLASSIFICATION	5.913704758083128E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9994086295241916	WITHOUT_CLASSIFICATION	5.913704758083128E-4	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9994086295241916	WITHOUT_CLASSIFICATION	5.913704758083128E-4	DESIGN
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999978294107104	WITHOUT_CLASSIFICATION	2.1705892896039832E-6	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9985720901748205	WITHOUT_CLASSIFICATION	0.001427909825179549	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9985720901748205	WITHOUT_CLASSIFICATION	0.001427909825179549	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9985720901748205	WITHOUT_CLASSIFICATION	0.001427909825179549	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9963810782300685	WITHOUT_CLASSIFICATION	0.003618921769931545	DESIGN
finally with no exception	WITHOUT_CLASSIFICATION	0.9974041444223967	WITHOUT_CLASSIFICATION	0.0025958555776033343	DESIGN
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9964934228132835	WITHOUT_CLASSIFICATION	0.0035065771867166745	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6119152993796069	WITHOUT_CLASSIFICATION	0.3880847006203932	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6119152993796069	WITHOUT_CLASSIFICATION	0.3880847006203932	DESIGN
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.7831355414838163	WITHOUT_CLASSIFICATION	0.21686445851618377	DESIGN
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999809220901466	WITHOUT_CLASSIFICATION	1.9077909853505198E-5	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9879560892227511	WITHOUT_CLASSIFICATION	0.012043910777248878	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9879560892227511	WITHOUT_CLASSIFICATION	0.012043910777248878	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9400218735538003	WITHOUT_CLASSIFICATION	0.059978126446199743	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9400218735538003	WITHOUT_CLASSIFICATION	0.059978126446199743	DESIGN
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9994632498333539	WITHOUT_CLASSIFICATION	5.367501666460692E-4	DESIGN
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9873888451873873	WITHOUT_CLASSIFICATION	0.012611154812612687	DESIGN
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9991262055428153	WITHOUT_CLASSIFICATION	8.737944571845964E-4	DESIGN
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999617959143992	WITHOUT_CLASSIFICATION	3.820408560077763E-5	DESIGN
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.9987963582417044	WITHOUT_CLASSIFICATION	0.0012036417582954907	DESIGN
create the default thread group	WITHOUT_CLASSIFICATION	0.9998080587457975	WITHOUT_CLASSIFICATION	1.9194125420248203E-4	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999201182922693	WITHOUT_CLASSIFICATION	7.988170773069082E-4	DESIGN
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9916062349418182	WITHOUT_CLASSIFICATION	0.008393765058181795	DESIGN
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.978352124682756	WITHOUT_CLASSIFICATION	0.021647875317243936	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9792049654561013	WITHOUT_CLASSIFICATION	0.0207950345438987	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9792049654561013	WITHOUT_CLASSIFICATION	0.0207950345438987	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998244245881237	WITHOUT_CLASSIFICATION	1.7557541187625202E-4	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998244245881237	WITHOUT_CLASSIFICATION	1.7557541187625202E-4	DESIGN
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9991639063930137	WITHOUT_CLASSIFICATION	8.360936069861813E-4	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9996519705207348	WITHOUT_CLASSIFICATION	3.4802947926509416E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9990323595462999	WITHOUT_CLASSIFICATION	9.676404537001837E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9990323595462999	WITHOUT_CLASSIFICATION	9.676404537001837E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9990323595462999	WITHOUT_CLASSIFICATION	9.676404537001837E-4	DESIGN
line 286	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 476	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 513	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 530	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 533	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 551	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
end loop	WITHOUT_CLASSIFICATION	0.9999585381854016	WITHOUT_CLASSIFICATION	4.146181459839852E-5	DESIGN
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998852461941822	WITHOUT_CLASSIFICATION	1.1475380581779292E-4	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9948298682859489	WITHOUT_CLASSIFICATION	0.00517013171405116	DESIGN
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9933111080978857	WITHOUT_CLASSIFICATION	0.006688891902114322	DESIGN
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9992314581401679	WITHOUT_CLASSIFICATION	7.685418598320084E-4	DESIGN
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9992370869464291	WITHOUT_CLASSIFICATION	7.62913053570782E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.6119152993796069	WITHOUT_CLASSIFICATION	0.3880847006203932	DESIGN
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9903646225442422	WITHOUT_CLASSIFICATION	0.009635377455757897	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9994139658018416	WITHOUT_CLASSIFICATION	5.860341981583929E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.5647025267641405	DESIGN	0.4352974732358596	WITHOUT_CLASSIFICATION
value	WITHOUT_CLASSIFICATION	0.9994730531267246	WITHOUT_CLASSIFICATION	5.269468732752543E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9994730531267246	WITHOUT_CLASSIFICATION	5.269468732752543E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9994730531267246	WITHOUT_CLASSIFICATION	5.269468732752543E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9994730531267246	WITHOUT_CLASSIFICATION	5.269468732752543E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9994730531267246	WITHOUT_CLASSIFICATION	5.269468732752543E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9989291492028556	WITHOUT_CLASSIFICATION	0.0010708507971444055	DESIGN
value	WITHOUT_CLASSIFICATION	0.9994730531267246	WITHOUT_CLASSIFICATION	5.269468732752543E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9994730531267246	WITHOUT_CLASSIFICATION	5.269468732752543E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.9994730531267246	WITHOUT_CLASSIFICATION	5.269468732752543E-4	DESIGN
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.8461228959451276	WITHOUT_CLASSIFICATION	0.15387710405487245	DESIGN
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9945357207446999	WITHOUT_CLASSIFICATION	0.0054642792553001975	DESIGN
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9994683815120643	WITHOUT_CLASSIFICATION	5.316184879356425E-4	DESIGN
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9997554894845856	WITHOUT_CLASSIFICATION	2.445105154143614E-4	DESIGN
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9958463270527833	WITHOUT_CLASSIFICATION	0.004153672947216712	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999189873883806	WITHOUT_CLASSIFICATION	8.10126116194065E-5	DESIGN
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999960189841414	WITHOUT_CLASSIFICATION	3.98101585864107E-6	DESIGN
line 572	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 625	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 649	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 723	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 745	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 766	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 800	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 812	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 827	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 864	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 886	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 911	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 929	WITHOUT_CLASSIFICATION	0.9997000671409247	WITHOUT_CLASSIFICATION	2.9993285907521487E-4	DESIGN
line 952	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 970	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 991	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1011	WITHOUT_CLASSIFICATION	0.9976986692336084	WITHOUT_CLASSIFICATION	0.0023013307663915642	DESIGN
line 1026	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1067	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1085	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1145	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1169	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1201	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1229	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1287	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1293	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1307	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1325	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1363	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1398	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1473	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1492	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1523	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1562	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1582	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1620	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1635	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1652	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1681	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1755	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1789	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9993418374237255	WITHOUT_CLASSIFICATION	6.581625762745311E-4	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9992308508639505	WITHOUT_CLASSIFICATION	7.69149136049508E-4	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9815133632782863	WITHOUT_CLASSIFICATION	0.018486636721713648	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.7908124373002464	WITHOUT_CLASSIFICATION	0.20918756269975367	DESIGN
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999793570364021	WITHOUT_CLASSIFICATION	2.0642963597971875E-5	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9973342146144727	WITHOUT_CLASSIFICATION	0.002665785385527199	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9973342146144727	WITHOUT_CLASSIFICATION	0.002665785385527199	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9973342146144727	WITHOUT_CLASSIFICATION	0.002665785385527199	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9973342146144727	WITHOUT_CLASSIFICATION	0.002665785385527199	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.976266983583379	DESIGN	0.023733016416620942	WITHOUT_CLASSIFICATION
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.9951877426068615	WITHOUT_CLASSIFICATION	0.004812257393138598	DESIGN
line 313	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 339	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 361	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 413	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 451	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 472	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 500	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 515	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 555	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 582	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 619	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 636	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 669	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 703	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 776	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 814	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 823	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 854	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 872	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 905	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 925	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 958	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 992	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1047	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1072	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1081	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1108	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1136	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1168	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1192	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1241	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1267	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1286	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1301	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1314	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1333	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1362	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1395	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1420	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1439	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1476	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1535	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1588	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1618	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1643	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1669	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1728	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1753	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1779	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1794	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1812	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1837	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1895	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1925	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1950	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 1992	WITHOUT_CLASSIFICATION	0.9996809517473887	WITHOUT_CLASSIFICATION	3.1904825261133734E-4	DESIGN
line 2014	WITHOUT_CLASSIFICATION	0.9996822926221708	WITHOUT_CLASSIFICATION	3.1770737782924307E-4	DESIGN
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.956956691823451	WITHOUT_CLASSIFICATION	0.04304330817654897	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9973125811832381	WITHOUT_CLASSIFICATION	0.002687418816761996	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999705402845168	WITHOUT_CLASSIFICATION	2.9459715483172113E-5	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999705402845168	WITHOUT_CLASSIFICATION	2.9459715483172113E-5	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999705402845168	WITHOUT_CLASSIFICATION	2.9459715483172113E-5	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999705402845168	WITHOUT_CLASSIFICATION	2.9459715483172113E-5	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999705402845168	WITHOUT_CLASSIFICATION	2.9459715483172113E-5	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999705402845168	WITHOUT_CLASSIFICATION	2.9459715483172113E-5	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999705402845168	WITHOUT_CLASSIFICATION	2.9459715483172113E-5	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.97312462957282	WITHOUT_CLASSIFICATION	0.026875370427180117	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.97312462957282	WITHOUT_CLASSIFICATION	0.026875370427180117	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.97312462957282	WITHOUT_CLASSIFICATION	0.026875370427180117	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.97312462957282	WITHOUT_CLASSIFICATION	0.026875370427180117	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9892853173091538	WITHOUT_CLASSIFICATION	0.01071468269084619	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9892853173091538	WITHOUT_CLASSIFICATION	0.01071468269084619	DESIGN
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9259549343050529	WITHOUT_CLASSIFICATION	0.07404506569494708	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999541128456538	WITHOUT_CLASSIFICATION	4.588715434617435E-5	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999541128456538	WITHOUT_CLASSIFICATION	4.588715434617435E-5	DESIGN
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9986864466904706	WITHOUT_CLASSIFICATION	0.001313553309529474	DESIGN
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9957950240892032	WITHOUT_CLASSIFICATION	0.004204975910796841	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993679257380198	WITHOUT_CLASSIFICATION	6.320742619803155E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9980715125658591	WITHOUT_CLASSIFICATION	0.0019284874341407782	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9980715125658591	WITHOUT_CLASSIFICATION	0.0019284874341407782	DESIGN
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9998653376211202	WITHOUT_CLASSIFICATION	1.3466237887985595E-4	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999294130024032	WITHOUT_CLASSIFICATION	7.058699759678969E-5	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999294130024032	WITHOUT_CLASSIFICATION	7.058699759678969E-5	DESIGN
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.9656452462526196	WITHOUT_CLASSIFICATION	0.03435475374738036	DESIGN
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.9998229863359351	DESIGN	1.7701366406489298E-4	WITHOUT_CLASSIFICATION
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9998549115729727	WITHOUT_CLASSIFICATION	1.4508842702733163E-4	DESIGN
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9998370648035645	WITHOUT_CLASSIFICATION	1.6293519643550275E-4	DESIGN
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.9999163954287744	WITHOUT_CLASSIFICATION	8.36045712254903E-5	DESIGN
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9996756489922173	WITHOUT_CLASSIFICATION	3.243510077827411E-4	DESIGN
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999994570344542	WITHOUT_CLASSIFICATION	5.429655458002001E-6	DESIGN
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9990786353890977	WITHOUT_CLASSIFICATION	9.213646109023543E-4	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998703812727644	WITHOUT_CLASSIFICATION	1.2961872723564745E-4	DESIGN
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9900518137764555	WITHOUT_CLASSIFICATION	0.009948186223544575	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9991431382906927	WITHOUT_CLASSIFICATION	8.568617093073279E-4	DESIGN
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9729411831669552	WITHOUT_CLASSIFICATION	0.027058816833044834	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9997951874731366	WITHOUT_CLASSIFICATION	2.0481252686356443E-4	DESIGN
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9910805791099926	WITHOUT_CLASSIFICATION	0.008919420890007326	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9990527204464664	WITHOUT_CLASSIFICATION	9.472795535336422E-4	DESIGN
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9997271239244051	WITHOUT_CLASSIFICATION	2.728760755949271E-4	DESIGN
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9988417250022233	WITHOUT_CLASSIFICATION	0.0011582749977766297	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9872658699715384	WITHOUT_CLASSIFICATION	0.012734130028461674	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.99843088206168	WITHOUT_CLASSIFICATION	0.001569117938320022	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.99843088206168	WITHOUT_CLASSIFICATION	0.001569117938320022	DESIGN
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9995599116112388	WITHOUT_CLASSIFICATION	4.4008838876121527E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999212448046939	WITHOUT_CLASSIFICATION	7.875519530611752E-5	DESIGN
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9970182539556319	WITHOUT_CLASSIFICATION	0.0029817460443679676	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9987298355748832	WITHOUT_CLASSIFICATION	0.0012701644251168294	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9973872298460041	WITHOUT_CLASSIFICATION	0.0026127701539957896	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9973872298460041	WITHOUT_CLASSIFICATION	0.0026127701539957896	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9973872298460041	WITHOUT_CLASSIFICATION	0.0026127701539957896	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.7138513887973597	WITHOUT_CLASSIFICATION	0.28614861120264046	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997193632898648	WITHOUT_CLASSIFICATION	2.806367101352609E-4	DESIGN
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9958604296853771	WITHOUT_CLASSIFICATION	0.004139570314622931	DESIGN
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9997263245915556	WITHOUT_CLASSIFICATION	2.736754084443198E-4	DESIGN
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.7874308493836277	DESIGN	0.21256915061637227	WITHOUT_CLASSIFICATION
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999955488075046	WITHOUT_CLASSIFICATION	4.4511924953969275E-6	DESIGN
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9995033672833963	WITHOUT_CLASSIFICATION	4.96632716603715E-4	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.999891215630597	WITHOUT_CLASSIFICATION	1.087843694030226E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.988569142902759	WITHOUT_CLASSIFICATION	0.011430857097240973	DESIGN
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999472375575138	WITHOUT_CLASSIFICATION	5.2762442486184494E-5	DESIGN
reset buffer	WITHOUT_CLASSIFICATION	0.9993407881490197	WITHOUT_CLASSIFICATION	6.592118509802588E-4	DESIGN
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9963842085876307	WITHOUT_CLASSIFICATION	0.003615791412369303	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.875988240661461	DESIGN	0.12401175933853892	WITHOUT_CLASSIFICATION
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.8891659989753193	WITHOUT_CLASSIFICATION	0.11083400102468076	DESIGN
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999969003705089	WITHOUT_CLASSIFICATION	3.0996294911966335E-6	DESIGN
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999771286422758	WITHOUT_CLASSIFICATION	2.2871357724106947E-5	DESIGN
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9986627395851995	WITHOUT_CLASSIFICATION	0.0013372604148004863	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999942311117689	WITHOUT_CLASSIFICATION	5.768888231184459E-6	DESIGN
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9987771506719204	WITHOUT_CLASSIFICATION	0.0012228493280796162	DESIGN
Fixme: Do we need the check or does Main.java not call this...they should consolidate	DESIGN	0.9101222843137279	WITHOUT_CLASSIFICATION	0.08987771568627212	DESIGN
FIXME: move out of this class!	DESIGN	0.9008165444057868	DESIGN	0.09918345559421311	WITHOUT_CLASSIFICATION
this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI we search all keys for a case-insensitive match, and use that	DESIGN	0.9762839375092025	DESIGN	0.02371606249079744	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.820742914968127	DESIGN	0.179257085031873	WITHOUT_CLASSIFICATION
FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9421719198567773	DESIGN	0.05782808014322268	WITHOUT_CLASSIFICATION
TODO: eliminate?	DESIGN	0.6119152993796069	WITHOUT_CLASSIFICATION	0.3880847006203932	DESIGN
TODO: People extending GzipWriter/reader will break. Find better way here.	DESIGN	0.9945472362100646	DESIGN	0.005452763789935437	WITHOUT_CLASSIFICATION
For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9358273969533357	WITHOUT_CLASSIFICATION	0.06417260304666417	DESIGN
we might need to perform a DST correction	DESIGN	0.9833515480026032	WITHOUT_CLASSIFICATION	0.016648451997396757	DESIGN
rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9945396591891311	WITHOUT_CLASSIFICATION	0.005460340810868882	DESIGN
rb_ary_push_m FIXME: Whis is this named "push_m"?	DESIGN	0.5740099730546862	WITHOUT_CLASSIFICATION	0.4259900269453138	DESIGN
from DUP_SETUP rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9945396591891311	WITHOUT_CLASSIFICATION	0.005460340810868882	DESIGN
TODO: ary_sort_check should be done here	DESIGN	0.995887906089731	DESIGN	0.0041120939102690535	WITHOUT_CLASSIFICATION
TODO: ary_sort_check should be done here	DESIGN	0.995887906089731	DESIGN	0.0041120939102690535	WITHOUT_CLASSIFICATION
TODO: is this correct ?	DESIGN	0.9950451919939892	DESIGN	0.004954808006010881	WITHOUT_CLASSIFICATION
TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.8423876722877581	DESIGN	0.1576123277122419	WITHOUT_CLASSIFICATION
TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. How can we support this operation?	DESIGN	0.9994079996927293	DESIGN	5.920003072706868E-4	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9844180632936086	DESIGN	0.01558193670639132	WITHOUT_CLASSIFICATION
FIXME: This table will get moved into POSIX library so we can get all actual supported signals. This is a quick fix to support basic signals until that happens.	DESIGN	0.9846261414947416	DESIGN	0.015373858505258494	WITHOUT_CLASSIFICATION
The implementations of these are all bonus (see TODO above) I was going to throw an error from these, but it appears to be the wrong place to do it.	DESIGN	0.5372344607324142	WITHOUT_CLASSIFICATION	0.46276553926758573	DESIGN
TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9911337495503929	DESIGN	0.008866250449607042	WITHOUT_CLASSIFICATION
TODO: remove	DESIGN	0.8071857985268023	DESIGN	0.19281420147319772	WITHOUT_CLASSIFICATION
FIXME moved this here to get what's obviously a utility method out of IRubyObject. perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999999330155509	DESIGN	6.698444910653611E-8	WITHOUT_CLASSIFICATION
FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.5205988828368185	DESIGN	0.47940111716318146	WITHOUT_CLASSIFICATION
TODO: Should frozen error have its own distinct class? If not should more share?	DESIGN	0.9989699831731788	DESIGN	0.0010300168268213064	WITHOUT_CLASSIFICATION
TODO: this is kinda gross	DESIGN	0.9956726921449726	DESIGN	0.004327307855027427	WITHOUT_CLASSIFICATION
Not sure how well this works, but it works much better than just currentTimeMillis by itself.	DESIGN	0.6666515893559469	WITHOUT_CLASSIFICATION	0.3333484106440532	DESIGN
TODO: exec should replace the current process. This could be possible with JNA.	DESIGN	0.9996784567124456	DESIGN	3.2154328755439423E-4	WITHOUT_CLASSIFICATION
FIXME: In order for Thread to play well with the standard 'new' behavior, it must provide an allocator that can create empty object instances which initialize then fills with appropriate data.	DESIGN	0.9998621761355695	WITHOUT_CLASSIFICATION	1.3782386443053076E-4	DESIGN
TODO: not sure that we should skip calling join() altogether. Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.959293240289782	DESIGN	0.040706759710218046	WITHOUT_CLASSIFICATION
FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9742388073193833	DESIGN	0.025761192680616732	WITHOUT_CLASSIFICATION
FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9974911134821756	DESIGN	0.002508886517824471	WITHOUT_CLASSIFICATION
TODO: no java stringity	DESIGN	0.6791408387560891	DESIGN	0.32085916124391084	WITHOUT_CLASSIFICATION
need to reexamine this	DESIGN	0.9583462990862562	WITHOUT_CLASSIFICATION	0.041653700913743874	DESIGN
TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.7194046375680051	DESIGN	0.28059536243199495	WITHOUT_CLASSIFICATION
TODO: why are we duplicating the constants here, and then in File::Constants below? File::Constants is included in IO.	DESIGN	0.6235106020401987	DESIGN	0.37648939795980135	WITHOUT_CLASSIFICATION
TODO: this method is not present in MRI!	DESIGN	0.9668989214762427	DESIGN	0.03310107852375733	WITHOUT_CLASSIFICATION
TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.6895995254586008	WITHOUT_CLASSIFICATION	0.31040047454139913	DESIGN
Something wrong we don't know the cwd... TODO: Is this behavior really desirable? /mov	DESIGN	0.9997492368014885	DESIGN	2.5076319851140294E-4	WITHOUT_CLASSIFICATION
Fixme: This does not have exact same semantics as RubyArray.join, but they probably could be consolidated (perhaps as join(args[], sep, doChomp)).	DESIGN	0.9766792093918513	DESIGN	0.023320790608148793	WITHOUT_CLASSIFICATION
TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9998080131224536	DESIGN	1.9198687754649494E-4	WITHOUT_CLASSIFICATION
TODO: Implement tty? and isatty. We have no real capability to determine this from java, but if we could set tty status, then we could invoke jruby differently to allow stdin to return true on this. This would allow things like cgi.rb to work properly.	DESIGN	0.9984427967903463	DESIGN	0.0015572032096537044	WITHOUT_CLASSIFICATION
TODO: better error handling	DESIGN	0.9901690749319912	DESIGN	0.00983092506800871	WITHOUT_CLASSIFICATION
this seems unlikely to happen unless it's a totally bogus fileno ...so do we even need to bother trying to create one?	DESIGN	0.9921498962505771	WITHOUT_CLASSIFICATION	0.007850103749422879	DESIGN
IN FACT, we should probably raise an error, yes?	DESIGN	0.8123727566453103	WITHOUT_CLASSIFICATION	0.1876272433546896	DESIGN
TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.7541060757708566	WITHOUT_CLASSIFICATION	0.2458939242291433	DESIGN
FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9650951604530942	DESIGN	0.03490483954690586	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.8980414947987293	DESIGN	0.10195850520127063	WITHOUT_CLASSIFICATION
FIXME: I don't like the null checks here	DESIGN	0.9750800362089492	DESIGN	0.024919963791050822	WITHOUT_CLASSIFICATION
TODO: handle writing into original buffer better	DESIGN	0.9967642150301904	DESIGN	0.003235784969809496	WITHOUT_CLASSIFICATION
TODO: is this the right thing to do?	DESIGN	0.9994390351951953	DESIGN	5.609648048046917E-4	WITHOUT_CLASSIFICATION
TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.8162950516143499	DESIGN	0.18370494838565016	WITHOUT_CLASSIFICATION
FIXME: If NativeException is expected to be used from Ruby code, it should provide a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9072886373432535	DESIGN	0.09271136265674655	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.9701733375325764	DESIGN	0.02982666246742356	WITHOUT_CLASSIFICATION
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9509521882662025	DESIGN	0.04904781173379735	WITHOUT_CLASSIFICATION
FIXME: Obvious issue that not all platforms can display all attributes. Ugly hacks. Using generic posix library makes pushing inspect behavior into specific system impls rather painful.	DESIGN	0.9994133139985193	DESIGN	5.866860014807706E-4	WITHOUT_CLASSIFICATION
Workaround for JRUBY-4149	DESIGN	0.9891242028765653	WITHOUT_CLASSIFICATION	0.010875797123434604	DESIGN
TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9358414603147688	DESIGN	0.0641585396852312	WITHOUT_CLASSIFICATION
FIXME: This is copied code from RubyArray. Both RE, Struct, and Array should share one impl This is also hacky since I construct ruby objects to access ruby arrays through aref instead of something lower.	DESIGN	0.9969715102476496	DESIGN	0.0030284897523503444	WITHOUT_CLASSIFICATION
FIXME: We should not be regenerating this over and over	DESIGN	0.9908222524415164	DESIGN	0.009177747558483525	WITHOUT_CLASSIFICATION
FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9635936837503795	DESIGN	0.036406316249620596	WITHOUT_CLASSIFICATION
TODO: Consider a better way of synchronizing	DESIGN	0.998165556924143	DESIGN	0.0018344430758569716	WITHOUT_CLASSIFICATION
FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.8664119265847243	DESIGN	0.13358807341527568	WITHOUT_CLASSIFICATION
A cloned method now belongs to a new class. Set it. TODO: Make DynamicMethod immutable	DESIGN	0.5243756008112659	WITHOUT_CLASSIFICATION	0.47562439918873395	DESIGN
FIXME: figure out why we get null sometimes	DESIGN	0.8973651259130383	DESIGN	0.10263487408696169	WITHOUT_CLASSIFICATION
FIXME: Can get optimized for IEqlNode	DESIGN	0.6617668660847983	DESIGN	0.3382331339152017	WITHOUT_CLASSIFICATION
rb_mod_remove_cvar FIXME: any good reason to have two identical methods? (same as remove_class_variable)	DESIGN	0.5618313160794288	DESIGN	0.4381686839205712	WITHOUT_CLASSIFICATION
FIXME: these descriptions should probably be moved out, to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9991968328712668	DESIGN	8.031671287332373E-4	WITHOUT_CLASSIFICATION
TODO: what about n arg?	DESIGN	0.9443108184781545	DESIGN	0.055689181521845495	WITHOUT_CLASSIFICATION
TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9930331934222216	DESIGN	0.006966806577778413	WITHOUT_CLASSIFICATION
regular division with some default precision TODO: proper algorithm to set the precision	DESIGN	0.989638954099581	DESIGN	0.010361045900419011	WITHOUT_CLASSIFICATION
TODO: better algorithm to set precision needed	DESIGN	0.977956990027075	DESIGN	0.022043009972924965	WITHOUT_CLASSIFICATION
FIXME: what should these really be? Numeric? assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9967086575318779	DESIGN	0.0032913424681220668	WITHOUT_CLASSIFICATION
FIXME: what should this really be? assert x instanceof RubyComplex;	DESIGN	0.9979858576339146	DESIGN	0.002014142366085407	WITHOUT_CLASSIFICATION
FIXME: the code below is a copy of RubyIO.puts, and we should avoid copy-paste.	DESIGN	0.9450616083429988	DESIGN	0.05493839165700129	WITHOUT_CLASSIFICATION
Yow...this is still ugly	DESIGN	0.9693208596839878	WITHOUT_CLASSIFICATION	0.030679140316012148	DESIGN
end hack	DESIGN	0.6807975926752311	DESIGN	0.31920240732476884	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.9644316168980798	DESIGN	0.035568383101920224	WITHOUT_CLASSIFICATION
TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9986638336990904	DESIGN	0.0013361663009095568	WITHOUT_CLASSIFICATION
TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.8773564143170625	DESIGN	0.12264358568293751	WITHOUT_CLASSIFICATION
FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.8322480240607322	WITHOUT_CLASSIFICATION	0.16775197593926783	DESIGN
TODO: This is almost RubyModule#instance_methods on the metaClass. Perhaps refactor.	DESIGN	0.9863568813306138	DESIGN	0.01364311866938611	WITHOUT_CLASSIFICATION
The following three methods must be defined fast, since they expect to modify the current frame (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999937834812067	WITHOUT_CLASSIFICATION	6.216518793203724E-6	DESIGN
FIXME: I think this chunk is equivalent to MRI id2name (and not our public method id2name). Make into method if used more than once.	DESIGN	0.9999612234495239	DESIGN	3.877655047609793E-5	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.921577492413202	WITHOUT_CLASSIFICATION	0.07842250758679803	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.921577492413202	WITHOUT_CLASSIFICATION	0.07842250758679803	DESIGN
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.921577492413202	WITHOUT_CLASSIFICATION	0.07842250758679803	DESIGN
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.8231255302674103	WITHOUT_CLASSIFICATION	0.1768744697325896	DESIGN
TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.999726363276092	DESIGN	2.7363672390799616E-4	WITHOUT_CLASSIFICATION
TODO: wire into new exception handling mechanism	DESIGN	0.983900680262699	DESIGN	0.016099319737300985	WITHOUT_CLASSIFICATION
FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name never exist at the same time.	DESIGN	0.7807240831013704	DESIGN	0.21927591689862957	WITHOUT_CLASSIFICATION
TODO: do above but not below for additional newline nodes	DESIGN	0.7587392096919434	WITHOUT_CLASSIFICATION	0.24126079030805658	DESIGN
TODO: Figure out how this can happen and possibly remove	DESIGN	0.999264263726123	DESIGN	7.357362738770374E-4	WITHOUT_CLASSIFICATION
TODO: At least ParserSupport.attrset passes argsNode as null. ImplicitNil is wrong magic for setupArgs since it will IRubyObject[] { nil }. So we need to figure out a nice fast null pattern for setupArgs. assert argsNode != null : "receiverNode is not null";	DESIGN	0.9999825175181158	DESIGN	1.748248188420317E-5	WITHOUT_CLASSIFICATION
FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9991892617801322	DESIGN	8.107382198678396E-4	WITHOUT_CLASSIFICATION
FIXME: I use a for block to implement END node because we need a proc which captures its enclosing scope. ForBlock now represents these node and should be renamed.	DESIGN	0.9990927720417998	DESIGN	9.072279582001422E-4	WITHOUT_CLASSIFICATION
method has more than 500 lines; we'll need to split it and therefore need to use a heap-based scope	DESIGN	0.8295789792323706	WITHOUT_CLASSIFICATION	0.17042102076762938	DESIGN
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.6707534737626624	WITHOUT_CLASSIFICATION	0.3292465262373375	DESIGN
If it's a single-arg when but contains an array, we know it's a real literal array FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9751245254121903	DESIGN	0.024875474587809733	WITHOUT_CLASSIFICATION
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.6707534737626624	WITHOUT_CLASSIFICATION	0.3292465262373375	DESIGN
XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9587009378177634	WITHOUT_CLASSIFICATION	0.0412990621822366	DESIGN
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.5011428683730048	DESIGN	0.49885713162699524	WITHOUT_CLASSIFICATION
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.5011428683730048	DESIGN	0.49885713162699524	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9997275621977714	DESIGN	2.7243780222863817E-4	WITHOUT_CLASSIFICATION
TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999648187558903	DESIGN	3.518124410976189E-5	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9997275621977714	DESIGN	2.7243780222863817E-4	WITHOUT_CLASSIFICATION
arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9757403704394445	DESIGN	0.024259629560555506	WITHOUT_CLASSIFICATION
FIXME: This is temporary since the variable compilers assume we want args already on stack for assignment. We just pop and continue with 1.9 args logic.	DESIGN	0.7421064679816971	WITHOUT_CLASSIFICATION	0.25789353201830295	DESIGN
TODO: reads/writes from frame TODO: information on scoping TODO: visibility?	DESIGN	0.9222649721949613	WITHOUT_CLASSIFICATION	0.07773502780503878	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.5344248063633691	DESIGN	0.4655751936366309	WITHOUT_CLASSIFICATION
TODO: cache?	DESIGN	0.6798698392572013	DESIGN	0.3201301607427986	WITHOUT_CLASSIFICATION
TODO: cache?	DESIGN	0.6798698392572013	DESIGN	0.3201301607427986	WITHOUT_CLASSIFICATION
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.6615735694223345	DESIGN	0.33842643057766547	WITHOUT_CLASSIFICATION
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9972744614774222	WITHOUT_CLASSIFICATION	0.0027255385225779328	DESIGN
FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9644190966501206	DESIGN	0.035580903349879435	WITHOUT_CLASSIFICATION
install invokedynamic bootstrapper TODO need to abstract this setup behind another compiler interface	DESIGN	0.9692075488033667	DESIGN	0.030792451196633364	WITHOUT_CLASSIFICATION
FIXME: This isn't right for within ensured/rescued code	DESIGN	0.8706109761216188	DESIGN	0.12938902387838122	WITHOUT_CLASSIFICATION
SSS FIXME: Deprecated! Going forward, all instructions should come from the CFG	DESIGN	0.6638948268101186	WITHOUT_CLASSIFICATION	0.3361051731898814	DESIGN
SSS FIXME: Do we need to check if l is same as whatever popped?	DESIGN	0.808935441384502	WITHOUT_CLASSIFICATION	0.19106455861549798	DESIGN
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.5045384223666278	WITHOUT_CLASSIFICATION	0.4954615776333721	DESIGN
SSS FIXME: I added this in. Is this correct?	DESIGN	0.9974296552310458	DESIGN	0.002570344768954269	WITHOUT_CLASSIFICATION
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.5045384223666278	WITHOUT_CLASSIFICATION	0.4954615776333721	DESIGN
SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes! i.e. |(a,b)|?	DESIGN	0.8304745688284602	WITHOUT_CLASSIFICATION	0.16952543117153987	DESIGN
SSS FIXME: Can this return anything other than nil?	DESIGN	0.6354228909772578	DESIGN	0.36457710902274215	WITHOUT_CLASSIFICATION
SSS FIXME: What happens to the add class in this case??	DESIGN	0.7429490893169911	DESIGN	0.25705091068300884	WITHOUT_CLASSIFICATION
CON FIXME: I don't know how to make case be an expression...does that logic need to go here?	DESIGN	0.9968010416354158	DESIGN	0.003198958364584141	WITHOUT_CLASSIFICATION
SSS FIXME: Where is this set up? How is this diff from ClassVarDeclNode??	DESIGN	0.9825531103041594	DESIGN	0.017446889695840587	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.9973124512090165	DESIGN	0.0026875487909835444	WITHOUT_CLASSIFICATION
SSS FIXME: Used anywhere? I don't see calls to this anywhere public Operand buildDAsgnAssignment(Node node, IR_Scope s) { DAsgnNode dasgnNode = (DAsgnNode) node; s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth()); }	DESIGN	0.8664360278775204	WITHOUT_CLASSIFICATION	0.13356397212247964	DESIGN
SSS FIXME: Receiver -- this is the class meta object basically? Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.5538159274773705	DESIGN	0.4461840725226295	WITHOUT_CLASSIFICATION
self = args[0] SSS FIXME: Verify that this is correct	DESIGN	0.8087624680194245	DESIGN	0.19123753198057547	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correct?	DESIGN	0.9973124512090165	DESIGN	0.0026875487909835444	WITHOUT_CLASSIFICATION
SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9550374242606204	DESIGN	0.044962575739379514	WITHOUT_CLASSIFICATION
add a "self" recv here TODO: is this right?	DESIGN	0.9999524999252859	DESIGN	4.750007471421811E-5	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.5064725195749507	WITHOUT_CLASSIFICATION	0.4935274804250494	DESIGN
SSS FIXME: Where does this go? m.setLinePosition(arrayNode.getPosition());	DESIGN	0.5387552408561648	DESIGN	0.46124475914383517	WITHOUT_CLASSIFICATION
SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9985519755005268	DESIGN	0.0014480244994733039	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be a string literal or a string? Dummy class for the script	DESIGN	0.9797006517096907	DESIGN	0.02029934829030929	WITHOUT_CLASSIFICATION
SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.8578847147560661	DESIGN	0.142115285243934	WITHOUT_CLASSIFICATION
SSS FIXME: Correct? Where does closure arg come from?	DESIGN	0.9867259231642004	WITHOUT_CLASSIFICATION	0.013274076835799484	DESIGN
SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9455595870784043	DESIGN	0.054440412921595696	WITHOUT_CLASSIFICATION
Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9190181159821932	DESIGN	0.0809818840178068	WITHOUT_CLASSIFICATION
SSS FIXME: This should never get called for constant svalues	DESIGN	0.7774529803692126	DESIGN	0.22254701963078724	WITHOUT_CLASSIFICATION
SSS FIXME: Should this be Operand or CompoundString? Can it happen that symbols are built out of other than compound strings? Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9979688302811192	DESIGN	0.0020311697188808192	WITHOUT_CLASSIFICATION
TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9992639595224093	DESIGN	7.360404775906528E-4	WITHOUT_CLASSIFICATION
Hack in to replace usual readline with this	DESIGN	0.9861353270817995	DESIGN	0.013864672918200512	WITHOUT_CLASSIFICATION
bit risky if someone changes completor, but useful for method calls	DESIGN	0.997135407011875	WITHOUT_CLASSIFICATION	0.002864592988125094	DESIGN
FIXME: This determine module is in a strange location and should somehow be in block	DESIGN	0.9146523038320726	DESIGN	0.08534769616792734	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9704359866312113	WITHOUT_CLASSIFICATION	0.02956401336878864	DESIGN
we basically ignore protocol. let someone report it...	DESIGN	0.9992508602770676	WITHOUT_CLASSIFICATION	7.491397229324083E-4	DESIGN
Workaround for a bug in Sun's JDK 1.5.x, see http:bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.8833371101666875	WITHOUT_CLASSIFICATION	0.11666288983331255	DESIGN
context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.952331195066978	WITHOUT_CLASSIFICATION	0.04766880493302195	DESIGN
FIXME we want to eliminate these type casts when possible	DESIGN	0.9494734938208441	DESIGN	0.050526506179155946	WITHOUT_CLASSIFICATION
TODO: Determine whether we should perhaps store non-singleton class in the implementationClass	DESIGN	0.9940629447911885	DESIGN	0.005937055208811468	WITHOUT_CLASSIFICATION
FIXME: set up a CallConfiguration for this	DESIGN	0.8694456487951588	DESIGN	0.13055435120484107	WITHOUT_CLASSIFICATION
FIXME: set up a call configuration for this	DESIGN	0.9101606027013779	DESIGN	0.08983939729862211	WITHOUT_CLASSIFICATION
TODO: make this do specific-arity calling	DESIGN	0.9579627981710421	DESIGN	0.04203720182895787	WITHOUT_CLASSIFICATION
add 'new' with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9982704342737093	DESIGN	0.0017295657262907176	WITHOUT_CLASSIFICATION
add method with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9984829355333324	DESIGN	0.0015170644666676165	WITHOUT_CLASSIFICATION
FIXME This whole thing could probably be implemented as a module and mixed into appropriate classes, especially if it uses either IOInput/OutputStream or is smart about the kind of IO-like object it's being used against.	DESIGN	0.999999972283665	DESIGN	2.771633507364053E-8	WITHOUT_CLASSIFICATION
using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9996827617605135	WITHOUT_CLASSIFICATION	3.1723823948658943E-4	DESIGN
using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9996827617605135	WITHOUT_CLASSIFICATION	3.1723823948658943E-4	DESIGN
using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9996353728228906	WITHOUT_CLASSIFICATION	3.6462717710940577E-4	DESIGN
these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.8241430952764169	WITHOUT_CLASSIFICATION	0.175856904723583	DESIGN
TODO: WRONG - get interfaces from class	DESIGN	0.8937539395875089	DESIGN	0.10624606041249107	WITHOUT_CLASSIFICATION
TODO: catch exception if constant is already set by other thread	DESIGN	0.9624220547087992	WITHOUT_CLASSIFICATION	0.037577945291200884	DESIGN
TODO: public only?	DESIGN	0.8709390861656957	WITHOUT_CLASSIFICATION	0.12906091383430432	DESIGN
see note below re: 2-field kludge	DESIGN	0.9850134559327722	WITHOUT_CLASSIFICATION	0.014986544067227643	DESIGN
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.9958945178400941	DESIGN	0.004105482159905875	WITHOUT_CLASSIFICATION
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.9958945178400941	DESIGN	0.004105482159905875	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods	DESIGN	0.8339534386889214	DESIGN	0.16604656131107862	WITHOUT_CLASSIFICATION
FIXME: This doesn't actually support anything but String	DESIGN	0.6306733959284962	WITHOUT_CLASSIFICATION	0.36932660407150375	DESIGN
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.8420060813865281	DESIGN	0.1579939186134719	WITHOUT_CLASSIFICATION
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.8420060813865281	DESIGN	0.1579939186134719	WITHOUT_CLASSIFICATION
this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.948507249531359	WITHOUT_CLASSIFICATION	0.051492750468641046	DESIGN
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5768140483965106	WITHOUT_CLASSIFICATION	0.4231859516034892	DESIGN
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.5768140483965106	WITHOUT_CLASSIFICATION	0.4231859516034892	DESIGN
this covers the rare case of lower-case class names (and thus will fail 99.999% of the time). fortunately, we'll only do this once per package name. (and seriously, folks, look into best practices...)	DESIGN	0.9174193587860652	WITHOUT_CLASSIFICATION	0.08258064121393481	DESIGN
FIXME: we should also support orgs that use capitalized package names (including, embarrassingly, the one I work for), but this should be enabled by a system property, as the expected default behavior for an upper-case value should be (and is) to treat it as a class name, and raise an exception if it's not found	DESIGN	0.9741287129447133	DESIGN	0.025871287055286688	WITHOUT_CLASSIFICATION
TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9640497859993696	WITHOUT_CLASSIFICATION	0.03595021400063044	DESIGN
upper-case package name TODO: top-level upper-case package was supported in the previous (Ruby-based) implementation, so leaving as is. see note at #getProxyOrPackageUnderPackage re: future approach below the top-level.	DESIGN	0.6803603284528188	WITHOUT_CLASSIFICATION	0.3196396715471812	DESIGN
FIXME: wtf is this? Why would these use the class?	DESIGN	0.9988814598454843	DESIGN	0.0011185401545157668	WITHOUT_CLASSIFICATION
FIXME: needs to be rethought	DESIGN	0.7186793486192604	DESIGN	0.28132065138073975	WITHOUT_CLASSIFICATION
TODO: specifying soft refs, may want to compare memory consumption, behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.5533786992467566	WITHOUT_CLASSIFICATION	0.4466213007532433	DESIGN
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9844243584315454	DESIGN	0.01557564156845446	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9844243584315454	DESIGN	0.01557564156845446	WITHOUT_CLASSIFICATION
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.8467329648398519	WITHOUT_CLASSIFICATION	0.15326703516014803	DESIGN
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes)	DESIGN	0.509263174123131	DESIGN	0.4907368258768689	WITHOUT_CLASSIFICATION
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes) TODO: not sure we need this at all, since we only expose public fields. field.setAccessible(true);	DESIGN	0.8439863032624323	DESIGN	0.15601369673756763	WITHOUT_CLASSIFICATION
FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.959312468015138	DESIGN	0.04068753198486198	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods. also, the getDeclared calls may throw SecurityException if we're running under a restrictive security policy.	DESIGN	0.8026736820778149	DESIGN	0.1973263179221851	WITHOUT_CLASSIFICATION
don't bother to check if final method, it won't be there (not generated, can't be!)	DESIGN	0.9999950548891916	WITHOUT_CLASSIFICATION	4.945110808444274E-6	DESIGN
super calls from proxies must use reflected method FIXME: possible to make handles do the superclass call?	DESIGN	0.8060279614638982	DESIGN	0.19397203853610187	WITHOUT_CLASSIFICATION
actual type does not exactly match method return type, re-get converter FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9785628771169061	WITHOUT_CLASSIFICATION	0.02143712288309394	DESIGN
FIXME: Ideally JavaObject instances should be marshallable, which means that the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.7018088258136502	DESIGN	0.2981911741863497	WITHOUT_CLASSIFICATION
FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.8352199733217021	WITHOUT_CLASSIFICATION	0.16478002667829791	DESIGN
We always prepend an org.jruby.proxy package to the beginning because java and javax packages are protected and signed jars prevent us generating new classes with those package names. See JRUBY-2439.	DESIGN	0.9979988305669996	WITHOUT_CLASSIFICATION	0.0020011694330005214	DESIGN
TODO: Only used by interface implementation; eliminate it	DESIGN	0.9968608897723844	DESIGN	0.003139110227615599	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9704359866312113	WITHOUT_CLASSIFICATION	0.02956401336878864	DESIGN
modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9979120984391392	WITHOUT_CLASSIFICATION	0.0020879015608608145	DESIGN
lame generics issues: making Segment class static and manually inserting cache reference to work around various problems generically referencing methods/vars across classes.	DESIGN	0.6207682133185827	WITHOUT_CLASSIFICATION	0.3792317866814174	DESIGN
entry exists, proxy doesn't match. replace. this could happen if old proxy was gc'ed TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.7265118656386302	DESIGN	0.2734881343613698	WITHOUT_CLASSIFICATION
FIXME: How much more obtuse can this be? Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9951310928890152	DESIGN	0.0048689071109847834	WITHOUT_CLASSIFICATION
ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.8062627558636338	WITHOUT_CLASSIFICATION	0.1937372441363662	DESIGN
Hacky: Advance position to eat newline here....	DESIGN	0.9991337915163416	WITHOUT_CLASSIFICATION	8.662084836583255E-4	DESIGN
FIXME: Not sure what the semantics of transfer are cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9538963142097884	DESIGN	0.046103685790211714	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.9097360615207953	DESIGN	0.0902639384792047	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.9097360615207953	DESIGN	0.0902639384792047	WITHOUT_CLASSIFICATION
ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.923426031913313	WITHOUT_CLASSIFICATION	0.07657396808668707	DESIGN
FIXME: Remove this from grammars.	DESIGN	0.8318440546045416	DESIGN	0.16815594539545847	WITHOUT_CLASSIFICATION
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.744223147632281	WITHOUT_CLASSIFICATION	0.255776852367719	DESIGN
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.8417069546605733	WITHOUT_CLASSIFICATION	0.15829304533942676	DESIGN
FIXME: lose syntactical elements here (and others like this)	DESIGN	0.972628252393491	DESIGN	0.027371747606509032	WITHOUT_CLASSIFICATION
ENEBO: Lots of optz in 1.9 parser here	DESIGN	0.9946661710683279	WITHOUT_CLASSIFICATION	0.005333828931672049	DESIGN
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.7514176868176409	WITHOUT_CLASSIFICATION	0.24858231318235907	DESIGN
This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9710947554735858	DESIGN	0.0289052445264142	WITHOUT_CLASSIFICATION
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9952924642094553	DESIGN	0.00470753579054478	WITHOUT_CLASSIFICATION
TODO: This probably isn't the best hack, but it works until we can have different root frame setup for 1.9 easily.	DESIGN	0.9976420815045075	DESIGN	0.0023579184954924805	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9974172903578875	DESIGN	0.0025827096421125214	WITHOUT_CLASSIFICATION
FIXME: I think we need these pushed somewhere?	DESIGN	0.9944780233993477	DESIGN	0.005521976600652336	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9974172903578875	DESIGN	0.0025827096421125214	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9974172903578875	DESIGN	0.0025827096421125214	WITHOUT_CLASSIFICATION
XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9988500845726993	WITHOUT_CLASSIFICATION	0.0011499154273007354	DESIGN
FIXME: This version is faster than the previous, but both suffer from a crucial flaw: It is impossible to create an ObjectSpace with an iterator that doesn't either: a. hold on to objects that might otherwise be collected or b. have no way to guarantee that a call to hasNext() will be correct or that a subsequent call to next() will produce an object. For our purposes, for now, this may be acceptable.	DESIGN	0.6874182727056337	DESIGN	0.3125817272943662	WITHOUT_CLASSIFICATION
FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999995958940054	DESIGN	4.0410599455106964E-7	WITHOUT_CLASSIFICATION
FIXME: This is gross. Don't do this.	DESIGN	0.591874878050016	DESIGN	0.408125121949984	WITHOUT_CLASSIFICATION
@author headius FIXME convert to enum ?	DESIGN	0.7933514719333924	WITHOUT_CLASSIFICATION	0.20664852806660766	DESIGN
FIXME: No, I don't like it.	DESIGN	0.8358557730304801	WITHOUT_CLASSIFICATION	0.16414422696951994	DESIGN
TODO: This is probably BAD...	DESIGN	0.9866553335675792	DESIGN	0.01334466643242095	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9610800913608151	DESIGN	0.03891990863918505	WITHOUT_CLASSIFICATION
invoke callMethodMissing method directly TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.995232523019914	DESIGN	0.004767476980085952	WITHOUT_CLASSIFICATION
TODO this is really ineffient, and potentially a problem everytime anyone require's something. we should try to make LoadPath a special array object.	DESIGN	0.999669180874543	DESIGN	3.3081912545692566E-4	WITHOUT_CLASSIFICATION
FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.8714409025982144	WITHOUT_CLASSIFICATION	0.12855909740178564	DESIGN
FIXME: not very efficient	DESIGN	0.9610800913608151	DESIGN	0.03891990863918505	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9610800913608151	DESIGN	0.03891990863918505	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9610800913608151	DESIGN	0.03891990863918505	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9610800913608151	DESIGN	0.03891990863918505	WITHOUT_CLASSIFICATION
FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9981784562465316	DESIGN	0.0018215437534684568	WITHOUT_CLASSIFICATION
FIXME: potentially could just use ByteList here?	DESIGN	0.9803281625229961	DESIGN	0.019671837477003806	WITHOUT_CLASSIFICATION
FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.5848390681031056	WITHOUT_CLASSIFICATION	0.4151609318968944	DESIGN
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.51148753567737	DESIGN	0.48851246432262985	WITHOUT_CLASSIFICATION
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.51148753567737	DESIGN	0.48851246432262985	WITHOUT_CLASSIFICATION
grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, so we must do all this (the next 70 lines of code), which has already been done by FloatingDecimal.	DESIGN	0.992901747082505	WITHOUT_CLASSIFICATION	0.007098252917494949	DESIGN
it would be nice (and logical!) if exponent form behaved like E/e, and decimal form behaved like f, but no such luck. hence:	DESIGN	0.9701066118223741	WITHOUT_CLASSIFICATION	0.029893388177625838	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9955173105125211	WITHOUT_CLASSIFICATION	0.0044826894874787915	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9955173105125211	WITHOUT_CLASSIFICATION	0.0044826894874787915	DESIGN
TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9758838372359079	DESIGN	0.024116162764092074	WITHOUT_CLASSIFICATION
TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.74897477716854	DESIGN	0.25102522283145995	WITHOUT_CLASSIFICATION
FIXME: this probably belongs in a different package.	DESIGN	0.9947701449390925	DESIGN	0.00522985506090746	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9998142567687714	DESIGN	1.8574323122848372E-4	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.9998142567687714	DESIGN	1.8574323122848372E-4	WITHOUT_CLASSIFICATION
FIXME: I don't like this	DESIGN	0.9784383105547503	DESIGN	0.02156168944524966	WITHOUT_CLASSIFICATION
TODO: It's perhaps just a coincidence that all the channels for which we should raise are instanceof SelectableChannel, since stdio is not...so this bothers me slightly. -CON	DESIGN	0.999979370595101	DESIGN	2.0629404898985605E-5	WITHOUT_CLASSIFICATION
FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.6792343141539942	DESIGN	0.32076568584600584	WITHOUT_CLASSIFICATION
TODO this should entry into error handling somewhere	DESIGN	0.9991897316024467	DESIGN	8.102683975533037E-4	WITHOUT_CLASSIFICATION
FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9850704527137397	DESIGN	0.014929547286260397	WITHOUT_CLASSIFICATION
We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it)	DESIGN	0.9998311939917724	WITHOUT_CLASSIFICATION	1.6880600822740766E-4	DESIGN
TODO: Ruby does not seem to care about invalid numeric mode values I am not sure if ruby overflows here also...	DESIGN	0.9889076141151829	DESIGN	0.011092385884816973	WITHOUT_CLASSIFICATION
TODO: Make this more intelligible value	DESIGN	0.9380621571218943	DESIGN	0.06193784287810572	WITHOUT_CLASSIFICATION
XXX: do something?	DESIGN	0.9820522727945291	WITHOUT_CLASSIFICATION	0.017947727205470984	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.5344248063633691	DESIGN	0.4655751936366309	WITHOUT_CLASSIFICATION
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.5344248063633691	DESIGN	0.4655751936366309	WITHOUT_CLASSIFICATION
up to ten, stuff into tmp locals, load in reverse order, and assign FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9546158425378087	DESIGN	0.045384157462191384	WITHOUT_CLASSIFICATION
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.6615735694223345	DESIGN	0.33842643057766547	WITHOUT_CLASSIFICATION
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9972744614774222	WITHOUT_CLASSIFICATION	0.0027255385225779328	DESIGN
SSS FIXME: These should get normally compiled or initialized some other way ... SSS FIXME: Parent/super-type info is incorrect! These are just placeholders for now .. this needs to be updated with real class objects later!	DESIGN	0.9999991058875602	DESIGN	8.94112439894075E-7	WITHOUT_CLASSIFICATION
SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class Holy cow! Just to append two darned arrays!	DESIGN	0.9999468773148461	DESIGN	5.312268515391213E-5	WITHOUT_CLASSIFICATION
SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. It calls regular to_ary on the object. But, if it encounters a method_missing, the value is inserted into an 1-element array! try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. Ex: http:gist.github.com/163551	DESIGN	0.8861948149617634	DESIGN	0.11380518503823654	WITHOUT_CLASSIFICATION
This is for JRUBY-2988, since after a suspend the terminal seems to need to be reinitialized. Since we can't easily detect suspension, initialize after every readline. Probably not fast, but this is for interactive terminals anyway...so who cares?	DESIGN	0.9920196376023503	WITHOUT_CLASSIFICATION	0.007980362397649675	DESIGN
set up a field for the CacheEntry TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9191201129831601	DESIGN	0.08087988701683983	WITHOUT_CLASSIFICATION
exit monitor before making call FIXME: this not being in a finally is a little worrisome	DESIGN	0.87306659132104	DESIGN	0.12693340867895994	WITHOUT_CLASSIFICATION
FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct this resulted in object being null after unmarshalling...	DESIGN	0.6149530725887152	WITHOUT_CLASSIFICATION	0.3850469274112848	DESIGN
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.8467329648398519	WITHOUT_CLASSIFICATION	0.15326703516014803	DESIGN
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9952924642094553	DESIGN	0.00470753579054478	WITHOUT_CLASSIFICATION
TODO: This is actually now returning the scope of whoever called Method#to_proc which is obviously wrong; but there's no scope to provide for many methods. It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9290295246448437	DESIGN	0.07097047535515627	WITHOUT_CLASSIFICATION
FIXME: We should be getting this from the runtime rather than assume none? return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.8004830739712355	DESIGN	0.19951692602876447	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.9097360615207953	DESIGN	0.0902639384792047	WITHOUT_CLASSIFICATION
This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9713824579669773	DESIGN	0.02861754203302267	WITHOUT_CLASSIFICATION
XXX This constructor is a hack to implement the __END__ syntax. Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999996317913641	DESIGN	3.682086358681056E-7	WITHOUT_CLASSIFICATION
FIXME: Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need to totally change marshalling to work with overridden core classes.	DESIGN	0.9999902356148955	DESIGN	9.764385104557322E-6	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999229140623	DESIGN	7.708593782971311E-8	WITHOUT_CLASSIFICATION
We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its provider's constructor which require it to be executed in a secure context. Ideally this hack should be removed. See JRUBY-3919 and this BC bug: http:www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9999931956944071	DESIGN	6.804305592918773E-6	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9645766305571452	DESIGN	0.0354233694428548	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9645766305571452	DESIGN	0.0354233694428548	WITHOUT_CLASSIFICATION
hack to get right style for input	DESIGN	0.9385408755474298	DESIGN	0.06145912445257018	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9939546227098605	DESIGN	0.006045377290139554	WITHOUT_CLASSIFICATION
small hack to save a cast later on	DESIGN	0.996099735458421	DESIGN	0.0039002645415790595	WITHOUT_CLASSIFICATION
temporary hack to handle non-Ruby values will come up with better solution shortly	DESIGN	0.9999647318982082	DESIGN	3.526810179183104E-5	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9939546227098605	DESIGN	0.006045377290139554	WITHOUT_CLASSIFICATION
HACK: in order to have stdout/err act like ttys and flush always, we set anything assigned to stdout/stderr to sync	DESIGN	0.9957903862940248	WITHOUT_CLASSIFICATION	0.004209613705975107	DESIGN
HACK: force clinit to be created	DESIGN	0.9284322325077303	WITHOUT_CLASSIFICATION	0.07156776749226965	DESIGN
FIXME: This is pretty gross; we should have a cleaner initialization that doesn't depend on package-visible fields and ideally is atomic, probably using an immutable structure we replace all at once. lazy, null when no groups defined	DESIGN	0.9749784272302896	DESIGN	0.02502157276971036	WITHOUT_CLASSIFICATION
TODO: should probably apply the null object pattern for a non-allowed class, rather than null	DESIGN	0.999724427252733	DESIGN	2.7557274726698144E-4	WITHOUT_CLASSIFICATION
TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9019593965284746	DESIGN	0.09804060347152542	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.921577492413202	WITHOUT_CLASSIFICATION	0.07842250758679803	DESIGN
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.9097360615207953	DESIGN	0.0902639384792047	WITHOUT_CLASSIFICATION
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.8231255302674103	WITHOUT_CLASSIFICATION	0.1768744697325896	DESIGN
not intended to be called directly by users (private) OLD TODO from Ruby code: This should be implemented in JavaClass.java, where we can check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9918807366328881	DESIGN	0.008119263367111789	WITHOUT_CLASSIFICATION
TODO? I think this ends up propagating from normal Java exceptions sys_fail(openFile.getPath())	DESIGN	0.980559937945954	WITHOUT_CLASSIFICATION	0.01944006205404602	DESIGN
TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9402911529622705	DESIGN	0.0597088470377296	WITHOUT_CLASSIFICATION
TODO: the rest of this...seeking to same position is unnecessary since we share a channel but some of this may be needed?	DESIGN	0.9996449541040066	DESIGN	3.550458959934382E-4	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.8980414947987293	DESIGN	0.10195850520127063	WITHOUT_CLASSIFICATION
FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.8258018830696063	WITHOUT_CLASSIFICATION	0.17419811693039364	DESIGN
ignore; job was cancelled FIXME: Is this ok?	DESIGN	0.9990318174270727	DESIGN	9.681825729272336E-4	WITHOUT_CLASSIFICATION
TODO: MRI behavior: Call "+" or "add", depending on the call. But this leads to exceptions when Floats are added. See: http:blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 return callCoerced(context, op, b, true); -- this is MRI behavior. We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.8702882901574127	DESIGN	0.12971170984258723	WITHOUT_CLASSIFICATION
Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9993681347599179	WITHOUT_CLASSIFICATION	6.318652400821441E-4	DESIGN
TODO: wire into new exception handling mechanism	DESIGN	0.983900680262699	DESIGN	0.016099319737300985	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9844243584315454	DESIGN	0.01557564156845446	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9844180632936086	DESIGN	0.01558193670639132	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9844180632936086	DESIGN	0.01558193670639132	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9844180632936086	DESIGN	0.01558193670639132	WITHOUT_CLASSIFICATION
FIXME: Determine if a real allocator is needed here. Do people want to extend JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should you be able to? TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999865509241	DESIGN	1.344907594357264E-8	WITHOUT_CLASSIFICATION
SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method But, if the mehod is modified, we create a new method object which in turn gets a new token. What makes sense?? Intuitively, it seems the first one ... but let us see ... Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9467140025264082	DESIGN	0.05328599747359183	WITHOUT_CLASSIFICATION
FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.954804616166749	WITHOUT_CLASSIFICATION	0.045195383833251085	DESIGN
FIXME: bit of a kludge here (non-interface classes assigned to both class and module fields). simplifies proxy extender code, will go away when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9980653138298282	DESIGN	0.0019346861701718566	WITHOUT_CLASSIFICATION
There's not a compelling reason to keep JavaClass instances in a weak map (any proxies created are [were] kept in a non-weak map, so in most cases they will stick around anyway), and some good reasons not to (JavaClass creation is expensive, for one; many lookups are performed when passing parameters to/from methods; etc.). TODO: faster custom concurrent map	DESIGN	0.982945895143988	DESIGN	0.017054104856012046	WITHOUT_CLASSIFICATION
TODO: we should be able to optimize this quite a bit post-1.0. JavaClass already has all the methods organized by method name; the next version (supporting protected methods/fields) will have them organized even further. So collectMethods here can just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9999082175595416	DESIGN	9.178244045841706E-5	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.9701733375325764	DESIGN	0.02982666246742356	WITHOUT_CLASSIFICATION
FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9776125578609753	WITHOUT_CLASSIFICATION	0.02238744213902474	DESIGN
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9509521882662025	DESIGN	0.04904781173379735	WITHOUT_CLASSIFICATION
TODO: Bleeding runtime into parser. Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9976380180633123	DESIGN	0.0023619819366876038	WITHOUT_CLASSIFICATION
SSS FIXME: Maybe this is not really a concern after all ... Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused with semantic nesting of scopes across files. Consider this code in a file f class M1::M2::M3::C ... end So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). This is primarily used to ensure that variable names don't clash! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! private int _lexicalNestingLevel;	DESIGN	0.9999993053451507	DESIGN	6.946548492883574E-7	WITHOUT_CLASSIFICATION
Sometimes the value can be retrieved at "compile time". If we succeed, nothing like it! We might not .. for the following reasons: 1. The constant is missing, 2. The reference is a forward-reference, 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) 4. Our compiler isn't able to right away infer that this is a constant. SSS FIXME: 1. The operand can be a literal array, range, or hash -- hence Operand because Array, Range, and Hash derive from Operand and not Constant ... Is there a way to fix this impedance mismatch? 2. It should be possible to handle the forward-reference case by creating a new ForwardReference operand and then inform the scope of the forward reference which the scope can fix up when the reference gets defined. At code-gen time, if the reference is unresolved, when a value is retrieved for the forward-ref and we get a null, we can throw a ConstMissing exception! Not sure!	DESIGN	0.9983279472429452	DESIGN	0.001672052757054824	WITHOUT_CLASSIFICATION
Reset value map if this instruction is the start/end of a basic block Right now, calls are considered hard boundaries for optimization and information cannot be propagated across them! SSS FIXME: Rather than treat all calls with a broad brush, what we need is to capture different attributes about a call : - uses closures - known call target - can modify scope, - etc. This information is probably already present in the AST Inspector	DESIGN	0.9998354278734648	DESIGN	1.645721265352242E-4	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.820742914968127	DESIGN	0.179257085031873	WITHOUT_CLASSIFICATION
XXX: This check previously used callMethod("==") to check for equality between classes when scanning the hierarchy. However the == check may be safe; we should only ever have one instance bound to a given type/constant. If it's found to be unsafe, examine ways to avoid the == call.	DESIGN	0.827082247920081	DESIGN	0.172917752079919	WITHOUT_CLASSIFICATION
end hack	DESIGN	0.6807975926752311	DESIGN	0.31920240732476884	WITHOUT_CLASSIFICATION
if not overloaded, we add a method that guesses at which signature to use TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9110232715687481	DESIGN	0.088976728431252	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999229140623	DESIGN	7.708593782971311E-8	WITHOUT_CLASSIFICATION
TODO: This version is better than the hackish previous one. Windows behavior needs to be defined though. I suppose this version could be improved more too. TODO: /etc/passwd is also inadequate for MacOSX since it does not use /etc/passwd for regular user accounts	DESIGN	0.9999997193786032	DESIGN	2.8062139686392846E-7	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.9644316168980798	DESIGN	0.035568383101920224	WITHOUT_CLASSIFICATION
Let's only generate methods for those the user may actually intend to override. That includes any defined in the current class, and any ancestors that are also JavaProxyClasses (but none from any other ancestor classes). Methods defined in mixins will be considered intentionally overridden, except those from Kernel, Java, and JavaProxyMethods, as well as Enumerable. TODO: may want to exclude other common mixins?	DESIGN	0.9998334921152868	WITHOUT_CLASSIFICATION	1.6650788471309194E-4	DESIGN
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.744223147632281	WITHOUT_CLASSIFICATION	0.255776852367719	DESIGN
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.8417069546605733	WITHOUT_CLASSIFICATION	0.15829304533942676	DESIGN
FIXME: We should really not be creating the dynamic scope for the root of the AST before parsing. This makes us end up needing to readjust this dynamic scope coming out of parse (and for local static scopes it will always happen because of $~ and $_). FIXME: Because we end up adjusting this after-the-fact, we can't use any of the specific-size scopes.	DESIGN	0.9996019991517081	DESIGN	3.9800084829184624E-4	WITHOUT_CLASSIFICATION
FIXME: Resolve what the hell is going on	DESIGN	0.8446668186012225	DESIGN	0.15533318139877753	WITHOUT_CLASSIFICATION
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.7514176868176409	WITHOUT_CLASSIFICATION	0.24858231318235907	DESIGN
If variables were added then we may need to grow the dynamic scope to match the static one. FIXME: Make this so we only need to check this for blockScope != null. We cannot currently since we create the DynamicScope for a LocalStaticScope before parse begins. Refactoring should make this fixable.	DESIGN	0.9738950207165823	WITHOUT_CLASSIFICATION	0.026104979283417616	DESIGN
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9974172903578875	DESIGN	0.0025827096421125214	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9974172903578875	DESIGN	0.0025827096421125214	WITHOUT_CLASSIFICATION
we're depending on the side effect of the load, which loads the class but does not turn it into a script I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9991026911766682	DESIGN	8.973088233319329E-4	WITHOUT_CLASSIFICATION
TODO: for now, we use a faithful reimplementation of MRI's algorithm, but should use UTF8Encoding facilities from Joni, once it starts prefroming UTF-8 content validation.	DESIGN	0.730156217946948	DESIGN	0.26984378205305215	WITHOUT_CLASSIFICATION
Process streams get Channel.newChannel()ed into FileChannel but are not actually seekable. So instead of just the isSeekable check doing instanceof FileChannel, we must also add this boolean to check, which we set to false when it's known that the incoming channel is from a process. FIXME: This is gross, and it's NIO's fault for not providing a nice way to tell if a channel is "really" seekable.	DESIGN	0.9999848509124835	DESIGN	1.5149087516607839E-5	WITHOUT_CLASSIFICATION
