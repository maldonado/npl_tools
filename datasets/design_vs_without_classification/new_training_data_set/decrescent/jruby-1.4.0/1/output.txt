set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9994629412624897	WITHOUT_CLASSIFICATION	5.370587375101781E-4	DESIGN
line 335	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.999046390785508	WITHOUT_CLASSIFICATION	9.536092144919357E-4	DESIGN
line 362	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
line 391	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
^D	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
^Z	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9999874515965581	WITHOUT_CLASSIFICATION	1.254840344183134E-5	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9999874515965581	WITHOUT_CLASSIFICATION	1.254840344183134E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
return result	WITHOUT_CLASSIFICATION	0.9999756385219495	WITHOUT_CLASSIFICATION	2.436147805044815E-5	DESIGN
name	WITHOUT_CLASSIFICATION	0.9998521812950242	WITHOUT_CLASSIFICATION	1.4781870497584354E-4	DESIGN
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9990888221530262	WITHOUT_CLASSIFICATION	9.111778469739504E-4	DESIGN
Accessor methods.	WITHOUT_CLASSIFICATION	0.9999418078870941	WITHOUT_CLASSIFICATION	5.81921129059458E-5	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9999365740525779	WITHOUT_CLASSIFICATION	6.342594742209628E-5	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9999365740525779	WITHOUT_CLASSIFICATION	6.342594742209628E-5	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9999365740525779	WITHOUT_CLASSIFICATION	6.342594742209628E-5	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9999365740525779	WITHOUT_CLASSIFICATION	6.342594742209628E-5	DESIGN
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9990907982013243	WITHOUT_CLASSIFICATION	9.092017986757681E-4	DESIGN
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.997878260174775	WITHOUT_CLASSIFICATION	0.002121739825225061	DESIGN
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999775971810654	WITHOUT_CLASSIFICATION	2.2402818934618913E-5	DESIGN
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9970943454115287	WITHOUT_CLASSIFICATION	0.0029056545884711717	DESIGN
Version information:	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999766187290708	WITHOUT_CLASSIFICATION	2.3381270929244136E-5	DESIGN
ARGF, $< object	WITHOUT_CLASSIFICATION	0.9998790625547438	WITHOUT_CLASSIFICATION	1.2093744525623151E-4	DESIGN
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9982649558874909	WITHOUT_CLASSIFICATION	0.0017350441125090596	DESIGN
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9790873869118126	WITHOUT_CLASSIFICATION	0.020912613088187385	DESIGN
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9992870295026468	WITHOUT_CLASSIFICATION	7.12970497353219E-4	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9976641679545941	WITHOUT_CLASSIFICATION	0.002335832045405948	DESIGN
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.999356719084481	WITHOUT_CLASSIFICATION	6.432809155190626E-4	DESIGN
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9981883578762601	WITHOUT_CLASSIFICATION	0.001811642123739793	DESIGN
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9339241127871288	WITHOUT_CLASSIFICATION	0.06607588721287123	DESIGN
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9992702982298409	WITHOUT_CLASSIFICATION	7.297017701591738E-4	DESIGN
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9974776648306967	WITHOUT_CLASSIFICATION	0.002522335169303256	DESIGN
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9951337967499453	WITHOUT_CLASSIFICATION	0.0048662032500547715	DESIGN
MRI behavior	WITHOUT_CLASSIFICATION	0.9999365740525779	WITHOUT_CLASSIFICATION	6.342594742209628E-5	DESIGN
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9993954268195613	WITHOUT_CLASSIFICATION	6.04573180438759E-4	DESIGN
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999169663688953	WITHOUT_CLASSIFICATION	8.303363110469804E-5	DESIGN
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9993470890052132	WITHOUT_CLASSIFICATION	6.529109947867143E-4	DESIGN
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9954635243356952	WITHOUT_CLASSIFICATION	0.00453647566430484	DESIGN
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9988831200991038	WITHOUT_CLASSIFICATION	0.001116879900896131	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9999448748708796	WITHOUT_CLASSIFICATION	5.512512912043984E-5	DESIGN
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9996755900836816	WITHOUT_CLASSIFICATION	3.244099163183313E-4	DESIGN
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9998293953671276	WITHOUT_CLASSIFICATION	1.7060463287251376E-4	DESIGN
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9995941157834715	WITHOUT_CLASSIFICATION	4.058842165285565E-4	DESIGN
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999763532447908	WITHOUT_CLASSIFICATION	2.3646755209086064E-5	DESIGN
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9989547069582924	WITHOUT_CLASSIFICATION	0.0010452930417076307	DESIGN
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9997407739306681	WITHOUT_CLASSIFICATION	2.5922606933198144E-4	DESIGN
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
IOT is also 6	WITHOUT_CLASSIFICATION	0.9999758307463276	WITHOUT_CLASSIFICATION	2.4169253672454765E-5	DESIGN
CLD is also 20	WITHOUT_CLASSIFICATION	0.9999417240888611	WITHOUT_CLASSIFICATION	5.827591113888499E-5	DESIGN
RubySignal	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9958545159350989	WITHOUT_CLASSIFICATION	0.004145484064901114	DESIGN
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9991245116292283	WITHOUT_CLASSIFICATION	8.754883707717226E-4	DESIGN
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999711517898114	WITHOUT_CLASSIFICATION	2.884821018859178E-5	DESIGN
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9989997460144138	WITHOUT_CLASSIFICATION	0.0010002539855862701	DESIGN
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999559166850449	WITHOUT_CLASSIFICATION	4.4083314955056194E-5	DESIGN
io.finish();	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9997757520174312	WITHOUT_CLASSIFICATION	2.2424798256876911E-4	DESIGN
hmm...	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9984149242428314	WITHOUT_CLASSIFICATION	0.0015850757571685499	DESIGN
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9975612677110764	WITHOUT_CLASSIFICATION	0.0024387322889235247	DESIGN
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9998052441510008	WITHOUT_CLASSIFICATION	1.9475584899920285E-4	DESIGN
float number of seconds	WITHOUT_CLASSIFICATION	0.9999735248736757	WITHOUT_CLASSIFICATION	2.647512632426517E-5	DESIGN
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9996151813139943	WITHOUT_CLASSIFICATION	3.8481868600570763E-4	DESIGN
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999695428372843	WITHOUT_CLASSIFICATION	3.045716271571836E-5	DESIGN
Time class methods	WITHOUT_CLASSIFICATION	0.9999273458293599	WITHOUT_CLASSIFICATION	7.265417063998314E-5	DESIGN
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999746263029925	WITHOUT_CLASSIFICATION	2.537369700755344E-5	DESIGN
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9998640587260065	WITHOUT_CLASSIFICATION	1.3594127399340768E-4	DESIGN
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9994939778650227	WITHOUT_CLASSIFICATION	5.060221349771807E-4	DESIGN
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.989154387126873	WITHOUT_CLASSIFICATION	0.010845612873126877	DESIGN
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9330278009296726	WITHOUT_CLASSIFICATION	0.06697219907032732	DESIGN
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9996715965960232	WITHOUT_CLASSIFICATION	3.284034039767285E-4	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9993657533768004	WITHOUT_CLASSIFICATION	6.342466231994887E-4	DESIGN
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9994342244217881	WITHOUT_CLASSIFICATION	5.657755782119294E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9993900481249021	WITHOUT_CLASSIFICATION	6.099518750978036E-4	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9926284002301456	WITHOUT_CLASSIFICATION	0.0073715997698544505	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999866911470939	WITHOUT_CLASSIFICATION	1.3308852906042793E-5	DESIGN
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999866911470939	WITHOUT_CLASSIFICATION	1.3308852906042793E-5	DESIGN
no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999586886414401	WITHOUT_CLASSIFICATION	4.131135855996301E-5	DESIGN
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9995519914907768	WITHOUT_CLASSIFICATION	4.4800850922313746E-4	DESIGN
Pad with a 0	WITHOUT_CLASSIFICATION	0.9999279572617564	WITHOUT_CLASSIFICATION	7.204273824362298E-5	DESIGN
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9989657524967648	WITHOUT_CLASSIFICATION	0.001034247503235299	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8337841618133356	WITHOUT_CLASSIFICATION	0.16621583818666436	DESIGN
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.987952424202555	WITHOUT_CLASSIFICATION	0.012047575797445016	DESIGN
???	WITHOUT_CLASSIFICATION	0.9999239109809973	WITHOUT_CLASSIFICATION	7.608901900278395E-5	DESIGN
PID	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9993900481249021	WITHOUT_CLASSIFICATION	6.099518750978036E-4	DESIGN
elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999883501332588	WITHOUT_CLASSIFICATION	1.1649866741120456E-5	DESIGN
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9997813798769468	WITHOUT_CLASSIFICATION	2.1862012305322195E-4	DESIGN
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.9998061725943302	WITHOUT_CLASSIFICATION	1.938274056697076E-4	DESIGN
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9997016293041933	WITHOUT_CLASSIFICATION	2.9837069580672393E-4	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9988983421790462	WITHOUT_CLASSIFICATION	0.0011016578209538535	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9988983421790462	WITHOUT_CLASSIFICATION	0.0011016578209538535	DESIGN
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9988983421790462	WITHOUT_CLASSIFICATION	0.0011016578209538535	DESIGN
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.9993733902208687	WITHOUT_CLASSIFICATION	6.26609779131384E-4	DESIGN
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9992672203934189	WITHOUT_CLASSIFICATION	7.327796065812047E-4	DESIGN
Create global constants and variables	WITHOUT_CLASSIFICATION	0.99830412946002	WITHOUT_CLASSIFICATION	0.0016958705399799472	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9965524615981832	WITHOUT_CLASSIFICATION	0.0034475384018168172	DESIGN
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.9089049288055244	WITHOUT_CLASSIFICATION	0.09109507119447562	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9995262108507462	WITHOUT_CLASSIFICATION	4.737891492537813E-4	DESIGN
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9961457879418186	WITHOUT_CLASSIFICATION	0.003854212058181346	DESIGN
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.999932342901287	WITHOUT_CLASSIFICATION	6.7657098713025E-5	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999301228682683	WITHOUT_CLASSIFICATION	6.987713173169197E-5	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998888518287764	WITHOUT_CLASSIFICATION	1.1114817122350982E-4	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999630388979432	WITHOUT_CLASSIFICATION	3.696110205679303E-5	DESIGN
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999630388979432	WITHOUT_CLASSIFICATION	3.696110205679303E-5	DESIGN
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9997203023777653	WITHOUT_CLASSIFICATION	2.796976222346074E-4	DESIGN
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9995254156023302	WITHOUT_CLASSIFICATION	4.745843976698047E-4	DESIGN
root fiber	WITHOUT_CLASSIFICATION	0.9998684624546926	WITHOUT_CLASSIFICATION	1.3153754530747467E-4	DESIGN
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.9998994128837202	WITHOUT_CLASSIFICATION	1.005871162798188E-4	DESIGN
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9994543111301986	WITHOUT_CLASSIFICATION	5.456888698014305E-4	DESIGN
extras flag	WITHOUT_CLASSIFICATION	0.999947283274939	WITHOUT_CLASSIFICATION	5.271672506096282E-5	DESIGN
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
...nothing	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
utility method	WITHOUT_CLASSIFICATION	0.9998861024047804	WITHOUT_CLASSIFICATION	1.1389759521952579E-4	DESIGN
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999561419076983	WITHOUT_CLASSIFICATION	4.3858092301691354E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9993900481249021	WITHOUT_CLASSIFICATION	6.099518750978036E-4	DESIGN
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999770901962637	WITHOUT_CLASSIFICATION	2.290980373631853E-5	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9992957132739398	WITHOUT_CLASSIFICATION	7.042867260601489E-4	DESIGN
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9981614167987111	WITHOUT_CLASSIFICATION	0.0018385832012889013	DESIGN
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.999385099282412	WITHOUT_CLASSIFICATION	6.149007175878645E-4	DESIGN
MRI does it!	WITHOUT_CLASSIFICATION	0.9999604957790068	WITHOUT_CLASSIFICATION	3.950422099314931E-5	DESIGN
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999888157883458	WITHOUT_CLASSIFICATION	1.1184211654154999E-5	DESIGN
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999905604625025	WITHOUT_CLASSIFICATION	9.43953749758737E-6	DESIGN
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9991133199179094	WITHOUT_CLASSIFICATION	8.866800820904535E-4	DESIGN
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999807332230494	WITHOUT_CLASSIFICATION	1.926677695065846E-5	DESIGN
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9925145565245087	WITHOUT_CLASSIFICATION	0.007485443475491337	DESIGN
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9997182951339078	WITHOUT_CLASSIFICATION	2.8170486609216394E-4	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999384071579932	WITHOUT_CLASSIFICATION	6.159284200678689E-5	DESIGN
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9981566914250543	WITHOUT_CLASSIFICATION	0.0018433085749457042	DESIGN
recheck condition	WITHOUT_CLASSIFICATION	0.9999514972625372	WITHOUT_CLASSIFICATION	4.850273746281622E-5	DESIGN
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9998221041549341	WITHOUT_CLASSIFICATION	1.778958450658557E-4	DESIGN
Construct key services	WITHOUT_CLASSIFICATION	0.9999593799250546	WITHOUT_CLASSIFICATION	4.0620074945458646E-5	DESIGN
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999743807921186	WITHOUT_CLASSIFICATION	2.5619207881398017E-4	DESIGN
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9994971933582762	WITHOUT_CLASSIFICATION	5.028066417238107E-4	DESIGN
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9998505168783867	WITHOUT_CLASSIFICATION	1.4948312161335847E-4	DESIGN
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9993452783608187	WITHOUT_CLASSIFICATION	6.547216391813469E-4	DESIGN
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9909399269379784	WITHOUT_CLASSIFICATION	0.009060073062021707	DESIGN
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9981728685662563	WITHOUT_CLASSIFICATION	0.0018271314337435995	DESIGN
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.999972560837066	WITHOUT_CLASSIFICATION	2.743916293401392E-5	DESIGN
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9983288887395999	WITHOUT_CLASSIFICATION	0.0016711112604001416	DESIGN
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999511157635319	WITHOUT_CLASSIFICATION	4.888423646815425E-5	DESIGN
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999401166875225	WITHOUT_CLASSIFICATION	5.9883312477399115E-5	DESIGN
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9963027193338709	WITHOUT_CLASSIFICATION	0.003697280666129054	DESIGN
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9997954774452892	WITHOUT_CLASSIFICATION	2.045225547107847E-4	DESIGN
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9995164958910326	WITHOUT_CLASSIFICATION	4.835041089673738E-4	DESIGN
determine spacing	WITHOUT_CLASSIFICATION	0.9999410242185431	WITHOUT_CLASSIFICATION	5.897578145688809E-5	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9998117984152747	WITHOUT_CLASSIFICATION	1.882015847252966E-4	DESIGN
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9997705137366699	WITHOUT_CLASSIFICATION	2.2948626333004632E-4	DESIGN
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9962269336721832	WITHOUT_CLASSIFICATION	0.0037730663278167753	DESIGN
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.98915505119637	WITHOUT_CLASSIFICATION	0.010844948803630015	DESIGN
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9955093956710851	WITHOUT_CLASSIFICATION	0.004490604328914908	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999426508454535	WITHOUT_CLASSIFICATION	5.734915454640008E-5	DESIGN
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999676198245611	WITHOUT_CLASSIFICATION	3.2380175438834106E-5	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.99994114586629	WITHOUT_CLASSIFICATION	5.8854133709938096E-5	DESIGN
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9920989620281555	WITHOUT_CLASSIFICATION	0.007901037971844539	DESIGN
Default objects	WITHOUT_CLASSIFICATION	0.9999711447255459	WITHOUT_CLASSIFICATION	2.885527445409962E-5	DESIGN
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9995133657213653	WITHOUT_CLASSIFICATION	4.8663427863474804E-4	DESIGN
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9996653093697904	WITHOUT_CLASSIFICATION	3.3469063020971575E-4	DESIGN
Java support	WITHOUT_CLASSIFICATION	0.9998854979719444	WITHOUT_CLASSIFICATION	1.1450202805566259E-4	DESIGN
Parser stats	WITHOUT_CLASSIFICATION	0.9999532874903941	WITHOUT_CLASSIFICATION	4.6712509605831827E-5	DESIGN
Compilation	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9994657797766942	WITHOUT_CLASSIFICATION	5.342202233058731E-4	DESIGN
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9992794609101932	WITHOUT_CLASSIFICATION	7.20539089806972E-4	DESIGN
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9993408184530812	WITHOUT_CLASSIFICATION	6.591815469187754E-4	DESIGN
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9985138175453298	WITHOUT_CLASSIFICATION	0.0014861824546701877	DESIGN
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9915705433000049	WITHOUT_CLASSIFICATION	0.008429456699995062	DESIGN
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9960575464102859	WITHOUT_CLASSIFICATION	0.003942453589714044	DESIGN
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9998463283484478	WITHOUT_CLASSIFICATION	1.536716515521431E-4	DESIGN
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9966732392337175	WITHOUT_CLASSIFICATION	0.0033267607662824496	DESIGN
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9971778824700487	WITHOUT_CLASSIFICATION	0.002822117529951361	DESIGN
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.9989989257004402	WITHOUT_CLASSIFICATION	0.0010010742995597425	DESIGN
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9977615520789951	WITHOUT_CLASSIFICATION	0.002238447921004913	DESIGN
quoted-printable	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
default options	WITHOUT_CLASSIFICATION	0.9999577209217749	WITHOUT_CLASSIFICATION	4.227907822502694E-5	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
EUC-JP	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
UTF-8	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
long name option	WITHOUT_CLASSIFICATION	0.9999497716366821	WITHOUT_CLASSIFICATION	5.0228363318009955E-5	DESIGN
conversion	WITHOUT_CLASSIFICATION	0.9999116518778107	WITHOUT_CLASSIFICATION	8.83481221892072E-5	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9993765726462633	WITHOUT_CLASSIFICATION	6.234273537366878E-4	DESIGN
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.999833793582706	WITHOUT_CLASSIFICATION	1.662064172941281E-4	DESIGN
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9954383407878873	WITHOUT_CLASSIFICATION	0.004561659212112713	DESIGN
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9994092994503503	WITHOUT_CLASSIFICATION	5.907005496497526E-4	DESIGN
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9992203117223223	WITHOUT_CLASSIFICATION	7.796882776776525E-4	DESIGN
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9997748885488466	WITHOUT_CLASSIFICATION	2.25111451153491E-4	DESIGN
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9963904819270128	WITHOUT_CLASSIFICATION	0.003609518072987064	DESIGN
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999827551031829	WITHOUT_CLASSIFICATION	1.7244896817120416E-5	DESIGN
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9989520345604257	WITHOUT_CLASSIFICATION	0.0010479654395743462	DESIGN
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9998703226728552	WITHOUT_CLASSIFICATION	1.296773271447466E-4	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9679908927254887	WITHOUT_CLASSIFICATION	0.03200910727451139	DESIGN
must not reallocate	WITHOUT_CLASSIFICATION	0.9999493320665217	WITHOUT_CLASSIFICATION	5.066793347828904E-5	DESIGN
Illegal combination	WITHOUT_CLASSIFICATION	0.99994218295068	WITHOUT_CLASSIFICATION	5.7817049319969785E-5	DESIGN
use 1.8 impl	WITHOUT_CLASSIFICATION	0.999935917681078	WITHOUT_CLASSIFICATION	6.40823189219921E-5	DESIGN
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9997931629316471	WITHOUT_CLASSIFICATION	2.0683706835280844E-4	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999698828983055	WITHOUT_CLASSIFICATION	3.0117101694567528E-5	DESIGN
len + margin	WITHOUT_CLASSIFICATION	0.9999784250036756	WITHOUT_CLASSIFICATION	2.15749963243081E-5	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9999919971983773	WITHOUT_CLASSIFICATION	8.002801622668773E-6	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9999919971983773	WITHOUT_CLASSIFICATION	8.002801622668773E-6	DESIGN
copy pre-match substr	WITHOUT_CLASSIFICATION	0.9999909317804097	WITHOUT_CLASSIFICATION	9.068219590298761E-6	DESIGN
string given	WITHOUT_CLASSIFICATION	0.9999776035432053	WITHOUT_CLASSIFICATION	2.2396456794734495E-5	DESIGN
hash given	WITHOUT_CLASSIFICATION	0.9999491615903645	WITHOUT_CLASSIFICATION	5.08384096355596E-5	DESIGN
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9941134161554097	WITHOUT_CLASSIFICATION	0.005886583844590218	DESIGN
substring longer than string	WITHOUT_CLASSIFICATION	0.9999268445864602	WITHOUT_CLASSIFICATION	7.315541353984066E-5	DESIGN
rb_str_substr	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9999915855003351	WITHOUT_CLASSIFICATION	8.414499664932383E-6	DESIGN
nothing	WITHOUT_CLASSIFICATION	0.9999915855003351	WITHOUT_CLASSIFICATION	8.414499664932383E-6	DESIGN
rb_str_splice	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.5257151511131352	DESIGN	0.47428484888686473	WITHOUT_CLASSIFICATION
keep cr ?	WITHOUT_CLASSIFICATION	0.9996770810032378	WITHOUT_CLASSIFICATION	3.2291899676218635E-4	DESIGN
keep cr ?	WITHOUT_CLASSIFICATION	0.9996770810032378	WITHOUT_CLASSIFICATION	3.2291899676218635E-4	DESIGN
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9995305600121507	WITHOUT_CLASSIFICATION	4.694399878493216E-4	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9997437120411183	WITHOUT_CLASSIFICATION	2.5628795888165394E-4	DESIGN
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9997437120411183	WITHOUT_CLASSIFICATION	2.5628795888165394E-4	DESIGN
modified	WITHOUT_CLASSIFICATION	0.999973134725817	WITHOUT_CLASSIFICATION	2.6865274183021493E-5	DESIGN
modified	WITHOUT_CLASSIFICATION	0.999973134725817	WITHOUT_CLASSIFICATION	2.6865274183021493E-5	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
QTRUE	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9999579859383094	WITHOUT_CLASSIFICATION	4.201406169064478E-5	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999112361451186	WITHOUT_CLASSIFICATION	8.87638548814895E-5	DESIGN
long size bits in byte	WITHOUT_CLASSIFICATION	0.9999805624234553	WITHOUT_CLASSIFICATION	1.9437576544637204E-5	DESIGN
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.99846258334406	WITHOUT_CLASSIFICATION	0.0015374166559399061	DESIGN
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9972447431488574	WITHOUT_CLASSIFICATION	0.0027552568511427025	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999196148762747	WITHOUT_CLASSIFICATION	8.038512372536902E-5	DESIGN
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9979979350260626	WITHOUT_CLASSIFICATION	0.0020020649739374056	DESIGN
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999196148762747	WITHOUT_CLASSIFICATION	8.038512372536902E-5	DESIGN
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.999678318339042	WITHOUT_CLASSIFICATION	3.2168166095799383E-4	DESIGN
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999772093346809	WITHOUT_CLASSIFICATION	2.2790665318974728E-5	DESIGN
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9957182528037751	WITHOUT_CLASSIFICATION	0.004281747196224835	DESIGN
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.998111665993059	WITHOUT_CLASSIFICATION	0.001888334006941086	DESIGN
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999855229354506	WITHOUT_CLASSIFICATION	1.4477064549291209E-5	DESIGN
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9963167676495072	WITHOUT_CLASSIFICATION	0.003683232350492799	DESIGN
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9994150301952095	WITHOUT_CLASSIFICATION	5.84969804790416E-4	DESIGN
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9971403358032302	WITHOUT_CLASSIFICATION	0.0028596641967697746	DESIGN
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9995850373198305	WITHOUT_CLASSIFICATION	4.149626801694971E-4	DESIGN
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9991613893738566	WITHOUT_CLASSIFICATION	8.386106261432962E-4	DESIGN
file not given	WITHOUT_CLASSIFICATION	0.9999816948459339	WITHOUT_CLASSIFICATION	1.8305154066146473E-5	DESIGN
string to eval	WITHOUT_CLASSIFICATION	0.9999300524364021	WITHOUT_CLASSIFICATION	6.994756359787884E-5	DESIGN
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9992757152641065	WITHOUT_CLASSIFICATION	7.242847358933764E-4	DESIGN
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999397092054079	WITHOUT_CLASSIFICATION	6.029079459206779E-5	DESIGN
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9987900713285791	WITHOUT_CLASSIFICATION	0.0012099286714209023	DESIGN
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9997713892119139	WITHOUT_CLASSIFICATION	2.2861078808612164E-4	DESIGN
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9923136236069625	WITHOUT_CLASSIFICATION	0.007686376393037595	DESIGN
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9998728938784562	WITHOUT_CLASSIFICATION	1.2710612154377582E-4	DESIGN
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9995493229422471	WITHOUT_CLASSIFICATION	4.5067705775293944E-4	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9976192011063179	WITHOUT_CLASSIFICATION	0.002380798893682133	DESIGN
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9994135398487635	WITHOUT_CLASSIFICATION	5.864601512365798E-4	DESIGN
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.99993081560825	WITHOUT_CLASSIFICATION	6.918439174989413E-5	DESIGN
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9989354970123019	WITHOUT_CLASSIFICATION	0.001064502987698155	DESIGN
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9998008133227135	WITHOUT_CLASSIFICATION	1.991866772865591E-4	DESIGN
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9996789732638898	WITHOUT_CLASSIFICATION	3.210267361102514E-4	DESIGN
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9993460770678871	WITHOUT_CLASSIFICATION	6.539229321129678E-4	DESIGN
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999021105686623	WITHOUT_CLASSIFICATION	9.788943133771115E-5	DESIGN
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9998474014041698	WITHOUT_CLASSIFICATION	1.5259859583016414E-4	DESIGN
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9995030071118076	WITHOUT_CLASSIFICATION	4.969928881922652E-4	DESIGN
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9998279021185302	WITHOUT_CLASSIFICATION	1.720978814698857E-4	DESIGN
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999048580184954	WITHOUT_CLASSIFICATION	9.514198150466139E-5	DESIGN
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9990984859009492	WITHOUT_CLASSIFICATION	9.015140990508359E-4	DESIGN
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9997395126020062	WITHOUT_CLASSIFICATION	2.604873979937782E-4	DESIGN
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9998354432210201	WITHOUT_CLASSIFICATION	1.645567789798805E-4	DESIGN
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9994412311588938	WITHOUT_CLASSIFICATION	5.587688411062498E-4	DESIGN
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9998335212402554	WITHOUT_CLASSIFICATION	1.66478759744611E-4	DESIGN
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999406782586302	WITHOUT_CLASSIFICATION	5.932174136987871E-5	DESIGN
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9994412311588938	WITHOUT_CLASSIFICATION	5.587688411062498E-4	DESIGN
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9998858480033692	WITHOUT_CLASSIFICATION	1.1415199663079615E-4	DESIGN
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9998232127733516	WITHOUT_CLASSIFICATION	1.767872266483433E-4	DESIGN
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.99988832227637	WITHOUT_CLASSIFICATION	1.1167772363000765E-4	DESIGN
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.99970784757981	WITHOUT_CLASSIFICATION	2.921524201899727E-4	DESIGN
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9998896979651327	WITHOUT_CLASSIFICATION	1.1030203486730315E-4	DESIGN
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9996568714317382	WITHOUT_CLASSIFICATION	3.4312856826181466E-4	DESIGN
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9997905461769316	WITHOUT_CLASSIFICATION	2.0945382306827327E-4	DESIGN
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9997301903496907	WITHOUT_CLASSIFICATION	2.6980965030928107E-4	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999200778662563	WITHOUT_CLASSIFICATION	7.992213374382081E-5	DESIGN
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999539323325507	WITHOUT_CLASSIFICATION	4.606766744933644E-5	DESIGN
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999290541297232	WITHOUT_CLASSIFICATION	7.094587027680242E-5	DESIGN
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9998451329841764	WITHOUT_CLASSIFICATION	1.5486701582347943E-4	DESIGN
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9995847807543984	WITHOUT_CLASSIFICATION	4.1521924560159184E-4	DESIGN
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9996779527308784	WITHOUT_CLASSIFICATION	3.2204726912159204E-4	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9999367161751271	WITHOUT_CLASSIFICATION	6.328382487289243E-5	DESIGN
set to default thread group	WITHOUT_CLASSIFICATION	0.9999367161751271	WITHOUT_CLASSIFICATION	6.328382487289243E-5	DESIGN
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999258965871097	WITHOUT_CLASSIFICATION	7.41034128902797E-5	DESIGN
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998904004098393	WITHOUT_CLASSIFICATION	1.0959959016063703E-4	DESIGN
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9994844109551645	WITHOUT_CLASSIFICATION	5.155890448356134E-4	DESIGN
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9996528182180306	WITHOUT_CLASSIFICATION	3.471817819693533E-4	DESIGN
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.99466144162343	WITHOUT_CLASSIFICATION	0.005338558376569974	DESIGN
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999920895218113	WITHOUT_CLASSIFICATION	7.910478188632441E-6	DESIGN
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.871195059351091	WITHOUT_CLASSIFICATION	0.12880494064890913	DESIGN
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9989047263968693	WITHOUT_CLASSIFICATION	0.0010952736031307306	DESIGN
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999715619495586	WITHOUT_CLASSIFICATION	2.8438050441346383E-5	DESIGN
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999322061248955	WITHOUT_CLASSIFICATION	6.779387510447996E-5	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999555236754084	WITHOUT_CLASSIFICATION	4.4476324591641386E-5	DESIGN
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999555236754084	WITHOUT_CLASSIFICATION	4.4476324591641386E-5	DESIGN
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.6472796373602759	DESIGN	0.3527203626397239	WITHOUT_CLASSIFICATION
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9982688884330032	WITHOUT_CLASSIFICATION	0.00173111156699683	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9934618841102352	WITHOUT_CLASSIFICATION	0.006538115889764868	DESIGN
Create Constants class	WITHOUT_CLASSIFICATION	0.9999851353003755	WITHOUT_CLASSIFICATION	1.4864699624589318E-5	DESIGN
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9991470858635465	WITHOUT_CLASSIFICATION	8.529141364535817E-4	DESIGN
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9978639019524694	WITHOUT_CLASSIFICATION	0.002136098047530489	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9999317689366112	WITHOUT_CLASSIFICATION	6.823106338885127E-5	DESIGN
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9986745696149626	WITHOUT_CLASSIFICATION	0.0013254303850373638	DESIGN
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999354012574119	WITHOUT_CLASSIFICATION	6.459874258811735E-5	DESIGN
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9953092851249425	WITHOUT_CLASSIFICATION	0.004690714875057451	DESIGN
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9989677067760979	WITHOUT_CLASSIFICATION	0.0010322932239020684	DESIGN
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999841191564665	WITHOUT_CLASSIFICATION	1.588084353350393E-5	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9999352240213122	WITHOUT_CLASSIFICATION	6.477597868781096E-5	DESIGN
Return false here	WITHOUT_CLASSIFICATION	0.9999352240213122	WITHOUT_CLASSIFICATION	6.477597868781096E-5	DESIGN
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9920926643548806	WITHOUT_CLASSIFICATION	0.007907335645119385	DESIGN
Should we do anything?	WITHOUT_CLASSIFICATION	0.9999215441113045	WITHOUT_CLASSIFICATION	7.845588869542482E-5	DESIGN
File class methods	WITHOUT_CLASSIFICATION	0.999929127668808	WITHOUT_CLASSIFICATION	7.087233119192794E-5	DESIGN
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9981346676129839	WITHOUT_CLASSIFICATION	0.0018653323870161096	DESIGN
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9974299184635653	WITHOUT_CLASSIFICATION	0.0025700815364347093	DESIGN
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999608423301612	WITHOUT_CLASSIFICATION	3.915766983879388E-5	DESIGN
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9996451468928955	WITHOUT_CLASSIFICATION	3.5485310710453696E-4	DESIGN
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999610578304754	WITHOUT_CLASSIFICATION	3.894216952451041E-5	DESIGN
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.9994281669679455	WITHOUT_CLASSIFICATION	5.718330320545493E-4	DESIGN
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9998035850666932	WITHOUT_CLASSIFICATION	1.9641493330668035E-4	DESIGN
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9934618841102352	WITHOUT_CLASSIFICATION	0.006538115889764868	DESIGN
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9998283469083896	WITHOUT_CLASSIFICATION	1.7165309161036935E-4	DESIGN
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9976705260638732	WITHOUT_CLASSIFICATION	0.0023294739361267654	DESIGN
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.9999512151175741	WITHOUT_CLASSIFICATION	4.878488242591179E-5	DESIGN
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9999702688500014	WITHOUT_CLASSIFICATION	2.9731149998667516E-5	DESIGN
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9998469391484611	WITHOUT_CLASSIFICATION	1.5306085153890233E-4	DESIGN
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9999957505241065	WITHOUT_CLASSIFICATION	4.249475893462708E-6	DESIGN
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9993153485409411	WITHOUT_CLASSIFICATION	6.846514590589435E-4	DESIGN
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9983178074579885	WITHOUT_CLASSIFICATION	0.0016821925420114302	DESIGN
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9997550913664074	WITHOUT_CLASSIFICATION	2.449086335925791E-4	DESIGN
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999709415689211	WITHOUT_CLASSIFICATION	2.9058431078958176E-5	DESIGN
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999709415689211	WITHOUT_CLASSIFICATION	2.9058431078958176E-5	DESIGN
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9920673605088961	WITHOUT_CLASSIFICATION	0.007932639491103977	DESIGN
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9994844753797824	WITHOUT_CLASSIFICATION	5.155246202175842E-4	DESIGN
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9998096103871732	WITHOUT_CLASSIFICATION	1.9038961282683624E-4	DESIGN
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9992147913888743	WITHOUT_CLASSIFICATION	7.85208611125868E-4	DESIGN
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.998800188709178	WITHOUT_CLASSIFICATION	0.0011998112908219478	DESIGN
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9985770037004014	WITHOUT_CLASSIFICATION	0.0014229962995986516	DESIGN
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
rb: readable	WITHOUT_CLASSIFICATION	0.9999530897579942	WITHOUT_CLASSIFICATION	4.69102420058387E-5	DESIGN
rename is successful	WITHOUT_CLASSIFICATION	0.9989695113648481	WITHOUT_CLASSIFICATION	0.0010304886351518781	DESIGN
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9988633656067639	WITHOUT_CLASSIFICATION	0.001136634393236075	DESIGN
try to rename one more time	WITHOUT_CLASSIFICATION	0.9930860379127779	WITHOUT_CLASSIFICATION	0.006913962087222041	DESIGN
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9973446830102929	WITHOUT_CLASSIFICATION	0.002655316989707099	DESIGN
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9992785964410733	WITHOUT_CLASSIFICATION	7.214035589267758E-4	DESIGN
RubyContinuation	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9994801502983208	WITHOUT_CLASSIFICATION	5.198497016792052E-4	DESIGN
16 ?	WITHOUT_CLASSIFICATION	0.9996374709778005	WITHOUT_CLASSIFICATION	3.625290221993662E-4	DESIGN
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9986260827660268	WITHOUT_CLASSIFICATION	0.0013739172339731788	DESIGN
size + 1;	WITHOUT_CLASSIFICATION	0.9999884769710986	WITHOUT_CLASSIFICATION	1.1523028901483833E-5	DESIGN
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9998628594091884	WITHOUT_CLASSIFICATION	1.3714059081165392E-4	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
------------------------------	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
put implementation	WITHOUT_CLASSIFICATION	0.9999443625573636	WITHOUT_CLASSIFICATION	5.563744263636005E-5	DESIGN
get implementation	WITHOUT_CLASSIFICATION	0.9999488141345888	WITHOUT_CLASSIFICATION	5.118586541127647E-5	DESIGN
specialized for value	WITHOUT_CLASSIFICATION	0.9999104213243748	WITHOUT_CLASSIFICATION	8.957867562513575E-5	DESIGN
delete implementation	WITHOUT_CLASSIFICATION	0.9999520618613421	WITHOUT_CLASSIFICATION	4.793813865799762E-5	DESIGN
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9992161243363066	WITHOUT_CLASSIFICATION	7.838756636933446E-4	DESIGN
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9992259806692497	WITHOUT_CLASSIFICATION	7.740193307501927E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9993900481249021	WITHOUT_CLASSIFICATION	6.099518750978036E-4	DESIGN
update the hash value	WITHOUT_CLASSIFICATION	0.9999953944108102	WITHOUT_CLASSIFICATION	4.605589189710165E-6	DESIGN
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9995282344353251	WITHOUT_CLASSIFICATION	4.717655646748467E-4	DESIGN
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9996342483632169	WITHOUT_CLASSIFICATION	3.657516367831033E-4	DESIGN
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9997203023777653	WITHOUT_CLASSIFICATION	2.796976222346074E-4	DESIGN
remain where we are	WITHOUT_CLASSIFICATION	0.9996970975836814	WITHOUT_CLASSIFICATION	3.0290241631861925E-4	DESIGN
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9998995371463629	WITHOUT_CLASSIFICATION	1.004628536370851E-4	DESIGN
default: don't retain	WITHOUT_CLASSIFICATION	0.99994114586629	WITHOUT_CLASSIFICATION	5.8854133709938096E-5	DESIGN
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9995755488356791	WITHOUT_CLASSIFICATION	4.2445116432080637E-4	DESIGN
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9947840172056317	WITHOUT_CLASSIFICATION	0.0052159827943683	DESIGN
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9934115145471727	WITHOUT_CLASSIFICATION	0.006588485452827256	DESIGN
first try as directory	WITHOUT_CLASSIFICATION	0.9999969515220891	WITHOUT_CLASSIFICATION	3.0484779108447115E-6	DESIGN
next as regular file	WITHOUT_CLASSIFICATION	0.999961875982004	WITHOUT_CLASSIFICATION	3.812401799597159E-5	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9985741134625752	WITHOUT_CLASSIFICATION	0.0014258865374247817	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
NIO-based	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Stream-based	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9997637590209159	WITHOUT_CLASSIFICATION	2.3624097908421412E-4	DESIGN
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.9984986146116563	WITHOUT_CLASSIFICATION	0.0015013853883436407	DESIGN
Constants for seek	WITHOUT_CLASSIFICATION	0.9999049586952599	WITHOUT_CLASSIFICATION	9.504130474019903E-5	DESIGN
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9995041666954589	WITHOUT_CLASSIFICATION	4.958333045410251E-4	DESIGN
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9996357371063094	WITHOUT_CLASSIFICATION	3.64262893690612E-4	DESIGN
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9936486282114769	WITHOUT_CLASSIFICATION	0.006351371788523095	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999826870230583	WITHOUT_CLASSIFICATION	1.73129769417861E-5	DESIGN
re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999851443864765	WITHOUT_CLASSIFICATION	1.4855613523511811E-5	DESIGN
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9932365703477822	WITHOUT_CLASSIFICATION	0.006763429652217792	DESIGN
re-register	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9997211225827083	WITHOUT_CLASSIFICATION	2.78877417291728E-4	DESIGN
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.9998405927799215	WITHOUT_CLASSIFICATION	1.5940722007841673E-4	DESIGN
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9998955365918636	WITHOUT_CLASSIFICATION	1.0446340813638705E-4	DESIGN
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.991684146675223	WITHOUT_CLASSIFICATION	0.008315853324777	DESIGN
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9838014899032523	WITHOUT_CLASSIFICATION	0.016198510096747668	DESIGN
IO class methods.	WITHOUT_CLASSIFICATION	0.9999612666769335	WITHOUT_CLASSIFICATION	3.873332306640182E-5	DESIGN
use original modes	WITHOUT_CLASSIFICATION	0.9999448564947956	WITHOUT_CLASSIFICATION	5.514350520438234E-5	DESIGN
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999684982235688	WITHOUT_CLASSIFICATION	3.150177643120377E-5	DESIGN
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999483686006289	WITHOUT_CLASSIFICATION	5.163139937113399E-5	DESIGN
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999692622354753	WITHOUT_CLASSIFICATION	3.073776452466689E-5	DESIGN
isRetained=true	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9633643755690615	WITHOUT_CLASSIFICATION	0.03663562443093853	DESIGN
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9983371052977452	WITHOUT_CLASSIFICATION	0.0016628947022549055	DESIGN
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9989847685437441	WITHOUT_CLASSIFICATION	0.0010152314562559485	DESIGN
Everything written	WITHOUT_CLASSIFICATION	0.9999745601936479	WITHOUT_CLASSIFICATION	2.5439806352017253E-5	DESIGN
return len - n;	WITHOUT_CLASSIFICATION	0.9998369963093953	WITHOUT_CLASSIFICATION	1.6300369060475673E-4	DESIGN
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9960877081367979	WITHOUT_CLASSIFICATION	0.003912291863202012	DESIGN
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9966311146989856	WITHOUT_CLASSIFICATION	0.003368885301014454	DESIGN
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9971714713739509	WITHOUT_CLASSIFICATION	0.0028285286260491733	DESIGN
Register the new descriptor	WITHOUT_CLASSIFICATION	0.999982733355403	WITHOUT_CLASSIFICATION	1.726664459695714E-5	DESIGN
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999547553017326	WITHOUT_CLASSIFICATION	4.524469826729354E-5	DESIGN
hmmmm	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9987390843027505	WITHOUT_CLASSIFICATION	0.0012609156972495158	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9995577366079994	WITHOUT_CLASSIFICATION	4.422633920006011E-4	DESIGN
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9998593356155856	WITHOUT_CLASSIFICATION	1.4066438441430356E-4	DESIGN
Length to read	WITHOUT_CLASSIFICATION	0.9999259284548729	WITHOUT_CLASSIFICATION	7.407154512707819E-5	DESIGN
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9996292611066148	WITHOUT_CLASSIFICATION	3.7073889338519163E-4	DESIGN
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999698917837622	WITHOUT_CLASSIFICATION	3.010821623783947E-5	DESIGN
select until read is ready	WITHOUT_CLASSIFICATION	0.9999810449151231	WITHOUT_CLASSIFICATION	1.8955084876904408E-5	DESIGN
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999947425598466	WITHOUT_CLASSIFICATION	5.257440153432987E-6	DESIGN
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999947068546722	WITHOUT_CLASSIFICATION	5.293145327787997E-6	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999417853576561	WITHOUT_CLASSIFICATION	5.821464234397781E-5	DESIGN
rb: writable	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999417853576561	WITHOUT_CLASSIFICATION	5.821464234397781E-5	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9527289017949383	WITHOUT_CLASSIFICATION	0.047271098205061764	DESIGN
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.8427702839747809	WITHOUT_CLASSIFICATION	0.15722971602521912	DESIGN
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9990716111389252	WITHOUT_CLASSIFICATION	9.28388861074713E-4	DESIGN
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.8885535675032752	WITHOUT_CLASSIFICATION	0.1114464324967248	DESIGN
class methods for IO	WITHOUT_CLASSIFICATION	0.9998425729957747	WITHOUT_CLASSIFICATION	1.5742700422534712E-4	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.999962351401708	WITHOUT_CLASSIFICATION	3.764859829208423E-5	DESIGN
write	WITHOUT_CLASSIFICATION	0.9999212822660197	WITHOUT_CLASSIFICATION	7.871773398025937E-5	DESIGN
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9995850764464944	WITHOUT_CLASSIFICATION	4.149235535056026E-4	DESIGN
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9990436489407671	WITHOUT_CLASSIFICATION	9.563510592329377E-4	DESIGN
FIXME: process options	WITHOUT_CLASSIFICATION	0.9999182618461566	WITHOUT_CLASSIFICATION	8.173815384339233E-5	DESIGN
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9885099892589192	WITHOUT_CLASSIFICATION	0.011490010741080744	DESIGN
NIO based pipe	WITHOUT_CLASSIFICATION	0.9998579676246208	WITHOUT_CLASSIFICATION	1.4203237537920474E-4	DESIGN
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9995849268735293	WITHOUT_CLASSIFICATION	4.1507312647070334E-4	DESIGN
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999236455214217	WITHOUT_CLASSIFICATION	7.635447857831513E-5	DESIGN
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9972973706984806	WITHOUT_CLASSIFICATION	0.002702629301519466	DESIGN
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9222987393621973	WITHOUT_CLASSIFICATION	0.07770126063780262	DESIGN
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9901175444285895	WITHOUT_CLASSIFICATION	0.009882455571410532	DESIGN
The class of this object	WITHOUT_CLASSIFICATION	0.999908710455277	WITHOUT_CLASSIFICATION	9.128954472296647E-5	DESIGN
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999156234044901	WITHOUT_CLASSIFICATION	8.437659550982077E-5	DESIGN
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.997208074948924	WITHOUT_CLASSIFICATION	0.002791925051075976	DESIGN
rb_class_boot	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
for interface impls	WITHOUT_CLASSIFICATION	0.9999018008422409	WITHOUT_CLASSIFICATION	9.819915775921815E-5	DESIGN
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9957447458787079	WITHOUT_CLASSIFICATION	0.004255254121292125	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9998600651979083	WITHOUT_CLASSIFICATION	1.399348020918025E-4	DESIGN
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999915308960947	WITHOUT_CLASSIFICATION	8.469103905302913E-5	DESIGN
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9976641679545941	WITHOUT_CLASSIFICATION	0.002335832045405948	DESIGN
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9842692962023342	WITHOUT_CLASSIFICATION	0.015730703797665765	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.999975436004643	WITHOUT_CLASSIFICATION	2.4563995357065147E-5	DESIGN
Struct methods	WITHOUT_CLASSIFICATION	0.999883192605035	WITHOUT_CLASSIFICATION	1.1680739496493056E-4	DESIGN
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999592127974709	WITHOUT_CLASSIFICATION	4.078720252909423E-4	DESIGN
define access methods.	WITHOUT_CLASSIFICATION	0.9999457299316534	WITHOUT_CLASSIFICATION	5.427006834652993E-5	DESIGN
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9947081111991724	WITHOUT_CLASSIFICATION	0.005291888800827633	DESIGN
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.99173415304278	WITHOUT_CLASSIFICATION	0.008265846957220073	DESIGN
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999327434059516	WITHOUT_CLASSIFICATION	6.725659404838836E-5	DESIGN
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9998321381208316	WITHOUT_CLASSIFICATION	1.678618791682869E-4	DESIGN
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.999962971777296	WITHOUT_CLASSIFICATION	3.7028222704034174E-5	DESIGN
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9969522428111995	WITHOUT_CLASSIFICATION	0.0030477571888004504	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9996374709778005	WITHOUT_CLASSIFICATION	3.625290221993662E-4	DESIGN
Atomic ?	WITHOUT_CLASSIFICATION	0.9996374709778005	WITHOUT_CLASSIFICATION	3.625290221993662E-4	DESIGN
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9960080945580624	WITHOUT_CLASSIFICATION	0.003991905441937564	DESIGN
superClass may be null.	WITHOUT_CLASSIFICATION	0.9999643121599392	WITHOUT_CLASSIFICATION	3.568784006091119E-5	DESIGN
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9747655118279194	WITHOUT_CLASSIFICATION	0.025234488172080665	DESIGN
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9996411503921041	WITHOUT_CLASSIFICATION	3.588496078958738E-4	DESIGN
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.9998532609088524	WITHOUT_CLASSIFICATION	1.4673909114764684E-4	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9999931066297104	WITHOUT_CLASSIFICATION	6.893370289600013E-6	DESIGN
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9996069749211196	WITHOUT_CLASSIFICATION	3.930250788803443E-4	DESIGN
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9998874391213686	WITHOUT_CLASSIFICATION	1.1256087863138092E-4	DESIGN
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9960368902087173	WITHOUT_CLASSIFICATION	0.003963109791282667	DESIGN
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9991493314011451	WITHOUT_CLASSIFICATION	8.506685988549484E-4	DESIGN
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9996510713184791	WITHOUT_CLASSIFICATION	3.489286815208425E-4	DESIGN
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9996227069166774	WITHOUT_CLASSIFICATION	3.7729308332259476E-4	DESIGN
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9996002152620264	WITHOUT_CLASSIFICATION	3.9978473797364864E-4	DESIGN
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9969836317382337	WITHOUT_CLASSIFICATION	0.003016368261766405	DESIGN
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.8276339821039457	DESIGN	0.1723660178960543	WITHOUT_CLASSIFICATION
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9984076473442411	WITHOUT_CLASSIFICATION	0.001592352655758921	DESIGN
superClazz = null;	WITHOUT_CLASSIFICATION	0.9999936442325333	WITHOUT_CLASSIFICATION	6.355767466663268E-6	DESIGN
reopen a java class	WITHOUT_CLASSIFICATION	0.9999391389048564	WITHOUT_CLASSIFICATION	6.086109514349428E-5	DESIGN
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.8305400402873336	WITHOUT_CLASSIFICATION	0.16945995971266628	DESIGN
reopen a java module	WITHOUT_CLASSIFICATION	0.9998652427482264	WITHOUT_CLASSIFICATION	1.347572517735275E-4	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.9998475822751364	WITHOUT_CLASSIFICATION	1.5241772486368783E-4	DESIGN
FIXME warning	WITHOUT_CLASSIFICATION	0.9998475822751364	WITHOUT_CLASSIFICATION	1.5241772486368783E-4	DESIGN
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9971285645546833	WITHOUT_CLASSIFICATION	0.00287143544531674	DESIGN
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9986529004721664	WITHOUT_CLASSIFICATION	0.001347099527833619	DESIGN
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9998550463981634	WITHOUT_CLASSIFICATION	1.4495360183656528E-4	DESIGN
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9989304171752255	WITHOUT_CLASSIFICATION	0.0010695828247745858	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9996810232449962	WITHOUT_CLASSIFICATION	3.1897675500384157E-4	DESIGN
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9995797641359878	WITHOUT_CLASSIFICATION	4.2023586401220686E-4	DESIGN
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9990006607900089	WITHOUT_CLASSIFICATION	9.993392099911088E-4	DESIGN
Module class methods	WITHOUT_CLASSIFICATION	0.9999273458293599	WITHOUT_CLASSIFICATION	7.265417063998314E-5	DESIGN
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.8272236026699947	WITHOUT_CLASSIFICATION	0.17277639733000524	DESIGN
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9995370331005963	WITHOUT_CLASSIFICATION	4.629668994036899E-4	DESIGN
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9994837621706846	WITHOUT_CLASSIFICATION	5.162378293154481E-4	DESIGN
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9841352494614717	WITHOUT_CLASSIFICATION	0.01586475053852842	DESIGN
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999349510243277	WITHOUT_CLASSIFICATION	6.50489756722314E-5	DESIGN
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9978530091133913	WITHOUT_CLASSIFICATION	0.0021469908866088233	DESIGN
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9920982032392869	WITHOUT_CLASSIFICATION	0.007901796760713122	DESIGN
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.999975436004643	WITHOUT_CLASSIFICATION	2.4563995357065147E-5	DESIGN
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998078631523206	WITHOUT_CLASSIFICATION	1.92136847679266E-4	DESIGN
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9994428908244326	WITHOUT_CLASSIFICATION	5.571091755674122E-4	DESIGN
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9993626463731777	WITHOUT_CLASSIFICATION	6.373536268222134E-4	DESIGN
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9899824753826857	WITHOUT_CLASSIFICATION	0.010017524617314259	DESIGN
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9952271599764217	WITHOUT_CLASSIFICATION	0.004772840023578234	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9990657555038184	WITHOUT_CLASSIFICATION	9.342444961815738E-4	DESIGN
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9990792297019597	WITHOUT_CLASSIFICATION	9.207702980401857E-4	DESIGN
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9522263931192322	WITHOUT_CLASSIFICATION	0.04777360688076787	DESIGN
reopen	WITHOUT_CLASSIFICATION	0.9999116350996029	WITHOUT_CLASSIFICATION	8.836490039713184E-5	DESIGN
ARGF methods	WITHOUT_CLASSIFICATION	0.999883192605035	WITHOUT_CLASSIFICATION	1.1680739496493056E-4	DESIGN
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
one optional, one required args	WITHOUT_CLASSIFICATION	0.9994372036204868	WITHOUT_CLASSIFICATION	5.627963795132142E-4	DESIGN
one optional and no required args	WITHOUT_CLASSIFICATION	0.999740350511158	WITHOUT_CLASSIFICATION	2.5964948884201616E-4	DESIGN
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999959166935813	WITHOUT_CLASSIFICATION	4.0833064186931656E-5	DESIGN
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999722993366892	WITHOUT_CLASSIFICATION	2.770066331081022E-5	DESIGN
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9997531232560334	WITHOUT_CLASSIFICATION	2.468767439666572E-4	DESIGN
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9994644385024319	WITHOUT_CLASSIFICATION	5.355614975681197E-4	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9984477656796419	WITHOUT_CLASSIFICATION	0.0015522343203580474	DESIGN
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.999831000789419	WITHOUT_CLASSIFICATION	1.689992105809648E-4	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999013572535052	WITHOUT_CLASSIFICATION	9.864274649484762E-5	DESIGN
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9996423830696306	WITHOUT_CLASSIFICATION	3.5761693036938564E-4	DESIGN
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9990840019009373	WITHOUT_CLASSIFICATION	9.159980990627732E-4	DESIGN
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9989178678948992	WITHOUT_CLASSIFICATION	0.0010821321051008653	DESIGN
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9986673043333486	WITHOUT_CLASSIFICATION	0.001332695666651427	DESIGN
ignore error	WITHOUT_CLASSIFICATION	0.9998930199439744	WITHOUT_CLASSIFICATION	1.0698005602568426E-4	DESIGN
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9999751296441256	WITHOUT_CLASSIFICATION	2.4870355874446276E-5	DESIGN
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9996372784955685	WITHOUT_CLASSIFICATION	3.6272150443145986E-4	DESIGN
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9946420628535438	WITHOUT_CLASSIFICATION	0.005357937146456162	DESIGN
odd	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
JRubyClient	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.999961812060448	WITHOUT_CLASSIFICATION	3.818793955203585E-5	DESIGN
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9957761895412979	WITHOUT_CLASSIFICATION	0.0042238104587021316	DESIGN
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.997952170514348	WITHOUT_CLASSIFICATION	0.0020478294856519524	DESIGN
r = x 2 y	WITHOUT_CLASSIFICATION	0.9999945595330997	WITHOUT_CLASSIFICATION	5.440466900292089E-6	DESIGN
0!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
1!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
2!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
3!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
4!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
5!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
6!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
7!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
8!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
9!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
11!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
12!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
13!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
15!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
16!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
17!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
19!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
20!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
21!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Static constants	WITHOUT_CLASSIFICATION	0.9999354074861653	WITHOUT_CLASSIFICATION	6.459251383468023E-5	DESIGN
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.998899993171935	WITHOUT_CLASSIFICATION	0.001100006828065043	DESIGN
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9997934926488772	WITHOUT_CLASSIFICATION	2.0650735112272945E-4	DESIGN
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9998086092929773	WITHOUT_CLASSIFICATION	1.9139070702278417E-4	DESIGN
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9990915376782624	WITHOUT_CLASSIFICATION	9.084623217374494E-4	DESIGN
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9996770361979841	WITHOUT_CLASSIFICATION	3.2296380201587776E-4	DESIGN
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999362250140178	WITHOUT_CLASSIFICATION	6.377498598213549E-5	DESIGN
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9985724050080372	WITHOUT_CLASSIFICATION	0.0014275949919627631	DESIGN
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999760953614195	WITHOUT_CLASSIFICATION	2.3904638580488503E-5	DESIGN
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9995135499056885	WITHOUT_CLASSIFICATION	4.86450094311508E-4	DESIGN
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.6327486608218208	WITHOUT_CLASSIFICATION	0.3672513391781793	DESIGN
integer division	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9997769759151491	WITHOUT_CLASSIFICATION	2.2302408485076004E-4	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
rounding neccessary	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9996770361979841	WITHOUT_CLASSIFICATION	3.2296380201587776E-4	DESIGN
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9916695205045358	WITHOUT_CLASSIFICATION	0.008330479495464121	DESIGN
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9982855952493412	WITHOUT_CLASSIFICATION	0.0017144047506587534	DESIGN
...round to that digit	WITHOUT_CLASSIFICATION	0.9998869476766374	WITHOUT_CLASSIFICATION	1.1305232336257473E-4	DESIGN
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9995945039338267	WITHOUT_CLASSIFICATION	4.054960661734098E-4	DESIGN
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9992454241157191	WITHOUT_CLASSIFICATION	7.545758842808699E-4	DESIGN
sign	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9993197579549421	WITHOUT_CLASSIFICATION	6.802420450578828E-4	DESIGN
normalize the value	WITHOUT_CLASSIFICATION	0.9999809208535769	WITHOUT_CLASSIFICATION	1.9079146423081604E-5	DESIGN
base	WITHOUT_CLASSIFICATION	0.9999292886065272	WITHOUT_CLASSIFICATION	7.071139347277652E-5	DESIGN
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9958716589004392	WITHOUT_CLASSIFICATION	0.004128341099560819	DESIGN
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9996049484157626	WITHOUT_CLASSIFICATION	3.9505158423733315E-4	DESIGN
eh?!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9998577070037733	WITHOUT_CLASSIFICATION	1.422929962268253E-4	DESIGN
General number and precision checking	WITHOUT_CLASSIFICATION	0.9995686112074552	WITHOUT_CLASSIFICATION	4.3138879254479335E-4	DESIGN
the requested precision	WITHOUT_CLASSIFICATION	0.9999909410644647	WITHOUT_CLASSIFICATION	9.058935535322132E-6	DESIGN
Proc class	WITHOUT_CLASSIFICATION	0.9999448748708796	WITHOUT_CLASSIFICATION	5.512512912043984E-5	DESIGN
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9997834898987634	WITHOUT_CLASSIFICATION	2.1651010123656056E-4	DESIGN
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9995911725593856	WITHOUT_CLASSIFICATION	4.088274406144312E-4	DESIGN
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9967597540897191	WITHOUT_CLASSIFICATION	0.003240245910281045	DESIGN
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999203925017958	WITHOUT_CLASSIFICATION	7.960749820433549E-5	DESIGN
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9940153901553058	WITHOUT_CLASSIFICATION	0.005984609844694158	DESIGN
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9987595602477423	WITHOUT_CLASSIFICATION	0.001240439752257771	DESIGN
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.999850257252659	WITHOUT_CLASSIFICATION	1.497427473410065E-4	DESIGN
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9996295131469178	WITHOUT_CLASSIFICATION	3.7048685308215586E-4	DESIGN
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999926567219527	WITHOUT_CLASSIFICATION	7.343278047316696E-6	DESIGN
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9992157519844282	WITHOUT_CLASSIFICATION	7.842480155716785E-4	DESIGN
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9940251737631842	WITHOUT_CLASSIFICATION	0.005974826236815689	DESIGN
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9999843357364191	WITHOUT_CLASSIFICATION	1.5664263581005368E-5	DESIGN
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999796704818043	WITHOUT_CLASSIFICATION	2.0329518195670386E-5	DESIGN
root x is ready!	WITHOUT_CLASSIFICATION	0.9999444679176698	WITHOUT_CLASSIFICATION	5.5532082330239654E-5	DESIGN
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.9999635754539453	WITHOUT_CLASSIFICATION	3.642454605468169E-5	DESIGN
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999633200834596	WITHOUT_CLASSIFICATION	3.6679916540432016E-5	DESIGN
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
c: bind_eval	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9993659577218088	WITHOUT_CLASSIFICATION	6.340422781911648E-4	DESIGN
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999417853576561	WITHOUT_CLASSIFICATION	5.821464234397781E-5	DESIGN
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9589648678225703	WITHOUT_CLASSIFICATION	0.04103513217742967	DESIGN
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9994791688041851	WITHOUT_CLASSIFICATION	5.20831195814892E-4	DESIGN
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9704567923015299	WITHOUT_CLASSIFICATION	0.029543207698470186	DESIGN
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9991332768257224	WITHOUT_CLASSIFICATION	8.667231742776253E-4	DESIGN
try the normal property first	WITHOUT_CLASSIFICATION	0.9999947674376566	WITHOUT_CLASSIFICATION	5.2325623433842E-6	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999839854718994	WITHOUT_CLASSIFICATION	1.601452810071221E-5	DESIGN
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999839854718994	WITHOUT_CLASSIFICATION	1.601452810071221E-5	DESIGN
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9992628666393378	WITHOUT_CLASSIFICATION	7.371333606621146E-4	DESIGN
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.999241014392358	WITHOUT_CLASSIFICATION	7.589856076420542E-4	DESIGN
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9998471272649355	WITHOUT_CLASSIFICATION	1.5287273506442125E-4	DESIGN
consume the file name	WITHOUT_CLASSIFICATION	0.9999821415338866	WITHOUT_CLASSIFICATION	1.7858466113413465E-5	DESIGN
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9983973564168931	WITHOUT_CLASSIFICATION	0.0016026435831069544	DESIGN
try cwd first	WITHOUT_CLASSIFICATION	0.9999684571012556	WITHOUT_CLASSIFICATION	3.154289874445875E-5	DESIGN
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9408045841651109	WITHOUT_CLASSIFICATION	0.05919541583488914	DESIGN
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.999921261100112	WITHOUT_CLASSIFICATION	7.873889988796204E-5	DESIGN
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999946691061004	WITHOUT_CLASSIFICATION	5.3308938996332275E-6	DESIGN
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.999921261100112	WITHOUT_CLASSIFICATION	7.873889988796204E-5	DESIGN
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9999338027546774	WITHOUT_CLASSIFICATION	6.619724532256421E-5	DESIGN
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999426508454535	WITHOUT_CLASSIFICATION	5.734915454640008E-5	DESIGN
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9999698463814942	WITHOUT_CLASSIFICATION	3.015361850568844E-5	DESIGN
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9222987393621973	WITHOUT_CLASSIFICATION	0.07770126063780262	DESIGN
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9987494012615675	WITHOUT_CLASSIFICATION	0.0012505987384324316	DESIGN
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9983179059626862	WITHOUT_CLASSIFICATION	0.0016820940373137353	DESIGN
must be power of 2!	WITHOUT_CLASSIFICATION	0.999920946425612	WITHOUT_CLASSIFICATION	7.905357438791079E-5	DESIGN
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9992282205480248	WITHOUT_CLASSIFICATION	7.717794519752743E-4	DESIGN
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999426508454535	WITHOUT_CLASSIFICATION	5.734915454640008E-5	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999755597971461	WITHOUT_CLASSIFICATION	2.444020285393379E-5	DESIGN
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999755597971461	WITHOUT_CLASSIFICATION	2.444020285393379E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999264258138617	WITHOUT_CLASSIFICATION	7.357418613829659E-5	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9999673941618618	WITHOUT_CLASSIFICATION	3.2605838138318775E-5	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9984327430119408	WITHOUT_CLASSIFICATION	0.0015672569880591295	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999804619575999	WITHOUT_CLASSIFICATION	1.9538042400009622E-5	DESIGN
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999112361451186	WITHOUT_CLASSIFICATION	8.87638548814895E-5	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9979455394857133	WITHOUT_CLASSIFICATION	0.002054460514286714	DESIGN
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9997409947423749	WITHOUT_CLASSIFICATION	2.5900525762510796E-4	DESIGN
Profile	WITHOUT_CLASSIFICATION	0.9999214913709461	WITHOUT_CLASSIFICATION	7.850862905398788E-5	DESIGN
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.9996352479617735	WITHOUT_CLASSIFICATION	3.647520382265639E-4	DESIGN
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9994556180454431	WITHOUT_CLASSIFICATION	5.443819545568611E-4	DESIGN
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9991874367350629	WITHOUT_CLASSIFICATION	8.125632649369696E-4	DESIGN
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9997680870994425	WITHOUT_CLASSIFICATION	2.3191290055739368E-4	DESIGN
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9989682356288373	WITHOUT_CLASSIFICATION	0.0010317643711627122	DESIGN
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9948829367690127	WITHOUT_CLASSIFICATION	0.005117063230987237	DESIGN
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9992657878406269	WITHOUT_CLASSIFICATION	7.342121593730004E-4	DESIGN
reset the state	WITHOUT_CLASSIFICATION	0.9999831328135339	WITHOUT_CLASSIFICATION	1.6867186466124076E-5	DESIGN
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9675360204724984	WITHOUT_CLASSIFICATION	0.03246397952750161	DESIGN
rb_match_busy	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
str is frozen	WITHOUT_CLASSIFICATION	0.9999324939376141	WITHOUT_CLASSIFICATION	6.750606238588837E-5	DESIGN
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9961415839301391	WITHOUT_CLASSIFICATION	0.0038584160698610323	DESIGN
JRubyServer	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9991198046184213	WITHOUT_CLASSIFICATION	8.801953815785561E-4	DESIGN
boot the Object class	WITHOUT_CLASSIFICATION	0.9999895826348928	WITHOUT_CLASSIFICATION	1.0417365107273886E-5	DESIGN
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9998600651979083	WITHOUT_CLASSIFICATION	1.399348020918025E-4	DESIGN
update superclass reference	WITHOUT_CLASSIFICATION	0.9999931066297104	WITHOUT_CLASSIFICATION	6.893370289600013E-6	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9999859811715327	WITHOUT_CLASSIFICATION	1.4018828467249114E-5	DESIGN
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9630117850665936	WITHOUT_CLASSIFICATION	0.036988214933406406	DESIGN
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.999885085505943	WITHOUT_CLASSIFICATION	1.1491449405700354E-4	DESIGN
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9937469546004323	WITHOUT_CLASSIFICATION	0.006253045399567688	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.999935917681078	WITHOUT_CLASSIFICATION	6.40823189219921E-5	DESIGN
use parent's marshal	WITHOUT_CLASSIFICATION	0.999935917681078	WITHOUT_CLASSIFICATION	6.40823189219921E-5	DESIGN
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.999669784676924	WITHOUT_CLASSIFICATION	3.302153230759476E-4	DESIGN
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.999890056127606	WITHOUT_CLASSIFICATION	1.0994387239408708E-4	DESIGN
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999589873642629	WITHOUT_CLASSIFICATION	4.101263573711034E-5	DESIGN
update all subclasses	WITHOUT_CLASSIFICATION	0.9999866649494207	WITHOUT_CLASSIFICATION	1.3335050579252807E-5	DESIGN
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9988636168626222	WITHOUT_CLASSIFICATION	0.0011363831373777731	DESIGN
static initializing method	WITHOUT_CLASSIFICATION	0.9997688557797383	WITHOUT_CLASSIFICATION	2.3114422026165705E-4	DESIGN
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9988532394905355	WITHOUT_CLASSIFICATION	0.0011467605094645271	DESIGN
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9997390532721931	WITHOUT_CLASSIFICATION	2.609467278068102E-4	DESIGN
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9995910488942786	WITHOUT_CLASSIFICATION	4.0895110572135204E-4	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9999892202150149	WITHOUT_CLASSIFICATION	1.0779784985006657E-5	DESIGN
self method name	WITHOUT_CLASSIFICATION	0.9994690631295172	WITHOUT_CLASSIFICATION	5.309368704827632E-4	DESIGN
the default allocator	WITHOUT_CLASSIFICATION	0.9999862608309703	WITHOUT_CLASSIFICATION	1.3739169029725353E-5	DESIGN
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999611327081177	WITHOUT_CLASSIFICATION	3.886729188228022E-5	DESIGN
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9998964306571481	WITHOUT_CLASSIFICATION	1.035693428519346E-4	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999259531538113	WITHOUT_CLASSIFICATION	7.404684618876545E-5	DESIGN
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9993765726462633	WITHOUT_CLASSIFICATION	6.234273537366878E-4	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9942276063645629	WITHOUT_CLASSIFICATION	0.005772393635437084	DESIGN
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999393614352107	WITHOUT_CLASSIFICATION	6.0638564789458824E-5	DESIGN
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.990144534917767	WITHOUT_CLASSIFICATION	0.00985546508223299	DESIGN
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.99986898543839	WITHOUT_CLASSIFICATION	1.3101456160997756E-4	DESIGN
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9994749389077914	WITHOUT_CLASSIFICATION	5.250610922086112E-4	DESIGN
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9975161994060195	WITHOUT_CLASSIFICATION	0.002483800593980377	DESIGN
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
a gotcha	WITHOUT_CLASSIFICATION	0.9998084693609196	WITHOUT_CLASSIFICATION	1.9153063908038248E-4	DESIGN
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9998789872384514	WITHOUT_CLASSIFICATION	1.2101276154869654E-4	DESIGN
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9997487735759978	WITHOUT_CLASSIFICATION	2.5122642400220304E-4	DESIGN
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999676198245611	WITHOUT_CLASSIFICATION	3.2380175438834106E-5	DESIGN
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9999841622701081	WITHOUT_CLASSIFICATION	1.5837729891882968E-5	DESIGN
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999259531538113	WITHOUT_CLASSIFICATION	7.404684618876545E-5	DESIGN
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999200057992734	WITHOUT_CLASSIFICATION	7.999420072654721E-5	DESIGN
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9991700081018848	WITHOUT_CLASSIFICATION	8.299918981151399E-4	DESIGN
MRI behavior:	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Numeric.equal	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
provider is not available	WITHOUT_CLASSIFICATION	0.9999269739585032	WITHOUT_CLASSIFICATION	7.30260414968733E-5	DESIGN
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9987843041298898	WITHOUT_CLASSIFICATION	0.0012156958701101531	DESIGN
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9988931434270665	WITHOUT_CLASSIFICATION	0.00110685657293346	DESIGN
RubyDigest	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9997889466990889	WITHOUT_CLASSIFICATION	2.1105330091098913E-4	DESIGN
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9995207926062276	WITHOUT_CLASSIFICATION	4.79207393772375E-4	DESIGN
we only add live threads	WITHOUT_CLASSIFICATION	0.9999815027978662	WITHOUT_CLASSIFICATION	1.849720213375144E-5	DESIGN
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9979585941030574	WITHOUT_CLASSIFICATION	0.002041405896942639	DESIGN
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9992258740038117	WITHOUT_CLASSIFICATION	7.741259961883194E-4	DESIGN
JRubyService	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
while	WITHOUT_CLASSIFICATION	0.9999314442956468	WITHOUT_CLASSIFICATION	6.855570435317627E-5	DESIGN
\OOO	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.9936491334441944	WITHOUT_CLASSIFICATION	0.006350866555805662	DESIGN
mask off "once" flag	WITHOUT_CLASSIFICATION	0.999979930826325	WITHOUT_CLASSIFICATION	2.0069173675118436E-5	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9996408842244541	WITHOUT_CLASSIFICATION	3.59115775546011E-4	DESIGN
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9992827807641984	WITHOUT_CLASSIFICATION	7.172192358015632E-4	DESIGN
silent ?	WITHOUT_CLASSIFICATION	0.9996374709778005	WITHOUT_CLASSIFICATION	3.625290221993662E-4	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9999639620378499	WITHOUT_CLASSIFICATION	3.603796215006164E-5	DESIGN
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9991587974567624	WITHOUT_CLASSIFICATION	8.412025432376927E-4	DESIGN
Surrogates	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
do not load the class if not used	WITHOUT_CLASSIFICATION	0.9995529839701375	WITHOUT_CLASSIFICATION	4.470160298624741E-4	DESIGN
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
\xHH	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
\\uHHHH	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
inner switch	WITHOUT_CLASSIFICATION	0.9999558309842655	WITHOUT_CLASSIFICATION	4.416901573437317E-5	DESIGN
newInstance here	WITHOUT_CLASSIFICATION	0.9998411763745786	WITHOUT_CLASSIFICATION	1.5882362542134952E-4	DESIGN
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999252534715153	WITHOUT_CLASSIFICATION	7.474652848470041E-5	DESIGN
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
option_to_str	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9982905125212844	WITHOUT_CLASSIFICATION	0.0017094874787155858	DESIGN
args should be before block	WITHOUT_CLASSIFICATION	0.9999403249655467	WITHOUT_CLASSIFICATION	5.967503445334518E-5	DESIGN
args should be at end	WITHOUT_CLASSIFICATION	0.9996921600320622	WITHOUT_CLASSIFICATION	3.0783996793790704E-4	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9892016419745169	WITHOUT_CLASSIFICATION	0.01079835802548316	DESIGN
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9892016419745169	WITHOUT_CLASSIFICATION	0.01079835802548316	DESIGN
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9998732101458646	WITHOUT_CLASSIFICATION	1.2678985413533118E-4	DESIGN
start a new populator	WITHOUT_CLASSIFICATION	0.9999034710408009	WITHOUT_CLASSIFICATION	9.652895919910089E-5	DESIGN
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9997088547652134	WITHOUT_CLASSIFICATION	2.9114523478652126E-4	DESIGN
add all names for this annotation	WITHOUT_CLASSIFICATION	0.9990090569202291	WITHOUT_CLASSIFICATION	9.909430797708718E-4	DESIGN
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9996975731480537	WITHOUT_CLASSIFICATION	3.024268519462528E-4	DESIGN
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9990856206969794	WITHOUT_CLASSIFICATION	9.143793030206764E-4	DESIGN
single method, use normal logic	WITHOUT_CLASSIFICATION	0.9977955012320807	WITHOUT_CLASSIFICATION	0.002204498767919315	DESIGN
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999596206417224	WITHOUT_CLASSIFICATION	4.037935827754778E-5	DESIGN
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9938706977174733	WITHOUT_CLASSIFICATION	0.006129302282526754	DESIGN
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.999962924930167	WITHOUT_CLASSIFICATION	3.7075069833033934E-5	DESIGN
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999921261100112	WITHOUT_CLASSIFICATION	7.873889988796204E-5	DESIGN
}	WITHOUT_CLASSIFICATION	0.999920350576358	WITHOUT_CLASSIFICATION	7.964942364203387E-5	DESIGN
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9991883002987428	WITHOUT_CLASSIFICATION	8.11699701257136E-4	DESIGN
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9995596269739961	WITHOUT_CLASSIFICATION	4.4037302600383226E-4	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9984699525389559	WITHOUT_CLASSIFICATION	0.001530047461044096	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9999590913176027	WITHOUT_CLASSIFICATION	4.090868239720908E-5	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9998931568033939	WITHOUT_CLASSIFICATION	1.0684319660609496E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9976093594383065	WITHOUT_CLASSIFICATION	0.0023906405616935258	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9976093594383065	WITHOUT_CLASSIFICATION	0.0023906405616935258	DESIGN
colon3	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Colon3	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9982708868875245	WITHOUT_CLASSIFICATION	0.0017291131124755569	DESIGN
For b.foo	WITHOUT_CLASSIFICATION	0.9999674197006625	WITHOUT_CLASSIFICATION	3.258029933746406E-5	DESIGN
instance config for the script run	WITHOUT_CLASSIFICATION	0.999365588964007	WITHOUT_CLASSIFICATION	6.344110359929924E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9976093594383065	WITHOUT_CLASSIFICATION	0.0023906405616935258	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9976093594383065	WITHOUT_CLASSIFICATION	0.0023906405616935258	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996921093011069	WITHOUT_CLASSIFICATION	3.0789069889313814E-4	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996921093011069	WITHOUT_CLASSIFICATION	3.0789069889313814E-4	DESIGN
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9998915593893611	WITHOUT_CLASSIFICATION	1.0844061063882813E-4	DESIGN
For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999827456536489	WITHOUT_CLASSIFICATION	1.7254346351126064E-5	DESIGN
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9998219566045446	WITHOUT_CLASSIFICATION	1.7804339545539582E-4	DESIGN
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9842510679487934	WITHOUT_CLASSIFICATION	0.015748932051206702	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996366786783674	WITHOUT_CLASSIFICATION	3.633213216326599E-4	DESIGN
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996366786783674	WITHOUT_CLASSIFICATION	3.633213216326599E-4	DESIGN
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9934278733971785	WITHOUT_CLASSIFICATION	0.006572126602821489	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9950517817775743	WITHOUT_CLASSIFICATION	0.004948218222425747	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9985240794561495	WITHOUT_CLASSIFICATION	0.001475920543850466	DESIGN
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9998215818451253	WITHOUT_CLASSIFICATION	1.7841815487463757E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996921093011069	WITHOUT_CLASSIFICATION	3.0789069889313814E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9999850348782294	WITHOUT_CLASSIFICATION	1.4965121770470397E-5	DESIGN
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9943596117174502	WITHOUT_CLASSIFICATION	0.0056403882825498105	DESIGN
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9998905791878506	WITHOUT_CLASSIFICATION	1.0942081214945555E-4	DESIGN
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9623132553609769	WITHOUT_CLASSIFICATION	0.0376867446390231	DESIGN
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9994102620806724	WITHOUT_CLASSIFICATION	5.897379193275754E-4	DESIGN
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9783598736075948	WITHOUT_CLASSIFICATION	0.021640126392405208	DESIGN
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9989716551363542	WITHOUT_CLASSIFICATION	0.0010283448636457112	DESIGN
set argv from main's args	WITHOUT_CLASSIFICATION	0.9998651484457353	WITHOUT_CLASSIFICATION	1.348515542647149E-4	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9999590913176027	WITHOUT_CLASSIFICATION	4.090868239720908E-5	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9976093594383065	WITHOUT_CLASSIFICATION	0.0023906405616935258	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996921093011069	WITHOUT_CLASSIFICATION	3.0789069889313814E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9999850348782294	WITHOUT_CLASSIFICATION	1.4965121770470397E-5	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.930678410335037	WITHOUT_CLASSIFICATION	0.06932158966496303	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.930678410335037	WITHOUT_CLASSIFICATION	0.06932158966496303	DESIGN
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9729085534581283	WITHOUT_CLASSIFICATION	0.027091446541871674	DESIGN
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9987392756385675	WITHOUT_CLASSIFICATION	0.0012607243614325774	DESIGN
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9972854227863494	WITHOUT_CLASSIFICATION	0.002714577213650697	DESIGN
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9998101830270898	WITHOUT_CLASSIFICATION	1.898169729101777E-4	DESIGN
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9991822654495515	WITHOUT_CLASSIFICATION	8.177345504486699E-4	DESIGN
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999311997896385	WITHOUT_CLASSIFICATION	6.88002103615418E-5	DESIGN
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9980901256436827	WITHOUT_CLASSIFICATION	0.0019098743563173315	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999685746645805	WITHOUT_CLASSIFICATION	3.1425335419503123E-4	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.996883917845465	WITHOUT_CLASSIFICATION	0.0031160821545349396	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.999798006804829	WITHOUT_CLASSIFICATION	2.0199319517098043E-4	DESIGN
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999071659131867	WITHOUT_CLASSIFICATION	9.283408681333292E-5	DESIGN
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999142055869435	WITHOUT_CLASSIFICATION	8.579441305648759E-5	DESIGN
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999955385184631	WITHOUT_CLASSIFICATION	4.461481536848659E-6	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9998931568033939	WITHOUT_CLASSIFICATION	1.0684319660609496E-4	DESIGN
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996921093011069	WITHOUT_CLASSIFICATION	3.0789069889313814E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9950517817775743	WITHOUT_CLASSIFICATION	0.004948218222425747	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9985240794561495	WITHOUT_CLASSIFICATION	0.001475920543850466	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9985240794561495	WITHOUT_CLASSIFICATION	0.001475920543850466	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996921093011069	WITHOUT_CLASSIFICATION	3.0789069889313814E-4	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9999850348782294	WITHOUT_CLASSIFICATION	1.4965121770470397E-5	DESIGN
The name of the variable	WITHOUT_CLASSIFICATION	0.9999850348782294	WITHOUT_CLASSIFICATION	1.4965121770470397E-5	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.930678410335037	WITHOUT_CLASSIFICATION	0.06932158966496303	DESIGN
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999102111540185	WITHOUT_CLASSIFICATION	8.978884598157174E-5	DESIGN
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9995938918615657	WITHOUT_CLASSIFICATION	4.061081384343523E-4	DESIGN
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.999873973578849	WITHOUT_CLASSIFICATION	1.2602642115107406E-4	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9638161369790006	WITHOUT_CLASSIFICATION	0.03618386302099941	DESIGN
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9998568138185372	WITHOUT_CLASSIFICATION	1.4318618146281868E-4	DESIGN
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9994239196653155	WITHOUT_CLASSIFICATION	5.760803346844466E-4	DESIGN
add in reverse order	WITHOUT_CLASSIFICATION	0.999926189051369	WITHOUT_CLASSIFICATION	7.381094863101657E-5	DESIGN
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.8897220437726151	WITHOUT_CLASSIFICATION	0.11027795622738489	DESIGN
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999369547084237	WITHOUT_CLASSIFICATION	6.30452915763057E-5	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9950517817775743	WITHOUT_CLASSIFICATION	0.004948218222425747	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9985240794561495	WITHOUT_CLASSIFICATION	0.001475920543850466	DESIGN
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9985240794561495	WITHOUT_CLASSIFICATION	0.001475920543850466	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996921093011069	WITHOUT_CLASSIFICATION	3.0789069889313814E-4	DESIGN
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999685746645805	WITHOUT_CLASSIFICATION	3.1425335419503123E-4	DESIGN
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.999798006804829	WITHOUT_CLASSIFICATION	2.0199319517098043E-4	DESIGN
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9997648273923708	WITHOUT_CLASSIFICATION	2.3517260762921134E-4	DESIGN
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999891446003645	WITHOUT_CLASSIFICATION	1.0855399635471525E-5	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9999674197006625	WITHOUT_CLASSIFICATION	3.258029933746406E-5	DESIGN
For 'foo'	WITHOUT_CLASSIFICATION	0.9999674197006625	WITHOUT_CLASSIFICATION	3.258029933746406E-5	DESIGN
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999906707723815	WITHOUT_CLASSIFICATION	9.329227618448092E-6	DESIGN
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9227984180017267	WITHOUT_CLASSIFICATION	0.07720158199827333	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999380054199796	WITHOUT_CLASSIFICATION	6.19945800204773E-5	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9999511854187435	WITHOUT_CLASSIFICATION	4.881458125643063E-5	DESIGN
just rethrow	WITHOUT_CLASSIFICATION	0.9999511854187435	WITHOUT_CLASSIFICATION	4.881458125643063E-5	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9996079314730165	WITHOUT_CLASSIFICATION	3.9206852698349257E-4	DESIGN
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9996079314730165	WITHOUT_CLASSIFICATION	3.9206852698349257E-4	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999871902253535	WITHOUT_CLASSIFICATION	1.2809774646447339E-5	DESIGN
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999871902253535	WITHOUT_CLASSIFICATION	1.2809774646447339E-5	DESIGN
Execute rescue block	WITHOUT_CLASSIFICATION	0.9999838630826995	WITHOUT_CLASSIFICATION	1.6136917300484746E-5	DESIGN
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999758155738038	WITHOUT_CLASSIFICATION	2.4184426196153294E-5	DESIGN
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998979480342662	WITHOUT_CLASSIFICATION	1.0205196573375034E-4	DESIGN
only a marker interface	WITHOUT_CLASSIFICATION	0.9999424072746287	WITHOUT_CLASSIFICATION	5.759272537131418E-5	DESIGN
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9989587753366784	WITHOUT_CLASSIFICATION	0.0010412246633215755	DESIGN
pragmas	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.975388678261924	WITHOUT_CLASSIFICATION	0.02461132173807608	DESIGN
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9961362041702728	WITHOUT_CLASSIFICATION	0.0038637958297272528	DESIGN
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9940293619605804	WITHOUT_CLASSIFICATION	0.005970638039419615	DESIGN
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9922134569891427	WITHOUT_CLASSIFICATION	0.0077865430108573636	DESIGN
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9990763247827138	WITHOUT_CLASSIFICATION	9.236752172862432E-4	DESIGN
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9908251352758987	WITHOUT_CLASSIFICATION	0.009174864724101284	DESIGN
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9983017539946739	WITHOUT_CLASSIFICATION	0.0016982460053260617	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999615294840529	WITHOUT_CLASSIFICATION	3.847051594707273E-5	DESIGN
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999615294840529	WITHOUT_CLASSIFICATION	3.847051594707273E-5	DESIGN
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9988408711010508	WITHOUT_CLASSIFICATION	0.0011591288989491494	DESIGN
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9979455394857133	WITHOUT_CLASSIFICATION	0.002054460514286714	DESIGN
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9919109143655758	WITHOUT_CLASSIFICATION	0.008089085634424297	DESIGN
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9875610195825483	WITHOUT_CLASSIFICATION	0.01243898041745173	DESIGN
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9990254693199304	WITHOUT_CLASSIFICATION	9.745306800694715E-4	DESIGN
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9987698900044858	WITHOUT_CLASSIFICATION	0.0012301099955141768	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.998321290386312	WITHOUT_CLASSIFICATION	0.0016787096136880461	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9988303826845908	WITHOUT_CLASSIFICATION	0.0011696173154091933	DESIGN
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.998499060557999	WITHOUT_CLASSIFICATION	0.0015009394420010607	DESIGN
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9998911296965208	WITHOUT_CLASSIFICATION	1.0887030347916135E-4	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9998655132250244	WITHOUT_CLASSIFICATION	1.3448677497565894E-4	DESIGN
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999656369948317	WITHOUT_CLASSIFICATION	3.4363005168316875E-5	DESIGN
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9888230017471888	WITHOUT_CLASSIFICATION	0.011176998252811208	DESIGN
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9987872713783044	WITHOUT_CLASSIFICATION	0.0012127286216956244	DESIGN
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9883873759473002	WITHOUT_CLASSIFICATION	0.011612624052699777	DESIGN
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9993942886644382	WITHOUT_CLASSIFICATION	6.057113355618789E-4	DESIGN
can't do it	WITHOUT_CLASSIFICATION	0.9999009910696067	WITHOUT_CLASSIFICATION	9.900893039325705E-5	DESIGN
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9991680612543278	WITHOUT_CLASSIFICATION	8.319387456721507E-4	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999415672622204	WITHOUT_CLASSIFICATION	5.8432737779646857E-5	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999415672622204	WITHOUT_CLASSIFICATION	5.8432737779646857E-5	DESIGN
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9982227209471338	WITHOUT_CLASSIFICATION	0.0017772790528660881	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
[]	WITHOUT_CLASSIFICATION	0.999911594790495	WITHOUT_CLASSIFICATION	8.840520950493404E-5	DESIGN
[]	WITHOUT_CLASSIFICATION	0.999911594790495	WITHOUT_CLASSIFICATION	8.840520950493404E-5	DESIGN
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9994241410007468	WITHOUT_CLASSIFICATION	5.758589992530812E-4	DESIGN
[RubyClass]	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.9994241410007468	WITHOUT_CLASSIFICATION	5.758589992530812E-4	DESIGN
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9652175013199168	WITHOUT_CLASSIFICATION	0.03478249868008323	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9999568658607274	WITHOUT_CLASSIFICATION	4.313413927258313E-5	DESIGN
inspect body and args	WITHOUT_CLASSIFICATION	0.9999568658607274	WITHOUT_CLASSIFICATION	4.313413927258313E-5	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9998700208856182	WITHOUT_CLASSIFICATION	1.2997911438178704E-4	DESIGN
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9836003215803757	WITHOUT_CLASSIFICATION	0.016399678419624388	DESIGN
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9993139950070148	WITHOUT_CLASSIFICATION	6.860049929852003E-4	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
[RubyClass] []	WITHOUT_CLASSIFICATION	0.9999531798603982	WITHOUT_CLASSIFICATION	4.68201396018943E-5	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999822131184917	WITHOUT_CLASSIFICATION	1.778688150830508E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998524984757668	WITHOUT_CLASSIFICATION	1.4750152423324093E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998524984757668	WITHOUT_CLASSIFICATION	1.4750152423324093E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998828955541088	WITHOUT_CLASSIFICATION	1.1710444589127931E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998828955541088	WITHOUT_CLASSIFICATION	1.1710444589127931E-4	DESIGN
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998828955541088	WITHOUT_CLASSIFICATION	1.1710444589127931E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998524984757668	WITHOUT_CLASSIFICATION	1.4750152423324093E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998524984757668	WITHOUT_CLASSIFICATION	1.4750152423324093E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999822131184917	WITHOUT_CLASSIFICATION	1.778688150830508E-4	DESIGN
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9994945584462048	WITHOUT_CLASSIFICATION	5.054415537952201E-4	DESIGN
always false or nil	WITHOUT_CLASSIFICATION	0.9999352571285357	WITHOUT_CLASSIFICATION	6.474287146429257E-5	DESIGN
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9993921685505054	WITHOUT_CLASSIFICATION	6.07831449494551E-4	DESIGN
normal	WITHOUT_CLASSIFICATION	0.9999235210927728	WITHOUT_CLASSIFICATION	7.647890722723853E-5	DESIGN
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9985725584224346	WITHOUT_CLASSIFICATION	0.0014274415775654124	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9991375065797203	WITHOUT_CLASSIFICATION	8.624934202796404E-4	DESIGN
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999436222073499	WITHOUT_CLASSIFICATION	5.637779265004376E-5	DESIGN
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9995752756082984	WITHOUT_CLASSIFICATION	4.2472439170161295E-4	DESIGN
compile first node only	WITHOUT_CLASSIFICATION	0.9998655132250244	WITHOUT_CLASSIFICATION	1.3448677497565894E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998524984757668	WITHOUT_CLASSIFICATION	1.4750152423324093E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998524984757668	WITHOUT_CLASSIFICATION	1.4750152423324093E-4	DESIGN
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9993876539717578	WITHOUT_CLASSIFICATION	6.123460282423029E-4	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.999973187722314	WITHOUT_CLASSIFICATION	2.6812277686024545E-5	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.999951240276996	WITHOUT_CLASSIFICATION	4.875972300396824E-5	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9995106258105092	WITHOUT_CLASSIFICATION	4.893741894908598E-4	DESIGN
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9996491857399274	WITHOUT_CLASSIFICATION	3.508142600725531E-4	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9996863823251128	WITHOUT_CLASSIFICATION	3.136176748872603E-4	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9998260106836645	WITHOUT_CLASSIFICATION	1.7398931633548422E-4	DESIGN
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999945121226323	WITHOUT_CLASSIFICATION	5.4878773677149946E-5	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9994885054459356	WITHOUT_CLASSIFICATION	5.114945540644728E-4	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9996619447942666	WITHOUT_CLASSIFICATION	3.380552057333493E-4	DESIGN
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.999921261100112	WITHOUT_CLASSIFICATION	7.873889988796204E-5	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.9996919367115288	WITHOUT_CLASSIFICATION	3.0806328847124735E-4	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9989745967620474	WITHOUT_CLASSIFICATION	0.0010254032379526646	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999826309458612	WITHOUT_CLASSIFICATION	1.7369054138798563E-4	DESIGN
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.996334342831233	WITHOUT_CLASSIFICATION	0.0036656571687670057	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
[recv]	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
compile into array	WITHOUT_CLASSIFICATION	0.9986822899033105	WITHOUT_CLASSIFICATION	0.001317710096689444	DESIGN
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9983934062167462	WITHOUT_CLASSIFICATION	0.0016065937832537565	DESIGN
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9994663209852683	WITHOUT_CLASSIFICATION	5.33679014731707E-4	DESIGN
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9970331418344426	WITHOUT_CLASSIFICATION	0.002966858165557409	DESIGN
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9995763668530916	WITHOUT_CLASSIFICATION	4.236331469084104E-4	DESIGN
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9969834962473955	WITHOUT_CLASSIFICATION	0.0030165037526045774	DESIGN
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9984694347192993	WITHOUT_CLASSIFICATION	0.0015305652807006478	DESIGN
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9981486862071435	WITHOUT_CLASSIFICATION	0.0018513137928565452	DESIGN
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9983395920303572	WITHOUT_CLASSIFICATION	0.0016604079696428146	DESIGN
leave as a normal array	WITHOUT_CLASSIFICATION	0.9999503869999862	WITHOUT_CLASSIFICATION	4.961300001386753E-5	DESIGN
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9897827565107403	WITHOUT_CLASSIFICATION	0.010217243489259748	DESIGN
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9884148967898875	WITHOUT_CLASSIFICATION	0.011585103210112599	DESIGN
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9998700208856182	WITHOUT_CLASSIFICATION	1.2997911438178704E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998524984757668	WITHOUT_CLASSIFICATION	1.4750152423324093E-4	DESIGN
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998524984757668	WITHOUT_CLASSIFICATION	1.4750152423324093E-4	DESIGN
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999822131184917	WITHOUT_CLASSIFICATION	1.778688150830508E-4	DESIGN
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9991375065797203	WITHOUT_CLASSIFICATION	8.624934202796404E-4	DESIGN
try optz version	WITHOUT_CLASSIFICATION	0.999973187722314	WITHOUT_CLASSIFICATION	2.6812277686024545E-5	DESIGN
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9995106258105092	WITHOUT_CLASSIFICATION	4.893741894908598E-4	DESIGN
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9996863823251128	WITHOUT_CLASSIFICATION	3.136176748872603E-4	DESIGN
sizes must match	WITHOUT_CLASSIFICATION	0.999951240276996	WITHOUT_CLASSIFICATION	4.875972300396824E-5	DESIGN
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9998260106836645	WITHOUT_CLASSIFICATION	1.7398931633548422E-4	DESIGN
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9996619447942666	WITHOUT_CLASSIFICATION	3.380552057333493E-4	DESIGN
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9994885054459356	WITHOUT_CLASSIFICATION	5.114945540644728E-4	DESIGN
done processing args	WITHOUT_CLASSIFICATION	0.9996919367115288	WITHOUT_CLASSIFICATION	3.0806328847124735E-4	DESIGN
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9969186414499666	WITHOUT_CLASSIFICATION	0.0030813585500333394	DESIGN
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999693748048915	WITHOUT_CLASSIFICATION	3.062519510852367E-5	DESIGN
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9982599525246781	WITHOUT_CLASSIFICATION	0.0017400474753219675	DESIGN
finally, grab the script	WITHOUT_CLASSIFICATION	0.9999877686088052	WITHOUT_CLASSIFICATION	1.2231391194822211E-5	DESIGN
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9935124339392439	WITHOUT_CLASSIFICATION	0.0064875660607560314	DESIGN
Time the compilation	WITHOUT_CLASSIFICATION	0.9999821522325891	WITHOUT_CLASSIFICATION	1.7847767410841688E-5	DESIGN
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9956754518516134	WITHOUT_CLASSIFICATION	0.004324548148386562	DESIGN
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9854208565532172	WITHOUT_CLASSIFICATION	0.0145791434467827	DESIGN
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9973122376904456	WITHOUT_CLASSIFICATION	0.00268776230955445	DESIGN
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9998167074304781	WITHOUT_CLASSIFICATION	1.8329256952195362E-4	DESIGN
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9996573960043788	WITHOUT_CLASSIFICATION	3.4260399562122525E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999151937867574	WITHOUT_CLASSIFICATION	8.480621324261218E-4	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978825797771238	WITHOUT_CLASSIFICATION	0.0021174202228761217	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.5552450275001924	WITHOUT_CLASSIFICATION	0.4447549724998075	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9991778267456844	WITHOUT_CLASSIFICATION	8.22173254315557E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9999661234829562	WITHOUT_CLASSIFICATION	3.387651704368719E-5	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9888188067094642	WITHOUT_CLASSIFICATION	0.011181193290535737	DESIGN
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9983022377468304	WITHOUT_CLASSIFICATION	0.0016977622531696216	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998813461479641	WITHOUT_CLASSIFICATION	1.1865385203597746E-4	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9991381973122012	WITHOUT_CLASSIFICATION	8.618026877988044E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9933480122155676	WITHOUT_CLASSIFICATION	0.006651987784432369	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9339444249763065	WITHOUT_CLASSIFICATION	0.06605557502369358	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9339444249763065	WITHOUT_CLASSIFICATION	0.06605557502369358	DESIGN
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9987994117254195	WITHOUT_CLASSIFICATION	0.0012005882745804478	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9991021196461222	WITHOUT_CLASSIFICATION	8.978803538778558E-4	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
arg2	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
args	WITHOUT_CLASSIFICATION	0.9998915682307724	WITHOUT_CLASSIFICATION	1.084317692276576E-4	DESIGN
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9991021196461222	WITHOUT_CLASSIFICATION	8.978803538778558E-4	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9948969941987901	WITHOUT_CLASSIFICATION	0.0051030058012098735	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
arg0	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
arg1	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
args	WITHOUT_CLASSIFICATION	0.9998915682307724	WITHOUT_CLASSIFICATION	1.084317692276576E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.9997114129990031	WITHOUT_CLASSIFICATION	2.8858700099695505E-4	DESIGN
get call site and thread context	WITHOUT_CLASSIFICATION	0.9997114129990031	WITHOUT_CLASSIFICATION	2.8858700099695505E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9994285472302661	WITHOUT_CLASSIFICATION	5.714527697339956E-4	DESIGN
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9994285472302661	WITHOUT_CLASSIFICATION	5.714527697339956E-4	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9999152930595189	WITHOUT_CLASSIFICATION	8.470694048113431E-5	DESIGN
invoke	WITHOUT_CLASSIFICATION	0.9999152930595189	WITHOUT_CLASSIFICATION	8.470694048113431E-5	DESIGN
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9997642301869849	WITHOUT_CLASSIFICATION	2.3576981301502437E-4	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9996084576549161	WITHOUT_CLASSIFICATION	3.9154234508381985E-4	DESIGN
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9996084576549161	WITHOUT_CLASSIFICATION	3.9154234508381985E-4	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9995307964556338	WITHOUT_CLASSIFICATION	4.692035443661463E-4	DESIGN
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9995307964556338	WITHOUT_CLASSIFICATION	4.692035443661463E-4	DESIGN
eval value for assignment	WITHOUT_CLASSIFICATION	0.9999104213243748	WITHOUT_CLASSIFICATION	8.957867562513575E-5	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9999013801077677	WITHOUT_CLASSIFICATION	9.861989223233214E-5	DESIGN
call site	WITHOUT_CLASSIFICATION	0.9999013801077677	WITHOUT_CLASSIFICATION	9.861989223233214E-5	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9988644067182079	WITHOUT_CLASSIFICATION	0.001135593281792163	DESIGN
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9997783099834611	WITHOUT_CLASSIFICATION	2.21690016538881E-4	DESIGN
eval value and save it	WITHOUT_CLASSIFICATION	0.9999605703799983	WITHOUT_CLASSIFICATION	3.9429620001615706E-5	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9988644067182079	WITHOUT_CLASSIFICATION	0.001135593281792163	DESIGN
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999557605240389	WITHOUT_CLASSIFICATION	4.423947596105257E-5	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9996681650147138	WITHOUT_CLASSIFICATION	3.318349852861978E-4	DESIGN
args	WITHOUT_CLASSIFICATION	0.9998915682307724	WITHOUT_CLASSIFICATION	1.084317692276576E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9999736409267647	WITHOUT_CLASSIFICATION	2.6359073235338597E-5	DESIGN
block	WITHOUT_CLASSIFICATION	0.9999736409267647	WITHOUT_CLASSIFICATION	2.6359073235338597E-5	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9999939561065494	WITHOUT_CLASSIFICATION	6.0438934506195305E-6	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.9999939764514623	WITHOUT_CLASSIFICATION	6.023548537657582E-6	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.9999939764514623	WITHOUT_CLASSIFICATION	6.0235485376575875E-6	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9999884095301869	WITHOUT_CLASSIFICATION	1.1590469813251163E-5	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9999403546809819	WITHOUT_CLASSIFICATION	5.964531901807201E-5	DESIGN
pop extra attr value	WITHOUT_CLASSIFICATION	0.9999403546809819	WITHOUT_CLASSIFICATION	5.964531901807201E-5	DESIGN
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9995324828098975	WITHOUT_CLASSIFICATION	4.6751719010248814E-4	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9999135290814661	WITHOUT_CLASSIFICATION	8.647091853391595E-5	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9999135290814661	WITHOUT_CLASSIFICATION	8.647091853391595E-5	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
args	WITHOUT_CLASSIFICATION	0.9998915682307724	WITHOUT_CLASSIFICATION	1.084317692276576E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9999736409267647	WITHOUT_CLASSIFICATION	2.6359073235338597E-5	DESIGN
no args, no block	WITHOUT_CLASSIFICATION	0.9999939561065494	WITHOUT_CLASSIFICATION	6.0438934506195305E-6	DESIGN
no args, with block	WITHOUT_CLASSIFICATION	0.9999939764514623	WITHOUT_CLASSIFICATION	6.023548537657582E-6	DESIGN
with args, no block	WITHOUT_CLASSIFICATION	0.9999939764514623	WITHOUT_CLASSIFICATION	6.0235485376575875E-6	DESIGN
with args, with block	WITHOUT_CLASSIFICATION	0.9999884095301869	WITHOUT_CLASSIFICATION	1.1590469813251163E-5	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9999135290814661	WITHOUT_CLASSIFICATION	8.647091853391595E-5	DESIGN
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9989637822409166	WITHOUT_CLASSIFICATION	0.0010362177590833622	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9997584958350486	WITHOUT_CLASSIFICATION	2.4150416495134872E-4	DESIGN
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9992189801233365	WITHOUT_CLASSIFICATION	7.810198766635268E-4	DESIGN
add name to call site list	WITHOUT_CLASSIFICATION	0.9999754617535278	WITHOUT_CLASSIFICATION	2.4538246472130202E-5	DESIGN
module is on top of stack	WITHOUT_CLASSIFICATION	0.9999266429805832	WITHOUT_CLASSIFICATION	7.335701941681723E-5	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.9997208427323144	WITHOUT_CLASSIFICATION	2.7915726768549767E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.999816894036342	WITHOUT_CLASSIFICATION	1.8310596365795175E-4	DESIGN
build descriptor string	WITHOUT_CLASSIFICATION	0.999816894036342	WITHOUT_CLASSIFICATION	1.8310596365795175E-4	DESIGN
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9981115903653702	WITHOUT_CLASSIFICATION	0.001888409634629759	DESIGN
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9983026379077056	WITHOUT_CLASSIFICATION	0.001697362092294434	DESIGN
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9983026379077056	WITHOUT_CLASSIFICATION	0.001697362092294434	DESIGN
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9976084566341268	WITHOUT_CLASSIFICATION	0.002391543365873183	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9983026379077056	WITHOUT_CLASSIFICATION	0.001697362092294434	DESIGN
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9983026379077056	WITHOUT_CLASSIFICATION	0.001697362092294434	DESIGN
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9983325313715042	WITHOUT_CLASSIFICATION	0.001667468628495705	DESIGN
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9983325313715042	WITHOUT_CLASSIFICATION	0.001667468628495705	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9995233896533755	WITHOUT_CLASSIFICATION	4.7661034662459554E-4	DESIGN
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9995233896533755	WITHOUT_CLASSIFICATION	4.7661034662459554E-4	DESIGN
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9983026379077056	WITHOUT_CLASSIFICATION	0.001697362092294434	DESIGN
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9937876097990312	WITHOUT_CLASSIFICATION	0.006212390200968775	DESIGN
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.999935917681078	WITHOUT_CLASSIFICATION	6.40823189219921E-5	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9984710871872394	WITHOUT_CLASSIFICATION	0.001528912812760631	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.996992365829278	WITHOUT_CLASSIFICATION	0.0030076341707219846	DESIGN
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9988314168353293	WITHOUT_CLASSIFICATION	0.0011685831646707856	DESIGN
load Object under value	WITHOUT_CLASSIFICATION	0.9999457176288886	WITHOUT_CLASSIFICATION	5.42823711113289E-5	DESIGN
put under object array already present	WITHOUT_CLASSIFICATION	0.9984653251506278	WITHOUT_CLASSIFICATION	0.0015346748493721871	DESIGN
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9519632069146998	WITHOUT_CLASSIFICATION	0.04803679308530016	DESIGN
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9987689094903949	WITHOUT_CLASSIFICATION	0.001231090509605167	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9880276495490832	WITHOUT_CLASSIFICATION	0.0119723504509169	DESIGN
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9880276495490832	WITHOUT_CLASSIFICATION	0.0119723504509169	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9997696111212041	WITHOUT_CLASSIFICATION	2.303888787959798E-4	DESIGN
brute force construction inline	WITHOUT_CLASSIFICATION	0.9997696111212041	WITHOUT_CLASSIFICATION	2.303888787959798E-4	DESIGN
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9984529265204322	WITHOUT_CLASSIFICATION	0.0015470734795678379	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999859866800795	WITHOUT_CLASSIFICATION	1.4013319920482442E-5	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999859866800795	WITHOUT_CLASSIFICATION	1.4013319920482442E-5	DESIGN
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999859866800795	WITHOUT_CLASSIFICATION	1.4013319920482442E-5	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999903835850936	WITHOUT_CLASSIFICATION	9.61641490642988E-6	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9979780353560794	WITHOUT_CLASSIFICATION	0.0020219646439206106	DESIGN
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9979780353560794	WITHOUT_CLASSIFICATION	0.0020219646439206106	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9997479860961233	WITHOUT_CLASSIFICATION	2.520139038766807E-4	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9999932922464657	WITHOUT_CLASSIFICATION	6.707753534283503E-6	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999887571369066	WITHOUT_CLASSIFICATION	1.1242863093542545E-5	DESIGN
skip catch block	WITHOUT_CLASSIFICATION	0.9999977188688693	WITHOUT_CLASSIFICATION	2.281131130660783E-6	DESIGN
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9994364823606885	WITHOUT_CLASSIFICATION	5.635176393114606E-4	DESIGN
next jump	WITHOUT_CLASSIFICATION	0.9998786484325205	WITHOUT_CLASSIFICATION	1.2135156747951153E-4	DESIGN
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9981873135666521	WITHOUT_CLASSIFICATION	0.0018126864333477901	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978825797771238	WITHOUT_CLASSIFICATION	0.0021174202228761217	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978825797771238	WITHOUT_CLASSIFICATION	0.0021174202228761217	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999903835850936	WITHOUT_CLASSIFICATION	9.61641490642988E-6	DESIGN
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9997479860961233	WITHOUT_CLASSIFICATION	2.520139038766807E-4	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999561101474536	WITHOUT_CLASSIFICATION	4.3889852546364396E-5	DESIGN
check the condition	WITHOUT_CLASSIFICATION	0.9999932922464657	WITHOUT_CLASSIFICATION	6.707753534283503E-6	DESIGN
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999887571369066	WITHOUT_CLASSIFICATION	1.1242863093542545E-5	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9994593217272018	WITHOUT_CLASSIFICATION	5.406782727982197E-4	DESIGN
break jump	WITHOUT_CLASSIFICATION	0.9998839099248195	WITHOUT_CLASSIFICATION	1.1609007518045913E-4	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999610282335762	WITHOUT_CLASSIFICATION	3.8971766423717605E-5	DESIGN
[reg]	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9991910384790677	WITHOUT_CLASSIFICATION	8.089615209323208E-4	DESIGN
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9998450353821965	WITHOUT_CLASSIFICATION	1.549646178035085E-4	DESIGN
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9951335458429666	WITHOUT_CLASSIFICATION	0.0048664541570333985	DESIGN
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9994593217272018	WITHOUT_CLASSIFICATION	5.406782727982197E-4	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9994989541727567	WITHOUT_CLASSIFICATION	5.010458272433378E-4	DESIGN
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9994989541727567	WITHOUT_CLASSIFICATION	5.010458272433378E-4	DESIGN
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9983597663625875	WITHOUT_CLASSIFICATION	0.001640233637412555	DESIGN
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.999832360232805	WITHOUT_CLASSIFICATION	1.6763976719512966E-4	DESIGN
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.998432436861972	WITHOUT_CLASSIFICATION	0.0015675631380280483	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9969118953598624	WITHOUT_CLASSIFICATION	0.0030881046401376854	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.999991804945675	WITHOUT_CLASSIFICATION	8.195054325022676E-6	DESIGN
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9992279418844785	WITHOUT_CLASSIFICATION	7.720581155214479E-4	DESIGN
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999369777936902	WITHOUT_CLASSIFICATION	6.302220630984351E-5	DESIGN
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9982038816722788	WITHOUT_CLASSIFICATION	0.0017961183277211586	DESIGN
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9983393398114181	WITHOUT_CLASSIFICATION	0.0016606601885818411	DESIGN
false zero	WITHOUT_CLASSIFICATION	0.9999375812016486	WITHOUT_CLASSIFICATION	6.241879835143121E-5	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9991719449827948	WITHOUT_CLASSIFICATION	8.280550172052936E-4	DESIGN
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9969118953598624	WITHOUT_CLASSIFICATION	0.0030881046401376854	DESIGN
restore the original exception	WITHOUT_CLASSIFICATION	0.999991804945675	WITHOUT_CLASSIFICATION	8.195054325022676E-6	DESIGN
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9994365361938266	WITHOUT_CLASSIFICATION	5.634638061734372E-4	DESIGN
push false	WITHOUT_CLASSIFICATION	0.9999151249802709	WITHOUT_CLASSIFICATION	8.487501972906811E-5	DESIGN
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9999919886447849	WITHOUT_CLASSIFICATION	8.011355215109156E-6	DESIGN
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
[C]	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
push true	WITHOUT_CLASSIFICATION	0.9999085277366286	WITHOUT_CLASSIFICATION	9.147226337132572E-5	DESIGN
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999849453095321	WITHOUT_CLASSIFICATION	1.5054690467905502E-5	DESIGN
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
[boolean]	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9997165701671483	WITHOUT_CLASSIFICATION	2.8342983285175677E-4	DESIGN
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9989943902391162	WITHOUT_CLASSIFICATION	0.0010056097608838249	DESIGN
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.8882013838713666	WITHOUT_CLASSIFICATION	0.11179861612863345	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9999421428658538	WITHOUT_CLASSIFICATION	5.785713414625441E-5	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9998885462291184	WITHOUT_CLASSIFICATION	1.1145377088162812E-4	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9998850693332246	WITHOUT_CLASSIFICATION	1.1493066677535727E-4	DESIGN
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.999522903315871	WITHOUT_CLASSIFICATION	4.7709668412898636E-4	DESIGN
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
static scope	WITHOUT_CLASSIFICATION	0.9998885462291184	WITHOUT_CLASSIFICATION	1.1145377088162812E-4	DESIGN
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9998850693332246	WITHOUT_CLASSIFICATION	1.1493066677535727E-4	DESIGN
finally with exception	WITHOUT_CLASSIFICATION	0.9999760795234571	WITHOUT_CLASSIFICATION	2.392047654289449E-5	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9975024017834456	WITHOUT_CLASSIFICATION	0.002497598216554401	DESIGN
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.995711936896067	WITHOUT_CLASSIFICATION	0.004288063103932953	DESIGN
original exception is on stack	WITHOUT_CLASSIFICATION	0.9999673361393916	WITHOUT_CLASSIFICATION	3.266386060832274E-5	DESIGN
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9996959093827426	WITHOUT_CLASSIFICATION	3.0409061725739897E-4	DESIGN
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9988217244371075	WITHOUT_CLASSIFICATION	0.0011782755628926022	DESIGN
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.996748901456144	WITHOUT_CLASSIFICATION	0.0032510985438559364	DESIGN
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9895092156071814	WITHOUT_CLASSIFICATION	0.010490784392818593	DESIGN
script object	WITHOUT_CLASSIFICATION	0.9998880934902481	WITHOUT_CLASSIFICATION	1.1190650975187391E-4	DESIGN
arities	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9512630127213421	WITHOUT_CLASSIFICATION	0.04873698727865792	DESIGN
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9988421176370886	WITHOUT_CLASSIFICATION	0.0011578823629113224	DESIGN
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9906896660787622	WITHOUT_CLASSIFICATION	0.009310333921237812	DESIGN
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9992934500391828	WITHOUT_CLASSIFICATION	7.065499608172793E-4	DESIGN
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9997762379858948	WITHOUT_CLASSIFICATION	2.2376201410523233E-4	DESIGN
normal case, create a new label	WITHOUT_CLASSIFICATION	0.9981727396101937	WITHOUT_CLASSIFICATION	0.001827260389806317	DESIGN
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9976524810036179	WITHOUT_CLASSIFICATION	0.0023475189963820383	DESIGN
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9990233521811746	WITHOUT_CLASSIFICATION	9.766478188255173E-4	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9996652185668654	WITHOUT_CLASSIFICATION	3.347814331346278E-4	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999266384076372	WITHOUT_CLASSIFICATION	7.336159236283426E-5	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999932415422245	WITHOUT_CLASSIFICATION	6.7584577754390345E-6	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.999996542431563	WITHOUT_CLASSIFICATION	3.457568436949224E-6	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.999996542431563	WITHOUT_CLASSIFICATION	3.457568436949224E-6	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9997888339932531	WITHOUT_CLASSIFICATION	2.111660067469695E-4	DESIGN
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9997888339932531	WITHOUT_CLASSIFICATION	2.111660067469695E-4	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9985579858948918	WITHOUT_CLASSIFICATION	0.001442014105108279	DESIGN
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9985579858948918	WITHOUT_CLASSIFICATION	0.001442014105108279	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.999761992015851	WITHOUT_CLASSIFICATION	2.3800798414893207E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9952071786611361	WITHOUT_CLASSIFICATION	0.0047928213388639205	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9907504750769341	WITHOUT_CLASSIFICATION	0.009249524923065858	DESIGN
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9908747583224583	WITHOUT_CLASSIFICATION	0.009125241677541742	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9998173774920551	WITHOUT_CLASSIFICATION	1.8262250794482023E-4	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999553525564716	WITHOUT_CLASSIFICATION	4.464744352843669E-5	DESIGN
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9983550977971538	WITHOUT_CLASSIFICATION	0.0016449022028462948	DESIGN
then optional args	WITHOUT_CLASSIFICATION	0.9999488563095459	WITHOUT_CLASSIFICATION	5.114369045415124E-5	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978825797771238	WITHOUT_CLASSIFICATION	0.0021174202228761217	DESIGN
now logic for each optional value	WITHOUT_CLASSIFICATION	0.999761992015851	WITHOUT_CLASSIFICATION	2.3800798414893207E-4	DESIGN
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9952071786611361	WITHOUT_CLASSIFICATION	0.0047928213388639205	DESIGN
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9907504750769341	WITHOUT_CLASSIFICATION	0.009249524923065858	DESIGN
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9998173774920551	WITHOUT_CLASSIFICATION	1.8262250794482023E-4	DESIGN
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999553525564716	WITHOUT_CLASSIFICATION	4.464744352843669E-5	DESIGN
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9989889760849473	WITHOUT_CLASSIFICATION	0.001011023915052718	DESIGN
finally, post args	WITHOUT_CLASSIFICATION	0.999948946557286	WITHOUT_CLASSIFICATION	5.105344271407004E-5	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9977763971497253	WITHOUT_CLASSIFICATION	0.0022236028502746383	DESIGN
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9977763971497253	WITHOUT_CLASSIFICATION	0.0022236028502746383	DESIGN
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9969468817798024	WITHOUT_CLASSIFICATION	0.003053118220197544	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9994874039168329	WITHOUT_CLASSIFICATION	5.125960831671235E-4	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9966803142867453	WITHOUT_CLASSIFICATION	0.003319685713254635	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9953222850558158	WITHOUT_CLASSIFICATION	0.0046777149441842	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9953222850558158	WITHOUT_CLASSIFICATION	0.0046777149441842	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9996447525429007	WITHOUT_CLASSIFICATION	3.552474570992133E-4	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9952230197559605	WITHOUT_CLASSIFICATION	0.004776980244039417	DESIGN
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9945756479469502	WITHOUT_CLASSIFICATION	0.005424352053049703	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999213174589171	WITHOUT_CLASSIFICATION	7.8682541082986E-5	DESIGN
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9989934202697848	WITHOUT_CLASSIFICATION	0.0010065797302152566	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.5552450275001924	WITHOUT_CLASSIFICATION	0.4447549724998075	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9991778267456844	WITHOUT_CLASSIFICATION	8.22173254315557E-4	DESIGN
end of variable scope	WITHOUT_CLASSIFICATION	0.9999661234829562	WITHOUT_CLASSIFICATION	3.387651704368719E-5	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9888188067094642	WITHOUT_CLASSIFICATION	0.011181193290535737	DESIGN
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9991381973122012	WITHOUT_CLASSIFICATION	8.618026877988044E-4	DESIGN
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9933480122155676	WITHOUT_CLASSIFICATION	0.006651987784432369	DESIGN
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9996447525429007	WITHOUT_CLASSIFICATION	3.552474570992133E-4	DESIGN
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9952230197559605	WITHOUT_CLASSIFICATION	0.004776980244039417	DESIGN
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999213174589171	WITHOUT_CLASSIFICATION	7.8682541082986E-5	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.999618037438123	WITHOUT_CLASSIFICATION	3.819625618769406E-4	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9966803142867453	WITHOUT_CLASSIFICATION	0.003319685713254635	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9966803142867453	WITHOUT_CLASSIFICATION	0.003319685713254635	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9991719449827948	WITHOUT_CLASSIFICATION	8.280550172052936E-4	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9991719449827948	WITHOUT_CLASSIFICATION	8.280550172052936E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9992239292602597	WITHOUT_CLASSIFICATION	7.760707397402093E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9992239292602597	WITHOUT_CLASSIFICATION	7.760707397402093E-4	DESIGN
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9982310302092899	WITHOUT_CLASSIFICATION	0.0017689697907100753	DESIGN
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9958449090224553	WITHOUT_CLASSIFICATION	0.004155090977544743	DESIGN
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9929712096262697	WITHOUT_CLASSIFICATION	0.007028790373730367	DESIGN
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9989458783723112	WITHOUT_CLASSIFICATION	0.0010541216276888647	DESIGN
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.992411741843031	WITHOUT_CLASSIFICATION	0.007588258156969016	DESIGN
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9950588639650851	WITHOUT_CLASSIFICATION	0.0049411360349149195	DESIGN
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9982832722081049	WITHOUT_CLASSIFICATION	0.0017167277918950677	DESIGN
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.999422288057445	WITHOUT_CLASSIFICATION	5.777119425550407E-4	DESIGN
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9996662554543448	WITHOUT_CLASSIFICATION	3.3374454565504623E-4	DESIGN
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.999151937867574	WITHOUT_CLASSIFICATION	8.480621324261218E-4	DESIGN
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.998708329867293	WITHOUT_CLASSIFICATION	0.001291670132706995	DESIGN
verify the class	WITHOUT_CLASSIFICATION	0.9999902163212793	WITHOUT_CLASSIFICATION	9.783678720679366E-6	DESIGN
create dir if necessary	WITHOUT_CLASSIFICATION	0.9996869142883748	WITHOUT_CLASSIFICATION	3.130857116252546E-4	DESIGN
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9997612747722371	WITHOUT_CLASSIFICATION	2.3872522776282823E-4	DESIGN
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999247209498038	WITHOUT_CLASSIFICATION	7.527905019626888E-5	DESIGN
thread context	WITHOUT_CLASSIFICATION	0.9999728211117294	WITHOUT_CLASSIFICATION	2.717888827066338E-5	DESIGN
line number	WITHOUT_CLASSIFICATION	0.9999763012673706	WITHOUT_CLASSIFICATION	2.3698732629534993E-5	DESIGN
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9997641230097357	WITHOUT_CLASSIFICATION	2.358769902642691E-4	DESIGN
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9891881382175103	WITHOUT_CLASSIFICATION	0.01081186178248973	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9991778267456844	WITHOUT_CLASSIFICATION	8.22173254315557E-4	DESIGN
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9888188067094642	WITHOUT_CLASSIFICATION	0.011181193290535737	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9339444249763065	WITHOUT_CLASSIFICATION	0.06605557502369358	DESIGN
block	WITHOUT_CLASSIFICATION	0.9999736409267647	WITHOUT_CLASSIFICATION	2.6359073235338597E-5	DESIGN
block	WITHOUT_CLASSIFICATION	0.9999736409267647	WITHOUT_CLASSIFICATION	2.6359073235338597E-5	DESIGN
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.999618037438123	WITHOUT_CLASSIFICATION	3.819625618769406E-4	DESIGN
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9966803142867453	WITHOUT_CLASSIFICATION	0.003319685713254635	DESIGN
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9991719449827948	WITHOUT_CLASSIFICATION	8.280550172052936E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9992239292602597	WITHOUT_CLASSIFICATION	7.760707397402093E-4	DESIGN
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9070820667535376	WITHOUT_CLASSIFICATION	0.09291793324646234	DESIGN
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9559698361497847	WITHOUT_CLASSIFICATION	0.04403016385021529	DESIGN
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9991072761681381	WITHOUT_CLASSIFICATION	8.927238318619234E-4	DESIGN
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9956586525324275	WITHOUT_CLASSIFICATION	0.0043413474675725785	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9996574056890071	WITHOUT_CLASSIFICATION	3.4259431099288346E-4	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9996574056890071	WITHOUT_CLASSIFICATION	3.4259431099288346E-4	DESIGN
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9984311324487677	WITHOUT_CLASSIFICATION	0.001568867551232367	DESIGN
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999744232614128	WITHOUT_CLASSIFICATION	2.557673858716722E-5	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999399023176782	WITHOUT_CLASSIFICATION	6.00976823217452E-5	DESIGN
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999616160655674	WITHOUT_CLASSIFICATION	3.8383934432495426E-5	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9999862360143553	WITHOUT_CLASSIFICATION	1.3763985644635317E-5	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9999862360143553	WITHOUT_CLASSIFICATION	1.3763985644635317E-5	DESIGN
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9991949164920721	WITHOUT_CLASSIFICATION	8.050835079279724E-4	DESIGN
normal closure	WITHOUT_CLASSIFICATION	0.9999594963572482	WITHOUT_CLASSIFICATION	4.0503642751669354E-5	DESIGN
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9993019751587292	WITHOUT_CLASSIFICATION	6.980248412707098E-4	DESIGN
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9953786828291916	WITHOUT_CLASSIFICATION	0.004621317170808373	DESIGN
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9997583051984338	WITHOUT_CLASSIFICATION	2.4169480156636803E-4	DESIGN
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9992503517185759	WITHOUT_CLASSIFICATION	7.496482814240331E-4	DESIGN
Ruby name	WITHOUT_CLASSIFICATION	0.9998521812950242	WITHOUT_CLASSIFICATION	1.4781870497584354E-4	DESIGN
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999622662285204	WITHOUT_CLASSIFICATION	3.7733771479545204E-5	DESIGN
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9989787083783532	WITHOUT_CLASSIFICATION	0.0010212916216468136	DESIGN
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9981411809717069	WITHOUT_CLASSIFICATION	0.0018588190282930296	DESIGN
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.8766264222766804	WITHOUT_CLASSIFICATION	0.12337357772331956	DESIGN
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9988499902641298	WITHOUT_CLASSIFICATION	0.0011500097358701732	DESIGN
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.7001549360753246	WITHOUT_CLASSIFICATION	0.2998450639246753	DESIGN
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9992279272230854	WITHOUT_CLASSIFICATION	7.720727769146599E-4	DESIGN
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9961303510909633	WITHOUT_CLASSIFICATION	0.0038696489090367264	DESIGN
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9998412197629457	WITHOUT_CLASSIFICATION	1.5878023705422612E-4	DESIGN
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9984627320480831	WITHOUT_CLASSIFICATION	0.0015372679519169434	DESIGN
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.999462220413448	WITHOUT_CLASSIFICATION	5.377795865520214E-4	DESIGN
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9904678026413343	WITHOUT_CLASSIFICATION	0.00953219735866571	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.9999416674043997	WITHOUT_CLASSIFICATION	5.8332595600275964E-5	DESIGN
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9994228709283491	WITHOUT_CLASSIFICATION	5.771290716509132E-4	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9999563785988169	WITHOUT_CLASSIFICATION	4.362140118299857E-5	DESIGN
inline script	WITHOUT_CLASSIFICATION	0.9999563785988169	WITHOUT_CLASSIFICATION	4.362140118299857E-5	DESIGN
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.6366013105001983	WITHOUT_CLASSIFICATION	0.3633986894998018	DESIGN
Build the class body!	WITHOUT_CLASSIFICATION	0.9999912426752582	WITHOUT_CLASSIFICATION	8.757324741778853E-6	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9988303826845908	WITHOUT_CLASSIFICATION	0.0011696173154091933	DESIGN
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9988303826845908	WITHOUT_CLASSIFICATION	0.0011696173154091933	DESIGN
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9947994158812434	WITHOUT_CLASSIFICATION	0.005200584118756662	DESIGN
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9997822999708734	WITHOUT_CLASSIFICATION	2.1770002912648888E-4	DESIGN
done done done done	WITHOUT_CLASSIFICATION	0.9998587281158674	WITHOUT_CLASSIFICATION	1.412718841325173E-4	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9997738967528369	WITHOUT_CLASSIFICATION	2.2610324716316498E-4	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9997738967528369	WITHOUT_CLASSIFICATION	2.2610324716316498E-4	DESIGN
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.6285387735525594	WITHOUT_CLASSIFICATION	0.37146122644744056	DESIGN
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9958379197630077	WITHOUT_CLASSIFICATION	0.004162080236992304	DESIGN
build first node only and return false	WITHOUT_CLASSIFICATION	0.9982902176061155	WITHOUT_CLASSIFICATION	0.0017097823938845107	DESIGN
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999278379598424	WITHOUT_CLASSIFICATION	7.216204015750352E-5	DESIGN
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9993208274390679	WITHOUT_CLASSIFICATION	6.791725609320902E-4	DESIGN
get the incoming case value	WITHOUT_CLASSIFICATION	0.9999961064221078	WITHOUT_CLASSIFICATION	3.893577892300419E-6	DESIGN
the CASE instruction	WITHOUT_CLASSIFICATION	0.9999846879508844	WITHOUT_CLASSIFICATION	1.5312049115641254E-5	DESIGN
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.995062510525032	WITHOUT_CLASSIFICATION	0.004937489474968022	DESIGN
build each "when"	WITHOUT_CLASSIFICATION	0.999846363202306	WITHOUT_CLASSIFICATION	1.536367976938927E-4	DESIGN
multiple conditions for when	WITHOUT_CLASSIFICATION	0.999703569014974	WITHOUT_CLASSIFICATION	2.9643098502596496E-4	DESIGN
build "else" if it exists	WITHOUT_CLASSIFICATION	0.9998108745650163	WITHOUT_CLASSIFICATION	1.8912543498371637E-4	DESIGN
now emit bodies	WITHOUT_CLASSIFICATION	0.9999873300483311	WITHOUT_CLASSIFICATION	1.2669951668881818E-5	DESIGN
close it out	WITHOUT_CLASSIFICATION	0.9999928178874001	WITHOUT_CLASSIFICATION	7.182112599828498E-6	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9994106779594369	WITHOUT_CLASSIFICATION	5.893220405630179E-4	DESIGN
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9984052025167052	WITHOUT_CLASSIFICATION	0.0015947974832948512	DESIGN
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9994623681580824	WITHOUT_CLASSIFICATION	5.37631841917646E-4	DESIGN
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9997144165435535	WITHOUT_CLASSIFICATION	2.8558345644656496E-4	DESIGN
Build IR for args	WITHOUT_CLASSIFICATION	0.9998898898301871	WITHOUT_CLASSIFICATION	1.1011016981288668E-4	DESIGN
Build IR for body	WITHOUT_CLASSIFICATION	0.9999311434614943	WITHOUT_CLASSIFICATION	6.885653850572804E-5	DESIGN
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9650277055590885	WITHOUT_CLASSIFICATION	0.03497229444091156	DESIGN
Instance method	WITHOUT_CLASSIFICATION	0.9998340080720356	WITHOUT_CLASSIFICATION	1.6599192796443892E-4	DESIGN
Class method	WITHOUT_CLASSIFICATION	0.9997996345023102	WITHOUT_CLASSIFICATION	2.0036549768977406E-4	DESIGN
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999536910879819	WITHOUT_CLASSIFICATION	4.630891201795518E-5	DESIGN
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9933018961096334	WITHOUT_CLASSIFICATION	0.006698103890366686	DESIGN
Now for the rest	WITHOUT_CLASSIFICATION	0.9999681590948644	WITHOUT_CLASSIFICATION	3.1840905135687945E-5	DESIGN
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9966839403479657	WITHOUT_CLASSIFICATION	0.0033160596520342214	DESIGN
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9987852414770911	WITHOUT_CLASSIFICATION	0.0012147585229089106	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9999563124504607	WITHOUT_CLASSIFICATION	4.36875495392895E-5	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9998973214990096	WITHOUT_CLASSIFICATION	1.0267850099046001E-4	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999194186549315	WITHOUT_CLASSIFICATION	8.058134506852773E-5	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9997185078831377	WITHOUT_CLASSIFICATION	2.814921168624064E-4	DESIGN
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9994106779594369	WITHOUT_CLASSIFICATION	5.893220405630179E-4	DESIGN
Create a new closure context	WITHOUT_CLASSIFICATION	0.9999563124504607	WITHOUT_CLASSIFICATION	4.36875495392895E-5	DESIGN
Build args	WITHOUT_CLASSIFICATION	0.9998973214990096	WITHOUT_CLASSIFICATION	1.0267850099046001E-4	DESIGN
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9997185078831377	WITHOUT_CLASSIFICATION	2.814921168624064E-4	DESIGN
Get the container for this new module	WITHOUT_CLASSIFICATION	0.9996731254869273	WITHOUT_CLASSIFICATION	3.2687451307264454E-4	DESIGN
Build the new module	WITHOUT_CLASSIFICATION	0.9999788072934356	WITHOUT_CLASSIFICATION	2.1192706564353117E-5	DESIGN
Build the module body	WITHOUT_CLASSIFICATION	0.9999851640882894	WITHOUT_CLASSIFICATION	1.4835911710544741E-5	DESIGN
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9950390795987456	WITHOUT_CLASSIFICATION	0.004960920401254416	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999981546225315	WITHOUT_CLASSIFICATION	1.8453774684719629E-6	DESIGN
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9995674154762815	WITHOUT_CLASSIFICATION	4.3258452371845783E-4	DESIGN
get attr	WITHOUT_CLASSIFICATION	0.9999327920381915	WITHOUT_CLASSIFICATION	6.720796180848474E-5	DESIGN
call operator	WITHOUT_CLASSIFICATION	0.9999479141835714	WITHOUT_CLASSIFICATION	5.20858164284932E-5	DESIGN
set attr	WITHOUT_CLASSIFICATION	0.99980667512617	WITHOUT_CLASSIFICATION	1.9332487382994168E-4	DESIGN
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.998283135979124	WITHOUT_CLASSIFICATION	0.0017168640208759835	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9998694930389846	WITHOUT_CLASSIFICATION	1.305069610153382E-4	DESIGN
This does the assignment!	WITHOUT_CLASSIFICATION	0.9998694930389846	WITHOUT_CLASSIFICATION	1.305069610153382E-4	DESIGN
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9992702420925803	WITHOUT_CLASSIFICATION	7.297579074196819E-4	DESIGN
build first node only and return true	WITHOUT_CLASSIFICATION	0.9981575507920429	WITHOUT_CLASSIFICATION	0.0018424492079570432	DESIGN
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9983843365821606	WITHOUT_CLASSIFICATION	0.0016156634178393448	DESIGN
Top-level script!	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9995991799134633	WITHOUT_CLASSIFICATION	4.0082008653666426E-4	DESIGN
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9996707632761533	WITHOUT_CLASSIFICATION	3.292367238466483E-4	DESIGN
What handles warnings	WITHOUT_CLASSIFICATION	0.9997714651343601	WITHOUT_CLASSIFICATION	2.2853486563990325E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9838282180726151	WITHOUT_CLASSIFICATION	0.016171781927384866	DESIGN
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9995453956086882	WITHOUT_CLASSIFICATION	4.546043913118497E-4	DESIGN
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9756303760702091	WITHOUT_CLASSIFICATION	0.024369623929790845	DESIGN
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9990022297895031	WITHOUT_CLASSIFICATION	9.97770210496827E-4	DESIGN
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.8637622218925575	WITHOUT_CLASSIFICATION	0.1362377781074425	DESIGN
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9997447130945313	WITHOUT_CLASSIFICATION	2.552869054687285E-4	DESIGN
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9993420130369348	WITHOUT_CLASSIFICATION	6.579869630650992E-4	DESIGN
alu operations	WITHOUT_CLASSIFICATION	0.9999544507628099	WITHOUT_CLASSIFICATION	4.5549237190107826E-5	DESIGN
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9940087846653479	WITHOUT_CLASSIFICATION	0.005991215334652033	DESIGN
closure instructions	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
eval instructions	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
def instructions	WITHOUT_CLASSIFICATION	0.9999232961478509	WITHOUT_CLASSIFICATION	7.670385214905839E-5	DESIGN
exception instructions	WITHOUT_CLASSIFICATION	0.9999759686825627	WITHOUT_CLASSIFICATION	2.403131743731528E-5	DESIGN
Loads	WITHOUT_CLASSIFICATION	0.999899312921037	WITHOUT_CLASSIFICATION	1.0068707896297309E-4	DESIGN
Stores	WITHOUT_CLASSIFICATION	0.9999001664690438	WITHOUT_CLASSIFICATION	9.98335309561633E-5	DESIGN
jump and branch operations	WITHOUT_CLASSIFICATION	0.9999555814392436	WITHOUT_CLASSIFICATION	4.441856075633888E-5	DESIGN
others	WITHOUT_CLASSIFICATION	0.9997388566026593	WITHOUT_CLASSIFICATION	2.6114339734070843E-4	DESIGN
a case/when branch	WITHOUT_CLASSIFICATION	0.9998985588476444	WITHOUT_CLASSIFICATION	1.0144115235556789E-4	DESIGN
optimization guards	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9952941257948609	WITHOUT_CLASSIFICATION	0.004705874205139083	DESIGN
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9971268289003403	WITHOUT_CLASSIFICATION	0.00287317109965968	DESIGN
scripts	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
scripts and modules	WITHOUT_CLASSIFICATION	0.9999741240709688	WITHOUT_CLASSIFICATION	2.5875929031261316E-5	DESIGN
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999794081368704	WITHOUT_CLASSIFICATION	2.059186312957669E-5	DESIGN
methods and closures	WITHOUT_CLASSIFICATION	0.9998623527028984	WITHOUT_CLASSIFICATION	1.3764729710155263E-4	DESIGN
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9998296234833234	WITHOUT_CLASSIFICATION	1.703765166766298E-4	DESIGN
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9740778523518784	WITHOUT_CLASSIFICATION	0.02592214764812161	DESIGN
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.999542941521942	WITHOUT_CLASSIFICATION	4.5705847805807835E-4	DESIGN
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.998853209790978	WITHOUT_CLASSIFICATION	0.0011467902090219438	DESIGN
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9997496285157419	WITHOUT_CLASSIFICATION	2.50371484258082E-4	DESIGN
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9679657039085184	WITHOUT_CLASSIFICATION	0.03203429609148146	DESIGN
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9990009715957991	WITHOUT_CLASSIFICATION	9.9902840420082E-4	DESIGN
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9948186896899662	WITHOUT_CLASSIFICATION	0.005181310310033809	DESIGN
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.999483855507348	WITHOUT_CLASSIFICATION	5.161444926520325E-4	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9991017029877955	WITHOUT_CLASSIFICATION	8.982970122044549E-4	DESIGN
Readline	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9997158943371492	WITHOUT_CLASSIFICATION	2.841056628507087E-4	DESIGN
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9995956666990674	WITHOUT_CLASSIFICATION	4.043333009325865E-4	DESIGN
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9991027915438214	WITHOUT_CLASSIFICATION	8.972084561786411E-4	DESIGN
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.6246494228269196	WITHOUT_CLASSIFICATION	0.3753505771730804	DESIGN
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999507554011147	WITHOUT_CLASSIFICATION	4.9244598885235584E-5	DESIGN
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9985097414354077	WITHOUT_CLASSIFICATION	0.0014902585645923017	DESIGN
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9967962783848477	WITHOUT_CLASSIFICATION	0.0032037216151522595	DESIGN
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.995430996550012	WITHOUT_CLASSIFICATION	0.004569003449988025	DESIGN
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9988590389355197	WITHOUT_CLASSIFICATION	0.0011409610644802517	DESIGN
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9987795636653922	WITHOUT_CLASSIFICATION	0.0012204363346077186	DESIGN
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9992833851579694	WITHOUT_CLASSIFICATION	7.166148420304896E-4	DESIGN
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9969899589743544	WITHOUT_CLASSIFICATION	0.0030100410256456117	DESIGN
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9976602963934342	WITHOUT_CLASSIFICATION	0.002339703606565843	DESIGN
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9946015810895376	WITHOUT_CLASSIFICATION	0.005398418910462412	DESIGN
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9977521277625842	WITHOUT_CLASSIFICATION	0.0022478722374158645	DESIGN
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.782746068650323	WITHOUT_CLASSIFICATION	0.21725393134967702	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.991642497611838	WITHOUT_CLASSIFICATION	0.008357502388162017	DESIGN
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.991642497611838	WITHOUT_CLASSIFICATION	0.008357502388162017	DESIGN
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9976602963934342	WITHOUT_CLASSIFICATION	0.002339703606565843	DESIGN
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9784434742089856	WITHOUT_CLASSIFICATION	0.02155652579101448	DESIGN
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9976602963934342	WITHOUT_CLASSIFICATION	0.002339703606565843	DESIGN
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9984171995715246	WITHOUT_CLASSIFICATION	0.0015828004284753837	DESIGN
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9994452420188608	WITHOUT_CLASSIFICATION	5.547579811392763E-4	DESIGN
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.9996808074713533	WITHOUT_CLASSIFICATION	3.1919252864661643E-4	DESIGN
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9970699277628313	WITHOUT_CLASSIFICATION	0.0029300722371685627	DESIGN
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.999353322409403	WITHOUT_CLASSIFICATION	6.466775905969756E-4	DESIGN
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9966018918388787	WITHOUT_CLASSIFICATION	0.00339810816112131	DESIGN
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9995130282248608	WITHOUT_CLASSIFICATION	4.869717751392304E-4	DESIGN
class or module	WITHOUT_CLASSIFICATION	0.9999629443674932	WITHOUT_CLASSIFICATION	3.7055632506758087E-5	DESIGN
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999946691061004	WITHOUT_CLASSIFICATION	5.3308938996332275E-6	DESIGN
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9996884888971173	WITHOUT_CLASSIFICATION	3.115111028827776E-4	DESIGN
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.999894930675028	WITHOUT_CLASSIFICATION	1.0506932497196444E-4	DESIGN
IN is the same!	WITHOUT_CLASSIFICATION	0.9999743600564275	WITHOUT_CLASSIFICATION	2.563994357252231E-5	DESIGN
IN changed!	WITHOUT_CLASSIFICATION	0.9999533358122243	WITHOUT_CLASSIFICATION	4.6664187775735464E-5	DESIGN
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9973601651740719	WITHOUT_CLASSIFICATION	0.0026398348259281047	DESIGN
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999790760465216	WITHOUT_CLASSIFICATION	2.092395347837447E-5	DESIGN
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9994801303818712	WITHOUT_CLASSIFICATION	5.198696181288273E-4	DESIGN
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.9990731840677807	WITHOUT_CLASSIFICATION	9.268159322192285E-4	DESIGN
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.9956331970526408	WITHOUT_CLASSIFICATION	0.004366802947359228	DESIGN
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9906556902911205	WITHOUT_CLASSIFICATION	0.009344309708879428	DESIGN
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.8816464581731499	WITHOUT_CLASSIFICATION	0.11835354182685008	DESIGN
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.998628184432885	WITHOUT_CLASSIFICATION	0.0013718155671149097	DESIGN
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.997673449968923	WITHOUT_CLASSIFICATION	0.0023265500310770395	DESIGN
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.9879656733992549	WITHOUT_CLASSIFICATION	0.012034326600745101	DESIGN
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.5980851189702623	DESIGN	0.40191488102973766	WITHOUT_CLASSIFICATION
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9997651742415627	WITHOUT_CLASSIFICATION	2.3482575843735814E-4	DESIGN
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9720874447095913	WITHOUT_CLASSIFICATION	0.027912555290408796	DESIGN
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9996295189262681	WITHOUT_CLASSIFICATION	3.7048107373190527E-4	DESIGN
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999275177428617	WITHOUT_CLASSIFICATION	7.248225713818519E-5	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9906650626669098	WITHOUT_CLASSIFICATION	0.009334937333090133	DESIGN
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9993196945315319	WITHOUT_CLASSIFICATION	6.803054684682052E-4	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9906650626669098	WITHOUT_CLASSIFICATION	0.009334937333090133	DESIGN
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999132100421443	WITHOUT_CLASSIFICATION	8.678995785562583E-5	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9995240731049861	WITHOUT_CLASSIFICATION	4.759268950139559E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9995240731049861	WITHOUT_CLASSIFICATION	4.759268950139559E-4	DESIGN
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9995240731049861	WITHOUT_CLASSIFICATION	4.759268950139559E-4	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999959381185057	WITHOUT_CLASSIFICATION	4.061881494322516E-6	DESIGN
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999959381185057	WITHOUT_CLASSIFICATION	4.061881494322516E-6	DESIGN
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9993849350720547	WITHOUT_CLASSIFICATION	6.150649279452959E-4	DESIGN
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9998741673980283	WITHOUT_CLASSIFICATION	1.258326019717563E-4	DESIGN
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999893673168258	WITHOUT_CLASSIFICATION	1.0632683174211718E-5	DESIGN
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9906786772083953	WITHOUT_CLASSIFICATION	0.00932132279160467	DESIGN
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9998990300472204	WITHOUT_CLASSIFICATION	1.0096995277966293E-4	DESIGN
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9961896851291036	WITHOUT_CLASSIFICATION	0.0038103148708964777	DESIGN
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9996603315605719	WITHOUT_CLASSIFICATION	3.3966843942821E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.9998571141915925	WITHOUT_CLASSIFICATION	1.4288580840761378E-4	DESIGN
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9978967735819461	WITHOUT_CLASSIFICATION	0.0021032264180538872	DESIGN
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999211197588163	WITHOUT_CLASSIFICATION	7.88802411837591E-5	DESIGN
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999867023236115	WITHOUT_CLASSIFICATION	1.329767638846848E-5	DESIGN
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999662846086407	WITHOUT_CLASSIFICATION	3.371539135940711E-5	DESIGN
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9997752856134032	WITHOUT_CLASSIFICATION	2.247143865968683E-4	DESIGN
root-level logic	WITHOUT_CLASSIFICATION	0.9999467654312256	WITHOUT_CLASSIFICATION	5.323456877430055E-5	DESIGN
root-level methods	WITHOUT_CLASSIFICATION	0.999883192605035	WITHOUT_CLASSIFICATION	1.1680739496493056E-4	DESIGN
root-level classes	WITHOUT_CLASSIFICATION	0.9999820515430975	WITHOUT_CLASSIFICATION	1.7948456902429426E-5	DESIGN
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999763884555298	WITHOUT_CLASSIFICATION	2.3611544470111884E-5	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9999459150194212	WITHOUT_CLASSIFICATION	5.408498057878695E-5	DESIGN
load receiver	WITHOUT_CLASSIFICATION	0.9999459150194212	WITHOUT_CLASSIFICATION	5.408498057878695E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.9999510848704156	WITHOUT_CLASSIFICATION	4.8915129584362556E-5	DESIGN
load arguments	WITHOUT_CLASSIFICATION	0.9999510848704156	WITHOUT_CLASSIFICATION	4.8915129584362556E-5	DESIGN
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9999855229354506	WITHOUT_CLASSIFICATION	1.4477064549291209E-5	DESIGN
Object[] args	WITHOUT_CLASSIFICATION	0.9999270454953328	WITHOUT_CLASSIFICATION	7.29545046671043E-5	DESIGN
load handle	WITHOUT_CLASSIFICATION	0.9998866268329824	WITHOUT_CLASSIFICATION	1.1337316701756793E-4	DESIGN
args array	WITHOUT_CLASSIFICATION	0.9999082491732839	WITHOUT_CLASSIFICATION	9.175082671613891E-5	DESIGN
i'th argument	WITHOUT_CLASSIFICATION	0.9999941188422197	WITHOUT_CLASSIFICATION	5.881157780316089E-6	DESIGN
invoke specific arity version	WITHOUT_CLASSIFICATION	0.9998709676385388	WITHOUT_CLASSIFICATION	1.290323614612495E-4	DESIGN
Object arg0	WITHOUT_CLASSIFICATION	0.9999471282143109	WITHOUT_CLASSIFICATION	5.2871785689191695E-5	DESIGN
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9945661130027377	WITHOUT_CLASSIFICATION	0.005433886997262249	DESIGN
No editing before startPos	WITHOUT_CLASSIFICATION	0.9999968091326304	WITHOUT_CLASSIFICATION	3.190867369500386E-6	DESIGN
no silly ticks!	WITHOUT_CLASSIFICATION	0.9999796777616381	WITHOUT_CLASSIFICATION	2.0322238361903355E-5	DESIGN
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999796777616381	WITHOUT_CLASSIFICATION	2.0322238361903355E-5	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9999142900140269	WITHOUT_CLASSIFICATION	8.570998597302717E-5	DESIGN
undo check	WITHOUT_CLASSIFICATION	0.9999859811715327	WITHOUT_CLASSIFICATION	1.4018828467249114E-5	DESIGN
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9996328897132256	WITHOUT_CLASSIFICATION	3.671102867743425E-4	DESIGN
ignore	WITHOUT_CLASSIFICATION	0.9998571141915925	WITHOUT_CLASSIFICATION	1.4288580840761378E-4	DESIGN
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9999721213008345	WITHOUT_CLASSIFICATION	2.7878699165612653E-5	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9999851219707147	WITHOUT_CLASSIFICATION	1.4878029285315321E-5	DESIGN
no check for ''	WITHOUT_CLASSIFICATION	0.9999851219707147	WITHOUT_CLASSIFICATION	1.4878029285315321E-5	DESIGN
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9985321023351955	WITHOUT_CLASSIFICATION	0.0014678976648045473	DESIGN
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9998992640079257	WITHOUT_CLASSIFICATION	1.0073599207427923E-4	DESIGN
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9997190519148246	WITHOUT_CLASSIFICATION	2.8094808517548737E-4	DESIGN
restore position	WITHOUT_CLASSIFICATION	0.999964613187244	WITHOUT_CLASSIFICATION	3.538681275609096E-5	DESIGN
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9995989918783798	WITHOUT_CLASSIFICATION	4.010081216202277E-4	DESIGN
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9988997829218077	WITHOUT_CLASSIFICATION	0.0011002170781923147	DESIGN
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9997527503322776	WITHOUT_CLASSIFICATION	2.472496677223668E-4	DESIGN
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.998973455215043	WITHOUT_CLASSIFICATION	0.0010265447849569726	DESIGN
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9991140809751601	WITHOUT_CLASSIFICATION	8.859190248399463E-4	DESIGN
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9985762895572077	WITHOUT_CLASSIFICATION	0.0014237104427923383	DESIGN
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999787760385042	WITHOUT_CLASSIFICATION	2.1223961495875973E-5	DESIGN
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9994772485374798	WITHOUT_CLASSIFICATION	5.227514625203187E-4	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9998992361779057	WITHOUT_CLASSIFICATION	1.0076382209444387E-4	DESIGN
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999078888393372	WITHOUT_CLASSIFICATION	9.211116066277024E-5	DESIGN
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9994551679307837	WITHOUT_CLASSIFICATION	5.448320692163042E-4	DESIGN
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9989547166356443	WITHOUT_CLASSIFICATION	0.0010452833643557835	DESIGN
Timeout module methods	WITHOUT_CLASSIFICATION	0.9998659797349271	WITHOUT_CLASSIFICATION	1.3402026507282702E-4	DESIGN
Toplevel defines	WITHOUT_CLASSIFICATION	0.9999523208430389	WITHOUT_CLASSIFICATION	4.767915696116645E-5	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999864572526814	WITHOUT_CLASSIFICATION	1.3542747318613547E-5	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999335361666096	WITHOUT_CLASSIFICATION	6.646383339038228E-5	DESIGN
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9997208244887412	WITHOUT_CLASSIFICATION	2.791755112587976E-4	DESIGN
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.99882950744055	WITHOUT_CLASSIFICATION	0.0011704925594500093	DESIGN
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999314143939936	WITHOUT_CLASSIFICATION	6.858560600649436E-5	DESIGN
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9997786911696612	WITHOUT_CLASSIFICATION	2.2130883033873646E-4	DESIGN
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.999938160830913	WITHOUT_CLASSIFICATION	6.183916908700221E-5	DESIGN
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9955420861385798	WITHOUT_CLASSIFICATION	0.004457913861420293	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9966440204860679	WITHOUT_CLASSIFICATION	0.0033559795139319988	DESIGN
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9986859430100276	WITHOUT_CLASSIFICATION	0.0013140569899723858	DESIGN
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9992296333107846	WITHOUT_CLASSIFICATION	7.703666892154226E-4	DESIGN
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9949702822514636	WITHOUT_CLASSIFICATION	0.00502971774853644	DESIGN
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9996557523645052	WITHOUT_CLASSIFICATION	3.442476354948048E-4	DESIGN
Windows is LLP64	WITHOUT_CLASSIFICATION	0.999933544723024	WITHOUT_CLASSIFICATION	6.645527697596564E-5	DESIGN
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9996106507654194	WITHOUT_CLASSIFICATION	3.8934923458052166E-4	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9990844271867487	WITHOUT_CLASSIFICATION	9.155728132512037E-4	DESIGN
$blah	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9966440204860679	WITHOUT_CLASSIFICATION	0.0033559795139319988	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9864399851908744	WITHOUT_CLASSIFICATION	0.013560014809125652	DESIGN
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9990844271867487	WITHOUT_CLASSIFICATION	9.155728132512037E-4	DESIGN
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9953336327898707	WITHOUT_CLASSIFICATION	0.004666367210129255	DESIGN
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9995359987068363	WITHOUT_CLASSIFICATION	4.6400129316373446E-4	DESIGN
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9998610679043072	WITHOUT_CLASSIFICATION	1.3893209569286152E-4	DESIGN
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9990273420785957	WITHOUT_CLASSIFICATION	9.726579214043945E-4	DESIGN
case FLOAT:	WITHOUT_CLASSIFICATION	0.9999855229354506	WITHOUT_CLASSIFICATION	1.4477064549291209E-5	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9997522913979859	WITHOUT_CLASSIFICATION	2.4770860201406584E-4	DESIGN
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9997522913979859	WITHOUT_CLASSIFICATION	2.4770860201406584E-4	DESIGN
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999862859949656	WITHOUT_CLASSIFICATION	1.3714005034409717E-5	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9996898589930214	WITHOUT_CLASSIFICATION	3.1014100697852317E-4	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9998818524031841	WITHOUT_CLASSIFICATION	1.1814759681588196E-4	DESIGN
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9998818524031841	WITHOUT_CLASSIFICATION	1.1814759681588196E-4	DESIGN
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999871721688117	WITHOUT_CLASSIFICATION	1.2827831188307727E-5	DESIGN
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9991650691023628	WITHOUT_CLASSIFICATION	8.349308976372536E-4	DESIGN
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9999894295015931	WITHOUT_CLASSIFICATION	1.057049840692797E-5	DESIGN
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9784376003193331	WITHOUT_CLASSIFICATION	0.021562399680666842	DESIGN
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999793334667721	WITHOUT_CLASSIFICATION	2.0666533227918727E-5	DESIGN
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9875449008052487	WITHOUT_CLASSIFICATION	0.01245509919475129	DESIGN
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9998459892845752	WITHOUT_CLASSIFICATION	1.5401071542471749E-4	DESIGN
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9992218185887107	WITHOUT_CLASSIFICATION	7.781814112893771E-4	DESIGN
host and port given	WITHOUT_CLASSIFICATION	0.9999705227974868	WITHOUT_CLASSIFICATION	2.9477202513292725E-5	DESIGN
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9983170080211156	WITHOUT_CLASSIFICATION	0.0016829919788844707	DESIGN
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9959281486222086	WITHOUT_CLASSIFICATION	0.0040718513777914965	DESIGN
continue with normal initialization	WITHOUT_CLASSIFICATION	0.999825249475947	WITHOUT_CLASSIFICATION	1.7475052405301796E-4	DESIGN
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999280229761929	WITHOUT_CLASSIFICATION	7.197702380713034E-5	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9986370510551571	WITHOUT_CLASSIFICATION	0.0013629489448428302	DESIGN
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9981100355450736	WITHOUT_CLASSIFICATION	0.001889964454926512	DESIGN
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9993956629765074	WITHOUT_CLASSIFICATION	6.043370234926474E-4	DESIGN
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9991136987522224	WITHOUT_CLASSIFICATION	8.863012477775866E-4	DESIGN
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9998729308674716	WITHOUT_CLASSIFICATION	1.270691325283277E-4	DESIGN
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9992038191052193	WITHOUT_CLASSIFICATION	7.961808947808226E-4	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
255.255.255.255	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
0.0.0.0	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.999871329546474	WITHOUT_CLASSIFICATION	1.2867045352607387E-4	DESIGN
line 323	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999013572535052	WITHOUT_CLASSIFICATION	9.864274649484762E-5	DESIGN
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999013572535052	WITHOUT_CLASSIFICATION	9.864274649484762E-5	DESIGN
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999195608041506	WITHOUT_CLASSIFICATION	8.043919584943611E-5	DESIGN
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9992489706806322	WITHOUT_CLASSIFICATION	7.510293193678369E-4	DESIGN
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999946691061004	WITHOUT_CLASSIFICATION	5.3308938996332275E-6	DESIGN
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9991320841669601	WITHOUT_CLASSIFICATION	8.679158330398424E-4	DESIGN
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9985261476870745	WITHOUT_CLASSIFICATION	0.0014738523129255202	DESIGN
RubySocket	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9998981955017817	WITHOUT_CLASSIFICATION	1.01804498218287E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9987902058711957	WITHOUT_CLASSIFICATION	0.0012097941288042294	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999063862626745	WITHOUT_CLASSIFICATION	9.361373732555032E-5	DESIGN
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999520474761333	WITHOUT_CLASSIFICATION	4.7952523866723206E-5	DESIGN
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999609205343934	WITHOUT_CLASSIFICATION	3.907946560652385E-5	DESIGN
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9995873408863108	WITHOUT_CLASSIFICATION	4.126591136891019E-4	DESIGN
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9991382253235144	WITHOUT_CLASSIFICATION	8.617746764855519E-4	DESIGN
Call the thread's code	WITHOUT_CLASSIFICATION	0.9998667420414468	WITHOUT_CLASSIFICATION	1.3325795855321398E-4	DESIGN
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.999257860864667	WITHOUT_CLASSIFICATION	7.421391353330063E-4	DESIGN
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9997518461149423	WITHOUT_CLASSIFICATION	2.481538850577494E-4	DESIGN
be dead	WITHOUT_CLASSIFICATION	0.9998781329501119	WITHOUT_CLASSIFICATION	1.2186704988817737E-4	DESIGN
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9980052136294302	WITHOUT_CLASSIFICATION	0.0019947863705698054	DESIGN
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.99942847541315	WITHOUT_CLASSIFICATION	5.715245868498746E-4	DESIGN
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999868586942829	WITHOUT_CLASSIFICATION	1.314130571719773E-5	DESIGN
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9995013601183459	WITHOUT_CLASSIFICATION	4.986398816540521E-4	DESIGN
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.999935325621332	WITHOUT_CLASSIFICATION	6.467437866801427E-5	DESIGN
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999563442010008	WITHOUT_CLASSIFICATION	4.365579899918552E-5	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9961704624498975	WITHOUT_CLASSIFICATION	0.003829537550102536	DESIGN
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.947462100411867	WITHOUT_CLASSIFICATION	0.052537899588132986	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9996766270379723	WITHOUT_CLASSIFICATION	3.233729620276251E-4	DESIGN
main body	WITHOUT_CLASSIFICATION	0.9999269858875015	WITHOUT_CLASSIFICATION	7.301411249845055E-5	DESIGN
return jump handling	WITHOUT_CLASSIFICATION	0.9999424039961861	WITHOUT_CLASSIFICATION	5.7596003814009284E-5	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9999114842249215	WITHOUT_CLASSIFICATION	8.851577507855025E-5	DESIGN
return result if we're still good	WITHOUT_CLASSIFICATION	0.9994756014511039	WITHOUT_CLASSIFICATION	5.243985488960712E-4	DESIGN
redo jump handling	WITHOUT_CLASSIFICATION	0.9999242033187618	WITHOUT_CLASSIFICATION	7.579668123832576E-5	DESIGN
clear the redo	WITHOUT_CLASSIFICATION	0.999985342043131	WITHOUT_CLASSIFICATION	1.4657956868800136E-5	DESIGN
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9978146030603626	WITHOUT_CLASSIFICATION	0.0021853969396373766	DESIGN
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9927324124818027	WITHOUT_CLASSIFICATION	0.007267587518197354	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9980564947703765	WITHOUT_CLASSIFICATION	0.0019435052296234232	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9944676761532226	WITHOUT_CLASSIFICATION	0.005532323846777421	DESIGN
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999615035591511	WITHOUT_CLASSIFICATION	3.8496440848807714E-5	DESIGN
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.982444623067953	WITHOUT_CLASSIFICATION	0.017555376932047066	DESIGN
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9939509669265711	WITHOUT_CLASSIFICATION	0.0060490330734288954	DESIGN
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999813215678975	WITHOUT_CLASSIFICATION	1.8678432102514786E-5	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9973155399229651	WITHOUT_CLASSIFICATION	0.002684460077034981	DESIGN
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9973155399229651	WITHOUT_CLASSIFICATION	0.002684460077034981	DESIGN
normal all-rest method	WITHOUT_CLASSIFICATION	0.9998759482878221	WITHOUT_CLASSIFICATION	1.2405171217798932E-4	DESIGN
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9998356711926996	WITHOUT_CLASSIFICATION	1.643288073003368E-4	DESIGN
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9997631849093763	WITHOUT_CLASSIFICATION	2.368150906235858E-4	DESIGN
return	WITHOUT_CLASSIFICATION	0.9999326546623389	WITHOUT_CLASSIFICATION	6.734533766110252E-5	DESIGN
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9996652185668654	WITHOUT_CLASSIFICATION	3.347814331346278E-4	DESIGN
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999266384076372	WITHOUT_CLASSIFICATION	7.336159236283426E-5	DESIGN
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999681460157305	WITHOUT_CLASSIFICATION	3.185398426946392E-5	DESIGN
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9993815808175891	WITHOUT_CLASSIFICATION	6.184191824108352E-4	DESIGN
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9994672407850027	WITHOUT_CLASSIFICATION	5.327592149972912E-4	DESIGN
tc	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
self name	WITHOUT_CLASSIFICATION	0.999727249593651	WITHOUT_CLASSIFICATION	2.7275040634889625E-4	DESIGN
no args	WITHOUT_CLASSIFICATION	0.9999530512209603	WITHOUT_CLASSIFICATION	4.694877903966082E-5	DESIGN
variable args with block	WITHOUT_CLASSIFICATION	0.999986069352487	WITHOUT_CLASSIFICATION	1.3930647512958918E-5	DESIGN
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9997374240630904	WITHOUT_CLASSIFICATION	2.62575936909628E-4	DESIGN
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997841680699475	WITHOUT_CLASSIFICATION	2.1583193005255858E-4	DESIGN
one arg with block	WITHOUT_CLASSIFICATION	0.9999799394120639	WITHOUT_CLASSIFICATION	2.006058793607811E-5	DESIGN
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999566539135055	WITHOUT_CLASSIFICATION	4.3346086494496985E-4	DESIGN
two args with block	WITHOUT_CLASSIFICATION	0.9999877893885727	WITHOUT_CLASSIFICATION	1.2210611427204035E-5	DESIGN
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997895537879482	WITHOUT_CLASSIFICATION	2.104462120518104E-4	DESIGN
three args with block	WITHOUT_CLASSIFICATION	0.999985812855874	WITHOUT_CLASSIFICATION	1.4187144125959414E-5	DESIGN
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997065248220252	WITHOUT_CLASSIFICATION	2.934751779748679E-4	DESIGN
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999826066601145	WITHOUT_CLASSIFICATION	1.7393339885421834E-5	DESIGN
all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999666685511561	WITHOUT_CLASSIFICATION	3.333144884388905E-5	DESIGN
all other arg cases without block	WITHOUT_CLASSIFICATION	0.9994568864308828	WITHOUT_CLASSIFICATION	5.431135691171733E-4	DESIGN
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999963259127219	WITHOUT_CLASSIFICATION	3.67408727808009E-6	DESIGN
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999982166169918	WITHOUT_CLASSIFICATION	1.7833830082022974E-6	DESIGN
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999632618774035	WITHOUT_CLASSIFICATION	3.673812259651824E-5	DESIGN
load target for invocations	WITHOUT_CLASSIFICATION	0.9999889645339236	WITHOUT_CLASSIFICATION	1.1035466076285864E-5	DESIGN
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9958657380065712	WITHOUT_CLASSIFICATION	0.004134261993428804	DESIGN
static invocation	WITHOUT_CLASSIFICATION	0.9999000035914355	WITHOUT_CLASSIFICATION	9.999640856445757E-5	DESIGN
virtual invocation	WITHOUT_CLASSIFICATION	0.9999378127047811	WITHOUT_CLASSIFICATION	6.218729521895468E-5	DESIGN
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9704579447517906	WITHOUT_CLASSIFICATION	0.029542055248209426	DESIGN
normal finally and exit	WITHOUT_CLASSIFICATION	0.999959033432993	WITHOUT_CLASSIFICATION	4.096656700698312E-5	DESIGN
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9995244081739462	WITHOUT_CLASSIFICATION	4.7559182605376075E-4	DESIGN
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9944676761532226	WITHOUT_CLASSIFICATION	0.005532323846777421	DESIGN
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9988995324583787	WITHOUT_CLASSIFICATION	0.0011004675416213425	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9987233045506686	WITHOUT_CLASSIFICATION	0.0012766954493314121	DESIGN
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9987233045506686	WITHOUT_CLASSIFICATION	0.0012766954493314121	DESIGN
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9986475621068137	WITHOUT_CLASSIFICATION	0.0013524378931862487	DESIGN
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9980330949935052	WITHOUT_CLASSIFICATION	0.0019669050064947662	DESIGN
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
never reached	WITHOUT_CLASSIFICATION	0.9999764997075087	WITHOUT_CLASSIFICATION	2.3500292491314604E-5	DESIGN
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9985923594382998	WITHOUT_CLASSIFICATION	0.0014076405617002362	DESIGN
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9989640043734578	WITHOUT_CLASSIFICATION	0.0010359956265422765	DESIGN
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9979211027072866	WITHOUT_CLASSIFICATION	0.0020788972927134604	DESIGN
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9989898352005272	WITHOUT_CLASSIFICATION	0.0010101647994727727	DESIGN
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9989635420704698	WITHOUT_CLASSIFICATION	0.0010364579295301895	DESIGN
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9979201759884797	WITHOUT_CLASSIFICATION	0.0020798240115202497	DESIGN
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9989893844126339	WITHOUT_CLASSIFICATION	0.0010106155873661458	DESIGN
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9985917315261622	WITHOUT_CLASSIFICATION	0.0014082684738378653	DESIGN
promise to implement N	WITHOUT_CLASSIFICATION	0.9996781393530412	WITHOUT_CLASSIFICATION	3.218606469587896E-4	DESIGN
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9619390889328456	WITHOUT_CLASSIFICATION	0.03806091106715428	DESIGN
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.9997566532623463	WITHOUT_CLASSIFICATION	2.43346737653723E-4	DESIGN
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9997690941054622	WITHOUT_CLASSIFICATION	2.3090589453780207E-4	DESIGN
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9952645488285519	WITHOUT_CLASSIFICATION	0.004735451171448162	DESIGN
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9965117324110234	WITHOUT_CLASSIFICATION	0.0034882675889765977	DESIGN
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9930174668083855	WITHOUT_CLASSIFICATION	0.006982533191614402	DESIGN
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9965984983641445	WITHOUT_CLASSIFICATION	0.003401501635855572	DESIGN
promise to implement three	WITHOUT_CLASSIFICATION	0.9996779956231315	WITHOUT_CLASSIFICATION	3.2200437686836543E-4	DESIGN
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9993795083818945	WITHOUT_CLASSIFICATION	6.204916181055014E-4	DESIGN
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9984268341042576	WITHOUT_CLASSIFICATION	0.0015731658957424605	DESIGN
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9995746693013029	WITHOUT_CLASSIFICATION	4.2533069869713294E-4	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998741602307003	WITHOUT_CLASSIFICATION	1.258397692997896E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9990096736333437	WITHOUT_CLASSIFICATION	9.903263666563179E-4	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9999734145714386	WITHOUT_CLASSIFICATION	2.658542856148481E-5	DESIGN
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999896725785406	WITHOUT_CLASSIFICATION	1.032742145940219E-4	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9999798427388741	WITHOUT_CLASSIFICATION	2.015726112586778E-5	DESIGN
start setup method	WITHOUT_CLASSIFICATION	0.9997943192130945	WITHOUT_CLASSIFICATION	2.0568078690552606E-4	DESIGN
set RubyClass	WITHOUT_CLASSIFICATION	0.9999111297068246	WITHOUT_CLASSIFICATION	8.887029317548222E-5	DESIGN
set Ruby	WITHOUT_CLASSIFICATION	0.9998322024769806	WITHOUT_CLASSIFICATION	1.6779752301954469E-4	DESIGN
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9973181722311597	WITHOUT_CLASSIFICATION	0.002681827768840279	DESIGN
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9978049963257193	WITHOUT_CLASSIFICATION	0.0021950036742806834	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999749059015622	WITHOUT_CLASSIFICATION	2.5094098437863903E-5	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999646602695123	WITHOUT_CLASSIFICATION	3.533973048774401E-5	DESIGN
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998741602307003	WITHOUT_CLASSIFICATION	1.258397692997896E-4	DESIGN
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9990096736333437	WITHOUT_CLASSIFICATION	9.903263666563179E-4	DESIGN
create constructor	WITHOUT_CLASSIFICATION	0.9999734145714386	WITHOUT_CLASSIFICATION	2.658542856148481E-5	DESIGN
end constructor	WITHOUT_CLASSIFICATION	0.9999798427388741	WITHOUT_CLASSIFICATION	2.015726112586778E-5	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9891096457184925	WITHOUT_CLASSIFICATION	0.010890354281507532	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9938045848890957	WITHOUT_CLASSIFICATION	0.0061954151109042685	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999324510571228	WITHOUT_CLASSIFICATION	6.754894287717362E-5	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9999589866217334	WITHOUT_CLASSIFICATION	4.10133782666009E-5	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.9998350798167653	WITHOUT_CLASSIFICATION	1.6492018323463267E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9980495533303583	WITHOUT_CLASSIFICATION	0.0019504466696416856	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9998817514545746	WITHOUT_CLASSIFICATION	1.1824854542548482E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.999960244096647	WITHOUT_CLASSIFICATION	3.9755903353090846E-5	DESIGN
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.990134626186949	WITHOUT_CLASSIFICATION	0.009865373813050943	DESIGN
store the wrapper	WITHOUT_CLASSIFICATION	0.9999952729331744	WITHOUT_CLASSIFICATION	4.727066825690807E-6	DESIGN
prepare temp locals	WITHOUT_CLASSIFICATION	0.9999693038152986	WITHOUT_CLASSIFICATION	3.0696184701397025E-5	DESIGN
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9950992432074064	WITHOUT_CLASSIFICATION	0.004900756792593586	DESIGN
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9994501594100178	WITHOUT_CLASSIFICATION	5.498405899822764E-4	DESIGN
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9997954411846984	WITHOUT_CLASSIFICATION	2.0455881530166237E-4	DESIGN
store it	WITHOUT_CLASSIFICATION	0.9999223506540128	WITHOUT_CLASSIFICATION	7.764934598726809E-5	DESIGN
end of try block	WITHOUT_CLASSIFICATION	0.9999949688812474	WITHOUT_CLASSIFICATION	5.031118752551826E-6	DESIGN
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9993853321224312	WITHOUT_CLASSIFICATION	6.146678775688141E-4	DESIGN
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9976657559920565	WITHOUT_CLASSIFICATION	0.0023342440079433843	DESIGN
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9962678862522524	WITHOUT_CLASSIFICATION	0.0037321137477474985	DESIGN
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999646602695123	WITHOUT_CLASSIFICATION	3.533973048774401E-5	DESIGN
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9938045848890957	WITHOUT_CLASSIFICATION	0.0061954151109042685	DESIGN
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999324510571228	WITHOUT_CLASSIFICATION	6.754894287717362E-5	DESIGN
invoke method	WITHOUT_CLASSIFICATION	0.9998350798167653	WITHOUT_CLASSIFICATION	1.6492018323463267E-4	DESIGN
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9980495533303583	WITHOUT_CLASSIFICATION	0.0019504466696416856	DESIGN
end setup method	WITHOUT_CLASSIFICATION	0.9998817514545746	WITHOUT_CLASSIFICATION	1.1824854542548482E-4	DESIGN
end class	WITHOUT_CLASSIFICATION	0.999960244096647	WITHOUT_CLASSIFICATION	3.9755903353090846E-5	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9999894411076078	WITHOUT_CLASSIFICATION	1.0558892392217987E-5	DESIGN
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9984638119661426	WITHOUT_CLASSIFICATION	0.0015361880338574075	DESIGN
perform the dispatch	WITHOUT_CLASSIFICATION	0.9999846304396144	WITHOUT_CLASSIFICATION	1.5369560385659373E-5	DESIGN
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9998009095610448	WITHOUT_CLASSIFICATION	1.990904389552294E-4	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9994713945527014	WITHOUT_CLASSIFICATION	5.286054472986695E-4	DESIGN
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9994713945527014	WITHOUT_CLASSIFICATION	5.286054472986695E-4	DESIGN
setup the class	WITHOUT_CLASSIFICATION	0.9999894520574684	WITHOUT_CLASSIFICATION	1.0547942531672318E-5	DESIGN
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9989536413289438	WITHOUT_CLASSIFICATION	0.0010463586710561862	DESIGN
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9909230269785756	WITHOUT_CLASSIFICATION	0.009076973021424326	DESIGN
probably a primitive	WITHOUT_CLASSIFICATION	0.9998485005572477	WITHOUT_CLASSIFICATION	1.5149944275222676E-4	DESIGN
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9997080003902717	WITHOUT_CLASSIFICATION	2.919996097282071E-4	DESIGN
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999188736633702	WITHOUT_CLASSIFICATION	8.112633662973763E-5	DESIGN
set the full name	WITHOUT_CLASSIFICATION	0.9999445169335084	WITHOUT_CLASSIFICATION	5.5483066491661546E-5	DESIGN
include all interfaces	WITHOUT_CLASSIFICATION	0.9999469312456756	WITHOUT_CLASSIFICATION	5.3068754324348665E-5	DESIGN
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9991411755247235	WITHOUT_CLASSIFICATION	8.588244752765196E-4	DESIGN
add array construction methods	WITHOUT_CLASSIFICATION	0.9999835469830055	WITHOUT_CLASSIFICATION	1.6453016994522922E-5	DESIGN
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9996923749663815	WITHOUT_CLASSIFICATION	3.076250336184677E-4	DESIGN
add all instance and static methods	WITHOUT_CLASSIFICATION	0.9986719178757	WITHOUT_CLASSIFICATION	0.0013280821243001008	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999792932976337	WITHOUT_CLASSIFICATION	2.0706702366308358E-5	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9998903396122831	WITHOUT_CLASSIFICATION	1.096603877169232E-4	DESIGN
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9976925277655102	WITHOUT_CLASSIFICATION	0.0023074722344896964	DESIGN
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9995597187591204	WITHOUT_CLASSIFICATION	4.402812408794931E-4	DESIGN
add all static variables	WITHOUT_CLASSIFICATION	0.9999344366236966	WITHOUT_CLASSIFICATION	6.556337630339403E-5	DESIGN
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9989765266783185	WITHOUT_CLASSIFICATION	0.0010234733216815917	DESIGN
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9998333297810035	WITHOUT_CLASSIFICATION	1.6667021899656427E-4	DESIGN
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.9987294146894259	WITHOUT_CLASSIFICATION	0.0012705853105740633	DESIGN
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.9998306014883978	DESIGN	1.693985116022747E-4	WITHOUT_CLASSIFICATION
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.996278513997026	WITHOUT_CLASSIFICATION	0.003721486002973929	DESIGN
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9989007335382365	WITHOUT_CLASSIFICATION	0.0010992664617635029	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9081609898088744	WITHOUT_CLASSIFICATION	0.09183901019112561	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9443555379335185	WITHOUT_CLASSIFICATION	0.05564446206648161	DESIGN
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.999331437000762	WITHOUT_CLASSIFICATION	6.685629992379321E-4	DESIGN
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9981361303721253	WITHOUT_CLASSIFICATION	0.0018638696278747069	DESIGN
line 326	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9443555379335185	WITHOUT_CLASSIFICATION	0.05564446206648161	DESIGN
too much array creation!	WITHOUT_CLASSIFICATION	0.9998903396122831	WITHOUT_CLASSIFICATION	1.096603877169232E-4	DESIGN
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9997579523750104	WITHOUT_CLASSIFICATION	2.4204762498950395E-4	DESIGN
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9974736225342478	WITHOUT_CLASSIFICATION	0.0025263774657522213	DESIGN
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9967123912138302	WITHOUT_CLASSIFICATION	0.00328760878616976	DESIGN
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9995917257320591	WITHOUT_CLASSIFICATION	4.08274267940894E-4	DESIGN
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999642692160059	WITHOUT_CLASSIFICATION	3.573078399412105E-5	DESIGN
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999132124273312	WITHOUT_CLASSIFICATION	8.678757266880605E-5	DESIGN
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.998066367477709	WITHOUT_CLASSIFICATION	0.0019336325222910245	DESIGN
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9943896767541761	WITHOUT_CLASSIFICATION	0.0056103232458238885	DESIGN
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.998861092493008	WITHOUT_CLASSIFICATION	0.001138907506991906	DESIGN
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9925461593196743	WITHOUT_CLASSIFICATION	0.007453840680325752	DESIGN
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9911002298520578	WITHOUT_CLASSIFICATION	0.008899770147942132	DESIGN
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.997515414824792	WITHOUT_CLASSIFICATION	0.002484585175207971	DESIGN
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9984887451563792	WITHOUT_CLASSIFICATION	0.0015112548436207922	DESIGN
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9998828532678118	WITHOUT_CLASSIFICATION	1.1714673218820009E-4	DESIGN
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9294832759935974	WITHOUT_CLASSIFICATION	0.07051672400640265	DESIGN
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.998514676505832	WITHOUT_CLASSIFICATION	0.001485323494167924	DESIGN
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9997876364854669	WITHOUT_CLASSIFICATION	2.1236351453312062E-4	DESIGN
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.9625003173228809	WITHOUT_CLASSIFICATION	0.03749968267711906	DESIGN
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999690290413465	WITHOUT_CLASSIFICATION	3.097095865342079E-5	DESIGN
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9993737980418773	WITHOUT_CLASSIFICATION	6.262019581225757E-4	DESIGN
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9919440486164486	WITHOUT_CLASSIFICATION	0.008055951383551349	DESIGN
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9818956476350017	WITHOUT_CLASSIFICATION	0.018104352364998248	DESIGN
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9998314258192056	WITHOUT_CLASSIFICATION	1.6857418079440321E-4	DESIGN
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.9986603258362323	WITHOUT_CLASSIFICATION	0.0013396741637676118	DESIGN
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999150649653583	WITHOUT_CLASSIFICATION	8.493503464169557E-5	DESIGN
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.99806960919279	WITHOUT_CLASSIFICATION	0.0019303908072100546	DESIGN
array creation should use this variant	WITHOUT_CLASSIFICATION	0.9893541333032594	WITHOUT_CLASSIFICATION	0.01064586669674049	DESIGN
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9652467737184043	WITHOUT_CLASSIFICATION	0.03475322628159562	DESIGN
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9995445604938576	WITHOUT_CLASSIFICATION	4.554395061423882E-4	DESIGN
add reference to interface module	WITHOUT_CLASSIFICATION	0.9998334478617121	WITHOUT_CLASSIFICATION	1.6655213828783587E-4	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9999370674578619	WITHOUT_CLASSIFICATION	6.293254213815223E-5	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9999370674578619	WITHOUT_CLASSIFICATION	6.293254213815223E-5	DESIGN
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999792932976337	WITHOUT_CLASSIFICATION	2.0706702366308358E-5	DESIGN
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9991493911664728	WITHOUT_CLASSIFICATION	8.506088335270584E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9995757861663656	WITHOUT_CLASSIFICATION	4.24213833634414E-4	DESIGN
weakly reserved names	WITHOUT_CLASSIFICATION	0.9999573033705407	WITHOUT_CLASSIFICATION	4.2696629459418E-5	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998951057805546	WITHOUT_CLASSIFICATION	1.0489421944532719E-4	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998951057805546	WITHOUT_CLASSIFICATION	1.0489421944532719E-4	DESIGN
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999528093202819	WITHOUT_CLASSIFICATION	4.719067971817711E-5	DESIGN
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9995628287831563	WITHOUT_CLASSIFICATION	4.371712168437889E-4	DESIGN
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.999498919753038	WITHOUT_CLASSIFICATION	5.010802469620076E-4	DESIGN
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.999951690174022	WITHOUT_CLASSIFICATION	4.8309825978130904E-5	DESIGN
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9978533145450802	WITHOUT_CLASSIFICATION	0.0021466854549197943	DESIGN
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9813635159364568	WITHOUT_CLASSIFICATION	0.01863648406354332	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9990145281976377	WITHOUT_CLASSIFICATION	9.854718023622308E-4	DESIGN
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9991306829321317	WITHOUT_CLASSIFICATION	8.6931706786835E-4	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9997513844756768	WITHOUT_CLASSIFICATION	2.4861552432327847E-4	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9999807420790316	WITHOUT_CLASSIFICATION	1.9257920968378554E-5	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9996091301971293	WITHOUT_CLASSIFICATION	3.9086980287076484E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999735290685494	WITHOUT_CLASSIFICATION	2.6470931450617224E-5	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9996091301971293	WITHOUT_CLASSIFICATION	3.9086980287076484E-4	DESIGN
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9997656445544547	WITHOUT_CLASSIFICATION	2.3435544554534162E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
something?	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9992747236596399	WITHOUT_CLASSIFICATION	7.252763403601271E-4	DESIGN
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9992747236596399	WITHOUT_CLASSIFICATION	7.252763403601271E-4	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999198316964006	WITHOUT_CLASSIFICATION	8.01683035994032E-5	DESIGN
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999198316964006	WITHOUT_CLASSIFICATION	8.01683035994032E-5	DESIGN
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999739195982325	WITHOUT_CLASSIFICATION	2.6080401767480817E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9960255168159194	WITHOUT_CLASSIFICATION	0.003974483184080472	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9923312437071308	WITHOUT_CLASSIFICATION	0.007668756292869223	DESIGN
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9810242556956704	WITHOUT_CLASSIFICATION	0.0189757443043295	DESIGN
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9996415933487756	WITHOUT_CLASSIFICATION	3.584066512245112E-4	DESIGN
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.99958806423163	WITHOUT_CLASSIFICATION	4.119357683699112E-4	DESIGN
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.999878529042632	WITHOUT_CLASSIFICATION	1.2147095736794131E-4	DESIGN
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999735290685494	WITHOUT_CLASSIFICATION	2.6470931450617224E-5	DESIGN
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9996091301971293	WITHOUT_CLASSIFICATION	3.9086980287076484E-4	DESIGN
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9909955171536146	WITHOUT_CLASSIFICATION	0.009004482846385524	DESIGN
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.995436928319542	WITHOUT_CLASSIFICATION	0.004563071680458024	DESIGN
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9996288530641626	WITHOUT_CLASSIFICATION	3.7114693583733844E-4	DESIGN
see note above re: return type	WITHOUT_CLASSIFICATION	0.9997491831681306	WITHOUT_CLASSIFICATION	2.5081683186938436E-4	DESIGN
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9983068014877706	WITHOUT_CLASSIFICATION	0.0016931985122292828	DESIGN
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9997881833498106	WITHOUT_CLASSIFICATION	2.118166501894433E-4	DESIGN
one-dimensional array	WITHOUT_CLASSIFICATION	0.9999669125546049	WITHOUT_CLASSIFICATION	3.3087445395169846E-5	DESIGN
n-dimensional array	WITHOUT_CLASSIFICATION	0.9999602837477514	WITHOUT_CLASSIFICATION	3.971625224862124E-5	DESIGN
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9993973091786994	WITHOUT_CLASSIFICATION	6.026908213006594E-4	DESIGN
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9952901064511652	WITHOUT_CLASSIFICATION	0.0047098935488347465	DESIGN
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.989217037473191	WITHOUT_CLASSIFICATION	0.010782962526808978	DESIGN
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9993002508956009	WITHOUT_CLASSIFICATION	6.997491043990754E-4	DESIGN
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9996091301971293	WITHOUT_CLASSIFICATION	3.9086980287076484E-4	DESIGN
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999714860870759	WITHOUT_CLASSIFICATION	2.851391292412055E-5	DESIGN
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9979829406255921	WITHOUT_CLASSIFICATION	0.002017059374407833	DESIGN
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9977939020931662	WITHOUT_CLASSIFICATION	0.0022060979068337875	DESIGN
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999574643523031	WITHOUT_CLASSIFICATION	4.253564769691209E-5	DESIGN
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9997336560063308	WITHOUT_CLASSIFICATION	2.663439936691863E-4	DESIGN
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999853881367338	WITHOUT_CLASSIFICATION	1.4611863266192023E-4	DESIGN
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9996634193798434	WITHOUT_CLASSIFICATION	3.3658062015657936E-4	DESIGN
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.998784796844102	WITHOUT_CLASSIFICATION	0.001215203155897999	DESIGN
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9995960772337472	WITHOUT_CLASSIFICATION	4.0392276625277274E-4	DESIGN
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9999545296077025	WITHOUT_CLASSIFICATION	4.547039229751131E-5	DESIGN
The template for interface modules	WITHOUT_CLASSIFICATION	0.9996263809734046	WITHOUT_CLASSIFICATION	3.736190265953513E-4	DESIGN
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999688307001563	WITHOUT_CLASSIFICATION	3.1169299843710277E-4	DESIGN
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999869666465545	WITHOUT_CLASSIFICATION	1.3033353445457388E-5	DESIGN
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999716026468248	WITHOUT_CLASSIFICATION	2.8397353175139805E-5	DESIGN
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9982070637801783	WITHOUT_CLASSIFICATION	0.001792936219821679	DESIGN
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.994753082525052	WITHOUT_CLASSIFICATION	0.0052469174749479736	DESIGN
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9967869083108066	WITHOUT_CLASSIFICATION	0.0032130916891934163	DESIGN
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999455551720794	WITHOUT_CLASSIFICATION	5.444482792063096E-5	DESIGN
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999715148874253	WITHOUT_CLASSIFICATION	2.848511257465681E-5	DESIGN
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9997680985522636	WITHOUT_CLASSIFICATION	2.319014477365116E-4	DESIGN
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9997269363606083	WITHOUT_CLASSIFICATION	2.73063639391731E-4	DESIGN
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9995504019526856	WITHOUT_CLASSIFICATION	4.49598047314361E-4	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9999700688164419	WITHOUT_CLASSIFICATION	2.993118355808321E-5	DESIGN
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.999691012548601	WITHOUT_CLASSIFICATION	3.0898745139888825E-4	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9999197414631366	WITHOUT_CLASSIFICATION	8.025853686340597E-5	DESIGN
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998110297180285	WITHOUT_CLASSIFICATION	1.889702819715097E-4	DESIGN
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998554329260317	WITHOUT_CLASSIFICATION	1.4456707396818362E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9995757861663656	WITHOUT_CLASSIFICATION	4.24213833634414E-4	DESIGN
add alias to meta	WITHOUT_CLASSIFICATION	0.9999700688164419	WITHOUT_CLASSIFICATION	2.993118355808321E-5	DESIGN
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9952594492993488	WITHOUT_CLASSIFICATION	0.0047405507006512	DESIGN
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9918590904704023	WITHOUT_CLASSIFICATION	0.008140909529597649	DESIGN
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9991527232451319	WITHOUT_CLASSIFICATION	8.472767548681029E-4	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9999854272301639	WITHOUT_CLASSIFICATION	1.4572769835989105E-5	DESIGN
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9999854272301639	WITHOUT_CLASSIFICATION	1.4572769835989105E-5	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9989050858258061	WITHOUT_CLASSIFICATION	0.0010949141741939702	DESIGN
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9921537719826096	WITHOUT_CLASSIFICATION	0.00784622801739049	DESIGN
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9985715844236819	WITHOUT_CLASSIFICATION	0.0014284155763180798	DESIGN
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.99986631314488	WITHOUT_CLASSIFICATION	1.3368685511997732E-4	DESIGN
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9997160633627058	WITHOUT_CLASSIFICATION	2.8393663729420947E-4	DESIGN
Initialize some components.	WITHOUT_CLASSIFICATION	0.9999498494633641	WITHOUT_CLASSIFICATION	5.015053663592536E-5	DESIGN
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.994938973519047	WITHOUT_CLASSIFICATION	0.005061026480952925	DESIGN
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9893092324742843	WITHOUT_CLASSIFICATION	0.01069076752571582	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9994642995485515	WITHOUT_CLASSIFICATION	5.357004514484418E-4	DESIGN
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9994642995485515	WITHOUT_CLASSIFICATION	5.357004514484418E-4	DESIGN
no matching ctor found	WITHOUT_CLASSIFICATION	0.9999840610468873	WITHOUT_CLASSIFICATION	1.593895311260589E-5	DESIGN
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9987465716469557	WITHOUT_CLASSIFICATION	0.0012534283530442896	DESIGN
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9984106198339107	WITHOUT_CLASSIFICATION	0.0015893801660893663	DESIGN
must be a public method	WITHOUT_CLASSIFICATION	0.9992326013041845	WITHOUT_CLASSIFICATION	7.67398695815625E-4	DESIGN
must be a public class	WITHOUT_CLASSIFICATION	0.9998700978892143	WITHOUT_CLASSIFICATION	1.2990211078571444E-4	DESIGN
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9994221185873255	WITHOUT_CLASSIFICATION	5.778814126745032E-4	DESIGN
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.9201062652650088	WITHOUT_CLASSIFICATION	0.07989373473499124	DESIGN
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9963568967037714	WITHOUT_CLASSIFICATION	0.003643103296228741	DESIGN
no matching method found	WITHOUT_CLASSIFICATION	0.9999412262874653	WITHOUT_CLASSIFICATION	5.877371253459172E-5	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9985627665750452	WITHOUT_CLASSIFICATION	0.00143723342495493	DESIGN
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9975267860137419	WITHOUT_CLASSIFICATION	0.0024732139862581127	DESIGN
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9985498027085242	WITHOUT_CLASSIFICATION	0.0014501972914756952	DESIGN
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9998381159467407	WITHOUT_CLASSIFICATION	1.6188405325930202E-4	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999906707723815	WITHOUT_CLASSIFICATION	9.329227618448092E-6	DESIGN
end class	WITHOUT_CLASSIFICATION	0.999960244096647	WITHOUT_CLASSIFICATION	3.9755903353090846E-5	DESIGN
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9985627665750452	WITHOUT_CLASSIFICATION	0.00143723342495493	DESIGN
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9916964108270638	WITHOUT_CLASSIFICATION	0.008303589172936105	DESIGN
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9989666153001379	WITHOUT_CLASSIFICATION	0.0010333846998621832	DESIGN
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9994056276567029	WITHOUT_CLASSIFICATION	5.943723432971234E-4	DESIGN
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9999547976523798	WITHOUT_CLASSIFICATION	4.520234762026917E-5	DESIGN
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9996621424818083	WITHOUT_CLASSIFICATION	3.3785751819167056E-4	DESIGN
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.99919748012045	WITHOUT_CLASSIFICATION	8.025198795501354E-4	DESIGN
package scope	WITHOUT_CLASSIFICATION	0.9997898372020523	WITHOUT_CLASSIFICATION	2.1016279794774207E-4	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9995757861663656	WITHOUT_CLASSIFICATION	4.24213833634414E-4	DESIGN
Ruby-level methods	WITHOUT_CLASSIFICATION	0.999883192605035	WITHOUT_CLASSIFICATION	1.1680739496493056E-4	DESIGN
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9926914444063638	WITHOUT_CLASSIFICATION	0.007308555593636156	DESIGN
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9982636046567444	WITHOUT_CLASSIFICATION	0.0017363953432555487	DESIGN
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9994382093257197	WITHOUT_CLASSIFICATION	5.617906742802516E-4	DESIGN
get any included interfaces	WITHOUT_CLASSIFICATION	0.9999851243669444	WITHOUT_CLASSIFICATION	1.4875633055616999E-5	DESIGN
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9971588485663375	WITHOUT_CLASSIFICATION	0.0028411514336625122	DESIGN
statically initialized below	WITHOUT_CLASSIFICATION	0.9999591685484457	WITHOUT_CLASSIFICATION	4.08314515543814E-5	DESIGN
finish class initializer	WITHOUT_CLASSIFICATION	0.9999804908231288	WITHOUT_CLASSIFICATION	1.9509176871194905E-5	DESIGN
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999233027464651	WITHOUT_CLASSIFICATION	7.66972535348915E-5	DESIGN
should not happen!	WITHOUT_CLASSIFICATION	0.9998342366200762	WITHOUT_CLASSIFICATION	1.6576337992381973E-4	DESIGN
start class	WITHOUT_CLASSIFICATION	0.9999633751658517	WITHOUT_CLASSIFICATION	3.6624834148307136E-5	DESIGN
make getter for handler	WITHOUT_CLASSIFICATION	0.9995015495739257	WITHOUT_CLASSIFICATION	4.984504260742715E-4	DESIGN
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9998458799333239	WITHOUT_CLASSIFICATION	1.5412006667601673E-4	DESIGN
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.5247735942296923	WITHOUT_CLASSIFICATION	0.47522640577030767	DESIGN
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9989390633585882	WITHOUT_CLASSIFICATION	0.0010609366414118667	DESIGN
create static private method field	WITHOUT_CLASSIFICATION	0.9969799296015649	WITHOUT_CLASSIFICATION	0.003020070398435098	DESIGN
load static empty array	WITHOUT_CLASSIFICATION	0.9998999149584155	WITHOUT_CLASSIFICATION	1.0008504158459726E-4	DESIGN
box arguments	WITHOUT_CLASSIFICATION	0.9999873895077037	WITHOUT_CLASSIFICATION	1.261049229638998E-5	DESIGN
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9929826747721118	WITHOUT_CLASSIFICATION	0.007017325227888289	DESIGN
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.99908223981575	WITHOUT_CLASSIFICATION	9.177601842500859E-4	DESIGN
do a void return	WITHOUT_CLASSIFICATION	0.9998648007714499	WITHOUT_CLASSIFICATION	1.35199228550119E-4	DESIGN
utility methods	WITHOUT_CLASSIFICATION	0.9999228991037373	WITHOUT_CLASSIFICATION	7.710089626263727E-5	DESIGN
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9989050858258061	WITHOUT_CLASSIFICATION	0.0010949141741939702	DESIGN
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9990072366658214	WITHOUT_CLASSIFICATION	9.927633341785395E-4	DESIGN
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9990506127494116	WITHOUT_CLASSIFICATION	9.493872505883809E-4	DESIGN
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999805208313222	WITHOUT_CLASSIFICATION	1.947916867776282E-5	DESIGN
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9994963333978142	WITHOUT_CLASSIFICATION	5.036666021858005E-4	DESIGN
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9991309329108906	WITHOUT_CLASSIFICATION	8.690670891093791E-4	DESIGN
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9991011141664204	WITHOUT_CLASSIFICATION	8.988858335795112E-4	DESIGN
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999817912207474	WITHOUT_CLASSIFICATION	1.8208779252682783E-5	DESIGN
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9908679244640048	WITHOUT_CLASSIFICATION	0.009132075535995174	DESIGN
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.9992439210750075	WITHOUT_CLASSIFICATION	7.560789249925445E-4	DESIGN
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9996289323877884	WITHOUT_CLASSIFICATION	3.710676122115127E-4	DESIGN
NUL	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9984327430119408	WITHOUT_CLASSIFICATION	0.0015672569880591295	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999804619575999	WITHOUT_CLASSIFICATION	1.9538042400009622E-5	DESIGN
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.996883917845465	WITHOUT_CLASSIFICATION	0.0031160821545349396	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9638161369790006	WITHOUT_CLASSIFICATION	0.03618386302099941	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
read-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.998200097817827	WITHOUT_CLASSIFICATION	0.0017999021821730407	DESIGN
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9988291421550862	WITHOUT_CLASSIFICATION	0.001170857844913735	DESIGN
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9992905009467219	WITHOUT_CLASSIFICATION	7.094990532780407E-4	DESIGN
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9992696893283911	WITHOUT_CLASSIFICATION	7.303106716088567E-4	DESIGN
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9997384386321636	WITHOUT_CLASSIFICATION	2.615613678363581E-4	DESIGN
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.999491396355986	WITHOUT_CLASSIFICATION	5.086036440138762E-4	DESIGN
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.995932878606071	WITHOUT_CLASSIFICATION	0.004067121393928949	DESIGN
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9987203689360035	WITHOUT_CLASSIFICATION	0.001279631063996529	DESIGN
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.9987644911575569	WITHOUT_CLASSIFICATION	0.0012355088424430768	DESIGN
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.999855295367823	WITHOUT_CLASSIFICATION	1.447046321770954E-4	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9999192915949172	WITHOUT_CLASSIFICATION	8.07084050827816E-5	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9999192915949172	WITHOUT_CLASSIFICATION	8.07084050827816E-5	DESIGN
must be called under lock	WITHOUT_CLASSIFICATION	0.9999192915949172	WITHOUT_CLASSIFICATION	8.07084050827816E-5	DESIGN
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9968413743246269	WITHOUT_CLASSIFICATION	0.0031586256753730266	DESIGN
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9948813787406748	WITHOUT_CLASSIFICATION	0.0051186212593251	DESIGN
Single node in list	WITHOUT_CLASSIFICATION	0.9999584835650803	WITHOUT_CLASSIFICATION	4.1516434919769165E-5	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999318098840171	WITHOUT_CLASSIFICATION	6.819011598288219E-5	DESIGN
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999318098840171	WITHOUT_CLASSIFICATION	6.819011598288219E-5	DESIGN
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9994999994317375	WITHOUT_CLASSIFICATION	5.000005682624075E-4	DESIGN
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9983797204347639	WITHOUT_CLASSIFICATION	0.0016202795652361657	DESIGN
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9996721253981719	WITHOUT_CLASSIFICATION	3.278746018281677E-4	DESIGN
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9997671858925965	WITHOUT_CLASSIFICATION	2.3281410740362698E-4	DESIGN
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9974331489713404	WITHOUT_CLASSIFICATION	0.002566851028659623	DESIGN
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9997796311408129	WITHOUT_CLASSIFICATION	2.2036885918702855E-4	DESIGN
Last full line read.	WITHOUT_CLASSIFICATION	0.9999738730175259	WITHOUT_CLASSIFICATION	2.6126982474079733E-5	DESIGN
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9964576492793865	WITHOUT_CLASSIFICATION	0.00354235072061345	DESIGN
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.999884864939183	WITHOUT_CLASSIFICATION	1.1513506081692832E-4	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9994172291483078	WITHOUT_CLASSIFICATION	5.827708516923174E-4	DESIGN
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9994172291483078	WITHOUT_CLASSIFICATION	5.827708516923174E-4	DESIGN
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9994411885675086	WITHOUT_CLASSIFICATION	5.588114324913151E-4	DESIGN
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9973570729158784	WITHOUT_CLASSIFICATION	0.0026429270841216343	DESIGN
Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999806928779067	WITHOUT_CLASSIFICATION	1.9307122093380728E-5	DESIGN
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9981883268474947	WITHOUT_CLASSIFICATION	0.0018116731525052551	DESIGN
just ignore	WITHOUT_CLASSIFICATION	0.9999461392310623	WITHOUT_CLASSIFICATION	5.386076893776679E-5	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9999458522075374	WITHOUT_CLASSIFICATION	5.414779246269987E-5	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9999458522075374	WITHOUT_CLASSIFICATION	5.414779246269987E-5	DESIGN
PUSH(1)	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
POP	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998718650396179	WITHOUT_CLASSIFICATION	1.2813496038205593E-4	DESIGN
LEXPOP	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
SET_P	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9994754983905991	WITHOUT_CLASSIFICATION	5.245016094008328E-4	DESIGN
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9980059920615832	WITHOUT_CLASSIFICATION	0.0019940079384167275	DESIGN
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.999730429649968	WITHOUT_CLASSIFICATION	2.695703500319458E-4	DESIGN
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999666332558609	WITHOUT_CLASSIFICATION	3.336674413909932E-5	DESIGN
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.998441682717338	WITHOUT_CLASSIFICATION	0.0015583172826619369	DESIGN
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9989933880446812	WITHOUT_CLASSIFICATION	0.0010066119553188756	DESIGN
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9984552494026138	WITHOUT_CLASSIFICATION	0.0015447505973862612	DESIGN
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.6979637013956079	WITHOUT_CLASSIFICATION	0.30203629860439213	DESIGN
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9993130172187976	WITHOUT_CLASSIFICATION	6.869827812023154E-4	DESIGN
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9953193151242729	WITHOUT_CLASSIFICATION	0.00468068487572716	DESIGN
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9987229774090606	WITHOUT_CLASSIFICATION	0.0012770225909394617	DESIGN
1.9 only	WITHOUT_CLASSIFICATION	0.9999415007392913	WITHOUT_CLASSIFICATION	5.849926070871122E-5	DESIGN
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9994761391335814	WITHOUT_CLASSIFICATION	5.238608664186765E-4	DESIGN
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999645180948441	WITHOUT_CLASSIFICATION	3.548190515588296E-5	DESIGN
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.9999801074604934	WITHOUT_CLASSIFICATION	1.9892539506677982E-5	DESIGN
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.9984714120151381	WITHOUT_CLASSIFICATION	0.0015285879848619054	DESIGN
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
end of script.	WITHOUT_CLASSIFICATION	0.9999721254993454	WITHOUT_CLASSIFICATION	2.7874500654562785E-5	DESIGN
white spaces	WITHOUT_CLASSIFICATION	0.9999610668220186	WITHOUT_CLASSIFICATION	3.893317798132933E-5	DESIGN
'\v'	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
it's a comment	WITHOUT_CLASSIFICATION	0.9999747392272299	WITHOUT_CLASSIFICATION	2.526077277014343E-5	DESIGN
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9978826722121011	WITHOUT_CLASSIFICATION	0.0021173277878987922	DESIGN
$\: output record separator	WITHOUT_CLASSIFICATION	0.9999841450575183	WITHOUT_CLASSIFICATION	1.5854942481739416E-5	DESIGN
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999699668982789	WITHOUT_CLASSIFICATION	3.003310172111013E-5	DESIGN
documentation nodes	WITHOUT_CLASSIFICATION	0.9999754440641173	WITHOUT_CLASSIFICATION	2.4555935882634568E-5	DESIGN
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9998564145012111	WITHOUT_CLASSIFICATION	1.4358549878886498E-4	DESIGN
Just a plain bang	WITHOUT_CLASSIFICATION	0.9999249181536972	WITHOUT_CLASSIFICATION	7.508184630276842E-5	DESIGN
$_: last read line string	WITHOUT_CLASSIFICATION	0.9999802840257261	WITHOUT_CLASSIFICATION	1.9715974273885848E-5	DESIGN
$~: match-data	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
$: argv	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
$$: pid	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
$?: last status	WITHOUT_CLASSIFICATION	0.9999498158185104	WITHOUT_CLASSIFICATION	5.018418148952725E-5	DESIGN
$!: error string	WITHOUT_CLASSIFICATION	0.9999447720091678	WITHOUT_CLASSIFICATION	5.522799083222211E-5	DESIGN
$@: error position	WITHOUT_CLASSIFICATION	0.9999486393865769	WITHOUT_CLASSIFICATION	5.136061342306024E-5	DESIGN
$/: input record separator	WITHOUT_CLASSIFICATION	0.9999592073783597	WITHOUT_CLASSIFICATION	4.079262164028821E-5	DESIGN
$;: field separator	WITHOUT_CLASSIFICATION	0.9999765175977211	WITHOUT_CLASSIFICATION	2.3482402278891554E-5	DESIGN
$,: output field separator	WITHOUT_CLASSIFICATION	0.9999877204085351	WITHOUT_CLASSIFICATION	1.2279591464881967E-5	DESIGN
$.: last read line number	WITHOUT_CLASSIFICATION	0.9999806316734403	WITHOUT_CLASSIFICATION	1.9368326559717173E-5	DESIGN
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
$:: load path	WITHOUT_CLASSIFICATION	0.9999695692276671	WITHOUT_CLASSIFICATION	3.043077233282092E-5	DESIGN
$<: reading filename	WITHOUT_CLASSIFICATION	0.9999852423653817	WITHOUT_CLASSIFICATION	1.4757634618288883E-5	DESIGN
$": already loaded files	WITHOUT_CLASSIFICATION	0.9999801948476991	WITHOUT_CLASSIFICATION	1.980515230096644E-5	DESIGN
$&: last match	WITHOUT_CLASSIFICATION	0.9999584382329056	WITHOUT_CLASSIFICATION	4.156176709431539E-5	DESIGN
$`: string before last match	WITHOUT_CLASSIFICATION	0.9999818379118018	WITHOUT_CLASSIFICATION	1.8162088198165466E-5	DESIGN
$': string after last match	WITHOUT_CLASSIFICATION	0.9999680839153645	WITHOUT_CLASSIFICATION	3.1916084635583885E-5	DESIGN
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9987910516731964	WITHOUT_CLASSIFICATION	0.001208948326803688	DESIGN
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.9998525252270141	WITHOUT_CLASSIFICATION	1.4747477298596027E-4	DESIGN
enum lex_state	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
block (primary)	WITHOUT_CLASSIFICATION	0.9999860404214416	WITHOUT_CLASSIFICATION	1.395957855850177E-5	DESIGN
block (expr)	WITHOUT_CLASSIFICATION	0.9999860404214416	WITHOUT_CLASSIFICATION	1.395957855850177E-5	DESIGN
hash	WITHOUT_CLASSIFICATION	0.9999113235364941	WITHOUT_CLASSIFICATION	8.867646350591624E-5	DESIGN
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9902895981523241	WITHOUT_CLASSIFICATION	0.00971040184767595	DESIGN
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9941234426324842	WITHOUT_CLASSIFICATION	0.00587655736751581	DESIGN
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.999945529729782	WITHOUT_CLASSIFICATION	5.4470270217970875E-5	DESIGN
hexadecimal	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
binary	WITHOUT_CLASSIFICATION	0.9999194864055462	WITHOUT_CLASSIFICATION	8.051359445371323E-5	DESIGN
decimal	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Octal	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999781504168684	WITHOUT_CLASSIFICATION	2.1849583131523117E-5	DESIGN
backslash	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
newline	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
horizontal tab	WITHOUT_CLASSIFICATION	0.9999582246875031	WITHOUT_CLASSIFICATION	4.177531249696605E-5	DESIGN
form feed	WITHOUT_CLASSIFICATION	0.9998138446052209	WITHOUT_CLASSIFICATION	1.8615539477905322E-4	DESIGN
vertical tab	WITHOUT_CLASSIFICATION	0.9999588649204055	WITHOUT_CLASSIFICATION	4.113507959439434E-5	DESIGN
alarm(bell)	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
escape	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
hex constant	WITHOUT_CLASSIFICATION	0.9999458522075374	WITHOUT_CLASSIFICATION	5.414779246269987E-5	DESIGN
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999947717137164	WITHOUT_CLASSIFICATION	5.228286283592942E-6	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999315181792438	WITHOUT_CLASSIFICATION	6.848182075620196E-5	DESIGN
space	WITHOUT_CLASSIFICATION	0.9999586438459699	WITHOUT_CLASSIFICATION	4.1356154030046945E-5	DESIGN
Where we started this marker match	WITHOUT_CLASSIFICATION	0.9981701203738721	WITHOUT_CLASSIFICATION	0.0018298796261278828	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9993466210137805	WITHOUT_CLASSIFICATION	6.533789862195167E-4	DESIGN
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9978644918326015	WITHOUT_CLASSIFICATION	0.0021355081673984037	DESIGN
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999315181792438	WITHOUT_CLASSIFICATION	6.848182075620196E-5	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9997241927248509	WITHOUT_CLASSIFICATION	2.758072751490555E-4	DESIGN
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9997241927248509	WITHOUT_CLASSIFICATION	2.758072751490555E-4	DESIGN
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999492174235166	WITHOUT_CLASSIFICATION	5.0782576483369467E-5	DESIGN
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999014470160269	WITHOUT_CLASSIFICATION	9.855298397309621E-5	DESIGN
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9997261083680015	WITHOUT_CLASSIFICATION	2.7389163199856444E-4	DESIGN
Character read before previous read	WITHOUT_CLASSIFICATION	0.9996429718997711	WITHOUT_CLASSIFICATION	3.570281002289037E-4	DESIGN
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9993596342603306	WITHOUT_CLASSIFICATION	6.403657396692978E-4	DESIGN
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.9555220006097951	DESIGN	0.04447799939020485	WITHOUT_CLASSIFICATION
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9946877624691728	WITHOUT_CLASSIFICATION	0.005312237530827187	DESIGN
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.997647744473987	WITHOUT_CLASSIFICATION	0.0023522555260130367	DESIGN
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9991878296920461	WITHOUT_CLASSIFICATION	8.121703079538872E-4	DESIGN
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9976531890104353	WITHOUT_CLASSIFICATION	0.002346810989564693	DESIGN
this set is only for darwin	WITHOUT_CLASSIFICATION	0.9996625545322889	WITHOUT_CLASSIFICATION	3.374454677111495E-4	DESIGN
DigestLibrary	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9937526634168113	WITHOUT_CLASSIFICATION	0.006247336583188654	DESIGN
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.995519936386863	WITHOUT_CLASSIFICATION	0.004480063613137041	DESIGN
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9990765983289465	WITHOUT_CLASSIFICATION	9.234016710535489E-4	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
line 329	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994743553571688	WITHOUT_CLASSIFICATION	5.256446428311215E-4	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9999582993621082	WITHOUT_CLASSIFICATION	4.1700637891726715E-5	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9993379280071889	WITHOUT_CLASSIFICATION	6.620719928111923E-4	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999632090286338	WITHOUT_CLASSIFICATION	3.6790971366338214E-5	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.999915960415319	WITHOUT_CLASSIFICATION	8.403958468092797E-5	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999398576077735	WITHOUT_CLASSIFICATION	6.0142392226635564E-5	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.999953057717119	WITHOUT_CLASSIFICATION	4.6942282881039325E-5	DESIGN
line 271	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 274	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 303	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 311	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 314	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 317	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 332	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 338	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 341	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 344	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 358	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 367	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 372	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 378	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 407	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 411	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 414	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 434	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 443	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 446	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 452	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 457	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 464	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 467	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 470	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 479	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 484	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 492	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 498	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 501	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 504	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 507	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 510	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 519	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 525	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 556	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 559	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 563	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 569	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 575	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 578	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 587	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 596	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 604	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 607	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 613	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 616	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 634	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 638	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 643	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 646	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 655	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 660	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 667	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 670	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 701	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 717	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 720	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 726	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 729	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 735	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 738	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 751	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 754	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 757	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 760	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 763	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 769	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 775	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 797	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 803	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 806	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 809	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 815	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 818	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 821	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 824	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 830	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 833	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 836	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 852	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 858	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 861	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 868	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 871	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 876	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 879	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 883	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 903	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 907	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 915	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 920	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 923	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 926	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 936	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 940	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 948	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 956	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 964	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 967	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 978	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 984	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 986	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 996	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1001	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1008	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1014	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1029	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1032	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1034	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1045	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1048	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1051	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1058	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1070	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1073	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1076	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1079	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1082	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1089	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1100	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1103	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1107	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1113	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1115	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1119	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1135	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1137	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1151	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1154	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1164	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1175	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1178	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1187	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1189	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1193	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1214	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1234	WITHOUT_CLASSIFICATION	0.9999453424508198	WITHOUT_CLASSIFICATION	5.465754918017397E-5	DESIGN
line 1239	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1243	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1263	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1269	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1280	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1283	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1290	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1296	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1299	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1302	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1309	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1313	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1315	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1328	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1335	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1352	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1358	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1374	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1381	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1415	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1431	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1434	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1440	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1443	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1453	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1465	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1477	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1480	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1485	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1488	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1510	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1516	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1533	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1550	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1553	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1556	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1565	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1568	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1571	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1574	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1577	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1587	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1600	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1609	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1623	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1626	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1638	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1641	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1644	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1649	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1655	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1658	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1661	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1672	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1677	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1687	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1694	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1733	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1745	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1757	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1769	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1775	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1784	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1808	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1814	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9999350317156344	WITHOUT_CLASSIFICATION	6.496828436557755E-5	DESIGN
XXX 0;	WITHOUT_CLASSIFICATION	0.9999278617240646	WITHOUT_CLASSIFICATION	7.213827593543796E-5	DESIGN
$$ = $3;	WITHOUT_CLASSIFICATION	0.9999879171823012	WITHOUT_CLASSIFICATION	1.2082817698771033E-5	DESIGN
}	WITHOUT_CLASSIFICATION	0.999920350576358	WITHOUT_CLASSIFICATION	7.964942364203387E-5	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9973186289417665	WITHOUT_CLASSIFICATION	0.0026813710582336485	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9989753155613982	WITHOUT_CLASSIFICATION	0.0010246844386017926	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9966448277875465	WITHOUT_CLASSIFICATION	0.0033551722124535964	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9966448277875465	WITHOUT_CLASSIFICATION	0.0033551722124535964	DESIGN
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9999235643619435	WITHOUT_CLASSIFICATION	7.643563805647188E-5	DESIGN
mirko: check	WITHOUT_CLASSIFICATION	0.9999830297167707	WITHOUT_CLASSIFICATION	1.6970283229327953E-5	DESIGN
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9902082989083265	WITHOUT_CLASSIFICATION	0.009791701091673446	DESIGN
line 529	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
XXX	WITHOUT_CLASSIFICATION	0.9999267593060664	WITHOUT_CLASSIFICATION	7.32406939336306E-5	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.999971325648327	WITHOUT_CLASSIFICATION	2.867435167288101E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9997425259872221	WITHOUT_CLASSIFICATION	2.5747401277793317E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9996434359636329	WITHOUT_CLASSIFICATION	3.5656403636703007E-4	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999574858940009	WITHOUT_CLASSIFICATION	4.251410599905474E-5	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9994743553571688	WITHOUT_CLASSIFICATION	5.256446428311215E-4	DESIGN
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999710154510301	WITHOUT_CLASSIFICATION	2.898454896986866E-5	DESIGN
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9987425241680404	WITHOUT_CLASSIFICATION	0.0012574758319595385	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9981223482966958	WITHOUT_CLASSIFICATION	0.0018776517033042145	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9981223482966958	WITHOUT_CLASSIFICATION	0.0018776517033042145	DESIGN
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999592655894449	WITHOUT_CLASSIFICATION	4.0734410555083284E-5	DESIGN
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9962795971397447	WITHOUT_CLASSIFICATION	0.0037204028602553438	DESIGN
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999171347842999	WITHOUT_CLASSIFICATION	8.286521570009292E-4	DESIGN
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9966285713461924	WITHOUT_CLASSIFICATION	0.0033714286538076396	DESIGN
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9707875567786695	WITHOUT_CLASSIFICATION	0.02921244322133061	DESIGN
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9893350473989877	WITHOUT_CLASSIFICATION	0.01066495260101227	DESIGN
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9996710069108694	WITHOUT_CLASSIFICATION	3.28993089130482E-4	DESIGN
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9969617563317327	WITHOUT_CLASSIFICATION	0.003038243668267202	DESIGN
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9993191011249593	WITHOUT_CLASSIFICATION	6.808988750407293E-4	DESIGN
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9994981395567755	WITHOUT_CLASSIFICATION	5.018604432245664E-4	DESIGN
Parser states:	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9564819005508022	WITHOUT_CLASSIFICATION	0.04351809944919776	DESIGN
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.8915714987854155	WITHOUT_CLASSIFICATION	0.10842850121458436	DESIGN
LOCALVAR	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
CONSTANT	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9991039360248458	WITHOUT_CLASSIFICATION	8.960639751541427E-4	DESIGN
MRI: block_append	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.9959694999204539	WITHOUT_CLASSIFICATION	0.004030500079546053	DESIGN
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9994920748089882	WITHOUT_CLASSIFICATION	5.079251910118256E-4	DESIGN
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9996005326188326	WITHOUT_CLASSIFICATION	3.9946738116743955E-4	DESIGN
Node	WITHOUT_CLASSIFICATION	0.9999123870862496	WITHOUT_CLASSIFICATION	8.761291375036147E-5	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9852218164128201	WITHOUT_CLASSIFICATION	0.014778183587179998	DESIGN
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9998229499198017	WITHOUT_CLASSIFICATION	1.7705008019832158E-4	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9852218164128201	WITHOUT_CLASSIFICATION	0.014778183587179998	DESIGN
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9998229499198017	WITHOUT_CLASSIFICATION	1.7705008019832158E-4	DESIGN
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9998229499198017	WITHOUT_CLASSIFICATION	1.7705008019832158E-4	DESIGN
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9949683618298958	WITHOUT_CLASSIFICATION	0.005031638170104204	DESIGN
MRI: range_op	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999420217696657	WITHOUT_CLASSIFICATION	5.797823033430197E-4	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
foo()	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9969941824563315	WITHOUT_CLASSIFICATION	0.0030058175436684822	DESIGN
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9998454907535509	WITHOUT_CLASSIFICATION	1.545092464491758E-4	DESIGN
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999846558835237	WITHOUT_CLASSIFICATION	1.534411647626095E-5	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLen 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yySindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
dynamically increase	WITHOUT_CLASSIFICATION	0.9999582993621082	WITHOUT_CLASSIFICATION	4.1700637891726715E-5	DESIGN
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999632090286338	WITHOUT_CLASSIFICATION	3.6790971366338214E-5	DESIGN
shift to yyN	WITHOUT_CLASSIFICATION	0.999915960415319	WITHOUT_CLASSIFICATION	8.403958468092797E-5	DESIGN
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999398576077735	WITHOUT_CLASSIFICATION	6.0142392226635564E-5	DESIGN
leave stack alone	WITHOUT_CLASSIFICATION	0.999953057717119	WITHOUT_CLASSIFICATION	4.6942282881039325E-5	DESIGN
line 321	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 351	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 382	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 417	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 420	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 426	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 280	WITHOUT_CLASSIFICATION	0.9999504554054758	WITHOUT_CLASSIFICATION	4.954459452418772E-5	DESIGN
line 283	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 296	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 324	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 327	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 331	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 333	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 336	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 342	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 345	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 348	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 354	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 368	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 377	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 388	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 392	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 397	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 429	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 432	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 436	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 445	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 448	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 454	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 459	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 466	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 469	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 478	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 481	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 488	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 494	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 497	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 503	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 506	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 509	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 512	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 521	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 526	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 540	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 543	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 546	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 566	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 610	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 672	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 696	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 772	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 782	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 788	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 791	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 534	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 549	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 552	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 558	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 561	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 571	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 574	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 579	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 586	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 589	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 592	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 595	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 598	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 623	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 627	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 630	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 633	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 639	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 648	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 657	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 661	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 666	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 678	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 682	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 688	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 699	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 706	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 708	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 727	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 737	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 753	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 779	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 801	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 808	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 811	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 817	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 842	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 848	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 893	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 899	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 932	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 944	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 960	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 980	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1004	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 820	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 826	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 829	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 832	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 851	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 857	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 860	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 863	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 866	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 869	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 875	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 884	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 887	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 890	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 902	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 909	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 912	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 916	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 922	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 928	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 941	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 947	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 951	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 955	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 965	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 969	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 977	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 983	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1013	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1023	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1035	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1041	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1043	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1054	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1057	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1060	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1069	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1075	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1111	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1130	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1140	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1158	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1204	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1207	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1247	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1251	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1078	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1084	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1087	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1090	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1093	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1114	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1116	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1118	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1124	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1126	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1138	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1144	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1149	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1155	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1162	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1173	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1179	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1182	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1190	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1196	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1213	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1217	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1231	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1236	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1244	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1254	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1258	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1264	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1270	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1273	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1276	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1279	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1282	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1289	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1292	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1295	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1298	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1305	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1348	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1387	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1392	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1462	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1470	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1496	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1502	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1595	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1598	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1308	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1311	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1317	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1323	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1326	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1329	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1337	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1342	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1345	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1354	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1359	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1366	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1369	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1373	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1377	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1383	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1399	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1401	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1406	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1417	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1424	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1427	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1430	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1433	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1436	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1442	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1445	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1458	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1464	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1489	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1493	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1507	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1519	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1532	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1538	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1542	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1557	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1573	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1591	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1629	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1632	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1705	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1725	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1742	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1749	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1818	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1822	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1607	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1610	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1622	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1625	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1636	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1639	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1647	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1651	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1657	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1660	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1663	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1678	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1702	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1711	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1719	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1722	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1731	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1734	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1738	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1746	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1756	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1758	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1761	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1767	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1776	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1782	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1785	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1788	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1791	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1797	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1800	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1803	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1806	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1809	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1815	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1825	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1828	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1831	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1847	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9966448277875465	WITHOUT_CLASSIFICATION	0.0033551722124535964	DESIGN
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9966448277875465	WITHOUT_CLASSIFICATION	0.0033551722124535964	DESIGN
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
zero length array	WITHOUT_CLASSIFICATION	0.999971325648327	WITHOUT_CLASSIFICATION	2.867435167288101E-5	DESIGN
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9997425259872221	WITHOUT_CLASSIFICATION	2.5747401277793317E-4	DESIGN
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
line 1854	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1869	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1872	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1877	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1886	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1898	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1902	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1905	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1911	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1918	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1935	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1938	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1942	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1948	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1960	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1963	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1968	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1972	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1982	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1995	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 2000	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 2006	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 2010	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9996438252175652	WITHOUT_CLASSIFICATION	3.561747824347543E-4	DESIGN
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9992976996192304	WITHOUT_CLASSIFICATION	7.023003807695985E-4	DESIGN
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9992627407722281	WITHOUT_CLASSIFICATION	7.372592277718398E-4	DESIGN
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9999694720157816	WITHOUT_CLASSIFICATION	3.0527984218421173E-5	DESIGN
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9999286752356593	WITHOUT_CLASSIFICATION	7.132476434078413E-5	DESIGN
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9989878677976448	WITHOUT_CLASSIFICATION	0.0010121322023552112	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999574858940009	WITHOUT_CLASSIFICATION	4.251410599905474E-5	DESIGN
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9994743553571688	WITHOUT_CLASSIFICATION	5.256446428311215E-4	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9981223482966958	WITHOUT_CLASSIFICATION	0.0018776517033042145	DESIGN
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9981223482966958	WITHOUT_CLASSIFICATION	0.0018776517033042145	DESIGN
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9991177027793993	WITHOUT_CLASSIFICATION	8.822972206008186E-4	DESIGN
was $$ = null;	WITHOUT_CLASSIFICATION	0.9999942011098952	WITHOUT_CLASSIFICATION	5.798890104678495E-6	DESIGN
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999758531354493	WITHOUT_CLASSIFICATION	2.4146864550649945E-5	DESIGN
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999710154510301	WITHOUT_CLASSIFICATION	2.898454896986866E-5	DESIGN
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9991971462439821	WITHOUT_CLASSIFICATION	8.02853756017891E-4	DESIGN
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9998485480273794	WITHOUT_CLASSIFICATION	1.514519726206025E-4	DESIGN
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9734442029123308	WITHOUT_CLASSIFICATION	0.026555797087669242	DESIGN
Live reference to module	WITHOUT_CLASSIFICATION	0.9999612508871634	WITHOUT_CLASSIFICATION	3.874911283661655E-5	DESIGN
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9996786110156235	WITHOUT_CLASSIFICATION	3.213889843765294E-4	DESIGN
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9991432979716217	WITHOUT_CLASSIFICATION	8.567020283782491E-4	DESIGN
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9964582430030596	WITHOUT_CLASSIFICATION	0.0035417569969403034	DESIGN
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9934150868204736	WITHOUT_CLASSIFICATION	0.006584913179526418	DESIGN
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9991981433879387	WITHOUT_CLASSIFICATION	8.018566120613414E-4	DESIGN
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9974942083680126	WITHOUT_CLASSIFICATION	0.0025057916319873638	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999668266439432	WITHOUT_CLASSIFICATION	3.317335605673737E-5	DESIGN
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999668266439432	WITHOUT_CLASSIFICATION	3.317335605673737E-5	DESIGN
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.9995967429501739	WITHOUT_CLASSIFICATION	4.032570498262086E-4	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999958276497021	WITHOUT_CLASSIFICATION	4.172350297909745E-5	DESIGN
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.998906566780037	WITHOUT_CLASSIFICATION	0.0010934332199630024	DESIGN
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9961307486920395	WITHOUT_CLASSIFICATION	0.0038692513079605115	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984489515878904	WITHOUT_CLASSIFICATION	0.0015510484121096183	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999552334185145	WITHOUT_CLASSIFICATION	4.4766581485500333E-4	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9999765029644565	WITHOUT_CLASSIFICATION	2.349703554358064E-5	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999552334185145	WITHOUT_CLASSIFICATION	4.4766581485500333E-4	DESIGN
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9996129030623443	WITHOUT_CLASSIFICATION	3.870969376557071E-4	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9640541121738723	WITHOUT_CLASSIFICATION	0.035945887826127745	DESIGN
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.8944290645742368	WITHOUT_CLASSIFICATION	0.10557093542576322	DESIGN
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9134849151450619	WITHOUT_CLASSIFICATION	0.08651508485493802	DESIGN
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9993019981460931	WITHOUT_CLASSIFICATION	6.980018539068232E-4	DESIGN
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9993019981460931	WITHOUT_CLASSIFICATION	6.980018539068232E-4	DESIGN
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.9988922020440032	WITHOUT_CLASSIFICATION	0.001107797955996878	DESIGN
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9979877051510238	WITHOUT_CLASSIFICATION	0.0020122948489762578	DESIGN
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9979977035702916	WITHOUT_CLASSIFICATION	0.0020022964297084244	DESIGN
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.9546876316398877	DESIGN	0.0453123683601123	WITHOUT_CLASSIFICATION
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.7855253789754604	DESIGN	0.21447462102453962	WITHOUT_CLASSIFICATION
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9993270839479915	WITHOUT_CLASSIFICATION	6.729160520085342E-4	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999938239764709	WITHOUT_CLASSIFICATION	6.176023529142581E-6	DESIGN
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999938239764709	WITHOUT_CLASSIFICATION	6.176023529142581E-6	DESIGN
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9892275984751524	WITHOUT_CLASSIFICATION	0.010772401524847555	DESIGN
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9990813319301907	WITHOUT_CLASSIFICATION	9.18668069809323E-4	DESIGN
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9954925430187566	WITHOUT_CLASSIFICATION	0.0045074569812433695	DESIGN
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9989472820306634	WITHOUT_CLASSIFICATION	0.0010527179693365814	DESIGN
required and optional only	WITHOUT_CLASSIFICATION	0.9999851758286701	WITHOUT_CLASSIFICATION	1.4824171330000774E-5	DESIGN
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999552334185145	WITHOUT_CLASSIFICATION	4.4766581485500333E-4	DESIGN
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9954361680086306	WITHOUT_CLASSIFICATION	0.004563831991369388	DESIGN
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999763387661658	WITHOUT_CLASSIFICATION	2.366123383416087E-5	DESIGN
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999119396620326	WITHOUT_CLASSIFICATION	8.806033796748277E-5	DESIGN
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9954361680086306	WITHOUT_CLASSIFICATION	0.004563831991369388	DESIGN
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999665362985961	WITHOUT_CLASSIFICATION	3.346370140384136E-5	DESIGN
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9998344238840331	WITHOUT_CLASSIFICATION	1.6557611596684088E-4	DESIGN
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9992217727012866	WITHOUT_CLASSIFICATION	7.782272987134592E-4	DESIGN
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9996392640861839	WITHOUT_CLASSIFICATION	3.607359138160782E-4	DESIGN
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.9913153771931192	DESIGN	0.008684622806880761	WITHOUT_CLASSIFICATION
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9932805429180036	WITHOUT_CLASSIFICATION	0.0067194570819964754	DESIGN
No argument blocks	WITHOUT_CLASSIFICATION	0.9999971382124648	WITHOUT_CLASSIFICATION	2.861787535106772E-6	DESIGN
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9998396337052317	WITHOUT_CLASSIFICATION	1.6036629476835776E-4	DESIGN
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9845080103806066	WITHOUT_CLASSIFICATION	0.015491989619393364	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999071749429884	WITHOUT_CLASSIFICATION	9.282505701160363E-5	DESIGN
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.8282938921160802	WITHOUT_CLASSIFICATION	0.17170610788391974	DESIGN
Highest reserved id	WITHOUT_CLASSIFICATION	0.9999524697432461	WITHOUT_CLASSIFICATION	4.7530256753797016E-5	DESIGN
binary typed calls	WITHOUT_CLASSIFICATION	0.9999713869998083	WITHOUT_CLASSIFICATION	2.8613000191649555E-5	DESIGN
id must always be even	WITHOUT_CLASSIFICATION	0.9999277617066192	WITHOUT_CLASSIFICATION	7.223829338073996E-5	DESIGN
with block pass	WITHOUT_CLASSIFICATION	0.9999928339574161	WITHOUT_CLASSIFICATION	7.166042583890569E-6	DESIGN
no block	WITHOUT_CLASSIFICATION	0.9999885875816685	WITHOUT_CLASSIFICATION	1.1412418331539609E-5	DESIGN
with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999907821060997	WITHOUT_CLASSIFICATION	9.217893900314782E-6	DESIGN
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9989093148253271	WITHOUT_CLASSIFICATION	0.0010906851746728577	DESIGN
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.9326665969680936	WITHOUT_CLASSIFICATION	0.06733340303190641	DESIGN
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9997037373290344	WITHOUT_CLASSIFICATION	2.9626267096555313E-4	DESIGN
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9995612710695313	WITHOUT_CLASSIFICATION	4.387289304686594E-4	DESIGN
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9980709134586339	WITHOUT_CLASSIFICATION	0.0019290865413660533	DESIGN
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.983544128478053	WITHOUT_CLASSIFICATION	0.016455871521946996	DESIGN
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9991800024372017	WITHOUT_CLASSIFICATION	8.199975627983415E-4	DESIGN
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9939800732002411	WITHOUT_CLASSIFICATION	0.006019926799758924	DESIGN
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.999807541397229	WITHOUT_CLASSIFICATION	1.9245860277084437E-4	DESIGN
Lastline	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9960540636144368	WITHOUT_CLASSIFICATION	0.003945936385563132	DESIGN
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9995931500295899	WITHOUT_CLASSIFICATION	4.0684997041006907E-4	DESIGN
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9969564924070239	WITHOUT_CLASSIFICATION	0.0030435075929761374	DESIGN
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9978816163074747	WITHOUT_CLASSIFICATION	0.002118383692525235	DESIGN
Some helper functions:	WITHOUT_CLASSIFICATION	0.9999313606475226	WITHOUT_CLASSIFICATION	6.863935247733782E-5	DESIGN
silently ignore	WITHOUT_CLASSIFICATION	0.9999258941297164	WITHOUT_CLASSIFICATION	7.410587028347393E-5	DESIGN
used by compiler	WITHOUT_CLASSIFICATION	0.999825792604727	WITHOUT_CLASSIFICATION	1.7420739527302688E-4	DESIGN
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9978771546122441	WITHOUT_CLASSIFICATION	0.0021228453877558924	DESIGN
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.998531686824081	WITHOUT_CLASSIFICATION	0.001468313175918971	DESIGN
Single node on list	WITHOUT_CLASSIFICATION	0.9999673941618618	WITHOUT_CLASSIFICATION	3.2605838138318775E-5	DESIGN
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9984327430119408	WITHOUT_CLASSIFICATION	0.0015672569880591295	DESIGN
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999804619575999	WITHOUT_CLASSIFICATION	1.9538042400009622E-5	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9640541121738723	WITHOUT_CLASSIFICATION	0.035945887826127745	DESIGN
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9830959391112027	WITHOUT_CLASSIFICATION	0.01690406088879722	DESIGN
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.5781064665902844	WITHOUT_CLASSIFICATION	0.4218935334097155	DESIGN
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9935289339808941	WITHOUT_CLASSIFICATION	0.00647106601910585	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9993040833502472	WITHOUT_CLASSIFICATION	6.959166497528256E-4	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9993040833502472	WITHOUT_CLASSIFICATION	6.959166497528256E-4	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998925163966724	WITHOUT_CLASSIFICATION	1.0748360332750163E-4	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998925163966724	WITHOUT_CLASSIFICATION	1.0748360332750163E-4	DESIGN
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998925163966724	WITHOUT_CLASSIFICATION	1.0748360332750163E-4	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999477162752494	WITHOUT_CLASSIFICATION	5.22837247506056E-5	DESIGN
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999477162752494	WITHOUT_CLASSIFICATION	5.22837247506056E-5	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9998550583763616	WITHOUT_CLASSIFICATION	1.4494162363841835E-4	DESIGN
extra args for rest	WITHOUT_CLASSIFICATION	0.9998550583763616	WITHOUT_CLASSIFICATION	1.4494162363841835E-4	DESIGN
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9894738562923794	WITHOUT_CLASSIFICATION	0.010526143707620565	DESIGN
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9913746211169304	WITHOUT_CLASSIFICATION	0.00862537888306954	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9996374709778005	WITHOUT_CLASSIFICATION	3.625290221993662E-4	DESIGN
prefill ?	WITHOUT_CLASSIFICATION	0.9996374709778005	WITHOUT_CLASSIFICATION	3.625290221993662E-4	DESIGN
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9958684485486685	WITHOUT_CLASSIFICATION	0.0041315514513314945	DESIGN
retrieve method module name	WITHOUT_CLASSIFICATION	0.9996812691527511	WITHOUT_CLASSIFICATION	3.187308472488477E-4	DESIGN
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999560454301143	WITHOUT_CLASSIFICATION	4.395456988567118E-5	DESIGN
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9987634007447009	WITHOUT_CLASSIFICATION	0.0012365992552990344	DESIGN
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9941387748114543	WITHOUT_CLASSIFICATION	0.005861225188545783	DESIGN
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9899433325784484	WITHOUT_CLASSIFICATION	0.010056667421551618	DESIGN
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9993018851373047	WITHOUT_CLASSIFICATION	6.981148626952591E-4	DESIGN
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999626260984703	WITHOUT_CLASSIFICATION	3.737390152981446E-5	DESIGN
caller	WITHOUT_CLASSIFICATION	0.9999158360644507	WITHOUT_CLASSIFICATION	8.416393554928209E-5	DESIGN
calltype block	WITHOUT_CLASSIFICATION	0.9999860404214416	WITHOUT_CLASSIFICATION	1.395957855850177E-5	DESIGN
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9996911590160245	WITHOUT_CLASSIFICATION	3.088409839755652E-4	DESIGN
load arity for check	WITHOUT_CLASSIFICATION	0.9999596814833918	WITHOUT_CLASSIFICATION	4.031851660824401E-5	DESIGN
throw	WITHOUT_CLASSIFICATION	0.9995461757157991	WITHOUT_CLASSIFICATION	4.5382428420088995E-4	DESIGN
load arity for error	WITHOUT_CLASSIFICATION	0.9998423631365897	WITHOUT_CLASSIFICATION	1.5763686341025194E-4	DESIGN
arity ok, continue	WITHOUT_CLASSIFICATION	0.9999564831755198	WITHOUT_CLASSIFICATION	4.3516824480296496E-5	DESIGN
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9997234316354937	WITHOUT_CLASSIFICATION	2.765683645062685E-4	DESIGN
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
InvocationCallback	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9996173699991562	WITHOUT_CLASSIFICATION	3.826300008437948E-4	DESIGN
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9992929860573824	WITHOUT_CLASSIFICATION	7.07013942617613E-4	DESIGN
load the encoding	WITHOUT_CLASSIFICATION	0.9999898902515693	WITHOUT_CLASSIFICATION	1.0109748430805514E-5	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.998901209256958	WITHOUT_CLASSIFICATION	0.0010987907430419284	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.998901209256958	WITHOUT_CLASSIFICATION	0.0010987907430419284	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.998901209256958	WITHOUT_CLASSIFICATION	0.0010987907430419284	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994355599179442	WITHOUT_CLASSIFICATION	5.644400820559051E-4	DESIGN
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994355599179442	WITHOUT_CLASSIFICATION	5.644400820559051E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994355599179442	WITHOUT_CLASSIFICATION	5.644400820559051E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994355599179442	WITHOUT_CLASSIFICATION	5.644400820559051E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9994355599179442	WITHOUT_CLASSIFICATION	5.644400820559051E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999389740554815	WITHOUT_CLASSIFICATION	6.10259445184044E-5	DESIGN
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
ThreadContext	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999378498913075	WITHOUT_CLASSIFICATION	6.215010869249949E-5	DESIGN
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999551587773493	WITHOUT_CLASSIFICATION	4.484122265064657E-5	DESIGN
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9973873143583442	WITHOUT_CLASSIFICATION	0.0026126856416557663	DESIGN
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9988741713321455	WITHOUT_CLASSIFICATION	0.001125828667854526	DESIGN
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999830336984153	WITHOUT_CLASSIFICATION	1.6966301584716367E-5	DESIGN
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9988484838992191	WITHOUT_CLASSIFICATION	0.0011515161007809099	DESIGN
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9922341081656326	WITHOUT_CLASSIFICATION	0.00776589183436744	DESIGN
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999771629451969	WITHOUT_CLASSIFICATION	2.2837054803186666E-5	DESIGN
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9998947128224627	WITHOUT_CLASSIFICATION	1.0528717753738056E-4	DESIGN
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.99978814294083	WITHOUT_CLASSIFICATION	2.118570591699665E-4	DESIGN
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9690916217859604	WITHOUT_CLASSIFICATION	0.030908378214039585	DESIGN
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999527795430057	WITHOUT_CLASSIFICATION	4.722045699436E-5	DESIGN
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999882747201833	WITHOUT_CLASSIFICATION	1.1725279816671485E-5	DESIGN
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9986793338777756	WITHOUT_CLASSIFICATION	0.0013206661222243924	DESIGN
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9982961405431389	WITHOUT_CLASSIFICATION	0.0017038594568611618	DESIGN
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9928442818057244	WITHOUT_CLASSIFICATION	0.007155718194275601	DESIGN
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999609252706622	WITHOUT_CLASSIFICATION	3.9074729337764654E-5	DESIGN
source extensions	WITHOUT_CLASSIFICATION	0.9999765029644565	WITHOUT_CLASSIFICATION	2.349703554358064E-5	DESIGN
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.5753354453963829	WITHOUT_CLASSIFICATION	0.42466455460361713	DESIGN
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.6191972592478209	WITHOUT_CLASSIFICATION	0.38080274075217907	DESIGN
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999431130460729	WITHOUT_CLASSIFICATION	5.688695392716613E-5	DESIGN
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9959095412167952	WITHOUT_CLASSIFICATION	0.004090458783204761	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9980649017252742	WITHOUT_CLASSIFICATION	0.001935098274725774	DESIGN
extension extensions	WITHOUT_CLASSIFICATION	0.9998971194594323	WITHOUT_CLASSIFICATION	1.0288054056770226E-4	DESIGN
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9993761609731496	WITHOUT_CLASSIFICATION	6.238390268503465E-4	DESIGN
try all extensions	WITHOUT_CLASSIFICATION	0.9999677958480084	WITHOUT_CLASSIFICATION	3.220415199162975E-5	DESIGN
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9982498170671604	WITHOUT_CLASSIFICATION	0.0017501829328395615	DESIGN
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9990225553271017	WITHOUT_CLASSIFICATION	9.77444672898293E-4	DESIGN
try only literal search	WITHOUT_CLASSIFICATION	0.9999908415172248	WITHOUT_CLASSIFICATION	9.158482775222717E-6	DESIGN
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9994278157096551	WITHOUT_CLASSIFICATION	5.721842903448213E-4	DESIGN
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998735792073926	WITHOUT_CLASSIFICATION	1.2642079260743736E-4	DESIGN
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.995798041688573	WITHOUT_CLASSIFICATION	0.004201958311427026	DESIGN
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9950017486711439	WITHOUT_CLASSIFICATION	0.004998251328856078	DESIGN
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.999836446232379	WITHOUT_CLASSIFICATION	1.6355376762092628E-4	DESIGN
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9961008334804627	WITHOUT_CLASSIFICATION	0.003899166519537239	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.999969878136982	WITHOUT_CLASSIFICATION	3.012186301801788E-5	DESIGN
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9966188166312165	WITHOUT_CLASSIFICATION	0.0033811833687835	DESIGN
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999179411175069	WITHOUT_CLASSIFICATION	8.205888249316789E-5	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998716446209779	WITHOUT_CLASSIFICATION	1.2835537902208355E-4	DESIGN
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998716446209779	WITHOUT_CLASSIFICATION	1.2835537902208355E-4	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9991464410393599	WITHOUT_CLASSIFICATION	8.535589606401505E-4	DESIGN
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9991464410393599	WITHOUT_CLASSIFICATION	8.535589606401505E-4	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9991049493778693	WITHOUT_CLASSIFICATION	8.950506221306879E-4	DESIGN
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9991049493778693	WITHOUT_CLASSIFICATION	8.950506221306879E-4	DESIGN
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999283097004751	WITHOUT_CLASSIFICATION	7.169029952497149E-5	DESIGN
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999751699794145	WITHOUT_CLASSIFICATION	2.4830020585482068E-5	DESIGN
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9992913425029046	WITHOUT_CLASSIFICATION	7.086574970952659E-4	DESIGN
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999100019063208	WITHOUT_CLASSIFICATION	8.999809367917077E-5	DESIGN
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9933360825663874	WITHOUT_CLASSIFICATION	0.00666391743361264	DESIGN
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9992953568155853	WITHOUT_CLASSIFICATION	7.046431844146493E-4	DESIGN
signed short, native	WITHOUT_CLASSIFICATION	0.9999570051298349	WITHOUT_CLASSIFICATION	4.299487016506793E-5	DESIGN
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999585593505457	WITHOUT_CLASSIFICATION	4.144064945438464E-5	DESIGN
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9869418369784158	WITHOUT_CLASSIFICATION	0.013058163021584298	DESIGN
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9994999770742098	WITHOUT_CLASSIFICATION	5.000229257902677E-4	DESIGN
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9992481169249928	WITHOUT_CLASSIFICATION	7.518830750072944E-4	DESIGN
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9958862979963616	WITHOUT_CLASSIFICATION	0.0041137020036383564	DESIGN
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9971215156642099	WITHOUT_CLASSIFICATION	0.0028784843357900452	DESIGN
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.9936269836528758	WITHOUT_CLASSIFICATION	0.0063730163471241545	DESIGN
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9948454985407428	WITHOUT_CLASSIFICATION	0.005154501459257235	DESIGN
write('S');	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9988493528292346	WITHOUT_CLASSIFICATION	0.0011506471707653564	DESIGN
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9912807688332756	WITHOUT_CLASSIFICATION	0.008719231166724458	DESIGN
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9898788248032889	WITHOUT_CLASSIFICATION	0.010121175196710944	DESIGN
w_symbol	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
w_unique	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9998392929006649	WITHOUT_CLASSIFICATION	1.6070709933517036E-4	DESIGN
Major Minor	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999478707396313	WITHOUT_CLASSIFICATION	5.212926036870974E-5	DESIGN
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9988827197379156	WITHOUT_CLASSIFICATION	0.0011172802620843332	DESIGN
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9993828995829264	WITHOUT_CLASSIFICATION	6.171004170736126E-4	DESIGN
sic	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996269047494163	WITHOUT_CLASSIFICATION	3.730952505837725E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996269047494163	WITHOUT_CLASSIFICATION	3.730952505837725E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996269047494163	WITHOUT_CLASSIFICATION	3.730952505837725E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998389201907051	WITHOUT_CLASSIFICATION	1.610798092947867E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998389201907051	WITHOUT_CLASSIFICATION	1.610798092947867E-4	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999071749429884	WITHOUT_CLASSIFICATION	9.282505701160363E-5	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999071749429884	WITHOUT_CLASSIFICATION	9.282505701160363E-5	DESIGN
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9998748039613892	WITHOUT_CLASSIFICATION	1.251960386107999E-4	DESIGN
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999516479564449	WITHOUT_CLASSIFICATION	4.835204355526569E-5	DESIGN
unsigned short, native	WITHOUT_CLASSIFICATION	0.9999641811319847	WITHOUT_CLASSIFICATION	3.5818868015234256E-5	DESIGN
int, native long, native	WITHOUT_CLASSIFICATION	0.9999674125635553	WITHOUT_CLASSIFICATION	3.258743644462767E-5	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996269047494163	WITHOUT_CLASSIFICATION	3.730952505837725E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996269047494163	WITHOUT_CLASSIFICATION	3.730952505837725E-4	DESIGN
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996269047494163	WITHOUT_CLASSIFICATION	3.730952505837725E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998389201907051	WITHOUT_CLASSIFICATION	1.610798092947867E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998389201907051	WITHOUT_CLASSIFICATION	1.610798092947867E-4	DESIGN
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998389201907051	WITHOUT_CLASSIFICATION	1.610798092947867E-4	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999071749429884	WITHOUT_CLASSIFICATION	9.282505701160363E-5	DESIGN
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999071749429884	WITHOUT_CLASSIFICATION	9.282505701160363E-5	DESIGN
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9997976281533713	WITHOUT_CLASSIFICATION	2.0237184662872125E-4	DESIGN
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9990446362820491	WITHOUT_CLASSIFICATION	9.553637179508734E-4	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9989952202949394	WITHOUT_CLASSIFICATION	0.001004779705060715	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9989952202949394	WITHOUT_CLASSIFICATION	0.001004779705060715	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9989952202949394	WITHOUT_CLASSIFICATION	0.001004779705060715	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9989952202949394	WITHOUT_CLASSIFICATION	0.001004779705060715	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9989952202949394	WITHOUT_CLASSIFICATION	0.001004779705060715	DESIGN
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
All braces pushed..	WITHOUT_CLASSIFICATION	0.9999704816254317	WITHOUT_CLASSIFICATION	2.9518374568295974E-5	DESIGN
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9999036815368356	WITHOUT_CLASSIFICATION	9.631846316440571E-5	DESIGN
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9981160953669426	WITHOUT_CLASSIFICATION	0.0018839046330574687	DESIGN
are we at ''	WITHOUT_CLASSIFICATION	0.9998596571746539	WITHOUT_CLASSIFICATION	1.403428253461959E-4	DESIGN
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9983060641570087	WITHOUT_CLASSIFICATION	0.0016939358429913173	DESIGN
not enough bytes	WITHOUT_CLASSIFICATION	0.9999664621737021	WITHOUT_CLASSIFICATION	3.353782629787965E-5	DESIGN
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999913938126427	WITHOUT_CLASSIFICATION	8.606187357311379E-6	DESIGN
skip inner braces	WITHOUT_CLASSIFICATION	0.999976275523856	WITHOUT_CLASSIFICATION	2.372447614395638E-5	DESIGN
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.9995309718093321	WITHOUT_CLASSIFICATION	4.6902819066786455E-4	DESIGN
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9999321931007242	WITHOUT_CLASSIFICATION	6.780689927576739E-5	DESIGN
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999343310124559	WITHOUT_CLASSIFICATION	6.566898754412824E-5	DESIGN
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9962032143610493	WITHOUT_CLASSIFICATION	0.003796785638950648	DESIGN
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9996725744503813	WITHOUT_CLASSIFICATION	3.27425549618837E-4	DESIGN
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9980285423708981	WITHOUT_CLASSIFICATION	0.0019714576291019427	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998728114545756	WITHOUT_CLASSIFICATION	1.2718854542426256E-4	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998728114545756	WITHOUT_CLASSIFICATION	1.2718854542426256E-4	DESIGN
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998728114545756	WITHOUT_CLASSIFICATION	1.2718854542426256E-4	DESIGN
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.990524516788198	WITHOUT_CLASSIFICATION	0.009475483211801979	DESIGN
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.991593545789636	WITHOUT_CLASSIFICATION	0.008406454210363918	DESIGN
SimpleSampler	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9970062561976406	WITHOUT_CLASSIFICATION	0.00299374380235934	DESIGN
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9988529823644651	WITHOUT_CLASSIFICATION	0.0011470176355349718	DESIGN
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9993028516762875	WITHOUT_CLASSIFICATION	6.971483237125149E-4	DESIGN
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999527734343905	WITHOUT_CLASSIFICATION	4.7226565609584835E-5	DESIGN
single precision, native	WITHOUT_CLASSIFICATION	0.9999567085096146	WITHOUT_CLASSIFICATION	4.329149038539166E-5	DESIGN
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9993609057927779	WITHOUT_CLASSIFICATION	6.390942072219893E-4	DESIGN
double precision, little-endian	WITHOUT_CLASSIFICATION	0.999809104249749	WITHOUT_CLASSIFICATION	1.9089575025105115E-4	DESIGN
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999870743505447	WITHOUT_CLASSIFICATION	1.2925649455394722E-5	DESIGN
double precision, native	WITHOUT_CLASSIFICATION	0.9999881513927058	WITHOUT_CLASSIFICATION	1.18486072942032E-5	DESIGN
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999609252706622	WITHOUT_CLASSIFICATION	3.9074729337764654E-5	DESIGN
signed char	WITHOUT_CLASSIFICATION	0.9999539660124256	WITHOUT_CLASSIFICATION	4.603398757452385E-5	DESIGN
unsigned char	WITHOUT_CLASSIFICATION	0.9999539660124256	WITHOUT_CLASSIFICATION	4.603398757452385E-5	DESIGN
long, little-endian	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
long, big-endian	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
unsigned int, native	WITHOUT_CLASSIFICATION	0.9999608839256049	WITHOUT_CLASSIFICATION	3.911607439517665E-5	DESIGN
int, native	WITHOUT_CLASSIFICATION	0.9999608839256049	WITHOUT_CLASSIFICATION	3.911607439517665E-5	DESIGN
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9994781429489056	WITHOUT_CLASSIFICATION	5.218570510943213E-4	DESIGN
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.985618996237173	WITHOUT_CLASSIFICATION	0.014381003762826939	DESIGN
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9990959241835577	WITHOUT_CLASSIFICATION	9.040758164422056E-4	DESIGN
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.998540221937854	WITHOUT_CLASSIFICATION	0.0014597780621460159	DESIGN
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
obtain a	WITHOUT_CLASSIFICATION	0.9998084693609196	WITHOUT_CLASSIFICATION	1.9153063908038248E-4	DESIGN
obtain b	WITHOUT_CLASSIFICATION	0.9999384645896575	WITHOUT_CLASSIFICATION	6.153541034242824E-5	DESIGN
obtain c	WITHOUT_CLASSIFICATION	0.9999462191943925	WITHOUT_CLASSIFICATION	5.378080560744255E-5	DESIGN
obtain d	WITHOUT_CLASSIFICATION	0.999912712417516	WITHOUT_CLASSIFICATION	8.728758248396717E-5	DESIGN
encode.limit() -	WITHOUT_CLASSIFICATION	0.9997854933258141	WITHOUT_CLASSIFICATION	2.14506674185982E-4	DESIGN
1	WITHOUT_CLASSIFICATION	0.9998881053885053	WITHOUT_CLASSIFICATION	1.1189461149476549E-4	DESIGN
2	WITHOUT_CLASSIFICATION	0.9998932175243175	WITHOUT_CLASSIFICATION	1.067824756825022E-4	DESIGN
3	WITHOUT_CLASSIFICATION	0.9997927932669038	WITHOUT_CLASSIFICATION	2.072067330961669E-4	DESIGN
4	WITHOUT_CLASSIFICATION	0.999809713422656	WITHOUT_CLASSIFICATION	1.9028657734393719E-4	DESIGN
5	WITHOUT_CLASSIFICATION	0.9999391073476561	WITHOUT_CLASSIFICATION	6.08926523438585E-5	DESIGN
6	WITHOUT_CLASSIFICATION	0.9999442567470008	WITHOUT_CLASSIFICATION	5.5743252999222705E-5	DESIGN
7	WITHOUT_CLASSIFICATION	0.9999133972347651	WITHOUT_CLASSIFICATION	8.660276523481637E-5	DESIGN
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9994964560304557	WITHOUT_CLASSIFICATION	5.035439695443403E-4	DESIGN
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9996075908988371	WITHOUT_CLASSIFICATION	3.9240910116292236E-4	DESIGN
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999141988664535	WITHOUT_CLASSIFICATION	8.580113354652451E-5	DESIGN
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.9117914955678046	WITHOUT_CLASSIFICATION	0.08820850443219531	DESIGN
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999818290954969	WITHOUT_CLASSIFICATION	1.8170904503090852E-5	DESIGN
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9959252517970705	WITHOUT_CLASSIFICATION	0.004074748202929498	DESIGN
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.999008304499874	WITHOUT_CLASSIFICATION	9.916955001259863E-4	DESIGN
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9989211483458961	WITHOUT_CLASSIFICATION	0.0010788516541039455	DESIGN
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.999713912001796	WITHOUT_CLASSIFICATION	2.860879982040172E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.9966621922310762	WITHOUT_CLASSIFICATION	0.0033378077689238056	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9792545708877561	WITHOUT_CLASSIFICATION	0.02074542911224385	DESIGN
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9792545708877561	WITHOUT_CLASSIFICATION	0.02074542911224385	DESIGN
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9972519628955004	WITHOUT_CLASSIFICATION	0.0027480371044996377	DESIGN
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9990507571406799	WITHOUT_CLASSIFICATION	9.492428593201179E-4	DESIGN
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9966621922310762	WITHOUT_CLASSIFICATION	0.0033378077689238056	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9997622052652835	WITHOUT_CLASSIFICATION	2.3779473471650754E-4	DESIGN
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999108681833967	WITHOUT_CLASSIFICATION	8.913181660325817E-5	DESIGN
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9984011500839727	WITHOUT_CLASSIFICATION	0.0015988499160272862	DESIGN
are we recursing?	WITHOUT_CLASSIFICATION	0.9998953389895984	WITHOUT_CLASSIFICATION	1.0466101040155038E-4	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9987276235864961	WITHOUT_CLASSIFICATION	0.0012723764135039136	DESIGN
default PidGetter	WITHOUT_CLASSIFICATION	0.999956628627853	WITHOUT_CLASSIFICATION	4.337137214714434E-5	DESIGN
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999674995121016	WITHOUT_CLASSIFICATION	3.25004878983788E-5	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.99989856936949	WITHOUT_CLASSIFICATION	1.0143063051004874E-4	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.99989856936949	WITHOUT_CLASSIFICATION	1.0143063051004874E-4	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.99989856936949	WITHOUT_CLASSIFICATION	1.0143063051004874E-4	DESIGN
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.99989856936949	WITHOUT_CLASSIFICATION	1.0143063051004874E-4	DESIGN
try both	WITHOUT_CLASSIFICATION	0.9998827895941214	WITHOUT_CLASSIFICATION	1.1721040587862606E-4	DESIGN
just unix	WITHOUT_CLASSIFICATION	0.9999369212421828	WITHOUT_CLASSIFICATION	6.30787578172331E-5	DESIGN
just windows	WITHOUT_CLASSIFICATION	0.9999744172210993	WITHOUT_CLASSIFICATION	2.5582778900799853E-5	DESIGN
neither	WITHOUT_CLASSIFICATION	0.9999132413439871	WITHOUT_CLASSIFICATION	8.675865601297322E-5	DESIGN
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.8686471566042923	WITHOUT_CLASSIFICATION	0.1313528433957077	DESIGN
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9993932361211473	WITHOUT_CLASSIFICATION	6.06763878852739E-4	DESIGN
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9980234061917734	WITHOUT_CLASSIFICATION	0.001976593808226637	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998230016041301	WITHOUT_CLASSIFICATION	1.7699839586982554E-4	DESIGN
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998230016041301	WITHOUT_CLASSIFICATION	1.7699839586982554E-4	DESIGN
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9997219218268184	WITHOUT_CLASSIFICATION	2.780781731815467E-4	DESIGN
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999786768553273	WITHOUT_CLASSIFICATION	2.132314467271766E-5	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9991569194744402	WITHOUT_CLASSIFICATION	8.430805255597412E-4	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9970964482209341	WITHOUT_CLASSIFICATION	0.0029035517790659015	DESIGN
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9970964482209341	WITHOUT_CLASSIFICATION	0.0029035517790659015	DESIGN
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9992882569352027	WITHOUT_CLASSIFICATION	7.11743064797222E-4	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9997953750294906	WITHOUT_CLASSIFICATION	2.046249705094744E-4	DESIGN
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9997953750294906	WITHOUT_CLASSIFICATION	2.046249705094744E-4	DESIGN
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9956330874128092	WITHOUT_CLASSIFICATION	0.004366912587190815	DESIGN
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9996664918640283	WITHOUT_CLASSIFICATION	3.3350813597167537E-4	DESIGN
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9995705438066312	WITHOUT_CLASSIFICATION	4.2945619336877465E-4	DESIGN
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.997488867400935	WITHOUT_CLASSIFICATION	0.002511132599065061	DESIGN
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9998754341520678	WITHOUT_CLASSIFICATION	1.2456584793220683E-4	DESIGN
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9990397233434359	WITHOUT_CLASSIFICATION	9.602766565639933E-4	DESIGN
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9971405984621978	WITHOUT_CLASSIFICATION	0.0028594015378021	DESIGN
sequential	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9997801906573962	WITHOUT_CLASSIFICATION	2.1980934260365775E-4	DESIGN
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9994646951256718	WITHOUT_CLASSIFICATION	5.353048743282288E-4	DESIGN
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9801498896532089	WITHOUT_CLASSIFICATION	0.019850110346790992	DESIGN
SignalFacade	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9971047329727002	WITHOUT_CLASSIFICATION	0.0028952670272998455	DESIGN
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9959685077862083	WITHOUT_CLASSIFICATION	0.0040314922137918326	DESIGN
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.995731530947088	WITHOUT_CLASSIFICATION	0.004268469052912094	DESIGN
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9995981155914341	WITHOUT_CLASSIFICATION	4.0188440856595475E-4	DESIGN
Args	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
static methods only	WITHOUT_CLASSIFICATION	0.9998760234240209	WITHOUT_CLASSIFICATION	1.2397657597902482E-4	DESIGN
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9997188206562062	WITHOUT_CLASSIFICATION	2.811793437938051E-4	DESIGN
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9937932515307195	WITHOUT_CLASSIFICATION	0.006206748469280512	DESIGN
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9992091784310835	WITHOUT_CLASSIFICATION	7.908215689165356E-4	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9992890766276207	WITHOUT_CLASSIFICATION	7.109233723793997E-4	DESIGN
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9985614637526642	WITHOUT_CLASSIFICATION	0.0014385362473358751	DESIGN
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9979458843186437	WITHOUT_CLASSIFICATION	0.002054115681356239	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9998867988744571	WITHOUT_CLASSIFICATION	1.1320112554286872E-4	DESIGN
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9588236924295326	WITHOUT_CLASSIFICATION	0.04117630757046739	DESIGN
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999942772560768	WITHOUT_CLASSIFICATION	5.722743923200842E-5	DESIGN
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9993968667099841	WITHOUT_CLASSIFICATION	6.031332900159295E-4	DESIGN
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.7627550204933623	WITHOUT_CLASSIFICATION	0.23724497950663767	DESIGN
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.999380233071875	WITHOUT_CLASSIFICATION	6.19766928125072E-4	DESIGN
..	WITHOUT_CLASSIFICATION	0.9999115685248651	WITHOUT_CLASSIFICATION	8.8431475134843E-5	DESIGN
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9992809903869296	WITHOUT_CLASSIFICATION	7.190096130703614E-4	DESIGN
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9989767483502641	WITHOUT_CLASSIFICATION	0.0010232516497359167	DESIGN
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999475604683988	WITHOUT_CLASSIFICATION	5.243953160122856E-5	DESIGN
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.9996027050487652	WITHOUT_CLASSIFICATION	3.972949512346575E-4	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9979072230493167	WITHOUT_CLASSIFICATION	0.0020927769506833755	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999936181448996	WITHOUT_CLASSIFICATION	6.381855100406532E-6	DESIGN
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9997188206562062	WITHOUT_CLASSIFICATION	2.811793437938051E-4	DESIGN
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9997229918542856	WITHOUT_CLASSIFICATION	2.7700814571444466E-4	DESIGN
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9979072230493167	WITHOUT_CLASSIFICATION	0.0020927769506833755	DESIGN
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999936181448996	WITHOUT_CLASSIFICATION	6.381855100406532E-6	DESIGN
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9984760877355696	WITHOUT_CLASSIFICATION	0.0015239122644303737	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9999691080878467	WITHOUT_CLASSIFICATION	3.08919121533894E-5	DESIGN
deal with length/width	WITHOUT_CLASSIFICATION	0.9999691080878467	WITHOUT_CLASSIFICATION	3.08919121533894E-5	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9999020921943654	WITHOUT_CLASSIFICATION	9.790780563466306E-5	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9942016419572469	WITHOUT_CLASSIFICATION	0.00579835804275314	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999883919138651	WITHOUT_CLASSIFICATION	1.1608086134976377E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999637214957521	WITHOUT_CLASSIFICATION	3.627850424798034E-5	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9951633018515134	WITHOUT_CLASSIFICATION	0.004836698148486546	DESIGN
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9982902116801236	WITHOUT_CLASSIFICATION	0.0017097883198764084	DESIGN
'.' is printed	WITHOUT_CLASSIFICATION	0.9999324939376141	WITHOUT_CLASSIFICATION	6.750606238588837E-5	DESIGN
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999537282730075	WITHOUT_CLASSIFICATION	4.627172699250753E-5	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9999892079927793	WITHOUT_CLASSIFICATION	1.0792007220625163E-5	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9995915814957298	WITHOUT_CLASSIFICATION	4.084185042703155E-4	DESIGN
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9998417674652939	WITHOUT_CLASSIFICATION	1.5823253470626376E-4	DESIGN
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9996202195512469	WITHOUT_CLASSIFICATION	3.7978044875316687E-4	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999940368308365	WITHOUT_CLASSIFICATION	5.9631691634508544E-6	DESIGN
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999940368308365	WITHOUT_CLASSIFICATION	5.9631691634508544E-6	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.999622398611344	WITHOUT_CLASSIFICATION	3.7760138865603924E-4	DESIGN
always need at least a 0	WITHOUT_CLASSIFICATION	0.999622398611344	WITHOUT_CLASSIFICATION	3.7760138865603924E-4	DESIGN
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999873383114021	WITHOUT_CLASSIFICATION	1.2661688597912988E-5	DESIGN
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
(1|intlen)	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999802188410498	WITHOUT_CLASSIFICATION	1.9781158950096326E-5	DESIGN
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.999992065723071	WITHOUT_CLASSIFICATION	7.9342769289834E-6	DESIGN
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9997188206562062	WITHOUT_CLASSIFICATION	2.811793437938051E-4	DESIGN
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999883919138651	WITHOUT_CLASSIFICATION	1.1608086134976377E-5	DESIGN
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999637214957521	WITHOUT_CLASSIFICATION	3.627850424798034E-5	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9999892079927793	WITHOUT_CLASSIFICATION	1.0792007220625163E-5	DESIGN
'.'	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999863212442324	WITHOUT_CLASSIFICATION	1.3678755767522327E-5	DESIGN
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.999195152294414	WITHOUT_CLASSIFICATION	8.048477055859265E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
dangling '%' char	WITHOUT_CLASSIFICATION	0.9999539660124256	WITHOUT_CLASSIFICATION	4.603398757452385E-5	DESIGN
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9994032603778829	WITHOUT_CLASSIFICATION	5.967396221171978E-4	DESIGN
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.999898176304972	WITHOUT_CLASSIFICATION	1.0182369502791551E-4	DESIGN
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9976005884596086	WITHOUT_CLASSIFICATION	0.0023994115403913456	DESIGN
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999533814615141	WITHOUT_CLASSIFICATION	4.661853848577131E-5	DESIGN
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998975097774133	WITHOUT_CLASSIFICATION	1.0249022258672474E-4	DESIGN
negative values	WITHOUT_CLASSIFICATION	0.9999903907085994	WITHOUT_CLASSIFICATION	9.609291400605894E-6	DESIGN
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9996440191781205	WITHOUT_CLASSIFICATION	3.5598082187948666E-4	DESIGN
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9998860672108936	WITHOUT_CLASSIFICATION	1.1393278910644237E-4	DESIGN
no such luck...	WITHOUT_CLASSIFICATION	0.9999782034030731	WITHOUT_CLASSIFICATION	2.1796596926852663E-5	DESIGN
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999905638177805	WITHOUT_CLASSIFICATION	9.436182219467502E-6	DESIGN
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9994135748818131	WITHOUT_CLASSIFICATION	5.864251181867822E-4	DESIGN
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9994358262250699	WITHOUT_CLASSIFICATION	5.641737749301601E-4	DESIGN
constant vector a	WITHOUT_CLASSIFICATION	0.9998837284633713	WITHOUT_CLASSIFICATION	1.1627153662880452E-4	DESIGN
most significant w-r bits	WITHOUT_CLASSIFICATION	0.999983391773206	WITHOUT_CLASSIFICATION	1.6608226793952336E-5	DESIGN
least significant r bits	WITHOUT_CLASSIFICATION	0.9999621959641811	WITHOUT_CLASSIFICATION	3.780403581887877E-5	DESIGN
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9997029464204207	WITHOUT_CLASSIFICATION	2.9705357957927767E-4	DESIGN
Tempering	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999688667827866	WITHOUT_CLASSIFICATION	3.113321721347977E-5	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9997188206562062	WITHOUT_CLASSIFICATION	2.811793437938051E-4	DESIGN
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9997188206562062	WITHOUT_CLASSIFICATION	2.811793437938051E-4	DESIGN
\v	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9997188206562062	WITHOUT_CLASSIFICATION	2.811793437938051E-4	DESIGN
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9995509726591683	WITHOUT_CLASSIFICATION	4.490273408317497E-4	DESIGN
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9995509726591683	WITHOUT_CLASSIFICATION	4.490273408317497E-4	DESIGN
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9997188206562062	WITHOUT_CLASSIFICATION	2.811793437938051E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9997188206562062	WITHOUT_CLASSIFICATION	2.811793437938051E-4	DESIGN
no number	WITHOUT_CLASSIFICATION	0.9999686248194041	WITHOUT_CLASSIFICATION	3.137518059592119E-5	DESIGN
trailing garbage	WITHOUT_CLASSIFICATION	0.999969450420197	WITHOUT_CLASSIFICATION	3.054957980299032E-5	DESIGN
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9997754960158005	WITHOUT_CLASSIFICATION	2.2450398419954278E-4	DESIGN
it was not found at all!	WITHOUT_CLASSIFICATION	0.9999688596227416	WITHOUT_CLASSIFICATION	3.114037725839392E-5	DESIGN
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9970562235633563	WITHOUT_CLASSIFICATION	0.002943776436643685	DESIGN
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999767470214848	WITHOUT_CLASSIFICATION	2.325297851522646E-5	DESIGN
goto next bucket	WITHOUT_CLASSIFICATION	0.9999352973010908	WITHOUT_CLASSIFICATION	6.470269890923672E-5	DESIGN
we reached the end	WITHOUT_CLASSIFICATION	0.9999767359160296	WITHOUT_CLASSIFICATION	2.326408397042397E-5	DESIGN
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9990701794946356	WITHOUT_CLASSIFICATION	9.29820505364441E-4	DESIGN
states	WITHOUT_CLASSIFICATION	0.9999187346782575	WITHOUT_CLASSIFICATION	8.126532174247105E-5	DESIGN
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.9994471570542647	WITHOUT_CLASSIFICATION	5.528429457353251E-4	DESIGN
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.999166439791648	WITHOUT_CLASSIFICATION	8.335602083520267E-4	DESIGN
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9991058711970486	WITHOUT_CLASSIFICATION	8.941288029512782E-4	DESIGN
drop through for sign	WITHOUT_CLASSIFICATION	0.9999390209559819	WITHOUT_CLASSIFICATION	6.0979044018114105E-5	DESIGN
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9980284894538205	WITHOUT_CLASSIFICATION	0.001971510546179471	DESIGN
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9991000109100387	WITHOUT_CLASSIFICATION	8.999890899613129E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9990467845259244	WITHOUT_CLASSIFICATION	9.532154740755847E-4	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999405356121955	WITHOUT_CLASSIFICATION	5.946438780446387E-5	DESIGN
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9994711845650773	WITHOUT_CLASSIFICATION	5.288154349227104E-4	DESIGN
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999370056220019	WITHOUT_CLASSIFICATION	6.299437799810162E-5	DESIGN
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9989056009758333	WITHOUT_CLASSIFICATION	0.0010943990241667422	DESIGN
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9988121850259982	WITHOUT_CLASSIFICATION	0.0011878149740017917	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999879767825596	WITHOUT_CLASSIFICATION	1.20232174404722E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999879767825596	WITHOUT_CLASSIFICATION	1.20232174404722E-5	DESIGN
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.984134672218355	WITHOUT_CLASSIFICATION	0.01586532778164502	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.9999285650833395	WITHOUT_CLASSIFICATION	7.143491666057803E-5	DESIGN
ignore switch	WITHOUT_CLASSIFICATION	0.9999285650833395	WITHOUT_CLASSIFICATION	7.143491666057803E-5	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9991572225076947	WITHOUT_CLASSIFICATION	8.427774923053278E-4	DESIGN
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9991572225076947	WITHOUT_CLASSIFICATION	8.427774923053278E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9998306064239981	WITHOUT_CLASSIFICATION	1.693935760019917E-4	DESIGN
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9987185417686574	WITHOUT_CLASSIFICATION	0.0012814582313426066	DESIGN
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9996349422442405	WITHOUT_CLASSIFICATION	3.6505775575941166E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9998998512950087	WITHOUT_CLASSIFICATION	1.0014870499122113E-4	DESIGN
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9973636413905843	WITHOUT_CLASSIFICATION	0.002636358609415652	DESIGN
block	WITHOUT_CLASSIFICATION	0.9999736409267647	WITHOUT_CLASSIFICATION	2.6359073235338597E-5	DESIGN
block	WITHOUT_CLASSIFICATION	0.9999736409267647	WITHOUT_CLASSIFICATION	2.6359073235338597E-5	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9990467845259244	WITHOUT_CLASSIFICATION	9.532154740755847E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9990467845259244	WITHOUT_CLASSIFICATION	9.532154740755847E-4	DESIGN
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9990467845259244	WITHOUT_CLASSIFICATION	9.532154740755847E-4	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999405356121955	WITHOUT_CLASSIFICATION	5.946438780446387E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999879767825596	WITHOUT_CLASSIFICATION	1.20232174404722E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999879767825596	WITHOUT_CLASSIFICATION	1.20232174404722E-5	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999879767825596	WITHOUT_CLASSIFICATION	1.20232174404722E-5	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9998306064239981	WITHOUT_CLASSIFICATION	1.693935760019917E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9998306064239981	WITHOUT_CLASSIFICATION	1.693935760019917E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9998306064239981	WITHOUT_CLASSIFICATION	1.693935760019917E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9998998512950087	WITHOUT_CLASSIFICATION	1.0014870499122113E-4	DESIGN
switch if	WITHOUT_CLASSIFICATION	0.9998998512950087	WITHOUT_CLASSIFICATION	1.0014870499122113E-4	DESIGN
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.998201109894337	WITHOUT_CLASSIFICATION	0.0017988901056630007	DESIGN
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9997313023715981	WITHOUT_CLASSIFICATION	2.6869762840187235E-4	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9894381042219688	WITHOUT_CLASSIFICATION	0.010561895778031285	DESIGN
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9257650979554504	DESIGN	0.0742349020445496	WITHOUT_CLASSIFICATION
no digits, error	WITHOUT_CLASSIFICATION	0.9999712704228814	WITHOUT_CLASSIFICATION	2.8729577118728158E-5	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.999854660033222	WITHOUT_CLASSIFICATION	1.4533996677790542E-4	DESIGN
too big for us	WITHOUT_CLASSIFICATION	0.999854660033222	WITHOUT_CLASSIFICATION	1.4533996677790542E-4	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9955109323917379	WITHOUT_CLASSIFICATION	0.004489067608262069	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9994329094798848	WITHOUT_CLASSIFICATION	5.670905201151299E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9994329094798848	WITHOUT_CLASSIFICATION	5.670905201151299E-4	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9994329094798848	WITHOUT_CLASSIFICATION	5.670905201151299E-4	DESIGN
first char must be digit	WITHOUT_CLASSIFICATION	0.9999131434782944	WITHOUT_CLASSIFICATION	8.685652170559878E-5	DESIGN
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.999229661040584	WITHOUT_CLASSIFICATION	7.703389594161064E-4	DESIGN
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999405356121955	WITHOUT_CLASSIFICATION	5.946438780446387E-5	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9998306064239981	WITHOUT_CLASSIFICATION	1.693935760019917E-4	DESIGN
switch for	WITHOUT_CLASSIFICATION	0.9998306064239981	WITHOUT_CLASSIFICATION	1.693935760019917E-4	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9994329094798848	WITHOUT_CLASSIFICATION	5.670905201151299E-4	DESIGN
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9955109323917379	WITHOUT_CLASSIFICATION	0.004489067608262069	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999868076285324	WITHOUT_CLASSIFICATION	1.31923714674509E-5	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9999657272542689	WITHOUT_CLASSIFICATION	3.4272745731188626E-5	DESIGN
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9998361486661508	WITHOUT_CLASSIFICATION	1.6385133384929726E-4	DESIGN
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9995958717372938	WITHOUT_CLASSIFICATION	4.0412826270609935E-4	DESIGN
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999538622960091	WITHOUT_CLASSIFICATION	4.613770399084415E-5	DESIGN
arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999674798719428	WITHOUT_CLASSIFICATION	3.2520128057203175E-5	DESIGN
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9988063241925039	WITHOUT_CLASSIFICATION	0.0011936758074961818	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999750911647785	WITHOUT_CLASSIFICATION	2.490883522154527E-5	DESIGN
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.999623964740624	WITHOUT_CLASSIFICATION	3.760352593759634E-4	DESIGN
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.999718547211248	WITHOUT_CLASSIFICATION	2.8145278875204763E-4	DESIGN
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9997109434838978	WITHOUT_CLASSIFICATION	2.890565161022414E-4	DESIGN
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999849290225212	WITHOUT_CLASSIFICATION	1.5070977478776353E-5	DESIGN
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.998939532306209	WITHOUT_CLASSIFICATION	0.0010604676937909202	DESIGN
advance to first entry	WITHOUT_CLASSIFICATION	0.9999126349817642	WITHOUT_CLASSIFICATION	8.736501823577392E-5	DESIGN
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.986823672222911	WITHOUT_CLASSIFICATION	0.013176327777088928	DESIGN
package-protected	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9989098362487561	WITHOUT_CLASSIFICATION	0.0010901637512438914	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9995152880537964	WITHOUT_CLASSIFICATION	4.847119462036111E-4	DESIGN
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9994860350185448	WITHOUT_CLASSIFICATION	5.139649814551242E-4	DESIGN
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9997657137177183	WITHOUT_CLASSIFICATION	2.34286282281645E-4	DESIGN
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.999809782043335	WITHOUT_CLASSIFICATION	1.902179566649387E-4	DESIGN
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.998931021442999	WITHOUT_CLASSIFICATION	0.0010689785570010969	DESIGN
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.990129001158719	WITHOUT_CLASSIFICATION	0.009870998841280995	DESIGN
unread back	WITHOUT_CLASSIFICATION	0.999950000040929	WITHOUT_CLASSIFICATION	4.999995907097079E-5	DESIGN
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9993321203035829	WITHOUT_CLASSIFICATION	6.678796964170906E-4	DESIGN
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9988379179038079	WITHOUT_CLASSIFICATION	0.0011620820961920758	DESIGN
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999447723412521	WITHOUT_CLASSIFICATION	5.522765874787889E-5	DESIGN
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9997586729877994	WITHOUT_CLASSIFICATION	2.4132701220046273E-4	DESIGN
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.9968587187624164	WITHOUT_CLASSIFICATION	0.003141281237583561	DESIGN
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9993898665189725	WITHOUT_CLASSIFICATION	6.10133481027511E-4	DESIGN
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9994886218114734	WITHOUT_CLASSIFICATION	5.113781885267545E-4	DESIGN
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999868076285324	WITHOUT_CLASSIFICATION	1.31923714674509E-5	DESIGN
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9999130849241682	WITHOUT_CLASSIFICATION	8.69150758317988E-5	DESIGN
not closing from finalize	WITHOUT_CLASSIFICATION	0.9999576520613516	WITHOUT_CLASSIFICATION	4.2347938648473014E-5	DESIGN
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9998512914565867	WITHOUT_CLASSIFICATION	1.4870854341329301E-4	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
silence	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9999215398542596	WITHOUT_CLASSIFICATION	7.846014574048927E-5	DESIGN
Don't bother	WITHOUT_CLASSIFICATION	0.9999215398542596	WITHOUT_CLASSIFICATION	7.846014574048927E-5	DESIGN
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9998533519546543	WITHOUT_CLASSIFICATION	1.4664804534572772E-4	DESIGN
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999398933152918	WITHOUT_CLASSIFICATION	6.010668470826669E-5	DESIGN
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9998972872520747	WITHOUT_CLASSIFICATION	1.027127479252157E-4	DESIGN
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9909579577169695	WITHOUT_CLASSIFICATION	0.009042042283030466	DESIGN
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9986799062409785	WITHOUT_CLASSIFICATION	0.0013200937590214822	DESIGN
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9981213555952971	WITHOUT_CLASSIFICATION	0.0018786444047027375	DESIGN
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9987124594886048	WITHOUT_CLASSIFICATION	0.0012875405113952488	DESIGN
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9989456367981129	WITHOUT_CLASSIFICATION	0.0010543632018871036	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9612592299517533	WITHOUT_CLASSIFICATION	0.03874077004824664	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9997187841708185	WITHOUT_CLASSIFICATION	2.812158291815325E-4	DESIGN
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9996337881089985	WITHOUT_CLASSIFICATION	3.662118910014127E-4	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9996358144091688	WITHOUT_CLASSIFICATION	3.6418559083121755E-4	DESIGN
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9996358144091688	WITHOUT_CLASSIFICATION	3.6418559083121755E-4	DESIGN
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9892425892147989	WITHOUT_CLASSIFICATION	0.010757410785201062	DESIGN
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9818249032063341	WITHOUT_CLASSIFICATION	0.018175096793665874	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999373055897685	WITHOUT_CLASSIFICATION	6.26944102314691E-5	DESIGN
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999373055897685	WITHOUT_CLASSIFICATION	6.26944102314691E-5	DESIGN
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9998390816655267	WITHOUT_CLASSIFICATION	1.6091833447331042E-4	DESIGN
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9981926327859727	WITHOUT_CLASSIFICATION	0.0018073672140274195	DESIGN
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.99979374795427	WITHOUT_CLASSIFICATION	2.062520457299451E-4	DESIGN
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9997778381009373	WITHOUT_CLASSIFICATION	2.2216189906271465E-4	DESIGN
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9996270969871233	WITHOUT_CLASSIFICATION	3.729030128766427E-4	DESIGN
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.999245341773673	WITHOUT_CLASSIFICATION	7.546582263270018E-4	DESIGN
save the ungot	WITHOUT_CLASSIFICATION	0.9999866759115492	WITHOUT_CLASSIFICATION	1.3324088450787925E-5	DESIGN
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.999225036972955	WITHOUT_CLASSIFICATION	7.749630270449492E-4	DESIGN
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9989926400462305	WITHOUT_CLASSIFICATION	0.0010073599537695171	DESIGN
flush first	WITHOUT_CLASSIFICATION	0.9999477349465007	WITHOUT_CLASSIFICATION	5.226505349939805E-5	DESIGN
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9995008590615678	WITHOUT_CLASSIFICATION	4.991409384322536E-4	DESIGN
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.9984316775560761	WITHOUT_CLASSIFICATION	0.0015683224439238801	DESIGN
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999469091506222	WITHOUT_CLASSIFICATION	5.309084937769254E-5	DESIGN
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9999373100182838	WITHOUT_CLASSIFICATION	6.268998171613965E-5	DESIGN
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9998577347241042	WITHOUT_CLASSIFICATION	1.4226527589570855E-4	DESIGN
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9988984348770086	WITHOUT_CLASSIFICATION	0.0011015651229914164	DESIGN
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.99933719840408	WITHOUT_CLASSIFICATION	6.628015959201346E-4	DESIGN
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9994945643231541	WITHOUT_CLASSIFICATION	5.054356768459686E-4	DESIGN
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9999473698935532	WITHOUT_CLASSIFICATION	5.263010644689376E-5	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9802644003304475	WITHOUT_CLASSIFICATION	0.019735599669552524	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8006060692321065	DESIGN	0.1993939307678935	WITHOUT_CLASSIFICATION
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9821102258693187	WITHOUT_CLASSIFICATION	0.01788977413068127	DESIGN
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9807627219592107	WITHOUT_CLASSIFICATION	0.019237278040789313	DESIGN
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9995478726979706	WITHOUT_CLASSIFICATION	4.5212730202942776E-4	DESIGN
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999779547935339	WITHOUT_CLASSIFICATION	2.2045206466153625E-5	DESIGN
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.99978623555933	WITHOUT_CLASSIFICATION	2.1376444067000756E-4	DESIGN
else leave it null	WITHOUT_CLASSIFICATION	0.9998938958560217	WITHOUT_CLASSIFICATION	1.0610414397821714E-4	DESIGN
TypeMatcher	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9981073985534081	WITHOUT_CLASSIFICATION	0.001892601446591809	DESIGN
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9996733081714887	WITHOUT_CLASSIFICATION	3.266918285112861E-4	DESIGN
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9998908917940237	WITHOUT_CLASSIFICATION	1.0910820597626648E-4	DESIGN
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.999979913639069	WITHOUT_CLASSIFICATION	2.008636093099906E-5	DESIGN
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9998733459762106	WITHOUT_CLASSIFICATION	1.266540237894285E-4	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999082384945884	WITHOUT_CLASSIFICATION	9.176150541147155E-5	DESIGN
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999082384945884	WITHOUT_CLASSIFICATION	9.176150541147155E-5	DESIGN
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999783498950985	WITHOUT_CLASSIFICATION	2.165010490147514E-5	DESIGN
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9997768102324114	WITHOUT_CLASSIFICATION	2.231897675885868E-4	DESIGN
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9994350628971642	WITHOUT_CLASSIFICATION	5.649371028357938E-4	DESIGN
Init	WITHOUT_CLASSIFICATION	0.9999118287124666	WITHOUT_CLASSIFICATION	8.817128753334477E-5	DESIGN
Block	WITHOUT_CLASSIFICATION	0.9999123159126703	WITHOUT_CLASSIFICATION	8.768408732983531E-5	DESIGN
Copy constructor	WITHOUT_CLASSIFICATION	0.9999732756602597	WITHOUT_CLASSIFICATION	2.672433974025004E-5	DESIGN
presumably this require should fail	WITHOUT_CLASSIFICATION	0.9909569054680359	WITHOUT_CLASSIFICATION	0.00904309453196409	DESIGN
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.9909569054680359	WITHOUT_CLASSIFICATION	0.00904309453196409	DESIGN
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9997389620325027	WITHOUT_CLASSIFICATION	2.610379674973341E-4	DESIGN
ok	WITHOUT_CLASSIFICATION	0.999937415344658	WITHOUT_CLASSIFICATION	6.258465534204347E-5	DESIGN
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9863486442737406	WITHOUT_CLASSIFICATION	0.013651355726259466	DESIGN
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9854640552687759	WITHOUT_CLASSIFICATION	0.014535944731224085	DESIGN
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999869213720834	WITHOUT_CLASSIFICATION	1.3078627916668935E-5	DESIGN
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999956578156106	WITHOUT_CLASSIFICATION	4.342184389397381E-5	DESIGN
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9982911435442007	WITHOUT_CLASSIFICATION	0.0017088564557992264	DESIGN
wait for the go signal	WITHOUT_CLASSIFICATION	0.999972598342458	WITHOUT_CLASSIFICATION	2.7401657541895394E-5	DESIGN
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9854908819048412	WITHOUT_CLASSIFICATION	0.014509118095158759	DESIGN
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999308869568421	WITHOUT_CLASSIFICATION	6.91130431578854E-5	DESIGN
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999527665409383	WITHOUT_CLASSIFICATION	4.7233459061614405E-5	DESIGN
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999305122774269	WITHOUT_CLASSIFICATION	6.948772257311883E-5	DESIGN
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9499639952513379	WITHOUT_CLASSIFICATION	0.050036004748662134	DESIGN
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999698828983055	WITHOUT_CLASSIFICATION	3.0117101694567528E-5	DESIGN
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9996293619105705	WITHOUT_CLASSIFICATION	3.706380894295786E-4	DESIGN
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9997659939121025	WITHOUT_CLASSIFICATION	2.3400608789741638E-4	DESIGN
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.990674652681899	WITHOUT_CLASSIFICATION	0.00932534731810092	DESIGN
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9992417341855208	WITHOUT_CLASSIFICATION	7.582658144793383E-4	DESIGN
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.999921261100112	WITHOUT_CLASSIFICATION	7.873889988796204E-5	DESIGN
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
void methods should work	WITHOUT_CLASSIFICATION	0.9994935603776345	WITHOUT_CLASSIFICATION	5.06439622365527E-4	DESIGN
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9985182580838506	WITHOUT_CLASSIFICATION	0.0014817419161493827	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999682526993735	WITHOUT_CLASSIFICATION	3.174730062641843E-5	DESIGN
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999006879121429	WITHOUT_CLASSIFICATION	9.931208785707661E-5	DESIGN
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9996002379387819	WITHOUT_CLASSIFICATION	3.997620612181412E-4	DESIGN
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
int n = 10;	WITHOUT_CLASSIFICATION	0.9999928771940221	WITHOUT_CLASSIFICATION	7.122805977824061E-6	DESIGN
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9903352916367264	WITHOUT_CLASSIFICATION	0.009664708363273595	DESIGN
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999809718576285	WITHOUT_CLASSIFICATION	1.9028142371629058E-5	DESIGN
value equality	WITHOUT_CLASSIFICATION	0.9999470443813275	WITHOUT_CLASSIFICATION	5.295561867252803E-5	DESIGN
identity equality	WITHOUT_CLASSIFICATION	0.9999609233868896	WITHOUT_CLASSIFICATION	3.9076613110482167E-5	DESIGN
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
bench Integer fib	WITHOUT_CLASSIFICATION	0.9999481022300797	WITHOUT_CLASSIFICATION	5.189776992034538E-5	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999561273454249	WITHOUT_CLASSIFICATION	4.387265457507794E-5	DESIGN
bench Long fib	WITHOUT_CLASSIFICATION	0.9999530960548542	WITHOUT_CLASSIFICATION	4.6903945145852256E-5	DESIGN
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9996253489079457	WITHOUT_CLASSIFICATION	3.7465109205425993E-4	DESIGN
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9993102336509798	WITHOUT_CLASSIFICATION	6.897663490202516E-4	DESIGN
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9989725625203861	WITHOUT_CLASSIFICATION	0.001027437479613864	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9339444249763065	WITHOUT_CLASSIFICATION	0.06605557502369358	DESIGN
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9974901511365933	WITHOUT_CLASSIFICATION	0.0025098488634067114	DESIGN
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9970755752330765	WITHOUT_CLASSIFICATION	0.002924424766923575	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999765132343043	WITHOUT_CLASSIFICATION	2.3486765695747948E-5	DESIGN
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9948969941987901	WITHOUT_CLASSIFICATION	0.0051030058012098735	DESIGN
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.997392198786017	WITHOUT_CLASSIFICATION	0.002607801213983074	DESIGN
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9990509792417749	WITHOUT_CLASSIFICATION	9.490207582250874E-4	DESIGN
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.9994992573546367	WITHOUT_CLASSIFICATION	5.007426453632479E-4	DESIGN
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.99502146484282	WITHOUT_CLASSIFICATION	0.004978535157180121	DESIGN
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9918590904704023	WITHOUT_CLASSIFICATION	0.008140909529597649	DESIGN
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9972641380943335	WITHOUT_CLASSIFICATION	0.0027358619056664134	DESIGN
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.996990358102102	WITHOUT_CLASSIFICATION	0.003009641897897882	DESIGN
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9997912054986976	WITHOUT_CLASSIFICATION	2.0879450130239962E-4	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9999644247054335	WITHOUT_CLASSIFICATION	3.557529456646494E-5	DESIGN
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.998958712898368	WITHOUT_CLASSIFICATION	0.0010412871016319228	DESIGN
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9492266740796167	WITHOUT_CLASSIFICATION	0.05077332592038334	DESIGN
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9997513844756768	WITHOUT_CLASSIFICATION	2.4861552432327847E-4	DESIGN
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9987982236532108	WITHOUT_CLASSIFICATION	0.0012017763467891962	DESIGN
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9903718460959755	WITHOUT_CLASSIFICATION	0.00962815390402445	DESIGN
construct the proxy method	WITHOUT_CLASSIFICATION	0.9999702584996893	WITHOUT_CLASSIFICATION	2.974150031065202E-5	DESIGN
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9999659542970799	WITHOUT_CLASSIFICATION	3.404570292004491E-5	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999459127067716	WITHOUT_CLASSIFICATION	5.408729322846552E-5	DESIGN
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9999659542970799	WITHOUT_CLASSIFICATION	3.404570292004491E-5	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9998332831614303	WITHOUT_CLASSIFICATION	1.6671683856967778E-4	DESIGN
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999459127067716	WITHOUT_CLASSIFICATION	5.408729322846552E-5	DESIGN
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9464444235390317	WITHOUT_CLASSIFICATION	0.05355557646096832	DESIGN
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9998867988744571	WITHOUT_CLASSIFICATION	1.1320112554286872E-4	DESIGN
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.994792693847691	WITHOUT_CLASSIFICATION	0.005207306152309092	DESIGN
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9088904661551639	DESIGN	0.09110953384483603	WITHOUT_CLASSIFICATION
check visibility dup method	WITHOUT_CLASSIFICATION	0.9999356401747544	WITHOUT_CLASSIFICATION	6.435982524557021E-5	DESIGN
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9989952202949394	WITHOUT_CLASSIFICATION	0.001004779705060715	DESIGN
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9995188543911138	WITHOUT_CLASSIFICATION	4.8114560888617416E-4	DESIGN
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9983304035638151	WITHOUT_CLASSIFICATION	0.0016695964361848642	DESIGN
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9942016419572469	WITHOUT_CLASSIFICATION	0.00579835804275314	DESIGN
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9802644003304475	WITHOUT_CLASSIFICATION	0.019735599669552524	DESIGN
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9894381042219688	WITHOUT_CLASSIFICATION	0.010561895778031285	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.930678410335037	WITHOUT_CLASSIFICATION	0.06932158966496303	DESIGN
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999176086435283	WITHOUT_CLASSIFICATION	8.239135647170702E-4	DESIGN
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.9999041529043318	WITHOUT_CLASSIFICATION	9.58470956682647E-5	DESIGN
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
switch while	WITHOUT_CLASSIFICATION	0.9999657272542689	WITHOUT_CLASSIFICATION	3.4272745731188626E-5	DESIGN
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9946601574406037	WITHOUT_CLASSIFICATION	0.005339842559396328	DESIGN
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9618113196162864	WITHOUT_CLASSIFICATION	0.038188680383713584	DESIGN
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9975174524552249	WITHOUT_CLASSIFICATION	0.0024825475447749724	DESIGN
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9169721176387211	WITHOUT_CLASSIFICATION	0.08302788236127898	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9999197414631366	WITHOUT_CLASSIFICATION	8.025853686340597E-5	DESIGN
Do nothing	WITHOUT_CLASSIFICATION	0.9999874515965581	WITHOUT_CLASSIFICATION	1.254840344183134E-5	DESIGN
constructor	WITHOUT_CLASSIFICATION	0.9999720499360373	WITHOUT_CLASSIFICATION	2.7950063962802176E-5	DESIGN
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9994694776842705	WITHOUT_CLASSIFICATION	5.305223157294791E-4	DESIGN
$>: default output handle	WITHOUT_CLASSIFICATION	0.9999533074904977	WITHOUT_CLASSIFICATION	4.6692509502194584E-5	DESIGN
line 423	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 486	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9996165282176843	WITHOUT_CLASSIFICATION	3.8347178231572476E-4	DESIGN
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999826870230583	WITHOUT_CLASSIFICATION	1.73129769417861E-5	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9984477656796419	WITHOUT_CLASSIFICATION	0.0015522343203580474	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9984477656796419	WITHOUT_CLASSIFICATION	0.0015522343203580474	DESIGN
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999415672622204	WITHOUT_CLASSIFICATION	5.8432737779646857E-5	DESIGN
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999768160919705	WITHOUT_CLASSIFICATION	2.3183908029490122E-4	DESIGN
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9996898589930214	WITHOUT_CLASSIFICATION	3.1014100697852317E-4	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9081609898088744	WITHOUT_CLASSIFICATION	0.09183901019112561	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9081609898088744	WITHOUT_CLASSIFICATION	0.09183901019112561	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9081609898088744	WITHOUT_CLASSIFICATION	0.09183901019112561	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9081609898088744	WITHOUT_CLASSIFICATION	0.09183901019112561	DESIGN
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.996375768171217	WITHOUT_CLASSIFICATION	0.0036242318287829744	DESIGN
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999826309458612	WITHOUT_CLASSIFICATION	1.7369054138798563E-4	DESIGN
"else" body	WITHOUT_CLASSIFICATION	0.9999640892344831	WITHOUT_CLASSIFICATION	3.591076551686133E-5	DESIGN
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.5857538847798213	DESIGN	0.4142461152201787	WITHOUT_CLASSIFICATION
read-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9999742582010465	WITHOUT_CLASSIFICATION	2.5741798953534678E-5	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9998117984152747	WITHOUT_CLASSIFICATION	1.882015847252966E-4	DESIGN
should alter global state	WITHOUT_CLASSIFICATION	0.9998117984152747	WITHOUT_CLASSIFICATION	1.882015847252966E-4	DESIGN
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9998430387995524	WITHOUT_CLASSIFICATION	1.5696120044761158E-4	DESIGN
10!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9995926805121687	WITHOUT_CLASSIFICATION	4.0731948783127717E-4	DESIGN
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.97443022989081	WITHOUT_CLASSIFICATION	0.025569770109190013	DESIGN
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9989745967620474	WITHOUT_CLASSIFICATION	0.0010254032379526646	DESIGN
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9991584256855631	WITHOUT_CLASSIFICATION	8.415743144369285E-4	DESIGN
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9613362190206773	WITHOUT_CLASSIFICATION	0.03866378097932259	DESIGN
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999420121955885	WITHOUT_CLASSIFICATION	5.7987804411502265E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9998332831614303	WITHOUT_CLASSIFICATION	1.6671683856967778E-4	DESIGN
line 449	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 495	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
Management/monitoring	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9998635819532883	WITHOUT_CLASSIFICATION	1.3641804671168662E-4	DESIGN
14!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9998545812675443	WITHOUT_CLASSIFICATION	1.4541873245561292E-4	DESIGN
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.999964664343062	WITHOUT_CLASSIFICATION	3.5335656938019025E-5	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999932415422245	WITHOUT_CLASSIFICATION	6.7584577754390345E-6	DESIGN
extract item from array	WITHOUT_CLASSIFICATION	0.9999932415422245	WITHOUT_CLASSIFICATION	6.7584577754390345E-6	DESIGN
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9995926805121687	WITHOUT_CLASSIFICATION	4.0731948783127717E-4	DESIGN
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.9993562899784133	WITHOUT_CLASSIFICATION	6.437100215866725E-4	DESIGN
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9964617264959315	WITHOUT_CLASSIFICATION	0.0035382735040685215	DESIGN
index for the item	WITHOUT_CLASSIFICATION	0.999996542431563	WITHOUT_CLASSIFICATION	3.457568436949224E-6	DESIGN
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9949898004190668	WITHOUT_CLASSIFICATION	0.0050101995809332224	DESIGN
18!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9984699525389559	WITHOUT_CLASSIFICATION	0.001530047461044096	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999151937867574	WITHOUT_CLASSIFICATION	8.480621324261218E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999151937867574	WITHOUT_CLASSIFICATION	8.480621324261218E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999151937867574	WITHOUT_CLASSIFICATION	8.480621324261218E-4	DESIGN
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999151937867574	WITHOUT_CLASSIFICATION	8.480621324261218E-4	DESIGN
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9997738967528369	WITHOUT_CLASSIFICATION	2.2610324716316498E-4	DESIGN
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.8435739551059912	WITHOUT_CLASSIFICATION	0.15642604489400885	DESIGN
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9986370510551571	WITHOUT_CLASSIFICATION	0.0013629489448428302	DESIGN
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9957257680373982	WITHOUT_CLASSIFICATION	0.004274231962601865	DESIGN
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.999755647521047	WITHOUT_CLASSIFICATION	2.4435247895306745E-4	DESIGN
22!	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
attribute set.	WITHOUT_CLASSIFICATION	0.9999590913176027	WITHOUT_CLASSIFICATION	4.090868239720908E-5	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978825797771238	WITHOUT_CLASSIFICATION	0.0021174202228761217	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978825797771238	WITHOUT_CLASSIFICATION	0.0021174202228761217	DESIGN
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9978825797771238	WITHOUT_CLASSIFICATION	0.0021174202228761217	DESIGN
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9994874039168329	WITHOUT_CLASSIFICATION	5.125960831671235E-4	DESIGN
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9997794670964796	WITHOUT_CLASSIFICATION	2.2053290352051175E-4	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9906650626669098	WITHOUT_CLASSIFICATION	0.009334937333090133	DESIGN
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9906650626669098	WITHOUT_CLASSIFICATION	0.009334937333090133	DESIGN
AF_INET	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9904998209249429	WITHOUT_CLASSIFICATION	0.009500179075057099	DESIGN
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9875021093467804	WITHOUT_CLASSIFICATION	0.012497890653219478	DESIGN
BASE64	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9995075754414758	WITHOUT_CLASSIFICATION	4.924245585242137E-4	DESIGN
element set	WITHOUT_CLASSIFICATION	0.9998931568033939	WITHOUT_CLASSIFICATION	1.0684319660609496E-4	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.5552450275001924	WITHOUT_CLASSIFICATION	0.4447549724998075	DESIGN
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.5552450275001924	WITHOUT_CLASSIFICATION	0.4447549724998075	DESIGN
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9953222850558158	WITHOUT_CLASSIFICATION	0.0046777149441842	DESIGN
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.999987425793395	WITHOUT_CLASSIFICATION	1.2574206605203574E-5	DESIGN
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.8092996947998923	WITHOUT_CLASSIFICATION	0.19070030520010778	DESIGN
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.999921261100112	WITHOUT_CLASSIFICATION	7.873889988796204E-5	DESIGN
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9985917315261622	WITHOUT_CLASSIFICATION	0.0014082684738378653	DESIGN
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9988672458629881	WITHOUT_CLASSIFICATION	0.0011327541370118634	DESIGN
carriage return	WITHOUT_CLASSIFICATION	0.999964333698319	WITHOUT_CLASSIFICATION	3.566630168092332E-5	DESIGN
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9993379280071889	WITHOUT_CLASSIFICATION	6.620719928111923E-4	DESIGN
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9997748885488466	WITHOUT_CLASSIFICATION	2.25111451153491E-4	DESIGN
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.9998286736625862	WITHOUT_CLASSIFICATION	1.7132633741388963E-4	DESIGN
return last value from execution	WITHOUT_CLASSIFICATION	0.9991778267456844	WITHOUT_CLASSIFICATION	8.22173254315557E-4	DESIGN
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9992239292602597	WITHOUT_CLASSIFICATION	7.760707397402093E-4	DESIGN
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.998696485214684	WITHOUT_CLASSIFICATION	0.0013035147853159396	DESIGN
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999063862626745	WITHOUT_CLASSIFICATION	9.361373732555032E-5	DESIGN
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.883803359451209	WITHOUT_CLASSIFICATION	0.11619664054879106	DESIGN
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9962928787257788	WITHOUT_CLASSIFICATION	0.003707121274221321	DESIGN
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9970293767630481	WITHOUT_CLASSIFICATION	0.0029706232369517385	DESIGN
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998813461479641	WITHOUT_CLASSIFICATION	1.1865385203597746E-4	DESIGN
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9948895180558496	WITHOUT_CLASSIFICATION	0.005110481944150348	DESIGN
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999194186549315	WITHOUT_CLASSIFICATION	8.058134506852773E-5	DESIGN
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9891096457184925	WITHOUT_CLASSIFICATION	0.010890354281507532	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9999370674578619	WITHOUT_CLASSIFICATION	6.293254213815223E-5	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9999370674578619	WITHOUT_CLASSIFICATION	6.293254213815223E-5	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9999370674578619	WITHOUT_CLASSIFICATION	6.293254213815223E-5	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9999370674578619	WITHOUT_CLASSIFICATION	6.293254213815223E-5	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9999370674578619	WITHOUT_CLASSIFICATION	6.293254213815223E-5	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9999370674578619	WITHOUT_CLASSIFICATION	6.293254213815223E-5	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9999370674578619	WITHOUT_CLASSIFICATION	6.293254213815223E-5	DESIGN
Need to initialize	WITHOUT_CLASSIFICATION	0.9999370674578619	WITHOUT_CLASSIFICATION	6.293254213815223E-5	DESIGN
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9923312437071308	WITHOUT_CLASSIFICATION	0.007668756292869223	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9999319302572015	WITHOUT_CLASSIFICATION	6.806974279843958E-5	DESIGN
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9997308157277152	WITHOUT_CLASSIFICATION	2.691842722848913E-4	DESIGN
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9527289017949383	WITHOUT_CLASSIFICATION	0.047271098205061764	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9339444249763065	WITHOUT_CLASSIFICATION	0.06605557502369358	DESIGN
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9339444249763065	WITHOUT_CLASSIFICATION	0.06605557502369358	DESIGN
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9990157420323287	WITHOUT_CLASSIFICATION	9.842579676712132E-4	DESIGN
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.7594037614173401	WITHOUT_CLASSIFICATION	0.24059623858266	DESIGN
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9845374453277446	WITHOUT_CLASSIFICATION	0.015462554672255572	DESIGN
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9959161452686079	WITHOUT_CLASSIFICATION	0.004083854731392017	DESIGN
get current context	WITHOUT_CLASSIFICATION	0.9999749059015622	WITHOUT_CLASSIFICATION	2.5094098437863903E-5	DESIGN
octal constant	WITHOUT_CLASSIFICATION	0.9999458522075374	WITHOUT_CLASSIFICATION	5.414779246269987E-5	DESIGN
read	WITHOUT_CLASSIFICATION	0.9999218854782352	WITHOUT_CLASSIFICATION	7.811452176474215E-5	DESIGN
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9679908927254887	WITHOUT_CLASSIFICATION	0.03200910727451139	DESIGN
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9995135499056885	WITHOUT_CLASSIFICATION	4.86450094311508E-4	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9976093594383065	WITHOUT_CLASSIFICATION	0.0023906405616935258	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9976093594383065	WITHOUT_CLASSIFICATION	0.0023906405616935258	DESIGN
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9976093594383065	WITHOUT_CLASSIFICATION	0.0023906405616935258	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9996574056890071	WITHOUT_CLASSIFICATION	3.4259431099288346E-4	DESIGN
at end	WITHOUT_CLASSIFICATION	0.9999142900140269	WITHOUT_CLASSIFICATION	8.570998597302717E-5	DESIGN
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9997931629316471	WITHOUT_CLASSIFICATION	2.0683706835280844E-4	DESIGN
save blocking state	WITHOUT_CLASSIFICATION	0.999962351401708	WITHOUT_CLASSIFICATION	3.764859829208423E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
receiver	WITHOUT_CLASSIFICATION	0.9999129609102588	WITHOUT_CLASSIFICATION	8.703908974111912E-5	DESIGN
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999399023176782	WITHOUT_CLASSIFICATION	6.00976823217452E-5	DESIGN
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999981546225315	WITHOUT_CLASSIFICATION	1.8453774684719629E-6	DESIGN
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9974331802127197	WITHOUT_CLASSIFICATION	0.00256681978728029	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9961704624498975	WITHOUT_CLASSIFICATION	0.003829537550102536	DESIGN
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9961704624498975	WITHOUT_CLASSIFICATION	0.003829537550102536	DESIGN
load null block	WITHOUT_CLASSIFICATION	0.9999589866217334	WITHOUT_CLASSIFICATION	4.10133782666009E-5	DESIGN
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9995757861663656	WITHOUT_CLASSIFICATION	4.24213833634414E-4	DESIGN
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9992499404170321	WITHOUT_CLASSIFICATION	7.500595829679995E-4	DESIGN
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9950848055219498	WITHOUT_CLASSIFICATION	0.004915194478050208	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9999919971983773	WITHOUT_CLASSIFICATION	8.002801622668773E-6	DESIGN
block given	WITHOUT_CLASSIFICATION	0.9999919971983773	WITHOUT_CLASSIFICATION	8.002801622668773E-6	DESIGN
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9070824736611562	WITHOUT_CLASSIFICATION	0.09291752633884366	DESIGN
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9995738450815986	WITHOUT_CLASSIFICATION	4.261549184013558E-4	DESIGN
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9950517817775743	WITHOUT_CLASSIFICATION	0.004948218222425747	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
self	WITHOUT_CLASSIFICATION	0.9998364608339436	WITHOUT_CLASSIFICATION	1.6353916605632094E-4	DESIGN
declare the field	WITHOUT_CLASSIFICATION	0.9999862360143553	WITHOUT_CLASSIFICATION	1.3763985644635317E-5	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9999721213008345	WITHOUT_CLASSIFICATION	2.7878699165612653E-5	DESIGN
Assign the values.	WITHOUT_CLASSIFICATION	0.9999721213008345	WITHOUT_CLASSIFICATION	2.7878699165612653E-5	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9999830297167707	WITHOUT_CLASSIFICATION	1.6970283229327953E-5	DESIGN
check arity	WITHOUT_CLASSIFICATION	0.9999830297167707	WITHOUT_CLASSIFICATION	1.6970283229327953E-5	DESIGN
create the class	WITHOUT_CLASSIFICATION	0.9999894411076078	WITHOUT_CLASSIFICATION	1.0558892392217987E-5	DESIGN
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9998951057805546	WITHOUT_CLASSIFICATION	1.0489421944532719E-4	DESIGN
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999909345874068	WITHOUT_CLASSIFICATION	9.065412593246448E-6	DESIGN
1.8	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9993158189411784	WITHOUT_CLASSIFICATION	6.841810588216389E-4	DESIGN
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996921093011069	WITHOUT_CLASSIFICATION	3.0789069889313814E-4	DESIGN
block	WITHOUT_CLASSIFICATION	0.9999736409267647	WITHOUT_CLASSIFICATION	2.6359073235338597E-5	DESIGN
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.9987764299181959	WITHOUT_CLASSIFICATION	0.0012235700818040453	DESIGN
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9943515432802332	WITHOUT_CLASSIFICATION	0.005648456719766763	DESIGN
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9998992361779057	WITHOUT_CLASSIFICATION	1.0076382209444387E-4	DESIGN
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9996766270379723	WITHOUT_CLASSIFICATION	3.233729620276251E-4	DESIGN
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9952610944557404	WITHOUT_CLASSIFICATION	0.004738905544259579	DESIGN
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9990145281976377	WITHOUT_CLASSIFICATION	9.854718023622308E-4	DESIGN
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.8489994540026128	WITHOUT_CLASSIFICATION	0.15100054599738733	DESIGN
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.5602816988080662	WITHOUT_CLASSIFICATION	0.4397183011919336	DESIGN
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9881311707238762	WITHOUT_CLASSIFICATION	0.011868829276123682	DESIGN
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9971403358032302	WITHOUT_CLASSIFICATION	0.0028596641967697746	DESIGN
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9994155025975324	WITHOUT_CLASSIFICATION	5.844974024675992E-4	DESIGN
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9996379012526392	WITHOUT_CLASSIFICATION	3.6209874736082263E-4	DESIGN
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.930678410335037	WITHOUT_CLASSIFICATION	0.06932158966496303	DESIGN
arg	WITHOUT_CLASSIFICATION	0.9999135290814661	WITHOUT_CLASSIFICATION	8.647091853391595E-5	DESIGN
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999264006841545	WITHOUT_CLASSIFICATION	7.359931584551379E-5	DESIGN
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9995549292459562	WITHOUT_CLASSIFICATION	4.4507075404377197E-4	DESIGN
coerce arguments	WITHOUT_CLASSIFICATION	0.9999583096917104	WITHOUT_CLASSIFICATION	4.16903082895655E-5	DESIGN
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9993819998875976	WITHOUT_CLASSIFICATION	6.180001124023787E-4	DESIGN
expected	WITHOUT_CLASSIFICATION	0.9999197414631366	WITHOUT_CLASSIFICATION	8.025853686340597E-5	DESIGN
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.997319102904805	WITHOUT_CLASSIFICATION	0.002680897095195029	DESIGN
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9985373508164478	WITHOUT_CLASSIFICATION	0.001462649183552146	DESIGN
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.999904565699311	WITHOUT_CLASSIFICATION	9.543430068909165E-5	DESIGN
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9989365884505091	WITHOUT_CLASSIFICATION	0.0010634115494908435	DESIGN
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9987435715536573	WITHOUT_CLASSIFICATION	0.0012564284463427039	DESIGN
use numbered access method	WITHOUT_CLASSIFICATION	0.9997584958350486	WITHOUT_CLASSIFICATION	2.4150416495134872E-4	DESIGN
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9998357573087331	WITHOUT_CLASSIFICATION	1.642426912669845E-4	DESIGN
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9976192011063179	WITHOUT_CLASSIFICATION	0.002380798893682133	DESIGN
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.7023203468544191	WITHOUT_CLASSIFICATION	0.2976796531455809	DESIGN
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9997852362245452	WITHOUT_CLASSIFICATION	2.1476377545475323E-4	DESIGN
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9991280669439567	WITHOUT_CLASSIFICATION	8.719330560432785E-4	DESIGN
build scope names string	WITHOUT_CLASSIFICATION	0.9997208427323144	WITHOUT_CLASSIFICATION	2.7915726768549767E-4	DESIGN
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9838282180726151	WITHOUT_CLASSIFICATION	0.016171781927384866	DESIGN
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9378224470087854	WITHOUT_CLASSIFICATION	0.06217755299121463	DESIGN
finally	WITHOUT_CLASSIFICATION	0.9999114842249215	WITHOUT_CLASSIFICATION	8.851577507855025E-5	DESIGN
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9856224162779113	WITHOUT_CLASSIFICATION	0.014377583722088682	DESIGN
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9995322448346319	WITHOUT_CLASSIFICATION	4.677551653681251E-4	DESIGN
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9929108514930647	WITHOUT_CLASSIFICATION	0.007089148506935238	DESIGN
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9638161369790006	WITHOUT_CLASSIFICATION	0.03618386302099941	DESIGN
specific arity	WITHOUT_CLASSIFICATION	0.9998287974874916	WITHOUT_CLASSIFICATION	1.7120251250825731E-4	DESIGN
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999753767341273	WITHOUT_CLASSIFICATION	2.4623265872715633E-5	DESIGN
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9995351921861427	WITHOUT_CLASSIFICATION	4.6480781385722144E-4	DESIGN
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9995085873657383	WITHOUT_CLASSIFICATION	4.914126342616725E-4	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999380054199796	WITHOUT_CLASSIFICATION	6.19945800204773E-5	DESIGN
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999380054199796	WITHOUT_CLASSIFICATION	6.19945800204773E-5	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9984710871872394	WITHOUT_CLASSIFICATION	0.001528912812760631	DESIGN
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9984710871872394	WITHOUT_CLASSIFICATION	0.001528912812760631	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9991017029877955	WITHOUT_CLASSIFICATION	8.982970122044549E-4	DESIGN
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9991017029877955	WITHOUT_CLASSIFICATION	8.982970122044549E-4	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9993657533768004	WITHOUT_CLASSIFICATION	6.342466231994887E-4	DESIGN
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9993657533768004	WITHOUT_CLASSIFICATION	6.342466231994887E-4	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
write-volatile	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.996992365829278	WITHOUT_CLASSIFICATION	0.0030076341707219846	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.996992365829278	WITHOUT_CLASSIFICATION	0.0030076341707219846	DESIGN
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.996992365829278	WITHOUT_CLASSIFICATION	0.0030076341707219846	DESIGN
Add property name aliases	WITHOUT_CLASSIFICATION	0.9999807420790316	WITHOUT_CLASSIFICATION	1.9257920968378554E-5	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9993900481249021	WITHOUT_CLASSIFICATION	6.099518750978036E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9993900481249021	WITHOUT_CLASSIFICATION	6.099518750978036E-4	DESIGN
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9993900481249021	WITHOUT_CLASSIFICATION	6.099518750978036E-4	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999200778662563	WITHOUT_CLASSIFICATION	7.992213374382081E-5	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999200778662563	WITHOUT_CLASSIFICATION	7.992213374382081E-5	DESIGN
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999200778662563	WITHOUT_CLASSIFICATION	7.992213374382081E-5	DESIGN
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999608966083426	WITHOUT_CLASSIFICATION	3.910339165735296E-5	DESIGN
backspace	WITHOUT_CLASSIFICATION	0.9999117084409657	WITHOUT_CLASSIFICATION	8.829155903430456E-5	DESIGN
yySindex 889	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
package-private	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9999319302572015	WITHOUT_CLASSIFICATION	6.806974279843958E-5	DESIGN
fall through	WITHOUT_CLASSIFICATION	0.9999319302572015	WITHOUT_CLASSIFICATION	6.806974279843958E-5	DESIGN
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9926284002301456	WITHOUT_CLASSIFICATION	0.0073715997698544505	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9985992753686718	WITHOUT_CLASSIFICATION	0.0014007246313281717	DESIGN
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9985992753686718	WITHOUT_CLASSIFICATION	0.0014007246313281717	DESIGN
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.526837068769747	DESIGN	0.4731629312302531	WITHOUT_CLASSIFICATION
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.998531686824081	WITHOUT_CLASSIFICATION	0.001468313175918971	DESIGN
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9985678175685535	WITHOUT_CLASSIFICATION	0.0014321824314464655	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999903835850936	WITHOUT_CLASSIFICATION	9.61641490642988E-6	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999903835850936	WITHOUT_CLASSIFICATION	9.61641490642988E-6	DESIGN
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8337841618133356	WITHOUT_CLASSIFICATION	0.16621583818666436	DESIGN
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.99998831569256	WITHOUT_CLASSIFICATION	1.1684307440150319E-5	DESIGN
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9987686077357542	WITHOUT_CLASSIFICATION	0.0012313922642458886	DESIGN
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.999561718941826	WITHOUT_CLASSIFICATION	4.3828105817406523E-4	DESIGN
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9613656853517706	WITHOUT_CLASSIFICATION	0.038634314648229424	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999903835850936	WITHOUT_CLASSIFICATION	9.61641490642988E-6	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999903835850936	WITHOUT_CLASSIFICATION	9.61641490642988E-6	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999903835850936	WITHOUT_CLASSIFICATION	9.61641490642988E-6	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999903835850936	WITHOUT_CLASSIFICATION	9.61641490642988E-6	DESIGN
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999903835850936	WITHOUT_CLASSIFICATION	9.61641490642988E-6	DESIGN
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999864572526814	WITHOUT_CLASSIFICATION	1.3542747318613547E-5	DESIGN
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9980564947703765	WITHOUT_CLASSIFICATION	0.0019435052296234232	DESIGN
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999405359106133	WITHOUT_CLASSIFICATION	5.9464089386653094E-5	DESIGN
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9996091301971293	WITHOUT_CLASSIFICATION	3.9086980287076484E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9996815022000793	WITHOUT_CLASSIFICATION	3.1849779992070373E-4	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
not reached	WITHOUT_CLASSIFICATION	0.9999660528867987	WITHOUT_CLASSIFICATION	3.3947113201249656E-5	DESIGN
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9151957620467244	DESIGN	0.08480423795327564	WITHOUT_CLASSIFICATION
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9937469546004323	WITHOUT_CLASSIFICATION	0.006253045399567688	DESIGN
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999561101474536	WITHOUT_CLASSIFICATION	4.3889852546364396E-5	DESIGN
get "self"	WITHOUT_CLASSIFICATION	0.9999416674043997	WITHOUT_CLASSIFICATION	5.8332595600275964E-5	DESIGN
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999335361666096	WITHOUT_CLASSIFICATION	6.646383339038228E-5	DESIGN
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9999644247054335	WITHOUT_CLASSIFICATION	3.557529456646494E-5	DESIGN
only public methods	WITHOUT_CLASSIFICATION	0.9999063192797677	WITHOUT_CLASSIFICATION	9.368072023228619E-5	DESIGN
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998888518287764	WITHOUT_CLASSIFICATION	1.1114817122350982E-4	DESIGN
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9994840884430646	WITHOUT_CLASSIFICATION	5.159115569355052E-4	DESIGN
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.7938830561373003	WITHOUT_CLASSIFICATION	0.2061169438626998	DESIGN
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9957114044823859	WITHOUT_CLASSIFICATION	0.004288595517614139	DESIGN
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9986160396678111	WITHOUT_CLASSIFICATION	0.0013839603321889934	DESIGN
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.999477376274419	WITHOUT_CLASSIFICATION	5.226237255810107E-4	DESIGN
Create constants for flock	WITHOUT_CLASSIFICATION	0.9999317689366112	WITHOUT_CLASSIFICATION	6.823106338885127E-5	DESIGN
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9996367204379785	WITHOUT_CLASSIFICATION	3.6327956202153233E-4	DESIGN
indices for temp values	WITHOUT_CLASSIFICATION	0.9999892202150149	WITHOUT_CLASSIFICATION	1.0779784985006657E-5	DESIGN
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999765132343043	WITHOUT_CLASSIFICATION	2.3486765695747948E-5	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999610282335762	WITHOUT_CLASSIFICATION	3.8971766423717605E-5	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999610282335762	WITHOUT_CLASSIFICATION	3.8971766423717605E-5	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999610282335762	WITHOUT_CLASSIFICATION	3.8971766423717605E-5	DESIGN
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999610282335762	WITHOUT_CLASSIFICATION	3.8971766423717605E-5	DESIGN
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999386105412845	WITHOUT_CLASSIFICATION	6.138945871549901E-5	DESIGN
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9867962469900756	WITHOUT_CLASSIFICATION	0.013203753009924286	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9987362803675641	WITHOUT_CLASSIFICATION	0.0012637196324359712	DESIGN
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9987362803675641	WITHOUT_CLASSIFICATION	0.0012637196324359712	DESIGN
set self to the class	WITHOUT_CLASSIFICATION	0.9999421428658538	WITHOUT_CLASSIFICATION	5.785713414625441E-5	DESIGN
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.9986295454104003	WITHOUT_CLASSIFICATION	0.0013704545895997953	DESIGN
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9864399851908744	WITHOUT_CLASSIFICATION	0.013560014809125652	DESIGN
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999729833328473	WITHOUT_CLASSIFICATION	2.70166671526348E-5	DESIGN
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9960255168159194	WITHOUT_CLASSIFICATION	0.003974483184080472	DESIGN
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9973250194519928	WITHOUT_CLASSIFICATION	0.0026749805480071453	DESIGN
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.997154915378371	WITHOUT_CLASSIFICATION	0.0028450846216290034	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9999869850596852	WITHOUT_CLASSIFICATION	1.301494031487855E-5	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9999869850596852	WITHOUT_CLASSIFICATION	1.301494031487855E-5	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9999869850596852	WITHOUT_CLASSIFICATION	1.301494031487855E-5	DESIGN
do nothing	WITHOUT_CLASSIFICATION	0.9999869850596852	WITHOUT_CLASSIFICATION	1.301494031487855E-5	DESIGN
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999929212066225	WITHOUT_CLASSIFICATION	7.0787933775576195E-6	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9996810232449962	WITHOUT_CLASSIFICATION	3.1897675500384157E-4	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9996810232449962	WITHOUT_CLASSIFICATION	3.1897675500384157E-4	DESIGN
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9996810232449962	WITHOUT_CLASSIFICATION	3.1897675500384157E-4	DESIGN
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.998321290386312	WITHOUT_CLASSIFICATION	0.0016787096136880461	DESIGN
finally with no exception	WITHOUT_CLASSIFICATION	0.9999896434102571	WITHOUT_CLASSIFICATION	1.0356589742898532E-5	DESIGN
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9905332965271612	WITHOUT_CLASSIFICATION	0.00946670347283887	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9081609898088744	WITHOUT_CLASSIFICATION	0.09183901019112561	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9081609898088744	WITHOUT_CLASSIFICATION	0.09183901019112561	DESIGN
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.9560117377987277	WITHOUT_CLASSIFICATION	0.04398826220127227	DESIGN
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999327960901767	WITHOUT_CLASSIFICATION	6.720390982330438E-5	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9999539523820721	WITHOUT_CLASSIFICATION	4.604761792789704E-5	DESIGN
not a class	WITHOUT_CLASSIFICATION	0.9999539523820721	WITHOUT_CLASSIFICATION	4.604761792789704E-5	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9942276063645629	WITHOUT_CLASSIFICATION	0.005772393635437084	DESIGN
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9942276063645629	WITHOUT_CLASSIFICATION	0.005772393635437084	DESIGN
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9913768794600105	WITHOUT_CLASSIFICATION	0.008623120539989476	DESIGN
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9959950383681786	WITHOUT_CLASSIFICATION	0.00400496163182137	DESIGN
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9994226996701397	WITHOUT_CLASSIFICATION	5.773003298601926E-4	DESIGN
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9956404046903115	WITHOUT_CLASSIFICATION	0.004359595309688447	DESIGN
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.9999705147529475	WITHOUT_CLASSIFICATION	2.9485247052591302E-5	DESIGN
create the default thread group	WITHOUT_CLASSIFICATION	0.9999002819672639	WITHOUT_CLASSIFICATION	9.97180327360932E-5	DESIGN
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9992957132739398	WITHOUT_CLASSIFICATION	7.042867260601489E-4	DESIGN
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9995915744947919	WITHOUT_CLASSIFICATION	4.0842550520820374E-4	DESIGN
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.9926208193154458	WITHOUT_CLASSIFICATION	0.007379180684554262	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9996408842244541	WITHOUT_CLASSIFICATION	3.59115775546011E-4	DESIGN
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9996408842244541	WITHOUT_CLASSIFICATION	3.59115775546011E-4	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999384071579932	WITHOUT_CLASSIFICATION	6.159284200678689E-5	DESIGN
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999384071579932	WITHOUT_CLASSIFICATION	6.159284200678689E-5	DESIGN
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.998177363363335	WITHOUT_CLASSIFICATION	0.001822636636665069	DESIGN
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9990657555038184	WITHOUT_CLASSIFICATION	9.342444961815738E-4	DESIGN
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994743553571688	WITHOUT_CLASSIFICATION	5.256446428311215E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994743553571688	WITHOUT_CLASSIFICATION	5.256446428311215E-4	DESIGN
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994743553571688	WITHOUT_CLASSIFICATION	5.256446428311215E-4	DESIGN
line 286	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 476	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 513	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 530	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 533	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 537	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 551	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
end loop	WITHOUT_CLASSIFICATION	0.9999213508274283	WITHOUT_CLASSIFICATION	7.864917257162816E-5	DESIGN
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9972052742365243	WITHOUT_CLASSIFICATION	0.0027947257634757653	DESIGN
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9975024017834456	WITHOUT_CLASSIFICATION	0.002497598216554401	DESIGN
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9999004062748441	WITHOUT_CLASSIFICATION	9.959372515586966E-5	DESIGN
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9997856660192436	WITHOUT_CLASSIFICATION	2.1433398075644002E-4	DESIGN
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9957276956396355	WITHOUT_CLASSIFICATION	0.004272304360364538	DESIGN
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9081609898088744	WITHOUT_CLASSIFICATION	0.09183901019112561	DESIGN
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9947554267292426	WITHOUT_CLASSIFICATION	0.005244573270757451	DESIGN
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9985741134625752	WITHOUT_CLASSIFICATION	0.0014258865374247817	DESIGN
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9984477656796419	WITHOUT_CLASSIFICATION	0.0015522343203580474	DESIGN
value	WITHOUT_CLASSIFICATION	0.999899733291976	WITHOUT_CLASSIFICATION	1.0026670802405615E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.999899733291976	WITHOUT_CLASSIFICATION	1.0026670802405615E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.999899733291976	WITHOUT_CLASSIFICATION	1.0026670802405615E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.999899733291976	WITHOUT_CLASSIFICATION	1.0026670802405615E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.999899733291976	WITHOUT_CLASSIFICATION	1.0026670802405615E-4	DESIGN
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999113734108903	WITHOUT_CLASSIFICATION	8.862658910963415E-5	DESIGN
value	WITHOUT_CLASSIFICATION	0.999899733291976	WITHOUT_CLASSIFICATION	1.0026670802405615E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.999899733291976	WITHOUT_CLASSIFICATION	1.0026670802405615E-4	DESIGN
value	WITHOUT_CLASSIFICATION	0.999899733291976	WITHOUT_CLASSIFICATION	1.0026670802405615E-4	DESIGN
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.9265651841334508	WITHOUT_CLASSIFICATION	0.07343481586654911	DESIGN
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9918685102906494	WITHOUT_CLASSIFICATION	0.008131489709350626	DESIGN
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.999958535990314	WITHOUT_CLASSIFICATION	4.146400968605809E-5	DESIGN
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9973321829374716	WITHOUT_CLASSIFICATION	0.002667817062528335	DESIGN
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9982025930622478	WITHOUT_CLASSIFICATION	0.0017974069377522473	DESIGN
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9993466210137805	WITHOUT_CLASSIFICATION	6.533789862195167E-4	DESIGN
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9970486705419416	WITHOUT_CLASSIFICATION	0.0029513294580585415	DESIGN
line 572	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 601	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 625	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 649	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 691	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 723	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 732	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 745	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 766	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 785	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 794	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 800	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 812	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 827	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 839	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 845	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 864	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 886	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 896	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 911	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 929	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 952	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 970	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 972	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 991	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1011	WITHOUT_CLASSIFICATION	0.9996433469755572	WITHOUT_CLASSIFICATION	3.5665302444277215E-4	DESIGN
line 1026	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1038	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1067	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1085	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1097	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1105	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1122	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1133	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1145	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1169	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1201	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1210	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1229	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1261	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1287	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1293	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1307	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1320	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1325	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1363	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1398	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1448	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1456	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1473	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1492	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1513	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1523	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1562	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1582	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1603	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1615	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1620	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1635	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1652	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1681	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1708	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1716	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1755	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1772	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1789	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999530626110165	WITHOUT_CLASSIFICATION	4.693738898349722E-5	DESIGN
force for args	WITHOUT_CLASSIFICATION	0.9999350317156344	WITHOUT_CLASSIFICATION	6.496828436557755E-5	DESIGN
last expression should not be void	WITHOUT_CLASSIFICATION	0.9973186289417665	WITHOUT_CLASSIFICATION	0.0026813710582336485	DESIGN
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9989753155613982	WITHOUT_CLASSIFICATION	0.0010246844386017926	DESIGN
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9981567741641699	WITHOUT_CLASSIFICATION	0.001843225835830133	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999574858940009	WITHOUT_CLASSIFICATION	4.251410599905474E-5	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999574858940009	WITHOUT_CLASSIFICATION	4.251410599905474E-5	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999574858940009	WITHOUT_CLASSIFICATION	4.251410599905474E-5	DESIGN
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999574858940009	WITHOUT_CLASSIFICATION	4.251410599905474E-5	DESIGN
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9852218164128201	WITHOUT_CLASSIFICATION	0.014778183587179998	DESIGN
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.9536148237242422	DESIGN	0.046385176275757674	WITHOUT_CLASSIFICATION
line 313	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 339	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 361	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 413	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 451	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 472	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 500	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 515	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 555	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 582	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 619	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 636	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 669	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 703	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 776	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 814	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 823	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 854	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 872	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 905	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 925	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 958	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 992	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1047	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1072	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1081	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1108	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1136	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1168	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1192	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1241	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1267	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1286	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1301	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1314	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1333	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1362	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1395	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1420	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1439	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1476	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1535	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1588	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1618	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1643	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1669	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1728	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1753	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1779	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1794	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1812	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1837	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1895	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1925	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1950	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 1992	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
line 2014	WITHOUT_CLASSIFICATION	0.9999452708654852	WITHOUT_CLASSIFICATION	5.4729134514806206E-5	DESIGN
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9935093066238865	WITHOUT_CLASSIFICATION	0.006490693376113515	DESIGN
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999958276497021	WITHOUT_CLASSIFICATION	4.172350297909745E-5	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984489515878904	WITHOUT_CLASSIFICATION	0.0015510484121096183	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984489515878904	WITHOUT_CLASSIFICATION	0.0015510484121096183	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984489515878904	WITHOUT_CLASSIFICATION	0.0015510484121096183	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984489515878904	WITHOUT_CLASSIFICATION	0.0015510484121096183	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984489515878904	WITHOUT_CLASSIFICATION	0.0015510484121096183	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984489515878904	WITHOUT_CLASSIFICATION	0.0015510484121096183	DESIGN
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984489515878904	WITHOUT_CLASSIFICATION	0.0015510484121096183	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9640541121738723	WITHOUT_CLASSIFICATION	0.035945887826127745	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9640541121738723	WITHOUT_CLASSIFICATION	0.035945887826127745	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9640541121738723	WITHOUT_CLASSIFICATION	0.035945887826127745	DESIGN
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9640541121738723	WITHOUT_CLASSIFICATION	0.035945887826127745	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9993270839479915	WITHOUT_CLASSIFICATION	6.729160520085342E-4	DESIGN
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9993270839479915	WITHOUT_CLASSIFICATION	6.729160520085342E-4	DESIGN
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.6608345329426869	WITHOUT_CLASSIFICATION	0.3391654670573132	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9993040833502472	WITHOUT_CLASSIFICATION	6.959166497528256E-4	DESIGN
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9993040833502472	WITHOUT_CLASSIFICATION	6.959166497528256E-4	DESIGN
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9926292897327478	WITHOUT_CLASSIFICATION	0.007370710267252127	DESIGN
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9998292866920961	WITHOUT_CLASSIFICATION	1.7071330790391224E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9993094992171696	WITHOUT_CLASSIFICATION	6.905007828303721E-4	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9980649017252742	WITHOUT_CLASSIFICATION	0.001935098274725774	DESIGN
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9980649017252742	WITHOUT_CLASSIFICATION	0.001935098274725774	DESIGN
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999635706476673	WITHOUT_CLASSIFICATION	3.6429352332690204E-5	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.999969878136982	WITHOUT_CLASSIFICATION	3.012186301801788E-5	DESIGN
end suffix iteration	WITHOUT_CLASSIFICATION	0.999969878136982	WITHOUT_CLASSIFICATION	3.012186301801788E-5	DESIGN
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.9932929812350043	WITHOUT_CLASSIFICATION	0.006707018764995688	DESIGN
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.9887805235463822	DESIGN	0.01121947645361774	WITHOUT_CLASSIFICATION
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9916132722622063	WITHOUT_CLASSIFICATION	0.008386727737793701	DESIGN
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999169347059262	WITHOUT_CLASSIFICATION	8.306529407386779E-5	DESIGN
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.999825008226492	WITHOUT_CLASSIFICATION	1.7499177350794662E-4	DESIGN
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9994781429489056	WITHOUT_CLASSIFICATION	5.218570510943213E-4	DESIGN
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9998692901787766	WITHOUT_CLASSIFICATION	1.3070982122346516E-4	DESIGN
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9984895725020969	WITHOUT_CLASSIFICATION	0.001510427497903066	DESIGN
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9991569194744402	WITHOUT_CLASSIFICATION	8.430805255597412E-4	DESIGN
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9996297870576706	WITHOUT_CLASSIFICATION	3.7021294232945077E-4	DESIGN
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9997622052652835	WITHOUT_CLASSIFICATION	2.3779473471650754E-4	DESIGN
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.8900468148050676	WITHOUT_CLASSIFICATION	0.10995318519493236	DESIGN
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9987276235864961	WITHOUT_CLASSIFICATION	0.0012723764135039136	DESIGN
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9574550640845733	WITHOUT_CLASSIFICATION	0.042544935915426824	DESIGN
first digit is always printed	WITHOUT_CLASSIFICATION	0.9999020921943654	WITHOUT_CLASSIFICATION	9.790780563466306E-5	DESIGN
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9995906089979048	WITHOUT_CLASSIFICATION	4.0939100209527225E-4	DESIGN
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9974926261662022	WITHOUT_CLASSIFICATION	0.002507373833797723	DESIGN
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9951633018515134	WITHOUT_CLASSIFICATION	0.004836698148486546	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9999892079927793	WITHOUT_CLASSIFICATION	1.0792007220625163E-5	DESIGN
now some data...	WITHOUT_CLASSIFICATION	0.9999892079927793	WITHOUT_CLASSIFICATION	1.0792007220625163E-5	DESIGN
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.999871253280095	WITHOUT_CLASSIFICATION	1.2874671990505506E-4	DESIGN
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999879767825596	WITHOUT_CLASSIFICATION	1.20232174404722E-5	DESIGN
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9954791312784114	WITHOUT_CLASSIFICATION	0.004520868721588709	DESIGN
switch	WITHOUT_CLASSIFICATION	0.9999163396226415	WITHOUT_CLASSIFICATION	8.366037735860225E-5	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999538622960091	WITHOUT_CLASSIFICATION	4.613770399084415E-5	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999538622960091	WITHOUT_CLASSIFICATION	4.613770399084415E-5	DESIGN
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999538622960091	WITHOUT_CLASSIFICATION	4.613770399084415E-5	DESIGN
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999750911647785	WITHOUT_CLASSIFICATION	2.490883522154527E-5	DESIGN
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9995152880537964	WITHOUT_CLASSIFICATION	4.847119462036111E-4	DESIGN
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999505330653538	WITHOUT_CLASSIFICATION	4.9466934646298816E-5	DESIGN
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9982073044142867	WITHOUT_CLASSIFICATION	0.0017926955857132997	DESIGN
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.8638599720898852	WITHOUT_CLASSIFICATION	0.13614002791011479	DESIGN
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999223038672012	WITHOUT_CLASSIFICATION	7.769613279885057E-5	DESIGN
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9970073609248432	WITHOUT_CLASSIFICATION	0.0029926390751567273	DESIGN
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9997187841708185	WITHOUT_CLASSIFICATION	2.812158291815325E-4	DESIGN
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9612592299517533	WITHOUT_CLASSIFICATION	0.03874077004824664	DESIGN
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999275202041532	WITHOUT_CLASSIFICATION	7.247979584680328E-5	DESIGN
reset buffer	WITHOUT_CLASSIFICATION	0.9999590060857334	WITHOUT_CLASSIFICATION	4.099391426650946E-5	DESIGN
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9900535062341949	WITHOUT_CLASSIFICATION	0.009946493765805227	DESIGN
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8006060692321065	DESIGN	0.1993939307678935	WITHOUT_CLASSIFICATION
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.8111980636394801	WITHOUT_CLASSIFICATION	0.18880193636051987	DESIGN
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999101928135827	WITHOUT_CLASSIFICATION	8.980718641725934E-5	DESIGN
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999398126361307	WITHOUT_CLASSIFICATION	6.0187363869384356E-5	DESIGN
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9483329641117314	WITHOUT_CLASSIFICATION	0.051667035888268646	DESIGN
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999682526993735	WITHOUT_CLASSIFICATION	3.174730062641843E-5	DESIGN
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9998674977153957	WITHOUT_CLASSIFICATION	1.3250228460425648E-4	DESIGN
Fixme: Do we need the check or does Main.java not call this...they should consolidate	DESIGN	0.9971569916937729	WITHOUT_CLASSIFICATION	0.0028430083062271068	DESIGN
FIXME: move out of this class!	DESIGN	0.9999241659978987	WITHOUT_CLASSIFICATION	7.583400210133871E-5	DESIGN
this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI we search all keys for a case-insensitive match, and use that	DESIGN	0.9490161179742771	WITHOUT_CLASSIFICATION	0.05098388202572294	DESIGN
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9932146021094637	WITHOUT_CLASSIFICATION	0.006785397890536376	DESIGN
FIXME: Don't allow multiple threads to do this at once	DESIGN	0.7673482398013103	WITHOUT_CLASSIFICATION	0.2326517601986897	DESIGN
TODO: eliminate?	DESIGN	0.9081609898088744	WITHOUT_CLASSIFICATION	0.09183901019112561	DESIGN
TODO: People extending GzipWriter/reader will break. Find better way here.	DESIGN	0.9486954385877507	DESIGN	0.05130456141224933	WITHOUT_CLASSIFICATION
For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9996054748622131	WITHOUT_CLASSIFICATION	3.945251377869113E-4	DESIGN
we might need to perform a DST correction	DESIGN	0.9476414894175382	WITHOUT_CLASSIFICATION	0.05235851058246177	DESIGN
rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9970982404189555	WITHOUT_CLASSIFICATION	0.0029017595810445357	DESIGN
rb_ary_push_m FIXME: Whis is this named "push_m"?	DESIGN	0.9968971874154163	WITHOUT_CLASSIFICATION	0.0031028125845836843	DESIGN
from DUP_SETUP rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9970982404189555	WITHOUT_CLASSIFICATION	0.0029017595810445357	DESIGN
TODO: ary_sort_check should be done here	DESIGN	0.9882855427140196	DESIGN	0.011714457285980398	WITHOUT_CLASSIFICATION
TODO: ary_sort_check should be done here	DESIGN	0.9882855427140196	DESIGN	0.011714457285980398	WITHOUT_CLASSIFICATION
TODO: is this correct ?	DESIGN	0.6735087708511961	DESIGN	0.3264912291488041	WITHOUT_CLASSIFICATION
TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9585460857917268	DESIGN	0.041453914208273185	WITHOUT_CLASSIFICATION
TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. How can we support this operation?	DESIGN	0.9935949114706766	DESIGN	0.00640508852932341	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.768639302166882	DESIGN	0.23136069783311794	WITHOUT_CLASSIFICATION
FIXME: This table will get moved into POSIX library so we can get all actual supported signals. This is a quick fix to support basic signals until that happens.	DESIGN	0.8698296868124537	DESIGN	0.1301703131875463	WITHOUT_CLASSIFICATION
The implementations of these are all bonus (see TODO above) I was going to throw an error from these, but it appears to be the wrong place to do it.	DESIGN	0.9791953213837624	DESIGN	0.020804678616237592	WITHOUT_CLASSIFICATION
TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9187777888262303	DESIGN	0.08122221117376965	WITHOUT_CLASSIFICATION
TODO: remove	DESIGN	0.920324254311538	WITHOUT_CLASSIFICATION	0.07967574568846192	DESIGN
FIXME moved this here to get what's obviously a utility method out of IRubyObject. perhaps security methods should find their own centralized home at some point.	DESIGN	0.8653687478482552	DESIGN	0.13463125215174482	WITHOUT_CLASSIFICATION
FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.9982164196827903	WITHOUT_CLASSIFICATION	0.0017835803172096573	DESIGN
TODO: Should frozen error have its own distinct class? If not should more share?	DESIGN	0.980282385126105	DESIGN	0.019717614873895003	WITHOUT_CLASSIFICATION
TODO: this is kinda gross	DESIGN	0.7767813435643085	WITHOUT_CLASSIFICATION	0.2232186564356915	DESIGN
Not sure how well this works, but it works much better than just currentTimeMillis by itself.	DESIGN	0.9967659488365024	WITHOUT_CLASSIFICATION	0.0032340511634975093	DESIGN
TODO: exec should replace the current process. This could be possible with JNA.	DESIGN	0.8488698197480299	DESIGN	0.1511301802519701	WITHOUT_CLASSIFICATION
FIXME: In order for Thread to play well with the standard 'new' behavior, it must provide an allocator that can create empty object instances which initialize then fills with appropriate data.	DESIGN	0.986610285664407	WITHOUT_CLASSIFICATION	0.013389714335592986	DESIGN
TODO: not sure that we should skip calling join() altogether. Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.8670339961880772	DESIGN	0.1329660038119228	WITHOUT_CLASSIFICATION
FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.964310432516423	WITHOUT_CLASSIFICATION	0.03568956748357698	DESIGN
FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.8895151157632343	WITHOUT_CLASSIFICATION	0.11048488423676574	DESIGN
TODO: no java stringity	DESIGN	0.9659154242911142	WITHOUT_CLASSIFICATION	0.03408457570888574	DESIGN
need to reexamine this	DESIGN	0.9994952112089589	WITHOUT_CLASSIFICATION	5.047887910412245E-4	DESIGN
TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.813424181789709	DESIGN	0.18657581821029107	WITHOUT_CLASSIFICATION
TODO: why are we duplicating the constants here, and then in File::Constants below? File::Constants is included in IO.	DESIGN	0.8117636554750126	DESIGN	0.1882363445249874	WITHOUT_CLASSIFICATION
TODO: this method is not present in MRI!	DESIGN	0.9783350130753057	DESIGN	0.021664986924694343	WITHOUT_CLASSIFICATION
TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.6015061972641481	DESIGN	0.39849380273585194	WITHOUT_CLASSIFICATION
Something wrong we don't know the cwd... TODO: Is this behavior really desirable? /mov	DESIGN	0.9881616722750237	DESIGN	0.011838327724976241	WITHOUT_CLASSIFICATION
Fixme: This does not have exact same semantics as RubyArray.join, but they probably could be consolidated (perhaps as join(args[], sep, doChomp)).	DESIGN	0.9647188558605962	WITHOUT_CLASSIFICATION	0.03528114413940382	DESIGN
TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9937874236181229	DESIGN	0.006212576381877137	WITHOUT_CLASSIFICATION
TODO: Implement tty? and isatty. We have no real capability to determine this from java, but if we could set tty status, then we could invoke jruby differently to allow stdin to return true on this. This would allow things like cgi.rb to work properly.	DESIGN	0.9931719080279738	DESIGN	0.006828091972026223	WITHOUT_CLASSIFICATION
TODO: better error handling	DESIGN	0.6024955731030166	WITHOUT_CLASSIFICATION	0.39750442689698345	DESIGN
this seems unlikely to happen unless it's a totally bogus fileno ...so do we even need to bother trying to create one?	DESIGN	0.9922265384687824	WITHOUT_CLASSIFICATION	0.007773461531217659	DESIGN
IN FACT, we should probably raise an error, yes?	DESIGN	0.9936575155996568	WITHOUT_CLASSIFICATION	0.0063424844003432505	DESIGN
TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9592415645516496	DESIGN	0.040758435448350464	WITHOUT_CLASSIFICATION
FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9657302588953883	WITHOUT_CLASSIFICATION	0.03426974110461164	DESIGN
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9884538154352313	DESIGN	0.011546184564768788	WITHOUT_CLASSIFICATION
FIXME: I don't like the null checks here	DESIGN	0.9542524585365421	WITHOUT_CLASSIFICATION	0.04574754146345795	DESIGN
TODO: handle writing into original buffer better	DESIGN	0.9855641603792844	DESIGN	0.014435839620715627	WITHOUT_CLASSIFICATION
TODO: is this the right thing to do?	DESIGN	0.9974678269210426	DESIGN	0.002532173078957324	WITHOUT_CLASSIFICATION
TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9404199602972992	DESIGN	0.05958003970270073	WITHOUT_CLASSIFICATION
FIXME: If NativeException is expected to be used from Ruby code, it should provide a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9987572395434255	WITHOUT_CLASSIFICATION	0.001242760456574478	DESIGN
FIXME: finalizer should be dupped here	DESIGN	0.9728291572542489	WITHOUT_CLASSIFICATION	0.027170842745751062	DESIGN
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9993396776742465	WITHOUT_CLASSIFICATION	6.603223257534533E-4	DESIGN
FIXME: Obvious issue that not all platforms can display all attributes. Ugly hacks. Using generic posix library makes pushing inspect behavior into specific system impls rather painful.	DESIGN	0.6321109078981304	DESIGN	0.36788909210186976	WITHOUT_CLASSIFICATION
Workaround for JRUBY-4149	DESIGN	0.9998952813034341	WITHOUT_CLASSIFICATION	1.047186965659052E-4	DESIGN
TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9669199054071903	WITHOUT_CLASSIFICATION	0.03308009459280969	DESIGN
FIXME: This is copied code from RubyArray. Both RE, Struct, and Array should share one impl This is also hacky since I construct ruby objects to access ruby arrays through aref instead of something lower.	DESIGN	0.8691036171338308	DESIGN	0.13089638286616917	WITHOUT_CLASSIFICATION
FIXME: We should not be regenerating this over and over	DESIGN	0.9781075111437701	WITHOUT_CLASSIFICATION	0.021892488856229915	DESIGN
FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9877040032905654	WITHOUT_CLASSIFICATION	0.012295996709434731	DESIGN
TODO: Consider a better way of synchronizing	DESIGN	0.9595438465474323	DESIGN	0.04045615345256766	WITHOUT_CLASSIFICATION
FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9916981568658354	WITHOUT_CLASSIFICATION	0.008301843134164596	DESIGN
A cloned method now belongs to a new class. Set it. TODO: Make DynamicMethod immutable	DESIGN	0.9546863363766741	DESIGN	0.04531366362332599	WITHOUT_CLASSIFICATION
FIXME: figure out why we get null sometimes	DESIGN	0.9952096602876445	WITHOUT_CLASSIFICATION	0.004790339712355539	DESIGN
FIXME: Can get optimized for IEqlNode	DESIGN	0.9951591656429931	WITHOUT_CLASSIFICATION	0.00484083435700694	DESIGN
rb_mod_remove_cvar FIXME: any good reason to have two identical methods? (same as remove_class_variable)	DESIGN	0.9997422285642267	WITHOUT_CLASSIFICATION	2.577714357733414E-4	DESIGN
FIXME: these descriptions should probably be moved out, to Constantine project which deals with all platform-dependent constants.	DESIGN	0.7638433591784057	WITHOUT_CLASSIFICATION	0.23615664082159424	DESIGN
TODO: what about n arg?	DESIGN	0.7955439406634406	WITHOUT_CLASSIFICATION	0.20445605933655947	DESIGN
TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.8738367915618921	DESIGN	0.12616320843810788	WITHOUT_CLASSIFICATION
regular division with some default precision TODO: proper algorithm to set the precision	DESIGN	0.570025025746198	DESIGN	0.42997497425380216	WITHOUT_CLASSIFICATION
TODO: better algorithm to set precision needed	DESIGN	0.9126813267885496	DESIGN	0.08731867321145032	WITHOUT_CLASSIFICATION
FIXME: what should these really be? Numeric? assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9982071410186787	WITHOUT_CLASSIFICATION	0.0017928589813212019	DESIGN
FIXME: what should this really be? assert x instanceof RubyComplex;	DESIGN	0.9950764721890086	WITHOUT_CLASSIFICATION	0.004923527810991323	DESIGN
FIXME: the code below is a copy of RubyIO.puts, and we should avoid copy-paste.	DESIGN	0.9661340083036418	WITHOUT_CLASSIFICATION	0.03386599169635828	DESIGN
Yow...this is still ugly	DESIGN	0.9999498297508784	WITHOUT_CLASSIFICATION	5.0170249121589096E-5	DESIGN
end hack	DESIGN	0.9962188195312849	WITHOUT_CLASSIFICATION	0.003781180468715167	DESIGN
TODO: Should next and return also catch here?	DESIGN	0.7125801841450986	WITHOUT_CLASSIFICATION	0.28741981585490145	DESIGN
TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9978433681292956	DESIGN	0.002156631870704341	WITHOUT_CLASSIFICATION
TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.7661241691869619	DESIGN	0.23387583081303812	WITHOUT_CLASSIFICATION
FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.99239848597389	WITHOUT_CLASSIFICATION	0.007601514026109955	DESIGN
TODO: This is almost RubyModule#instance_methods on the metaClass. Perhaps refactor.	DESIGN	0.8835065939709515	DESIGN	0.11649340602904841	WITHOUT_CLASSIFICATION
The following three methods must be defined fast, since they expect to modify the current frame (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9998639005986173	WITHOUT_CLASSIFICATION	1.3609940138268098E-4	DESIGN
FIXME: I think this chunk is equivalent to MRI id2name (and not our public method id2name). Make into method if used more than once.	DESIGN	0.9513724482684638	DESIGN	0.04862755173153618	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5404918050021911	DESIGN	0.45950819499780904	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5404918050021911	DESIGN	0.45950819499780904	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5404918050021911	DESIGN	0.45950819499780904	WITHOUT_CLASSIFICATION
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.559083860287512	WITHOUT_CLASSIFICATION	0.44091613971248794	DESIGN
TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9792983562004713	DESIGN	0.02070164379952869	WITHOUT_CLASSIFICATION
TODO: wire into new exception handling mechanism	DESIGN	0.8867003844919495	DESIGN	0.11329961550805046	WITHOUT_CLASSIFICATION
FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name never exist at the same time.	DESIGN	0.9997971045647542	WITHOUT_CLASSIFICATION	2.0289543524571816E-4	DESIGN
TODO: do above but not below for additional newline nodes	DESIGN	0.5128460659416616	DESIGN	0.4871539340583383	WITHOUT_CLASSIFICATION
TODO: Figure out how this can happen and possibly remove	DESIGN	0.5240398793574919	DESIGN	0.4759601206425082	WITHOUT_CLASSIFICATION
TODO: At least ParserSupport.attrset passes argsNode as null. ImplicitNil is wrong magic for setupArgs since it will IRubyObject[] { nil }. So we need to figure out a nice fast null pattern for setupArgs. assert argsNode != null : "receiverNode is not null";	DESIGN	0.966451280011026	DESIGN	0.033548719988974095	WITHOUT_CLASSIFICATION
FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9069924687681649	WITHOUT_CLASSIFICATION	0.09300753123183514	DESIGN
FIXME: I use a for block to implement END node because we need a proc which captures its enclosing scope. ForBlock now represents these node and should be renamed.	DESIGN	0.7098195082820962	WITHOUT_CLASSIFICATION	0.2901804917179038	DESIGN
method has more than 500 lines; we'll need to split it and therefore need to use a heap-based scope	DESIGN	0.5283166802270578	DESIGN	0.4716833197729422	WITHOUT_CLASSIFICATION
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9916859624341194	DESIGN	0.00831403756588061	WITHOUT_CLASSIFICATION
If it's a single-arg when but contains an array, we know it's a real literal array FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9969562359329672	WITHOUT_CLASSIFICATION	0.0030437640670328008	DESIGN
TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9916859624341194	DESIGN	0.00831403756588061	WITHOUT_CLASSIFICATION
XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9959779170108846	WITHOUT_CLASSIFICATION	0.004022082989115474	DESIGN
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.9116150613063242	DESIGN	0.0883849386936759	WITHOUT_CLASSIFICATION
if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.	DESIGN	0.9116150613063242	DESIGN	0.0883849386936759	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9976989696504726	WITHOUT_CLASSIFICATION	0.002301030349527517	DESIGN
TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9921950349070531	DESIGN	0.007804965092946938	WITHOUT_CLASSIFICATION
FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9976989696504726	WITHOUT_CLASSIFICATION	0.002301030349527517	DESIGN
arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9776994825126198	WITHOUT_CLASSIFICATION	0.022300517487380177	DESIGN
FIXME: This is temporary since the variable compilers assume we want args already on stack for assignment. We just pop and continue with 1.9 args logic.	DESIGN	0.7109769909125724	WITHOUT_CLASSIFICATION	0.28902300908742773	DESIGN
TODO: reads/writes from frame TODO: information on scoping TODO: visibility?	DESIGN	0.6075894599598511	DESIGN	0.3924105400401488	WITHOUT_CLASSIFICATION
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9409007289449192	DESIGN	0.05909927105508098	WITHOUT_CLASSIFICATION
TODO: cache?	DESIGN	0.9081609898088744	WITHOUT_CLASSIFICATION	0.09183901019112561	DESIGN
TODO: cache?	DESIGN	0.9081609898088744	WITHOUT_CLASSIFICATION	0.09183901019112561	DESIGN
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.999696507330809	WITHOUT_CLASSIFICATION	3.0349266919100815E-4	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9988778317946934	WITHOUT_CLASSIFICATION	0.0011221682053065979	DESIGN
FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9937834221635953	WITHOUT_CLASSIFICATION	0.006216577836404769	DESIGN
install invokedynamic bootstrapper TODO need to abstract this setup behind another compiler interface	DESIGN	0.9846424557346054	DESIGN	0.015357544265394603	WITHOUT_CLASSIFICATION
FIXME: This isn't right for within ensured/rescued code	DESIGN	0.8139894352865245	DESIGN	0.1860105647134755	WITHOUT_CLASSIFICATION
SSS FIXME: Deprecated! Going forward, all instructions should come from the CFG	DESIGN	0.9957908795643178	WITHOUT_CLASSIFICATION	0.004209120435682285	DESIGN
SSS FIXME: Do we need to check if l is same as whatever popped?	DESIGN	0.9801673597675322	WITHOUT_CLASSIFICATION	0.019832640232467797	DESIGN
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9517805461328013	WITHOUT_CLASSIFICATION	0.048219453867198725	DESIGN
SSS FIXME: I added this in. Is this correct?	DESIGN	0.9248896123900084	WITHOUT_CLASSIFICATION	0.07511038760999157	DESIGN
SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9517805461328013	WITHOUT_CLASSIFICATION	0.048219453867198725	DESIGN
SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes! i.e. |(a,b)|?	DESIGN	0.9603488991193767	WITHOUT_CLASSIFICATION	0.039651100880623284	DESIGN
SSS FIXME: Can this return anything other than nil?	DESIGN	0.995739939694539	WITHOUT_CLASSIFICATION	0.0042600603054610145	DESIGN
SSS FIXME: What happens to the add class in this case??	DESIGN	0.9915550657642497	WITHOUT_CLASSIFICATION	0.008444934235750382	DESIGN
CON FIXME: I don't know how to make case be an expression...does that logic need to go here?	DESIGN	0.851982229937907	WITHOUT_CLASSIFICATION	0.14801777006209307	DESIGN
SSS FIXME: Where is this set up? How is this diff from ClassVarDeclNode??	DESIGN	0.9551138916872437	WITHOUT_CLASSIFICATION	0.044886108312756245	DESIGN
SSS FIXME: Is this correct?	DESIGN	0.9917120799401881	WITHOUT_CLASSIFICATION	0.00828792005981198	DESIGN
SSS FIXME: Used anywhere? I don't see calls to this anywhere public Operand buildDAsgnAssignment(Node node, IR_Scope s) { DAsgnNode dasgnNode = (DAsgnNode) node; s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth()); }	DESIGN	0.9989319773498031	WITHOUT_CLASSIFICATION	0.001068022650196873	DESIGN
SSS FIXME: Receiver -- this is the class meta object basically? Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9996732998505797	WITHOUT_CLASSIFICATION	3.267001494201852E-4	DESIGN
self = args[0] SSS FIXME: Verify that this is correct	DESIGN	0.998095297761347	WITHOUT_CLASSIFICATION	0.0019047022386530336	DESIGN
SSS FIXME: Is this correct?	DESIGN	0.9917120799401881	WITHOUT_CLASSIFICATION	0.00828792005981198	DESIGN
SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9887267428102157	WITHOUT_CLASSIFICATION	0.011273257189784253	DESIGN
add a "self" recv here TODO: is this right?	DESIGN	0.8973796259234709	DESIGN	0.10262037407652913	WITHOUT_CLASSIFICATION
SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.8980903697216037	WITHOUT_CLASSIFICATION	0.10190963027839635	DESIGN
SSS FIXME: Where does this go? m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9967385055246227	WITHOUT_CLASSIFICATION	0.0032614944753773336	DESIGN
SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9686200859288115	WITHOUT_CLASSIFICATION	0.03137991407118841	DESIGN
SSS FIXME: Should this be a string literal or a string? Dummy class for the script	DESIGN	0.9983221653919682	WITHOUT_CLASSIFICATION	0.001677834608031795	DESIGN
SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9835919271950045	WITHOUT_CLASSIFICATION	0.0164080728049954	DESIGN
SSS FIXME: Correct? Where does closure arg come from?	DESIGN	0.9988174697969237	WITHOUT_CLASSIFICATION	0.0011825302030762945	DESIGN
SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9980676720080743	WITHOUT_CLASSIFICATION	0.0019323279919256698	DESIGN
Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9277149707223962	WITHOUT_CLASSIFICATION	0.07228502927760386	DESIGN
SSS FIXME: This should never get called for constant svalues	DESIGN	0.9775072568611299	WITHOUT_CLASSIFICATION	0.02249274313887008	DESIGN
SSS FIXME: Should this be Operand or CompoundString? Can it happen that symbols are built out of other than compound strings? Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9592207651445711	WITHOUT_CLASSIFICATION	0.04077923485542898	DESIGN
TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9920717983210993	DESIGN	0.00792820167890072	WITHOUT_CLASSIFICATION
Hack in to replace usual readline with this	DESIGN	0.9941141301768441	WITHOUT_CLASSIFICATION	0.0058858698231558015	DESIGN
bit risky if someone changes completor, but useful for method calls	DESIGN	0.9997833762727854	WITHOUT_CLASSIFICATION	2.1662372721460444E-4	DESIGN
FIXME: This determine module is in a strange location and should somehow be in block	DESIGN	0.858150073267012	WITHOUT_CLASSIFICATION	0.14184992673298794	DESIGN
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9846179286824163	WITHOUT_CLASSIFICATION	0.015382071317583785	DESIGN
we basically ignore protocol. let someone report it...	DESIGN	0.9986818145199635	WITHOUT_CLASSIFICATION	0.0013181854800364161	DESIGN
Workaround for a bug in Sun's JDK 1.5.x, see http:bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9963562503060605	WITHOUT_CLASSIFICATION	0.0036437496939394753	DESIGN
context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9999162122888401	WITHOUT_CLASSIFICATION	8.378771115981106E-5	DESIGN
FIXME we want to eliminate these type casts when possible	DESIGN	0.9748595271645194	WITHOUT_CLASSIFICATION	0.02514047283548055	DESIGN
TODO: Determine whether we should perhaps store non-singleton class in the implementationClass	DESIGN	0.9055223719775042	DESIGN	0.09447762802249575	WITHOUT_CLASSIFICATION
FIXME: set up a CallConfiguration for this	DESIGN	0.9848700003319798	WITHOUT_CLASSIFICATION	0.015129999668020238	DESIGN
FIXME: set up a call configuration for this	DESIGN	0.9820905122979737	WITHOUT_CLASSIFICATION	0.017909487702026283	DESIGN
TODO: make this do specific-arity calling	DESIGN	0.9773899862916288	DESIGN	0.02261001370837126	WITHOUT_CLASSIFICATION
add 'new' with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9706995601893686	DESIGN	0.02930043981063141	WITHOUT_CLASSIFICATION
add method with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9918569801714165	DESIGN	0.008143019828583448	WITHOUT_CLASSIFICATION
FIXME This whole thing could probably be implemented as a module and mixed into appropriate classes, especially if it uses either IOInput/OutputStream or is smart about the kind of IO-like object it's being used against.	DESIGN	0.9029551638250968	DESIGN	0.09704483617490314	WITHOUT_CLASSIFICATION
using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999851683523127	WITHOUT_CLASSIFICATION	1.4831647687421974E-5	DESIGN
using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999851683523127	WITHOUT_CLASSIFICATION	1.4831647687421974E-5	DESIGN
using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999897190034193	WITHOUT_CLASSIFICATION	1.0280996580661044E-5	DESIGN
these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9994360091547335	WITHOUT_CLASSIFICATION	5.63990845266456E-4	DESIGN
TODO: WRONG - get interfaces from class	DESIGN	0.7625223041393149	DESIGN	0.23747769586068507	WITHOUT_CLASSIFICATION
TODO: catch exception if constant is already set by other thread	DESIGN	0.5149099877441704	DESIGN	0.4850900122558295	WITHOUT_CLASSIFICATION
TODO: public only?	DESIGN	0.8905716618465322	WITHOUT_CLASSIFICATION	0.10942833815346778	DESIGN
see note below re: 2-field kludge	DESIGN	0.9991911838026266	WITHOUT_CLASSIFICATION	8.088161973733649E-4	DESIGN
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.9280960341927423	DESIGN	0.07190396580725777	WITHOUT_CLASSIFICATION
TODO: protected methods. this is going to require a rework of some of the mechanism.	DESIGN	0.9280960341927423	DESIGN	0.07190396580725777	WITHOUT_CLASSIFICATION
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods	DESIGN	0.902033761910679	WITHOUT_CLASSIFICATION	0.09796623808932105	DESIGN
FIXME: This doesn't actually support anything but String	DESIGN	0.9867672363240938	WITHOUT_CLASSIFICATION	0.013232763675906218	DESIGN
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9956967642062564	DESIGN	0.00430323579374357	WITHOUT_CLASSIFICATION
again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9956967642062564	DESIGN	0.00430323579374357	WITHOUT_CLASSIFICATION
this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9219065212095445	WITHOUT_CLASSIFICATION	0.0780934787904555	DESIGN
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9382345095763344	DESIGN	0.061765490423665505	WITHOUT_CLASSIFICATION
TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9382345095763344	DESIGN	0.061765490423665505	WITHOUT_CLASSIFICATION
this covers the rare case of lower-case class names (and thus will fail 99.999% of the time). fortunately, we'll only do this once per package name. (and seriously, folks, look into best practices...)	DESIGN	0.998240899641926	WITHOUT_CLASSIFICATION	0.001759100358074058	DESIGN
FIXME: we should also support orgs that use capitalized package names (including, embarrassingly, the one I work for), but this should be enabled by a system property, as the expected default behavior for an upper-case value should be (and is) to treat it as a class name, and raise an exception if it's not found	DESIGN	0.817683644551454	DESIGN	0.18231635544854605	WITHOUT_CLASSIFICATION
TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.7208074655612183	WITHOUT_CLASSIFICATION	0.2791925344387817	DESIGN
upper-case package name TODO: top-level upper-case package was supported in the previous (Ruby-based) implementation, so leaving as is. see note at #getProxyOrPackageUnderPackage re: future approach below the top-level.	DESIGN	0.5019775319741083	WITHOUT_CLASSIFICATION	0.4980224680258916	DESIGN
FIXME: wtf is this? Why would these use the class?	DESIGN	0.8163995496828858	WITHOUT_CLASSIFICATION	0.18360045031711417	DESIGN
FIXME: needs to be rethought	DESIGN	0.9992056272726172	WITHOUT_CLASSIFICATION	7.943727273828968E-4	DESIGN
TODO: specifying soft refs, may want to compare memory consumption, behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.8611271047385641	DESIGN	0.13887289526143576	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.975160035212093	DESIGN	0.024839964787906968	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.975160035212093	DESIGN	0.024839964787906968	WITHOUT_CLASSIFICATION
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.9776151998973368	DESIGN	0.022384800102663097	WITHOUT_CLASSIFICATION
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes)	DESIGN	0.9911934749941392	DESIGN	0.008806525005860738	WITHOUT_CLASSIFICATION
TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes) TODO: not sure we need this at all, since we only expose public fields. field.setAccessible(true);	DESIGN	0.9968950260185219	DESIGN	0.003104973981478071	WITHOUT_CLASSIFICATION
FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.8941476240535853	WITHOUT_CLASSIFICATION	0.10585237594641474	DESIGN
FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods. also, the getDeclared calls may throw SecurityException if we're running under a restrictive security policy.	DESIGN	0.931878993889846	WITHOUT_CLASSIFICATION	0.06812100611015401	DESIGN
don't bother to check if final method, it won't be there (not generated, can't be!)	DESIGN	0.9998226100232829	WITHOUT_CLASSIFICATION	1.7738997671709746E-4	DESIGN
super calls from proxies must use reflected method FIXME: possible to make handles do the superclass call?	DESIGN	0.9851100290209178	WITHOUT_CLASSIFICATION	0.014889970979082049	DESIGN
actual type does not exactly match method return type, re-get converter FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9987281705109375	WITHOUT_CLASSIFICATION	0.0012718294890624873	DESIGN
FIXME: Ideally JavaObject instances should be marshallable, which means that the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9920156185849154	WITHOUT_CLASSIFICATION	0.007984381415084523	DESIGN
FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9985352907977137	WITHOUT_CLASSIFICATION	0.0014647092022862084	DESIGN
We always prepend an org.jruby.proxy package to the beginning because java and javax packages are protected and signed jars prevent us generating new classes with those package names. See JRUBY-2439.	DESIGN	0.9979739491117168	WITHOUT_CLASSIFICATION	0.0020260508882832583	DESIGN
TODO: Only used by interface implementation; eliminate it	DESIGN	0.830719561817202	DESIGN	0.16928043818279806	WITHOUT_CLASSIFICATION
Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9846179286824163	WITHOUT_CLASSIFICATION	0.015382071317583785	DESIGN
modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9933280925237166	WITHOUT_CLASSIFICATION	0.006671907476283475	DESIGN
lame generics issues: making Segment class static and manually inserting cache reference to work around various problems generically referencing methods/vars across classes.	DESIGN	0.999654928554008	WITHOUT_CLASSIFICATION	3.4507144599196554E-4	DESIGN
entry exists, proxy doesn't match. replace. this could happen if old proxy was gc'ed TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9290952461958217	WITHOUT_CLASSIFICATION	0.07090475380417825	DESIGN
FIXME: How much more obtuse can this be? Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9541300462610391	WITHOUT_CLASSIFICATION	0.04586995373896083	DESIGN
ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9729226193312441	WITHOUT_CLASSIFICATION	0.02707738066875585	DESIGN
Hacky: Advance position to eat newline here....	DESIGN	0.9992016308088723	WITHOUT_CLASSIFICATION	7.983691911277606E-4	DESIGN
FIXME: Not sure what the semantics of transfer are cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.996437049278529	WITHOUT_CLASSIFICATION	0.003562950721470991	DESIGN
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.6403581570521116	DESIGN	0.35964184294788837	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.6403581570521116	DESIGN	0.35964184294788837	WITHOUT_CLASSIFICATION
ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9864415852501811	WITHOUT_CLASSIFICATION	0.013558414749818986	DESIGN
FIXME: Remove this from grammars.	DESIGN	0.9844126624198727	WITHOUT_CLASSIFICATION	0.01558733758012734	DESIGN
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.9991114982528891	WITHOUT_CLASSIFICATION	8.885017471107948E-4	DESIGN
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.997430684816347	WITHOUT_CLASSIFICATION	0.0025693151836529743	DESIGN
FIXME: lose syntactical elements here (and others like this)	DESIGN	0.9918784020829267	WITHOUT_CLASSIFICATION	0.008121597917073408	DESIGN
ENEBO: Lots of optz in 1.9 parser here	DESIGN	0.9970510994066963	WITHOUT_CLASSIFICATION	0.0029489005933036935	DESIGN
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.9838787699440966	WITHOUT_CLASSIFICATION	0.016121230055903397	DESIGN
This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9683703518157083	DESIGN	0.031629648184291606	WITHOUT_CLASSIFICATION
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.985543302670849	WITHOUT_CLASSIFICATION	0.014456697329150931	DESIGN
TODO: This probably isn't the best hack, but it works until we can have different root frame setup for 1.9 easily.	DESIGN	0.7432540127968972	DESIGN	0.2567459872031029	WITHOUT_CLASSIFICATION
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8324468514760117	WITHOUT_CLASSIFICATION	0.16755314852398834	DESIGN
FIXME: I think we need these pushed somewhere?	DESIGN	0.9191132336693033	WITHOUT_CLASSIFICATION	0.08088676633069672	DESIGN
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8324468514760117	WITHOUT_CLASSIFICATION	0.16755314852398834	DESIGN
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8324468514760117	WITHOUT_CLASSIFICATION	0.16755314852398834	DESIGN
XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9991349465943065	WITHOUT_CLASSIFICATION	8.650534056934962E-4	DESIGN
FIXME: This version is faster than the previous, but both suffer from a crucial flaw: It is impossible to create an ObjectSpace with an iterator that doesn't either: a. hold on to objects that might otherwise be collected or b. have no way to guarantee that a call to hasNext() will be correct or that a subsequent call to next() will produce an object. For our purposes, for now, this may be acceptable.	DESIGN	0.9501226066388657	WITHOUT_CLASSIFICATION	0.04987739336113423	DESIGN
FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9917630653612137	WITHOUT_CLASSIFICATION	0.008236934638786218	DESIGN
FIXME: This is gross. Don't do this.	DESIGN	0.9650718881465213	WITHOUT_CLASSIFICATION	0.034928111853478716	DESIGN
@author headius FIXME convert to enum ?	DESIGN	0.9955544904645548	WITHOUT_CLASSIFICATION	0.004445509535445147	DESIGN
FIXME: No, I don't like it.	DESIGN	0.9989188730165676	WITHOUT_CLASSIFICATION	0.0010811269834323878	DESIGN
TODO: This is probably BAD...	DESIGN	0.5980932393491538	DESIGN	0.4019067606508461	WITHOUT_CLASSIFICATION
FIXME: not very efficient	DESIGN	0.9999592083871458	WITHOUT_CLASSIFICATION	4.0791612854226267E-5	DESIGN
invoke callMethodMissing method directly TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.8233139860743025	DESIGN	0.1766860139256975	WITHOUT_CLASSIFICATION
TODO this is really ineffient, and potentially a problem everytime anyone require's something. we should try to make LoadPath a special array object.	DESIGN	0.9925401484796704	DESIGN	0.007459851520329521	WITHOUT_CLASSIFICATION
FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9964972558762262	WITHOUT_CLASSIFICATION	0.003502744123773746	DESIGN
FIXME: not very efficient	DESIGN	0.9999592083871458	WITHOUT_CLASSIFICATION	4.0791612854226267E-5	DESIGN
FIXME: not very efficient	DESIGN	0.9999592083871458	WITHOUT_CLASSIFICATION	4.0791612854226267E-5	DESIGN
FIXME: not very efficient	DESIGN	0.9999592083871458	WITHOUT_CLASSIFICATION	4.0791612854226267E-5	DESIGN
FIXME: not very efficient	DESIGN	0.9999592083871458	WITHOUT_CLASSIFICATION	4.0791612854226267E-5	DESIGN
FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.6260278125505758	DESIGN	0.3739721874494241	WITHOUT_CLASSIFICATION
FIXME: potentially could just use ByteList here?	DESIGN	0.9994476207258602	WITHOUT_CLASSIFICATION	5.523792741396607E-4	DESIGN
FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9788362848597224	WITHOUT_CLASSIFICATION	0.021163715140277643	DESIGN
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6188312814923642	DESIGN	0.38116871850763584	WITHOUT_CLASSIFICATION
TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.6188312814923642	DESIGN	0.38116871850763584	WITHOUT_CLASSIFICATION
grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, so we must do all this (the next 70 lines of code), which has already been done by FloatingDecimal.	DESIGN	0.5198770910065131	WITHOUT_CLASSIFICATION	0.48012290899348686	DESIGN
it would be nice (and logical!) if exponent form behaved like E/e, and decimal form behaved like f, but no such luck. hence:	DESIGN	0.9947133249032978	WITHOUT_CLASSIFICATION	0.005286675096702195	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9980387696221343	WITHOUT_CLASSIFICATION	0.0019612303778657426	DESIGN
This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9980387696221343	WITHOUT_CLASSIFICATION	0.0019612303778657426	DESIGN
TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.6549342137222989	DESIGN	0.34506578627770124	WITHOUT_CLASSIFICATION
TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.8865187917974241	WITHOUT_CLASSIFICATION	0.11348120820257596	DESIGN
FIXME: this probably belongs in a different package.	DESIGN	0.9623355529393203	WITHOUT_CLASSIFICATION	0.03766444706067978	DESIGN
TODO: It would be nice to throw a better error for this	DESIGN	0.999707443963673	DESIGN	2.9255603632704594E-4	WITHOUT_CLASSIFICATION
TODO: It would be nice to throw a better error for this	DESIGN	0.999707443963673	DESIGN	2.9255603632704594E-4	WITHOUT_CLASSIFICATION
FIXME: I don't like this	DESIGN	0.99808020055165	WITHOUT_CLASSIFICATION	0.0019197994483500568	DESIGN
TODO: It's perhaps just a coincidence that all the channels for which we should raise are instanceof SelectableChannel, since stdio is not...so this bothers me slightly. -CON	DESIGN	0.9941402542162854	DESIGN	0.005859745783714663	WITHOUT_CLASSIFICATION
FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9974327703285091	WITHOUT_CLASSIFICATION	0.002567229671490873	DESIGN
TODO this should entry into error handling somewhere	DESIGN	0.9924755662813579	DESIGN	0.00752443371864208	WITHOUT_CLASSIFICATION
FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9992598110275931	WITHOUT_CLASSIFICATION	7.401889724068782E-4	DESIGN
We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it)	DESIGN	0.9990078007208798	WITHOUT_CLASSIFICATION	9.921992791201214E-4	DESIGN
TODO: Ruby does not seem to care about invalid numeric mode values I am not sure if ruby overflows here also...	DESIGN	0.7812755024641006	DESIGN	0.2187244975358994	WITHOUT_CLASSIFICATION
TODO: Make this more intelligible value	DESIGN	0.9135456304181302	DESIGN	0.08645436958186987	WITHOUT_CLASSIFICATION
XXX: do something?	DESIGN	0.9999276047165093	WITHOUT_CLASSIFICATION	7.23952834906896E-5	DESIGN
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9409007289449192	DESIGN	0.05909927105508098	WITHOUT_CLASSIFICATION
for visibility checking without requiring frame self TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9409007289449192	DESIGN	0.05909927105508098	WITHOUT_CLASSIFICATION
up to ten, stuff into tmp locals, load in reverse order, and assign FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.8217375517309605	WITHOUT_CLASSIFICATION	0.17826244826903948	DESIGN
index for the item this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.999696507330809	WITHOUT_CLASSIFICATION	3.0349266919100815E-4	DESIGN
if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9988778317946934	WITHOUT_CLASSIFICATION	0.0011221682053065979	DESIGN
SSS FIXME: These should get normally compiled or initialized some other way ... SSS FIXME: Parent/super-type info is incorrect! These are just placeholders for now .. this needs to be updated with real class objects later!	DESIGN	0.8958038664917617	WITHOUT_CLASSIFICATION	0.10419613350823823	DESIGN
SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class Holy cow! Just to append two darned arrays!	DESIGN	0.8163210670227387	DESIGN	0.1836789329772614	WITHOUT_CLASSIFICATION
SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. It calls regular to_ary on the object. But, if it encounters a method_missing, the value is inserted into an 1-element array! try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. Ex: http:gist.github.com/163551	DESIGN	0.9246684582561282	WITHOUT_CLASSIFICATION	0.0753315417438718	DESIGN
This is for JRUBY-2988, since after a suspend the terminal seems to need to be reinitialized. Since we can't easily detect suspension, initialize after every readline. Probably not fast, but this is for interactive terminals anyway...so who cares?	DESIGN	0.9896527659703543	WITHOUT_CLASSIFICATION	0.010347234029645712	DESIGN
set up a field for the CacheEntry TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9884710001418285	DESIGN	0.011528999858171487	WITHOUT_CLASSIFICATION
exit monitor before making call FIXME: this not being in a finally is a little worrisome	DESIGN	0.9939776019132913	WITHOUT_CLASSIFICATION	0.006022398086708696	DESIGN
FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct this resulted in object being null after unmarshalling...	DESIGN	0.9601003143221977	WITHOUT_CLASSIFICATION	0.039899685677802436	DESIGN
if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search	DESIGN	0.9776151998973368	DESIGN	0.022384800102663097	WITHOUT_CLASSIFICATION
We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.985543302670849	WITHOUT_CLASSIFICATION	0.014456697329150931	DESIGN
TODO: This is actually now returning the scope of whoever called Method#to_proc which is obviously wrong; but there's no scope to provide for many methods. It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9629185505818217	DESIGN	0.03708144941817828	WITHOUT_CLASSIFICATION
FIXME: We should be getting this from the runtime rather than assume none? return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9675095062213319	WITHOUT_CLASSIFICATION	0.03249049377866807	DESIGN
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.6403581570521116	DESIGN	0.35964184294788837	WITHOUT_CLASSIFICATION
This is a fairly specific hack for empty string, but it does the job	DESIGN	0.5952173520530676	DESIGN	0.40478264794693253	WITHOUT_CLASSIFICATION
XXX This constructor is a hack to implement the __END__ syntax. Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.7158751824482295	DESIGN	0.28412481755177044	WITHOUT_CLASSIFICATION
FIXME: Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need to totally change marshalling to work with overridden core classes.	DESIGN	0.7114038684243184	WITHOUT_CLASSIFICATION	0.2885961315756817	DESIGN
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.7621757470293652	WITHOUT_CLASSIFICATION	0.23782425297063475	DESIGN
We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its provider's constructor which require it to be executed in a secure context. Ideally this hack should be removed. See JRUBY-3919 and this BC bug: http:www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.8664266037385532	DESIGN	0.13357339626144676	WITHOUT_CLASSIFICATION
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9554286777757519	WITHOUT_CLASSIFICATION	0.044571322224248165	DESIGN
FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9554286777757519	WITHOUT_CLASSIFICATION	0.044571322224248165	DESIGN
hack to get right style for input	DESIGN	0.5489423322125336	DESIGN	0.45105766778746625	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9717559868368402	WITHOUT_CLASSIFICATION	0.028244013163159866	DESIGN
small hack to save a cast later on	DESIGN	0.8928990716846342	WITHOUT_CLASSIFICATION	0.1071009283153657	DESIGN
temporary hack to handle non-Ruby values will come up with better solution shortly	DESIGN	0.7441804023262577	DESIGN	0.2558195976737423	WITHOUT_CLASSIFICATION
Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.	DESIGN	0.9717559868368402	WITHOUT_CLASSIFICATION	0.028244013163159866	DESIGN
HACK: in order to have stdout/err act like ttys and flush always, we set anything assigned to stdout/stderr to sync	DESIGN	0.9975502767155314	WITHOUT_CLASSIFICATION	0.0024497232844684926	DESIGN
HACK: force clinit to be created	DESIGN	0.9997606452166272	WITHOUT_CLASSIFICATION	2.3935478337275317E-4	DESIGN
FIXME: This is pretty gross; we should have a cleaner initialization that doesn't depend on package-visible fields and ideally is atomic, probably using an immutable structure we replace all at once. lazy, null when no groups defined	DESIGN	0.9499256133236964	WITHOUT_CLASSIFICATION	0.05007438667630348	DESIGN
TODO: should probably apply the null object pattern for a non-allowed class, rather than null	DESIGN	0.9978194623365867	DESIGN	0.002180537663413412	WITHOUT_CLASSIFICATION
TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.8378299980643081	DESIGN	0.16217000193569187	WITHOUT_CLASSIFICATION
TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5404918050021911	DESIGN	0.45950819499780904	WITHOUT_CLASSIFICATION
ignore...bean doesn't get registered TODO: Why does that bother me?	DESIGN	0.6403581570521116	DESIGN	0.35964184294788837	WITHOUT_CLASSIFICATION
optional args, so we have IRubyObject[] TODO: confirm	DESIGN	0.559083860287512	WITHOUT_CLASSIFICATION	0.44091613971248794	DESIGN
not intended to be called directly by users (private) OLD TODO from Ruby code: This should be implemented in JavaClass.java, where we can check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9984144235963005	DESIGN	0.0015855764036993903	WITHOUT_CLASSIFICATION
TODO? I think this ends up propagating from normal Java exceptions sys_fail(openFile.getPath())	DESIGN	0.996077422990062	WITHOUT_CLASSIFICATION	0.003922577009938022	DESIGN
TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.8021940693986417	DESIGN	0.19780593060135826	WITHOUT_CLASSIFICATION
TODO: the rest of this...seeking to same position is unnecessary since we share a channel but some of this may be needed?	DESIGN	0.9999745196016746	DESIGN	2.5480398325317622E-5	WITHOUT_CLASSIFICATION
TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9884538154352313	DESIGN	0.011546184564768788	WITHOUT_CLASSIFICATION
FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9983907645662091	WITHOUT_CLASSIFICATION	0.0016092354337909776	DESIGN
ignore; job was cancelled FIXME: Is this ok?	DESIGN	0.9190345203899449	WITHOUT_CLASSIFICATION	0.08096547961005499	DESIGN
TODO: MRI behavior: Call "+" or "add", depending on the call. But this leads to exceptions when Floats are added. See: http:blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 return callCoerced(context, op, b, true); -- this is MRI behavior. We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9708960295766659	DESIGN	0.02910397042333406	WITHOUT_CLASSIFICATION
Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9979090343599836	WITHOUT_CLASSIFICATION	0.0020909656400164255	DESIGN
TODO: wire into new exception handling mechanism	DESIGN	0.8867003844919495	DESIGN	0.11329961550805046	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.975160035212093	DESIGN	0.024839964787906968	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.768639302166882	DESIGN	0.23136069783311794	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.768639302166882	DESIGN	0.23136069783311794	WITHOUT_CLASSIFICATION
TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.768639302166882	DESIGN	0.23136069783311794	WITHOUT_CLASSIFICATION
FIXME: Determine if a real allocator is needed here. Do people want to extend JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should you be able to? TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999498199933731	DESIGN	5.0180006626903755E-5	WITHOUT_CLASSIFICATION
SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method But, if the mehod is modified, we create a new method object which in turn gets a new token. What makes sense?? Intuitively, it seems the first one ... but let us see ... Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.997140461066521	DESIGN	0.002859538933479111	WITHOUT_CLASSIFICATION
FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9989744110779543	WITHOUT_CLASSIFICATION	0.0010255889220456946	DESIGN
FIXME: bit of a kludge here (non-interface classes assigned to both class and module fields). simplifies proxy extender code, will go away when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9939276783588865	WITHOUT_CLASSIFICATION	0.00607232164111343	DESIGN
There's not a compelling reason to keep JavaClass instances in a weak map (any proxies created are [were] kept in a non-weak map, so in most cases they will stick around anyway), and some good reasons not to (JavaClass creation is expensive, for one; many lookups are performed when passing parameters to/from methods; etc.). TODO: faster custom concurrent map	DESIGN	0.8654064366255222	DESIGN	0.13459356337447778	WITHOUT_CLASSIFICATION
TODO: we should be able to optimize this quite a bit post-1.0. JavaClass already has all the methods organized by method name; the next version (supporting protected methods/fields) will have them organized even further. So collectMethods here can just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9998330926147383	DESIGN	1.669073852617977E-4	WITHOUT_CLASSIFICATION
FIXME: finalizer should be dupped here	DESIGN	0.9728291572542489	WITHOUT_CLASSIFICATION	0.027170842745751062	DESIGN
FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9998236638367107	WITHOUT_CLASSIFICATION	1.7633616328917146E-4	DESIGN
rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?	DESIGN	0.9993396776742465	WITHOUT_CLASSIFICATION	6.603223257534533E-4	DESIGN
TODO: Bleeding runtime into parser. Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9663217690824581	DESIGN	0.03367823091754185	WITHOUT_CLASSIFICATION
SSS FIXME: Maybe this is not really a concern after all ... Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused with semantic nesting of scopes across files. Consider this code in a file f class M1::M2::M3::C ... end So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). This is primarily used to ensure that variable names don't clash! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! private int _lexicalNestingLevel;	DESIGN	0.9984209319129846	DESIGN	0.0015790680870154082	WITHOUT_CLASSIFICATION
Sometimes the value can be retrieved at "compile time". If we succeed, nothing like it! We might not .. for the following reasons: 1. The constant is missing, 2. The reference is a forward-reference, 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) 4. Our compiler isn't able to right away infer that this is a constant. SSS FIXME: 1. The operand can be a literal array, range, or hash -- hence Operand because Array, Range, and Hash derive from Operand and not Constant ... Is there a way to fix this impedance mismatch? 2. It should be possible to handle the forward-reference case by creating a new ForwardReference operand and then inform the scope of the forward reference which the scope can fix up when the reference gets defined. At code-gen time, if the reference is unresolved, when a value is retrieved for the forward-ref and we get a null, we can throw a ConstMissing exception! Not sure!	DESIGN	0.9968097652044522	DESIGN	0.0031902347955478417	WITHOUT_CLASSIFICATION
Reset value map if this instruction is the start/end of a basic block Right now, calls are considered hard boundaries for optimization and information cannot be propagated across them! SSS FIXME: Rather than treat all calls with a broad brush, what we need is to capture different attributes about a call : - uses closures - known call target - can modify scope, - etc. This information is probably already present in the AST Inspector	DESIGN	0.9625823515398607	DESIGN	0.03741764846013929	WITHOUT_CLASSIFICATION
FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9932146021094637	WITHOUT_CLASSIFICATION	0.006785397890536376	DESIGN
XXX: This check previously used callMethod("==") to check for equality between classes when scanning the hierarchy. However the == check may be safe; we should only ever have one instance bound to a given type/constant. If it's found to be unsafe, examine ways to avoid the == call.	DESIGN	0.9961577442876058	WITHOUT_CLASSIFICATION	0.0038422557123941295	DESIGN
end hack	DESIGN	0.9962188195312849	WITHOUT_CLASSIFICATION	0.003781180468715167	DESIGN
if not overloaded, we add a method that guesses at which signature to use TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9978861616218111	DESIGN	0.002113838378188834	WITHOUT_CLASSIFICATION
FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.7621757470293652	WITHOUT_CLASSIFICATION	0.23782425297063475	DESIGN
TODO: This version is better than the hackish previous one. Windows behavior needs to be defined though. I suppose this version could be improved more too. TODO: /etc/passwd is also inadequate for MacOSX since it does not use /etc/passwd for regular user accounts	DESIGN	0.9946412834881657	DESIGN	0.00535871651183431	WITHOUT_CLASSIFICATION
TODO: Should next and return also catch here?	DESIGN	0.7125801841450986	WITHOUT_CLASSIFICATION	0.28741981585490145	DESIGN
Let's only generate methods for those the user may actually intend to override. That includes any defined in the current class, and any ancestors that are also JavaProxyClasses (but none from any other ancestor classes). Methods defined in mixins will be considered intentionally overridden, except those from Kernel, Java, and JavaProxyMethods, as well as Enumerable. TODO: may want to exclude other common mixins?	DESIGN	0.7654887526429566	WITHOUT_CLASSIFICATION	0.23451124735704343	DESIGN
FIXME: Consider fixing node_assign itself rather than single case	DESIGN	0.9991114982528891	WITHOUT_CLASSIFICATION	8.885017471107948E-4	DESIGN
Workaround for JRUBY-2326 (MRI does not enter this production for some reason)	DESIGN	0.997430684816347	WITHOUT_CLASSIFICATION	0.0025693151836529743	DESIGN
FIXME: We should really not be creating the dynamic scope for the root of the AST before parsing. This makes us end up needing to readjust this dynamic scope coming out of parse (and for local static scopes it will always happen because of $~ and $_). FIXME: Because we end up adjusting this after-the-fact, we can't use any of the specific-size scopes.	DESIGN	0.5650858552549042	WITHOUT_CLASSIFICATION	0.43491414474509593	DESIGN
FIXME: Resolve what the hell is going on	DESIGN	0.9987700061269498	WITHOUT_CLASSIFICATION	0.0012299938730502378	DESIGN
This is perhaps innefficient timewise? Optimal spacewise	DESIGN	0.9838787699440966	WITHOUT_CLASSIFICATION	0.016121230055903397	DESIGN
If variables were added then we may need to grow the dynamic scope to match the static one. FIXME: Make this so we only need to check this for blockScope != null. We cannot currently since we create the DynamicScope for a LocalStaticScope before parse begins. Refactoring should make this fixable.	DESIGN	0.9954568221687848	WITHOUT_CLASSIFICATION	0.004543177831215108	DESIGN
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8324468514760117	WITHOUT_CLASSIFICATION	0.16755314852398834	DESIGN
FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8324468514760117	WITHOUT_CLASSIFICATION	0.16755314852398834	DESIGN
we're depending on the side effect of the load, which loads the class but does not turn it into a script I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.7110067363172902	WITHOUT_CLASSIFICATION	0.2889932636827099	DESIGN
TODO: for now, we use a faithful reimplementation of MRI's algorithm, but should use UTF8Encoding facilities from Joni, once it starts prefroming UTF-8 content validation.	DESIGN	0.9823389800827397	DESIGN	0.01766101991726027	WITHOUT_CLASSIFICATION
Process streams get Channel.newChannel()ed into FileChannel but are not actually seekable. So instead of just the isSeekable check doing instanceof FileChannel, we must also add this boolean to check, which we set to false when it's known that the incoming channel is from a process. FIXME: This is gross, and it's NIO's fault for not providing a nice way to tell if a channel is "really" seekable.	DESIGN	0.6937123628538662	WITHOUT_CLASSIFICATION	0.30628763714613383	DESIGN
