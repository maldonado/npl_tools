WITHOUT_CLASSIFICATION	private MainFrame _mainFrame;
WITHOUT_CLASSIFICATION	Setup the applications Look and Feel.
WITHOUT_CLASSIFICATION	i18n[Application.error.closeFileViewers=Unable to close all file viewers]
WITHOUT_CLASSIFICATION	Save options selected for DataType-specific properties
WITHOUT_CLASSIFICATION	return _mainFrame;
WITHOUT_CLASSIFICATION	_mainFrame = new MainFrame(this);
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[Application.splash.showmainwindow=Showing main window...]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[oracle.sqlText=SQL Text]
WITHOUT_CLASSIFICATION	i18n[Application.error.loadsqlhistory=Unable to load SQL history from persistant storage.]
WITHOUT_CLASSIFICATION	History file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	i18n[Application.error.savesqlhistory=Unable to write SQL queries to persistant storage.]
WITHOUT_CLASSIFICATION	Get the history into an array.
WITHOUT_CLASSIFICATION	Cell Import/Export file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	i18n[Application.error.writecellselections=Unable to write Cell Import/Export options to persistant storage.]
WITHOUT_CLASSIFICATION	Cell Import/Export file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	Cell Import/Export file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	nothing needed here??
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	nothing needed here??
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	i18n[Application.error.savedatatypeprops=Unable to write DataType properties to persistant storage.]
WITHOUT_CLASSIFICATION	Don't prevent the user from overriding the laf is they choose to use Swing's default laf prop
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	i18n[Application.info.setjdbcdebuglog=Attempting to set JDBC debug log to output stream]
WITHOUT_CLASSIFICATION	If logging has changed.
WITHOUT_CLASSIFICATION	Close any previous logging.
WITHOUT_CLASSIFICATION	Generic SQL
WITHOUT_CLASSIFICATION	set up array to return for public access to cmd line args
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	ISession[] getActiveSessions();
WITHOUT_CLASSIFICATION	add(new DropSelectedTablesAction(_app));
WITHOUT_CLASSIFICATION	i18n[LogPanel.titleInfo=Last log entry (Entry type: Info)]
WITHOUT_CLASSIFICATION	i18n[LogPanel.titleWarn=Last log entry (Entry type: Warning)]
WITHOUT_CLASSIFICATION	i18n[LogPanel.logMsg=Logged by {0} at {1}:\n\n {2}]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	i18n[LogPanel.titleUnknown=Last log entry (Entry type: Unknown)]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.memSize={0} of {1} MB];
WITHOUT_CLASSIFICATION	paintNumWaitingGC(g);
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[oracle.rows=Rows]
WITHOUT_CLASSIFICATION	i18n[oracle.bufferGets=Buffer Gets]
WITHOUT_CLASSIFICATION	i18n[oracle.diskReadsPerRow=Disk Reads per Row]
WITHOUT_CLASSIFICATION	private final AliasWindowFactory _aliasWinFactory;
WITHOUT_CLASSIFICATION	Oracle SQL
WITHOUT_CLASSIFICATION	private int _lastSessionIdx = 1;
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[WindowManager.registerSessionSheet=Registering {0} in WindowManager]
WITHOUT_CLASSIFICATION	Store ptr to newly open window in list of windows per session.
WITHOUT_CLASSIFICATION	Set the cell Width to the width of the header
WITHOUT_CLASSIFICATION	left
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	bottom
WITHOUT_CLASSIFICATION	Regression for HARMONY-2146
WITHOUT_CLASSIFICATION	i18n[WindowManager.error.bringtofront=Error bringing internal frame to the front]
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	mockDatabaseMetaData
WITHOUT_CLASSIFICATION	IAliasesList al = getAliasesListInternalFrame().getAliasesList();
WITHOUT_CLASSIFICATION	_driversListWindow.nowVisible(true);
WITHOUT_CLASSIFICATION	regression test for HARMONY-1497
WITHOUT_CLASSIFICATION	i18n[WindowManager.errorselectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	_driversListWindow.nowVisible(false);
WITHOUT_CLASSIFICATION	Add an item to the Windows menu for this window and store the menu item back in the internal frame.
WITHOUT_CLASSIFICATION	Enable/Disable actions that require open session frames.
WITHOUT_CLASSIFICATION	Only remove the frame if the entire session is not closing
WITHOUT_CLASSIFICATION	Remove menu item from Windows menu that relates to this internal frame.
WITHOUT_CLASSIFICATION	Enable/Disable actions that require open session frames.
WITHOUT_CLASSIFICATION	Add the message handler to the session
WITHOUT_CLASSIFICATION	Allocate the current session to the actions.
WITHOUT_CLASSIFICATION	Make sure that the session menu is enabled.
WITHOUT_CLASSIFICATION	Clear session info from all actions.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	GUIUtils.setJButtonSizesTheSame(new JButton[] {_okBtn, _closeBtn, new JButton(i18n.CANCEL)});
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	builder.addGridded(new JButton("Alter")); builder.addRelatedGap();
WITHOUT_CLASSIFICATION	setPreferredSize(new Dimension(400, 400));
WITHOUT_CLASSIFICATION	Copys the gathered values into the lookup table.
WITHOUT_CLASSIFICATION	TABLE
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Causes NPE in JDK 1.3.1 _contentsTxt.setText("");
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.help=Help]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.squirrel=SQuirreL]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.changelogs=Change Logs]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadwelcomefile=Error retrieving Help file URL for {0}]
WITHOUT_CLASSIFICATION	Add SQuirreL Licence to the Licence node.
WITHOUT_CLASSIFICATION	Strip local part of URL.
WITHOUT_CLASSIFICATION	Renderer for tree.
WITHOUT_CLASSIFICATION	&& node != _tree.getLastSelectedPathComponent())
WITHOUT_CLASSIFICATION	Add SQuirreL help to the Help node.
WITHOUT_CLASSIFICATION	First put the Welcome to SQuirreL node.
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.squirrel=SQuirreL]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadchangelogfile=Error retrieving Change Log file URL for {0}]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.squirrel=SQuirreL]
WITHOUT_CLASSIFICATION	Add SQuirreL Change Log to the Licence node.
WITHOUT_CLASSIFICATION	generate contents file.
WITHOUT_CLASSIFICATION	Add plugin help, licence and change log documents to the tree.
WITHOUT_CLASSIFICATION	Licence document.
WITHOUT_CLASSIFICATION	Help document.
WITHOUT_CLASSIFICATION	FAQ.
WITHOUT_CLASSIFICATION	Change log.
WITHOUT_CLASSIFICATION	final String docTitle = (String)_docTitles.get(i);
WITHOUT_CLASSIFICATION	Using a thread for this gets rid of most of the "white flash".
WITHOUT_CLASSIFICATION	Stop refresh if it is running.
WITHOUT_CLASSIFICATION	i18n[ViewLogsSheet.error.processinglogfile=Error occured processing log file]
WITHOUT_CLASSIFICATION	i18n[ViewLogsSheet.info.nulllogfile=Null log file name]
WITHOUT_CLASSIFICATION	Position to the start of the last line in log.
WITHOUT_CLASSIFICATION	i18n[ViewLogsSheet.error.setcaret=Error positioning caret in log text component]
WITHOUT_CLASSIFICATION	_logContentsTxt.setEditable(false);
WITHOUT_CLASSIFICATION	, true, true, true, true);
WITHOUT_CLASSIFICATION	throws IOException
WITHOUT_CLASSIFICATION	viewer.addInternalFrameListener(_lis);
WITHOUT_CLASSIFICATION	private final class MyInternalFrameListener extends InternalFrameAdapter
WITHOUT_CLASSIFICATION	removeViewer((HtmlViewerSheet)evt.getInternalFrame());
WITHOUT_CLASSIFICATION	super.internalFrameClosed(evt);
WITHOUT_CLASSIFICATION	Empty method.
WITHOUT_CLASSIFICATION	Settings Gap Sizes
WITHOUT_CLASSIFICATION	Filling Columns
WITHOUT_CLASSIFICATION	Appending Labels with optional components ------------------------------
WITHOUT_CLASSIFICATION	Appending internationalized labels with optional components ------------
WITHOUT_CLASSIFICATION	Adding Titles ----------------------------------------------------------
WITHOUT_CLASSIFICATION	Appending Separators ---------------------------------------------------
WITHOUT_CLASSIFICATION	Instance Creation
WITHOUT_CLASSIFICATION	Overriding Superclass Behavior
WITHOUT_CLASSIFICATION	Adding Rows
WITHOUT_CLASSIFICATION	Adding Labels and Separators
WITHOUT_CLASSIFICATION	Helper Code
WITHOUT_CLASSIFICATION	setRenderer(new CellRenderer());
WITHOUT_CLASSIFICATION	private SQLDriverPropertyCollection _props = new SQLDriverPropertyCollection();
WITHOUT_CLASSIFICATION	loadDriverProperties();
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.dropPrimaryKeyTitle=Drop Primary Key]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	_useDriverPropsChk.setSelected(_alias.getUseDriverProperties()); _driverPropsBtn.setEnabled(_useDriverPropsChk.isSelected()); This is mainly for long URLs that cannot be fully displayed in the label.
WITHOUT_CLASSIFICATION	abort first..
WITHOUT_CLASSIFICATION	Set focus to password control if default user name has been setup.
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.modifyTitle=Select Column To Modify]
WITHOUT_CLASSIFICATION	Table name
WITHOUT_CLASSIFICATION	Column list
WITHOUT_CLASSIFICATION	User cannot be allowed to drop all columns from a table
WITHOUT_CLASSIFICATION	Removed for reformatting
WITHOUT_CLASSIFICATION	Means load all Schemas from database.
WITHOUT_CLASSIFICATION	current Schema says don't load
WITHOUT_CLASSIFICATION	Removed for duplicate line
WITHOUT_CLASSIFICATION	private SQLDriverPropertyCollection _sqlDriverProps;
WITHOUT_CLASSIFICATION	Removed for comment
WITHOUT_CLASSIFICATION	i18n[AliasInternalFrame.illegalValue=Illegal value of {0} passed for Maintenance type]
WITHOUT_CLASSIFICATION	_useDriverPropsChk.setSelected(_sqlAlias.getUseDriverProperties());
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Title label at top.
WITHOUT_CLASSIFICATION	Separated by a line.
WITHOUT_CLASSIFICATION	Separated by a line.
WITHOUT_CLASSIFICATION	Next the buttons.
WITHOUT_CLASSIFICATION	make it grow when added
WITHOUT_CLASSIFICATION	i18n[AliasInternalFrame.error.sessioncreation=Test Button has created a session, this is a programming error]
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	i18n[AliasWindowFactory.error.copyAlias=Error occured copying the alias]
WITHOUT_CLASSIFICATION	i18n[AliasWindowFactory.schemaPropsCopiedWarning=Warning: Your target Alias contains database specific Schema properties copied from the source Alias.\n Schema loading of the target Alias may be errorneous. Please check your target Alias's Schema properties.]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Add listener to listen for items added/removed from list.
WITHOUT_CLASSIFICATION	select the one just added.
WITHOUT_CLASSIFICATION	Only a single selection can be made at a time.
WITHOUT_CLASSIFICATION	More than one selection is allowed - check to see if we should change the selection
WITHOUT_CLASSIFICATION	_driversList = new DriversList(app);
WITHOUT_CLASSIFICATION	_tb.add(actions.get(ShowLoadedDriversOnlyAction.class));
WITHOUT_CLASSIFICATION	To change body of overridden methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	_tree.expandPath(new TreePath(newFolder.getPath()));
WITHOUT_CLASSIFICATION	Not required.
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	If this happens then this is a programming error as we said in the above call to ingore these errors.
WITHOUT_CLASSIFICATION	i18n[DriverInternalFrame.error.illegalvalue=Illegal value of {0} passed for Maintenance type]
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Title label at top.
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Separated by a line.
WITHOUT_CLASSIFICATION	Separated by a line.
WITHOUT_CLASSIFICATION	Reset the background to the colour that the current Look and Feel uses for internal frames.
WITHOUT_CLASSIFICATION	_javaClassPathList.addListSelectionListener(new JavaClassPathListBoxListener());
WITHOUT_CLASSIFICATION	Scrollbars are "shown always" to stop sheet resizing when they are shown/hidden.
WITHOUT_CLASSIFICATION	This can take a long time for big jars - so it is not done on the EDT.
WITHOUT_CLASSIFICATION	Removed for uncomment
WITHOUT_CLASSIFICATION	i18n[DriverWindowFactory.error.copyingdriver=Error occured copying the driver]
WITHOUT_CLASSIFICATION	Empty block.
WITHOUT_CLASSIFICATION	If the user wants to select for Right mouse clicks then change the selection before popup appears
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Pane to add window content to.
WITHOUT_CLASSIFICATION	Put toolbar at top of window.
WITHOUT_CLASSIFICATION	The main list for window.
WITHOUT_CLASSIFICATION	List in the centre of the window.
WITHOUT_CLASSIFICATION	Add mouse listener for displaying popup menu.
WITHOUT_CLASSIFICATION	Removed for cut SQL
WITHOUT_CLASSIFICATION	Removed for copy SQL
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnNameLabel=Column Name: ]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.tableNameLabel=Table Name: ]
WITHOUT_CLASSIFICATION	Table name
WITHOUT_CLASSIFICATION	These are not used
WITHOUT_CLASSIFICATION	Column name
WITHOUT_CLASSIFICATION	Dialect list
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnCommentLabel={0} does not support column comments]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnNameTootTip={0} does not support altering column name]
WITHOUT_CLASSIFICATION	Length
WITHOUT_CLASSIFICATION	Type list
WITHOUT_CLASSIFICATION	Scale
WITHOUT_CLASSIFICATION	Precision
WITHOUT_CLASSIFICATION	Default value
WITHOUT_CLASSIFICATION	Nullable
WITHOUT_CLASSIFICATION	Comment
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesController.hint=Set session colors for this Alias]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesController.title=Color Properties]
WITHOUT_CLASSIFICATION	Don't need tooltips any more.
WITHOUT_CLASSIFICATION	Register so that we can display different tooltips depending which entry in list mouse is over.
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.tableHeader.tables=Tables]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.tableHeader.views=Views]
WITHOUT_CLASSIFICATION	I18n[oracle.dbOutputTitle=Oracle DB output for: {0}]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheToDelNotExists=Cache file for Alias "{0}" does not exist. No file was deleted]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.hint=Schemas (loading and caching)]
WITHOUT_CLASSIFICATION	i18n[AliasPropertiesInternalFrame.ok=OK]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.backgroundColorLabel=Background Color]
WITHOUT_CLASSIFICATION	i18n[AliasPropertiesInternalFrame.close=Close]
WITHOUT_CLASSIFICATION	Toolbar
WITHOUT_CLASSIFICATION	Object Tree
WITHOUT_CLASSIFICATION	Status Bar
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.syncComponentBackgroundColorChkLabel=Use toolbar background color for all components]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.toolbarBackgroundColorBtnLabel=Choose Toolbar Color]
WITHOUT_CLASSIFICATION	Instructions
WITHOUT_CLASSIFICATION	Toolbar Color Checkbox
WITHOUT_CLASSIFICATION	Object Tree Color checkbox
WITHOUT_CLASSIFICATION	Object Tree Color checkbox
WITHOUT_CLASSIFICATION	Set object tree color button
WITHOUT_CLASSIFICATION	Set object tree color button
WITHOUT_CLASSIFICATION	Set toolbar color button
WITHOUT_CLASSIFICATION	Set object tree color panel
WITHOUT_CLASSIFICATION	Set object tree color panel
WITHOUT_CLASSIFICATION	Set toolbar color panel
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.loadAndCacheAll=Load all and cache all Schemas]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.CacheSchemaIndependentMetaData=Cache Schema independent meta data (Catalogs, Keywords, Data types, Global functions)]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.printCacheFileLocation=Print cache file path to message panel]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.deleteCache=Delete cache file]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.schemaTableUpdateApply=Apply]
WITHOUT_CLASSIFICATION	Turn off auto refresh when we are shutting down.
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.loadingDriverFailed=Loading JDBC driver "{0}" failed.\nCan not load driver properties tab.]
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.gettingDriverPropetiesFailed=Loading the properties from the JDBC driver failed.\nCan not load driver properties tab.]
WITHOUT_CLASSIFICATION	i18n[DriverPropertiesController.Hint=DriverProperties]
WITHOUT_CLASSIFICATION	i18n[DriverPropertiesController.title=DriverProperties]
WITHOUT_CLASSIFICATION	i18n[SchemaTableCboItem.schemaID.loadAndCache=Load and cache]
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Removed for close Session
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Size non-tool child window.
WITHOUT_CLASSIFICATION	tab button
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	implements ActionListener
WITHOUT_CLASSIFICATION	Make the button looks the same for all Laf's
WITHOUT_CLASSIFICATION	Make it transparent
WITHOUT_CLASSIFICATION	No need to be focusable
WITHOUT_CLASSIFICATION	Making nice rollover effect we use the same listener for all buttons
WITHOUT_CLASSIFICATION	Close the proper tab by clicking the button addActionListener(this);
WITHOUT_CLASSIFICATION	we don't want to update UI for this button
WITHOUT_CLASSIFICATION	paint the cross
WITHOUT_CLASSIFICATION	shift the image for pressed buttons
WITHOUT_CLASSIFICATION	Without this the split moves when the window is resized.
WITHOUT_CLASSIFICATION	Create spinner for update period
WITHOUT_CLASSIFICATION	i18n[oracle.Seconds2=(seconds)]
WITHOUT_CLASSIFICATION	i18n[FileEditorDropTargetListener.oneFileDropMessage=Only one file may be dropped onto the editor at a time.]
WITHOUT_CLASSIFICATION	Make sure a deselect is followed by a select when a new selected Tab exists.
WITHOUT_CLASSIFICATION	This event does not always hit the righr editor !? That's why we can't use _sqlEntryPanelIdentifier
WITHOUT_CLASSIFICATION	Check to see if the string is a file uri.
WITHOUT_CLASSIFICATION	Not a uri - assume it is a string filename.
WITHOUT_CLASSIFICATION	the line is a comment (as per the RFC 2483)
WITHOUT_CLASSIFICATION	malformed URI
WITHOUT_CLASSIFICATION	the URI is not a valid 'file:' URI
WITHOUT_CLASSIFICATION	light blue colors
WITHOUT_CLASSIFICATION	58, 110, 165); 189, 220, 251); 153, 179, 205);
WITHOUT_CLASSIFICATION	i18n[AllBluesBoldMetalTheme.name=All Blues - Bold]
WITHOUT_CLASSIFICATION	JASON: Messages height should be stored with this.
WITHOUT_CLASSIFICATION	BaseMDIParentFrame
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	Initial load of prefs.
WITHOUT_CLASSIFICATION	i18n[MainFrame.saveSize=Save size]
WITHOUT_CLASSIFICATION	i18n[MainFrame.restoreSize=Restore saved size]
WITHOUT_CLASSIFICATION	Position window to where it was when last closed. If this is not on the screen, move it back on to the screen.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Under JDK1.4 an empty JComboBox has an almost zero width.
WITHOUT_CLASSIFICATION	_app.getDataCache().addAliasesListener(new MyAliasesListener(this));
WITHOUT_CLASSIFICATION	Under JDK1.4 an empty JComboBox has an almost zero width.
WITHOUT_CLASSIFICATION	Dont enable the session drop down if it is empty
WITHOUT_CLASSIFICATION	Needes to be done via event queque because adding the session to the drop down happens via the event queue too.
WITHOUT_CLASSIFICATION	private final JMenu _editMenu;
WITHOUT_CLASSIFICATION	SquirrelAction descriptions already contain the accelerator
WITHOUT_CLASSIFICATION	super.setVisible(value);
WITHOUT_CLASSIFICATION	_msgSplit.setDividerLocation(0.9d); _msgSplit.setResizeWeight(1.0);
WITHOUT_CLASSIFICATION	actions.get(ExecuteSqlAction.class).setEnabled(false);
WITHOUT_CLASSIFICATION	send a tree expansion event to the object tree
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	Refresh the currently selected tab.
WITHOUT_CLASSIFICATION	To change body of overridden methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Needed to make the panel set the divider location from preferences
WITHOUT_CLASSIFICATION	Required on Linux.
WITHOUT_CLASSIFICATION	i18n[CreateDriverAction.error.loadDefaultDrivers]
WITHOUT_CLASSIFICATION	i18n[CreateDriverAction.error.loadDefaultDrivers]
WITHOUT_CLASSIFICATION	Size to set child windows to.
WITHOUT_CLASSIFICATION	i18n[DumpApplicationAction.titleSuccess=Dump successful]
WITHOUT_CLASSIFICATION	i18n[DeleteAliasAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	Determine size of grid to tile into. e.g 3X3 for 9 cells.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	i18n[ConnectToAliasCommand.error.closeconnection=Error occured closing Connection]
WITHOUT_CLASSIFICATION	After this it can't be stopped anymore!
WITHOUT_CLASSIFICATION	i18n[DeleteDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.status=Application Status Bean]
WITHOUT_CLASSIFICATION	prompt the user to add a website url for this driver
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.drivers=Drivers]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.dumpingdrivers=Error dumping drivers]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.dumpingaliases=Error dumping aliases]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.aliases=Aliases]
WITHOUT_CLASSIFICATION	Dump drivers
WITHOUT_CLASSIFICATION	Dump System Properties.
WITHOUT_CLASSIFICATION	Dump aliases.
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.sessiondump=Session Dump: {0}]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.sessiondump=Error dumping sessions]
WITHOUT_CLASSIFICATION	Dump sessions.
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.combiningtempfiles=Error combining temp files into dump file]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.deletetempfile=Couldn't delete temporary DumpSession file]
WITHOUT_CLASSIFICATION	Nil out the timer so that it can be gc'd
WITHOUT_CLASSIFICATION	Get 10 lines at a time.
WITHOUT_CLASSIFICATION	i18n[OracleExceptionFormatter.positionLabel=Position: ]
WITHOUT_CLASSIFICATION	ISessionListener interface methods
WITHOUT_CLASSIFICATION	Don't try to find it if we have already created it.
WITHOUT_CLASSIFICATION	Since we depend upon the Connection class associated with the ISession, we need to keep a reference to the ISession we are associated with. However, this session could be closed, at which time we want to give up our reference so that it can be garbage collected.
WITHOUT_CLASSIFICATION	no rows selected.
WITHOUT_CLASSIFICATION	Label containing the location of the plugins at top of dialog.
WITHOUT_CLASSIFICATION	IMainPanelTab[] getMainTabbedPanePanels(ISession session);
WITHOUT_CLASSIFICATION	Table of loaded plugins in centre of dialog.
WITHOUT_CLASSIFICATION	column 1 is internal name
WITHOUT_CLASSIFICATION	column 3 is loaded status
WITHOUT_CLASSIFICATION	Empty body, purely to shorten the interface name for convienience.
WITHOUT_CLASSIFICATION	Renames the source column.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty method.
WITHOUT_CLASSIFICATION	throws PluginException
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Adds the new column (type: integer).
WITHOUT_CLASSIFICATION	See if plugin has any jars in lib dir.
WITHOUT_CLASSIFICATION	throws PluginException;
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.useCustomQTLabel=Use Custom Query Tokenizer]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.removeMultiLineCommentLabelTipText=]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.lineCommentLabel=Start of line comment]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.procedureSeparatorLabel=Procedure/Function Separator]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.borderLabel={0} Script Settings]
WITHOUT_CLASSIFICATION	Column 0 Row 0
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	JASON: What are its valid values?
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Add panels for core Squirrel functionality.
WITHOUT_CLASSIFICATION	Go thru all loaded plugins asking for panels.
WITHOUT_CLASSIFICATION	Add all panels to the tabbed pane.
WITHOUT_CLASSIFICATION	i18n[GeneralPreferencesPanel.squirrelHomePath=Home directory: -home {0}]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesTab.hint=Software Update Settings]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesTab.title=Update]
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Add panels for core Squirrel functionality.
WITHOUT_CLASSIFICATION	Go thru all loaded plugins asking for panels.
WITHOUT_CLASSIFICATION	Add all panels to the tabbed pane.
WITHOUT_CLASSIFICATION	i18n[DataTypePreferencesPanel.propsPanel.hint=Set options for specific Data Types]
WITHOUT_CLASSIFICATION	i18n[DataTypePreferencesPanel.propsPanel.title=Data Type Controls]
WITHOUT_CLASSIFICATION	We need this method to satisfy one of the Interfaces we implement, but since we have moved all operations to the DataType sub-panels which initialize their own data during creation, there is nothing for us to do here
WITHOUT_CLASSIFICATION	i18n[SQLPreferencesPanel.largeScriptStmtCount=Large Script Statement Count: ]
WITHOUT_CLASSIFICATION	JScrollPane sp = new JScrollPane(createDataTypesPanel()); sp.setPreferredSize(new Dimension(600, 450)); add(sp, gbc);
WITHOUT_CLASSIFICATION	add each of the panels created by the DataType objects for editing their own properties
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.channel=Channel:]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.updateSiteBorderLabel=Update Site]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.path=Path:]
WITHOUT_CLASSIFICATION	Test Connection Button Panel (Both the button and the status label
WITHOUT_CLASSIFICATION	Site type
WITHOUT_CLASSIFICATION	Update server name
WITHOUT_CLASSIFICATION	Separator
WITHOUT_CLASSIFICATION	Update server port
WITHOUT_CLASSIFICATION	Path to release.xml
WITHOUT_CLASSIFICATION	Local update directory
WITHOUT_CLASSIFICATION	Channnel combo-box
WITHOUT_CLASSIFICATION	URL text field
WITHOUT_CLASSIFICATION	separators need preferred size in GridBagLayout
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	String EDIT = "edit";
WITHOUT_CLASSIFICATION	Activate another session since the current active session has closed.
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Get an array since we dont want trouble with the sessionsList when we remove the sessions from it.
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	i18n[FileManager.confirm.filereplace={0} \nalready exists. Do you want to replace it?]
WITHOUT_CLASSIFICATION	invokeLater to make the call synchronto the event queue
WITHOUT_CLASSIFICATION	Do not do new HashMap() here.
WITHOUT_CLASSIFICATION	public SQLExecutionInfo(int idx) { this(idx, ""); }
WITHOUT_CLASSIFICATION	i18n[FileManager.error.cannotwritefile=File {0} \ncannot be written to.]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[FileManager.savedfile=Saved to {0}]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.cancelFailed=Failed to cancel statement. Perhaps the driver/RDDBMS does not support cancelling statements. See logs for further details ({0})]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.cancelSucceeded=The database has been asked to cancel the statment.]
WITHOUT_CLASSIFICATION	i18n[MessagePanel.clearLabel=Clear]
WITHOUT_CLASSIFICATION	Add mouse listener for displaying popup menu.
WITHOUT_CLASSIFICATION	/ Warning
WITHOUT_CLASSIFICATION	a light yellow
WITHOUT_CLASSIFICATION	StyleConstants.setBackground(_saSetError, Color.red);
WITHOUT_CLASSIFICATION	StyleConstants.setBackground(saSetErrorHistory, Color.pink);
WITHOUT_CLASSIFICATION	Start loading table/column info about the current database.
WITHOUT_CLASSIFICATION	This is set here as SessionPanel.dispose() will attempt to close the session.
WITHOUT_CLASSIFICATION	This is a reasonable default and makes initialization code run well
WITHOUT_CLASSIFICATION	If there is no sqlPanelAPI (e.g. the Object tree find editor) we assume no parser is necessary and thus provide a dummy impl.
WITHOUT_CLASSIFICATION	At this point we know that we have a 1.4 or higher java runtime
WITHOUT_CLASSIFICATION	i18n[Session.driverComplianceTitle=JRE/JDBC Version Mismatch]
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISession#confirmCloseWithUnsavedEdits()
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.tablenotfound=Cannot edit table because table cannot be found\nor table name is not unique in DB.]
WITHOUT_CLASSIFICATION	re-calculate fullTablename the next time it's requested.
WITHOUT_CLASSIFICATION	_session.getProperties().forceTableContentsOutputClassNameChange();
WITHOUT_CLASSIFICATION	forced edit mode ended because user changed the Session Properties
WITHOUT_CLASSIFICATION	start with illegal number of rows matching query
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	start with illegal number of rows matching query
WITHOUT_CLASSIFICATION	i18n[oracle.sequenceDetails=Details]
WITHOUT_CLASSIFICATION	Drops the original column.
WITHOUT_CLASSIFICATION	Adds a foreign key constraint to the source table for the new column.
WITHOUT_CLASSIFICATION	get WHERE clause using original value
WITHOUT_CLASSIFICATION	if the user has said to not use this column, then skip it
WITHOUT_CLASSIFICATION	everything seems to have worked ok
WITHOUT_CLASSIFICATION	The edited column is in the resultset twice (example: SELECT MyName, FROM MyTable). We won't add the this col to the where clause.
WITHOUT_CLASSIFICATION	convert user representation of null into an actual null
WITHOUT_CLASSIFICATION	do different things depending on data type
WITHOUT_CLASSIFICATION	insert the "WHERE" at the front if there is anything in the clause
WITHOUT_CLASSIFICATION	get the SQL session
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.rowmatched=\n Row {0} matched {1} rows in DB]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.rownotmatch=\n Row {0} did not match any row in DB]
WITHOUT_CLASSIFICATION	get WHERE clause for the selected row the -1 says to just use the contents of the values without any substitutions
WITHOUT_CLASSIFICATION	count how many rows this WHERE matches
WITHOUT_CLASSIFICATION	do the delete and add the number of rows deleted to the count
WITHOUT_CLASSIFICATION	i18n[oracle.displaysSequenceDetails=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.tabledbmismatch=There may be a mismatch between the table and the DB:\n{0}\nDo you wish to proceed with the deletes anyway?]
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.info.deletecancelled=Delete canceled at user request.]
WITHOUT_CLASSIFICATION	do the delete and add the number of rows deleted to the count
WITHOUT_CLASSIFICATION	try to delete
WITHOUT_CLASSIFICATION	Cache
WITHOUT_CLASSIFICATION	Cycled
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	we return something valid even if there is a DB error
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, just return
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	find the entry in colDefs matching this column
WITHOUT_CLASSIFICATION	DB cols are in same order as colDefs
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.retrievingdefaultvalues=Error retrieving default column values]
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	assuming that the columns in table match colDefs, bump the index to point to the next colDef entry
WITHOUT_CLASSIFICATION	start the string for use in the prepared statment
WITHOUT_CLASSIFICATION	add a variable position for each of the columns
WITHOUT_CLASSIFICATION	replace the last "," with ")"
WITHOUT_CLASSIFICATION	i18n[oracle.displaySessionStatistics=Display database session statistics]
WITHOUT_CLASSIFICATION	have the DataType object fill in the appropriate kind of value into the appropriate variable position in the prepared stmt
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.unknownerrorupdate=Unknown problem during update.\nNo count of inserted rows was returned.\nDatabase may be corrupted!]
WITHOUT_CLASSIFICATION	insert succeeded
WITHOUT_CLASSIFICATION	This might be because an table alias is used maybe with an AS before it.
WITHOUT_CLASSIFICATION	i18n[ObjectTreeSearch.error.objectnotfound=Could not locate the database object ''{0}'' in Object tree]
WITHOUT_CLASSIFICATION	(ALLOWS_EDITING_FALSE == ret)
WITHOUT_CLASSIFICATION	no support for undo
WITHOUT_CLASSIFICATION	JASON: Removed as part of patch void addSessionListener(ISessionListener lis);
WITHOUT_CLASSIFICATION	Process each individual query.
WITHOUT_CLASSIFICATION	Some driver don't correctly support setMaxRows. In these cases use setMaxRows only if this is a SELECT.
WITHOUT_CLASSIFICATION	Display any warnings generated by the SQL execution.
WITHOUT_CLASSIFICATION	User has cancelled the query execution.
WITHOUT_CLASSIFICATION	... now we have reached an output that is not a result. We now have to aks for this outputs update count.
WITHOUT_CLASSIFICATION	filter the list of all DB objects looking for things with the given name
WITHOUT_CLASSIFICATION	ok, that didn't work - let's see if the table looks fully qualified. if so, we'll split the name from the schema/catalog and try that.
WITHOUT_CLASSIFICATION	Ok, maybe catalog was really a schema instead.
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.event.UndoableEditListener#undoableEditHappened(javax.swing.event.UndoableEditEvent)
WITHOUT_CLASSIFICATION	i18n[SQLPanelAPI.untitledLabel=Untitled]
WITHOUT_CLASSIFICATION	Can't work with ISessionAction because if a result window is on top the session in a ISessionAction is null.
WITHOUT_CLASSIFICATION	Dump meta data.
WITHOUT_CLASSIFICATION	Dump driver information.
WITHOUT_CLASSIFICATION	Dump session properties.
WITHOUT_CLASSIFICATION	Dump general connection info.
WITHOUT_CLASSIFICATION	Dump alias information.
WITHOUT_CLASSIFICATION	Dump data types.
WITHOUT_CLASSIFICATION	Dump schemas.
WITHOUT_CLASSIFICATION	Dump catalogs.
WITHOUT_CLASSIFICATION	Dump general connection info.
WITHOUT_CLASSIFICATION	@see ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see IClientSessionAction#setSession(ISession)
WITHOUT_CLASSIFICATION	i18n[DeleteTablesCommand.loadingPrefix=Analyzing table:]
WITHOUT_CLASSIFICATION	Get all the selected object names and place in a comma separated list.
WITHOUT_CLASSIFICATION	Remove trailing ", ".
WITHOUT_CLASSIFICATION	Ensure that the proper type of Object is selected in the Object Tree.
WITHOUT_CLASSIFICATION	Can't delete records in snapshots (Oracle materialized views)
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Only Oracle supports materialized views directly.
WITHOUT_CLASSIFICATION	execute command
WITHOUT_CLASSIFICATION	i18n[DumpSessionAction.success=Session successfuly dumped to: {0}]
WITHOUT_CLASSIFICATION	The Math.min is for the Caret at the end of the text
WITHOUT_CLASSIFICATION	@see ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Ensure that the proper type of Object is selected in the Object Tree before allowing the SQL Filter to be activated.
WITHOUT_CLASSIFICATION	Empty body
WITHOUT_CLASSIFICATION	Empty Bbody
WITHOUT_CLASSIFICATION	Empty Body
WITHOUT_CLASSIFICATION	Empty Body
WITHOUT_CLASSIFICATION	private JTabbedPane _tabbedResultsPanel;
WITHOUT_CLASSIFICATION	private Map _allTabs = new HashMap();
WITHOUT_CLASSIFICATION	private List _availableTabs = new ArrayList();
WITHOUT_CLASSIFICATION	private ArrayList _usedTabs = new ArrayList();
WITHOUT_CLASSIFICATION	_listeners.remove(ISQLExecutionListener.class, lis);
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	_tabbedResultsPanel = UIFactory.getInstance().createTabbedPane();
WITHOUT_CLASSIFICATION	i18n[SQLPanel.limitrowscheckbox.hint=Limit rows: ]
WITHOUT_CLASSIFICATION	Set focus to the SQL entry panel.
WITHOUT_CLASSIFICATION	i18n[PleaseWaitDialog.queryExecuting=Query is executing]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	Prepare to have a lot of DocumentEvent.EventType.CHANGE
WITHOUT_CLASSIFICATION	Display the result set.
WITHOUT_CLASSIFICATION	Display the result set metadata.
WITHOUT_CLASSIFICATION	Why null??
WITHOUT_CLASSIFICATION	1.5 "@ident" annotation NOI18N
WITHOUT_CLASSIFICATION	i18n[ResultTab.executedLabel=Executed:]
WITHOUT_CLASSIFICATION	And the query info.
WITHOUT_CLASSIFICATION	final Resources rsrc = _session.getApplication().getResources();
WITHOUT_CLASSIFICATION	i18n[ResultTab.elapsedTimeLabel=Elapsed Time (seconds):]
WITHOUT_CLASSIFICATION	Empty method.
WITHOUT_CLASSIFICATION	Empty method.
WITHOUT_CLASSIFICATION	Needs to be done in both cases because if the window goes back to the default layer it goes back behind all other windows too.
WITHOUT_CLASSIFICATION	The SQLHistoryComboBoxModel has a static member that prevents garbage collection. Therefore we need to remove the model.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Sticky is turned off. Just remove sticky and return.
WITHOUT_CLASSIFICATION	remove old sticky tab
WITHOUT_CLASSIFICATION	Check for whitespace
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Check for digit
WITHOUT_CLASSIFICATION	white space
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	!!! return SQLTokenContext.INCOMPLETE_STRING_LITERAL;
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Either resultTabToReplace or _stickyTab must be not null here
WITHOUT_CLASSIFICATION	transparent
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.close=Close]
WITHOUT_CLASSIFICATION	Just add the tab
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.closeAll=Close all]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.toggleSticky=Toggle sticky]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.execStatus=Executing SQL...]
WITHOUT_CLASSIFICATION	Track the time in aggregate for the script.
WITHOUT_CLASSIFICATION	!!! return SQLTokenContext.INCOMPLETE_CHAR_LITERAL;
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	Options
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.rowsUpdated={0} Row(s) Inserted]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.rowsDeleted={0} Row(s) Deleted]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.rowsUpdated={0} Row(s) Updated]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.outputStatus=Building output...]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.currentSQLLabel={0} of {1} - {2}]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.statusLabel=Status:]
WITHOUT_CLASSIFICATION	i18n[SQLTab.title=SQL]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	corresponding to COLUMNS
WITHOUT_CLASSIFICATION	Make sure no duplicates are kept in history.
WITHOUT_CLASSIFICATION	Standard expanders.
WITHOUT_CLASSIFICATION	must be done in the GUI thread
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for database nodes.
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for schema nodes.
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for UDT nodes.
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for table nodes.
WITHOUT_CLASSIFICATION	setupTabbedPane((ObjectTreeTabbedPane)it.next());
WITHOUT_CLASSIFICATION	private final ISession _session;
WITHOUT_CLASSIFICATION	_session = session;
WITHOUT_CLASSIFICATION	Add actions to the popup menu.
WITHOUT_CLASSIFICATION	Options for global popup menu.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Register so that we can display different tooltips depending which entry in list mouse is over.
WITHOUT_CLASSIFICATION	Don't need tooltips any more.
WITHOUT_CLASSIFICATION	No need to this in background when SchemaInfo is not reloaded.
WITHOUT_CLASSIFICATION	We only show row counts for tables and views. Other objects won't be affected by changing row counts.
WITHOUT_CLASSIFICATION	If node hasn't already been expanded.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	See if all selected nodes are of the same type.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	Menues that are also shown in the main window Session menu might be in this popup. If we don't remove them, the Session won't be Garbage Collected.
WITHOUT_CLASSIFICATION	Get the node to be expanded.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	Add table types to list.
WITHOUT_CLASSIFICATION	Add stored proc parent node.
WITHOUT_CLASSIFICATION	Add UDT parent node.
WITHOUT_CLASSIFICATION	i18n[oracle.columns=Columns]
WITHOUT_CLASSIFICATION	i18n[DatabaseObjectInfoTab.title=Info]
WITHOUT_CLASSIFICATION	i18n[DatabaseObjectInfoTab.hint=Basic information]
WITHOUT_CLASSIFICATION	i18n[BaseSourceTab.title=Source]
WITHOUT_CLASSIFICATION	default is no reference
WITHOUT_CLASSIFICATION	we need the try/catch just to keep the compiler happy
WITHOUT_CLASSIFICATION	private ISession _session;
WITHOUT_CLASSIFICATION	LineNumber height (abends when I use MAX_VALUE)
WITHOUT_CLASSIFICATION	Set right/left margin
WITHOUT_CLASSIFICATION	Variables for this LineNumber component
WITHOUT_CLASSIFICATION	i18n[KeywordsTab.title=Keywords]
WITHOUT_CLASSIFICATION	Update sizes when number of digits in the line number changes
WITHOUT_CLASSIFICATION	Paint the background
WITHOUT_CLASSIFICATION	Determine the number of lines to draw in the foreground.
WITHOUT_CLASSIFICATION	i18n[StringFunctionsTab.title=String Functions]
WITHOUT_CLASSIFICATION	'' outside comment
WITHOUT_CLASSIFICATION	i18n[StringFunctionsTab.hint=Show all the string functions available in DBMS]
WITHOUT_CLASSIFICATION	i18n[DataTypesTab.title=Data Types]
WITHOUT_CLASSIFICATION	i18n[SchemasTab.hint=Show all the schemas]
WITHOUT_CLASSIFICATION	i18n[ProcedureColumnsTab.hint=Show columns for the selected procedure]
WITHOUT_CLASSIFICATION	i18n[ProcedureColumnsTab.title=Columns]
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	i18n[IndexesTab.title=Indexes]
WITHOUT_CLASSIFICATION	Frontbase describes it's tables as "BASE TABLE".
WITHOUT_CLASSIFICATION	i18n[RowCountTab.title=Row Count]
WITHOUT_CLASSIFICATION	Provide the actual integer value, as well as it's meaning
WITHOUT_CLASSIFICATION	i18n[ContentsTab.title=Content]
WITHOUT_CLASSIFICATION	i18n[RowCountTab.hint=Number of rows in the selected table]
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	needed to prevent an infinite loop
WITHOUT_CLASSIFICATION	props.forceTableContentsOutputClassNameChange();
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	We assume here that if the pseudoColumn was used in the query, then it was likely to have caused the SQLException. If not, (length == 0), then retrying the query won't help - just throw the exception.
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	get the nullability information and pass it into the ResultSet Unfortunately, not all DBMSs provide the column number in object 17 as stated in the SQL documentation, so we have to guess that the result set is in column order
WITHOUT_CLASSIFICATION	Restore the paths
WITHOUT_CLASSIFICATION	Only do this if the object tree (and hence this contents tab) is visible.
WITHOUT_CLASSIFICATION	Save off selections so that selection/focus can be restored later.
WITHOUT_CLASSIFICATION	i18n[VersionColumnsTab.title=Versions]
WITHOUT_CLASSIFICATION	i18n[VersionColumnsTab.hint=Show columns that are automatically updated when the row is updated]
WITHOUT_CLASSIFICATION	i18n[PrimaryKeyTab.title=Primary Key]
WITHOUT_CLASSIFICATION	i18n[PrimaryKeyTab.hint=Show primary key for the selected table]
WITHOUT_CLASSIFICATION	i18n[RowIDTab.title=Row IDs]
WITHOUT_CLASSIFICATION	i18n[TablePriviligesTab.hint=Show access rights for the selected table]
WITHOUT_CLASSIFICATION	token kind token position in the source text (starting at 0) token column (starting at 0) token line (starting at 1) exact string value token string value (uppercase if ignoreCase)
WITHOUT_CLASSIFICATION	set of characters to be ignored by the scanner
WITHOUT_CLASSIFICATION	error messages
WITHOUT_CLASSIFICATION	input scanner last recognized token lookahead token
WITHOUT_CLASSIFICATION	or a white space must be in front of the keyword.
WITHOUT_CLASSIFICATION	-1 because column starts with 1 put pos with 0
WITHOUT_CLASSIFICATION	Either are at teh beginning ...
WITHOUT_CLASSIFICATION	On Errors we restart the parser behind the error
WITHOUT_CLASSIFICATION	wait for pending chars to be processed post new characters
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	tell the UI that this _workingBuffer is through
WITHOUT_CLASSIFICATION	i18n[parserthread.undefinedTable=undefined table]
WITHOUT_CLASSIFICATION	number of errors detected
WITHOUT_CLASSIFICATION	i18n[ErrorStream.error.syntax=Syntax error {0}]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.notexpected=not expected]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.unexpectedsymbol=this symbol not expected in]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.invalid=invalid]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.error.semantic=Semantic error {0}]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.noerrors=No errors detected]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.multipleerrors={0} errors detected]
WITHOUT_CLASSIFICATION	FA_xxx
WITHOUT_CLASSIFICATION	schema should be identical to the statement. Ignore
WITHOUT_CLASSIFICATION	check if this completion request is outside the original definition point
WITHOUT_CLASSIFICATION	try as an alias
WITHOUT_CLASSIFICATION	could also be a table name
WITHOUT_CLASSIFICATION	see if its a one-table statement
WITHOUT_CLASSIFICATION	now match the columns
WITHOUT_CLASSIFICATION	no need to return if completion is identical
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	try to save the selection. do not dispose of this panel if there is a problem
WITHOUT_CLASSIFICATION	i18n[editWherColsSheet.ok=OK]
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	leave a blank line just to make it look a bit nicer
WITHOUT_CLASSIFICATION	leave a blank line just to make it look a bit nicer
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.editableTable=Editable Table]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.tableContents=Table Contents:]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.dataTYpe2='General Preferences' window under the 'Data Type Controls' tab.]
WITHOUT_CLASSIFICATION	i18n[editWherColsSheet.output=Output]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.bottom=Bottom]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.limitColsInCell=Limit Columns in Cell Edit]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.limitColsInCellHint=Limit columns used in WHERE clause when editing table]
WITHOUT_CLASSIFICATION	save the input for use later
WITHOUT_CLASSIFICATION	look up the table in the EditWhereCols list
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.cannotRemoveAllCols=You cannot remove all of the fields from the 'use columns' list.]
WITHOUT_CLASSIFICATION	create all of the gui objects now
WITHOUT_CLASSIFICATION	if all cols are in the "to use" side, delete from EditWhereCols
WITHOUT_CLASSIFICATION	some cols are not to be used
WITHOUT_CLASSIFICATION	do not let user remove everything from the list
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.useColumns=Use Columns]
WITHOUT_CLASSIFICATION	create the HashMap of names to use and put it in EditWhereCols
WITHOUT_CLASSIFICATION	get the values from the "not use" list and convert to sorted set
WITHOUT_CLASSIFICATION	get the values from the "use" list
WITHOUT_CLASSIFICATION	create an empty set for the "use" list
WITHOUT_CLASSIFICATION	get the values from the "use" list and convert to sorted set
WITHOUT_CLASSIFICATION	get the values from the "not use" list
WITHOUT_CLASSIFICATION	create an empty set for the "not use" list
WITHOUT_CLASSIFICATION	for each element in the "not use" set, if selected then add to "use", otherwise add to new "not use" set
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.catalogPrefix=Limit Catalog Objects using these comma-delimited prefixes:]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.limitRowsContents=Contents - Limit rows]
WITHOUT_CLASSIFICATION	Add node for each object.
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.showRowCount=Show Row Count for Tables (can slow application)]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.objectTree=Object Tree]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.rows=rows]
WITHOUT_CLASSIFICATION	i18n[sessionObjectTreePropetiesPanel.filters=Filters]
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesSheet.sessionProperties=- Session Properties]
WITHOUT_CLASSIFICATION	To change body of overridden methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Property panels for SQuirreL.
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesSheet.close=Close]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesSheet.ok=OK]
WITHOUT_CLASSIFICATION	Go thru all plugins attached to this session asking for panels.
WITHOUT_CLASSIFICATION	Add all panels to the tabbed panel.
WITHOUT_CLASSIFICATION	first convert internal data into the string array
WITHOUT_CLASSIFICATION	get each table's info
WITHOUT_CLASSIFICATION	put this into the data array
WITHOUT_CLASSIFICATION	make sure we are starting clean
WITHOUT_CLASSIFICATION	convert each string into key+HashMap and fill it into the data
WITHOUT_CLASSIFICATION	we are at the last one in the list
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingFunctions=Loading functions]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingSchemas=Loading schemas]
WITHOUT_CLASSIFICATION	By default null == types we return only cached types
WITHOUT_CLASSIFICATION	put the map into the tables db with the table name as the key
WITHOUT_CLASSIFICATION	Extra keywords that this DBMS supports.
WITHOUT_CLASSIFICATION	The SessionManager is global to SQuirreL. If we don't remove the listeners the Session won't get Garbeage Collected.
WITHOUT_CLASSIFICATION	load tables with catalog = doi.getCatalog() and schema = doi.getSchema()
WITHOUT_CLASSIFICATION	load views with catalog = doi.getCatalog() and schema = doi.getSchema()
WITHOUT_CLASSIFICATION	load procedures with catalog = null
WITHOUT_CLASSIFICATION	load procedures with schema = null
WITHOUT_CLASSIFICATION	it's error to have '8' and '9' in octal number
WITHOUT_CLASSIFICATION	'8' and '9' already handled
WITHOUT_CLASSIFICATION	/ Schema dependent data. Are changed only in this class
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	null == schemaLoadInfos[0].schemaName is the case when there are no _schemas specified schemaLoadInfos.length will then be 1.
WITHOUT_CLASSIFICATION	only single dot
WITHOUT_CLASSIFICATION	Now, create an array large enough to hold the original and the new
WITHOUT_CLASSIFICATION	Append the new tables to the new array, starting at the end of the original
WITHOUT_CLASSIFICATION	Sort it and store in a new CopyOnWriteArrayList
WITHOUT_CLASSIFICATION	CopyOnWriteArrayList has snapshot iterators that don't support iterator.remove()
WITHOUT_CLASSIFICATION	Unfortunately, conversion to uppercase does not work properly for the Georgian alphabet, which has strange rules about case conversion. So we need to make one last check before exiting.
WITHOUT_CLASSIFICATION	Current Alias Schema properties dont want cache. so we don't cache.
WITHOUT_CLASSIFICATION	reload complete SchemaInfo
WITHOUT_CLASSIFICATION	DB2 stores all names in upper case. PostgreSQL stores table names in lower case. That's why we may not find table as it was written in the create statement. So we try out the upper and lower case names too.
WITHOUT_CLASSIFICATION	i18n[oracle.displayColumns=Display index column information]
WITHOUT_CLASSIFICATION	stay in line-comment state
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.dontShowAgain=Don't show this message again]
WITHOUT_CLASSIFICATION	stay in block-comment state
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.columnLabel=Columns]
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.close=Close]
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.showAliasProps=Open Alias Schema Properties]
WITHOUT_CLASSIFICATION	hold the state
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.valueLabel=Value]
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.whereClauseLabel=Where Clause]
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.hint=Where clause for the selected table]
WITHOUT_CLASSIFICATION	hold the state
WITHOUT_CLASSIFICATION	Put the 'AND' or the 'OR' in front of the clause if there are already values in the text area.
WITHOUT_CLASSIFICATION	i18n[oracle.triggerDetails=Details]
WITHOUT_CLASSIFICATION	If the column is a text column, and there aren't single quotes around the value, put them there.
WITHOUT_CLASSIFICATION	i18n[oracle.displayTriggerDetails=Display trigger details]
WITHOUT_CLASSIFICATION	First parse the SQL string
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.columnsLabel=Columns]
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.hint=Order by clause for the selected table]
WITHOUT_CLASSIFICATION	Users.
WITHOUT_CLASSIFICATION	These must not be internationalized since SQL tokens must be in English No I18N No I18N
WITHOUT_CLASSIFICATION	1. Find the local release.xml file
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.error.columnList=Unable to get list of columns {0}]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.downloadingUpdatesMsg=Downloading Files]
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	boolean isUpToDate() throws Exception;
WITHOUT_CLASSIFICATION	To change body of created methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Channel that provides stable release updates
WITHOUT_CLASSIFICATION	Check once a day Check once a week check every time the app launches
WITHOUT_CLASSIFICATION	Channel that provides snapshot release updates - more frequent and less stable
WITHOUT_CLASSIFICATION	When all updates are retrieved, tell the user that the updates will be installed upon the next startup.
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.changesRecordedMsg=Requested changes will be made when SQuirreL is restarted]
WITHOUT_CLASSIFICATION	2. Load the local release.xml file as a ChannelXmlBean.
WITHOUT_CLASSIFICATION	2. Load the local release.xml file as a ChannelXmlBean.
WITHOUT_CLASSIFICATION	3. Determine the channel that the user wants (stable or snapshot)
WITHOUT_CLASSIFICATION	4. Get the release.xml file as a ChannelXmlBean from the server or filesystem.
WITHOUT_CLASSIFICATION	5. Is it the same as the local copy, which was placed either by the installer or the last update?
WITHOUT_CLASSIFICATION	build data
WITHOUT_CLASSIFICATION	build ui
WITHOUT_CLASSIFICATION	Persists the change list to the update directory.
WITHOUT_CLASSIFICATION	Kick off a thread to go and fetch the files one-by-one and register callback class - DownloadStatusEventHandler
WITHOUT_CLASSIFICATION	1. Wait for user to click ok/close
WITHOUT_CLASSIFICATION	2. Display global preferences
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	2. When the user clicks ok, then display update dialog again.
WITHOUT_CLASSIFICATION	Check to see if to is a directory and convert toFile to be the name of the file in that directory.
WITHOUT_CLASSIFICATION	Helper Methods
WITHOUT_CLASSIFICATION	If the update dir, is actually a file, log an error.
WITHOUT_CLASSIFICATION	If the downloads dir doesn't already exist, just create it.
WITHOUT_CLASSIFICATION	1. Find the local release.xml file. Bail with exception if we cannot find it.
WITHOUT_CLASSIFICATION	5. Is it the same as the local copy, which was placed either by the installer or the last update?
WITHOUT_CLASSIFICATION	-1 is stored if the checksum operation failed. This will ensure that comparison with any other file's checksum will be different - even if they happen to be the same file.
WITHOUT_CLASSIFICATION	3. & 3a. Get the release.xml file as a ChannelXmlBean from the server or filesystem.
WITHOUT_CLASSIFICATION	Record now as the last time we checked for updates.
WITHOUT_CLASSIFICATION	3a. For server, Determine the channel that the user has (stable or snapshot)
WITHOUT_CLASSIFICATION	Since this timer must be started when SQuirreL is launched, wait a couple of minutes for SQuirreL to get done initializing the UI.
WITHOUT_CLASSIFICATION	Since the user only wants to be notified of updates at startup, return here, thereby freeing up the thread.
WITHOUT_CLASSIFICATION	Since this thread is not a UI thread, it is ok to run the task synchronously.
WITHOUT_CLASSIFICATION	no update done to underlying data
WITHOUT_CLASSIFICATION	All currently installed artifacts will be marked with INSTALL action.
WITHOUT_CLASSIFICATION	Copy the app module jar to core downloads directory
WITHOUT_CLASSIFICATION	get the type of artifact
WITHOUT_CLASSIFICATION	Remove the core items since they are the most recent, and the user is not allowed to remove them
WITHOUT_CLASSIFICATION	is it installed?
WITHOUT_CLASSIFICATION	core artifacts are not displayed
WITHOUT_CLASSIFICATION	ArtifactName Type Installed? Install/Update/Remove
WITHOUT_CLASSIFICATION	Label panel containing the versions for the update at top of dialog.
WITHOUT_CLASSIFICATION	Install directories
WITHOUT_CLASSIFICATION	GUI Widgets
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Spring-injected dependencies
WITHOUT_CLASSIFICATION	Download directories
WITHOUT_CLASSIFICATION	Backup directories
WITHOUT_CLASSIFICATION	Skip files that are not installed - new files
WITHOUT_CLASSIFICATION	artifact name for plugins is <plugin internal name>.zip
WITHOUT_CLASSIFICATION	translations are most likely to be found in core lib dir.
WITHOUT_CLASSIFICATION	Need to remove the existing jar in the plugins directory and all of the files beneath the plugin-named directory.
WITHOUT_CLASSIFICATION	Skip the artifact if it is identical to the one that is already installed
WITHOUT_CLASSIFICATION	We have a core or translation file that is not already installed - add it
WITHOUT_CLASSIFICATION	Handle squirrel-sql.jar and documentation archive carefully - they live at the top
WITHOUT_CLASSIFICATION	strange that release xml file wasn't found; but not a problem at this point - just log it.
WITHOUT_CLASSIFICATION	This file is a zip; it needs to be extracted into the install directory. All zips are packaged in such a way that the extraction beneath install directory is all that is required.
WITHOUT_CLASSIFICATION	--------------------------- Spring=injected dependencies --------------------------------------------
WITHOUT_CLASSIFICATION	Spring-injected
WITHOUT_CLASSIFICATION	Spring-injected
WITHOUT_CLASSIFICATION	----------------------------------- Public API ------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------- Helper methods ------------------------------------------------
WITHOUT_CLASSIFICATION	f is a module
WITHOUT_CLASSIFICATION	Time to wait between checks that the event dispatch thread isn't hung.
WITHOUT_CLASSIFICATION	Maximum time we won't warn about.
WITHOUT_CLASSIFICATION	When we started dispatching the current event, in milliseconds.
WITHOUT_CLASSIFICATION	Have we already dumped a stack trace for the current event dispatch?
WITHOUT_CLASSIFICATION	The event dispatch thread, for the purpose of getting stack traces.
WITHOUT_CLASSIFICATION	Don't keep reporting the same hang every 100 ms.
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.restoreFailedMessage=Restore from backup failed. Re-installation may be required.
WITHOUT_CLASSIFICATION	Used as the value of startedLastEventDispatchAt when we're not in the middle of event dispatch.
WITHOUT_CLASSIFICATION	Synchronize on the outer class, because that's where all the state lives.
WITHOUT_CLASSIFICATION	We know that it's not interesting to show any code above where we get involved in event dispatch, so we stop printing the stack trace when we get as far back as our code.
WITHOUT_CLASSIFICATION	I don't know of any API for getting the event dispatch thread, but we can assume that it's the current thread if we're in the middle of dispatching an AWT event...
WITHOUT_CLASSIFICATION	get size of document width in pixels height in pixels height of printer page width of printer page
WITHOUT_CLASSIFICATION	make sure not print empty pages
WITHOUT_CLASSIFICATION	shift Graphic to line up with beginning of print-imageable region
WITHOUT_CLASSIFICATION	shift Graphic to line up with beginning of next page to print
WITHOUT_CLASSIFICATION	scale the page so the width fits...
WITHOUT_CLASSIFICATION	for faster printing, turn off double buffering
WITHOUT_CLASSIFICATION	repaint the page for printing
WITHOUT_CLASSIFICATION	first time through this method in program, so go cleanup old log files
WITHOUT_CLASSIFICATION	public File getDebugLogFile() { return new File(_userSettingsDir + File.separator + "squirrel-sql-debug.log"); }
WITHOUT_CLASSIFICATION	the number of files to keep is arbitrarilly set here
WITHOUT_CLASSIFICATION	define filter to select only names using the fileBase
WITHOUT_CLASSIFICATION	get the directory
WITHOUT_CLASSIFICATION	create filename filter and attach to directory
WITHOUT_CLASSIFICATION	get list of files using that base name
WITHOUT_CLASSIFICATION	not too many old files
WITHOUT_CLASSIFICATION	we do not expect a lot of files in this directory, so just do things linearly
WITHOUT_CLASSIFICATION	sort the list
WITHOUT_CLASSIFICATION	delete the old file
WITHOUT_CLASSIFICATION	a.put("Built-By", "manningr"); argMap.get(BUILT_BY_KEY)
WITHOUT_CLASSIFICATION	Inserts are not properly separated. We give up.
WITHOUT_CLASSIFICATION	i18n[editextras.reformatFailed=Reformat failed, normalized Strings differ]
WITHOUT_CLASSIFICATION	If our separator is the regular expression special char '|', then quote it before formatting.
WITHOUT_CLASSIFICATION	No special treatment
WITHOUT_CLASSIFICATION	No special treatment
WITHOUT_CLASSIFICATION	Not successful
WITHOUT_CLASSIFICATION	Not successful
WITHOUT_CLASSIFICATION	Split the first two matching toplevel brakets here
WITHOUT_CLASSIFICATION	/ Now check length of Strings in splitPieces1 again
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	the next top level ket is the counterpart to bra
WITHOUT_CLASSIFICATION	No flaten. We would turn statement parts to comment
WITHOUT_CLASSIFICATION	light yellow
WITHOUT_CLASSIFICATION	without this the completion panel's size will be weird
WITHOUT_CLASSIFICATION	Needs to be done later because when reInitList is called, the text componetes model is not yet up to date. E.g. the last character is missing.
WITHOUT_CLASSIFICATION	needed to resize completion panle appropriately see initializationof _curCompletionPanelSize
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Update the bounds of the popup
WITHOUT_CLASSIFICATION	Convert to layered pane's coordinates
WITHOUT_CLASSIFICATION	can't fit -> hide
WITHOUT_CLASSIFICATION	valid bounds
WITHOUT_CLASSIFICATION	not in scroll pane
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.nullableTypeNullableUnknown=unknown]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.searchableTypePredBasic=supports all except 'WHERE...LIKE']
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	SEARCHABLE column of result set.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	resolve Largest and Preferred placements if possible
WITHOUT_CLASSIFICATION	Compute available height above the cursor
WITHOUT_CLASSIFICATION	more space below
WITHOUT_CLASSIFICATION	more space above
WITHOUT_CLASSIFICATION	popup does not fit with the orig placement
WITHOUT_CLASSIFICATION	do one or two passes
WITHOUT_CLASSIFICATION	Temporary events need to be included in case a modla dialog opens.
WITHOUT_CLASSIFICATION	place popup according to caret position and Placement
WITHOUT_CLASSIFICATION	private boolean _showHeadings;
WITHOUT_CLASSIFICATION	Note: Temporary events need to be included in case a modla dialog opens.
WITHOUT_CLASSIFICATION	Some drivers will give null.
WITHOUT_CLASSIFICATION	NULLABLE column of result set.
WITHOUT_CLASSIFICATION	private ColumnDisplayDefinition[] _hdgs = new ColumnDisplayDefinition[0];
WITHOUT_CLASSIFICATION	get the ConentPane into a variable for convenience
WITHOUT_CLASSIFICATION	ignore - unused.
WITHOUT_CLASSIFICATION	the table containing the user's input
WITHOUT_CLASSIFICATION	object that called us and that we want to return data to when done
WITHOUT_CLASSIFICATION	save data passed in to us
WITHOUT_CLASSIFICATION	set layout
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	user said to insert, so collect all the data from the JTable and send it to the DataSetViewer for insertion into DB and on-screen tables
WITHOUT_CLASSIFICATION	DATA_TYPE column of result set. int data = _rs.getInt(idx);
WITHOUT_CLASSIFICATION	If all columns in a table have empty strings as the headings then the row height of the label row is zero. We dont want this.
WITHOUT_CLASSIFICATION	create the JTable for input and put in the top of window
WITHOUT_CLASSIFICATION	add row headers to help user understand what the second row is
WITHOUT_CLASSIFICATION	create the buttons for input done and cancel
WITHOUT_CLASSIFICATION	this frame should really go away when done
WITHOUT_CLASSIFICATION	display the frame
WITHOUT_CLASSIFICATION	do not recognize this button request
WITHOUT_CLASSIFICATION	first make sure that user's last input has been included (It is too easy for user to enter data and forget to click on another field to force it to be set.)
WITHOUT_CLASSIFICATION	put the data into the DB and the on-screen JTable. If there was a failure, do not make this form go away since the user may be able to fix the problem by changing the data.
WITHOUT_CLASSIFICATION	the insert worked, so make this input form go away
WITHOUT_CLASSIFICATION	create column model
WITHOUT_CLASSIFICATION	set up cell editors on first row
WITHOUT_CLASSIFICATION	the second row contains a multi-line description, so make that row high enough to display it
WITHOUT_CLASSIFICATION	add mouse listener for Popup
WITHOUT_CLASSIFICATION	for now, ignore popup request RowDataJTable.this.displayPopupMenu(evt);
WITHOUT_CLASSIFICATION	for now, ignore popup request RowDataJTable.this.displayPopupMenu(evt);
WITHOUT_CLASSIFICATION	figure out which column the user clicked on so we can pass in the right column description
WITHOUT_CLASSIFICATION	only the first row (containing data) is editable
WITHOUT_CLASSIFICATION	for entries past the first one, use the default renderer
WITHOUT_CLASSIFICATION	i18n[rowInputDataFrame.conversionErr=Conversion Error]
WITHOUT_CLASSIFICATION	colDefs[i].getSqlTypeName() + "\n" + ((colDefs[i].isNullable()) ? "nullable" : "not nullable") + "\n" + "precision="+ colDefs[i].getPrecision() + "\n" + "scale=" + colDefs[i].getScale();
WITHOUT_CLASSIFICATION	data is an object - assume already validated
WITHOUT_CLASSIFICATION	data is a String, so we need to convert to real object
WITHOUT_CLASSIFICATION	display error message and do not update the table
WITHOUT_CLASSIFICATION	data converted ok, so update the table
WITHOUT_CLASSIFICATION	set up the list of column names and the data for the rows
WITHOUT_CLASSIFICATION	set column heading set data in first row
WITHOUT_CLASSIFICATION	put a description of the field in the following rows
WITHOUT_CLASSIFICATION	put the data and header names into the model
WITHOUT_CLASSIFICATION	The text area displaying the object contents
WITHOUT_CLASSIFICATION	the scroll pane that holds the text area
WITHOUT_CLASSIFICATION	Description needed to handle conversion of data to/from Object
WITHOUT_CLASSIFICATION	name of file to do export/import/process on
WITHOUT_CLASSIFICATION	command to use when processing data with an external program
WITHOUT_CLASSIFICATION	save the original value for re-use by CLOB/BLOB types in conversion
WITHOUT_CLASSIFICATION	Binary data viewing option: which radix to use This object is only non-null when the data is binary data
WITHOUT_CLASSIFICATION	Binary data viewing option: view ascii as char rather than as numeric value
WITHOUT_CLASSIFICATION	user asked to see binary data in a different format default to hex
WITHOUT_CLASSIFICATION	return the expected format for this data default to hex
WITHOUT_CLASSIFICATION	tell user it is editable
WITHOUT_CLASSIFICATION	add a panel containing binary data editing options, if needed
WITHOUT_CLASSIFICATION	this is a binary field, so allow for multiple viewing options
WITHOUT_CLASSIFICATION	Instances.
WITHOUT_CLASSIFICATION	Sessions.
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.withCommand=With command:]
WITHOUT_CLASSIFICATION	GET OSX_FILE FOR EXPORT & EXTERNAL PROCESSING
WITHOUT_CLASSIFICATION	Symbol used by user in Command field to indicate "Put the file name here" when the command is executed.
WITHOUT_CLASSIFICATION	import and external processing can only be done if panel is editable
WITHOUT_CLASSIFICATION	use default sequential layout
WITHOUT_CLASSIFICATION	load filename and command with previously entered info if not the default
WITHOUT_CLASSIFICATION	add some space
WITHOUT_CLASSIFICATION	add external processing command field and button
WITHOUT_CLASSIFICATION	add controls for file handling, but only if DataType can do File operations
WITHOUT_CLASSIFICATION	do not do import
WITHOUT_CLASSIFICATION	yes it can, so add controls
WITHOUT_CLASSIFICATION	add combo box for command to execute
WITHOUT_CLASSIFICATION	load the info into the text fields
WITHOUT_CLASSIFICATION	no entry selected
WITHOUT_CLASSIFICATION	do not do import
WITHOUT_CLASSIFICATION	make this the same size as the fileNameField
WITHOUT_CLASSIFICATION	File object for doing IO
WITHOUT_CLASSIFICATION	reset width to normal
WITHOUT_CLASSIFICATION	add note to user about including file name in command
WITHOUT_CLASSIFICATION	user has entered some non-default info, so save it
WITHOUT_CLASSIFICATION	get name of file, which must exist
WITHOUT_CLASSIFICATION	IMPORT OBJECT FROM OSX_FILE
WITHOUT_CLASSIFICATION	not allowed - must have existing file for import
WITHOUT_CLASSIFICATION	guard against something really stupid
WITHOUT_CLASSIFICATION	not something we can read
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.noExportFile=No file name given for export.\nPlease enter a file name or use Browse before clicking Export.]
WITHOUT_CLASSIFICATION	If file name default and cmd is null or empty, make sure this entry is not being held in CellImportExportInfoSaver
WITHOUT_CLASSIFICATION	save the user options - we know that it is not the default because we do not allow importing from "temp file"
WITHOUT_CLASSIFICATION	user has not entered anything or has reset to defaults, so make sure there is no entry for this column in the saved info
WITHOUT_CLASSIFICATION	get the real name for use later
WITHOUT_CLASSIFICATION	Now that we have the file, do the import. Note: the sequence of operations is divided into two sections at this point. The preceeding code ensures that we have a readable file, and the code in the following method call does the import. The reason for splitting at this point is that the Execute operation needs to do an import, and it will already have the file to do the import from (which is the same as the file it exported into).
WITHOUT_CLASSIFICATION	file name verification operations are the same for both export and execute, so do that work here for both. If file name is null or empty, do not proceed
WITHOUT_CLASSIFICATION	create the file to open
WITHOUT_CLASSIFICATION	user must have supplied a file name.
WITHOUT_CLASSIFICATION	user wants us to create a temp file
WITHOUT_CLASSIFICATION	see if file exists
WITHOUT_CLASSIFICATION	user does not want to overwrite the file
WITHOUT_CLASSIFICATION	file does not already exist, so try to create it
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotOpenFile=Cannot open file {0}.\nError was:{1}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportedToFile=Data Successfully exported to file {0}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportSuccess=Export Success]
WITHOUT_CLASSIFICATION	We have done everything we can prior to this point to ensure that the the file is accessible, but it is still possible that an existing file was removed at a bad moment. Also, the compiler insists that we put this in a try statement
WITHOUT_CLASSIFICATION	file exists, is normal and is writable, so see if user wants to overwrite contents of file
WITHOUT_CLASSIFICATION	user is ok with overwriting file We do not need to do anything special to overwrite (as opposed to appending) since the OutputString starts at the beginning of the file by default.
WITHOUT_CLASSIFICATION	we could tell user here that export was canceled, but I don't think its necessary, and that avoids forcing user to do yet another annoying mouse click.
WITHOUT_CLASSIFICATION	if we get here, then everything worked correctly, so tell user that data was put into file. This is different from the Import strategy because the user may not know the name of the file that was used if they selected the automatic temp file operation, or they may not know what directory the file was actually put into, so this tells them the full file path.
WITHOUT_CLASSIFICATION	This may be called either when the table is editable or when it is read-only. When it is read-only, there is no command to be saved, but when it is editable, there may be a command.
WITHOUT_CLASSIFICATION	if user did anything other than default, then save their options
WITHOUT_CLASSIFICATION	EXPORT OBJECT TO OSX_FILE
WITHOUT_CLASSIFICATION	EXPORT OBJECT TO OSX_FILE, EXECUTE PROGRAM ON IT, IMPORT IT BACK
WITHOUT_CLASSIFICATION	export data to file
WITHOUT_CLASSIFICATION	replace any instance of flag in command with file name
WITHOUT_CLASSIFICATION	cannot execute a null command
WITHOUT_CLASSIFICATION	wait for command to complete
WITHOUT_CLASSIFICATION	bad export - do not proceed with command The exportData() method has already put up a message to the user saying the export failed.
WITHOUT_CLASSIFICATION	import the data back from the same file
WITHOUT_CLASSIFICATION	check for possibly bad return from child
WITHOUT_CLASSIFICATION	The DataObject returns a string to put into the popup which can later be converted to the appropriate object type.
WITHOUT_CLASSIFICATION	command returned non-standard value. ask user before proceeding.
WITHOUT_CLASSIFICATION	end of combined export and execute operations
WITHOUT_CLASSIFICATION	If the file was a temp file, delete it now. We assume that Export-only operations want to leave the file in place, but Execute operations just want a temp space to work with and do not want it lying around afterwards.
WITHOUT_CLASSIFICATION	it is handy to have the cannonical path name to show user in error messages. Since getting that name might involve an IOException, we need to put it inside a try statement. However, since the file does exist there is no good reason for getting an IOException at this point, but if we get one there is something seriously wrong and we want to abort. Therefore it make sense to get that name here and save it for later use.
WITHOUT_CLASSIFICATION	create the imput stream (so that DataType objects don't have to)
WITHOUT_CLASSIFICATION	hand file input stream to DataType object for import Also, handle File IO errors here so that DataType objects do not have to.
WITHOUT_CLASSIFICATION	return the expected format for this data
WITHOUT_CLASSIFICATION	since the above did not throw an exception, we now have a good new data object, so change the text area to reflect that new object.
WITHOUT_CLASSIFICATION	cleanup resources used
WITHOUT_CLASSIFICATION	i18n[popupEditableIoPanel.reformatXml=Reformat XML]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.errorWritingFile=There was an error while writing file {0}.\nThe error was:\n{1}]
WITHOUT_CLASSIFICATION	return the expected format for this data
WITHOUT_CLASSIFICATION	If the user has selected a non-cannonical Binary format, we need to convert the text appropriately
WITHOUT_CLASSIFICATION	we need to convert to a different format default to hex
WITHOUT_CLASSIFICATION	I cannot think of any reason for doing anything at all here
WITHOUT_CLASSIFICATION	hand file output stream to DataType object for export Also, handle File IO errors here so that DataType objects do not have to.
WITHOUT_CLASSIFICATION	Hand the current text to the DataType object. DataType object is responsible for validating that the text makes sense for this type of object and converting it to the proper form for output. All errors are handled as IOExceptions
WITHOUT_CLASSIFICATION	handle null
WITHOUT_CLASSIFICATION	if the data is not binary, then there is no need for conversion. if the data is Hex with ASCII not shown as chars, then no conversion needed.
WITHOUT_CLASSIFICATION	no need for conversion
WITHOUT_CLASSIFICATION	the following can cause and exception if the text is not formatted correctly
WITHOUT_CLASSIFICATION	The field is binary and not in the format expected by the DataType default to hex
WITHOUT_CLASSIFICATION	better safe than sorry!
WITHOUT_CLASSIFICATION	make sure there is an instance
WITHOUT_CLASSIFICATION	in case superclass modifies them.
WITHOUT_CLASSIFICATION	i18n[mapdataset.value=Value]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.xmlWarning2=XML Warning]
WITHOUT_CLASSIFICATION	DataTypes may limit the initial data read from the DB, e.g. to minimize the time needed for the initial load of the table. To edit the contents of a cell, we require that the entire contents of the data element be present in the cell before editing. Therefore we ask the DataType if we need to re-read the data contents without limiting it, and do that read if needed. If there is a problem during the read (e.g. we cannot identify exactly one row in the DB matching the current row in the table), then the cell is not editable. The reverse is not true - if we succeed in reading the data, there may still be other reasons why we cannot edit it, so we need to check for it being editable after the read
WITHOUT_CLASSIFICATION	The following pointer is needed to allow the "Make Editable button to tell the application to set up an editable display panel
WITHOUT_CLASSIFICATION	The list of rows may be empty, in which case we just return.
WITHOUT_CLASSIFICATION	save the pointer needed to enable editing of data on-demand
WITHOUT_CLASSIFICATION	there was a problem with the read It would be nice to report this to the user, but if we try we get in trouble in some cases where the data is continually re-read after the dialog goes away (because the cell is being re-painted). cell is not editable
WITHOUT_CLASSIFICATION	GWG XML format check code
WITHOUT_CLASSIFICATION	if no columns defined, return a generic class to avoid anything throwing an exception.
WITHOUT_CLASSIFICATION	sort the indexes into ascending order (because that is the only function easilly available from the Arrays class)
WITHOUT_CLASSIFICATION	We want to delete rows from the end of the table towards the beginning of the table. If we delete from the front to the back, that throws off the indexes of the rows after each delete and we would have to compensate for that. Example: if we want to delete rows 2 and 4 and do it in that order, then after deleteing row 2 the row that used to be row 4 is now actually row 3, so we would have to subtract 1 from the index to get the row to delete. On the other hand, if we delete row 4 first, then the indexes of all rows prior to that one have not been affected, so we can then delete row 2 without any complications.
WITHOUT_CLASSIFICATION	delete the row from the table
WITHOUT_CLASSIFICATION	The indexes are in ascending order, but we want to delete in descending order (see previous comment), so run through the list backwards.
WITHOUT_CLASSIFICATION	the parse did not find XML, or it was mal-formed
WITHOUT_CLASSIFICATION	do a simple check to see if the string might contain XML or not
WITHOUT_CLASSIFICATION	the parse did not find XML, or it was mal-formed
WITHOUT_CLASSIFICATION	no tags, so cannot be XML
WITHOUT_CLASSIFICATION	the parse did not find XML, or it was mal-formed
WITHOUT_CLASSIFICATION	GWG format check code follows...
WITHOUT_CLASSIFICATION	GWG XML format check code
WITHOUT_CLASSIFICATION	see if there was a problem during parsing
WITHOUT_CLASSIFICATION	End GWG format check code
WITHOUT_CLASSIFICATION	Assume that all start tags are "<...>" or include a space after the tag name (e.g. as in "<SOMETAG args>" and all end tags are "</...>". Remove the syntactic markers, then remove any spaces, and convert to upper case for comparison
WITHOUT_CLASSIFICATION	check for "malformed" XML, or text that happens to contain a "<" with no corresponding ">"
WITHOUT_CLASSIFICATION	Done before actually reading the data from the ResultSet. If done after reading the data from the ResultSet Oracle throws a NullPointerException when processing ResultSetMetaData methods for the ResultSet returned for DatabasemetaData.getExportedKeys.
WITHOUT_CLASSIFICATION	Read the entire row, since some drivers complain if columns are read out of sequence
WITHOUT_CLASSIFICATION	SS: now select/reorder columns
WITHOUT_CLASSIFICATION	Don't log an error message here. It is possible that the user interrupted the query because it was taking too long. Just throw the exception, and let the caller decide whether or not the exception should be logged.
WITHOUT_CLASSIFICATION	SS: Modified to auto-compute column widths if <computeWidths> is true
WITHOUT_CLASSIFICATION	SS: update dynamic column widths
WITHOUT_CLASSIFICATION	Empty block
WITHOUT_CLASSIFICATION	Oracle throws this ex on BLOB data types
WITHOUT_CLASSIFICATION	HSQLDB 1.7.1 throws error.
WITHOUT_CLASSIFICATION	Matt Dahlman: this causes problems with the JDBC driver delivered with Teradata V2R05.00.00.11
WITHOUT_CLASSIFICATION	The JTable used for displaying all DB ResultSet info.
WITHOUT_CLASSIFICATION	we want to allow editing of read-only tables on-demand, but it would be confusing to include the "Make Editable" option when we are already in edit mode, so only allow that option when the background model is updateable AND we are not already editing
WITHOUT_CLASSIFICATION	just in case table is editable, call creator to set up cell editors
WITHOUT_CLASSIFICATION	override the JTable method so that whenever something asks for the cellEditor, we save a reference to that cell editor. Our ASSUMPTION is that the cell editor is only requested when it is about to be activated.
WITHOUT_CLASSIFICATION	handle special case of delete with <null> contents
WITHOUT_CLASSIFICATION	ignore the user input
WITHOUT_CLASSIFICATION	data is an object - assume already validated
WITHOUT_CLASSIFICATION	generally for KEY_TYPED this means add the typed char to the end of the text, but there are some things (e.g. control chars) that are ignored, so let the normal processing do its thing
WITHOUT_CLASSIFICATION	now check to see if the original contents were <null> and we have actually added the input char to the end of it
WITHOUT_CLASSIFICATION	check that we did not just add a char to a <null>
WITHOUT_CLASSIFICATION	replace the null with just the char
WITHOUT_CLASSIFICATION	figure out which column the user clicked on so we can pass in the right column description
WITHOUT_CLASSIFICATION	data is a String, so we need to convert to real object
WITHOUT_CLASSIFICATION	display error message and do not update the table
WITHOUT_CLASSIFICATION	data converted ok, so update the table
WITHOUT_CLASSIFICATION	just in case table is editable, call creator to set up cell editors
WITHOUT_CLASSIFICATION	_colDefs = hdgs;
WITHOUT_CLASSIFICATION	Column not in model
WITHOUT_CLASSIFICATION	call the DataType object for this column and have it check the current value
WITHOUT_CLASSIFICATION	call the underlying model to get the whole data, if possible
WITHOUT_CLASSIFICATION	underlaying data cannot be changed
WITHOUT_CLASSIFICATION	cannot delete rows in read-only table
WITHOUT_CLASSIFICATION	cannot insert row into read-only table
WITHOUT_CLASSIFICATION	default is 12 point, so define font relative to that
WITHOUT_CLASSIFICATION	reset each time we start a new print
WITHOUT_CLASSIFICATION	double headerWidth = tableHeader.getWidth() scale;
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	if are more columns left, part page
WITHOUT_CLASSIFICATION	Begin code related to printing
WITHOUT_CLASSIFICATION	variables used in printing
WITHOUT_CLASSIFICATION	at least 1 more row left
WITHOUT_CLASSIFICATION	page number message (in smaller type)
WITHOUT_CLASSIFICATION	draw the header on every page
WITHOUT_CLASSIFICATION	cut table image and draw on the page
WITHOUT_CLASSIFICATION	double pageBottom = pageTop + clipHeight + headerHeight;
WITHOUT_CLASSIFICATION	End of code related to printing
WITHOUT_CLASSIFICATION	since user is now using popup, stop editing using the in-cell editor, if any
WITHOUT_CLASSIFICATION	Fixes ClassCastException, see below.
WITHOUT_CLASSIFICATION	((IMainFrame) comp).addInternalFrame(taif, false); taif.setLayer(JLayeredPane.POPUP_LAYER);
WITHOUT_CLASSIFICATION	getRoot() doesn't appear to return the deepest Window, but the first one. If you have a dialog owned by a window you get the dialog, not the window.
WITHOUT_CLASSIFICATION	fudge for larger inset windows
WITHOUT_CLASSIFICATION	Determine the position to place the new internal frame. Ensure that the right end of the internal frame doesn't exend past the right end the parent frame.Use a fudge factor as the dim.width doesn't appear to get the final width of the internal frame (e.g. where pt.x + dim.width == parentBounds.width, the new internal frame still extends past the right end of the parent frame).
WITHOUT_CLASSIFICATION	inner class for the data display pane
WITHOUT_CLASSIFICATION	data is editable in popup
WITHOUT_CLASSIFICATION	Since data is editable, we need to add control panel to manage user requests for DB update, file IO, etc.
WITHOUT_CLASSIFICATION	data is not editable in popup
WITHOUT_CLASSIFICATION	create update/cancel controls using default layout
WITHOUT_CLASSIFICATION	try to convert the text in the popup into a valid instance of type of data object being held in the table cell
WITHOUT_CLASSIFICATION	handle an error in conversion of text to object
WITHOUT_CLASSIFICATION	no problem in conversion - proceed with update ((DataSetViewerTablePanel.MyJTable)_table).setConvertedValueAt( newValue, _row, _col);
WITHOUT_CLASSIFICATION	add buttons to button panel
WITHOUT_CLASSIFICATION	add button panel to main panel
WITHOUT_CLASSIFICATION	Save various information which is needed to do Update & Cancel.
WITHOUT_CLASSIFICATION	The following is only useable for a root type of InternalFrame. If the root type is Dialog or Frame, then other code must be used.
WITHOUT_CLASSIFICATION	we need to table column model to be able to add CellEditors to the individual columns
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.warning=Warning]
WITHOUT_CLASSIFICATION	check to see if new data is same as old data, in which case we do not update the underlying data. This is NOT an optimization (though it does speed things up). We need to do this to avoid an error when we check for rows being changed in the DB. If the new value and old value are the same, when we look to see if any rows already exist with the new value, it will find the existing row and claim that the update will make one row identical to the changed row (i.e. that there will be two identical rows in the DB) which is not true. So we avoid the problem by not updating the DB if the data has not been changed. This can happen if user changes the cell contents, then changes them back before exiting the cell.
WITHOUT_CLASSIFICATION	Menu for right-mouse-click when in cell editors
WITHOUT_CLASSIFICATION	use factory to get the appropriate editor
WITHOUT_CLASSIFICATION	cannot edit something that we do not know anything about
WITHOUT_CLASSIFICATION	if there is no updateable model, then we cannot update anything (should never happen - just being safe here)
WITHOUT_CLASSIFICATION	Cannot edit the rowID column, if present
WITHOUT_CLASSIFICATION	add right-click menu to cell editor
WITHOUT_CLASSIFICATION	no underlying data, so cannot be changed
WITHOUT_CLASSIFICATION	We have to look for the modelindex because of the Row Number column
WITHOUT_CLASSIFICATION	ask the DataType object if the two values are the same
WITHOUT_CLASSIFICATION	At this point the user input has been validated and both the new and old values are objects of the appropriate data type. Either or both of newValue and oldValue may be null.
WITHOUT_CLASSIFICATION	first look to see if they are identical objects, e.g. both null
WITHOUT_CLASSIFICATION	the caller does not need to know that nothing happened
WITHOUT_CLASSIFICATION	the caller does not need to know that nothing happened
WITHOUT_CLASSIFICATION	no update done to underlying data
WITHOUT_CLASSIFICATION	if we reach this point, the value has been changed, so fall through to next section
WITHOUT_CLASSIFICATION	if either of the values is null and the other is not, then the data has changed and we fall-through to the change process. Otherwise, check the object contents.
WITHOUT_CLASSIFICATION	no update done to underlying data
WITHOUT_CLASSIFICATION	call the function in the app code that checks for unexpected conditions in the current DB
WITHOUT_CLASSIFICATION	call the function in the app code that saves the data in the persistant storage (e.g. a database). The success or failure of that function (as indicated by the absance or presence of a result errpor/warning message) determines the result of this call. (Since the table is supposed to be editable, we should have an IDataSetUpdateableTableModel object set in our super class.)
WITHOUT_CLASSIFICATION	No problems, so indicate a successful update of the underlying data. In case we are editing an SQL result that contains the edited colum more than once, we need to tell the caller to update all columns. Otherwise generation of where clauses for further editing will fail.
WITHOUT_CLASSIFICATION	The list of rows may be empty, in which case we tell user they should select something first
WITHOUT_CLASSIFICATION	Non-empty set of rows to delete. Make sure user wants to delete
WITHOUT_CLASSIFICATION	Determine the position to place the new internal frame. Ensure that the right end of the internal frame doesn't exend past the right end the parent frame.Use a fudge factor as the dim.width doesn't appear to get the final width of the internal frame (e.g. where pt.x + dim.width == parentBounds.width, the new internal frame still extends past the right end of the parent frame).
WITHOUT_CLASSIFICATION	cancel any current cell editing operations
WITHOUT_CLASSIFICATION	tell creator to delete from DB
WITHOUT_CLASSIFICATION	tell user that there was a problem
WITHOUT_CLASSIFICATION	Setting the starting position is ugly. I just picked a point.
WITHOUT_CLASSIFICATION	get the default values from the DB for the table columns
WITHOUT_CLASSIFICATION	based on defaults from DB, get the default object instance for each column
WITHOUT_CLASSIFICATION	((IMainFrame)comp).addInternalFrame(rdif, false); rdif.setLayer(JLayeredPane.POPUP_LAYER);
WITHOUT_CLASSIFICATION	there was a problem inserting into the DB
WITHOUT_CLASSIFICATION	non-null return tells caller there was a problem
WITHOUT_CLASSIFICATION	add the data to the existing tables
WITHOUT_CLASSIFICATION	Do not try to be fancy and insert the data where the user is looking, just stuff it into the actual model and re-paint the table when the 'table changed' event is fired.
WITHOUT_CLASSIFICATION	everything is ok
WITHOUT_CLASSIFICATION	Setters and Getters for each field.
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	_leftData.add(row[0]); _rightData.add(row[1]);
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	user wants field to be true
WITHOUT_CLASSIFICATION	user wants field to be false
WITHOUT_CLASSIFICATION	1646886: If we've already seen the parameter, don't create another instance as this will force the user to enter the same value twice. Add the previous instance to itemsInSql though so that the parameters value gets propagated to the right spot(s) in the SQL statement.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	let user enter T, t, Y, y, or 1 for true, and F, f, N, n, or 0 for false
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	handle cases of null The only legal input in this case is a delete
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	when field is not null delete means set to null, so do it
WITHOUT_CLASSIFICATION	field is not nullable or input was not a delete we have already handled all legal input, so just tell user this is being ignored
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	The SQL Results page puts text into the table cells rather than objects of the appropriate type, so we need to convert befor proceeding
WITHOUT_CLASSIFICATION	use the default settings for the conversion
WITHOUT_CLASSIFICATION	first convert internal data into the string array
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	?? There does not seem to be any standard way to represent ?? binary data in a WHERE clause... tell caller we cannot use this in Where clause
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	Convert bytes to Bytes
WITHOUT_CLASSIFICATION	return the text converted from the file
WITHOUT_CLASSIFICATION	Convert Bytes to bytes
WITHOUT_CLASSIFICATION	The NumberFormat object to use for all locale-dependent formatting.
WITHOUT_CLASSIFICATION	handle null
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	get each DataType's info
WITHOUT_CLASSIFICATION	convert each string into Classname, prop, & value and fill it into the data
WITHOUT_CLASSIFICATION	put the property into the hashmap
WITHOUT_CLASSIFICATION	get the hashmap for this type, or create it if this is a new property
WITHOUT_CLASSIFICATION	Conversion Constants
WITHOUT_CLASSIFICATION	number of chars used to represent byte the base radix
WITHOUT_CLASSIFICATION	Convert each byte and put into string buffer
WITHOUT_CLASSIFICATION	if user wants to see ASCII chars as characters, see if this is one that should be displayed that way
WITHOUT_CLASSIFICATION	convert signed to unsigned
WITHOUT_CLASSIFICATION	fall through to default
WITHOUT_CLASSIFICATION	some formats (e.g. hex & octal) extend a negative number to multiple places (e.g. FC becomes FFFC), so chop off extra stuff in front
WITHOUT_CLASSIFICATION	front pad with zeros and add to output
WITHOUT_CLASSIFICATION	always add spaces at end for consistancy
WITHOUT_CLASSIFICATION	get the text to be converted
WITHOUT_CLASSIFICATION	handle ASCII chars Irrespective of the radix, the second byte will always be a space when the data is displayed as a single ASCII character.
WITHOUT_CLASSIFICATION	convert the char into its numeric value
WITHOUT_CLASSIFICATION	default to hex if unknown base passed in
WITHOUT_CLASSIFICATION	the whole column definition
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	return (String)_renderer.renderObject(value);
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	several number formats use '.' as decimal separator, others use ','
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	since we cannot do exact matches on floating point numbers, we cannot use this field in the WHERE clause.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	no existing blob to re-use
WITHOUT_CLASSIFICATION	for convenience, cast the existing object
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	BLOBs are different from normal data types in that what is actually read from the DB is a descriptor pointing to the data rather than the data itself. During the initial load of the table, the values read from the descriptor may have been limited, but the descriptor itself has been completely read, Therefore we do not need to re-read the datum from the Database because we know that we have the entire descriptor. If the contents of the BLOB have been limited during the initial table load, that will be discovered when we check if the cell is editable and the full data will be read at that time using this descriptor.
WITHOUT_CLASSIFICATION	if the original object is not null, then it contains a Blob object that we need to re-use, since that is the DBs reference to the blob data area. Otherwise, we set the original Blob to null, and the write method needs to know to set the field to null.
WITHOUT_CLASSIFICATION	create new object to hold the different value, but use the same internal BLOB pointer as the original
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Make sure the entire BLOB data is read in. Return true if it has been read successfully, and false if not.
WITHOUT_CLASSIFICATION	can use an empty blob for editing
WITHOUT_CLASSIFICATION	the whole blob has been previously read in
WITHOUT_CLASSIFICATION	data was not fully read in before, so try to do that now
WITHOUT_CLASSIFICATION	read succeeded, so reset the BlobDescriptor to match
WITHOUT_CLASSIFICATION	we successfully read the whole thing
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	i18n[dataTypeBlob.blobType=BLOB (SQL type 2004)]
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	Convert bytes to Bytes
WITHOUT_CLASSIFICATION	return the text converted from the file
WITHOUT_CLASSIFICATION	Convert Bytes to bytes
WITHOUT_CLASSIFICATION	?? What to do with this error? ?? error message = "Could not read the complete data. Error was: "+ex.getMessage());
WITHOUT_CLASSIFICATION	We always get the BLOB, even when we are not reading the contents. Since the BLOB is just a pointer to the BLOB data rather than the data itself, this operation should not take much time (as opposed to getting all of the data in the blob).
WITHOUT_CLASSIFICATION	BLOB exists, so try to read the data from it based on the user's directions
WITHOUT_CLASSIFICATION	User said to read at least some of the data from the blob
WITHOUT_CLASSIFICATION	determine whether we read all there was in the blob or not
WITHOUT_CLASSIFICATION	user said not to read any of the data from the blob
WITHOUT_CLASSIFICATION	BLOB cannot be used in WHERE clause
WITHOUT_CLASSIFICATION	for convenience cast the object to BlobDescriptor
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	text field for how many bytes of Blob to read
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	for convenience, cast the value object to its type
WITHOUT_CLASSIFICATION	all the data from the clob has been read. make sure there are no newlines in it
WITHOUT_CLASSIFICATION	since we do not have all of the data from the clob, we cannot allow editing
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	for convenience, cast the existing object
WITHOUT_CLASSIFICATION	no existing clob to re-use
WITHOUT_CLASSIFICATION	create new object to hold the different value, but use the same internal CLOB pointer as the original
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, but NOT the same one used in the Text and in-cell operations. The in-cell version may replace newline chars with "\n" while this version does not. In other respects it is the same as the in-cell version because both use the _renderer object to do the rendering.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	we successfully read the whole thing
WITHOUT_CLASSIFICATION	Make sure the entire CLOB data is read in. Return true if it has been read successfully, and false if not.
WITHOUT_CLASSIFICATION	can use an empty clob for editing
WITHOUT_CLASSIFICATION	the whole clob has been previously read in
WITHOUT_CLASSIFICATION	read succeeded, so reset the ClobDescriptor to match
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	?? What to do with this error? ?? error message = "Could not read the complete data. Error was: "+ex.getMessage());
WITHOUT_CLASSIFICATION	We always get the CLOB, even when we are not reading the contents. Since the CLOB is just a pointer to the CLOB data rather than the data itself, this operation should not take much time (as opposed to getting all of the data in the clob).
WITHOUT_CLASSIFICATION	CLOB exists, so try to read the data from it based on the user's directions
WITHOUT_CLASSIFICATION	User said to read at least some of the data from the clob
WITHOUT_CLASSIFICATION	determine whether we read all there was in the clob or not
WITHOUT_CLASSIFICATION	user said not to read any of the data from the clob
WITHOUT_CLASSIFICATION	CLOB cannot be used in WHERE clause
WITHOUT_CLASSIFICATION	for convenience cast the object to ClobDescriptor
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not i18n[dataTypeBigDecimal.readContentsOnFirstLoad=Read contents when table is first loaded;]
WITHOUT_CLASSIFICATION	i18n[dataTypeClob.typeClob=CLOB (SQL type 2005)]
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	text field for how many bytes of Blob to read
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	checkbox for displaying newlines as \n in-cell
WITHOUT_CLASSIFICATION	field for size of text to read
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	Special case: the input is exactly the output
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	Properties set-able by the user
WITHOUT_CLASSIFICATION	which locale-dependent format to use; short, medium, long, or full
WITHOUT_CLASSIFICATION	Whether to force user to enter dates in exact format or use heuristics to guess it
WITHOUT_CLASSIFICATION	The DateFormat object to use for all locale-dependent formatting. This is reset each time the user changes the previous settings.
WITHOUT_CLASSIFICATION	values for how to use timestamps in WHERE clauses
WITHOUT_CLASSIFICATION	Define whether or not to use Timestamp in internally generated WHERE clauses, and if so what format to use.
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to use the Java default
WITHOUT_CLASSIFICATION	use the Java default date-to-string
WITHOUT_CLASSIFICATION	use a date formatter
WITHOUT_CLASSIFICATION	use the DateFormat to parse
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	get which locale-dependent format to use set to use the Java default
WITHOUT_CLASSIFICATION	use lenient input or force user to enter exact format set to allow less stringent input
WITHOUT_CLASSIFICATION	how to use Timestamp in WHERE clauses default to SQL standard
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	WARNING: this depends on entries in ButtonGroup being in the same order as the values for whereClauseUsage
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.generateWhereClause=For internally generated WHERE clauses:]
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	IMPORTANT: put the buttons into the array in same order as their associated values defined for whereClauseUsage.
WITHOUT_CLASSIFICATION	Class that displays the various formats available for dates
WITHOUT_CLASSIFICATION	where clause usage group
WITHOUT_CLASSIFICATION	check box for whether to use Java Default or a Locale-dependent format
WITHOUT_CLASSIFICATION	checkbox for Java default/non-default format
WITHOUT_CLASSIFICATION	Objects needed to handle radio buttons
WITHOUT_CLASSIFICATION	lenient is set next
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	lenient checkbox
WITHOUT_CLASSIFICATION	add label for the radio button group
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	If there are parameters in the SQL string, then we need to prompt for some answers.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	flag for whether to use the default Java format (true) or the Locale-dependent format (false)
WITHOUT_CLASSIFICATION	which locale-dependent format to use; short, medium, long, or full
WITHOUT_CLASSIFICATION	Whether to force user to enter dates in exact format or use heuristics to guess it
WITHOUT_CLASSIFICATION	The DateFormat object to use for all locale-dependent formatting. This is reset each time the user changes the previous settings.
WITHOUT_CLASSIFICATION	If the cell is editable, we really must have a valid DataType object, so the 'else' clause should never be used. It is just there as defensive programming.
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to use the Java default
WITHOUT_CLASSIFICATION	get which locale-dependent format to use set to use the Java default
WITHOUT_CLASSIFICATION	use lenient input or force user to enter exact format set to allow less stringent input
WITHOUT_CLASSIFICATION	use the Java default date-to-string
WITHOUT_CLASSIFICATION	use a date formatter
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	use the DateFormat to parse
WITHOUT_CLASSIFICATION	allow the user to enter just the hour or just hour and minute and assume the un-entered values are 0
WITHOUT_CLASSIFICATION	user just entered the hour, so append min & sec
WITHOUT_CLASSIFICATION	user entered hour an min. See if they also entered secs
WITHOUT_CLASSIFICATION	user did not enter seconds
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	i18n[dataTypeTime.typeTime=Time (SQL type 92)]
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	the whole column definition
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	Class that displays the various formats available for dates
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	check box for whether to use Java Default or a Locale-dependent format
WITHOUT_CLASSIFICATION	checkbox for Java default/non-default format
WITHOUT_CLASSIFICATION	lenient checkbox
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	lenient is set next
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	The NumberFormat object to use for all locale-dependent formatting.
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	return (String)_renderer.renderObject(value);
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	several number formats use '.' as decimal separator, others use ','
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	since we cannot do exact matches on floating point numbers, we cannot use this field in the WHERE clause.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	return ((String)obj1).equals(obj2);
WITHOUT_CLASSIFICATION	First we have the cell-related and Text-table operations.
WITHOUT_CLASSIFICATION	Now define the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in the Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used by both in-cell and Popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea. Since neither cell nor popup are allowed to edit, just ignore anything seen here.
WITHOUT_CLASSIFICATION	special handling of operations while editing Strings
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	the whole column definition
WITHOUT_CLASSIFICATION	The NumberFormat object to use for all locale-dependent formatting.
WITHOUT_CLASSIFICATION	return (String)_renderer.renderObject(value);
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value cannot create default value for unknown data type
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	The total number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	the number of decimal digits allowed to the right of the decimal point in the number
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	several number formats use '.' as decimal separator, others use ','
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	Some DBs give a negative number when they do not have a value for the scale. Assume that if the _scale is 0 or positive that the DB really means for that to be the scale, but if it is negative then we do not check.
WITHOUT_CLASSIFICATION	check the total number of digits in the number. Since the string version of the number is therepresentation of the digits in that number and including possibly a plus or minus and a decimal, start by counting the number of digits in the string.
WITHOUT_CLASSIFICATION	now remove the non-digit chars, if any
WITHOUT_CLASSIFICATION	Some drivers (e.g. Oracle) give precision as 0 in some cases. When precision is 0, we cannot check the length, so do not try.
WITHOUT_CLASSIFICATION	user entered '+' or '-' at a bad place
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid value of this data type
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	First we have the cell-related and Text-table operations.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in the Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used by both in-cell and Popup operations.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	special handling of operations while editing Strings
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value cannot create default value for unknown data type
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	the other obj is null, so see if this non-null obj contains a null value, which is equivilent. Assume that if we have read some of the data and we still have _data == null, then the value in the DB is actually null.
WITHOUT_CLASSIFICATION	the other obj has not read the data yet.
WITHOUT_CLASSIFICATION	the other obj has not read the data yet.
WITHOUT_CLASSIFICATION	the other object has real data
WITHOUT_CLASSIFICATION	this one does not, so they are not equal
WITHOUT_CLASSIFICATION	both have actual data, so compare the strings Note that if one has read all of the data and the other has read only part of the data that we will say that they are NOT equal.
WITHOUT_CLASSIFICATION	Convert the data into an ascii representation using the standard convention
WITHOUT_CLASSIFICATION	we have the whole contents of the BLOB tell user the data is truncated
WITHOUT_CLASSIFICATION	Getters and Setters
WITHOUT_CLASSIFICATION	Restore the contents to the original value.
WITHOUT_CLASSIFICATION	Set the contents of the component without resetting the original value.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	special handling of operations while editing Strings
WITHOUT_CLASSIFICATION	the other object has real data
WITHOUT_CLASSIFICATION	this one does not, so they are not equal
WITHOUT_CLASSIFICATION	we have the whole contents of the CLOB
WITHOUT_CLASSIFICATION	tell user the data is truncated
WITHOUT_CLASSIFICATION	Getters and Setters
WITHOUT_CLASSIFICATION	Note: tabs and newlines are allowed in string fields, even though they are unusual.
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	for strings, a "blank" field is allowed, so only switch to null when there is nothing left in the field and user does delete
WITHOUT_CLASSIFICATION	the number of characters allowed in this field
WITHOUT_CLASSIFICATION	First we have the cell-related and Text-table operations.
WITHOUT_CLASSIFICATION	prevent editing if text contains newlines
WITHOUT_CLASSIFICATION	if we are not limiting anything, return false
WITHOUT_CLASSIFICATION	if the value is null, then it was read ok
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	The following is used by both in-cell and Popup operations.
WITHOUT_CLASSIFICATION	special handling of operations while editing Strings
WITHOUT_CLASSIFICATION	if the data is longer than the limit, then we have previously re-read the contents and we do not need to re-read it again
WITHOUT_CLASSIFICATION	if we are limiting all columns, then we need to re-read because we do not know if we have all the data or not
WITHOUT_CLASSIFICATION	check for the case where we are limiting some columns but not limiting this particular column
WITHOUT_CLASSIFICATION	column is limited and length == limit, so need to re-read column is not limited, so we have the whole thing
WITHOUT_CLASSIFICATION	Now define the Popup-related operations.
WITHOUT_CLASSIFICATION	The only thing that would prevent us from editing a string in the popup is if that string has been truncated when read from the DB. Thus, being able to edit the string is the same as not needing to re-read the data.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	Note: tabs and newlines are allowed in string fields, even though they are unusual.
WITHOUT_CLASSIFICATION	for strings, a "blank" field is allowed, so only switch to null when there is nothing left in the field and user does delete
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	data is longer than the limit, so we need to do more checking
WITHOUT_CLASSIFICATION	this column is limited, so truncate the data
WITHOUT_CLASSIFICATION	this column cannot be used in a WHERE clause
WITHOUT_CLASSIFICATION	We cannot use this data in the WHERE clause if it has been truncated. Since being truncated is the same as needing to re-read, only use this in the WHERE clause if we do not need to re-read
WITHOUT_CLASSIFICATION	value is truncated, so do not use in WHERE clause
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	data must fit into the column's max size
WITHOUT_CLASSIFICATION	for string, just send the text to the output file
WITHOUT_CLASSIFICATION	i18n[dataTypeString.allowLongVarchar=Allow LONGVARCHAR type to be used in WHERE clause]
WITHOUT_CLASSIFICATION	i18n[dataTypeString.newlines=Show newlines as \\n within cells]
WITHOUT_CLASSIFICATION	i18n[dataTypeString.limitSize=Limit size of strings read during initial table load to max of:]
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	check box for whether to use LONGVARCHAR in WHERE clause (Oracle does not allow that type in WHERE clause)
WITHOUT_CLASSIFICATION	check box for whether to do any limiting of the data read during initial table load
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	i18n[dataTypeString.typeChar=CHAR, VARCHAR, LONGVARCHAR (SQL types 1, 12, -1)]
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	checkbox for displaying newlines as \n in-cell
WITHOUT_CLASSIFICATION	checkbox for using LONG in WHERE clause
WITHOUT_CLASSIFICATION	checkbox for limit/no-limit on data read during initial table load
WITHOUT_CLASSIFICATION	fill in the current limit length
WITHOUT_CLASSIFICATION	fill in list of column names to check against
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	end while
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	Handle list of column names
WITHOUT_CLASSIFICATION	remove old name list from map
WITHOUT_CLASSIFICATION	extract column names from text area
WITHOUT_CLASSIFICATION	find the next name in the text
WITHOUT_CLASSIFICATION	cleanup and standardize the name, and add it to the map
WITHOUT_CLASSIFICATION	skip blank lines
WITHOUT_CLASSIFICATION	add name to comma-separated string for saving in properties
WITHOUT_CLASSIFICATION	end ok
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	flag for whether to use the default Java format (true) or the Locale-dependent format (false)
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to use the Java default
WITHOUT_CLASSIFICATION	map of existing DataType objects for each column. The key is the ColumnDisplayDefinition object, and the value is the DataTypeObject for that column's data type.
WITHOUT_CLASSIFICATION	map of DBMS-specific registered data handlers. The key is a string of the form: <SQL type as a string>:<SQL type name> and the value is a factory that can create instances of DBMS-specific DataTypeComponets.
WITHOUT_CLASSIFICATION	The current JTable that we are working with. This is used only to see when the user moves to a different JTable so we know when to clear the HashMap of DataTypeObjects.
WITHOUT_CLASSIFICATION	logging mechanism for errors
WITHOUT_CLASSIFICATION	Operations for Text and in-cell work
WITHOUT_CLASSIFICATION	default behavior: toString
WITHOUT_CLASSIFICATION	Use a CYAN background to indicate that the cell is editable in the popup
WITHOUT_CLASSIFICATION	since the previous entry might have changed the color, we need to reset the color back to default value for table cells, taking into account whether the cell is selected or not.
WITHOUT_CLASSIFICATION	default behavior if no DataType object is to use the DefaultColumnRenderer with no modification.
WITHOUT_CLASSIFICATION	there was no data type object, so this data type is unknown to squirrel and thus cannot be edited.
WITHOUT_CLASSIFICATION	default - if we do not know the data type, then we cannot re-read it
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	there was no data type object, so this data type is unknown to squirrel and thus cannot be edited.
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	Default Operation
WITHOUT_CLASSIFICATION	no object, so do not assume binary editing will work
WITHOUT_CLASSIFICATION	Operations for Popup work.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	Default Operation
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	if no object for this data type, then cannot use value in where clause
WITHOUT_CLASSIFICATION	there was no data type object, so this data type is unknown to squirrel and thus cannot be edited.
WITHOUT_CLASSIFICATION	if no DataType object, then there is nothing to handle File IO, so cannot do it
WITHOUT_CLASSIFICATION	if no DataType object, then there is nothing to handle File IO, so cannot do it
WITHOUT_CLASSIFICATION	if no DataType object, then there is nothing to handle File IO, so cannot do it
WITHOUT_CLASSIFICATION	let DataType object speak for itself
WITHOUT_CLASSIFICATION	let DataType object speak for itself
WITHOUT_CLASSIFICATION	let DataType object speak for itself
WITHOUT_CLASSIFICATION	Get control panels to let user adjust properties on DataType classes.
WITHOUT_CLASSIFICATION	This is the list of names of classes that: - support standard SQL type codes and thus do not need to be registered - provide the getControlPanel method to allow manipulation of properties These classes should all be named net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.DataTypeXXXX because they are part of the standard delivery of the product, and thus should be local to this directory.
WITHOUT_CLASSIFICATION	make a single list of all class names that we need to check. Start with the names of known, standard classes that provide Control Panels
WITHOUT_CLASSIFICATION	Now go through the list in the given order to get the panels
WITHOUT_CLASSIFICATION	Internal method used for both cell and popup work.
WITHOUT_CLASSIFICATION	keep a hash table of the column objects so we can reuse them.
WITHOUT_CLASSIFICATION	new table - clear hash map
WITHOUT_CLASSIFICATION	See if we have a custom data-type registered.
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	remember this DataType object so we can reuse it
WITHOUT_CLASSIFICATION	Use the standard SQL type code to get the right handler for this data type.
WITHOUT_CLASSIFICATION	Some databases store a time component in DATE columns (Oracle) The user can set a preference for DATEs that allows them to be read as TIMESTAMP columns instead. This doesn't appear to have ill effects for databases that are standards compliant (such as MySQL or PostgreSQL). If the user prefers it, use the TIMESTAMP data type instead of DATE.
WITHOUT_CLASSIFICATION	set up for integers
WITHOUT_CLASSIFICATION	set up for string types
WITHOUT_CLASSIFICATION	-8 is ROWID in Oracle. It's a string, but it's auto-assigned
WITHOUT_CLASSIFICATION	set up for Binary types
WITHOUT_CLASSIFICATION	Add begin
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	Oracle jdbc driver doesn't properly identify this column in ResultSetMetaData as read-only. For now, just use isAutoIncrement flag to simulate this setting.
WITHOUT_CLASSIFICATION	Add end
WITHOUT_CLASSIFICATION	data type is unknown to us. It may be an unusual type like "JAVA OBJECT" or "ARRAY", or it may be a DBMS-specific type
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	flag for whether to use the default Java format (true) or the Locale-dependent format (false)
WITHOUT_CLASSIFICATION	which locale-dependent format to use; short, medium, long, or full
WITHOUT_CLASSIFICATION	Whether to force user to enter dates in exact format or use heuristics to guess it
WITHOUT_CLASSIFICATION	Whether or not to read date type columns with rs.getTimestamp()
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to use the Java default
WITHOUT_CLASSIFICATION	get which locale-dependent format to use set to use the Java default
WITHOUT_CLASSIFICATION	use lenient input or force user to enter exact format set to allow less stringent input
WITHOUT_CLASSIFICATION	use the Java default date-to-string
WITHOUT_CLASSIFICATION	use a date formatter
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	use the DateFormat to parse
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	if value contains "-" it probably has a date component
WITHOUT_CLASSIFICATION	treat it like a timestamp
WITHOUT_CLASSIFICATION	treat it like a time - no date component
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	Class that displays the various formats available for dates
WITHOUT_CLASSIFICATION	Oracle stores time information in java.sql.Types.Date columns This tells Oracle that we are only talking about the date part.
WITHOUT_CLASSIFICATION	i18n[dataTypeDate.typeDate=Date (SQL type 91)]
WITHOUT_CLASSIFICATION	checkbox for whether to interpret input leniently or not i18n[dataTypeDate.allowInexact=allow inexact format on input]
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	check box for whether to use Java Default or a Locale-dependent format
WITHOUT_CLASSIFICATION	checkbox for Java default/non-default format
WITHOUT_CLASSIFICATION	lenient checkbox
WITHOUT_CLASSIFICATION	readdDateAsTimestamp checkbox
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	whether or not to read date type columns with rs.getTimestamp() i18n[dataTypeDate.readDateAsTimestamp=Interpret DATE columns as TIMESTAMP]
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	lenient is set next
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	The original value set in this cell by the table
WITHOUT_CLASSIFICATION	Used by editing operations to set textField value without changing the original text saved in the class
WITHOUT_CLASSIFICATION	Used by editing operations to reset the field to its original value.
WITHOUT_CLASSIFICATION	Cell related methods come next.
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	i18n[dataTypeUnknown.readContentsOnLoad=Read contents when table is first loaded and display as string]
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value cannot create default value for unknown data type
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	The original value set in this cell by the table
WITHOUT_CLASSIFICATION	When the table initiates editing and sets this field, remember the value as the original value of the field
WITHOUT_CLASSIFICATION	Used by editing operations to set textField value without changing the original text saved in the class
WITHOUT_CLASSIFICATION	Used by editing operations to reset the field to its original value.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Anticipate the same issue for BLOBS as for BINARY and LONGVARBINARY. registerColumnType(Types.BLOB, 2147000000, "bit varying($l)");
WITHOUT_CLASSIFICATION	Don't use bit(1) for boolean as Frontbase then reports it as BINARY type instead of BIT.
WITHOUT_CLASSIFICATION	Anticipate the same issue for VARBINARY as for BINARY and LONGVARBINARY. registerColumnType(Types.VARBINARY, 2147000000, "bit varying($l)");
WITHOUT_CLASSIFICATION	Frontbase requires CASCADE or RESTRICT keywords.
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	public String getDropIndexSQL(String tableName, String indexName, boolean cascade, DatabaseObjectQualifier qualifier, SqlGenerationPreferences prefs) { return null; }
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	Derby is real close to DB2. Only difference I've found so far is 48 instead of 53 for float length llimit.
WITHOUT_CLASSIFICATION	convert each column that will be a member key to non-null - this doesn't hurt if they are already null.
WITHOUT_CLASSIFICATION	Derby requires that columns be not-null before applying a unique constraint
WITHOUT_CLASSIFICATION	select v.VIEWDEFINITION from sys.SYSVIEWS v, sys.SYSTABLES t, sys.SYSSCHEMAS s where v.TABLEID = t.TABLEID and s.SCHEMAID = t.SCHEMAID and UPPER(t.TABLENAME) = 'VIEWNAME'and UPPER(s.SCHEMANAME) = 'SCHEMANAME'
WITHOUT_CLASSIFICATION	driver returns 8 for "long byte", yet it can store 2GB of data.
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	There is a reason that we don't want to use DatabaseObjectType.SESSION here. The "session" nodes that this expander is creating should not be confused with the SQuirreL session. These session nodes are Oracle sessions that an administrator has the privileges to see. So we must not use DatabaseObjectType.SESSION, or else these nodes get expanded with the database DefaultdatabasExpander.
WITHOUT_CLASSIFICATION	String ST_CREATE_INDEX_STYLE_TWO = "CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	<create_sequence_statement> ::= CREATE SEQUENCE [<schema_name>.]<sequence_name> [INCREMENT BY <integer>] [START WITH <integer>] [MAXVALUE <integer> | NOMAXVALUE] [MINVALUE <integer> | NOMINVALUE] [CYCLE | NOCYCLE] [CACHE <unsigned_integer> | NOCACHE] [ORDER | NOORDER]
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ $startWith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	<create_view_statement> ::= CREATE [OR REPLACE] VIEW <table_name> [(<alias_name>,...)] AS <query_expression> [WITH CHECK OPTION]
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $withCheckOption$";
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	"RENAME TABLE $oldObjectName$ TO $newObjectName$";
WITHOUT_CLASSIFICATION	"RENAME VIEW $oldObjectName$ TO $newObjectName$";
WITHOUT_CLASSIFICATION	alter column clauses
WITHOUT_CLASSIFICATION	alter name clauses
WITHOUT_CLASSIFICATION	alter default clauses
WITHOUT_CLASSIFICATION	Additional Index Creation
WITHOUT_CLASSIFICATION	alter type clauses
WITHOUT_CLASSIFICATION	drop column clauses
WITHOUT_CLASSIFICATION	cascade constraint clauses
WITHOUT_CLASSIFICATION	sequence clauses
WITHOUT_CLASSIFICATION	view clauses
WITHOUT_CLASSIFICATION	Clauses
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnDropUnsupported={0} doesn''t support dropping a column]
WITHOUT_CLASSIFICATION	ALTER TABLE tableName ADD CONSTRAINT constraintName UNIQUE (column1, column2);
WITHOUT_CLASSIFICATION	deletes the last ", "
WITHOUT_CLASSIFICATION	DROP INDEX indexName [ CASCADE ];
WITHOUT_CLASSIFICATION	DROP INDEX indexName [ CASCADE ] [ ON <tableName> ];
WITHOUT_CLASSIFICATION	deletes the last ", "
WITHOUT_CLASSIFICATION	DROP SEQUENCE sequenceName CASCADE;
WITHOUT_CLASSIFICATION	DROP VIEW viewName CASCADE;
WITHOUT_CLASSIFICATION	CREATE UNIQUE INDEX indexName ON tableName USING btree (column1, column2) TABLESPACE WHERE constraints;
WITHOUT_CLASSIFICATION	ALTER TABLE oldTableName RENAME TO newTableName;
WITHOUT_CLASSIFICATION	ALTER VIEW oldTableName RENAME TO newTableName; RENAME oldTableName TO newTableName;
WITHOUT_CLASSIFICATION	Since dialect doesn't support altering sequences, drop then re-create.
WITHOUT_CLASSIFICATION	ALTER SEQUENCE sequenceName INCREMENT BY increment MINVALUE minimum MAXVALUE maxvalue RESTART WITH restart CACHE cache CYCLE;
WITHOUT_CLASSIFICATION	INSERT INTO tableName (column1, column2) query;
WITHOUT_CLASSIFICATION	String templateStr = null;
WITHOUT_CLASSIFICATION	desc_t1
WITHOUT_CLASSIFICATION	i18n[oracle.displayDetails=Display index details]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnOk=OK]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.error.getprimarykey=Unable to get primary key info for table {0}]
WITHOUT_CLASSIFICATION	Group all columns by index
WITHOUT_CLASSIFICATION	Serveral DBs automatically create an index for primary key fields and return this index in getIndexInfo(). We remove this index from the script because it would break the script with an index already exists error.
WITHOUT_CLASSIFICATION	Append nothing - standard says this is equivalent to NO ACTION and some DBs (e.g. Oracle don't accept ... NO ACTION)
WITHOUT_CLASSIFICATION	i18n[CreateTableScriptCommand.error.getprimarykey=Unable to get primary key info for table {0}]
WITHOUT_CLASSIFICATION	override common behavior to use drop column style two
WITHOUT_CLASSIFICATION	No go through the parse SQL and build the final SQL replacing parameters with values is goes.
WITHOUT_CLASSIFICATION	Strip quotes from the column name
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ IDENTITY";
WITHOUT_CLASSIFICATION	Add package node to contain standalone procedures.
WITHOUT_CLASSIFICATION	Add packages.
WITHOUT_CLASSIFICATION	i18n[oracle.explainPlan=Explain Plan]
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD $constraint$ $constraintName$ UNIQUE $index$ $indexName$ $indexType$ ( $indexColumnName$ )";
WITHOUT_CLASSIFICATION	"ALTER SEQUENCE $sequenceName$ " + "$restartWith$ $startValue$ " + "$incrementBy$ $incrementValue$ ";
WITHOUT_CLASSIFICATION	Operation column increased
WITHOUT_CLASSIFICATION	Options column increased
WITHOUT_CLASSIFICATION	Expand all of the rows in the tree if the root is non null.
WITHOUT_CLASSIFICATION	Clear any previous plan
WITHOUT_CLASSIFICATION	CREATE SEQUENCE [IF NOT EXISTS] newSequenceName [START WITH long] [INCREMENT BY long] [CACHE long]
WITHOUT_CLASSIFICATION	CREATE [FORCE] VIEW [IF NOT EXISTS] newViewName [(columnName [,..])] AS select "CREATE VIEW $viewName$ " + "AS $selectStatement$ $with$ $checkOptionType$ $checkOption$";
WITHOUT_CLASSIFICATION	i18n[oracle.userDetails=Details]
WITHOUT_CLASSIFICATION	i18n[oracle.displayUserDetails=Display User details]
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	ALTER TABLE $tableName$ DROP CONSTRAINT $constraintName$
WITHOUT_CLASSIFICATION	"ALTER TABLE $oldObjectName$ RENAME TO $newObjectName$";
WITHOUT_CLASSIFICATION	"select view_definition " + "from information_schema.views " + "where table_schema = ? " + "and table_name = ? ";
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	Always use "to" column name since name changes happen first
WITHOUT_CLASSIFICATION	ALTER TABLE <tableName> MODIFY <columnName> MEDIUMINT NOT NULL AUTO_INCREMENT PRIMARY KEY
WITHOUT_CLASSIFICATION	SQLExecuterTask task = new SQLExecuterTask(_session, sql, new DefaultSQLExecuterHandler(_session)); jmh to run async_session.getApplication().getThreadPool().addTask(task); jmhtask.run(); Set the ? to the statement identifier
WITHOUT_CLASSIFICATION	i18n[oracle.noSql=No SQL selected for execution.]
WITHOUT_CLASSIFICATION	only check once per session
WITHOUT_CLASSIFICATION	if doesnt exist prompt to create it.
WITHOUT_CLASSIFICATION	From MySQL 5.0 manual:
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.createPlanTableMsg=The Oracle Plan Table '{0}' doesnt exist in the current schema. Do you want to create it?]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.createPlanTableTitle=Create Plan Table]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.planTableUnavailable=Explain plans will be unavailable for this session]
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	Tell the user that they won't be able to show the explain plan
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers when dropping a column.
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers when adding a primary key.
WITHOUT_CLASSIFICATION	MySQL disallows quoted constraint names
WITHOUT_CLASSIFICATION	MySQL disallows quoted constraint names
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	PostgreSQL 8.0 reports length as -1 sometimes. Why??
WITHOUT_CLASSIFICATION	ALTER TABLE oldTableName RENAME TO newTableName;
WITHOUT_CLASSIFICATION	Can be done as follows in PostgresINSERT INTO mytable(id,name) SELECT 1, 'pizza' UNION SELECT 2, 'donuts' UNION SELECT 3, 'milk';
WITHOUT_CLASSIFICATION	sql.append(DialectUtils.shapeQualifiableIdentifier(newTableName, qualifier, prefs, this));
WITHOUT_CLASSIFICATION	rename view has that same syntax as that of tables.
WITHOUT_CLASSIFICATION	DROP INDEX indexName CASCADE;
WITHOUT_CLASSIFICATION	SELECT last_value, max_value, min_value, cache_value, increment_by, is_cycled FROM sequenceName;
WITHOUT_CLASSIFICATION	ALTER TABLE tableName ALTER COLUMN columnName SET DEFAULT nextval('tableName_columnName_seq'); ALTER SEQUENCE tableName_columnName_seq OWNED BY tableName.columnName;
WITHOUT_CLASSIFICATION	In PostgreSQL we need to add a sequence to support auto-increment (name: tablename_colname_seq)
WITHOUT_CLASSIFICATION	registerColumnType(Types.CLOB, 31982, "varchar($l)");
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ RENAME COLUMN $oldColumnName$ to $newColumnName$";
WITHOUT_CLASSIFICATION	Oracle won't allow in-place conversion between CLOB and VARCHAR
WITHOUT_CLASSIFICATION	add <columnName>_2 null as CLOB
WITHOUT_CLASSIFICATION	update table set <columnName>_2 = <columnName>
WITHOUT_CLASSIFICATION	drop <columnName>
WITHOUT_CLASSIFICATION	rename <columnName>_2 to <columnName>
WITHOUT_CLASSIFICATION	Cannot use a sequence for the default value of a column. However, we could always reference the ssequence in a trigger:
WITHOUT_CLASSIFICATION	:new.id := seq_name@nextval;
WITHOUT_CLASSIFICATION	throw new UnsupportedOperationException("Oracle doesn't support using sequences for column defaults");
WITHOUT_CLASSIFICATION	create add sequence sql
WITHOUT_CLASSIFICATION	create trigger sql for column that is to be auto-incremented
WITHOUT_CLASSIFICATION	In Oracle, no action is implied when the ON DELETE clause is omitted
WITHOUT_CLASSIFICATION	In Oracle, matchFull modifier is not supported
WITHOUT_CLASSIFICATION	Oracle doesn't allow unique bitmap indexes.
WITHOUT_CLASSIFICATION	Sybase Adaptive Server Enterprise
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.choosePlanTableMsg=Choose a PLAN_TABLE to store the result in]
WITHOUT_CLASSIFICATION	MySQL 4.x and below MySQL 5.x and above
WITHOUT_CLASSIFICATION	registerColumnType(Types.LONGVARCHAR, 31982, "varchar($l)");
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ SET $nullable$";
WITHOUT_CLASSIFICATION	add a default value "ALTER TABLE $tableName$ " + "ALTER $columnName$ SET DEFAULT $defaultValue$";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ RENAME COLUMN $oldColumnName$ to $newColumnName$";
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.choosePlanTableTitle=Available PLAN_TABLEs]
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	This is what the spec says: CREATE SEQUENCE [schema_name.]sequence_name [INCREMENT BY value], [START WITH value], [MAXVALUE value | NOMAXVALUE], [MINVALUE value | NOMINVALUE], [CYLCE | NOCYLCE]
WITHOUT_CLASSIFICATION	Currently, OpenEdge only supports the PUB schema for sequences.
WITHOUT_CLASSIFICATION	Names of the columns.
WITHOUT_CLASSIFICATION	CREATE VIEW name [(view_col [, view_col …])] AS <select> [WITH CHECK OPTION];
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $withCheckOption$";
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	"ALTER TABLE $oldObjectName$ RENAME TO $newObjectName$";
WITHOUT_CLASSIFICATION	Currently, OpenEdge only supports the PUB schema for sequences.
WITHOUT_CLASSIFICATION	SELECT 'CREATE VIEW FOOVIEW AS ' || VIEWTEXT FROM SYSPROGRESS.SYSVIEWS where VIEWNAME = 'FOOVIEW' and OWNER = 'MANNINGR'
WITHOUT_CLASSIFICATION	Oddly enough, progress will let you add pks to existing tables, but not drop them.
WITHOUT_CLASSIFICATION	The registrations below are made in support for new types introduced in Java6
WITHOUT_CLASSIFICATION	Replace "-8" with Types.ROWID when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-9" with Types.NVARCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-15" with Types.NCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-16" with Types.LONGNVARCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "2009" with Types.SQLXML when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "2011" with Types.NCLOB when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	registerColumnType(Types.BOOLEAN, "bit");
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.enumeration=#]
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ IDENTITY";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ SET $nullable$";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] PRIMARY KEY (<column list>);
WITHOUT_CLASSIFICATION	Pre-requisites are that column needs to be primary key and it must be integer type. alter table IDENTITYTEST2 alter column myid identity
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] UNIQUE (<column list>);
WITHOUT_CLASSIFICATION	ALTER SEQUENCE <sequencename> RESTART WITH <value>;
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.operation=Operation]
WITHOUT_CLASSIFICATION	CREATE [UNIQUE] INDEX <index> ON <table> (<column> [DESC] [, ...]) [DESC];
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.options=Options]
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	ALTER TABLE $tableName$ DROP CONSTRAINT $constraintName$
WITHOUT_CLASSIFICATION	CREATE VIEW <viewname>[(<viewcolumn>,..) AS SELECT ... FROM ... [WHERE Expression] [ORDER BY orderExpression [, ...]] [LIMIT <limit> [OFFSET <offset>]];
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $with$ $checkOptionType$ $checkOption$";
WITHOUT_CLASSIFICATION	DROP INDEX index [IF EXISTS];
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.mode=Mode]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.cost=Cost]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.objectName=Object Name]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.cardinality=Cardinality]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.bytes=Bytes]
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Types of the columns.
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	TreeNode Interface
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Axion doesn't allow column alterations of the nullable attribute. Fortunately, it doesn't require this to add a primary key.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Keys that can be embedded in templates for replacement later.
WITHOUT_CLASSIFICATION	check option not supported
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $with$ $checkOptionType$ $checkOption$";
WITHOUT_CLASSIFICATION	Template bodies
WITHOUT_CLASSIFICATION	SQL Reference Guide says 32k, but I get: The specified row size exceeded the maximum allowable row width., SQL State: 50002, Error Code: 2045 when I go above 8000.
WITHOUT_CLASSIFICATION	I tried 8000 for the max length of VARCHAR and ingres gives an exception (cannot assign a value of type long varchar to a varchar field). So I limit this field to 4000 for now - the Ingres product documentation indicated that 32k was acceptable. I've tested 4k and it seems to work fine.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	alter table foo add constraint foocon UNIQUE (myid)
WITHOUT_CLASSIFICATION	alter table <table> add constraint <constraint>
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $with$ $checkOptionType$ $checkOption$";
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ $startWith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	"ALTER SEQUENCE $sequenceName$ $startWith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	[EXEC SQL] CREATE VIEW view_name [(column_name {, column_name})] AS select_stmt [WITH CHECK OPTION]
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	SELECT TEXT_SEGMENT FROM IIVIEWS WHERE TABLE_NAME = <VIEWNAME> AND TABLE_OWNER = <SCHEMANAME>
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	The TreeTableNode interface.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	ALTER TABLE test3 ALTER COLUMN nullvc varchar(30)
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	CREATE VIEW name [(view_col [, view_col …])] AS <select> [WITH CHECK OPTION];
WITHOUT_CLASSIFICATION	"select 'CREATE VIEW ' || VIEWNAME || ' AS ' || VIEWDEFINITION " + "from POINTBASE.SYSVIEWS v, POINTBASE.SYSSCHEMATA s " + "where v.SCHEMAID = s.SCHEMAID " + "and v.VIEWNAME = 'TESTVIEW' " + "and s.SCHEMANAME = 'DBCOPY' ";
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"ALTER TABLE $oldObjectName$ RENAME TO $newObjectName$";
WITHOUT_CLASSIFICATION	SQL-Server doesn't support a cascade clause.
WITHOUT_CLASSIFICATION	Can be done as follows in MS SQLServer INSERT INTO mytable(id,name) SELECT 1, 'pizza' UNION SELECT 2, 'donuts' UNION SELECT 3, 'milk';
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	<drop_index_statement> ::= DROP INDEX <index_name> [ON <table_name>]
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	The problem with this is data is LONGVARBINARY and there are no McKoi SQL functions to convert it to a character string which is executing the SQL produced by this method is supposed to return. return "SELECT data FROM SYS_INFO.sUSRView where name = '" + viewName + "'";
WITHOUT_CLASSIFICATION	private static final DB2400Dialect db2400Dialect = new DB2400Dialect();
WITHOUT_CLASSIFICATION	dbNameDialectMap.put("DB2/390", db2390Dialect); dbNameDialectMap.put("DB2/400", db2400Dialect);
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	User doesn't wish for us to try to auto-detect the dest db.
WITHOUT_CLASSIFICATION	The driver throws an exception for varchar with length > 3924
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	The registrations below are made in support for new types introduced in Java6
WITHOUT_CLASSIFICATION	Replace "-8" with Types.ROWID when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-9" with Types.NVARCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-15" with Types.NCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-16" with Types.LONGNVARCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Replace "2009" with Types.SQLXML when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "2011" with Types.NCLOB when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	alter table <tablename> drop column <columnName>
WITHOUT_CLASSIFICATION	DB2 needs to reorg table after changing nullabolity
WITHOUT_CLASSIFICATION	SELECT SEQSCHEMA,SEQNAME,DEFINER,DEFINERTYPE,OWNER,OWNERTYPE,SEQID,SEQTYPE,INCREMENT,START,MAXVALUE,MINVALUE, NEXTCACHEFIRSTVALUE,CYCLE,CACHE,ORDER,DATATYPEID,SOURCETYPEID,CREATE_TIME,ALTER_TIME,PRECISION,ORIGIN, REMARKS FROM SYSCAT.SEQUENCES WHERE SEQNAME = ? and SEQSCHEMA = <schema>
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	DB2 doesn't support cascade, set default, or set null for FK constraint update action
WITHOUT_CLASSIFICATION	DB2 doesn't support set default for FK constraint delete action
WITHOUT_CLASSIFICATION	DB2 requires that columns be not-null before applying a unique constraint
WITHOUT_CLASSIFICATION	RENAME TABLE <tablename> TO <newtablename>;
WITHOUT_CLASSIFICATION	SELECT 'CREATE VIEW <newViewName> AS ' || SUBSTR(TEXT , LOCATE('as', TEXT)+2, LENGTH(TEXT)) FROM SYSCAT.VIEWS WHERE VIEWSCHEMA = '<schema>' AND VIEWNAME = '<oldViewName>';
WITHOUT_CLASSIFICATION	This is another way to do this. Modifying the column type to serial is much easier. Thanks to Doug Lawry for setting me straight!!
WITHOUT_CLASSIFICATION	CREATE SEQUENCE testAutoIncrementTable_myid_seq INCREMENT BY 1 MINVALUE 1 NOMAXVALUE START WITH 1 NOCYCLE; CREATE FUNCTION nextAutoVal () RETURNING INTEGER; RETURN testAutoIncrementTable_myid_seq.NEXTVAL; END FUNCTION; I finally did get a trigger to work, but I had to use a function: CREATE TRIGGER myid_trigger INSERT ON testAutoIncrementTable FOR EACH ROW (execute function nextAutoVal() into myid);
WITHOUT_CLASSIFICATION	must not qualify column name
WITHOUT_CLASSIFICATION	Unfortunately we cannot simply call getColumnTypeAlterSQL since "serial" type is 4 (which is the same as java.sql.Types.Integer, so we would get back an integer column, not a serial column). So we piece it together ourselves: ALTER TABLE dbcopydest:"informix".serialtest MODIFY myid integer
WITHOUT_CLASSIFICATION	We only want the index sql which is the second statement in the array. Informix requires the constraint stuck onto the end of the statement.
WITHOUT_CLASSIFICATION	Informix doesn't allow quoting column names.
WITHOUT_CLASSIFICATION	deletes the last ", "
WITHOUT_CLASSIFICATION	deletes the last ", " deletes the last ", "
WITHOUT_CLASSIFICATION	must not quote column names
WITHOUT_CLASSIFICATION	ALTER TABLE <tableName> ADD CONSTRAINT UNIQUE (<columnList>) CONSTRAINT <constraintName>
WITHOUT_CLASSIFICATION	alter table test drop constraint u_test
WITHOUT_CLASSIFICATION	deletes the last ", "
WITHOUT_CLASSIFICATION	SELECT 'unknown' as last_value, T1.max_val AS max_value, T1.min_val AS min_value, T1.cache AS cache_size, T1.inc_val AS increment_by, case T1.cycle as is_cycled FROM informix.syssequences AS T1, informix.systables AS T2 WHERE T2.tabid = T1.tabid and T2.owner = '<schema>' and T2.tabname = '<sequenceName>'
WITHOUT_CLASSIFICATION	must not qualify the new table name
WITHOUT_CLASSIFICATION	SELECT viewtext FROM informix.systables AS T1, informix.sysviews AS T2 WHERE tabname = 'a_view' AND T2.tabid = T1.tabid
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	ALTER TABLE $tableName$ DROP CONSTRAINT $constraintName$
WITHOUT_CLASSIFICATION	CREATE VIEW name [(view_col [, view_col …])] AS <select> [WITH CHECK OPTION];
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	autoinc_gen_<column>
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	SET GENERATOR name TO int;
WITHOUT_CLASSIFICATION	CREATE [UNIQUE] [ASC[ENDING] | DESC[ENDING]] INDEX index ON table (col [, col …]);
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	What follows comes from the SQuirreL firebird dialect extension.
WITHOUT_CLASSIFICATION	i18n[SQLCatalogsComboBox.noneLabel=None]
WITHOUT_CLASSIFICATION	Sort the rows by the property name.
WITHOUT_CLASSIFICATION	look for places to break the string
WITHOUT_CLASSIFICATION	Get the largest width and height
WITHOUT_CLASSIFICATION	private int _lastX;
WITHOUT_CLASSIFICATION	parentRect = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());
WITHOUT_CLASSIFICATION	i18n ? What is this used for?
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	The following pointer is needed to allow the "Make Editable button to tell the application to set up an editable display panel
WITHOUT_CLASSIFICATION	save the pointer needed to enable editing of data on-demand
WITHOUT_CLASSIFICATION	save the pointer needed to enable editing of data on-demand
WITHOUT_CLASSIFICATION	Object obj = action.getValue(BaseAction.IBaseActionPropertyNames.ROLLOVER_ICON);
WITHOUT_CLASSIFICATION	pointer to the viewer This is needed for insert and delete operations
WITHOUT_CLASSIFICATION	save the pointer needed for insert and delete operations
WITHOUT_CLASSIFICATION	add the menu items to the menu
WITHOUT_CLASSIFICATION	add entries for insert and delete rows only if table is updateable and already editable (ie. allowEditing is false)
WITHOUT_CLASSIFICATION	Cut and Paste need to be worked on, so for now do not include them Also, the copy operations do not seem to work right - we may need special versions for the cellEditor menu. add(_cut); add(_copy); add(_copyHtml); add(_paste); addSeparator();
WITHOUT_CLASSIFICATION	i18n[TablePopupMenu.export=Export CSV / MS Excel ...]
WITHOUT_CLASSIFICATION	SS: Display complete column header as tooltip if the column isn't wide enough to display it
WITHOUT_CLASSIFICATION	Tell the DataSetViewer to delete the rows Note: rows are indexes in the SORTABLE model, not the ACTUAL model
WITHOUT_CLASSIFICATION	int modelCol = getTable().convertColumnIndexToModel(col);
WITHOUT_CLASSIFICATION	getTable().doLayout();
WITHOUT_CLASSIFICATION	getTable().doLayout();
WITHOUT_CLASSIFICATION	Added by Patch 2856103 for Apple/Mac
WITHOUT_CLASSIFICATION	Added by Patch 2856103 for Apple/Mac
WITHOUT_CLASSIFICATION	Rendering the column that the mouse has been pressed in.
WITHOUT_CLASSIFICATION	If this is the column that the table is currently is currently sorted by then display the sort icon.
WITHOUT_CLASSIFICATION	This is not the column that the mouse has been pressed in.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Point pt = JFCUtilities.computePopupLocation(evt, evt.getComponent(), this);
WITHOUT_CLASSIFICATION	The message area is on the right of the statusbar and takes up all available space.
WITHOUT_CLASSIFICATION	Any other components are on the right.
WITHOUT_CLASSIFICATION	void reload();
WITHOUT_CLASSIFICATION	Dimension dim = sp.getPreferredSize(); dim.width = PREFERRED_WIDTH; sp.setPreferredSize(new Dimension(sp.getPreferredSize().width, 200));
WITHOUT_CLASSIFICATION	Dimension dim = getPreferredSize(); dim.width = PREFERRED_WIDTH; setPreferredSize(dim); setRows(3);
WITHOUT_CLASSIFICATION	first attempt to add data to underlying table model
WITHOUT_CLASSIFICATION	Comparable c1 = (Comparable)data1; return c1.compareTo(data2) _iAscending;
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.noFile=You must provide a export file name.]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.replaceFile=The export file already exisits. Would you like to replace it?]
WITHOUT_CLASSIFICATION	Menues that are also shown in the main window Session menu might be in this popup. If we don't remove them, the Session won't be Garbage Collected.
WITHOUT_CLASSIFICATION	This was originaly done every time. and the count of instantiated objects was amazing
WITHOUT_CLASSIFICATION	We look forward
WITHOUT_CLASSIFICATION	top
WITHOUT_CLASSIFICATION	right
WITHOUT_CLASSIFICATION	Can't happen
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.formatXLS=Export MS Excel (XLS) file]
WITHOUT_CLASSIFICATION	tell the underlying data model to make itself editable, which includes telling the GUI to rebuild itself
WITHOUT_CLASSIFICATION	show all tooltips for ten seconds before hiding
WITHOUT_CLASSIFICATION	Row 1
WITHOUT_CLASSIFICATION	abort the export
WITHOUT_CLASSIFICATION	Row 2
WITHOUT_CLASSIFICATION	abort the export
WITHOUT_CLASSIFICATION	Row 3
WITHOUT_CLASSIFICATION	private static final StringManager s_stringMgr = StringManagerFactory.getStringManager(TableCopyCommand.class);
WITHOUT_CLASSIFICATION	All sheets and cells added. Now write out the workbook
WITHOUT_CLASSIFICATION	_table.requestFocus();
WITHOUT_CLASSIFICATION	Only for restoring from XML etc.
WITHOUT_CLASSIFICATION	tell the underlying data model to stop forcing edit mode and return to the mode specified in the session parameters, which includes telling the GUI to rebuild itself
WITHOUT_CLASSIFICATION	Only for restoring from XML etc.
WITHOUT_CLASSIFICATION	register as a listener for mouse events
WITHOUT_CLASSIFICATION	We look backwards
WITHOUT_CLASSIFICATION	We look backwards
WITHOUT_CLASSIFICATION	view
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.writeFileSuccess=Export to file "{0}" is complete.]
WITHOUT_CLASSIFICATION	String sql = "A'''' sss ; GO ;; GO'"; String sql = "A\n--x\n--y\n\nB"; String sql = "GO GO";
WITHOUT_CLASSIFICATION	/ Handling of comments
WITHOUT_CLASSIFICATION	skip ahead so the cursor is now immediately after the begin comment string
WITHOUT_CLASSIFICATION	This is responsible that comments are not in curQuery
WITHOUT_CLASSIFICATION	Add end
WITHOUT_CLASSIFICATION	Some drivers for DB2 don't return SYSFUN as a schema name. A number of system stored procs are kept in this schema.
WITHOUT_CLASSIFICATION	PostgreSQL (at least 7.3.2) returns false for supportsStoredProcedures() even though it does support them.
WITHOUT_CLASSIFICATION	Use a set rather than a list as some combinations of MS SQL and the JDBC/ODBC return multiple copies of each table type.
WITHOUT_CLASSIFICATION	Treating indexes as tables interferes with the operation of the PostgreSQL plugin
WITHOUT_CLASSIFICATION	Treating sequences as tables interferes with the operation of the PostgreSQL plugin
WITHOUT_CLASSIFICATION	There are many of these "tables", that PostgreSQL throws SQLExceptions for whenever a table-like operation is attempted.
WITHOUT_CLASSIFICATION	Informix: when no database is given in the connect url, then no table types are returned. The catalog can be changed which will select a database, but by that time it is too late.
WITHOUT_CLASSIFICATION	create a mapping of names if we have supertable info, since we need to find the ITableInfo again for re-ordering.
WITHOUT_CLASSIFICATION	store all plain table info we have.
WITHOUT_CLASSIFICATION	re-order nodes if the tables are stored hierachically
WITHOUT_CLASSIFICATION	remove from toplevel.
WITHOUT_CLASSIFICATION	MM-MYSQL driver doesnt support null for column name.
WITHOUT_CLASSIFICATION	See if there is a plugin-registered DataTypeComponent that can handle this column.
WITHOUT_CLASSIFICATION	Oracle's 'TIMESTAMP WITH TIME ZONE' == -101 Oracle's 'TIMESTAMP WITH LOCAL TIME ZONE' == -102
WITHOUT_CLASSIFICATION	i18n[MetaDataDecoratorDataSet.noJarFiles=No files specified in 'Extra ClassPath' tab for driver]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Since we are reading Meta-data about the DB, we should never see a BLOB. If we do, the contents are not interpretable by Squirrel, so just tell the user that it is a BLOB and that it has data.
WITHOUT_CLASSIFICATION	Since we are reading Meta-data about the DB, we should never see a CLOB. However, if we do we assume that it is printable text and that the user wants to see it, so read in the entire thing.
WITHOUT_CLASSIFICATION	Add begin
WITHOUT_CLASSIFICATION	Add end
WITHOUT_CLASSIFICATION	?? }
WITHOUT_CLASSIFICATION	final String columnClassName = _rsmd.getColumnClassName(idx);
WITHOUT_CLASSIFICATION	binary types
WITHOUT_CLASSIFICATION	1i8n[MetaDataDecoratorDataSet.classNameLabel=JDBC Driver CLASSNAME]
WITHOUT_CLASSIFICATION	1i8n[MetaDataDecoratorDataSet.classPathLabel=JDBC Driver CLASSPATH]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(ResultSetColumnReader.class);
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	check for Informix - it has very "special" qualified names
WITHOUT_CLASSIFICATION	Progress claims to support catalogs in data manip - but it actually doesn't honor that claim.
WITHOUT_CLASSIFICATION	In case the connection won't be able to tell its Auto Commit state, this is the best default we have.
WITHOUT_CLASSIFICATION	DatabaseObjectType.DATABASE_TYPE_DBO=Database Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.INDEX_TYPE_DBO=Index Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.PROC_TYPE_DBO=Stored Procedure Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.SEQUENCE_TYPE_DBO=Sequence Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.TABLE_TYPE_DBO=Table Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.TRIGGER_TYPE_DBO=Trigger Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.UDT_TYPE_DBO=UDT Type
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	tables that have at least one parent table
WITHOUT_CLASSIFICATION	tables that have at least one child table
WITHOUT_CLASSIFICATION	tables that have at least one child table and have a least one parent table
WITHOUT_CLASSIFICATION	Avoid the hit next time
WITHOUT_CLASSIFICATION	Avoid the hit next time
WITHOUT_CLASSIFICATION	Close the ResultSet
WITHOUT_CLASSIFICATION	Close the ResultSet's Statement if it is non-null. This frees open cursors.
WITHOUT_CLASSIFICATION	t1 depends on t2
WITHOUT_CLASSIFICATION	t2 depends on t1
WITHOUT_CLASSIFICATION	build up datastructure. final cache.
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	classes.add(((CacheEntry)it.next())._objClass);
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	return get().getProperty("mrj.version") != null;
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	i18n[TaskThreadPool.errorDuringTaskExecMsg=Error ocured during task execution:]
WITHOUT_CLASSIFICATION	item.setIcon(null);
WITHOUT_CLASSIFICATION	Some actions dont have accelerators
WITHOUT_CLASSIFICATION	This slash stuff is a ...
WITHOUT_CLASSIFICATION	-- Constructors --
WITHOUT_CLASSIFICATION	-- Path-component accessors --
WITHOUT_CLASSIFICATION	-- Attribute accessors --
WITHOUT_CLASSIFICATION	-- File operations --
WITHOUT_CLASSIFICATION	-- Filesystem interface --
WITHOUT_CLASSIFICATION	-- Basic infrastructure --
WITHOUT_CLASSIFICATION	Count of available or free threads.
WITHOUT_CLASSIFICATION	Should there me a Max Number of threads?
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	assume Unix or Linux
WITHOUT_CLASSIFICATION	private boolean _bStopExecution = false;
WITHOUT_CLASSIFICATION	_bStopExecution = false;
WITHOUT_CLASSIFICATION	these arrays are parallel.
WITHOUT_CLASSIFICATION	line should look like : This is a line with an <span>embedded key</span> in it.
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	Ctor. @parammsg Message describing the error.
WITHOUT_CLASSIFICATION	Ctor. Wraps this exception around another. @paramwrapee The exception that this one is wrapped around.
WITHOUT_CLASSIFICATION	convert data from StringWrappers to Strings
WITHOUT_CLASSIFICATION	Es mach nichts, wenn es die PID nicht g�be. Sie wird dann einfach oben nicht zugeordnet.
WITHOUT_CLASSIFICATION	If we are blocked by a member of a deadlock chain but do not belong to the deadlock chain ourselves this prevents a forever loop.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Die 200 braucht nur SQL Server 7.0, SQL Server 2000 nicht mehr sagt SAN
WITHOUT_CLASSIFICATION	Dataholder res = conn.runClassMethod("%Library.CMUtilities", "getExecutionPlan", argv, Database.RET_OBJECT);
WITHOUT_CLASSIFICATION	newIndentDepth == indentDepth
WITHOUT_CLASSIFICATION	jdbc:Cache:cachensw-and:1972/SHDTest
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	plugin supports only Session main window
WITHOUT_CLASSIFICATION	plugin supports only Session main window
WITHOUT_CLASSIFICATION	user.home/.squirrel-sql/plugins/dbcopy
WITHOUT_CLASSIFICATION	i18n[codecompletion.useSyntaxPlugin=Code completion will work better if you use the Syntax plugin. Get it from squirrelsql.org, it's free!]
WITHOUT_CLASSIFICATION	I have seen the reference to the outer class being null when this method is called. I have seen it only with the runtime jars and on Linux. I could not reproduce in my IDE.
WITHOUT_CLASSIFICATION	figure out which column the user clicked on so we can pass in the right column description
WITHOUT_CLASSIFICATION	Folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	coll.add(new ScriptProcedureAction(app, _resources, this, _userSettingsFolder)); coll.add(new RefreshRepositoryAction(app, _resources, this, _userSettingsFolder));
WITHOUT_CLASSIFICATION	These objects do not depend on catalogs or schemas. It is enough if we load them once.
WITHOUT_CLASSIFICATION	For example Postgres returns table names as datatypes. In those cases this prevents to have the table names twice.
WITHOUT_CLASSIFICATION	CompletionInfos are still loading
WITHOUT_CLASSIFICATION	CompletionInfos are still loading
WITHOUT_CLASSIFICATION	1 < buf.size()
WITHOUT_CLASSIFICATION	Might also be a catalog or a schema name
WITHOUT_CLASSIFICATION	First check aliases
WITHOUT_CLASSIFICATION	See if this is the same statement
WITHOUT_CLASSIFICATION	Makes sure that the last name is always in top of the list.
WITHOUT_CLASSIFICATION	Code Completion has been done within Code Completion. and relaunch completion popup.
WITHOUT_CLASSIFICATION	new TestCompletionFunction(),
WITHOUT_CLASSIFICATION	remove the function name
WITHOUT_CLASSIFICATION	Needed for example on PostgreSQL
WITHOUT_CLASSIFICATION	i18n[codeCompletion.spWithParams=stored procedure with parameter info: {call mySP(<IN INTEGER tid>)}]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.globalFunctCompltion=If there is no matching prefix configuration functions should complete like:]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.udfWithoutParams=UDF without params]
WITHOUT_CLASSIFICATION	Just a Test
WITHOUT_CLASSIFICATION	i18n[codeCompletion.prefixConfig.deleteSelRows=Delete selected rows]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.prefixConfig.newRow=Add new row]
WITHOUT_CLASSIFICATION	this holds all the values for switches that the user is allowed to set
WITHOUT_CLASSIFICATION	this will be our working buffer to hold data chunks read in from the data file
WITHOUT_CLASSIFICATION	these are all more or less global loop variables to keep from needing to pass them all into various methods during parsing
WITHOUT_CLASSIFICATION	use clone here to prevent the outside code from setting values on the array directly, which would throw off the index lookup based on header name
WITHOUT_CLASSIFICATION	use headersHolder.Length here in case headers is null
WITHOUT_CLASSIFICATION	need to return a clone, and can't use clone because values.Length might be greater than columnsCount
WITHOUT_CLASSIFICATION	check to see if we've already found the end of data
WITHOUT_CLASSIFICATION	loop over the data stream until the end of data is found or the end of the record is found
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	this will be a text qualified column, so we need to set startedWithQualifier to make it enter the seperate branch to handle text qualified columns
WITHOUT_CLASSIFICATION	read qualified
WITHOUT_CLASSIFICATION	can only happen for ESCAPE_MODE_BACKSLASH
WITHOUT_CLASSIFICATION	make sure to clear the flag for next run of the loop
WITHOUT_CLASSIFICATION	keep track of the last letter because we need it for several key decisions
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	this will skip blank lines
WITHOUT_CLASSIFICATION	keep track of the last letter because we need it for several key decisions
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	we encountered a column with no data, so just send the end column
WITHOUT_CLASSIFICATION	do nothing, this will trim leading whitespace for both text qualified columns and non
WITHOUT_CLASSIFICATION	since the letter wasn't a special letter, this will be the first letter of our current column
WITHOUT_CLASSIFICATION	check to see if we hit the end of the file without processing the current record
WITHOUT_CLASSIFICATION	for hasMoreData to ever be false, all data would have had to have been copied to the raw buffer
WITHOUT_CLASSIFICATION	if no more data could be found, set flag stating that the end of the data was found
WITHOUT_CLASSIFICATION	copy the header data from the column array to the header string array
WITHOUT_CLASSIFICATION	if there are duplicate header names, we will save the last one
WITHOUT_CLASSIFICATION	check to see if we have read the header record yet
WITHOUT_CLASSIFICATION	return the processed header data for this column
WITHOUT_CLASSIFICATION	must be called before setting startedColumn = false
WITHOUT_CLASSIFICATION	check to see if our current holder array for column chunks is still big enough to handle another column chunk
WITHOUT_CLASSIFICATION	holder array needs to grow to be able to hold another column
WITHOUT_CLASSIFICATION	Create column list
WITHOUT_CLASSIFICATION	keep track of the last letter because we need it for several key decisions
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	clear public column values for current line
WITHOUT_CLASSIFICATION	just eat the exception
WITHOUT_CLASSIFICATION	/ <summary> / The position of the cursor in the buffer when the / current column was started or the last time data / was moved out to the column buffer. / </summary>
WITHOUT_CLASSIFICATION	ASCII/ANSI escape
WITHOUT_CLASSIFICATION	having these as publicly accessible members will prevent the overhead of the method call that exists on properties
WITHOUT_CLASSIFICATION	these are static instead of final so they can be changed in unit test isn't visible outside this class and is only accessed once during CsvReader construction
WITHOUT_CLASSIFICATION	i18n[ImportTableDataCommand.settingsDialogTitle=Import file settings]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.wrongFormat=Imported column has not the required format.\nLine is: {0}, column is: {1}]
WITHOUT_CLASSIFICATION	1968807: Unsigned INT problem with IMPORT FILE functionality If we are working with a signed integer, then it should be ok to store in a Java integer which is always signed. However, if we are working with an unsigned integer type, Java doesn't have this so use a long instead.
WITHOUT_CLASSIFICATION	try it as a long in case the database driver didn't correctly identify an unsigned field
WITHOUT_CLASSIFICATION	Show a warning dialog and let the user confirm it.
WITHOUT_CLASSIFICATION	i18n[ImportTableDataCommand.ioErrorOccured=An error occured while reading import file data.]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Not needed
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.suggestColumns=Suggest columns (find matching columns)]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.headersIncluded=Headers in first line]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.dataPreview=Data preview]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	If the user chooses neither Fixed value nor Auto-Increment, then clear the "Fixed value" field if it has a value.
WITHOUT_CLASSIFICATION	If the user picks auto-increment, auto-fill the "Fixed value" column with 0 for the start value if it is currently empty.
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.column=Column]
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	i18n[ProgressBarDialog.error.getdialog=getDialog: unable to invokeAndWait for dialog]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.fixedValue=Fixed value]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.importFileColumn=Import file column]
WITHOUT_CLASSIFICATION	i18n[ProgressBarDialog.insertingRecordsLabel=Copying records]
WITHOUT_CLASSIFICATION	i18n[SpecialColumnMapping.AUTO_INCREMENT=Auto increment]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	Ignore that
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	register custom DataTypeComponent factory for DB2 XML
WITHOUT_CLASSIFICATION	Install DB2JCCExceptionFormatter iff we're using the JCC driver
WITHOUT_CLASSIFICATION	tableExpander.setTableIndexExtractor(extractor);
WITHOUT_CLASSIFICATION	As the JCC driver code is obfuscated, we do not check the full class name, but resort to checking a prefix and suffix instead. In my version, the full class name is "com.ibm.db2.jcc.c.SqlException"
WITHOUT_CLASSIFICATION	Prefix for the JCC SqlException class name
WITHOUT_CLASSIFICATION	Class name for the JCC SqlException class
WITHOUT_CLASSIFICATION	Names of the various methods we need to invoke
WITHOUT_CLASSIFICATION	DB2Sqlca sqlca = ((DB2Diagnosable) t).getSqlca();
WITHOUT_CLASSIFICATION	String msg = sqlca.getMessage();
WITHOUT_CLASSIFICATION	int sqlCode = sqlca.getSqlCode();
WITHOUT_CLASSIFICATION	int sqlstate = sqlca.getSqlState();
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	we may have more than one statement in sql at this point
WITHOUT_CLASSIFICATION	MQTs only ever have one sql statement
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	At the moment, no default value
WITHOUT_CLASSIFICATION	Yes to all
WITHOUT_CLASSIFICATION	Cancel
WITHOUT_CLASSIFICATION	i18n[oracle.owner=Owner]
WITHOUT_CLASSIFICATION	No decimal digits strongly suggests an INTEGER of some type. Since it's not real easy to tell what kind of int (int2, int4, int8) just make it an int8 (i.e. BIGINT)
WITHOUT_CLASSIFICATION	Numbers and such.
WITHOUT_CLASSIFICATION	i18n[oracle.objectName=Object Name]
WITHOUT_CLASSIFICATION	i18n[oracle.objectType=Object Type]
WITHOUT_CLASSIFICATION	As a last resort, get the length of the longest value in the specified column.
WITHOUT_CLASSIFICATION	Yes || Yes to all
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	No need to check column name validity when source and dest are of the same type of database.
WITHOUT_CLASSIFICATION	Don't fool around with manual commit later.
WITHOUT_CLASSIFICATION	Loop through source records...
WITHOUT_CLASSIFICATION	MySQL driver gets unhappy when we use the same PreparedStatement to bind null and non-null LOB variables without clearing the parameters first.
WITHOUT_CLASSIFICATION	I18n[oracle.invalidTitle=Oracle invalid objects for: {0}]
WITHOUT_CLASSIFICATION	Only resize once.
WITHOUT_CLASSIFICATION	If source column is type 1111 (OTHER), try to use the column type name to find a type that isn't 1111.
WITHOUT_CLASSIFICATION	If source column is type 1111 (OTHER), try to use the column type name to find a type that isn't 1111.
WITHOUT_CLASSIFICATION	ICommand Interface implementation
WITHOUT_CLASSIFICATION	Can't paste from a session that is no longer around.
WITHOUT_CLASSIFICATION	md = new MemoryDiagnostics();
WITHOUT_CLASSIFICATION	Copy action object tree types
WITHOUT_CLASSIFICATION	Paste action object tree types
WITHOUT_CLASSIFICATION	MySQL shows databases as "CATALOGS" not "SCHEMAS"
WITHOUT_CLASSIFICATION	Nothing to do for an SQL internal frame
WITHOUT_CLASSIFICATION	When the user pastes on a TABLE label which is located under a schema/catalog, build the schema DatabaseObjectInfo.
WITHOUT_CLASSIFICATION	i18n[PasteTableAction.error.destdbobj=The destination database doesn't support copying tables into '{0}' objects.\n Please select a schema to paste into.]
WITHOUT_CLASSIFICATION	ISession sourceSession = sessionInfoProv.getCopySourceSession(); ISession destSession = sessionInfoProv.getCopyDestSession();
WITHOUT_CLASSIFICATION	Column 0 Row 0
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	calculate the average time / item
WITHOUT_CLASSIFICATION	TODO: check to be sure that the source and destination schemas are different. Abort if they are the same and inform the user.
WITHOUT_CLASSIFICATION	Only concerned about order when more than one table.
WITHOUT_CLASSIFICATION	Column 0 Row 1
WITHOUT_CLASSIFICATION	How many items left
WITHOUT_CLASSIFICATION	Span across two columns c.ipadx = 40;
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 20 pixels
WITHOUT_CLASSIFICATION	selectFetchSizeLabel.setHorizontalAlignment(JLabel.LEFT);
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Probably shutting down.
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.executeupdate=executeupdate: Running SQL:\n '{0}']
WITHOUT_CLASSIFICATION	TimesTen allows a maximum fetch size of 128.
WITHOUT_CLASSIFICATION	Allow the user to set "0" for the fetch size to indicate that this should not be called. JDBC-ODBC bridge driver fails to execute SQL once you have set the fetch size to any value.
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.tablenotfound=Couldn't locate table '{0}' in schema '(1)']
WITHOUT_CLASSIFICATION	Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.
WITHOUT_CLASSIFICATION	Do Nothing - this can happen when the table doesn't exist
WITHOUT_CLASSIFICATION	Currently, as of milestone 3, Axion doesn't support "schemas" like other databases. So, set the schema to emtpy string if we detect an Axion session.
WITHOUT_CLASSIFICATION	MySQL uses catalogs and not schemas
WITHOUT_CLASSIFICATION	trim the table name in case of HADB
WITHOUT_CLASSIFICATION	Fallback to the old method, going directly to the database instead of using SchemaInfo, since SchemaInfo didn't have it.
WITHOUT_CLASSIFICATION	user.home/.squirrel-sql/plugins/dbcopy/scripts
WITHOUT_CLASSIFICATION	Fix the case according to what the database tells us.
WITHOUT_CLASSIFICATION	SQL FLOAT requires support for 15 digits of mantissa.
WITHOUT_CLASSIFICATION	COLUMN_NAME
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.unknowntype=Unknown Java SQL column type: '{0}']
WITHOUT_CLASSIFICATION	if we failed to bind the blob in a file, try memory.
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindcloblength=bindClobVarInFile: writing '{0}' bytes.]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindclobfile=bindClobVarInFile: Opening temp file '{0}']
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindblobfile=bindBlobVarInFile: Opening temp file '{0}']
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindblobmem=bindBlobVarInMemory: binding '{0}' bytes]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.bindblobfailure=bindBlobVar: failed to bind blob using filesystem - attempting to bind blob using memory]
WITHOUT_CLASSIFICATION	if we failed to bind the blob in a file, try memory.
WITHOUT_CLASSIFICATION	set the ps to read from the file we just created.
WITHOUT_CLASSIFICATION	get ascii stream from rs
WITHOUT_CLASSIFICATION	read rs input stream write to file output stream
WITHOUT_CLASSIFICATION	Open file output stream
WITHOUT_CLASSIFICATION	Open file output stream
WITHOUT_CLASSIFICATION	read rs input stream write to file output stream
WITHOUT_CLASSIFICATION	set the ps to read from the file we just created.
WITHOUT_CLASSIFICATION	get binary stream from rs
WITHOUT_CLASSIFICATION	If the user wants the primary key copied and the source session isn't Axion (Axion throws SQLException for getPrimaryKeys())
WITHOUT_CLASSIFICATION	user.home/.squirrel-sql/plugins
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	ignore any SQLExceptions. This would only if we could not get column info from the SQL database meta data.
WITHOUT_CLASSIFICATION	replace the next question mark with nextVal
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	ResultSet rs = con.getMetaData().getTables("dbcopysrc", null, "BIGINT_TYPE_TABLE", new String[]{ "TABLE" });
WITHOUT_CLASSIFICATION	listener.setShowSqlStatements(true);
WITHOUT_CLASSIFICATION	result = false;
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#initialize()
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	diffSourceSession = null;setPasteMenuEnabled(false);PreferencesManager.unload();
WITHOUT_CLASSIFICATION	DBCopyGlobalPreferencesTab tab = new DBCopyGlobalPreferencesTab();return new IGlobalPreferencesPanel[] { tab };
WITHOUT_CLASSIFICATION	Uses menu.dbdiff. in dbdiff.properties
WITHOUT_CLASSIFICATION	Interface SessionInfoProvider implementation
WITHOUT_CLASSIFICATION	Column is in table 1, but not table 2
WITHOUT_CLASSIFICATION	i18n[DiffExecutor.noDiffsMessage=No differences were detected]
WITHOUT_CLASSIFICATION	table exists in source db but not dest
WITHOUT_CLASSIFICATION	table doesn't exist in source db
WITHOUT_CLASSIFICATION	Assume objs[0] is a schema/catalog
WITHOUT_CLASSIFICATION	Nothing to do for an SQL internal frame
WITHOUT_CLASSIFICATION	ICommand Interface implementation
WITHOUT_CLASSIFICATION	The header for the scrollable part which presents column differences
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	corner.validate();
WITHOUT_CLASSIFICATION	jScrollPane1.setRowHeaderView(_rowHeader);
WITHOUT_CLASSIFICATION	_tableHeader.adoptAllColWidths(true); _tableHeader.initColWidths();
WITHOUT_CLASSIFICATION	corner.createDefaultColumnsFromModel();
WITHOUT_CLASSIFICATION	jScrollPane1.setCorner(JScrollPane.UPPER_LEFT_CORNER, corner);
WITHOUT_CLASSIFICATION	result.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
WITHOUT_CLASSIFICATION	throw new IllegalStateException("Wrong constructor");
WITHOUT_CLASSIFICATION	Do Nothing - this can happen when the table doesn't exist
WITHOUT_CLASSIFICATION	MySQL uses catalogs and not schemas
WITHOUT_CLASSIFICATION	Currently, as of milestone 3, Axion doesn't support "schemas" like other databases. So, set the schema to emtpy string if we detect an Axion session.
WITHOUT_CLASSIFICATION	Don't change the case of the identifier if database allows mixed case.
WITHOUT_CLASSIFICATION	Fix the case according to what the database tells us.
WITHOUT_CLASSIFICATION	Register custom DataTypeComponent factory for Derby CLOB type
WITHOUT_CLASSIFICATION	_treeAPI.addDetailTab(DatabaseObjectType.SEQUENCE, new DatabaseObjectInfoTab()); _treeAPI.addDetailTab(DatabaseObjectType.SEQUENCE, new SequenceDetailsTab());
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander _treeAPI.addExpander(DatabaseObjectType.SCHEMA, new SchemaExpander());
WITHOUT_CLASSIFICATION	the code bellow is only for Embedded Derby Driver
WITHOUT_CLASSIFICATION	Getting java.sql.Driver to run shutdown command
WITHOUT_CLASSIFICATION	Re-registering driver is necessary for Embedded Derby
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	for convenience, cast the value object to its type
WITHOUT_CLASSIFICATION	we have the whole contents of the CLOB
WITHOUT_CLASSIFICATION	Getters and Setters
WITHOUT_CLASSIFICATION	if both objs are null, then they matched in the previous test, so at this point we know that at least one of them (or both) is not null. However, one of them may still be null, and we cannot call equals() on the null object, so make sure that the one we call it on is not null. The equals() method handles the other one being null, if it is.
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	for convenience, cast the existing object
WITHOUT_CLASSIFICATION	no existing clob to re-use
WITHOUT_CLASSIFICATION	if the original object is not null, then it contains a Clob object that we need to re-use, since that is the DBs reference to the clob data area. Otherwise, we set the original Clob to null, and the write method needs to know to set the field to null.
WITHOUT_CLASSIFICATION	create new object to hold the different value, but use the same internal CLOB pointer as the original
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	CLOB cannot be used in WHERE clause
WITHOUT_CLASSIFICATION	for convenience cast the object to ClobDescriptor
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	i18n[editextras.date=Date]
WITHOUT_CLASSIFICATION	new RemoveQuotesCommand(_session.getSQLPanelAPI(_plugin)).execute();
WITHOUT_CLASSIFICATION	Load resources.
WITHOUT_CLASSIFICATION	To make the shortcut visible in the popup
WITHOUT_CLASSIFICATION	Some people put new line characters in their SQL to have nice debug output. Remove these new line characters too.
WITHOUT_CLASSIFICATION	new ConvertToStringBufferCommand(_session.getSQLPanelAPI(_plugin)).execute();
WITHOUT_CLASSIFICATION	/ IBM DB 2 specific code to read procedure definitions.
WITHOUT_CLASSIFICATION	new InQuotesCommand(_session.getSQLPanelAPI(_plugin)).execute();
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Plugin knows only how to script Views and Stored Procedures on DB2. So if it's not a DB2 Session we tell SQuirreL the Plugin should not be used.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Add context menu items to the object tree's view and procedure nodes.
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileWillBeCreated={0} not found - will be created]
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileExistsReplace={0}\nalready exists. Do you want to replace it?]
WITHOUT_CLASSIFICATION	i18n[exportconfig.databaseDrivers=Database Drivers]
WITHOUT_CLASSIFICATION	i18n[exportconfig.databaseAliases=Database Aliases]
WITHOUT_CLASSIFICATION	i18n[exportconfig.applicationSettings=Application Settings]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorReslovingFileName=Error resolving file name]
WITHOUT_CLASSIFICATION	i18n[favs.nameMustNotBeBlank=Name cannot be blank.]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	Add mouse listener for displaying popup menu.
WITHOUT_CLASSIFICATION	private String getFileName(File dir, String name) { return getFileName(new File(dir, name)); }
WITHOUT_CLASSIFICATION	chooser.setDialogTitle("Select???");
WITHOUT_CLASSIFICATION	setModel(_model);
WITHOUT_CLASSIFICATION	addTreeExpansionListener(new MyExpansionListener());
WITHOUT_CLASSIFICATION	Register so that we can display different tooltips depending which entry in tree mouse is over.
WITHOUT_CLASSIFICATION	, IHasName
WITHOUT_CLASSIFICATION	= new QueryTree();
WITHOUT_CLASSIFICATION	_mainSplitPane.add(getDesktopPane(), JSplitPane.RIGHT);
WITHOUT_CLASSIFICATION	setBounds(new Rectangle(600, 400));
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	i18n[favs.newFolder=New Folder] ?? i18n
WITHOUT_CLASSIFICATION	Supports Session main window only
WITHOUT_CLASSIFICATION	Expanders.
WITHOUT_CLASSIFICATION	i18n[firebird.showTrigger=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[firebird.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[firebird.seqDetails=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[firebird.genDetails=Details]
WITHOUT_CLASSIFICATION	Execute the SQL command in the SQL tab and then display the SQL tab.
WITHOUT_CLASSIFICATION	private static ILogger s_log = LoggerController.createLogger(DatabaseExpander.class);
WITHOUT_CLASSIFICATION	i18n[firebird.details=Details]
WITHOUT_CLASSIFICATION	i18n[firebird.trigDetails=Details]
WITHOUT_CLASSIFICATION	i18n[firebird.trigDetails=Details]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Logger for this class
WITHOUT_CLASSIFICATION	private utility constructor
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	sheet types
WITHOUT_CLASSIFICATION	result of checking for jaybird driver with major version >= 2
WITHOUT_CLASSIFICATION	Logger for this class
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	line separator for easy using ;-)
WITHOUT_CLASSIFICATION	jdbc:firebirdsql:[host[:port]/
WITHOUT_CLASSIFICATION	FileFilter
WITHOUT_CLASSIFICATION	getter/setter
WITHOUT_CLASSIFICATION	data objects
WITHOUT_CLASSIFICATION	-- edit
WITHOUT_CLASSIFICATION	tree
WITHOUT_CLASSIFICATION	select
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	layout ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	jradiobuttonRoles.setSelected(true);
WITHOUT_CLASSIFICATION	btnSetPermissions.setEnabled(false);
WITHOUT_CLASSIFICATION	private void appendPrivelegeToBuffer(StringBuffer pBuffer, String psPrivilege)
WITHOUT_CLASSIFICATION	data ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	false);
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	get grant target
WITHOUT_CLASSIFICATION	Tables and Views
WITHOUT_CLASSIFICATION	Procedures
WITHOUT_CLASSIFICATION	Roles
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	super.isCellEditable(row, column);
WITHOUT_CLASSIFICATION	" WITH ADMIN OPTION"
WITHOUT_CLASSIFICATION	super.isCellEditable(row, column);
WITHOUT_CLASSIFICATION	########################################################################
WITHOUT_CLASSIFICATION	setting color
WITHOUT_CLASSIFICATION	root
WITHOUT_CLASSIFICATION	set default colors
WITHOUT_CLASSIFICATION	set default colors
WITHOUT_CLASSIFICATION	root
WITHOUT_CLASSIFICATION	childs
WITHOUT_CLASSIFICATION	groups
WITHOUT_CLASSIFICATION	groups
WITHOUT_CLASSIFICATION	childs
WITHOUT_CLASSIFICATION	-- backup
WITHOUT_CLASSIFICATION	setting color
WITHOUT_CLASSIFICATION	session preferences
WITHOUT_CLASSIFICATION	setting value
WITHOUT_CLASSIFICATION	setting value
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-- restore
WITHOUT_CLASSIFICATION	errors
WITHOUT_CLASSIFICATION	info
WITHOUT_CLASSIFICATION	"ignore bad checksums" "ignore transaction in Limbo"
WITHOUT_CLASSIFICATION	"backup file"
WITHOUT_CLASSIFICATION	"server" "port" "database file"
WITHOUT_CLASSIFICATION	"deactivate indexes during restore" "restore without creating shadows" "do not reserve space for record versions" "restores one table at a time" "do not restore database validity conditions" "replace database from backup file" "override old page size" "new page size" "restore"
WITHOUT_CLASSIFICATION	JScrollPane jscrollpane1 = new JScrollPane();
WITHOUT_CLASSIFICATION	global preferences
WITHOUT_CLASSIFICATION	preferences from the last session
WITHOUT_CLASSIFICATION	load properties and fill missing entries with the global preferences
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	i18n[graph.invalidWidth=Invalid width]
WITHOUT_CLASSIFICATION	session preferences
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	read map with users
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	i18n[oracle.sequenceDetails=Details]
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	preferences from the last session
WITHOUT_CLASSIFICATION	load properties and fill missing entries with the global preferences
WITHOUT_CLASSIFICATION	Messages
WITHOUT_CLASSIFICATION	set dialog
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	display mode
WITHOUT_CLASSIFICATION	table data objects
WITHOUT_CLASSIFICATION	Tooltips and questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	session preferences
WITHOUT_CLASSIFICATION	display mode
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	global references
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	preferences from the last session
WITHOUT_CLASSIFICATION	table data objects
WITHOUT_CLASSIFICATION	Tooltips and questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	usermanager of jaybird
WITHOUT_CLASSIFICATION	handle of connected server
WITHOUT_CLASSIFICATION	init user list
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Logger for this class private final static ILogger log = LoggerController.createLogger(PreferencesPanel.class);
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	Internationalized strings for this class.
WITHOUT_CLASSIFICATION	gui
WITHOUT_CLASSIFICATION	private JLabel lblTitle = new JLabel();
WITHOUT_CLASSIFICATION	----------------------------------------------------
WITHOUT_CLASSIFICATION	Logger for this class
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	Name of the preferences files
WITHOUT_CLASSIFICATION	Folder to store the user settings in
WITHOUT_CLASSIFICATION	Bean for the global preferences
WITHOUT_CLASSIFICATION	the plugin
WITHOUT_CLASSIFICATION	case SESSION_BEAN_GRANT_AND_REVOKE: return FirebirdManagerGrantPreferenceBean.class.getClassLoader();
WITHOUT_CLASSIFICATION	We try to cascade
WITHOUT_CLASSIFICATION	i18n[graph.zoom=Zoom]
WITHOUT_CLASSIFICATION	Printing
WITHOUT_CLASSIFICATION	If we reach here we could not calculate a place to add the new table frame. Now it will automatically be added at (0,0).
WITHOUT_CLASSIFICATION	printBtnPrefSize.width -=10;
WITHOUT_CLASSIFICATION	No paper edges. We print the Graph as it is to a single image.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	/ Printing
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	btnCopyToClipPrefSize.width -=10;
WITHOUT_CLASSIFICATION	public int getPixelWidth() { int pixelByCm = (int) (Toolkit.getDefaultToolkit().getScreenResolution() CM_BY_INCH + 0.5); return (int)(_format.getWidth() pixelByCm + 0.5); } public int getPixelHeight() { int pixelByCm = (int) (Toolkit.getDefaultToolkit().getScreenResolution() CM_BY_INCH + 0.5); return (int)(_format.getHeight() pixelByCm + 0.5); }
WITHOUT_CLASSIFICATION	i18n[graph.dina5=Din A 5]
WITHOUT_CLASSIFICATION	i18n[graph.inch=inch]
WITHOUT_CLASSIFICATION	Transferable
WITHOUT_CLASSIFICATION	Center text vertically.
WITHOUT_CLASSIFICATION	double zoom = _desktopController.getZoomer().getZoom();
WITHOUT_CLASSIFICATION	defines the opening angle of the arrow (not rad or so but something fancy)
WITHOUT_CLASSIFICATION	Serialized attributes
WITHOUT_CLASSIFICATION	defines the size of the arrow
WITHOUT_CLASSIFICATION	g.fillOval((int)(zoomfp.x + 0.5) - rad, (int)(zoomfp.y+0.5) - rad, 2 rad, 2 rad);
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	i18n[graph.btnCreateNewGraph=Create new graph]
WITHOUT_CLASSIFICATION	i18n[graph.orderyName=order by name]
WITHOUT_CLASSIFICATION	i18n[graph.save=Save]
WITHOUT_CLASSIFICATION	hit is on folding point
WITHOUT_CLASSIFICATION	hit is on folding point
WITHOUT_CLASSIFICATION	_constraintGraph.moveLastHitFoldingPointTo(point);
WITHOUT_CLASSIFICATION	Table was deleted from DB
WITHOUT_CLASSIFICATION	The old view is preserved to eventually preserve folding points
WITHOUT_CLASSIFICATION	+ 6;
WITHOUT_CLASSIFICATION	getSelectedController() == null means: Create a new Graph
WITHOUT_CLASSIFICATION	Clear
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	PKTABLE_NAME PKCOLUMN_NAME FKCOLUMN_NAME FK_NAME
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showIndexSource=Show index source]
WITHOUT_CLASSIFICATION	Sequence tabs
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	View Tab
WITHOUT_CLASSIFICATION	Trigger tabs
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[hibernate.hqlToSqlLong=HQL to SQL]
WITHOUT_CLASSIFICATION	If this isn't instanceof org.hibernate.type.CollectionType a NoSuchMethodException will be thrown
WITHOUT_CLASSIFICATION	UIFactory.getInstance().createTabbedPane();
WITHOUT_CLASSIFICATION	If this is not a hibernate error we write a log entry
WITHOUT_CLASSIFICATION	i18n[BookmarksAccessor.bookmarksPluginNeeded=Running bookmarks is only available with the Bookmarks Plugin.\nGet the plugin from www.squirrelsql.org. It's free.]
WITHOUT_CLASSIFICATION	i18n[HQLPanelController.hqlToSqlSuccess=Generated {0} SQL(s) in {1} milliseconds.]
WITHOUT_CLASSIFICATION	private static final String PERF_KEY_HQL_TAB_DIVIDER_LOCATION = "Squirrel.hibernateplugin.hqlTabDivLoc";
WITHOUT_CLASSIFICATION	i18n[HibernateTabPanel.configuration=Configuration]
WITHOUT_CLASSIFICATION	Code Completion has been done within Code Completion. Now just replace what all candidates have in common.
WITHOUT_CLASSIFICATION	Will be called asynchronously to the event dispatch thread
WITHOUT_CLASSIFICATION	-- EJBQL tokens --
WITHOUT_CLASSIFICATION	One synchron call for first completion
WITHOUT_CLASSIFICATION	Handle table source
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.noProviderMsg=Missing SessionFactoryImplProvider .\nChanges cannot be applied.]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	We need this buffer because this method may be called asynchronously to the event dispatch thread What could happen is, that _currentAliasInfos ist changed.
WITHOUT_CLASSIFICATION	We assume that classes and attributes won't be in the same completion list. Classes will be completed fully qualified when the user works with fully qualified class names ...
WITHOUT_CLASSIFICATION	misc functions - based on oracle dialect
WITHOUT_CLASSIFICATION	standard sql92 functions
WITHOUT_CLASSIFICATION	time functions mapped to ansi extract
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.removeConfig=Remove]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFact=To obtain a Hibernate SessionFactoryImpl instance SQuirreL should:]
WITHOUT_CLASSIFICATION	Example for this code: Completion should from Kv k inner join fetch k.positionen as posses where posses.artNr = 'sdfsdf'
WITHOUT_CLASSIFICATION	i18n[HibernatePrefsTab.hint=Hibernate configurations]
WITHOUT_CLASSIFICATION	i18n[HibernatePrefsTab.title=Hibernate]
WITHOUT_CLASSIFICATION	i18n[MappedObjectPanel.QualifiedNames=Show qualified names]
WITHOUT_CLASSIFICATION	String catalog, String schema, String simpleName, String tableType, String remarks,
WITHOUT_CLASSIFICATION	private static final String PERF_KEY_OBJ_TAB_DIV_LOC = "Squirrel.hibernateplugin.objTabDivLocAsInt";
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.sessionTimezoneTT=Set the session timezone to view 'WITH LOCAL TIMEZONE' data types]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.toString=Mapping]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	dist
WITHOUT_CLASSIFICATION	i18n[MappingRoot.user=JDBC User (Hibernate)]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.attrName=Attribute name]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.identifier=Identifier]
WITHOUT_CLASSIFICATION	i18n[I18n.openIOnEditor=Open in Editor]
WITHOUT_CLASSIFICATION	i18n[i18n.noFilesOpened=No file found.\nSee message panel for details.]
WITHOUT_CLASSIFICATION	i18n[i18n.noNativeToAsciiOutDir=Cannot convert files without a native2Ascii output dir.]
WITHOUT_CLASSIFICATION	i18n[I18n.WorkDirIsNotADirectory=Working directory {0} is not a directory]
WITHOUT_CLASSIFICATION	i18n[I18n.noWorkdirSpecified=No working directory specified.]
WITHOUT_CLASSIFICATION	i18n[i18n.bundle=Bundle]
WITHOUT_CLASSIFICATION	i18n[i18n.missingTarnslation=Missing translations]
WITHOUT_CLASSIFICATION	i18n[I18n.SourceDir=Source directory]
WITHOUT_CLASSIFICATION	i18n[I18n.TranslationsGenerationCount=Generated {0} templates to {1}]
WITHOUT_CLASSIFICATION	i18n[i18n.ParsingFinish=Parsing finished]
WITHOUT_CLASSIFICATION	i18n[I18n.info=Info]
WITHOUT_CLASSIFICATION	i18n[I18n.developers=Developers]
WITHOUT_CLASSIFICATION	i18n[I18n.translators=Translators]
WITHOUT_CLASSIFICATION	i18n[mssql.allObjects=All objects]
WITHOUT_CLASSIFICATION	No i18n, developers should write English props.
WITHOUT_CLASSIFICATION	print the i18n comment
WITHOUT_CLASSIFICATION	i18n[i18n.parseSuccess=Added {0} new and {1} replaced properties to {2}]
WITHOUT_CLASSIFICATION	No i18n, developers should write English props.
WITHOUT_CLASSIFICATION	i18n[I18n.SourceDirDoesNotExist=Source directory {0} does not exist.]
WITHOUT_CLASSIFICATION	i18n[I18n.NoSourceDir=Please choose a source directory.]
WITHOUT_CLASSIFICATION	i18n[I18n.SourceDirIsNotADirectory=Source directory {0} is not a directory.]
WITHOUT_CLASSIFICATION	Rob: Removed replacement via RegExp because it needed several RegExp escapes in val.
WITHOUT_CLASSIFICATION	i18n[i18n.wroteFixedFile=Wrote file {0}]
WITHOUT_CLASSIFICATION	No end bracket, params might follow
WITHOUT_CLASSIFICATION	We see that the replacement was already done before so we can count this as replaced
WITHOUT_CLASSIFICATION	These files contain images etc. We try to filter out these props.
WITHOUT_CLASSIFICATION	i18n[InformixPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[InformixPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	Postgres pg_proc table doesn't appear to have schema. I couldn't locate another table to join with to get this info either.
WITHOUT_CLASSIFICATION	i18n[mssql.allTables=All tables]
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.showErrorOffsetLabel=Show Syntax Error Offset in SQL Editor]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	ISessionListener interface methods
WITHOUT_CLASSIFICATION	Since we depend upon the Informix-specific IfmxConnection class, we need to keep a reference to the ISession we are associated with. However, this session could be closed, at which time we want to give up our reference so that it can be garbage collected.
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	First time through, skip the double spacing
WITHOUT_CLASSIFICATION	Folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	i18n[mssql.allRules=All rules]
WITHOUT_CLASSIFICATION	Name of directory to store extra LAFs in for the user.
WITHOUT_CLASSIFICATION	Folder that stores themepacks for this LAF.
WITHOUT_CLASSIFICATION	i18n[laf.jarZip=JAR/Zip files]
WITHOUT_CLASSIFICATION	i18n[laf.skinThemPack=Theme Pack:]
WITHOUT_CLASSIFICATION	i18n[laf.skinThemePackDir=Theme Pack Directory:]
WITHOUT_CLASSIFICATION	Load resources.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	Folder that stores Look and Feel jars.
WITHOUT_CLASSIFICATION	Folder to contain extra LAFs supplied by the user.
WITHOUT_CLASSIFICATION	Create empty required files in user settings directory.
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	Setup preferences to make jGoodies LAF look better. UIManager.put(Options.USE_SYSTEM_FONTS_APP_KEY, Boolean.TRUE); UIManager.put(Options.USE_NARROW_BUTTONS_KEY, Boolean.TRUE);
WITHOUT_CLASSIFICATION	Create the Look and Feel register.
WITHOUT_CLASSIFICATION	Listen for GUI components being created.
WITHOUT_CLASSIFICATION	Update font used for status bars.
WITHOUT_CLASSIFICATION	Ensure that this is a Plastic Theme.
WITHOUT_CLASSIFICATION	Editable Text
WITHOUT_CLASSIFICATION	Menus
WITHOUT_CLASSIFICATION	Static text
WITHOUT_CLASSIFICATION	Save the current UI defaults.
WITHOUT_CLASSIFICATION	Get Look and Feel class object.
WITHOUT_CLASSIFICATION	i18n[laf.staticText=Static Text]
WITHOUT_CLASSIFICATION	i18n[laf.statusBars=Status Bars]
WITHOUT_CLASSIFICATION	i18n[laf.other=Other]
WITHOUT_CLASSIFICATION	i18n[laf.statusFontEanbled=Enabled]
WITHOUT_CLASSIFICATION	i18n[laf.staticFontEanbled=Enabled]
WITHOUT_CLASSIFICATION	i18n[laf.otherFontEanbled=Enabled]
WITHOUT_CLASSIFICATION	i18n[laf.tabFonts=Fonts]
WITHOUT_CLASSIFICATION	i18n[laf.tabTitle=Fonts]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Map of JAR file URLs containing LAFs keyed by the LAF class name.
WITHOUT_CLASSIFICATION	Get the new Look and Feel object.
WITHOUT_CLASSIFICATION	Initialize all the LAF controllers.
WITHOUT_CLASSIFICATION	If a different LAF to the current one has been requested then change to the requested LAF.
WITHOUT_CLASSIFICATION	Retrieve URLs of all the Look and Feel jars and store in lafUrls.
WITHOUT_CLASSIFICATION	Set Look and Feel.
WITHOUT_CLASSIFICATION	forever
WITHOUT_CLASSIFICATION	Directory containing the standard LAF jar files.
WITHOUT_CLASSIFICATION	Create a ClassLoader for all the LAF jars. Install all Look and Feels into the UIManager.
WITHOUT_CLASSIFICATION	forever
WITHOUT_CLASSIFICATION	Load info about the standard LAFs that come with this plugin.
WITHOUT_CLASSIFICATION	We have read in all properties.
WITHOUT_CLASSIFICATION	private LAFPreferences _prefs;
WITHOUT_CLASSIFICATION	Load info about any extra LAFs supplied by the user.
WITHOUT_CLASSIFICATION	private LAFPreferences _prefs;
WITHOUT_CLASSIFICATION	SkyBluer
WITHOUT_CLASSIFICATION	_prefs = plugin.getLAFPreferences();
WITHOUT_CLASSIFICATION	private IApplication _app;
WITHOUT_CLASSIFICATION	_lafRegister.updateAllFrames();
WITHOUT_CLASSIFICATION	_app = app;
WITHOUT_CLASSIFICATION	i18n[laf.lookAndFeel=Look and Feel:]
WITHOUT_CLASSIFICATION	i18n[laf.jars=L & F jars:]
WITHOUT_CLASSIFICATION	_prefs = plugin.getLAFPreferences();
WITHOUT_CLASSIFICATION	_app = app;
WITHOUT_CLASSIFICATION	Force the LAF to be set even if Tonic is the current one. This allows changes to take affect.
WITHOUT_CLASSIFICATION	i18n[laf.themePack=Theme Pack:]
WITHOUT_CLASSIFICATION	Folder that stores themepacks for this LAF.
WITHOUT_CLASSIFICATION	i18n[laf.themePacLoc=Theme Pack Directory:]
WITHOUT_CLASSIFICATION	Put all available "Look and Feel" objects into collections keyed by LAF name and by the class name.
WITHOUT_CLASSIFICATION	Add the names of all LAF objects to control. By doing thru the Map these will be sorted.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.title=SybaseASE]
WITHOUT_CLASSIFICATION	i18n[mmsql.catalogErr=The DBNAME of the session's URL is set to '{0}', but the session's current catalog is set to '{1}'.\n\nSQL Server doesn't support this in most cases. This is a current issue.]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.hint=Preferences for SybaseASE]
WITHOUT_CLASSIFICATION	fApplication.addApplicationListener(applicationAdapter); fApplication.addPreferencesMenuItem(); fApplication.setEnabledPreferencesMenu(true);
WITHOUT_CLASSIFICATION	fine, don't add any data files. throw new WrappedSQLException(ex);
WITHOUT_CLASSIFICATION	fine, don't show any indexes. throw new WrappedSQLException(ex);
WITHOUT_CLASSIFICATION	because of the cross-catalog problem, let's not invoke this if the current catalog isn't equal to the catalog specified in the URL.
WITHOUT_CLASSIFICATION	there's a DBNAME specified, so make sure it matches the current catalog.
WITHOUT_CLASSIFICATION	i18n[mmsql.sqlScripts=SQL Scripts]
WITHOUT_CLASSIFICATION	TABLE NAME COLUMN NAME COLUMN SIZE COLUMN SIZE
WITHOUT_CLASSIFICATION	this is a UDF, not a stored procedure.
WITHOUT_CLASSIFICATION	since .execute() returned true, the first result is a ResultSet.
WITHOUT_CLASSIFICATION	Get the names of all the selected tables in a comma separated list,
WITHOUT_CLASSIFICATION	NOTE: a procedure may also be a UDF!
WITHOUT_CLASSIFICATION	the constructor above sets this from resources, but we'll override it with the name of the database file and its size.
WITHOUT_CLASSIFICATION	i18n[mssql.toScript=Objects to script:]
WITHOUT_CLASSIFICATION	i18n[mssql.foematting=Formatting]
WITHOUT_CLASSIFICATION	the constructor above sets this from resources, but we'll override it with the name of the index.
WITHOUT_CLASSIFICATION	by default, it is not running.
WITHOUT_CLASSIFICATION	create the timer, but DO NOT start it.
WITHOUT_CLASSIFICATION	don't bother changing the delay, but stop it if it's running.
WITHOUT_CLASSIFICATION	change the delay, and start it if it was stopped.
WITHOUT_CLASSIFICATION	i18n[mssql.remove_Mnemonic=R]
WITHOUT_CLASSIFICATION	i18n[mssql.objectsToBeScripted=Objects to be scripted]
WITHOUT_CLASSIFICATION	i18n[mssql.allUserDef=All user-defined data types]
WITHOUT_CLASSIFICATION	add the tables.
WITHOUT_CLASSIFICATION	Component glue = Box.createGlue(); c.gridx = 1; c.gridy = 10; gridBag.setConstraints(glue, c); panel.add(glue);
WITHOUT_CLASSIFICATION	don't increment i if you're removing something; otherwise, you'd skip the next item.
WITHOUT_CLASSIFICATION	we must iterate through this in descending order to avoid removing, say, item #2, making item #4 into item #3, inadvertently removing item #5.
WITHOUT_CLASSIFICATION	add the procedures.
WITHOUT_CLASSIFICATION	add the views.
WITHOUT_CLASSIFICATION	i18n[mssql.generateDrop=Generate the DROP <object> command for each object]
WITHOUT_CLASSIFICATION	i18n[mssql.generateDependend=Generate scripts for all dependent objects]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	add the UDTs.
WITHOUT_CLASSIFICATION	IProcedureInfo[] procs = metaData.getProcedures(catalog,null,null);
WITHOUT_CLASSIFICATION	i18n[mssql.scriptTemplate=Script template]
WITHOUT_CLASSIFICATION	i18n[mssql.only70compatible=Only script 7.0 compatible features]
WITHOUT_CLASSIFICATION	--- SECURITY PANEL ----------------------------------------------
WITHOUT_CLASSIFICATION	i18n[mssql.scriptLogins=Script SQL Server logins (Windows and SQL Server logins)]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptingOptions=Table Scripting Options]
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------
WITHOUT_CLASSIFICATION	--- TABLE SCRIPTING PANEL ----------------------------------------------
WITHOUT_CLASSIFICATION	i18n[mssql.scriptIndexses=Script indexes]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptFullText=Script full-text indexes]
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------
WITHOUT_CLASSIFICATION	i18n[mssql.fileFormat=File Format]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------
WITHOUT_CLASSIFICATION	--- TABLE SCRIPTING PANEL ----------------------------------------------
WITHOUT_CLASSIFICATION	the columns in the referenced table
WITHOUT_CLASSIFICATION	keep scanning until we're either EOL or find a different filegroup.
WITHOUT_CLASSIFICATION	this works because all the IDatabaseObjectInfo objects come from the same source, so their references are equal.
WITHOUT_CLASSIFICATION	not so simple -- we want to keep the filegroups together.
WITHOUT_CLASSIFICATION	if we're still in this function, just add it at the end.
WITHOUT_CLASSIFICATION	j is the index of the first file in the next filegroup.
WITHOUT_CLASSIFICATION	chop off "DEFAULT on column ";
WITHOUT_CLASSIFICATION	chop off "CHECK on column ";
WITHOUT_CLASSIFICATION	NOTE: there are two rows. NOTE: MssqlConstraint holds the columns in the table participating in the key. NOTE: ForeignKeyConstraint holds the columns in the referenced table IN THE SAME ORDER.
WITHOUT_CLASSIFICATION	constraintKeys looks like this --> `REFERENCES pubs.dbo.foo (fooid, quuxid)' chop off "REFERENCES "
WITHOUT_CLASSIFICATION	now tableAndColumns[0] contains the table name and tableAndColumns[1] contains the bracketed list of columns.
WITHOUT_CLASSIFICATION	probably just no results -- return it empty.
WITHOUT_CLASSIFICATION	if it's PRIMARY, just write it without the FILEGROUP prefix.
WITHOUT_CLASSIFICATION	no indexes, i guess.
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	`clustered, unique, primary key located on PRIMARY'
WITHOUT_CLASSIFICATION	no triggers, i guess.
WITHOUT_CLASSIFICATION	no permissions, i guess.
WITHOUT_CLASSIFICATION	Owner Object Grantee Grantor ProtectType Action Column ------ ---------------------- ------------------ ------- ----------- ------ ------------------ dbo billing_bak public dbo Grant Delete .dbo billing_bak public dbo Grant Insert .dbo billing_bak public dbo Grant Select (All+New)dbo billing_bak public dbo Grant Update (All+New)dbo billing_bak usbilling dbo Deny Insert .
WITHOUT_CLASSIFICATION	i18n[mysql.createTableBtn=Create table]
WITHOUT_CLASSIFICATION	since .execute() returned true, the first result is a ResultSet.
WITHOUT_CLASSIFICATION	Name Owner Type Created_datetime --------------------------------------------------------- billing dbo user table 2004-03-08 10:41:05.030
WITHOUT_CLASSIFICATION	Column_name Type Computed Length Prec Scale Nullable TrimTrailingBlanks FixedLenNullInSource Collation ------------------------------------------------------------------------------------------------------------------------------------------------------- Location char no 2 yes no yes Latin1_General_CI_AS TotalBilledAmnt money no 8 19 4 yes (n/a) (n/a) NULL
WITHOUT_CLASSIFICATION	length
WITHOUT_CLASSIFICATION	collation
WITHOUT_CLASSIFICATION	there can be only one default in truth, but the model allows more than one.
WITHOUT_CLASSIFICATION	there can be only one PK in truth, but the model allows more than one.
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.title=MySQL]
WITHOUT_CLASSIFICATION	Tabs to add to the database node.
WITHOUT_CLASSIFICATION	add users to the role.
WITHOUT_CLASSIFICATION	stored procedures and functions have that dangling ;version thing.
WITHOUT_CLASSIFICATION	one column for the object name, another column for the object's owner.
WITHOUT_CLASSIFICATION	public boolean isCellEditable(int rowIndex, int columnIndex) { return (columnIndex == 0); }
WITHOUT_CLASSIFICATION	coll.add(new CreateTableAction(app, _resources, this));
WITHOUT_CLASSIFICATION	Show users in the object tee.
WITHOUT_CLASSIFICATION	Tabs to add to the catalog nodes.
WITHOUT_CLASSIFICATION	Tabs to add to the table nodes.
WITHOUT_CLASSIFICATION	Tabs to add to the user nodes.
WITHOUT_CLASSIFICATION	Options in popup menu.
WITHOUT_CLASSIFICATION	Tab to add to view nodes.
WITHOUT_CLASSIFICATION	Show triggers for tables
WITHOUT_CLASSIFICATION	_resources.addToMenu(coll.get(CreateTableAction.class), mysqlMenu);
WITHOUT_CLASSIFICATION	_resources.addToMenu(coll.get(DropDatabaseAction.class), mysqlMenu);
WITHOUT_CLASSIFICATION	tabs for triggers
WITHOUT_CLASSIFICATION	i18n[mysql.copyOk=Ok]
WITHOUT_CLASSIFICATION	i18n[mysql.sureDropping=Are you sure?]
WITHOUT_CLASSIFICATION	Execute the SQL command in the SQL tab and then display the SQL tab.
WITHOUT_CLASSIFICATION	private Object[] fields;
WITHOUT_CLASSIFICATION	private JCheckBox[] chFields;
WITHOUT_CLASSIFICATION	DefaultListModel listModel = (DefaultListModel) listFields.getModel();
WITHOUT_CLASSIFICATION	chFields = new JCheckBox[colNames.length];
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(CopyTableCommand.class);
WITHOUT_CLASSIFICATION	Set the boolean value when the user selects b/w structure and data
WITHOUT_CLASSIFICATION	Set the list disabled if allfields of table are to be copied
WITHOUT_CLASSIFICATION	i18n[mysql.createTableComm=Create Table...]
WITHOUT_CLASSIFICATION	i18n[mysql.createAdd=Add]
WITHOUT_CLASSIFICATION	i18n[mysql.lengtSet=Length/Set]
WITHOUT_CLASSIFICATION	private DBUtils dbUtils;
WITHOUT_CLASSIFICATION	i18n[mysql.msgTableCreated=Table {0} created]
WITHOUT_CLASSIFICATION	i18n[mysql.btCancel=Cancel]
WITHOUT_CLASSIFICATION	Set the attributes for the fields in the class FieldDetails
WITHOUT_CLASSIFICATION	Display the field attributes when selected in the list
WITHOUT_CLASSIFICATION	Reset the checkbox selected index false when fieldname gains focus
WITHOUT_CLASSIFICATION	Remove the Fields added to the list
WITHOUT_CLASSIFICATION	Logger for this class. private final static ILogger s_log = LoggerController.createLogger(AlterTableCommand.class);
WITHOUT_CLASSIFICATION	initComponents();
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Action performed for the cancel button private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) { _dlog.setVisible(false); _dlog.dispose(); }
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	private void closeDialog(java.awt.event.WindowEvent evt) { _dlog.setVisible(false); _dlog.dispose(); }
WITHOUT_CLASSIFICATION	i18n[sessionscript.Save=Save]
WITHOUT_CLASSIFICATION	Execute the SQL command in the SQL tab and then display the SQL tab.
WITHOUT_CLASSIFICATION	Get the names of all the selected tables in a comma separated list,
WITHOUT_CLASSIFICATION	Remove trailing ","
WITHOUT_CLASSIFICATION	private static ILogger s_log = LoggerController.createLogger(SessionExpander.class);
WITHOUT_CLASSIFICATION	Users.
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(AlterTableDialog.class);
WITHOUT_CLASSIFICATION	i18n[mysql.alterDlgAlter=Alter]
WITHOUT_CLASSIFICATION	i18n[mysql.alterDlgClose=Close]
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(AlterColumnsPanelBuilder.class);
WITHOUT_CLASSIFICATION	selectedIndex = cbFieldName.getSelectedIndex(); DefaultComboBoxModel comboModel = (DefaultComboBoxModel) cbFieldName.getModel(); FieldDetails fd = (FieldDetails) comboModel.getElementAt(selectedIndex); cbFieldName.setSelectedItem(fd.getFieldName()); cbFieldType.setSelectedItem(fd.getFieldType()); tfFieldDefault.setText(fd.getDefault()); chAutoIncrement.setSelected(fd.IsAutoIncrement()); chNotNull.setSelected(fd.IsNotNull());
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[mysql.displayStatus=(MySQL) Display database status]
WITHOUT_CLASSIFICATION	i18n[mysql.status=MySQL Status]
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(DatabaseStatusTab.class);
WITHOUT_CLASSIFICATION	i18n[mysql.displayOpenTables=(MySQL) Display open tables]
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(ProcessesTab.class);
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(OpenTablesTab.class);
WITHOUT_CLASSIFICATION	i18n[mysql.variables=MySQL Variables]
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(ShowMasterLogsTab.class);
WITHOUT_CLASSIFICATION	i18n[MysqlTriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	MySQL allows statement separators in procedure blocks. The process of tokenizing above renders these procedure blocks as separate statements, which are not valid to be executed separately. Here, we re-assemble any create procedure/function/trigger statements that we find using the beginning procedure block pattern and the procedure separator.
WITHOUT_CLASSIFICATION	Stray sep - or we failed to find pattern
WITHOUT_CLASSIFICATION	To get the TableInfo for the selected object in the tree
WITHOUT_CLASSIFICATION	Get all the data types available
WITHOUT_CLASSIFICATION	We got to the end of the script without finding a proc separator. Just add it as if we had.
WITHOUT_CLASSIFICATION	DELIMITER sets the separator that tells us when a procedure. This is MySQL-specific
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.All=Allow all Schemas]
WITHOUT_CLASSIFICATION	i18n[OraclePlugin.title=Oracle]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Expanders.
WITHOUT_CLASSIFICATION	This fixes the issue where the tree is getting constructed prior to the Oracle plugin expanders being registered.(USERS, SESSIONS, INSTANCES nodes have no children until the tree is refreshed). Even though this is a hack, it doesn't seem to negatively impact performance even when loading all schemas.
WITHOUT_CLASSIFICATION	Register custom DataTypeComponent factory for Oracles XMLType
WITHOUT_CLASSIFICATION	Not all Oracle's, just 10g and above.
WITHOUT_CLASSIFICATION	i18n[oracle.displayOptions=Display database options]
WITHOUT_CLASSIFICATION	i18n[oracle.secons3=(seconds)]
WITHOUT_CLASSIFICATION	Create checkbox for enabling auto refresh i18n[oracle.enableAutoRefresh=Enable auto refresh]
WITHOUT_CLASSIFICATION	i18n[oracle.options=Options]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[oracle.refreshSecons=(seconds)]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	I18n[oracle.infoTitle=Oracle Session info for: {0}]
WITHOUT_CLASSIFICATION	I18n[oracle.sgaTitle=Oracle SGA trace for: {0}]
WITHOUT_CLASSIFICATION	Needs to be done in both cases because if the window goes back to the default layer it goes back behind all other windows too.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Nil out the timer so that it can be gc'd
WITHOUT_CLASSIFICATION	Create spinner for update period
WITHOUT_CLASSIFICATION	Create spinner for update period
WITHOUT_CLASSIFICATION	Only resize once.
WITHOUT_CLASSIFICATION	JMH Remove the current sql text. Create a tabbed pane for session details (including sql text)
WITHOUT_CLASSIFICATION	i18n[oracle.displaySessionDetails=Display session details]
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	At the moment, no default value
WITHOUT_CLASSIFICATION	Stray sep - or we failed to find pattern
WITHOUT_CLASSIFICATION	Oracle allows statement separators in PL/SQL blocks. The process of tokenizing above renders these procedure blocks as separate statements, which is invalid for Oracle. Since "/" is the way in SQL-Plus to denote the end of a procedure or function, we re-assemble any create procedure/function/trigger statements that we find. This should be done before expanding file includes. Otherwise, any create sql found in files will already be joined, causing this to find create SQL without matching "/". The process of expanding 'file includes' already joins the sql fragments that it finds.
WITHOUT_CLASSIFICATION	JMH: For additional performance we could utilise the fixed_table_sequence column from the session, to investigate which rows need to be updated on a refresh See V$SESSION doco for more info.
WITHOUT_CLASSIFICATION	This seems to work for both Oracle 9i and 10g
WITHOUT_CLASSIFICATION	Since it is likely to have "/" on it's own line, and it is key to letting us know that proceeding statements form a multi-statement procedure or function, it deserves it's own place in the _queries arraylist. If it is followed by other procedure or function creation blocks, we may fail to detect that, so this just goes through the list and breaks apart statements on newline so that this cannot happen.
WITHOUT_CLASSIFICATION	Below is equivalent to the following: stringValueResult = xmlType.getStringVal();
WITHOUT_CLASSIFICATION	For Oracle 10g we could say something like : "where XMLSERIALIZE(CONTENT " + _colDef.getLabel() +") like '<value>'" This doesn't appear to work on Oracle 9i at the moment, so we will avoid using this column in any where clause if the value is non-null, which is what the superclass implementation does. TODO: Find a way to do this for both versions or split this behavior so that it works on 10g and is disabled on 9i.
WITHOUT_CLASSIFICATION	Below is equivalent to the following: stringValueResult = xmlType.getStringVal();
WITHOUT_CLASSIFICATION	Below is equivalent to the following: xmlType = XMLType.createXML(o);
WITHOUT_CLASSIFICATION	Throws an exception claiming that 2007 isn't a valid type - go figure. pstmt.setNull(position, _colDef.getSqlType());
WITHOUT_CLASSIFICATION	now bind the string..
WITHOUT_CLASSIFICATION	Both of these throw an exception claiming that it got a clob and expected a number (inconsistent data types): pstmt.setClob(position, null); pstmt.setNull(position, java.sql.Types.CLOB);
WITHOUT_CLASSIFICATION	At the moment, no default value
WITHOUT_CLASSIFICATION	At the moment, no default value
WITHOUT_CLASSIFICATION	View Tab
WITHOUT_CLASSIFICATION	Index tab
WITHOUT_CLASSIFICATION	Trigger tabs
WITHOUT_CLASSIFICATION	Sequence tabs
WITHOUT_CLASSIFICATION	ANALYZE Checkbox
WITHOUT_CLASSIFICATION	Plugin supports only the main session window
WITHOUT_CLASSIFICATION	extractors
WITHOUT_CLASSIFICATION	Object Tree Expanders Schema Expanders - sequence
WITHOUT_CLASSIFICATION	super.sqlExecutionWarning(warn);
WITHOUT_CLASSIFICATION	Table Expanders - trigger and index expander
WITHOUT_CLASSIFICATION	Detail Tabs Procedure tab
WITHOUT_CLASSIFICATION	ANALYZE Checkbox
WITHOUT_CLASSIFICATION	Lock tab
WITHOUT_CLASSIFICATION	Popup Menus
WITHOUT_CLASSIFICATION	s_log.info("Not all selected objects where tables.");
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	This causes locks own by other pids to be excluded from the result. + " pgl.pid = pg_stat_get_backend_pid(svrid) AND "
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	table list
WITHOUT_CLASSIFICATION	We don't know if this type can be used in where clauses so always exclude it.
WITHOUT_CLASSIFICATION	Options: FULL Checkbox
WITHOUT_CLASSIFICATION	Options: FULL Checkbox
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner Special case: the input is exactly the output
WITHOUT_CLASSIFICATION	fail("Not yet implemented");
WITHOUT_CLASSIFICATION	Stored Procedures can have comments embedded in them, so don't line-wrap them.
WITHOUT_CLASSIFICATION	TABLE TYPE DBO
WITHOUT_CLASSIFICATION	INDEX
WITHOUT_CLASSIFICATION	VIEW TYPE DBO (doesn't exist yet)
WITHOUT_CLASSIFICATION	VIEW
WITHOUT_CLASSIFICATION	SEQUENCE TYPE DBO
WITHOUT_CLASSIFICATION	SEQUENCE
WITHOUT_CLASSIFICATION	It is important to process the name change first - so that we can use the new name instead of the old in subsequent alterations
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	skip comments
WITHOUT_CLASSIFICATION	create new columns in table
WITHOUT_CLASSIFICATION	update <destinationTable> s set destColumn = ( select f.desc_t1 from <fromTable> f where f.myid = s.myid)
WITHOUT_CLASSIFICATION	ArrayList<String> result = new ArrayList<String>();
WITHOUT_CLASSIFICATION	deletes the ", "
WITHOUT_CLASSIFICATION	deletes the ", "
WITHOUT_CLASSIFICATION	Selects the values from the merge table
WITHOUT_CLASSIFICATION	Selects the values for the where part
WITHOUT_CLASSIFICATION	maybe with Inner join better performance
WITHOUT_CLASSIFICATION	Selects the values from the existing table
WITHOUT_CLASSIFICATION	merge columns in a new column
WITHOUT_CLASSIFICATION	merge columns in an existing column
WITHOUT_CLASSIFICATION	add column if neeeded
WITHOUT_CLASSIFICATION	getColumnAddSQL
WITHOUT_CLASSIFICATION	Don't show indexes dialog if only one index exists to be modified
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Only Oracle supports materialized views directly.
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	getColumnAddSQL
WITHOUT_CLASSIFICATION	Show the user a dialog with a list of columns and ask them to select one or more columns to drop
WITHOUT_CLASSIFICATION	Don't show foreignKeys dialog if only one index exists to be modified
WITHOUT_CLASSIFICATION	If the table has only one column, it cannot be dropped
WITHOUT_CLASSIFICATION	Set a default primary key name based on the name of the table
WITHOUT_CLASSIFICATION	Adds a foreign key constraint to the source table.
WITHOUT_CLASSIFICATION	only gives the SQL without the Cascade/Restrict Constraint
WITHOUT_CLASSIFICATION	Here we use index inside of column names so that we don't have to alias the columns in the dialect. Different dialects call these sequence information columns by different names. Just make sure to preserve the order in the dialect. last_value max_value min_value cache_value increment_by is_cycled
WITHOUT_CLASSIFICATION	Show the user a dialog with a list of columns and ask them to select
WITHOUT_CLASSIFICATION	Show the user a dialog with a list of columns and ask them to select
WITHOUT_CLASSIFICATION	If there is only one column in the table,
WITHOUT_CLASSIFICATION	Copys the distinct values from the source column into the lookup table.
WITHOUT_CLASSIFICATION	Creates the lookup table with it's columns (depenting on the mode).
WITHOUT_CLASSIFICATION	getAddForeignKeyConstraintSQL
WITHOUT_CLASSIFICATION	getInsertIntoSQL
WITHOUT_CLASSIFICATION	getColumnNameAlterSQL
WITHOUT_CLASSIFICATION	getUpdateSQL
WITHOUT_CLASSIFICATION	getColumnNullableAlterSQL
WITHOUT_CLASSIFICATION	getColumnDropSQL
WITHOUT_CLASSIFICATION	Add column name to the list
WITHOUT_CLASSIFICATION	No point to ordering less than 2 tables
WITHOUT_CLASSIFICATION	Create the analysis dialog using the EDT, and wait for it to finish.
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	Column
WITHOUT_CLASSIFICATION	A Map for quick lookup later - we want to pass TableColumnInfos to the dialect, not merely column names.
WITHOUT_CLASSIFICATION	new Name of the table
WITHOUT_CLASSIFICATION	There are more dependancies then just FKs (like views, etc.), therefore cascadeConstraints is used as a parameter for the TableDropSQL.
WITHOUT_CLASSIFICATION	local constraint
WITHOUT_CLASSIFICATION	Now, get the drop order (same as delete) and update the dialog status while doing so.
WITHOUT_CLASSIFICATION	view list
WITHOUT_CLASSIFICATION	Foreign Key
WITHOUT_CLASSIFICATION	Table
WITHOUT_CLASSIFICATION	Table
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	Mode
WITHOUT_CLASSIFICATION	Drop Conflicts
WITHOUT_CLASSIFICATION	"fki_" is default startname
WITHOUT_CLASSIFICATION	add to the button group
WITHOUT_CLASSIFICATION	adding all Colums together
WITHOUT_CLASSIFICATION	add to the button group
WITHOUT_CLASSIFICATION	pre-selection
WITHOUT_CLASSIFICATION	pre-selection
WITHOUT_CLASSIFICATION	add to jpanel pane
WITHOUT_CLASSIFICATION	add to the panel - Update
WITHOUT_CLASSIFICATION	add to the panel - Update
WITHOUT_CLASSIFICATION	_columnTab = new MergeColumnDialog.ColumnsTab();
WITHOUT_CLASSIFICATION	private ColumnsTab _columnTab;
WITHOUT_CLASSIFICATION	Increment
WITHOUT_CLASSIFICATION	Name
WITHOUT_CLASSIFICATION	Maximum
WITHOUT_CLASSIFICATION	Last Value
WITHOUT_CLASSIFICATION	Start
WITHOUT_CLASSIFICATION	Minimum
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Table name
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Column 0 Row 0
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	view list
WITHOUT_CLASSIFICATION	Table
WITHOUT_CLASSIFICATION	Column
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	local constraint
WITHOUT_CLASSIFICATION	adding all Colums together
WITHOUT_CLASSIFICATION	labels should stay put, while user-input fields are allowed to grow as the user desires.
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	table list
WITHOUT_CLASSIFICATION	just plain data
WITHOUT_CLASSIFICATION	Cascade Constraints Checkbox
WITHOUT_CLASSIFICATION	Cascade Constraints Checkbox
WITHOUT_CLASSIFICATION	adding all Colums together
WITHOUT_CLASSIFICATION	some data
WITHOUT_CLASSIFICATION	some data
WITHOUT_CLASSIFICATION	All rules passed, so activate the button
WITHOUT_CLASSIFICATION	adding all Colums together
WITHOUT_CLASSIFICATION	if the check gets till here we have all the needed information
WITHOUT_CLASSIFICATION	all tables except the merge into table
WITHOUT_CLASSIFICATION	all local and columns for the other tables..
WITHOUT_CLASSIFICATION	Column list
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noDeleteSelection=Please select the bookmark to delete]
WITHOUT_CLASSIFICATION	i18n[sessionscript.startupScripts=Startup Scripts]
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible Logger for this class
WITHOUT_CLASSIFICATION	sheet types
WITHOUT_CLASSIFICATION	Add context menu items to the object tree's session node. as popup menu
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	line separator for easy using ;-)
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	This should never happen as we check above for the duplicate.
WITHOUT_CLASSIFICATION	IApplication application = getApplication(); application.addToMenu(IMenuIDs.PLUGINS_MENU, getSmarttoolsMenu(getApplication(), null, false));
WITHOUT_CLASSIFICATION	private final int TABLE_COL_DATATYPE = 3; not used
WITHOUT_CLASSIFICATION	tblResult.setAutoCreateRowSorter(true);
WITHOUT_CLASSIFICATION	Global misc
WITHOUT_CLASSIFICATION	Global errors
WITHOUT_CLASSIFICATION	Misc
WITHOUT_CLASSIFICATION	Entries
WITHOUT_CLASSIFICATION	Tooltips
WITHOUT_CLASSIFICATION	Info
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Thread SEARCHING ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	ThreadSearching
WITHOUT_CLASSIFICATION	init progressbar
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noEditSelection=Please select the bookmark to edit]
WITHOUT_CLASSIFICATION	i18n.LBL_TITLE_USED_TABLES);
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Tooltips and questions
WITHOUT_CLASSIFICATION	Tooltips and questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Global misc
WITHOUT_CLASSIFICATION	Global misc
WITHOUT_CLASSIFICATION	Tooltips
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Table classes ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Infos
WITHOUT_CLASSIFICATION	Infos
WITHOUT_CLASSIFICATION	Infos
WITHOUT_CLASSIFICATION	create a new bookmark manager
WITHOUT_CLASSIFICATION	rebuild the bookmark menu.
WITHOUT_CLASSIFICATION	this gets called before initialize()
WITHOUT_CLASSIFICATION	i18n[sqlparam.inputParameterValues=Please input the parameter values]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.prefOk=OK]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.squirrelMarksInPopup=Show SQuirreL bookmarks in ctrl+j popup]
WITHOUT_CLASSIFICATION	i18n[sqlparam.valueFor=Value for {0}]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.script=Script:]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noAdd=No text to be added.]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	this gets called before initialize()
WITHOUT_CLASSIFICATION	Load resources such as menu items, etc...
WITHOUT_CLASSIFICATION	Load resources such as menu items, etc...
WITHOUT_CLASSIFICATION	log.info("SQL executed: " + sql);
WITHOUT_CLASSIFICATION	private static final String PREFS_FILE_NAME = "sqlparamprefs.xml";
WITHOUT_CLASSIFICATION	Nothing to do if object tree is opened.
WITHOUT_CLASSIFICATION	log.info("SQL starting to execute: " + sql);
WITHOUT_CLASSIFICATION	Flag indicates changing in textarea
WITHOUT_CLASSIFICATION	Keylistener to indicate changing of text
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Column 0 Row 0
WITHOUT_CLASSIFICATION	Here we do the Replacement
WITHOUT_CLASSIFICATION	old version before multible sesssion windows return session.getSQLPanelAPI(plugin);
WITHOUT_CLASSIFICATION	old version return session.getObjectTreeAPI(sqlScriptPlugin);
WITHOUT_CLASSIFICATION	Move over leading whitespaces
WITHOUT_CLASSIFICATION	Some databases cannot order by LONG/LOB columns.
WITHOUT_CLASSIFICATION	IObjectTreeAPI api = _session.getObjectTreeAPI(_plugin);
WITHOUT_CLASSIFICATION	Just a helper to make the fromResultSet ? ... below look nicer.
WITHOUT_CLASSIFICATION	PostgreSQL uses literal values true/false instead of 1/0.
WITHOUT_CLASSIFICATION	Version This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	PostgreSQL uses literal values true/false instead of 1/0.
WITHOUT_CLASSIFICATION	Types.CHAR, Types.VARCHAR, Types.LONGVARCHAR, Types.BINARY, Types.VARBINARY Types.LONGVARBINARY Types.NULL Types.JAVA_OBJECT Types.DISTINCT Types.ARRAY Types.BLOB Types.CLOB Types.REF Types.DATALINK
WITHOUT_CLASSIFICATION	delete last ','
WITHOUT_CLASSIFICATION	close it.
WITHOUT_CLASSIFICATION	As in java.sql.Types
WITHOUT_CLASSIFICATION	This method makes the web service call If you want to you can create a web service proxy from the WSDL file, 9 times out of 10, that's what you really want to do.
WITHOUT_CLASSIFICATION	Set the target server and name space
WITHOUT_CLASSIFICATION	Set the target server and name space
WITHOUT_CLASSIFICATION	Add the parameter names and types Use the session Id you got from the openSession call here
WITHOUT_CLASSIFICATION	Use the session key you got from the openSession call here
WITHOUT_CLASSIFICATION	The SQL statement to be validated against the standard
WITHOUT_CLASSIFICATION	The format of the result. This must be "text" or "html". Hopefully some type of XML format will be available as well
WITHOUT_CLASSIFICATION	QName l_qn = new QName( "http:sqlvalidator.mimer.com/v1", "ValidatorResult" );
WITHOUT_CLASSIFICATION	Set the return type
WITHOUT_CLASSIFICATION	Set the return type
WITHOUT_CLASSIFICATION	Supply the user name. If you use anonymous you will be logged in and the pw will be ignored
WITHOUT_CLASSIFICATION	The pw. If user name is anonymous this can be anything. But it has to be supplied anyway.
WITHOUT_CLASSIFICATION	And the version of the calling program. This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The target DBMS, could be Mimer SQL Engine, Oracle, ... This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	fail("Not yet implemented");
WITHOUT_CLASSIFICATION	QName l_qn = new QName( "http:sqlvalidator.mimer.com/v1", "SessionData" );
WITHOUT_CLASSIFICATION	Create self and
WITHOUT_CLASSIFICATION	make a few calls
WITHOUT_CLASSIFICATION	The pw. If user name is anonymous this can be anything. But it has to be supplied anyway.
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	Set the target server and name space
WITHOUT_CLASSIFICATION	Set the target server and name space
WITHOUT_CLASSIFICATION	Use the session key you got from the openSession call here
WITHOUT_CLASSIFICATION	The SQL statement to be validated against the standard
WITHOUT_CLASSIFICATION	The format of the result. This must be "text" or "html". Hopefully some type of XML format will be available as well
WITHOUT_CLASSIFICATION	Set the return type
WITHOUT_CLASSIFICATION	The connection Technology used, could be ODBC, JDBC, ADO This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The version of the target DBMS This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	For testing on the local machine URL l_url = new URL("http:localhost:8081/services");
WITHOUT_CLASSIFICATION	Parameters for call.
WITHOUT_CLASSIFICATION	Version This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	For testing on the live server URL l_url = new URL("http:sqlvalidator.mimer.com/beta2/services");
WITHOUT_CLASSIFICATION	Set this to 1 if your application is interactive where the user enters queries and then runs them Set it to 2 if it is non interactive, such as for instance a JDBC Bridge driver that intercepts SQL
WITHOUT_CLASSIFICATION	Execute validator and return results.
WITHOUT_CLASSIFICATION	Set the url for subsequent calls This is to allow for load balancing to a server on the other side of the world
WITHOUT_CLASSIFICATION	Close existing session.
WITHOUT_CLASSIFICATION	Current version of the validator webservice cannot handle anything greater than 30.
WITHOUT_CLASSIFICATION	Connect.
WITHOUT_CLASSIFICATION	Add menu.
WITHOUT_CLASSIFICATION	Supply the user name. If you use anonymous you will be logged in and the pw will be ignored
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Add context menu items to the object tree's view and procedure nodes.
WITHOUT_CLASSIFICATION	Set the return type
WITHOUT_CLASSIFICATION	The name of the calling client program. This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	And the version of the calling program. This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The target DBMS, could be Mimer SQL Engine, Oracle, ... This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The version of the target DBMS This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The connection Technology used, could be ODBC, JDBC, ADO This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	Set this to 1 if your application is interactive where the user enters queries and then runs them Set it to 2 if it is non interactive, such as for instance a JDBC Bridge driver that intercepts SQL
WITHOUT_CLASSIFICATION	Add a new formatter for Sybase-Errors/Warnings
WITHOUT_CLASSIFICATION	Open the session.
WITHOUT_CLASSIFICATION	Open connection to the webservice.
WITHOUT_CLASSIFICATION	1 = interactive, 0 = batch
WITHOUT_CLASSIFICATION	/ SybaseASE specific code to read procedure definitions.
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	otApi.addDetailTab(DatabaseObjectType.INDEX, new IndexDetailsTab());
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	/ Sybase ASE specific code to read view definitions.
WITHOUT_CLASSIFICATION	private boolean _blockCaretEnabled = false;
WITHOUT_CLASSIFICATION	trigger source "SELECT text " + "FROM dbo.sysobjects " + "inner join syscomments on syscomments.id = sysobjects.id " + "where loginame = ? " + "and name = ? " + "and type = 'TR' ";
WITHOUT_CLASSIFICATION	Only reformat SQLWarning:
WITHOUT_CLASSIFICATION	private boolean _showEndOfLineMarkers = false;
WITHOUT_CLASSIFICATION	private boolean _blinkCaret = true;
WITHOUT_CLASSIFICATION	private boolean _bracketHighlighting = true;
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	String CURRENT_LINE_HIGHLIGHTING = "currentLineHighlighting"; String CURRENT_LINE_HIGHLIGHT_COLOR = "currentLineHighlightColor";
WITHOUT_CLASSIFICATION	final TextAreaDefaults dfts = TextAreaDefaults.getDefaults(); _columnStyle = dfts.styles[Token.COLUMN]; _commentStyle = dfts.styles[Token.COMMENT1]; _keyword1Style = dfts.styles[Token.KEYWORD]; _keyword2Style = dfts.styles[Token.DATA_TYPE]; _keyword3Style = dfts.styles[Token.FUNCTION]; _labelStyle = dfts.styles[Token.LABEL]; _literalStyle = dfts.styles[Token.LITERAL1]; _operatorStyle = dfts.styles[Token.OPERATOR]; _otherStyle = dfts.styles[Token.NULL]; _tableStyle = dfts.styles[Token.TABLE];
WITHOUT_CLASSIFICATION	String EOL_MARKERS = "eolMarkers"; String EOL_MARKER_COLOR = "eolMarkerColor";
WITHOUT_CLASSIFICATION	String LINE_NUMBER_COLOR = "lineNumberColor"; String SELECTION_COLOR = "selectionColor"; String SHOW_LINE_NBRS = "showLineNumbers";
WITHOUT_CLASSIFICATION	Note: SessionInternalFrame and SQLinternalFrame should never provide a ToolsPopupAccessor. Their Tools Popup ist configured in the SyntaxPlugin class with standard Actions from ActionCollection.
WITHOUT_CLASSIFICATION	private boolean _currentLineHighlighting = true;
WITHOUT_CLASSIFICATION	i8n[syntax.abrevNewLineNote=Use \n in corrections for line break. Note: Bookmarks are more powerful than abreviations.]
WITHOUT_CLASSIFICATION	private boolean _showLineNumbers = false;
WITHOUT_CLASSIFICATION	private int _caretRGB = Color.red.getRGB(); private int _selectionRGB = 0xccccff; private int _lineHighlightRGB = Color.lightGray.getRGB(); private int _eolMarkerRGB = 0x009999; private int _bracketHighlightRGB = Color.black.getRGB(); private int _lineNumberRGB = Color.black.getRGB();
WITHOUT_CLASSIFICATION	Create the actual panel that will be displayed in dialog.
WITHOUT_CLASSIFICATION	Navy.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	One may ask why we don't register the key strokes permanently. When we did so with two internal frames open, the key stroke event sometimes went to the wrong frame. This doesn't happen if we procede like we do. The question is, why?
WITHOUT_CLASSIFICATION	Install the factory for creating SQL entry text controls.
WITHOUT_CLASSIFICATION	_sqlEntryFactoryProxy = new OsterSQLEntryAreaFactory(this, originalFactory);
WITHOUT_CLASSIFICATION	Not the Textcontrol itself changed but some other of the Syntax Preferences, for example a color. So we tell the current control to update the preferences.
WITHOUT_CLASSIFICATION	We don't support switching the entry control during a sessionbecause serveral things, that are attached to the entry controlfrom outside this plugin would need to reinitialze too.For example code completion and edit extras.synchronized (_session){ISQLEntryPanelFactory factory = _plugin.getSQLEntryAreaFactory();ISQLEntryPanel pnl = factory.createSQLEntryPanel(_session);_session.getSQLPanelAPI(_plugin).installSQLEntryPanel(pnl);}
WITHOUT_CLASSIFICATION	_knownTables is just a cache to prevent creating a new String each time
WITHOUT_CLASSIFICATION	no new here, method is called very often.
WITHOUT_CLASSIFICATION	Suppress warnings for issues that are present in this old release of NetBeans editor libraries we are using.
WITHOUT_CLASSIFICATION	Update java colorings
WITHOUT_CLASSIFICATION	List of the additional colorings
WITHOUT_CLASSIFICATION	ExtCaret highlighting options
WITHOUT_CLASSIFICATION	ExtCaret highlighting colorings
WITHOUT_CLASSIFICATION	Formatting settings
WITHOUT_CLASSIFICATION	new MultiKeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, MENU_MASK), ExtKit.matchBraceAction), new MultiKeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, MENU_MASK | InputEvent.SHIFT_MASK), ExtKit.selectionMatchBraceAction), new MultiKeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_F10, InputEvent.SHIFT_MASK), ExtKit.showPopupMenuAction),
WITHOUT_CLASSIFICATION	new MultiKeyBinding( KeyStroke.getKeyStroke(KeyEvent.VK_D, InputEvent.CTRL_MASK), SQLKit.duplicateLineAction),
WITHOUT_CLASSIFICATION	DialogSupport.setDialogFactory(new NbDialogSupport());
WITHOUT_CLASSIFICATION	Once and again the Netbeans editor calls createSyntax() after sessionEnding() was called. Then sess is null and the code below would break.
WITHOUT_CLASSIFICATION	The ctrl enter short cut in the Netbeans editor is set in org.netbeans.editor.ext.BaseKit to the org.netbeans.editor.ext.BaseKit.SplitLineAction. Since the ctrl enter shorcut is a basic SQuirreL short cut and is defined via the main menu action we must remove this binding here.
WITHOUT_CLASSIFICATION	Removed for the SQLBookmark Plugin
WITHOUT_CLASSIFICATION	Removed for the tools popup
WITHOUT_CLASSIFICATION	Reasons for this code mailed to Rob by Gerd on 9/20/2008. the Problem are methods like BaseSQLEntryPanel.getBoundsOfSQLToBeExecuted() BaseSQLEntryPanel.moveCaretToPreviousSQLBegin() They rely on the line break being a single char. Also I suppose some of our code generation (scripting) functions do the same. At least I'm pretty sure if \r\n would be preserved they could produce a mixture of \n and \r\n.
WITHOUT_CLASSIFICATION	I thought this prevented GC. It doesn't But if two Sessions are open and one is closed the one left open looses key bindings. For example the Arrow navigation keys. getKeymap().removeBindings();
WITHOUT_CLASSIFICATION	The SQLSettingsInitializer added above holds a reference to the SyntaxPreferences of the current Session which itself holds a reference to the Session. We remove the SQLSettingsInitializer to give the Session the chance to get Garbage Collected.
WITHOUT_CLASSIFICATION	Internal states inside white space inside line comment inside block comment ... inside string constant inside string constant after backslash inside char constant inside char constant after backslash inside identifier slash char after '=' after '>' after '>>' after '>>>' after '<' after '<<' after '+' after '-' after '' after '' after '|' after '%' after '&' after '^' after '!' after '0' integer number octal number double number double number hex number after '.'
WITHOUT_CLASSIFICATION	With an hanging SessionListener a Session nvere gets Garbage Collected.
WITHOUT_CLASSIFICATION	Example: ALTER TABLE kvpos ADD CONSTRAINT kv_kvpos FOREIGN KEY (kvid) kv(kvid) -------------------------------------------------------------^ ("References" expected) kv will not be marked with the condition above, because errInf.endPos <= absolutePosition + len is never true.
WITHOUT_CLASSIFICATION	public static final String duplicateLineAction = "duplicate-line-action";
WITHOUT_CLASSIFICATION	At this stage there's no more text in the scanned buffer, but this buffer is not the last so the scan will continue on another buffer. The scanner tries to minimize the amount of characters that will be prescanned in the next buffer by returning the token where possible.
WITHOUT_CLASSIFICATION	protected Action[] createActions() { Action[] javaActions = new Action[] { new NetbeansDuplicateLineAction(), }; return TextAction.augmentList(super.createActions(), javaActions); }
WITHOUT_CLASSIFICATION	/ This formula can be found in the API Doc for methode relocate() of class org.netbeans.editor.Syntax. See the description of the last parameter 'stopPosition'. relocate() is always called before the parseTocken() method of this class.
WITHOUT_CLASSIFICATION	nothing found
WITHOUT_CLASSIFICATION	GridLayout makes equal cells
WITHOUT_CLASSIFICATION	ISession[] activeSessions = _plugin.getApplication().getSessionManager().getActiveSessions();
WITHOUT_CLASSIFICATION	Data type keyword numeric-ids
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	create the dialog with given content
WITHOUT_CLASSIFICATION	redirect the Esc key to Cancel button
WITHOUT_CLASSIFICATION	Add the buttons to it
WITHOUT_CLASSIFICATION	this didn't work final int pos = getCaretPosition(); final Document doc = _textArea.getStyledDocument(); final Element docElem = doc.getDefaultRootElement(); final Element lineElem = docElem.getElement(getCaretLineNumber()); return lineElem.getElementIndex(pos);
WITHOUT_CLASSIFICATION	add listener to buttons
WITHOUT_CLASSIFICATION	listen on windowClosing and redirect it to Cancel button
WITHOUT_CLASSIFICATION	register the default button, if available
WITHOUT_CLASSIFICATION	Void type keyword numeric-id
WITHOUT_CLASSIFICATION	register the cancel button helpers, if available
WITHOUT_CLASSIFICATION	See SQLSettingsInitializer to find out how fonts are handled in the Netbeans editor. _textArea.setFont(font);
WITHOUT_CLASSIFICATION	Token category-ids
WITHOUT_CLASSIFICATION	Other keywords numeric-ids
WITHOUT_CLASSIFICATION	Numeric-ids for token-ids
WITHOUT_CLASSIFICATION	Operator numeric-ids = < > << >> >>> + - / & | ^ % ! ~ == <= >= <<= >>= >>>= += -= = /= &= |= ^= %= != . , : ; ? ( ) [ ] { } ++ -- && ||
WITHOUT_CLASSIFICATION	Incomplete tokens
WITHOUT_CLASSIFICATION	JDK1.5 vararg's "..."
WITHOUT_CLASSIFICATION	Token-categories
WITHOUT_CLASSIFICATION	Token-ids
WITHOUT_CLASSIFICATION	Operators
WITHOUT_CLASSIFICATION	Data types
WITHOUT_CLASSIFICATION	Void type
WITHOUT_CLASSIFICATION	Rest of the keywords
WITHOUT_CLASSIFICATION	JDK1.5 vararg's "..."
WITHOUT_CLASSIFICATION	Incomplete and error token-ids
WITHOUT_CLASSIFICATION	Context instance declaration
WITHOUT_CLASSIFICATION	case SQLTokenContext.ANNOTATION_ID: JDK 1.5 annotations return new Coloring(null, new Color(0, 111, 0), null);
WITHOUT_CLASSIFICATION	printing set
WITHOUT_CLASSIFICATION	print fore color will be gray
WITHOUT_CLASSIFICATION	We do abrevs ourselfs in the DocumentListener in NetbeansSQLEntryPanel. We don't use the Netbeans implementation mainly because it is case sensitive. If we come across a performance problem one day we can still try to use this.
WITHOUT_CLASSIFICATION	Hashtable autoCorrects = plugin.getAutoCorrectProviderImpl().getAutoCorrects(); javaAbbrevMap.putAll(autoCorrects);
WITHOUT_CLASSIFICATION	Start the thread that does the coloring
WITHOUT_CLASSIFICATION	Set up the hash table that contains the styles.
WITHOUT_CLASSIFICATION	create the new document.
WITHOUT_CLASSIFICATION	Put the initial text into the text pane and set it's initial coloring style.
WITHOUT_CLASSIFICATION	This stops the text control from line wrapping.
WITHOUT_CLASSIFICATION	Color.maroon
WITHOUT_CLASSIFICATION	Color.maroon
WITHOUT_CLASSIFICATION	if we just finish, we can't go to sleep until we ensure there is nothing else for us to do. use try again to keep track of this.
WITHOUT_CLASSIFICATION	forever
WITHOUT_CLASSIFICATION	Only if the text did really changed (null != re.change) Intervals must be adjusted. If the text did not change there is nothing to adjust.
WITHOUT_CLASSIFICATION	we are playing some games with the lexer for efficiency. we could just create a new lexer each time here, but instead, we will just reset it so that it thinks it is starting at the beginning of the document but reporting a funny start colorStartPos. Reseting the lexer causes the close() method on the reader to be called but because the close() method has no effect on the DocumentReader, we can do this.
WITHOUT_CLASSIFICATION	After the lexer has been set up, scroll the reader so that it is in the correct spot as well.
WITHOUT_CLASSIFICATION	this is the actual command that colors the stuff. Color stuff with the description of the style matched to the hash table that has been set up ahead of time.
WITHOUT_CLASSIFICATION	record the colorStartPos of the last bit of text that we colored
WITHOUT_CLASSIFICATION	The Interval is involved even if pos lied one point before or after the interval. This way for example we get -- Select ... out of comment coloring when the first "-" is removed.
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	The Ostermiller SQLLexer crashes with an ArrayIndexOutOfBoundsException if the char is greater then 255. So we prevent the char from being greater. This is surely not a proper Unicode treatment but it doesn't seem to do no harm and it keeps the SQLLexer working.
WITHOUT_CLASSIFICATION	we will highlight tokens until we reach a good stopping place. the first obvious stopping place is the end of the document. the lexer will return null at the end of the document and wee need to stop there.
WITHOUT_CLASSIFICATION	IObjectTreeAPI api = m_session.getObjectTreeAPI(m_plugin);
WITHOUT_CLASSIFICATION	since we did something, we should check that there is nothing else to do before going back to sleep.
WITHOUT_CLASSIFICATION	TODO: columns, tables
WITHOUT_CLASSIFICATION	Though in API-Doc they say setCharacterAttributes() is thread save we received observed java.lang.Errors from Swing as well as dead locks. That's why we do changes synchron now.
WITHOUT_CLASSIFICATION	IObjectTreeAPI api = m_session.getObjectTreeAPI(m_plugin);
WITHOUT_CLASSIFICATION	synchronized (doclock) {
WITHOUT_CLASSIFICATION	synchronized (doclock) {
WITHOUT_CLASSIFICATION	TODO:setFont(style.createStyledFont(getFont()));
WITHOUT_CLASSIFICATION	m_session.getSQLPanelAPI(m_plugin).addToSQLEntryAreaMenu(actSql);
WITHOUT_CLASSIFICATION	_session.getSQLPanelAPI(_plugin)
WITHOUT_CLASSIFICATION	IObjectTreeAPI api = session.getObjectTreeAPI(this);
WITHOUT_CLASSIFICATION	targetType == TARGET_TYPE_SQL
WITHOUT_CLASSIFICATION	Dialog is shown only when it is written to.
WITHOUT_CLASSIFICATION	String sql = m_session.getSQLPanelAPI(m_plugin).getSQLScriptToBeExecuted();
WITHOUT_CLASSIFICATION	ScriptEnvironment env = new ScriptEnvironment(m_session.getSQLPanelAPI(m_plugin), ownerFrame);
WITHOUT_CLASSIFICATION	String catalog, String schema, String simpleName, String tableType, String remarks,
WITHOUT_CLASSIFICATION	/ Setting the model initializes columns. We want to initialize the columns ourselves below.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	TABLENAME
WITHOUT_CLASSIFICATION	create the threads
WITHOUT_CLASSIFICATION	start the threads
WITHOUT_CLASSIFICATION	join with the threads
WITHOUT_CLASSIFICATION	The following gives java.sql.SQLException: Conversion to character stream failed
WITHOUT_CLASSIFICATION	"Other" types are treated as Strings internally in SQuirreL.
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	String catalog, String schema, String simpleName
WITHOUT_CLASSIFICATION	utilUnderTest = ;
WITHOUT_CLASSIFICATION	utilUnderTest = null;
WITHOUT_CLASSIFICATION	String path = "/downloads/";
WITHOUT_CLASSIFICATION	UpdateUtil util = new UpdateUtilImpl();
WITHOUT_CLASSIFICATION	String path = "/release/snapshot/";
WITHOUT_CLASSIFICATION	two columns to represent a Primary key in the pktest table
WITHOUT_CLASSIFICATION	this is the constraint that is dropped in drop constraint test
WITHOUT_CLASSIFICATION	this is the column on which the constraint to be dropped is defined
WITHOUT_CLASSIFICATION	Mocks for generic dialect test
WITHOUT_CLASSIFICATION	private DatabaseMetaData mockGenericDialectDBMetaData = mockHelper.createMock(DatabaseMetaData.class);
WITHOUT_CLASSIFICATION	For some reason, Frontbase doesn't find tables that have been previously created.
WITHOUT_CLASSIFICATION	quiet
WITHOUT_CLASSIFICATION	views will depend on tables, so drop them first
WITHOUT_CLASSIFICATION	Now sequences should go.
WITHOUT_CLASSIFICATION	alterations fail for some reason unless you do this...
WITHOUT_CLASSIFICATION	MySQL spatial index requires a not null column
WITHOUT_CLASSIFICATION	DB2 requires primary keys to also be declared "not null"
WITHOUT_CLASSIFICATION	DB2 cannot alter a column's null attribute directly (only through constraints). Not only that, but it's apparently not a valid thing to do to create a primary key using a column that has been made "not null" via a check constraint. Therefore, the only columns that qualify to be made PKs are those that were declared not null at the time of table creation.
WITHOUT_CLASSIFICATION	Test whether or not the dialect correctly converts nullable columns to not-null before applying the primary key - if necessary
WITHOUT_CLASSIFICATION	Don't care if it's not there
WITHOUT_CLASSIFICATION	This is what we expect
WITHOUT_CLASSIFICATION	convert nullint into a varchar(100)
WITHOUT_CLASSIFICATION	This is what we expect.
WITHOUT_CLASSIFICATION	Couldn't locate the table - just try to fake it.
WITHOUT_CLASSIFICATION	This is expected
WITHOUT_CLASSIFICATION	This is expected
WITHOUT_CLASSIFICATION	This is expected
WITHOUT_CLASSIFICATION	This is expected
WITHOUT_CLASSIFICATION	Now that we have run the view definition query, and retrieved the SQL that is the body of the view (that is, it's query part minus the "CREATE VIEW AS" prefix), we can drop the view.
WITHOUT_CLASSIFICATION	create a table with a default value to use as the model
WITHOUT_CLASSIFICATION	Test the create statement
WITHOUT_CLASSIFICATION	Build the sql statement(s) to create the table
WITHOUT_CLASSIFICATION	System.err.println("("+extractor.getClass().getSimpleName()+"):The SQL generated by " + referenceDialect.getDisplayName() + " works !!!");
WITHOUT_CLASSIFICATION	drop the table so that we can test our create statement
WITHOUT_CLASSIFICATION	create a test view that we will get view def for then drop and re-create
WITHOUT_CLASSIFICATION	Postgres has some special indexes that only work on certain columns. Skip tests for those
WITHOUT_CLASSIFICATION	viewDefSql is the SQL that can be used to query the data dictionary for the body of a view. This should exclude the "CREATE VIEW <viewname> AS" prefix and just return the query.
WITHOUT_CLASSIFICATION	create a unique index on myuniquechar
WITHOUT_CLASSIFICATION	now drop the first
WITHOUT_CLASSIFICATION	create a non-unique index on mychar
WITHOUT_CLASSIFICATION	now drop the second.
WITHOUT_CLASSIFICATION	create it.
WITHOUT_CLASSIFICATION	create it.
WITHOUT_CLASSIFICATION	Axion cannot handle ts escape sequence - so skip this test for now.
WITHOUT_CLASSIFICATION	Progress throws an exception if you try to drop the first index that was created
WITHOUT_CLASSIFICATION	Verify insert worked only if the dialect supports sub-second timestamp values
WITHOUT_CLASSIFICATION	Unused methods - this is not a real dialog, just a fake.
WITHOUT_CLASSIFICATION	Utility methods
WITHOUT_CLASSIFICATION	MS SQLServer yields "Conversion failed when converting datetime from character string" for {ts '2008-02-21 21:26:23.966123'}
WITHOUT_CLASSIFICATION	System.err.println("Attempt to use dialect sql from " + referenceDialect.getDisplayName() + " failed: " + e2.getMessage());
WITHOUT_CLASSIFICATION	catalog schema tableName columnName dataType typeName columnSize decimalDigits radix isNullAllowed remarks defaultValue octet length ordinal position isNullable
WITHOUT_CLASSIFICATION	tableName, columns, pkColumns, prefs, qualifier
WITHOUT_CLASSIFICATION	mocks
WITHOUT_CLASSIFICATION	Helpers
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#initialize()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getExternalService()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getLicenceFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginAppSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()
WITHOUT_CLASSIFICATION	System.err.println("MockApplication.getMainFrame: stub not yet implemented");
WITHOUT_CLASSIFICATION	MockConnection2 mockCon = getMockConnection();
WITHOUT_CLASSIFICATION	sessionPanel = new SessionPanel(this);
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedHigh()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#load(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISession#getSchemaInfo()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISession#getMetaData()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getCatalogName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getDatabaseObjectType()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getQualifiedName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getSchemaName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getSimpleName()
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Need to adjust param which is 1-based(JDBC) to a 0-based number for array access
WITHOUT_CLASSIFICATION	fail("Not yet implemented");
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	mockSession
WITHOUT_CLASSIFICATION	mockSession
WITHOUT_CLASSIFICATION	mockPreferences
WITHOUT_CLASSIFICATION	mockSessionProperties
WITHOUT_CLASSIFICATION	mockFontInfo
WITHOUT_CLASSIFICATION	mockApplication
WITHOUT_CLASSIFICATION	mockSquirrelResources
WITHOUT_CLASSIFICATION	Null tests
WITHOUT_CLASSIFICATION	Other tests
WITHOUT_CLASSIFICATION	Mock objects
WITHOUT_CLASSIFICATION	Simulate the user changing the session properties
WITHOUT_CLASSIFICATION	QueryTokenizer tests
WITHOUT_CLASSIFICATION	This should be a default tokenizer which uses ";" as statement sep
WITHOUT_CLASSIFICATION	This should override the default tokenizer
WITHOUT_CLASSIFICATION	Check to ensure that the tokenizer received is not the default one that should have been overridden.
WITHOUT_CLASSIFICATION	Simulate the user switching the statement separator for the session
WITHOUT_CLASSIFICATION	Test to ensure that we allow sessions that are ending to be GC'd.
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	We don't stub return because we want to verify that the object filter was actually used.
WITHOUT_CLASSIFICATION	Should at least bind the tablename to a bind var in the SQL
WITHOUT_CLASSIFICATION	common mocks
WITHOUT_CLASSIFICATION	Test Data
WITHOUT_CLASSIFICATION	mockSessionManager
WITHOUT_CLASSIFICATION	mockSQLConnection
WITHOUT_CLASSIFICATION	mockSQLMetaData
WITHOUT_CLASSIFICATION	mockSchemaInfo
WITHOUT_CLASSIFICATION	mockThreadPool
WITHOUT_CLASSIFICATION	mockConnection
WITHOUT_CLASSIFICATION	mockSQLDriver
WITHOUT_CLASSIFICATION	mockDatabaseObjectInfo
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	Test to see that table(100) matches table(0). It should since only the row count is different.
WITHOUT_CLASSIFICATION	Test to see if we can fool matchKeyPrefix into assuming that there will be '(' on the end of the path since row count is enabled. Yet we'll send in a string that doesn't have this characteristic.
WITHOUT_CLASSIFICATION	Pick a tableInfo to remove and replace
WITHOUT_CLASSIFICATION	remove table with name table10
WITHOUT_CLASSIFICATION	Add it back
WITHOUT_CLASSIFICATION	Mock objects
WITHOUT_CLASSIFICATION	setup expectations
WITHOUT_CLASSIFICATION	setup expectations
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	create mocks to be injected
WITHOUT_CLASSIFICATION	inject mocks
WITHOUT_CLASSIFICATION	common expectations
WITHOUT_CLASSIFICATION	downloads directory
WITHOUT_CLASSIFICATION	downloads/plugin directory
WITHOUT_CLASSIFICATION	squirrel installed lib dir
WITHOUT_CLASSIFICATION	downloads/core directory
WITHOUT_CLASSIFICATION	setup source mock file
WITHOUT_CLASSIFICATION	setup dest mock file
WITHOUT_CLASSIFICATION	Cannot mock URLs, they are final and so they cannot be subclassed.
WITHOUT_CLASSIFICATION	Class to test
WITHOUT_CLASSIFICATION	Common mock objects
WITHOUT_CLASSIFICATION	Common mock objects
WITHOUT_CLASSIFICATION	This is acceptable
WITHOUT_CLASSIFICATION	This is acceptable
WITHOUT_CLASSIFICATION	ArtifactXmlBean
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	For the serialization test in superclass - cannot use mockHelper because the replay needs to be done here.
WITHOUT_CLASSIFICATION	original object another object that has the same values as the original another object with different values
WITHOUT_CLASSIFICATION	a subclass of Foo with the same values as the original
WITHOUT_CLASSIFICATION	different only by type - same name
WITHOUT_CLASSIFICATION	Test Constants
WITHOUT_CLASSIFICATION	expect getFile for updated files that will be removed
WITHOUT_CLASSIFICATION	expect getFile for updated files that were downloaded
WITHOUT_CLASSIFICATION	expected fileOperationInfos for files that will be installed
WITHOUT_CLASSIFICATION	expectations that are specific to this test
WITHOUT_CLASSIFICATION	Failure Tests
WITHOUT_CLASSIFICATION	Helper Methods
WITHOUT_CLASSIFICATION	Check reference equality to be sure that it isn't the exact same object.
WITHOUT_CLASSIFICATION	private TableColumnsDataSet iut = null;
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Helpers
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	a subclass of Foo with the same values as the original
WITHOUT_CLASSIFICATION	"Unknown" types are treated as Strings internally in SQuirreL.
WITHOUT_CLASSIFICATION	not necessarily the case - I'm just curious if we have any components that need to be re-read
WITHOUT_CLASSIFICATION	1757076 (DATE column seen as TIMESTAMP, update in editable mode fails) We should always return false for this, when the user hasn't specified
WITHOUT_CLASSIFICATION	Cannot pass byte array to Class.forName
WITHOUT_CLASSIFICATION	Not a real database, but no driver should match this.
WITHOUT_CLASSIFICATION	Some dialects support adding columns, but the logic has not been added yet to the dialect. If that is the case the message is "Not yet implemented" - fail for all other messages.
WITHOUT_CLASSIFICATION	Tests
WITHOUT_CLASSIFICATION	Here the max line length == original line size - so it doesn't get trimmed of white space.
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	The first time that schemas are asked for, return just one
WITHOUT_CLASSIFICATION	The second time that schemas are asked for, return two
WITHOUT_CLASSIFICATION	Check to be sure we get only one schema
WITHOUT_CLASSIFICATION	Check to be sure we get only one schema
WITHOUT_CLASSIFICATION	Now, check to be sure we get both schemas.
WITHOUT_CLASSIFICATION	The first time that catalogs are asked for, return just one
WITHOUT_CLASSIFICATION	The second time that catalogs are asked for, return two
WITHOUT_CLASSIFICATION	Now, check to be sure we get both catalogs.
WITHOUT_CLASSIFICATION	Build the table types returned by PostgreSQL
WITHOUT_CLASSIFICATION	scope
WITHOUT_CLASSIFICATION	typeName
WITHOUT_CLASSIFICATION	int precision
WITHOUT_CLASSIFICATION	short scale
WITHOUT_CLASSIFICATION	short pseudocolumn
WITHOUT_CLASSIFICATION	Setup values.length columns
WITHOUT_CLASSIFICATION	Setup one row
WITHOUT_CLASSIFICATION	Setup one column in multiple rows
WITHOUT_CLASSIFICATION	Mocks
WITHOUT_CLASSIFICATION	Test case for 1742033 (Skipping quoting escape in table dropping)
WITHOUT_CLASSIFICATION	original object
WITHOUT_CLASSIFICATION	another object that has the same values as the original
WITHOUT_CLASSIFICATION	another object with different values
WITHOUT_CLASSIFICATION	Don't forget to set this to the number of statements in result
WITHOUT_CLASSIFICATION	Class under test
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	column name sqlType
WITHOUT_CLASSIFICATION	Sybase 12.5 doesn't support quotation marks for identifiers, yet reports " as the identifier quote string - go figure!
WITHOUT_CLASSIFICATION	Sybase 15 fully supports quotation marks for identifiers, and reports " as the identifier quote string - yeah, they got it right!
WITHOUT_CLASSIFICATION	Since catalog, schema and table are all identifiers, they all need to be quoted.
WITHOUT_CLASSIFICATION	construct mock objects
WITHOUT_CLASSIFICATION	local expectations
WITHOUT_CLASSIFICATION	execute test
WITHOUT_CLASSIFICATION	execute test
WITHOUT_CLASSIFICATION	execute test
WITHOUT_CLASSIFICATION	Constructor Tests
WITHOUT_CLASSIFICATION	Method Tests
WITHOUT_CLASSIFICATION	fail ??
WITHOUT_CLASSIFICATION	fail ??
WITHOUT_CLASSIFICATION	HELPERS
WITHOUT_CLASSIFICATION	construct the name of executable file
WITHOUT_CLASSIFICATION	add classpath string
WITHOUT_CLASSIFICATION	parse hy.test.vmargs if was given
WITHOUT_CLASSIFICATION	add custom args given as parameter
WITHOUT_CLASSIFICATION	execute java process
WITHOUT_CLASSIFICATION	wait for errThread to start
WITHOUT_CLASSIFICATION	" a read "
WITHOUT_CLASSIFICATION	This should just produce an error message.
WITHOUT_CLASSIFICATION	Delete all old temporary files
WITHOUT_CLASSIFICATION	Regression test for HARMONY-382
WITHOUT_CLASSIFICATION	Regression test for HARMONY-21
WITHOUT_CLASSIFICATION	Test data used in a few places below
WITHOUT_CLASSIFICATION	Check filename is preserved correctly
WITHOUT_CLASSIFICATION	Check null argument is handled
WITHOUT_CLASSIFICATION	Expected.
WITHOUT_CLASSIFICATION	Regression for HARMONY-46
WITHOUT_CLASSIFICATION	a valid File URI
WITHOUT_CLASSIFICATION	canRead only returns if the file exists so cannot be fully tested.
WITHOUT_CLASSIFICATION	canWrite only returns if the file exists so cannot be fully tested.
WITHOUT_CLASSIFICATION	Test for trying to create a file in a directory that does not exist.
WITHOUT_CLASSIFICATION	Try to create a file in a directory that does not exist
WITHOUT_CLASSIFICATION	Try to create a file in a directory that does not exist
WITHOUT_CLASSIFICATION	Test for creating a file that already exists.
WITHOUT_CLASSIFICATION	Test create an illegal file
WITHOUT_CLASSIFICATION	expected;
WITHOUT_CLASSIFICATION	expected;
WITHOUT_CLASSIFICATION	Error protection against using a suffix without a "."?
WITHOUT_CLASSIFICATION	Test to see if correct suffix was used to create the tempfile.
WITHOUT_CLASSIFICATION	Testing two files, one with suffix ".tmp" and one with null
WITHOUT_CLASSIFICATION	Tests for creating a tempfile with a filename shorter than 3 characters.
WITHOUT_CLASSIFICATION	Test to make sure that the tempfile was saved in the correct location and with the correct prefix/suffix.
WITHOUT_CLASSIFICATION	Test for creating a tempfile in a directory that does not exist.
WITHOUT_CLASSIFICATION	Set dir to a non-existent directory inside the temporary directory
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	create the file
WITHOUT_CLASSIFICATION	Test for when long directory/file names in Windows
WITHOUT_CLASSIFICATION	If the "short file name" doesn't exist, then assume that the 8.3 file name compatibility is disabled.
WITHOUT_CLASSIFICATION	Should work for Unix/Windows.
WITHOUT_CLASSIFICATION	Finding a non-existent directory for tests 3 and 4 This is necessary because getCanonicalPath is case sensitive and could cause a failure in the test if the directory exists but with different case letters (e.g "Temp" and "temp")
WITHOUT_CLASSIFICATION	Test for long file names on Windows
WITHOUT_CLASSIFICATION	Regression for HARMONY-444
WITHOUT_CLASSIFICATION	Regression for HARMONY-829
WITHOUT_CLASSIFICATION	Regression for HARMONY-3869
WITHOUT_CLASSIFICATION	Regression for HARMONY-53
WITHOUT_CLASSIFICATION	One or the other should be absolute on Windows or CE
WITHOUT_CLASSIFICATION	On Unix hidden files are marked with a "." at the beginning of the file name.
WITHOUT_CLASSIFICATION	For windows, the file is being set hidden by the attrib command.
WITHOUT_CLASSIFICATION	Finding a non-existent directory to create.
WITHOUT_CLASSIFICATION	Finding a non-existent directory to create.
WITHOUT_CLASSIFICATION	Test for attempting to call listFiles on a non-existent directory.
WITHOUT_CLASSIFICATION	Test to make sure that listFiles can read hidden files.
WITHOUT_CLASSIFICATION	Creating a filter that catches directories.
WITHOUT_CLASSIFICATION	testBitColType(sourceName, destName);
WITHOUT_CLASSIFICATION	Old test left behind "garbage files" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)
WITHOUT_CLASSIFICATION	Finding a non-existent directory to create.
WITHOUT_CLASSIFICATION	Checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	Checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	Test to make sure that only the 3 files that were created are listed.
WITHOUT_CLASSIFICATION	Checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	Creating a filter that catches files.
WITHOUT_CLASSIFICATION	Test to see if the correct number of directories are returned.
WITHOUT_CLASSIFICATION	Test to see if the directory was saved with the correct name.
WITHOUT_CLASSIFICATION	Test to see if the correct number of files are returned.
WITHOUT_CLASSIFICATION	Creating a filter that catches ".tst" files.
WITHOUT_CLASSIFICATION	Creating a filter that catches ".tmp" files.
WITHOUT_CLASSIFICATION	If the suffix is ".tmp" then send it to the array
WITHOUT_CLASSIFICATION	Tests to see if the correct number of files were returned.
WITHOUT_CLASSIFICATION	24 chars
WITHOUT_CLASSIFICATION	Test make a long path
WITHOUT_CLASSIFICATION	Test make many paths
WITHOUT_CLASSIFICATION	Regression test for HARMONY-3656
WITHOUT_CLASSIFICATION	in case it already exists
WITHOUT_CLASSIFICATION	in case it already exists
WITHOUT_CLASSIFICATION	Subtracting 100 000 milliseconds from the orgTime of File f1
WITHOUT_CLASSIFICATION	Subtracting 10 000 000 milliseconds from the orgTime of File f1
WITHOUT_CLASSIFICATION	Adding 100 000 milliseconds to the orgTime of File f1
WITHOUT_CLASSIFICATION	Adding 10 000 000 milliseconds from the orgTime of File f1
WITHOUT_CLASSIFICATION	Trying to set time to an exact number
WITHOUT_CLASSIFICATION	Trying to set time to a large exact number
WITHOUT_CLASSIFICATION	Trying to set time to a negative number
WITHOUT_CLASSIFICATION	Attempt to write to a file that is setReadOnly.
WITHOUT_CLASSIFICATION	Write to a file.
WITHOUT_CLASSIFICATION	Similarly, trying to delete a read-only directory should succeed
WITHOUT_CLASSIFICATION	Need a directory that exists
WITHOUT_CLASSIFICATION	Test for toURI when the file is a directory.
WITHOUT_CLASSIFICATION	Test for toURI with a file name with illegal chars.
WITHOUT_CLASSIFICATION	Test for toURL when the file is a directory.
WITHOUT_CLASSIFICATION	Test for toURL with a file.
WITHOUT_CLASSIFICATION	Regression test for HARMONY-4493
WITHOUT_CLASSIFICATION	No invalid columns in this TableModel implementation
WITHOUT_CLASSIFICATION	Don't care to see tons of debug from ColTypeMapper
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Mock objects
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f1 Is Set To ReadOnly." , f1.canWrite());
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f1 Is Not Set To ReadOnly." , !f1.canWrite());
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f2 Is Set To ReadOnly." , f2.canWrite());
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f2 Is Not Set To ReadOnly." , !f2.canWrite());
WITHOUT_CLASSIFICATION	Attempt to write to a file that has previously been written to. and is now set to read only.
WITHOUT_CLASSIFICATION	Regression test for HARMONY-3207 current directory
WITHOUT_CLASSIFICATION	Regression test for HARMONY-3207 current directory
WITHOUT_CLASSIFICATION	testBooleanColType(sourceName, destName); testCharColType(sourceName, destName);
WITHOUT_CLASSIFICATION	testDecimalColType(sourceName, destName); testDoubleColType(sourceName, destName); testFloatColType(sourceName, destName);
WITHOUT_CLASSIFICATION	This is for brute force detection of columns whose column size is 0
WITHOUT_CLASSIFICATION	This is for brute force detection of BLOB/CLOB lengths if necessary
WITHOUT_CLASSIFICATION	This is for brute force detection of BLOB/CLOB lengths if necessary
WITHOUT_CLASSIFICATION	Test for NPE in DBUtil.getForeignKeySQL when the TableInfo returns null for getImportedKeys
WITHOUT_CLASSIFICATION	case shouldn't be changed in this test because the context is the source database.
WITHOUT_CLASSIFICATION	Instance under test
WITHOUT_CLASSIFICATION	init class under test
WITHOUT_CLASSIFICATION	init mocks
WITHOUT_CLASSIFICATION	setColumns Error conditions
WITHOUT_CLASSIFICATION	Sunny day
WITHOUT_CLASSIFICATION	Create a test bean to clone
WITHOUT_CLASSIFICATION	Create a test bean to clone
WITHOUT_CLASSIFICATION	Clone the test bean and change every bean property
WITHOUT_CLASSIFICATION	Clone the test bean and change every bean property
WITHOUT_CLASSIFICATION	verify that changing the clone didn't affect the original
WITHOUT_CLASSIFICATION	verify that changing the clone didn't affect the original
WITHOUT_CLASSIFICATION	Call class under test
WITHOUT_CLASSIFICATION	Common mocks
WITHOUT_CLASSIFICATION	we cannot mock DTProperties because it is designed to be accessed statically. :( Simulate missing property.
WITHOUT_CLASSIFICATION	Accessible query
WITHOUT_CLASSIFICATION	SGA query
WITHOUT_CLASSIFICATION	expect(session.getMessageHandler()).andReturn(messageHandler).anyTimes();
WITHOUT_CLASSIFICATION	an interface
WITHOUT_CLASSIFICATION	a class
WITHOUT_CLASSIFICATION	i18n[Application.error.loadcellselections=Unable to load Cell Import/Export selections from persistant storage.]
WITHOUT_CLASSIFICATION	_mainFrame.setVisible(true); _mainFrame.toFront(); Required on Linux
WITHOUT_CLASSIFICATION	i18n[Application.error.loaddatatypeprops=Unable to load DataType Properties selections from persistant storage.]
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	set the singleton instance of the Saver class to be the instance just created by the XMLBeanReader
WITHOUT_CLASSIFICATION	For all windows (other than the first one opened) for a session add a number on the end of the title to differentiate them in menus etc.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	final Map map = getAllEditWhereColsSheets(tree); return (EditWhereColsSheet)map.get(objectInfo.getQualifiedName());
WITHOUT_CLASSIFICATION	Has to be done directly on the main frame because of racing condition at start up. _aliasesListWindow.nowVisible(true);
WITHOUT_CLASSIFICATION	Has to be done directly on the main frame because of racing condition at start up. _aliasesListWindow.nowVisible(false);
WITHOUT_CLASSIFICATION	If the active window isn't for the currently selected session then select the main window for the session.
WITHOUT_CLASSIFICATION	We are in the closing event of the Session main window. We don't want to send this event again therefore we pass withEvents = false.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	add(_okBtn); add(_closeBtn);
WITHOUT_CLASSIFICATION	Ok button at bottom of dialog. JPanel btnsPnl = new JPanel(); JButton okBtn = new JButton("OK");
WITHOUT_CLASSIFICATION	Get list of all plugin developers names. Allow for multiple developers for a plugin in the form "John Smith, James Brown".
WITHOUT_CLASSIFICATION	_thread = new Thread(new MemoryTimer()); _thread.start();
WITHOUT_CLASSIFICATION	typeName columnSize decimalDigits radix isNullAllowable
WITHOUT_CLASSIFICATION	defaultValue octetLength ordinalPosition isNullable
WITHOUT_CLASSIFICATION	EasyMock Class extension helpers. Since classextension and interface EasyMock methods cannot be used on the same mocks, this provides convenience to not have to specify the package name for classextension mocks.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	parent.addInternalFrame(viewer, true, null); GUIUtils.centerWithinDesktop(viewer);
WITHOUT_CLASSIFICATION	Done after the set of the selected item above so that we control when the initial build is done. We want to make sure that under all versions of the JDK that the window is shown before the (possibly lengthy) refresh starts.
WITHOUT_CLASSIFICATION	private static final class CellRenderer extends BasicComboBoxRenderer { public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) { setText(((TableColumnInfo)value).getColumnName()); return this; } }
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.invalidUrl=According to the driver "{0}", the url "{1}" is invalid.]
WITHOUT_CLASSIFICATION	If no columns are selected, and we're not dropping the PK, then there is nothing to do.
WITHOUT_CLASSIFICATION	alias.setUseDriverProperties(_useDriverPropsChk.isSelected()); alias.setDriverProperties(_sqlDriverProps);
WITHOUT_CLASSIFICATION	If Auto Logon is true in ConnectToAliasCommand user name/password of the Alias definiton may have changed. Here we transfere this information back into the controls.
WITHOUT_CLASSIFICATION	If this happens then this is a programming error as we said in the above call to ingore these errors.
WITHOUT_CLASSIFICATION	Scrollbars are "shown always" to stop sheet resizing when they are shown/hidden.
WITHOUT_CLASSIFICATION	Use valueof when min supported JDK is 1.4 return Boolean.valueOf(_props[row].required);
WITHOUT_CLASSIFICATION	return Boolean.class; Don't show checkbox for output only field.
WITHOUT_CLASSIFICATION	JInternalFrame[] frames = GUIUtils.getOpenNonToolWindows(getDesktopPane().getAllFrames()); _app.getActionCollection().internalFrameOpenedOrClosed(frames.length);
WITHOUT_CLASSIFICATION	_inWidgetSetVisible was introduced to allow moveToFront to be called from within setVisible. See EditWhereColsSheet or SQLFilterSheet
WITHOUT_CLASSIFICATION	Is done in dispose itself because listeners must be fired even in DO_NOTHING_ON_CLOSE mode tabHandle.fireClosed(e); /
WITHOUT_CLASSIFICATION	we can have more than one file in the string so tokenize on whitespace. Let the user know if we find multiple tokens that they cannot place drop than one file at a time
WITHOUT_CLASSIFICATION	private AliasesListInternalFrame _aliasesListWindow; private DriversListInternalFrame _driversListWindow;
WITHOUT_CLASSIFICATION	Under JDK1.4 the first item in a JComboBox is no longer automatically selected.
WITHOUT_CLASSIFICATION	Under JDK1.4 the first item in a JComboBox is no longer automatically selected.
WITHOUT_CLASSIFICATION	Done this late so that plugins have time to register expanders with the object tree prior to it being built. getSession().getObjectTreeAPI(_app.getDummyAppPlugin()).refreshTree();
WITHOUT_CLASSIFICATION	Done this late so that plugins have time to register expanders with the object tree prior to it being built.
WITHOUT_CLASSIFICATION	This seems to be necessary to get background colours correct. Without it labels added to the content pane have a dark background while those added to a JPanel in the content pane have a light background under the java look and feel. Similar effects occur for other look and feels.
WITHOUT_CLASSIFICATION	If the user checked Auto Logon but gave wrong username/password in the Alias definition. He will be asked to enter username/password again in an extra dialog. Here for convenience we transfer these data back into the Alias. Note: Don't do this when Auto Logon is false.
WITHOUT_CLASSIFICATION	if blocked that means that it doesn't help anymore Or an error dialog is shown or the connection is made and the SessionFrame is being constructed/shown.
WITHOUT_CLASSIFICATION	/ Message
WITHOUT_CLASSIFICATION	We need this in order to allow the user to see this plugin - which isn't loaded - in the plugin summary dialog, so that they can enable it.
WITHOUT_CLASSIFICATION	if the old preference file exists and is newer than the newUserPreference file, then use it for reading preferences
WITHOUT_CLASSIFICATION	private JLabel _executionLogFileNameLbl = new OutputLabel(" "); Must have at least 1 blank otherwise width gets set to zero. private JLabel _logConfigFileNameLbl = new OutputLabel(" "); Must have at least 1 blank otherwise width gets set to zero.
WITHOUT_CLASSIFICATION	We need this method to satisfy one of the Interfaces we implement, but since we have moved all operations to the DataType sub-panels which initialize their own data during creation, there is nothing for us to do here
WITHOUT_CLASSIFICATION	We need this method to satisfy one of the Interfaces we implement, but since we have moved all operations to the DataType sub-panels which initialize their own data during creation, there is nothing for us to do here
WITHOUT_CLASSIFICATION	Get an array since we dont want trouble with the sessionsList when we remove the sessions from it.
WITHOUT_CLASSIFICATION	give the ResultSetReader some time to realize that the user requested cancel and stop fetching results. This allows us to stop the query processing gracefully.
WITHOUT_CLASSIFICATION	public SQLExecutionInfo() { this(1, ""); }
WITHOUT_CLASSIFICATION	/ Error Attention: Do not use background colors here. Color blind people cannot read black writing on red background.
WITHOUT_CLASSIFICATION	/ Checks if the former message should be highlighted in a 'history' color.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Since 1.4 implements interfaces that became available in JDBC 3.0, let's warn the user if the driver doesn't support DatabaseMetaData methods that were added in JDBC 2.1 and JDBC 3.0 specifications.
WITHOUT_CLASSIFICATION	No tokenizer has been set by any installed plugin. Go ahead and give the default tokenizer. It is important to not cache this object so that session property changes to the current session are reflected in this default tokenizer.
WITHOUT_CLASSIFICATION	public SQLFilterClauses getSQLFilterClauses() { return _sqlFilterClauses; }
WITHOUT_CLASSIFICATION	if the user selected Editable Table in the Session Properties, then the display will be an editable table; otherwise the display is read-only
WITHOUT_CLASSIFICATION	It is possible for a table to contain only columns of types that we cannot process or do selects on, so check for that. Since this check is on the structure of the table rather than the contents, we only need to do it once (ie: it is not needed in getWarningOnProjectedUpdate)
WITHOUT_CLASSIFICATION	There should not be more than one row in the DB that matches the table, and if there is we cannot determine which one to read, so check that there are no more
WITHOUT_CLASSIFICATION	We don't care if these throw an SQLException. Just squelch them and report to the user what the outcome of the previous statements were.
WITHOUT_CLASSIFICATION	no problems found, so do not return a warning message. nothing for user to worry about
WITHOUT_CLASSIFICATION	no problems found, so do not return a warning message. nothing for user to worry about
WITHOUT_CLASSIFICATION	get WHERE clause The -1 says to ignore the last arg and use the contents of the values array for the column that we care about. However, since the data in that column has been limited, when getWhereClause calls that DataType with that value, the DataType will see that the data has been limited and therefore cannnot be used in the WHERE clause. In some cases it may be possible for the DataType to use the partial data, such as "matches <data>", but that may not be standard accross all Databases and thus may be risky.
WITHOUT_CLASSIFICATION	have the DataType object fill in the appropriate kind of value into the first (and only) variable position in the prepared stmt
WITHOUT_CLASSIFICATION	It would be nice to tell the user what happened, but if we try to put up a dialog box at this point, we run into trouble in some cases where the field continually tries to re-read after the dialog closes (because it is being re-painted).
WITHOUT_CLASSIFICATION	When we get to the last statement, if the script is large, show the user the total execution time.
WITHOUT_CLASSIFICATION	There used to be a frame.pack() here but it resized the frame to be very wide if text output was used.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	get WHERE clause for the selected row the -1 says to just use the contents of the values without any substitutions
WITHOUT_CLASSIFICATION	For tables that have a lot of columns, the user may have limited the set of columns to use in the where clause, so see if there is a table of col names
WITHOUT_CLASSIFICATION	the user has restricted the set of columns to use. If this name is NOT in the list, then skip it; otherwise we fall through and use the column in the WHERE clause
WITHOUT_CLASSIFICATION	for the column that is being changed, use the value passed in by the caller (which may be either the current value or the new replacement value)
WITHOUT_CLASSIFICATION	string used as error indicator and description of problems seen when checking for 0 or mulitple matches in DB
WITHOUT_CLASSIFICATION	for each row in table, count how many rows match where clause if not exactly one, generate message describing situation
WITHOUT_CLASSIFICATION	if the rows do not match 1-for-1 to DB, ask user if they really want to do delete
WITHOUT_CLASSIFICATION	read the DB MetaData info and fill in the value, if any Note that the ResultSet info and the colDefs should be in the same order, but we cannot guarantee that.
WITHOUT_CLASSIFICATION	if value was null, we do not need to do anything else with this column. Also assume that a value of "" is equivilent to null
WITHOUT_CLASSIFICATION	Add the list of column names we will be inserting into - be sure to skip the rowId column and any auto increment columns.
WITHOUT_CLASSIFICATION	JASON: SQLFilterClauses getSQLFilterClauses();
WITHOUT_CLASSIFICATION	Loop while we either have a ResultSet to process or rows have been updated/inserted/deleted.
WITHOUT_CLASSIFICATION	This method is called from a thread. In case listeners update Swing controls we invoke later here.
WITHOUT_CLASSIFICATION	This can happen if an impl of ISQLExecutionListener returns null from the statementExecuting API method, to indicate that the SQL shouldn't be executed.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Can't work with ISessionAction because if a result window is on top the session in a ISessionAction is null.
WITHOUT_CLASSIFICATION	Implementataion of IDataSetUpdateableTableModel: Delegation to _dataSetUpdateableTableModel
WITHOUT_CLASSIFICATION	final JScrollPane sp = new JScrollPane(); sp.setBorder(BorderFactory.createEmptyBorder()); sp.setViewportView(_tree); sp.setPreferredSize(new Dimension(200, 200));
WITHOUT_CLASSIFICATION	There is no good way using JDBC metadata to tell if the table is a materialized view. So, we need to query the data dictionary to find that out. Get all table names whose comment indicates that they are a materialized view.
WITHOUT_CLASSIFICATION	Option to select default catalog only applies to sessions that support catalogs.
WITHOUT_CLASSIFICATION	If the user wants to select for Right mouse clicks then change the selection before popup appears
WITHOUT_CLASSIFICATION	Go through each child of the parent and see if it was previously expanded. If it was recursively call this method in order to expand the child.
WITHOUT_CLASSIFICATION	Add together the standard expanders for this node type and any individual expanders that there are for the node and process them.
WITHOUT_CLASSIFICATION	If a driver says it supports schemas/catalogs but doesn't provide schema/catalog nodes, try to get other nodes.
WITHOUT_CLASSIFICATION	If a driver says it supports schemas but doesn't provide schema nodes, try to get other nodes.
WITHOUT_CLASSIFICATION	any errors here result in an un-editable table, which should be no problem
WITHOUT_CLASSIFICATION	Dont need to close the ResultSet as DatabaseTypesDataSet will do so when its finished with it.
WITHOUT_CLASSIFICATION	Some DBMS's (EG Think SQL) throw an exception on a call to getBestRowIdentifier.
WITHOUT_CLASSIFICATION	create data structure containing contents of rows to be deleted We cannot use the getRow() method because that uses MyJTable whereas the indexes that we have are indexes in the SortableTableModel.
WITHOUT_CLASSIFICATION	for example: case 0: s = "invalid character"; break; perhaps insert application specific error messages here
WITHOUT_CLASSIFICATION	pseudocolumn query failed, so reset it. Otherwise, we'll mistake the last column for a pseudocolumn and make it uneditable
WITHOUT_CLASSIFICATION	to allow the fw to save and reload user options related to specific columns, we construct a unique name for the table so the column can be associcated with only that table. Some drivers do not provide the catalog or schema info, so those parts of the name will end up as null. That's ok since this string is never viewed by the user and is just used to distinguish this table from other tables in the DB. We also include the URL used to connect to the DB so that the same table/DB on different machines is treated differently.
WITHOUT_CLASSIFICATION	data, random accessible current token current input character (original) current input character (for token) last input character position of current character line number of current character start position of current line
WITHOUT_CLASSIFICATION	/ We are through with parsing. Now we store the outcome in _lastRun... and tell the listeners.
WITHOUT_CLASSIFICATION	If this session doesn't share SQL history with other sessions then disable the controls that relate to SQL History.
WITHOUT_CLASSIFICATION	belong together
WITHOUT_CLASSIFICATION	use just the columns listed in the table, and set the not-used cols to the ones that are not mentioned in the table
WITHOUT_CLASSIFICATION	for each element in the "use" set, if selected then add to "not use", otherwise add to new "use" set
WITHOUT_CLASSIFICATION	detect whether or not the object tree needs refreshing by comparing old value to new and see if they changed.
WITHOUT_CLASSIFICATION	It causes a lot of pain in serveral places to cope with nulls or emptys here.
WITHOUT_CLASSIFICATION	create a hashmap containing the column names. by convention, the value and key is the same for each column name
WITHOUT_CLASSIFICATION	int progress = loadSchemas(1); load tables with catalog = null
WITHOUT_CLASSIFICATION	int progress = loadCatalogs(1); load tables with schema = null
WITHOUT_CLASSIFICATION	If called here it is called far to often and restoring selection in the Object tree doesn't work. fireSchemaInfoUpdate();
WITHOUT_CLASSIFICATION	Reload all matching table types
WITHOUT_CLASSIFICATION	Reload all matching procedure types
WITHOUT_CLASSIFICATION	call the function in the app code that checks for unexpected conditions in the DB as it will be after doing the update
WITHOUT_CLASSIFICATION	Unfortunately, conversion to uppercase does not work properly for the Georgian alphabet, which has strange rules about case conversion. So we need to make one last check before exiting.
WITHOUT_CLASSIFICATION	If characters don't match but case may be ignored, try converting both characters to uppercase. If the results match, then the comparison scan should continue.
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	DB2 stores all names in upper case. PostgreSQL stores all names in lower case. That's why we may not find proc as it was written in the create statement. So we try out the upper and lower case names too.
WITHOUT_CLASSIFICATION	The following strings are SQL tokens and should therefore not be internationalized No I18N No I18N No I18N No I18N No I18N No I18N
WITHOUT_CLASSIFICATION	If the operator is 'IN' and there are no parenthesis around the value, put them there.
WITHOUT_CLASSIFICATION	this method is called from the super class's constructor therfore _titleLbl is null for that call.
WITHOUT_CLASSIFICATION	if the release version doesn't change, we won't be pulling down core artifacts. So, we just need to make sure that all core files have been copied from their installed locations into the corresponding directory in download, which is in the CLASSPATH of the updater. This covers the case where the update is being run for the first time after install, and no new version is available, but the user wants to install/remove plugins and/or translations.
WITHOUT_CLASSIFICATION	since the base name file exists, we need to skip it and bump up the endIndex
WITHOUT_CLASSIFICATION	tell scrollpane to use table size with the height adjusted to leave room for the scrollbar at the bottom if needed
WITHOUT_CLASSIFICATION	text put in file name field to indicate that we should create a temp file for export
WITHOUT_CLASSIFICATION	should not happen since the file that was selected was just being shown in the Chooser dialog, but just to be safe...
WITHOUT_CLASSIFICATION	an error here may mean that the file cannot be reached or has moved or some such. In any case, the file cannot be used for export.
WITHOUT_CLASSIFICATION	at this point we have an actual file that we can output to, so create the output stream (so that data type objects do not have to).
WITHOUT_CLASSIFICATION	If the table+column already has a data object in the map, then remove it.
WITHOUT_CLASSIFICATION	notify table that rows have changed The deleted rows may not be contiguous in the actual data model because the gui may be showing a version of the data sorted in some other order, so we cannot use fireRowsDeleted.
WITHOUT_CLASSIFICATION	ColumnDisplayDefinition[] colDefs = createColumnDefinitions(md, columnIndices, computeWidths); _dataSetDefinition = new DataSetDefinition(colDefs);
WITHOUT_CLASSIFICATION	If this was done when the header was clicked it prevents MS Excel like adopition of column sizes by double click. See class ButtonTableHeader.
WITHOUT_CLASSIFICATION	/ Override the functions that need to be changed to tell the table mechanisms how to do editing.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	we should never get here because the areEqual function is only called when we are trying to update the database, so we know that we have a DataType object for this column (or we would have been stopped from editing by the isEditableXXX methods), but we need a return here to keep the compiler happy.
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	if the original object is not null, then it contains a Clob object that we need to re-use, since that is the DBs reference to the clob data area. Otherwise, we set the original Clob to null, and the write method needs to know to set the field to null.
WITHOUT_CLASSIFICATION	If all of the data has been read, then the blob can be edited in the Popup, otherwise it cannot
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	flag for whether to use the default Java format (true) or the Locale-dependent format (false)
WITHOUT_CLASSIFICATION	If all of the data has been read, then the clob can be edited in the Popup, otherwise it cannot
WITHOUT_CLASSIFICATION	place to save reference to DataType object needed for calling the appropriate renderer on the object value
WITHOUT_CLASSIFICATION	if text cannot be edited in the cell but can be edited in the popup, show that by changing the text colors.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	we have read data, so that is not the same state odd-ball case: assume if neither has read data that they are equal
WITHOUT_CLASSIFICATION	we have read data, so that is not the same state odd-ball case: assume if neither has read data that they are equal
WITHOUT_CLASSIFICATION	the list of specific column names is in comma-separated format with a comma in front of the first entry as well empty the map of old values
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner Special case: the input is exactly the output
WITHOUT_CLASSIFICATION	if this column is being limited, then truncate the data if needed (start with a quick check for the data being shorter than the limit, in which case we don't need to worry about it).
WITHOUT_CLASSIFICATION	When changing the backgroud color, it helps to set the inner component's border to zero. Otherwise, the border can obscure the text and make it hard to see. This is especially seen when using the kunstoff l&f.
WITHOUT_CLASSIFICATION	default behavior if no appropriate data type found is to create a simple JTextArea with no special handling. In Theory, this cannot happen because if there is no data type object for this column's data type, then isEditableInPopup returns false, so we should not get here. If there IS a data type object, and isEditableInPopup returns true, then we would have executed the return statement above. Assume that the value can be represented as a string.
WITHOUT_CLASSIFICATION	we have not already created a DataType object for this column so do that now and save it
WITHOUT_CLASSIFICATION	HADB reports "10" for column size of BLOB/CLOB 2GB (2^32)
WITHOUT_CLASSIFICATION	CREATE TABLE tableName ( column1 int, column2 varchar(20) NOT NULL DEFAULT 'Hello World' CONSTRAINT tableName_pkey PRIMARY KEY(column1,column2) );
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	<drop_index_statement> ::= DROP INDEX <index_name> [ON <table_name>]
WITHOUT_CLASSIFICATION	ALTER TABLE localTableName ADD CONSTRAINT constraintName FOREIGN KEY (localColumn1, localColumn2) REFERENCES referencedTableName (referencedColumn1, referencedColumn2) MATCH FULL ON UPDATE RESTRICT ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;
WITHOUT_CLASSIFICATION	deletes the last ", " deletes the last ", "
WITHOUT_CLASSIFICATION	ALTER TABLE tableName DROP CONSTRAINT constraintName
WITHOUT_CLASSIFICATION	CREATE VIEW viewName AS definition;
WITHOUT_CLASSIFICATION	myid myid StringTemplate st = new StringTemplate(templateStr);
WITHOUT_CLASSIFICATION	FOREIGN KEY (columnName [,...]) REFERENCES [refTableName] [(refColumnName[,...])] [ON DELETE {CASCADE | RESTRICT | NO ACTION | SET DEFAULT | SET NULL}] [ON UPDATE {CASCADE | SET DEFAULT | SET NULL}]
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	CREATE {[UNIQUE [HASH]] INDEX [[IF NOT EXISTS] newIndexName] | PRIMARY KEY [HASH]} ON (columnName [,...])
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ START WITH $startValue$ " + "INCREMENT BY $incrementValue$ $cache$ $cacheValue$";
WITHOUT_CLASSIFICATION	"SELECT CURRENT_VALUE, 'NONE', 'NONE', CACHE, INCREMENT, 0 " + "FROM INFORMATION_SCHEMA.SEQUENCES " + "WHERE SEQUENCE_SCHEMA = ? " + "AND SEQUENCE_NAME = ? ";
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] FOREIGN KEY (<column list>) REFERENCES <exptablename> (<column list>) [ON {DELETE | UPDATE} {CASCADE | SET DEFAULT | SET NULL}];
WITHOUT_CLASSIFICATION	Ingres requires that columns that are to become not null must have a default value.
WITHOUT_CLASSIFICATION	CREATE SEQUENCE <sequencename> [AS {INTEGER | BIGINT}] [START WITH <startvalue>] [INCREMENT BY <incrementvalue>];
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ $startWith$ " + "$increment$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	convert all columns in key to not null - this doesn't hurt if they are already null.
WITHOUT_CLASSIFICATION	I tried the following for values under 8000 but I get Encountered unexpected exception - line 1, You cannot assign a value of type 'long byte' to a column of type 'byte varying'. Explicitly convert the value to the required type. registerColumnType(Types.VARBINARY, 8000, "byte varying($l)");
WITHOUT_CLASSIFICATION	float(54) produces an exception: invalid column format 'float' on column 'float_column'., SQL State: 42000, Error Code: 2014
WITHOUT_CLASSIFICATION	Alter table <table> add constraint <constraint> foreign key(<column>) references <table>(<column>) on delete set null
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	int featureId = DialectUtils.COLUMN_TYPE_ALTER_TYPE; String msg = DialectUtils.getUnsupportedMessage(this, featureId); throw new UnsupportedOperationException(msg);
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ALTER $columnName$ SET DATA TYPE $dataType$";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	CREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX index_name [index_type] ON tbl_name (index_col_name,...) index_col_name: col_name [(length)] [ASC | DESC] index_type: USING {BTREE | HASH} Note; indexType is unused at the moment because the index dialog doesn't accept this. See below.
WITHOUT_CLASSIFICATION	PostgreSQL follows the standard for SQL BIT. It's a string of BITs. So bit(10) is a string of 10 bits. JDBC treats SQL BIT as if it were only a single BIT. It specifies that BIT is equivalent to BOOLEAN. It claims that the PreparedStatement set method that should be used with BIT is setBoolean and getBoolean. This is not compliant with the standard. So SQL BIT type support is broken in Java, there is nothing we can do about that. Best thing to do for now, is try to convert the BIT type to a boolean like the JDBC spec says and hope for the best. Hope that the source database isn't using the BIT column as a sequence of multiple BITs.
WITHOUT_CLASSIFICATION	Set ON UPDATE action to NO ACTION as Oracle doesn't currently support this. NO ACTION causes the update clause to be omitted.
WITHOUT_CLASSIFICATION	SELECT last_number, max_value, min_value, cache_size, increment_by, cycle_flag FROM USER_SEQUENCES WHERE sequence_name = ?;
WITHOUT_CLASSIFICATION	alter table TEST ALTER MYCHAR SET DEFAULT 'FOO' alter table TEST ALTER MYCHAR DROP DEFAULT
WITHOUT_CLASSIFICATION	drop the existing default value. "ALTER TABLE $tableName$ " + "ALTER $columnName$ DROP DEFAULT";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ " + "$increment$ $startWith$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ " + "$increment$ $minimum$ $maximum$ $startWith$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	GenericDialect must be last, since it will claim that it supports any product/version. That is also why there is no isGenericDialect - it would always return true if there was one, making it useless.
WITHOUT_CLASSIFICATION	double and float have no scale - that is DECIMAL_DIGITS is null. Assume that is because it's variable - "floating" point.
WITHOUT_CLASSIFICATION	ALTER TABLE <TABLENAME> ADD CONSTRAINT NULL_FIELD CHECK (<FIELD> IS NOT NULL)
WITHOUT_CLASSIFICATION	Sort the rows by the property name. Collections.sort(_data, new DataSorter());
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	Firebird doesn't natively support altering a columns nullable property. Will have to simulate in a future release.
WITHOUT_CLASSIFICATION	CREATE GENERATOR EMPNO_GEN; COMMIT; SET TERM !! ; CREATE TRIGGER CREATE_EMPNO FOR EMPLOYEES BEFORE INSERT POSITION 0 AS BEGIN NEW.EMPNO = GEN_ID(EMPNO_GEN, 1); END
WITHOUT_CLASSIFICATION	Dimension dim = getPreferredSize(); dim.width = PREFERRED_WIDTH; setPreferredSize(dim); setRows(3);
WITHOUT_CLASSIFICATION	If the "None" place-holder is in the list in the first position, remove it. It is not possible to select the "None" place-holder upon startup, because it is already selected in the list if it is present.
WITHOUT_CLASSIFICATION	InstantDB (at least version 3.13) only returns "TABLES" for getTableTypes(). If you try to use this in a call to DatabaseMetaData.getTables() no tables will be found. For the moment hard code the types for InstantDB.
WITHOUT_CLASSIFICATION	Some drivers for both MS SQL and Sybase don't return guest as a schema name.
WITHOUT_CLASSIFICATION	The mode_decode routine may or may not be there. We don't care if it is not there, but log an info if we failed to drop it for some other reason.
WITHOUT_CLASSIFICATION	TABLE_CAT TABLE_SCHEM TABLE_NAME COLUMN_NAME DATA_TYPE TYPE_NAME COLUMN_SIZE DECIMAL_DIGITS NUM_PREC_RADIX NULLABLE REMARKS COLUMN_DEF CHAR_OCTET_LENGTH ORDINAL_POSITION IS_NULLABLE
WITHOUT_CLASSIFICATION	Don't bother the user with details about where the result fetch failed if they cancelled the query.
WITHOUT_CLASSIFICATION	/ We use Vectors because a MessageHandler might be called from different threads.
WITHOUT_CLASSIFICATION	If truncate was attempted and not supported, then try delete. If on the other hand delete was attempted, just throw the SQLException that resulted from the delete.
WITHOUT_CLASSIFICATION	all the data from the clob has been read. make sure there are no newlines in it
WITHOUT_CLASSIFICATION	the other obj is null, so see if this non-null obj contains a null value, which is equivilent. Assume that if we have read some of the data and we still have _data == null, then the value in the DB is actually null.
WITHOUT_CLASSIFICATION	Uh-oh! We shouldn't have more than one plugin registering a custom exception handler for a given session. The first one wins and all others get an error message.
WITHOUT_CLASSIFICATION	pid 25493, lock examples: 5 [" /db1/shd_data_4_3/"]User.ygwaBvbPosKorrD(1) 25493 1D, 25499 X E 5 [" /db1/shd_data_4_3/"]User.ygwaBvbPosKorrD(1) 25493 1D, 25499,25506 X,X E,E 5 [" /db1/shd_data_4_3/"]User.ygwaBvbPosKorrD(1) 25493 1D, 25499,25506,25508 X,X,X E,E,E oder 6 [" d:\db\shd_data_lov\"]User.WLagerartikelD(76) 5544 1D, 7 [" d:\db\shd_data_lov\"]User.WLagerartikelD(77) 5544 1D, 3804 S E 8 [" d:\db\shd_data_lov\"]User.WVorgangD(24) 5544 1D, oder fuer kein Lock: 3 [" f:\db\shd_data\"]User.ygwaTestD(989) 3792 1D, 4 [" f:\db\shd_data\"]User.ygwaTestD(990) 3792 1D, 5 [" f:\db\shd_data\"]User.ygwaTestD(991) 3792 1D, 6 [" f:\db\shd_data\"]User.ygwaTestD(992) 3792 1D, 7 [" f:\db\shd_data\"]User.ygwaTestD(993) 3792 1D, 8 [" f:\db\shd_data\"]User.ygwaTestD(994) 3792 1D, 9 [" f:\db\shd_data\"]User.ygwaTestD(995) 3792 1D,
WITHOUT_CLASSIFICATION	/ The colums of the last completed table/view that match the tableNamePat will be returned on top of the collection
WITHOUT_CLASSIFICATION	If source column is type 1111 (OTHER), try to use the column type name to find a type that isn't 1111.
WITHOUT_CLASSIFICATION	JDBC spec says that BIT refers to a boolean column - i.e. a single binary digit with value either "0" or "1". Also the same spec encourages use of getBoolean/setBoolean. However, the SQL-92 standard clearly states that the BIT type is a bit string with length >= 0. So for SQL-92 compliant databases (like PostgreSQL) the JDBC spec's support for BIT is at best broken and unusable. Still, we do what the JDBC spec suggests as that is all that we can do.
WITHOUT_CLASSIFICATION	Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.
WITHOUT_CLASSIFICATION	We still have to bind a value, or else the PS will throw an exception.
WITHOUT_CLASSIFICATION	String sourceSchema = null; MySQL uses catalogs instead of schemas
WITHOUT_CLASSIFICATION	Column is in table 2, but not table 1 - how else would we get here??
WITHOUT_CLASSIFICATION	view name schema name
WITHOUT_CLASSIFICATION	new line to the begining so that sb.append( will be removed new line to the end so that a semi colon at the end will be removed.
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	Span across two columns c.ipadx = 40;
WITHOUT_CLASSIFICATION	Rows "12dlu, 6dlu, 12dlu, 6dlu, 80dlu:grow, 6dlu, 12dlu, 6dlu, 80dlu:grow, 6dlu, pref"
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	Oracle can only store DECIMAL type numbers. Since regular non-decimal numbers appear as "decimal", Oracle's decimal numbers can be rather large compared to other databases (precision up to 38). Other databases can only handle this large precision in BIGINT fields, not decimal, so try to figure out if Oracle is really storing a BIGINT and claiming it is a DECIMAL. If so, convert the type to BIGINT before going any further.
WITHOUT_CLASSIFICATION	For char or date types this is the maximum number of characters, for numeric or decimal types this is precision.
WITHOUT_CLASSIFICATION	This doesn't appear to work for PROGRESS RDBMS result[i] = DBUtil.getTableCount(con, ti.getSimpleName());
WITHOUT_CLASSIFICATION	TODO: tell the user that the selected destination schema is the same as the source schema. monitor.showMessageDialog(...)
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	alter table ti.getSimpleName() add foreign key (fkTableCol) references pkTableName(pkTableCol);
WITHOUT_CLASSIFICATION	final ApplicationFiles appFiles = new ApplicationFiles(); _exportPrefsText.setText(getFileName(here, appFiles.getUserPreferencesFile().getName())); _exportDriversText.setText(getFileName(here, appFiles.getDatabaseDriversFile().getName())); _exportAliasesText.setText(getFileName(here, appFiles.getDatabaseAliasesFile().getName()));
WITHOUT_CLASSIFICATION	Add context menu items to the object tree's session node. as popup menu
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	misc ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------ ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	"server" "port" "database file" "backup file"
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	dbStatus -> `Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=SIMPLE, Version=539, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsTornPageDetectionEnabled, IsAutoCreateStatistic'
WITHOUT_CLASSIFICATION	For reasons that i cannot exmplain, this is out by two, probably due to the border or insets around a cell??
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	Tricky alias and chaining completion examples au to auftr in from Kv auftr where au au to auftr in from Kv.positionen.kv auftr where au positionen. to fields of Kv aggregate positionen in from Kv auftr where auftr.positionen. positionen. to fields of Kv aggregate positionen in from Kv where positionen.
WITHOUT_CLASSIFICATION	... while attributes used in qualified expressions will not be completed qualified. That means for pack.Foo. the completion popup will be placed behind the last dot.
WITHOUT_CLASSIFICATION	double space since this is a new version of the stored procedure (overloading name with different parameters)
WITHOUT_CLASSIFICATION	Force the LAF to be set even if Skin is the current one. This allows a change in theme to take affect.
WITHOUT_CLASSIFICATION	_treeAPI.addToPopup(DatabaseObjectType.SESSION, coll.get(CreateTableAction.class)); _treeAPI.addToPopup(DatabaseObjectType.CATALOG, coll.get(CreateTableAction.class));
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(CreateMysqlTableScriptCommand.class);
WITHOUT_CLASSIFICATION	public ColumnsComboBox(SQLConnection conn, ITableInfo ti) throws SQLException { super(conn.getSQLMetaData().getColumnInfo(ti)); setRenderer(new CellRenderer()); } This renderer uses the unqualified column name as the text to display in the combo. private static final class CellRenderer extends BasicComboBoxRenderer { CellRenderer() { super(); setOpaque(true); } public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) { setText(((TableColumnInfo)value).getColumnName()); return this; } }
WITHOUT_CLASSIFICATION	In an effort to avoid non JDBC standard out parameter types ie oracle specific ones, the dbms_output.get_line is used rather than the dbms_output.getlines. The disadvantage is there are more trips to the server to return multiple lines.
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	Folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	Add the parameter names and types Use the session Id you got from the openSession call here
WITHOUT_CLASSIFICATION	Action performed for the Update button private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) { String query = getQuery(); dbUtils.execute(query); _dlog.setVisible(false); _dlog.dispose(); JOptionPane.showMessageDialog(null, "Field updated"); }
WITHOUT_CLASSIFICATION	private static final ILogger s_log = LoggerController.createLogger(UserParentExpander.class);
WITHOUT_CLASSIFICATION	The TreeModel interface
WITHOUT_CLASSIFICATION	Sets constraints like NOT NULL for the new column, depending on the constraints for the old column.
WITHOUT_CLASSIFICATION	Dec 31 23:59:59 EST 2107 is overflow on FAT file systems, and the call fails
WITHOUT_CLASSIFICATION	The name of the calling client program. This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	String BLINK_CARET = "blinkCaret"; String BLOCK_CARET_ENABLED = "blockCaretEnabled"; String BRACKET_HIGHLIGHTING = "bracketHighlighting"; String BRACKET_HIGHLIGHT_COLOR = "bracketHighlightColor"; String CARET_COLOR = "caretColor";
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	JDK1.5 "@ident" annotation "@keyword" gets returned as two tokens "@" and "keyword"
WITHOUT_CLASSIFICATION	JDK1.5 "@ident" annotation "@keyword" gets returned as two tokens "@" and "keyword"
WITHOUT_CLASSIFICATION	Old test left behind "garbage files" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)
WITHOUT_CLASSIFICATION	/ There are a lot of goodies in the ExtSettingsInitializer that might be interesting in th future. Unfortunately some conflicts with some of Squirrels shortcuts are in ExtSettingsInitializer Settings.removeInitializer(ExtSettingsInitializer.NAME); Settings.addInitializer(new ExtSettingsInitializer(), Settings.CORE_LEVEL); /
WITHOUT_CLASSIFICATION	These should be different since we are providing two different statement separators in SessionProperties
WITHOUT_CLASSIFICATION	We don't add a listener to a button twice because the FindDialogSupport class will call this method with the same button instances whenever the replace dialog is opened. If we add the listener again and again replace will be done as often as the dialog is opened. This is especially nasty if the text to replace is part of the replacement text.
WITHOUT_CLASSIFICATION	MySQL requires MyISAM storage engine for spatial and fulltext indexes. Don't test them for now. See the TODO in the MySQLDialect for getCreateIndexSQL.
WITHOUT_CLASSIFICATION	These two columns will be the only ones in the pktest table. They will start out being nullable, and we will test that the dialect correctly converts them to non-null then applies the PK constraint to them. This test shall not be run against any database dialect that claims not to support changing the nullability of a column.
WITHOUT_CLASSIFICATION	Firebird gives weird exception: unsuccessful metadata update object FKTESTPARENTTABLE is in use; squelch it and continue.
WITHOUT_CLASSIFICATION	This test disabled for now until we figure out a better way to do concurrent modifications to the schemaInfoCache. @Test
WITHOUT_CLASSIFICATION	These tell the Dialect test runner where tables that is creates can be found.
WITHOUT_CLASSIFICATION	catalog schema tableName columnName dataType; 1 == CHAR typeName columnSize decimalDigits radix isNullAllowed defaultValue isNullable
WITHOUT_CLASSIFICATION	private ResultSet mockResultSet = null; private static int[] columnIndices = new int[] { 4, 6, 18, 9, 7, 13, 12, 5, 8, 10, 11, 14, 15, 16, 17 };
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ProgressCallBack#currentlyLoading(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	@see ISQLEntryPanel#hasOwnUndoableManager()
WITHOUT_CLASSIFICATION	@see ISQLEntryPanel#getCaretLineNumber()
WITHOUT_CLASSIFICATION	@see ISQLEntryPanel#addCaretListener(CaretListener)
WITHOUT_CLASSIFICATION	@see ISQLEntryPanel#removeCaretListener(CaretListener)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLEntryPanel#setUndoManager(javax.swing.undo.UndoManager)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileAppend()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileClose()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileNew()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileSaveAs()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileOpen()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#filePrint()
WITHOUT_CLASSIFICATION	@see ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see MouseMotionListener#mouseDragged(MouseEvent)
WITHOUT_CLASSIFICATION	@see BaseDataSetViewerDestination#allRowsAdded()
WITHOUT_CLASSIFICATION	@see IDataSetViewer#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.datasetviewer.IDataSet#get(int)
WITHOUT_CLASSIFICATION	@see BaseDataSetViewerDestination#addRow(Object[])
WITHOUT_CLASSIFICATION	@see BaseDataSetViewerDestination#getRow(row)
WITHOUT_CLASSIFICATION	@see BaseDataSetViewerDestination#allRowsAdded()
WITHOUT_CLASSIFICATION	@see IDataSetViewer#getRowCount()
WITHOUT_CLASSIFICATION	@see IDataSetViewer#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#supportsSchemasInTableDefinition()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getLengthFunction()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getMaxFunction()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getMaxPrecision(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getMaxScale(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getPrecisionDigits(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getColumnLength(int, int)
WITHOUT_CLASSIFICATION	@see MouseListener#mousePressed(MouseEvent)
WITHOUT_CLASSIFICATION	@see MouseListener#mouseReleased(MouseEvent)
WITHOUT_CLASSIFICATION	@see MouseMotionListener#mouseMoved(MouseEvent)
WITHOUT_CLASSIFICATION	@see TableCellRenderer#getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)
WITHOUT_CLASSIFICATION	@see TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see Comparator#compare(Object, Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.datatransfer.Transferable#isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.datatransfer.Transferable#getTransferData(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IQueryTokenizer#getSQLStatementSeparator()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getUserName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDatabaseProductName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDatabaseProductVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDriverName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getJDBCVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCascadeClause()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSchemas()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSchemasInDataManipulation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSchemasInTableDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsStoredProcedures()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSavepoints()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsResultSetType(int)
WITHOUT_CLASSIFICATION	Not cached. (non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCatalogs()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getURL()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCatalogTerm()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getSchemaTerm()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getProcedureTerm()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCatalogSeparator()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogs()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogsInTableDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogsInDataManipulation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogsInProcedureCalls()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getJDBCMetaData()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getMetaDataSet()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTypeInfo() @deprecated Replaced by getDataTypes
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTypesDataSet()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDataTypes()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getProcedures(java.lang.String, java.lang.String, java.lang.String, net.sourceforge.squirrel_sql.fw.sql.ProgressCallBack)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTableTypes()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], net.sourceforge.squirrel_sql.fw.sql.ProgressCallBack)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getUDTs(java.lang.String, java.lang.String, java.lang.String, int[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getNumericFunctions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getStringFunctions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getSystemFunctions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTimeDateFunctions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getSQLKeywords()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getImportedKeysInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getPrimaryKeys(net.sourceforge.squirrel_sql.fw.sql.ITableInfo) @deprecated use getPrimaryKey instead
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getPrimaryKey(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getPrimaryKey(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getProcedureColumns(net.sourceforge.squirrel_sql.fw.sql.IProcedureInfo) @deprecated use getProcedureColumnsDataSet instead
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTablePrivileges(net.sourceforge.squirrel_sql.fw.sql.ITableInfo) @deprecated use getTablePrivilegesDataSet instead
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getVersionColumns(net.sourceforge.squirrel_sql.fw.sql.ITableInfo) @deprecated use getVersionColumnsDataSet instead
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getColumnInfo(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getColumnInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDriver#getWebSiteUrl()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDriver#setWebSiteUrl(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.MetaDataDataSet#get(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.MetaDataDataSet#next(net.sourceforge.squirrel_sql.fw.util.IMessageHandler)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getExportedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getImportedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#initialize(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#uninitialize(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.AbstractTableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.AbstractTableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.AbstractTableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#open()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#close()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getPreview(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getRows()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#next()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#reset()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getInt(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getDate(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getConfigurationPanel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#open()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#close()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getPreview(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#reset()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getRows()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#next()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getInt(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getDate(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getConfigurationPanel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#statementExecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.StatementEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyFinished(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyStarted()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#recordCopied(net.sourceforge.squirrel_sql.plugins.dbcopy.event.RecordEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#statementExecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.StatementEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyFinished(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyFinished(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#handleError(net.sourceforge.squirrel_sql.plugins.dbcopy.event.ErrorEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.CopyPreference#deleteTableData(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#analyzingTable(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableAnalysisStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.AnalysisEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#analyzingTable(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableAnalysisStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.AnalysisEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyFinished(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#recordCopied(net.sourceforge.squirrel_sql.plugins.dbcopy.event.RecordEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#statementExecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.StatementEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyFinished(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#handleError(net.sourceforge.squirrel_sql.plugins.dbcopy.event.ErrorEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getDestSelectedDatabaseObject()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#setDestSelectedDatabaseObject(net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getExternalService()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getLicenceFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginAppSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#load(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.ISessionPlugin#sessionStarted(net.sourceforge.squirrel_sql.client.session.ISession)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.DefaultPlugin#getContributors()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getCopySourceSession()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#setCopySourceSession(net.sourceforge.squirrel_sql.client.session.ISession)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getSelectedDatabaseObjects()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getCopyDestSession()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#setDestCopySession(net.sourceforge.squirrel_sql.client.session.ISession)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getDestSelectedDatabaseObject()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	IDataTypeComponent interface methods @see net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IDataTypeComponent#canDoFileIO()
WITHOUT_CLASSIFICATION	IDataTypeComponent interface methods @see net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IDataTypeComponent#canDoFileIO()
WITHOUT_CLASSIFICATION	IDataTypeComponent interface methods @see net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IDataTypeComponent#canDoFileIO()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.smarttools.gui.ISmarttoolFrame#setFocusToFirstEmptyInputField()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#initialize(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#uninitialize(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent() Return the panel that will contain the prefernces ui. @return Panel containing preferences.
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.event.ISQLExecutionListener#statementExecuted(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.event.ISQLExecutionListener#statementExecuting(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLEntryPanel#setUndoManager(javax.swing.undo.UndoManager)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLEntryPanel#setUndoManager(javax.swing.undo.UndoManager)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getExternalService()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getLicenceFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginAppSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#load(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#load(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getExternalService()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getLicenceFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginAppSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.lang.Comparable#compareTo(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData#getExportedKeysInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData#getImportedKeysInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getExportedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getImportedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#setExportedKeys(net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#setImportedKeys(net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.util.IMessageHandler#showWarningMessage(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInDataManipulation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInDataManipulation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#getTableTypes()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#getDatabaseProductName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#getDatabaseProductName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#allProceduresAreCallable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#allTablesAreSelectable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#deletesAreDetected(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#doesMaxRowSizeIncludeBlobs()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#insertsAreDetected(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#isCatalogAtStart()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#isReadOnly()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#locatorsUpdateCopy()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullPlusNonNullIsNull()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedAtEnd()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedAtStart()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedLow()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#othersDeletesAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#othersInsertsAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#othersUpdatesAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#ownDeletesAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#ownInsertsAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#ownUpdatesAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#setupDriverName(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesLowerCaseIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesLowerCaseQuotedIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesMixedCaseIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesMixedCaseQuotedIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesUpperCaseIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesUpperCaseQuotedIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsAlterTableWithAddColumn()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsAlterTableWithDropColumn()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsANSI92EntryLevelSQL()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsANSI92FullSQL()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsANSI92IntermediateSQL()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsBatchUpdates()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInIndexDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInPrivilegeDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInProcedureCalls()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInTableDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsColumnAliasing()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsConvert()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsConvert(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCoreSQLGrammar()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCorrelatedSubqueries()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsDataDefinitionAndDataManipulationTransactions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsDataManipulationTransactionsOnly()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsDifferentTableCorrelationNames()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsExpressionsInOrderBy()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsExtendedSQLGrammar()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsFullOuterJoins()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGetGeneratedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGroupBy()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGroupByBeyondSelect()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGroupByUnrelated()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsIntegrityEnhancementFacility()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsLikeEscapeClause()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsLimitedOuterJoins()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMinimumSQLGrammar()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMixedCaseIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMixedCaseQuotedIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMultipleOpenResults()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMultipleResultSets()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMultipleTransactions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsNamedParameters()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsNonNullableColumns()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenCursorsAcrossCommit()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenCursorsAcrossRollback()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenStatementsAcrossCommit()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenStatementsAcrossRollback()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOrderByUnrelated()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOuterJoins()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsPositionedDelete()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsPositionedUpdate()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsResultSetConcurrency(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsResultSetHoldability(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsResultSetType(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSavepoints()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInIndexDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInPrivilegeDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInProcedureCalls()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInTableDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSelectForUpdate()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsStatementPooling()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsStoredProcedures()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInComparisons()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInExists()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInIns()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInQuantifieds()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsTableCorrelationNames()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsTransactionIsolationLevel(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsTransactions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsUnion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsUnionAll()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#updatesAreDetected(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#usesLocalFilePerTable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#usesLocalFiles()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.lang.Comparable#compareTo(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.BaseMainPanelTab#refreshComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.IMainPanelTab#getComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.IMainPanelTab#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.IMainPanelTab#getTitle()
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	Nothing to do.
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	Save Application level SQL history.
WITHOUT_CLASSIFICATION	Save options selected for Cell Import Export operations
WITHOUT_CLASSIFICATION	Save options selected for Edit Where Columns
WITHOUT_CLASSIFICATION	AliasMaintSheetFactory.initialize(this); DriverMaintSheetFactory.initialize(this);
WITHOUT_CLASSIFICATION	AliasMaintSheetFactory.initialize(this); DriverMaintSheetFactory.initialize(this);
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filterCboStartsWith=starts with]
WITHOUT_CLASSIFICATION	i18n[sqlval.info=This plugin uses version 1.0 of the SQL Validator Web Service developed by MimerSQL http:sqlvalidator.mimer.com. The SQL Statement is stored anonymously to be used by the ISO SQL Standards committee.]
WITHOUT_CLASSIFICATION	i18n[dataTypeOther.sqlOtherType=SQL Other (SQL type 1111)]
WITHOUT_CLASSIFICATION	i18n[editextras.month=Month]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.error.creditsfile=Error reading credits file]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.errorReadingFile=There was an error while reading file {0}.\nThe error was:\n{1}]
WITHOUT_CLASSIFICATION	i18n[CreateTableScriptCommand.jdbcOdbcMessage=JDBC-ODBC Bridge doesn't provide all of the necessary metadata. The script may be incomplete.]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.close=Close]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsExecute=Execute]
WITHOUT_CLASSIFICATION	i18n[DB2Plugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.updateDownloadFailedTitle=Update Download Failed]
WITHOUT_CLASSIFICATION	Create checkbox for enabling auto refresh i18n[oracle.dboutputEnableAutoRefer=Enable auto refresh]
WITHOUT_CLASSIFICATION	i18n[DataCache.msg.driverRegisteredSucessfully=Driver class {0} sucessfully registered for driver definition: {1}]
WITHOUT_CLASSIFICATION	i18n[dataSetViewereditableTablePanel.error2=Error]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.executeButtonLabel=Execute]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError6=Export Error]
WITHOUT_CLASSIFICATION	i18n[dataTypeBigDecimal.precisionEceeded=Precision Exceeded: Number of digits in number ({0})\nis greater than allowed in column ({1})]
WITHOUT_CLASSIFICATION	i18n[editextras.second=Second]
WITHOUT_CLASSIFICATION	i18n[mssql.windows=Windows text (ANSI)]
WITHOUT_CLASSIFICATION	i18n[DB2Plugin.showUdfSource=Show UDF source]
WITHOUT_CLASSIFICATION	i18n[Application.splash.loadsqlhistory=Loading SQL history...]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.tableNameLabel=Table Name: ]
WITHOUT_CLASSIFICATION	i18n[DerbyDialect.typeMessage=Derby doesn't allow the column type to be altered]
WITHOUT_CLASSIFICATION	i18n[exportconfig.xmlErrorWritingTo=XML Error writing to\n{0}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError2=Export Error]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.catalogLabel=Catalog:]
WITHOUT_CLASSIFICATION	i18n[oracle.parseCalla=Parse Calls]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.unknownerror=Unknown error during check on DB. Update is probably not safe.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[graph.scriptPlugNeeded=Scripting is only available with the SQL Scripts Plugin.\nGet the plugin from www.squirrelsql.org. It's free.]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.tableNameLabel=Table Name: ]
WITHOUT_CLASSIFICATION	i18n[editextras.year=Year]
WITHOUT_CLASSIFICATION	i18n[Application.splash.loaddatatypeprops=Loading Data Type Properties...]
WITHOUT_CLASSIFICATION	i18n[oracle.triggerDetails=Details]
WITHOUT_CLASSIFICATION	i18n[graph.showZoomPaper=Show/Zoom paper edges]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[dataTypeUnknown.unknownTypes=Unknown DataTypes (non-standard SQL type codes)]
WITHOUT_CLASSIFICATION	i18n[mssql.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[PasteTableAction.error.multischemapaste=The paste operation may only be applied to one schema at a time]
WITHOUT_CLASSIFICATION	i18n[graph.showddl=show DDL]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.hint=Here you may pecify which Schemas to be loaded and displayed in a Session's Object tree. Code completion and Syntax highlighting will work only for loaded schemas. If Schemas take a long time to load you may cache them on your hard disk. Then loading will take long only when you open a Session for the first time. You can always refesh the cache either by using the Session's 'Refresh all' toolbar button or by using the 'Refresh Item' right mouse menu on an Object tree node.]
WITHOUT_CLASSIFICATION	i18n[HibernateTabController.noConfigSelected=Please select a Hibernate configuration to connect to.\nHibernate configurations can be defined in the global preferences window.\nWould you like to open the window now?]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.allTranslationsLabel=All translations]
WITHOUT_CLASSIFICATION	i18n[sqlval.logon=SQL Validation Logon]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filterCboEndsWith=ends with]
WITHOUT_CLASSIFICATION	i18n[CreateTableOfCurrentSQLCommand.noQuery=No query found to create the script from.]
WITHOUT_CLASSIFICATION	i18n[sqlscript.dropIfExists=Drop table if exists]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.updateproblem=There was a problem reported during the update. The DB message was:\n{0}\nThis may or may not be serious depending on the above message.\nThe data was probably not changed in the database.\nYou may need to refresh the table to get an accurate view of the current data.]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.selectImportDataFile=You must select an existing file to import data from.]
WITHOUT_CLASSIFICATION	i18n[sqlscript.tableScriptOk=OK]
WITHOUT_CLASSIFICATION	i18n[dataTypeBigDecimal.newlinesAsbackslashN=Show newlines as \\n within cells]
WITHOUT_CLASSIFICATION	Create checkbox for enabling auto refresh i18n[oracle.auotRefresh2=Enable auto refresh]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.creditspanelcreatetime=CreditsPanel created in ]
WITHOUT_CLASSIFICATION	i18n[graph.cm=cm]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.allPluginsLabel=All plugins]
WITHOUT_CLASSIFICATION	checkbox for whether to interpret input leniently or not i18n[dateTypeTimestamp.allowInexact=allow inexact format on input]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptConstr=Include constraints to tables not in selection]
WITHOUT_CLASSIFICATION	i18n[SQLTab.hint=Execute SQL statements]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.changesRecordedTitle=Changes Recorded]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.colDescription=\nColumn\nDescription\n]
WITHOUT_CLASSIFICATION	i18n[syntax.cols=Columns]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.connectionFailureDialogMsg=Unable to download release.xml from the specified location]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.closeAllButThis=Close all but this]
WITHOUT_CLASSIFICATION	i18n[graph.printGraph=Print graph]
WITHOUT_CLASSIFICATION	i18n[mysql.enterDbName=Enter database name]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsEdit=Edit...]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.xmlWarning5=XML Warning]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.importError2=Import Error]
WITHOUT_CLASSIFICATION	i18n[BaseListInternalFrame.error.execdoubleclick=Error occured executing doubleclick event]
WITHOUT_CLASSIFICATION	i18n[UdfDetailsTab.hint=Display UDF details]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.statusBarBackgroundColorChooserDialogTitle=Select Background Color for Status Bar]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadfaqfile=Error retrieving FAQ from URL = {0}]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.metaData=Meta Data:]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.useTab=Tab seperated]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.aboutpanelcreatetime=AboutPanel created in ]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.columnNameLabel=Column: ]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.inputFileEncoding=Input file encoding]
WITHOUT_CLASSIFICATION	i18n[graph.delGraph=Do you really wish to delete this graph?]
WITHOUT_CLASSIFICATION	i18n[sqlval.dbmsVersion=DBMS Version:]
WITHOUT_CLASSIFICATION	some kind of problem - tell user i18n[DataSetUpdateableTableModelImpl.error.preparingdelete=While preparing for delete, saw exception:\n{0}]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.ioException=An error occured while reading the input file.]
WITHOUT_CLASSIFICATION	i18n[dataTypeDate.medium=Medium ({0})]
WITHOUT_CLASSIFICATION	i18n[graph.btnOk=OK]
WITHOUT_CLASSIFICATION	i18n[DualProgressBarDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[Session.driverComplianceTitle=JRE/JDBC Version Mismatch]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.fileLabel=File]
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.jdbcEscape=Use JDBC standard escape format ]
WITHOUT_CLASSIFICATION	i18n[syntax.background=Select background color]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.toolbarBackgroundColorChooserDialogTitle=Select Background Color for Toolbar]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.quoteToolTip=Identifiers appear in quotes]
WITHOUT_CLASSIFICATION	i18n[sqlscript.successCreate=Successfully created table {0}]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.noCommand=You must provide a command string or uncheck "Execute command".]
WITHOUT_CLASSIFICATION	i18n[graph.removeGraph=Remove graph]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.staleupdaterow=This row in the Database has been changed since you refreshed the data.\nNo rows will be updated by this operation.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.importWarning=Import Warning]
WITHOUT_CLASSIFICATION	i18n[graph.dina4=Din A 4]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.okButtonLabel=OK]
WITHOUT_CLASSIFICATION	i18n[graph.width=Width]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.showButtonLabel=Show SQL]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.addColumnTitle=Add Column]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.duplicateline=duplicateline]
WITHOUT_CLASSIFICATION	i18n[userscript.executing=Executing Script...]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.faq=FAQ]
WITHOUT_CLASSIFICATION	i18n[EditExtrasAccessor.editextrasPluginNeeded=Quoting is only available with the Edit Extras Plugin.\nGet the plugin from www.squirrelsql.org. It's free.]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.firebirdcommit=Firebird requires commit table create before inserting records. Please adjust your preferences.]
WITHOUT_CLASSIFICATION	i18n[userscript.selClasspathToDel=Please select the classpath entry to delete]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.usePKLabel=Use PK]
WITHOUT_CLASSIFICATION	i18n[graph.selGraphToAdd=Select the graph to add the selected tables to]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheFilePath=Cache file path for Alias "{0}": {1}]
WITHOUT_CLASSIFICATION	i18n[dataTypeTimestamp.medium=Medium ({0})]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.close=Close]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.showToolbar=Show toolbar]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.missingClobDataMsg=Found Clob placeholder ({0}) amongst data to be exported. Continue exporting cell data?]
WITHOUT_CLASSIFICATION	i18n[DualProgressBarDialog.copyingTablesLabel=Copying table]
WITHOUT_CLASSIFICATION	i18n[graph.dbOrder=db order]
WITHOUT_CLASSIFICATION	i18n[graph.invalidHeight=Invalid height]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.classPathRemove=Remove selected entries]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.unknownerror=Unknown error during check on DB. Update is probably not safe.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.error.creditsfileurl=Couldn't retrieve Credits File URL]
WITHOUT_CLASSIFICATION	i18n[editextras.errorQuoteSql=Error processing Quote SQL command: {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.fileOptions=File Options]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsRemove2=Remove]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.runGC=Run garbage collection]
WITHOUT_CLASSIFICATION	i18n[SplashScreen.error.updatingprogressbar=Error occured updating progress bar]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.exceptionduringcheck=Exception seen during check on DB. Exception was:\n{0}\nUpdate is probably not safe to do.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.PrefsTabTitle=Code Completion]
WITHOUT_CLASSIFICATION	i18n[DataImportGlobalPreferencesTab.hint=Preferences for data import]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.autoCheckFrequency=How often to check for updates:]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.tableNameLabel=Table Name: ]
WITHOUT_CLASSIFICATION	i18n[Application.splash.loadcellselections=Loading Cell Import/Export selections...]
WITHOUT_CLASSIFICATION	i18n[Application.info.jdbcwriter=Attempting to set JDBC debug log to writer]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.tableLabel=Table(s):]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.desc=Please enter the fully qualified class name of a SessionFactorImpl provider class. The compiled class file must be in one of your additional classpath entries.]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadpluginhelp=Error generating Help entry for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.ok=OK]
WITHOUT_CLASSIFICATION	label for type combo - used to enable/disable text associated with the combo i18n[dataTypeBigDecimal.read2=Read]
WITHOUT_CLASSIFICATION	i18n[hashtabledataset.key=Key]
WITHOUT_CLASSIFICATION	i18n[codecompletion.function.mustEndWith=function must end with ',']
WITHOUT_CLASSIFICATION	i18n[CopyDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingCatalogs=Loading catalogs]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.updateActionLabel=Action to take on update:]
WITHOUT_CLASSIFICATION	i18n[graph.scriptdd=script DDL]
WITHOUT_CLASSIFICATION	i18n[mysql.copyCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[syntax.autoCorrApply=Apply]
WITHOUT_CLASSIFICATION	i18n[PostgreSqlXmlTypeDataTypeComponent.cellErrorMsg=<Error: see log file>]
WITHOUT_CLASSIFICATION	i18n[ActionCollection.createActionError=Error occured creating Action: {0}]
WITHOUT_CLASSIFICATION	i18n[graph.newName=Please enter a new name]
WITHOUT_CLASSIFICATION	i18n[ResultTab.cannotedit=This SQL can not be edited.]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerTablePanel.conversionError=Conversion Error]
WITHOUT_CLASSIFICATION	i18n[dataTypeTime.full=Full ({0})]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.updateRefActionToolTip=Append ON UPDATE ...]
WITHOUT_CLASSIFICATION	i18n[syntax.tables=Tables]
WITHOUT_CLASSIFICATION	i18n[sqlval.clientLogon=Client:]
WITHOUT_CLASSIFICATION	i18n[i18n.failedToParse=Failed to parse {0}\n{1}]
WITHOUT_CLASSIFICATION	i18n[HtmlViewerPanel.error.displayurl=Error displaying URL]
WITHOUT_CLASSIFICATION	i18n[DerbyDialect.varcharMessage=Derby only allows varchar columns to be altered]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	Add import control i18n[popupeditableIoPanel.import44=Import]
WITHOUT_CLASSIFICATION	i18n[syntax.literals=Literals]
WITHOUT_CLASSIFICATION	here we've hit the second line of a multi-line i18n stanza Just skip it, we're not that sophisticated.
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.failedToWriteFile=Failed to write file\n{0}\nError message\n{1}\nSee last log entry for details.]
WITHOUT_CLASSIFICATION	i18n[codecompletion.function.needsTwoArgs=function needs at least two arguments]
WITHOUT_CLASSIFICATION	i18n[ViewSourceTab.display=Show view source]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.commentLabel=Comment: ]
WITHOUT_CLASSIFICATION	i18n[sqlval.noSql=No SQL specified]
WITHOUT_CLASSIFICATION	i18n[graph.mnuDelete=delete]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.defaultValueLabel=Default Value: ]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.commandChooserButton=Choose]
WITHOUT_CLASSIFICATION	i18n[SupportedRefactoringsTab.hint=Show refactorings that are supported by the plugin]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.editButtonLabel=Edit SQL]
WITHOUT_CLASSIFICATION	i18n[ResultTab.metadataTabTitle=MetaData]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.PrefsTabTitleHint=Configure Code Completion]
WITHOUT_CLASSIFICATION	label for the date format combo, used to enable/disable text i18n[dataTypeDate.orlocaleIndependent= or locale-dependent format:]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.readClobsFullyCheckBoxTT=Read all CLOB data when the Contents tab is displayed]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.currentVersionPrefix=Current Version:]
WITHOUT_CLASSIFICATION	i18n[laf.lafPerformanceWarning=Also note: Some Look and Feels may cause performance problems. If you think your selected Look and Feel slows down SQuirreL switch to a Metal or Plastic Look and Feel.]
WITHOUT_CLASSIFICATION	i18n[i18n.notGeneratedInWorkDir=File {0} has not been generated. Cannot continue.]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.ReallyRemoveConfig=Are you sure you want to delete configuration "{0}".]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.alwaysFormat=Always format]
WITHOUT_CLASSIFICATION	i18n[oracle.execution=Executions]
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	i18n[userscript.codeTemplate=Script code template]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.driverName=JDBC driver name (Hibernate)]
WITHOUT_CLASSIFICATION	i18n[DerbyPlugin.prefsTitle=Derby]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.sqlResults=SQL Results:]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.showButtonLabel=Show SQL]
WITHOUT_CLASSIFICATION	i18n[DumpSessionAction.warning=<HTML><BODY><B>Warning:</B> Plain<BR>text passwords<BR>may be saved<BR>in this file.</BODY></HTML>]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.settingsLabel=Settings]
WITHOUT_CLASSIFICATION	i18n[SQLFilterAction.singleObjectMessage=You must have a single table or view selected to activate the SQL Filter]
WITHOUT_CLASSIFICATION	i18n[mysql.droppingDBs=Dropping database(s)]
WITHOUT_CLASSIFICATION	i18n[LogPanel.logInfoLabel=Logs: Errors {0}, Warnings {1}, Infos {2}]
WITHOUT_CLASSIFICATION	i18n[graph.format=Format ...]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScripts=Scripts]
WITHOUT_CLASSIFICATION	i18n[syntax.bold=Bold]
WITHOUT_CLASSIFICATION	i18n[ArtifactStatus.coreLabel=core]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.sessionTimezoneLabel=Initialize Session Timezone]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorResolvingFile=Error resolving file name]
WITHOUT_CLASSIFICATION	Copy i18n files to i18n downloads directory
WITHOUT_CLASSIFICATION	i18n[userscript.scriptProps=Script properties]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.title=Results]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.bindclobfailure=bindBlobVar: failed to bind blob using filesystem - attempting to bind blob using memory]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryItemWrapper.lastUsed=Last used]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryItemWrapper.sql=SQL]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFactPersUnit=persitence-unit name:]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.triggerHint=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorCreatingFile=Error occured reading from preferences file: {0}]
WITHOUT_CLASSIFICATION	i18n[ThreadCheckingRepaintManager.workinwrongthread=GUI work done in wrong thread]
WITHOUT_CLASSIFICATION	i18n[TimeDateFunctionsTab.title=Time/Date Functions]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.deleteRefActionCheckboxLabel=Add delete referential action to the FK definition]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.yes=yes]
WITHOUT_CLASSIFICATION	i18n[SupportedRefactoringsTab.title=Supported Refactorings]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.Cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorSavingDrivers=Error saving drivers]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.sessionInfo.toString3=Session: ID={0}, Alias={1}: created at {2}, closed at {3}, finalized at {4}]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.editFactoryProvider=Edit]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.comment=comment]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.failedToExecuteCommand=Failed to execute\n{0}\nError message\n{1}\nSee last log entry for details.]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.searchableTypePredNone=no support]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.importingDataInto=Importing data into {0}]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.borderTitle=Refactoring Preferences]
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.ApplyNow=Apply now]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.multimatchingrows=Muliple rows in DB match current row in table - cannot re-read data.]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.tableHeader.schema=Schema]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.fileChooserTitel=Choose export file]
WITHOUT_CLASSIFICATION	i18n[graph.saveGraphImagesToFile=Copy graph to clipboard]
WITHOUT_CLASSIFICATION	i18n[sqlval.logonClose=Close]
WITHOUT_CLASSIFICATION	i18n[userscript.execOnTargets=Execute script on selected targets]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.columnSeparator=Column Separator:]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.updateDownloadFailedMsg=Please consult the log for details]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.objectTreeBackgroundColorChooserDialogTitle=Select Background Color for Object Tree]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.canceleRequested=Query execution cancel requested by user.]
WITHOUT_CLASSIFICATION	i18n[mapdataset.unsupported=<Unsupported>]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.seperatorCharToolTip=Specify the character that is used to seperate the columns in this file (e.g. ',' or ';')]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.useChar=Seperated by character:]
WITHOUT_CLASSIFICATION	i18n[syntax.prefUsePlain=Use plain editor]
WITHOUT_CLASSIFICATION	i18n[Application.error.loadcolsinfo=Unable to load Edit 'Where' Columns selections.]
WITHOUT_CLASSIFICATION	i18n[graph.showQualifiedTableNames=Show qualified table names]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptClass=Script class]
WITHOUT_CLASSIFICATION	i18n[sqlscript.scriptWritten=Script was written to the SQL editor of the main session window.]
WITHOUT_CLASSIFICATION	tell user that there was a problem i18n[baseDataSetViewerDestination.error=Error]
WITHOUT_CLASSIFICATION	i18n[graph.refreshTable=Refresh table]
WITHOUT_CLASSIFICATION	i18n[oracle.displaySnstanceDetails=Display instance details]
WITHOUT_CLASSIFICATION	i18n[ActionCollection.actionNotFound=Action {0} not found in ActionCollection.]
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.closeButtonLabel=Close]
WITHOUT_CLASSIFICATION	i18n[userscript.execOutput=Script execution output]
WITHOUT_CLASSIFICATION	Copy core files minus any i18n jars to core downloads directory
WITHOUT_CLASSIFICATION	i18n[ArtifactStatus.pluginLabel=plugin]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.desc=Description:]
WITHOUT_CLASSIFICATION	i18n[ValidatorGlobalPreferencesTab.hint=Preferences for SQL validation]
WITHOUT_CLASSIFICATION	i18n[SpecialColumnMapping.FIXED_VALUE=Fixed value]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.info.norowsupdated=No rows updated.]
WITHOUT_CLASSIFICATION	i18n[userscript.confirmRemove=Do you want to remove script {0} from the list?]
WITHOUT_CLASSIFICATION	i18n[i18n.executingCommand=Executing command: {0}]
WITHOUT_CLASSIFICATION	i18n[mmsql.textFiles=Text Files]
WITHOUT_CLASSIFICATION	i18n[editextras.errorProcessingFormat=Error processing Format SQL command: {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.monitor=Monitor]
WITHOUT_CLASSIFICATION	i18n[PostgreSqlXmlTypeDataTypeComponent.cellErrorMsg=<Error: see log file>]
WITHOUT_CLASSIFICATION	i18n[ModifyDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[sqlval.user=User:]
WITHOUT_CLASSIFICATION	i18n[hashtabledataset.value=Value]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.displaydocument=Error displaying document]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.channelLabel=Channel:]
WITHOUT_CLASSIFICATION	i18n[mysql.copyTable=Copy Table...]
WITHOUT_CLASSIFICATION	i18n[LockDetailsTab.hint=Display Locks]
WITHOUT_CLASSIFICATION	i18n[syntax.osterWarning=You are using the Oster editor. Please consider using the Netbeans editor. See menu File --> New Session Properties --> Syntax]
WITHOUT_CLASSIFICATION	i18n[ResultTab.infoTabTitle=Info]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.general=General]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.nonStickyPanel=Cannot make a cancel panel sticky]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.cancelSucceededLate=Canceling statement succeeded now. But took longer than one second.]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.sqlExecTabs=SQL Execution Tabs:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileError=File Name Error]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.NoConfigToRemove=No configuration selected to remove.]
WITHOUT_CLASSIFICATION	i18n[syntax.errAbrev=error / abreviation]
WITHOUT_CLASSIFICATION	i18n[userscript.showInStandardMenues1=Show in standard menues]
WITHOUT_CLASSIFICATION	i18n[i18n.noEditorCommand=Can not open files withou an editor command.]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.header=SQuirreL SQL Client Application Dump {0}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError5=Export Error]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.qualifyCheckboxLabel=Qualify table names in scripts with schema]
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.defaultFormat=Use default format ]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesTab.title=Refactoring]
WITHOUT_CLASSIFICATION	i18n[syntax.prefSyntax=Syntax]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filterCboRegEx=regular exp]
WITHOUT_CLASSIFICATION	i18n[ObjectTreeTab.title=Objects]
WITHOUT_CLASSIFICATION	i18n[DualProgressBarDialog.copyingRecordsLabel=Copying records]
WITHOUT_CLASSIFICATION	i18n[ArtifactStatus.translationLabel=translation]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.maptype=Couldn't map type for table='{0}' column='{1}']
WITHOUT_CLASSIFICATION	i18n[mysql.btRemove=Remove]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.error.systemprops=Error occured displaying System Properties]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.tolowercase=tolowercase]
WITHOUT_CLASSIFICATION	_treeAPI.addDetailTab(DatabaseObjectType.PROCEDURE, new ProcedureSourceTab(i18n.SHOW_PROCEDURE_SOURCE));
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.sessionInfo.toString2=Session: ID={0}, Alias={1}: created at {2}]
WITHOUT_CLASSIFICATION	i18n[DefaultDatabaseExpander.error.retrieveuserroles=Unable to retrieve user roles]
WITHOUT_CLASSIFICATION	i18n[CreateDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.data=Data]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.removeMultiLineCommentLabel=Remove multi-line comments (...) from SQL before executing
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.commandChooserTitel=Choose command executable]
WITHOUT_CLASSIFICATION	i18n[graph.noSel=No selection]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.pageloaded=Page loaded.]
WITHOUT_CLASSIFICATION	i18n[oracle.sorts=Sorts]
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.title=Session startup time hint]
WITHOUT_CLASSIFICATION	i18n[i18n.executingCommandFailed=Execution failed with error: {0}]
WITHOUT_CLASSIFICATION	i18n[oracle.displayDetails=Display index details]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.applyFilter=Apply]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.title=Name of SessionFactorImpl provider]
WITHOUT_CLASSIFICATION	label for type combo - used to enable/disable text associated with the combo i18n[dataTypeBlob.read=Read]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.withHeaders=Include column headers]
WITHOUT_CLASSIFICATION	i18n[mssql.currentActivity=Current Activity]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError=Export Error]
WITHOUT_CLASSIFICATION	i18n[ProgressCallBackDialog.initialLoadingPrefix=Loading...]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptAdminErr=Err Msg]
WITHOUT_CLASSIFICATION	i18n[ActionCollection.createActionInfo=Attempting to load action class - {0}]
WITHOUT_CLASSIFICATION	i18n[xmlRefomatter.xmlWarning=XML Warning]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingKeywords=Loading keywords]
WITHOUT_CLASSIFICATION	i18n[mssql.general=General]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.nullableLabel=Nullable: ]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotCreateTempFile=Cannot create temp file..\nError was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.procedureSeparatorToolTip=Multiple statements within a procedure or function can be terminated with this.]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheFilePathNotExists=Cache file for Alias "{0}" does not exist. If it existed the path would be: {1}]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.installOptionsLabel=Install Options]
WITHOUT_CLASSIFICATION	add button to execute external command i18n[popupeditableIoPanel.execute34=Execute]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.dropPrimaryKeyUnsupported={0} doesn''t support dropping primary keys]
WITHOUT_CLASSIFICATION	i18n[mssql.objectsOn=Objects on {0}:]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.title=Update Summary]
WITHOUT_CLASSIFICATION	i18n[hibernate.HibernateTabPanel.openConfigs=Open Hibernate configurations]
WITHOUT_CLASSIFICATION	i18n[oracle.sessionDetails=Details]
WITHOUT_CLASSIFICATION	i18n[graphToFile.ImageFileSpec=JPG image format]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.replace=replace]
WITHOUT_CLASSIFICATION	i18n[CopyTablesCommand.progressDialogTitle=Analyzing FKs in Tables to Copy]
WITHOUT_CLASSIFICATION	i18n[DataImportGlobalPreferencesTab.title=Data import]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.spWithoutParams=SP without params]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[HQLEntryPanelManager.unquoteHQL=Unquote HQL]
WITHOUT_CLASSIFICATION	i18n[syntax.selColor=Select Color]
WITHOUT_CLASSIFICATION	i18n[EditWhereColsAction.singleObjectMessage=You must have a single table selected to limit the colums used in the Edit WHERE clause]
WITHOUT_CLASSIFICATION	i18n[sqlval.logonOk=OK]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.updateCheckTitle=Update Check]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.col.prefix=Prefix]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.info.updateidenticalrows=This operation will update {0} identical rows.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileDoesNotExist=File {0} does not exist,\nor is not a readable, normal file.\nPlease enter a valid file name or use Browse to select a file.]
WITHOUT_CLASSIFICATION	i18n[syntax.prefUseNetbeans=Use Netbeans editor (recommended)]
WITHOUT_CLASSIFICATION	i18n[userscript.showInStandardMenues=Show in standard menues]
WITHOUT_CLASSIFICATION	i18n[HQLEntryPanelManager.quoteHQLsb=Quote HQL as StingBuffer]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.url=JDBC Url (Hibernate)]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[syntax.dataTypes=Data Types]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.title=Update Manager]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.classpathEntryDesc=Jars, Zips or directories]
WITHOUT_CLASSIFICATION	i18n[syntax.replaceNetbeansOnly=Replace is only available when the Netbeans editor is used.\nSee menu File --> New Session Properties --> Tab Syntax]
WITHOUT_CLASSIFICATION	i18n[Session.driverCompliance=The driver being used for alias ''{0}'' is not JDBC 2.1 compliant.\nYou should consider getting a more recent version of this driver]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.dateFormat=Date format]
WITHOUT_CLASSIFICATION	i18n[InformixExceptionFormatter.positionLabel=Position: ]
WITHOUT_CLASSIFICATION	i18n[cellDataPopup.valueofColumn=Value of column {0}]
WITHOUT_CLASSIFICATION	i18n[sqlscript.enterNameOfTable=Enter name of table:]
WITHOUT_CLASSIFICATION	i18n[syntax.resWords=Reserved Words]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptIxAfterEach=Constraints and indexes after each table]
WITHOUT_CLASSIFICATION	i18n[syntax.removeRows=remove selected rows]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.editBookmark=Edit bookmark]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.urlLabel=Url:]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnTextEdit=Edit]
WITHOUT_CLASSIFICATION	i18n[SchemaTableCboItem.schemaID.loadButDontCache=Load but don't cache]
WITHOUT_CLASSIFICATION	i18n[mysql.copyToNewTable=Copy to new Table:]
WITHOUT_CLASSIFICATION	i18n[oracle.bufferPerExec=Buffer Gets per Exec]
WITHOUT_CLASSIFICATION	i18n[SchemaTableUpdateWhatItem.procedures=Procedures]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[syntax.functions=Functions]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.modifyButtonLabel=Modify Column]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesTab.title=SQL Scripts]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.localPathLabel=Local Path:]
WITHOUT_CLASSIFICATION	i18n[PleaseWaitDialog.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[userscript.propsDlgCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.tableHeader.procedures=Procedures]
WITHOUT_CLASSIFICATION	i18n[DumpSessionAction.error=Error occured dumping session: {0}]
WITHOUT_CLASSIFICATION	i18n[graph.showConstr=Show constraint names]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.repositoryTabLabel=Repository]
WITHOUT_CLASSIFICATION	i18n[mssql.options=Options]
WITHOUT_CLASSIFICATION	i18n[oracle.diskReads=Disk Reads]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptCompletedErr=Script completed with errors]
WITHOUT_CLASSIFICATION	i18n[ObjectTreeTab.hint=Show database objects]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.addPrimaryKeyUnsupported={0} doesn''t support adding primary keys]
WITHOUT_CLASSIFICATION	i18n[UdfDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.left=Left]
WITHOUT_CLASSIFICATION	i18n[syntax.osterExplain=Note: The preferable editor is the Netbeans editor. The Netbeans editor\n - is less memory consuming,\n - its highlightning is more exact,\n - can handle many lines well.\n The Oster editor is still there because it can handle very long lines better than the Netbeans editor. This is due to a known bug in the Netbeans editor (Issue #41241). As soon as this bug is fixed the Oster editor will be removed.]
WITHOUT_CLASSIFICATION	i18n[ColumnDiffDialog.sessionLabelPrefix=Session]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.sessionInfo.toString1=Session: ID={0}, Alias={1}: created at {2}, closed at {3}]
WITHOUT_CLASSIFICATION	i18n[graph.addChildTables=Add child tables]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsRemove=Remove]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.planTableUnavailableTitle= PLAN_TABLE not found]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFactConfiguration=Call "new org.hibernate.cfg.Configuration().configure().buildSessionFactory();"]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.prefName=Name:]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[sqlscript.dlgCreatTableOfSql=Create table of SQL]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.prefsToolTip=Table names appear in scripts as SCHEMA.TABLE]
WITHOUT_CLASSIFICATION	i18n[mysql.tabStatus=MySQL Table Status]
WITHOUT_CLASSIFICATION	i18n[oracle.diplayScriptDetails=Display script details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[mysql.logs=MySQL Logs]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingTables=Loading tables]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryController.mnuAppendSelectionToEditor=Append selected statements to SQL editor]
WITHOUT_CLASSIFICATION	i18n[userscript.classNotFoundIn=Class {0} found in\n{1}]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnDefaultUnsupported={0} doesn''t support altering a column''s default value]
WITHOUT_CLASSIFICATION	i18n[CSVFileImporter.invalidDateFormat=Invalid date format given]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.statementSeparatorLabel=Statement Separator]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingStoredProcedures=Loading stored procedures]
WITHOUT_CLASSIFICATION	i18n[ThreadCheckingRepaintManager.workinwrongthread=GUI work done in wrong thread]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.tableColumn=Table column]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryItemWrapper.index=Index]
WITHOUT_CLASSIFICATION	File handling controls i18n[popupeditableIoPanel.useFile=Use File: ]
WITHOUT_CLASSIFICATION	i18n[DB2Plugin.showTriggerSource=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotFindFile=Cannot find file {0}\nCheck file name and re-try export.]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.deleteRosQuestion=Do you wish to delete {0} rows from this table?]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.seeOtherErrs={0}\nDo you wish to see other errors?"]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.example=Save example code for a SessionFactorImpl provider class to ...]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.newFactoryClasspathBorder=Additional classpath entries to create a SessionFactoryImpl]
WITHOUT_CLASSIFICATION	i18n[oracle.displayTriggerColumns=Display trigger column information]
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showIndexSource=Show index source]
WITHOUT_CLASSIFICATION	i18n[HtmlViewerPanel.error.processhyperlink=Error processing hyperlink]
WITHOUT_CLASSIFICATION	i18n[SchemaTableUpdateWhatItem.views=Views]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.executeError2=Execute Error]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.code=SQL code]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.exceptionMsg=Exception was: ]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.title=Drop Table(s)]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.noCfgNameMsg=Not a valid configuration name\nChanges cannot be applied.]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.specifySchemas=Specify Schema loading and caching]
WITHOUT_CLASSIFICATION	i18n[codecompletion.listTruncated=Completion list truncated. Narrow by typing to get missing entries.]
WITHOUT_CLASSIFICATION	i18n[sqlval.anonymous=Anonymous]
WITHOUT_CLASSIFICATION	i18n[javaBeanDataSet.value=Value]
WITHOUT_CLASSIFICATION	i18n[DerbyPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	i18n[graph.graphSaved=Graph "{0}" saved to "{1}"]
WITHOUT_CLASSIFICATION	i18n[sqlval.descriptivename=SQL Validator plugin]
WITHOUT_CLASSIFICATION	i18n[SplashScreen.error.updatingprogressbar=Error occured updating progress bar]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.executeButtonLabel=Execute]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.lineCommentToolTip=Sequence of characters at the beginning of a line to indicate that whole line is a comment]
WITHOUT_CLASSIFICATION	i18n[mysql.shoeVariables=(MySQL) Show Variables]
WITHOUT_CLASSIFICATION	i18n[userscript.codeTemplateSave=Save]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.connectionErr=Error getting SQL connection data from Hibernate:]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.rereadingdb=There was a problem reported while re-reading the DB. The DB message was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[resultSetMentaDataSet.propName=Property Name]
WITHOUT_CLASSIFICATION	i18n[ScriptWriter.error.nouserhome=The System property <user.home> is null. Cannot determine where to write DBCopy SQL scripts. Disabling writing SQL scripts for DBCopy operations.]
WITHOUT_CLASSIFICATION	i18n[graph.addParentTables=Add parent tables]
WITHOUT_CLASSIFICATION	i18n[syntax.findNetbeansOnly=Find is only available when the Netbeans editor is used.\nSee menu File --> New Session Properties --> Tab Syntax]
WITHOUT_CLASSIFICATION	i18n[userscript.selScriptToExec=Please select the script to execute]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.weeklyLabel=Weekly]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.classPathAdd=Add classpath entry]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.hostLabel=Host:]
WITHOUT_CLASSIFICATION	i18n[sqlval.technology=Technology:]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.editSQLButtonLabel=Edit SQL]
WITHOUT_CLASSIFICATION	i18n[editextras.time=Time]
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.noPersistenceUnitName=Missing Persitence-Unit name .\nChanges cannot be applied.]
WITHOUT_CLASSIFICATION	i18n[SplashScreen.info.loadingfile=Loading file - ]
WITHOUT_CLASSIFICATION	i18n[CopyProgressMonitor.analyzingTableMessage=Analyzing table ]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.atStartupLabel=At Startup]
WITHOUT_CLASSIFICATION	i18n[laf.lf=L & F]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptPrimary=Script PRIMARY keys, FOREIGN keys, defaults, and check constraints]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.createFileError=Failed to create file {0}.\nChange file name or select a differnt file for export.]
WITHOUT_CLASSIFICATION	i18n[PleaseWaitDialog.pleaseWait=Please wait while the query is executed]
WITHOUT_CLASSIFICATION	i18n[mssql.delay={0}s delay]
WITHOUT_CLASSIFICATION	i18n[mapdataset.key=Key]
WITHOUT_CLASSIFICATION	i18n[userscript.applicableTo=Scripts applicable to objects of type {0}]
WITHOUT_CLASSIFICATION	i18n[syntax.whiteSpace=White Space]
WITHOUT_CLASSIFICATION	i18n[NumericFunctionsTab.hint=Show all the numeric functions available in DBMS]
WITHOUT_CLASSIFICATION	i18n[DerbyPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[syntax.textLimitLineVisible=Show text limit line]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError3=Export Error]
WITHOUT_CLASSIFICATION	i18n[mssql.performace=Performance Counters]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFactJPA=Call "javax.persistence.Persistence.createEntityManagerFactory("<persitence-unit name>");"]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadpluginsettings=Error retrieving app settings folder for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[TableExportCSVDlg.exportTitleNew=CSV / MS Excel export]
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.hint=Preferences for MySQL]
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.AccessibleButSys=Allow accessible Schemas excluding SYS]
WITHOUT_CLASSIFICATION	i18n[mysql.fieldProps=Field Properties:]
WITHOUT_CLASSIFICATION	i18n[MetaDataTab.hint=Show database metadata]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.installFailedMessage=Unexpected error while attempting to install updates]
WITHOUT_CLASSIFICATION	i18n[dataTypeJavaObject.readContentsWhenLoaded=Read contents when table is first loaded and display as string]
WITHOUT_CLASSIFICATION	i18n[ExcelSettingsPanel.xlsSettings=Excel import settings]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.statusBarBackgroundColorBtnLabel=Choose Status Bar Color]
WITHOUT_CLASSIFICATION	i18n[CatalogsTab.hint=Show all the catalogs]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.sqlResultTabs=SQL Results Tabs:]
WITHOUT_CLASSIFICATION	i18n[sqlval.infoBorder=Info]
WITHOUT_CLASSIFICATION	i18n[ProgressBarDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configMultiTableScript=Configuration of multi table scripts]
WITHOUT_CLASSIFICATION	i18n[FormatterSourceTab.noSourceAvailable=No object source code is available]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.closeLabel=Close]
WITHOUT_CLASSIFICATION	i18n[InstallDefaultDriversAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[DriverPropertiesPanel.useDriverProperties=Use driver properties]
WITHOUT_CLASSIFICATION	i18n[ViewSourceTab.display=Show view source]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.loadSchemasCatalogs=Load Schemas/Catalogs into object tree]
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.clearButtonLabel=Clear {0}]
WITHOUT_CLASSIFICATION	i18n[graph.chkIsLandscape=Landscape]
WITHOUT_CLASSIFICATION	i18n[oracle.dboutputStayOnTop=Stay on top]
WITHOUT_CLASSIFICATION	i18n[sqlval.disconnected=Disconnected from the SQL Validation web service]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.no=no]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.objectTreeBackgroundColorButtonLabel=Choose Object Tree Color]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.releaseFileDownloadFailedMsg=Release file couldn't be downloaded. Please check your settings.]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.nosqlselected=No SQL selected for execution.]
WITHOUT_CLASSIFICATION	i18n[OraclePlugin.hint=Preferences for Oracle]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.showSQLButtonLabel=Show SQL]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError4=Export Error]
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.AccessibleAndSys=Allow accessible Schemas and SYS]
WITHOUT_CLASSIFICATION	i18n[RemoveColumnCommand.singleColumnMessage=The table's only column cannot be removed - a table must have a least one column.]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.nocolumns=Table '{0}' in schema '{1}' has no columns to copy]
WITHOUT_CLASSIFICATION	i18n[i18n.noNativeToAsciiCommand=Cannot convert files without a native2Ascii command.]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.info.endmemtimer=Ending memory timer (AboutBox)]
WITHOUT_CLASSIFICATION	i18n[editWhereColsSheet.unableToEdit=Unable to get list of columns, {0}]
WITHOUT_CLASSIFICATION	i18n[oracle.displaySnapshotDetails=Display materialized view details]
WITHOUT_CLASSIFICATION	i18n[editextras.errorRemoveQuotes=Error processing Remove Quotes SQL command: {0}]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.dbTableName=Database table name]
WITHOUT_CLASSIFICATION	i18n[sqlval.dbms=DBMS]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.dropErrorMessage=Can't drop all columns - a table must have at least one column
WITHOUT_CLASSIFICATION	add button for Brows i18n[popupeditableIoPanel.browse=Browse]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesTab.hint=Settings for the SQL Script plugin]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.SQLPref=SQL]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorSavingAlials=Error saving aliases]
WITHOUT_CLASSIFICATION	i18n[sqlscript.scriptOnly=Generate script only]
WITHOUT_CLASSIFICATION	i18n[DataCache.msg.driverClassNotFound=Could not find class {0} in neither the Java class path nor the Extra class path of the {1} driver definition:\n{2}]
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.header=Configure Oracle Schema loading properties]
WITHOUT_CLASSIFICATION	i18n[syntax.errors=Errors]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.appearance=Appearance]
WITHOUT_CLASSIFICATION	i18n[LogPanel.logInfoLabel=Logs: Errors {0}, Warnings {1}, Infos {2}]
WITHOUT_CLASSIFICATION	i18n[graph.addTableRefBy=add table referenced by {0}]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.instructions=These settings control the background colors...]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.dumpingstatus=Error dumping Application Status bean]
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.stringVersion=Use String version of Timestamp ]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.enterSql=Please enter a bookmark sql]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[OraclePrefsPanelController.hint=Oracle Plugin preferences]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.prefClose=Close]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnNullUnsupported={0} doesn''t support altering a column's nullable attribute]
WITHOUT_CLASSIFICATION	i18n[editextras.minute=Minute]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.schemaLabel=Schema:]
WITHOUT_CLASSIFICATION	i18n[sqlscript.storeSqlInTableFailed=An error occured during storing SQL result in table {0}. See messages for details.\nI will create the copy script. You may correct errors and run it again.]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.prefsExplain=When completing functions SQuirreL doesn't know if a function is a stored procedure or a user defined function. To make code completion of these two kinds of functions convenient SQuirreL offers to configure which way completion should work.]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.spWithoutParams=stored procedure without parameter info: {call mySP()}]
WITHOUT_CLASSIFICATION	i18n[mssql.genereateCreate=Generate the CREATE <object> command for each object]
WITHOUT_CLASSIFICATION	i18n[CatalogsTab.title=Catalogs]
WITHOUT_CLASSIFICATION	i18n[mssql.allUDFs=All user-defined functions]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.installUpdatesTitle=Updates Available]
WITHOUT_CLASSIFICATION	i18n[editextras.hour=Hour]
WITHOUT_CLASSIFICATION	i18n[syntax.identifiers=Identifiers]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.installedVersionPrefix=Installed Version:]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.expected=expected]
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.addLabel=Add]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[Application.splash.loadeditselections=Loading Edit 'Where' Columns selections...]
WITHOUT_CLASSIFICATION	i18n[CopyExecutor.tablecolmismatch=Column count for table {0} in source database is {1}, but column count for table {2} in destination database is {3}
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.autoBorderLabel=Automatic Updates]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.confirmupdateallrows=The table has no columns that can be SELECTed on.\nAll rows will be updated.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotAccessFile=Cannot access file name {0}\nAborting export.]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.deleteRefActionToolTip=Append ON DELETE ...]
WITHOUT_CLASSIFICATION	some kind of problem - tell user i18n[DataSetUpdateableTableModelImpl.error.deleteFailed=One of the delete operations failed with exception:\n{0}\nDatabase is in an unknown state and may be corrupted.]
WITHOUT_CLASSIFICATION	i18n[editWhereColsSheet.limitSizeOfWhereClause=Limit the size of the WHERE clause used behind the scenes when editing cell contents.]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.FactoryProvider=SessionFactoryImpl provider]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.restoreFromBackupMessage=Restore SQuirreL to previous version before last update?]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerTablePanel.makeEditable=Make Editable]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnTextEdit=Edit]
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileExistsButReadOnly={0}\nexists and you cannot write to it.\nPlease use a different name.]
WITHOUT_CLASSIFICATION	i18n[Application.error.savecolsinfo=Unable to write Edit Where Cols options to persistant storage.]
WITHOUT_CLASSIFICATION	i18n[cellDataPopUp.conversionError=Conversion Error]
WITHOUT_CLASSIFICATION	i18n[graph.renameGraph=Rename graph]
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.col.config=Configuration]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[DataTypesTab.hint=Show all the data types available in DBMS]
WITHOUT_CLASSIFICATION	i18n[TablePriviligesTab.title=Privileges]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.charset=Charset:]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadpluginlicence=Error generating Licence entry for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.contentsMsg=You must have the Contents Tab selected to activate the SQL Filter]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.notANormalFile=File is not a normal file.\n Cannot do export to a directory or system file.]
WITHOUT_CLASSIFICATION	i18n[GeneralPreferencesPanel.paths=SQuirreL paths]
WITHOUT_CLASSIFICATION	i18n[oracle.details=Details]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.title=SybaseASE]
WITHOUT_CLASSIFICATION	i18n[mssql.monitorAsOf=Monitor (as of {0,date,full})]
WITHOUT_CLASSIFICATION	i18n[graph.landscape=landscape]
WITHOUT_CLASSIFICATION	i18n[laf.broderLaf=Look and Feel]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.executequery=executeQuery: Running SQL:\n '{0}']
WITHOUT_CLASSIFICATION	i18n[ResultTab.limitMessage=Limited to <font color='red'> {0} </font> rows]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.error=Error]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.transferOptionsBorderLabel=Transfer Options]
WITHOUT_CLASSIFICATION	i18n[syntax.font=Select font color]
WITHOUT_CLASSIFICATION	i18n[syntax.prefSyntaxHint=Syntax Highlighting]
WITHOUT_CLASSIFICATION	i18n[favs.deletelFolder=Are you sure to want to delete the folder \"{0}\" and all of its contents?]
WITHOUT_CLASSIFICATION	i18n[syntax.switchingNotSupported=Switching the editor of a runninig session is not supported.\nYou may switch the entry area in the New Session Properties dialog]
WITHOUT_CLASSIFICATION	i18n[laf.otmFiles=OTM files]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.appendSql=Append]
WITHOUT_CLASSIFICATION	i18n[ColumnPriviligesTab.title=Column Privileges]
WITHOUT_CLASSIFICATION	i18n[ToolsPopupController.toolspopupmsg=Please try out the Tools popup by hitting ctrl+t in the SQL Editor. Do it three times to stop this message.]
WITHOUT_CLASSIFICATION	i18n[graph.orderPksConstr=order PKs/constraints on top]
WITHOUT_CLASSIFICATION	i18n[resultFrame.stayOnTop=Stay on top]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.backupFailedMessage=Backup of existing files failed. Installation cannot proceed]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.udfWithParams=UDF with params]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.searchableTypeSearchable=supports all WHERE]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.success={0,choice,0#No records|1#One record|1<{0} records} successfully inserted.]
WITHOUT_CLASSIFICATION	i18n[graph.btnCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[syntax.configAutoCorr=Configure auto correct /abreviation]
WITHOUT_CLASSIFICATION	i18n[SystemFunctionsTab.title=System Functions]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptUsers=Script database users and database roles]
WITHOUT_CLASSIFICATION	i18n[mysql.defaultValue=Default Value]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.showButtonLabel=Show SQL]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.cfgName=Configuration]
WITHOUT_CLASSIFICATION	i18n[DeleteTablesCommand.progressDialogTitle=Analyzing tables to delete]
WITHOUT_CLASSIFICATION	i18n[SchemaTableUpdateWhatItem.allObjects=All Objects]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptingOptionsDlg=Scripting options allow you to specify how an object will be scripted.]
WITHOUT_CLASSIFICATION	i18n[sqlval.anonymous2=Anonymous]
WITHOUT_CLASSIFICATION	i18n[ViewLogsSheet.error.clearlogcontents=Error clearing the log contents]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.notWriteable=File is not writeable.\nChange file permissions or select a differnt file for export.]
WITHOUT_CLASSIFICATION	checkbox for whether to interpret input leniently or not i18n[dataTypeTime.inexact=allow inexact format on input]
WITHOUT_CLASSIFICATION	i18n[userscript.propsDlgOk=OK]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheDeleteFailed=Could not delete {0}]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.exportCompleteTable=Export complete table]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[syntax.comments=Comments]
WITHOUT_CLASSIFICATION	i18n[ColumnsTab.hint=Show columns for the selected table]
WITHOUT_CLASSIFICATION	i18n[editWherColsSheet.reset=Reset]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.refreshSchemas=Connect database to refresh Schema table]
WITHOUT_CLASSIFICATION	i18n[i18n.noNativeToAsciiOutDirNoDir=native2Ascii output dir is not a directory. native2Ascii will not be executed.]
WITHOUT_CLASSIFICATION	i18n[editextras.errorRemoveNewLines=Error processing Remove NewLines SQL command: {0}]
WITHOUT_CLASSIFICATION	i18n[FileEditorDropTargetListener.internalErrorMessage=Internal error occurred. See log for details]
WITHOUT_CLASSIFICATION	i18n[graph.new=New]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.lineSeparatorLabel=Line Separator:]
WITHOUT_CLASSIFICATION	i18n[graph.viewTableInObjectTree=View table in Object tree]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.queryStatistics=Query {0} of {1} elapsed time (seconds) - Total: {2}, SQL query: {3}, Building output: {4}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.export44=Export]
WITHOUT_CLASSIFICATION	i18n[graph.selGraph=Select graph]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.top=Top]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.nullableTypeNullable=true]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.newConfig=New]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.prefsToolTip=Table names appear in scripts as SCHEMA.TABLE]
WITHOUT_CLASSIFICATION	i18n[DBCopyGlobalPreferencesTab.hint=Preferences for DB Copy]
WITHOUT_CLASSIFICATION	i18n[mssql.filesToGenerate=Files to Generate]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.configName=Configuration name]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.classpath=Classpath]
WITHOUT_CLASSIFICATION	i18n[mssql.includeHeaders=Include descriptive headers in the script files]
WITHOUT_CLASSIFICATION	i18n[HibernateTabController.title=Hibernate]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileOverwrite=File {0} already exists.\n\nDo you wish to overwrite this file?]
WITHOUT_CLASSIFICATION	i18n[ColumnsTab.title=Columns]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.exportSelection=Export selection]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.statementSeparatorToolTip=When multiple statements are selected, use this to separate them into single statements.]
WITHOUT_CLASSIFICATION	i18n[sqlval.dbmsName=DBMS Name:]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.licences=Licences]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.quoteCheckboxLabel=Quote identifiers in scripts]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.dailyLabel=Daily]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileOpenError=There was an error opening file {0}.\nThe error was:\n{1}]
WITHOUT_CLASSIFICATION	i18n[userscript.propsDlgCheck=Check]
WITHOUT_CLASSIFICATION	i18n[ProcedureSourceTab.cLanguageProcMsg=This is a C-language routine. The source code is unavailable.]
WITHOUT_CLASSIFICATION	i18n[laf.lafWarning=Note: Controls may not be drawn correctly after changes in this panel until the application is restarted.]
WITHOUT_CLASSIFICATION	set up dialog to ask user if it is ok to proceed IMPORTANT: this dialog is SYNCHRONOUS (ie. we do not proceed until user gives a response). This is critical since this function provides a return value to its caller that depends on the user input. i18n[baseDataSetViewerDestination.warning=Warning]
WITHOUT_CLASSIFICATION	i18n[graph.zoomPrint=Zoom/Print]
WITHOUT_CLASSIFICATION	i18n[graph.removeFoldingPoint=remove folding point]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheDeleted=Deleted {0}]
WITHOUT_CLASSIFICATION	i18n[ConnectionStatusTab.hint=Connection Status]
WITHOUT_CLASSIFICATION	i18n[editWhereColsSheet.editWhereColumns=Edit 'WHERE' columns]
WITHOUT_CLASSIFICATION	i18n[mssql.allViews=All views]
WITHOUT_CLASSIFICATION	i18n[sqlscript.tableScriptCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.yes=YES]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.cascadeLabel=Cascade Constraints:]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsAdd2=Add...]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.oneerror=1 error detected]
WITHOUT_CLASSIFICATION	i18n[SessionSQLPropertiesPanel.removeMultiLineComment=Remove multi line comment (...) from SQL before sending to database]
WITHOUT_CLASSIFICATION	i18n[dataTypeDate.useDefaultFormat=Use default format ({0})]
WITHOUT_CLASSIFICATION	i18n[mysql.selectSingleTable=Must select a single table]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.replaceFile=(In command, the string {0} is replaced by the file name when Executed.)]
WITHOUT_CLASSIFICATION	i18n[userscript.tableColName=Name]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.qureyParams=Query Parameters]
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.timestampInWhere=Do not use Timestamp in WHERE clause]
WITHOUT_CLASSIFICATION	i18n[dataTypeString.limitReadOnly=Limit read only on columns with these names:]
WITHOUT_CLASSIFICATION	i18n[firebird.domainDetails=Display domain details]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.executeButtonLabel=Execute]
WITHOUT_CLASSIFICATION	i18n [MemoryPanel.gcStatus={0}\n\n Sessions waiting for garbage collection:\n ==================================================\n {1}\n Sessions open:\n ==================================================\n {2}\n Sessions garbage collected:\n ==================================================\n {3}\n]
WITHOUT_CLASSIFICATION	i18n[oracle.sortsPerExec=Sorts per Row]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.exec=Executing SQL]
WITHOUT_CLASSIFICATION	i18n[CodeCompletionPreferencesPanel.maxLastSelectedCompletionNames=If you call code completion without being in the scope of a table, for which number of tables the parser last found would you like to see colums on top of the completion list?]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.invalidSeparator=You must provide a single separator character or check "Use tab" to use the tab character.]
WITHOUT_CLASSIFICATION	i18n[AliasesListInternalFrame.error.ctrlF4key=Probably closed by the ctrl F4 key. See BasicDesktopPaneUi.CloseAction]
WITHOUT_CLASSIFICATION	i18n[laf.menuFontEanbled=Enabled]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.uncomment=uncomment]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.sepeartorTab=Use tab character]
WITHOUT_CLASSIFICATION	i18n[DefaultDatabaseExpander.error.retrieveschemaprivs=Unable to retrieve schema privileges]
WITHOUT_CLASSIFICATION	label for the date format combo, used to enable/disable text i18n[dataTypeTime.useDefaultFormat2= or locale-dependent format:]
WITHOUT_CLASSIFICATION	i18n[sqlval.version=Version:]
WITHOUT_CLASSIFICATION	i18n[ResultTab.rowCountLabel=Row Count:]
WITHOUT_CLASSIFICATION	i18n[codecompletion.beingLoaded=Code competion infomation is still being loaded.\nTry again later.]
WITHOUT_CLASSIFICATION	i18n[KeywordsTab.hint=Show all the non-standard Keywords available in DBMS]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.sql=SQL:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.showAscii=Show ASCII as chars]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.find=find]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.softwareVersionCurrentMsg=This software's version is the most recent]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.applyLabel=Apply Changes]
WITHOUT_CLASSIFICATION	i18n[dataTypeOther.readContentsWhenLoaded=Read contents when table is first loaded and display as string]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.editButtonLabel=Edit SQL]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.errWhileExecutin=Error while executing command.\nThe command was:\n {0}\nThe error was:\n{1}]
WITHOUT_CLASSIFICATION	add button for applying file & cmd info without doing anything else i18n[popupeditableIoPanel.applyFile=Apply File & Cmd]
WITHOUT_CLASSIFICATION	i18n[graph.name=Name]
WITHOUT_CLASSIFICATION	i18n[hashtabledataset.unsupported=<Unsupported>]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noSQLPanel=To run a bookmark you must open this window\nusing the "Edit Bookmarks" toolbar button of a Session window.\nThe bookmars SQL Code will then be written to the Session's SQL editor.]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.autocorr=autocorr]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.changesRecordedTitle=Changes Recorded]
WITHOUT_CLASSIFICATION	i18n[dataTypeTime.useDefaultFormat=Use default format ({0})]
WITHOUT_CLASSIFICATION	i18n[SpecialColumnMapping.NULL=NULL]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.schemaTableUpdateLable1=Set]
WITHOUT_CLASSIFICATION	i18n[ColumnDiffDialog.missingLabel=Missing]
WITHOUT_CLASSIFICATION	i18n[oracle.triggerColumns=Columns]
WITHOUT_CLASSIFICATION	i18n[mssql.extProps=Include extended properties]
WITHOUT_CLASSIFICATION	i18n[syntax.textLimitLineWidth=Text limit line width]
WITHOUT_CLASSIFICATION	i18n[CreateDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[ExcelSettingsPanel.sheetName=Sheet name]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.selectionNeeded=You must select something in the table to delete.]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFactFactoryProvider=Invoke the user defined provider method below:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.errorGettingPath=Error getting full path name for selected file]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.generalSettings=General settings for the current session]
WITHOUT_CLASSIFICATION	i18n[Session.driverCompliance3.0=The driver being used for alias ''{0}'' is not JDBC 3.0 compliant.\nYou should consider getting a more recent version of this driver]
WITHOUT_CLASSIFICATION	i18n[javaBeanDataSet.name=Property Name]
WITHOUT_CLASSIFICATION	i18n[ProgressCallBackDialog.defaultLoadingPrefix=Loading:]
WITHOUT_CLASSIFICATION	i18n[SchemaTableCboItem.schemaID.dontLoad=Don't load]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.ConfiguirationDef=Configuration definition]
WITHOUT_CLASSIFICATION	i18n[LogPanel.viewLastLog=Press to view last log entry]
WITHOUT_CLASSIFICATION	i18n[CopyTablesCommand.loadingPrefix=Analyzing table:]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.showErrorOffsetTT=Creates and uses a user-defined function that is used to determine the syntax error token]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.precisionLabel=Precision: ]
WITHOUT_CLASSIFICATION	i18n[mssql.oneFile=Create one file]
WITHOUT_CLASSIFICATION	i18n[syntax.operators=Operators]
WITHOUT_CLASSIFICATION	i18n[userscript.classNotFound=Class {0} not found]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsAdd=Add...]
WITHOUT_CLASSIFICATION	i18n[mysql.structure=Structure]
WITHOUT_CLASSIFICATION	i18n[SQLPanel.copylastbutton.hint=Copy current SQL history to entry area]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.portLabel=Port:]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.applyConfigChanges=Apply changes to this configuration]
WITHOUT_CLASSIFICATION	i18n[editextras.day=Day]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.cancelTimedOut=Failed to cancel statement within one second. Perhaps your driver/database does not support cancelling statements. If cancelling succeeds later you'll get a further messages.]
WITHOUT_CLASSIFICATION	i18n[DriversList.tooltiptext=List of database drivers that can be used to configure an alias]
WITHOUT_CLASSIFICATION	i18n[RowNumberTableColumn.rowNumber=Row Number]
WITHOUT_CLASSIFICATION	i18n[userscript1.scriptClass=Script class]
WITHOUT_CLASSIFICATION	i18n[userscript.enterScriptClass=Please enter a script class]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.info.identicalrows=This operation will result in {0} identical rows.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.failedToWriteFile=Failed to write file\n{0}\nError message\n{1}\nSee last log entry for details.]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.Execute=Execute SQL]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.borderTitle=SQL Script Preferences]
WITHOUT_CLASSIFICATION	i18n[sqlval.connected=Connected to the SQL Validation web service]
WITHOUT_CLASSIFICATION	i18n[editWhereColsSheet.shouldIncludePKs=The 'use' window should include at least the primary keys for the table.]
WITHOUT_CLASSIFICATION	i18n[DerbyDialect.columnLengthMessage=Derby only allows varchar column length to be increased]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[graph.unit=Unit]
WITHOUT_CLASSIFICATION	i18n[PluginSummaryDialog.unload=Unload]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.formatCSV=Export CSV file]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.editButtonLabel=Edit SQL]
WITHOUT_CLASSIFICATION	i18n[ReconnectAction.confirmReconnect=Close the current connection to the database and open a new one?]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.updateRefActionCheckboxLabel=Add update referential action to the FK definition]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.right=Right]
WITHOUT_CLASSIFICATION	set up Cancel button i18n[cellDataPopup.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.welcome=Welcome]
WITHOUT_CLASSIFICATION	label for the date format combo, used to enable/disable text i18n[dateTypeTimestamp.orLocaleDependend= or locale-dependent format:]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.enterName=Please enter a bookmark name with no blanks]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.title=Schemas]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.updateCheckFailedTitle=Update Check Failed]
WITHOUT_CLASSIFICATION	i18n[graph.invalidNumberFormat=Invalid number format. Can not calculate new unit.]
WITHOUT_CLASSIFICATION	i18n[SQLPanel.openSqlHistory.hint=Open SQL History]
WITHOUT_CLASSIFICATION	i18n[editextras.escapeDate=Escape date]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderController.fileCreateFailed=File {0} could not be created: {1}]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.schemaPrefix=Limit Schema Objects using these comma-delimited prefixes:]
WITHOUT_CLASSIFICATION	i18n[xmlRefomatter.noXml=The data does not contain any XML tags. No reformatting done.]
WITHOUT_CLASSIFICATION	i18n[CreateDataScriptOfCurrentSQLCommand.noQuery=No query found to create the script from.]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.congen=Error generating Contents file]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.rowsSelected={0} Row(s) Selected]
WITHOUT_CLASSIFICATION	i18n[SystemFunctionsTab.hint=Show all the system functions available in DBMS]
WITHOUT_CLASSIFICATION	i18n[oracle.buffer.getsPerRow=Buffer Gets per Row]
WITHOUT_CLASSIFICATION	i18n[oracle.displayTriggerDetails=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[Application.info.setjdbcdebuglogsuccess=JDBC debug log set to output stream successfully]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filtered=Filtered]
WITHOUT_CLASSIFICATION	i18n[graph.scriptTable=Script table]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.nodeUserMarks=User bookmarks]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.installUpdatesMessage=Updates are ready to be installed. Install them now?]
WITHOUT_CLASSIFICATION	i18n[oracle.firstLoadTime=First Load Time]
WITHOUT_CLASSIFICATION	i18n[laf.tabHint=Fonts]
WITHOUT_CLASSIFICATION	i18n[editextras.convertStringBufErr=Error executing convert to StringBuffer command: {0}]
WITHOUT_CLASSIFICATION	i18n[syntax.abrevclose=Close]
WITHOUT_CLASSIFICATION	i18n[graph.graphRemoved=Removed graph file "{0}"]
WITHOUT_CLASSIFICATION	i18n[firebird.triggerDetails=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[ShowDriverWebsiteCommand.comfirm=No WebSite URL for the specified driver. Would you like to add one?]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptCompleted=Script completed]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[mysql.grants=MySQL Grants]
WITHOUT_CLASSIFICATION	i18n[Application.error.showhelpwindow=Error showing help window]
WITHOUT_CLASSIFICATION	i18n[graph.hideScrollBars=Hide scrollbars]
WITHOUT_CLASSIFICATION	i18n[ConnectionStatusTab.title=Status]
WITHOUT_CLASSIFICATION	i18n[SchemaInfoCacheSerializer.beginStore=Starting to write schema cache for Alias {0}. file: {1}]
WITHOUT_CLASSIFICATION	i18n[mssql.activity=Displays the current activity on the SQL Server.]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[graph.formats=Formats]
WITHOUT_CLASSIFICATION	i18n[oracle.sessionStatistics=Session Statistics]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.UDFWithoutParams=user defined function without parameter info: myFunct()]
WITHOUT_CLASSIFICATION	i18n[LogPanel.openLogs=Press to open logs]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	String NULL = "<null>"; i18n[resultSetMentaDataSet.val=Value]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptPermission=Script object-level permissions]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.lengthLabel=Length: ]
WITHOUT_CLASSIFICATION	i18n[graph.newGraph=New table graph]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.nodeSquirrelMarks=SQuirreL bookmarks]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.dialectLabel=Dialect: ]
WITHOUT_CLASSIFICATION	i18n[TimeDateFunctionsTab.hint=Show all the Time/Date functions available in DBMS]
WITHOUT_CLASSIFICATION	i18n[oracle.rowsPerExec=Rows per Exec]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filterCboContains=contains]
WITHOUT_CLASSIFICATION	i18n[dataTypeBlob.readOnFirstLoad=Read contents when table is first loaded:]
WITHOUT_CLASSIFICATION	i18n[DerbyPlugin.prefsHint=Set preferences for Derby Plugin]
WITHOUT_CLASSIFICATION	i18n[graphToFile.fileChooserTitle=Save image file(s)]
WITHOUT_CLASSIFICATION	i18n[mssql.msdos=MS-DOS text (OEM)]
WITHOUT_CLASSIFICATION	i18n[mysql.displayProcesses=(MySQL) Display database processes]
WITHOUT_CLASSIFICATION	i18n[exportconfig.ioErrorWritingTo=IO Error writing to\n{0}]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.deleteActionLabel=Action to take on delete:]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.table=Table]
WITHOUT_CLASSIFICATION	i18n[LogPanel.titleError=Last log entry (Entry type: ERROR)]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnTextView=View]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindclobmem=bindClobVarInMemory: binding '{0}' bytes]
WITHOUT_CLASSIFICATION	i18n[OraclePrefsPanel.Description= "Interactions with Schema Alias properties (see 'Schemas' tab):\n \n 1. 'Load all Schemas, cache none': Oracle Alias properties will take effect immediately.\n \n 2. 'Load and cache all Schemas': Oracle Alias properties will take effect on next 'Refresh all' inside a Session.\n \n 3. 'Specify Schema loading and Caching': Oracle Alias properties will take effect when the Schemas table on the 'Schemas' tab is refreshed.\n \n Note: If Schema Alias properties are set to load all cache none and Oracle Alias properties is set to 'Allow all Schemas' this may result in very long Session startup time.]
WITHOUT_CLASSIFICATION	i18n[dataTypeDate.full=Full ({0})]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.dumpingsystemprops=Error dumping metadata]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.hideRecycleBinCheckBoxToolTip=Recycle Bin tables are a Flashback Database Option in Oracle 10g]
WITHOUT_CLASSIFICATION	i18n[userscript.selScriptToDel=Please select the script to delete]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.config=Configuration]
WITHOUT_CLASSIFICATION	i18n[DriversListInternalFrame.error.ctrlF4key=Probably closed by the ctrl F4 key. See BasicDesktopPaneUi.CloseAction]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.nullableTypeNoNulls=false]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.hideRecycleBinCheckBoxLabel=Remove Recycle Bin Tables from the Object Tree]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.truncateTable=Truncate table before inserting data]
WITHOUT_CLASSIFICATION	i18n[graphToClipboard.copyButton=Copy image from selected tab]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.useCustomQTToolTip=Gives enhanced capabilities over the default query tokenizer for handling {0} scripts]
WITHOUT_CLASSIFICATION	i18n[oracle.parseSchema=Parse Schema]
WITHOUT_CLASSIFICATION	i18n[graph.addTableRefByNoHit=add table referenced by (no hit on FK)]
WITHOUT_CLASSIFICATION	i18n[sqlparam.quoteValues=Quote Values]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.statusLableSuccessMsg=Connected Successfully]
WITHOUT_CLASSIFICATION	i18n[Application.error.setlaf=Error setting LAF]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.ok=OK]
WITHOUT_CLASSIFICATION	i18n[ImportTableDataCommand.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.commandReturnNot0=The convention for command returns is that 0 means success, but this command returned {0}.\nDo you wish to import the file contents anyway?]
WITHOUT_CLASSIFICATION	i18n[dataTypeJavaObject.sqlJavaObjectType=SQL JavaObject (SQL type 2000)]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.useGlobalPrefsFormatingExcel=Use formating as configured in Global Prefs (recommended for MS Excel)]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.schemaTableUpdateLable2=in all Schemas to]
WITHOUT_CLASSIFICATION	i18n[firebird.triggerDetails=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.enterDescription=Please enter a bookmark description]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindbloblength=bindBlobVarInFile: writing '{0}' bytes.]
WITHOUT_CLASSIFICATION	i18n[DerbyPluginPreferencesPanel.readClobsFullyCheckBoxLabel=Enable extended Derby CLOB support]
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.text=This Session seems to take considerable time to load. You may configure Alias Schema Properties to improve startup performance.]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.insert=Insert]
WITHOUT_CLASSIFICATION	i18n[mysql.tableNamelbl=Table Name:]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptPropsName=Name]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.enableAutoUpdate=Enable Automatic Updates]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.primaryKeyTitle=Choose column(s) for primary key]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorWritingPrefs=Error occured writing to preferences file: {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.remove=<< Remove]
WITHOUT_CLASSIFICATION	i18n[sqlval.pwdPref=Password:]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.loadAllAndCacheNone=Load all Schemas, cache none]
WITHOUT_CLASSIFICATION	i18n[syntax.hasBeenAutocorr={0} has been auto corrected / extended to {1}. To configure auto correct / abreviations see Menu Session --> Syntax --> Configure auto correct / abreviation]
WITHOUT_CLASSIFICATION	i18n[OracleXmlTypeDataTypeComponent.cellErrorMsg=<Error: see log file>]
WITHOUT_CLASSIFICATION	i18n[syntax.selColor2=Select Color]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.text=Text]
WITHOUT_CLASSIFICATION	i18n[sqlval.settingsAnon=Anonymous]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.noFile=No File Selected]
WITHOUT_CLASSIFICATION	i18n[CodeCompletionPreferencesPanel.numberOfTables=number of tables]
WITHOUT_CLASSIFICATION	i18n[firebird.showView=Show view source]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnCommentUnsupported={0} doesn''t support column comments]
WITHOUT_CLASSIFICATION	i18n[favs.savedQueries=Saved Queries]
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderController.fileCreated=File {0} has been successfully created.]
WITHOUT_CLASSIFICATION	i18n[TableTypesTab.title=Table Types]
WITHOUT_CLASSIFICATION	i18n[SpecialColumnMapping.SKIP=Skip]
WITHOUT_CLASSIFICATION	i18n[GeneralPreferencesPanel.squirrelUserPath=User directory: -userdir {0}]
WITHOUT_CLASSIFICATION	i18n[graph.dina3=Din A 3]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.siteTypeLabel=Site Type:]
WITHOUT_CLASSIFICATION	i18n[MyURLClassLoader.noAssignCheck=Failed to load {0} in {1} to check if it is assignable to {2}. Reason: {3}]
WITHOUT_CLASSIFICATION	i18n[ImportTableDataCommand.sqlErrorOccured=An error occured while reading database data.] i18n[ImportTableDataCommand.error=Error]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.tablenotfound=Couldn't locate table '{0}' in schema '(1)']
WITHOUT_CLASSIFICATION	i18n[laf.menus=Menus]
WITHOUT_CLASSIFICATION	i18n[graph.invalidName=Invalid name]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.executeError=Execute Error]
WITHOUT_CLASSIFICATION	i18n[mssql.unicode=International text (Unicode)]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.sqlException=A database error occured while inserting data] i18n[ImportDataIntoTableExecutor.error=Error]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.changesRecordedMsg=Requested changes will be made when SQuirreL is restarted]
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.operatorsLabel=Operators]
WITHOUT_CLASSIFICATION	i18n[graph.height=Height]
WITHOUT_CLASSIFICATION	i18n[InformixExceptionFormatter.notAvailableMsg=Not Available]
WITHOUT_CLASSIFICATION	i18n[mysql.hintTabStatus=(MySQL) Table Status]
WITHOUT_CLASSIFICATION	i18n[syntax.addRow=Add row]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadlicencefile=Error retrieving Licence file URL for {0}]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerTablePanel.textCantBeConverted=The given text cannot be converted into the internal object.\nThe database has not been changed.\nThe conversion error was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[mysql.processes=MySQL Processes]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.noPK=The table ''{0}'' doesn't have a primary key.]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.closeFailed=Failed to close statement. Propably the driver/RDDBMS does not support canceling statements. See logs for further details ({0})]
WITHOUT_CLASSIFICATION	i18n[xmlRefomatter.malformedXml=Possible mal-formed XML:\n Starting tag was: {0}\nEnding Tag was: {1}\nContinuing with reformatting XML."]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[syntax.corExt=correction / extension]
WITHOUT_CLASSIFICATION	i18n[oracle.displaysSequenceDetails=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.statusDialogTitle=Session garbage collection status]
WITHOUT_CLASSIFICATION	i18n[mssql.refreshNow=Refresh Now]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.propName=Input New Row Data]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptDatabase=Script database]
WITHOUT_CLASSIFICATION	i18n[ResultTab.elapsedTime=Total: {0}, SQL query: {1}, Building output: {2}]
WITHOUT_CLASSIFICATION	i18n[SchemasTab.title=Schemas]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.title=SQL History for {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.allSps=All stored procedures]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabecp=Extra class path]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.primaryKeyNameLabel=Primary Key Name: ]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnTypeTootTip={0} does not support altering column type]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.UDFWithParams=user defined function with parameter info: myFunct(<IN INTEGER tid>)]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.unknownupdateerror=Unknown problem during update.\nNo count of updated rows was returned.\nDatabase may be corrupted!]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.modifyColumnTitle=Modify Column]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.deleteConfirm=Do you really wish to delete the selected bookmark?]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.OK=OK]
WITHOUT_CLASSIFICATION	i18n[mssql.generateSqlScript=Generate SQL Script]
WITHOUT_CLASSIFICATION	i18n[mysql.openTables=MySQL Open tables]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.hint=Preferences for SybaseASE]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.colTypeMappingBorderLabel=Column Type Mapping]
WITHOUT_CLASSIFICATION	i18n[syntax.italic=Italic]
WITHOUT_CLASSIFICATION	i18n[mysql.hintGrants=(MySQL) Grants]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.typeLabel=Type: ]
WITHOUT_CLASSIFICATION	i18n[HQLEntryPanelManager.quoteHQL=Quote HQL]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.schemaTableTitle=Schema table]
WITHOUT_CLASSIFICATION	i18n[sqlval.loOnAs=Log on as]
WITHOUT_CLASSIFICATION	i18n[Application.info.jdbcwritersuccess=JDBC debug log set to writer successfully]
WITHOUT_CLASSIFICATION	i18n[graph.saveGraph=Save graph]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.promptToDownloadAvailableUpdatesMsg=There are updates available. Do you want to download them now?]
WITHOUT_CLASSIFICATION	i18n[MysqlTriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.dropTitle=Select Column(s) To Drop]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.result=SQL result]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.title=SQuirreL SQL Client Help]
WITHOUT_CLASSIFICATION	i18n[ContentsTab.hint=View the contents of the selected table]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.dataTYpe1=Properties for the individual Data Types may be set in the]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.sqlLabel=SQL:]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.format=Format]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.touppercase=touppercase]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.executeCommand=Execute command (%file will be replaced by export file name)]
WITHOUT_CLASSIFICATION	i18n[IndexesTab.hint=Show indexes for the selected table]
WITHOUT_CLASSIFICATION	i18n[sqlval.clientBorder=Client]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.scriptQueryStatistics=Executed {0} queries; elapsed time (seconds) - Total: {1}, SQL query: {2}, Building output: {3}]
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.orderByClauseLabel=Order By Clause]
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.addLabel=Add]
WITHOUT_CLASSIFICATION	i18n[userscript.execOn=Execute script on {0}]
WITHOUT_CLASSIFICATION	i18n[ValidatorGlobalPreferencesTab.title=SQL Validator]
WITHOUT_CLASSIFICATION	i18n[rowInputDataFrame.conversionToInternErr=The given text cannot be converted into the internal object.\nThe database has not been changed.\nThe conversion error was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[graphToClipboard.closeButton=Close]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.malformedXmlAt=Malformed XML. No ending tag seen for text starting at:\n{0}]
WITHOUT_CLASSIFICATION	i18n[mssql.allDefaults=All defaults]
WITHOUT_CLASSIFICATION	i18n[graph.rightClickTable=Right click table in object tree to add to graph]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsGenTempl=Generate script template...]
WITHOUT_CLASSIFICATION	i18n[editextras.timeStamp=Time stamp]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileOpenErrorHeader=File Open Error]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.systemprops=System Properties]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.pathLabel=Path:]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.testLabel=Test Connection]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.info.startmemtime=Starting memory timer (AboutBox)]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.duringInsert=Exception seen during check on DB. Exception was:\n{0}\nInsert was probably not completed correctly. DB may be corrupted!]
WITHOUT_CLASSIFICATION	i18n[mssql.oneFilePerObject=Create one file per object]
WITHOUT_CLASSIFICATION	i18n[ColumnPriviligesTab.hint=Show access rights for columns in the selected table]
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.orderDirectionLabel=Order Direction]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.overwriteWarning=File Overwrite Warning]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError100=Export Error]
WITHOUT_CLASSIFICATION	i18n [MemoryPanel.gcStatusToolTip={0} Sessions waiting for garbage collection]
WITHOUT_CLASSIFICATION	i18n[MetaDataTab.title=Metadata]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.no=NO]
WITHOUT_CLASSIFICATION	i18n[hibernate.HibernateTabPanel.connect=Connect/disconnect configuration selected configuration]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptIxAtEnd=Constraints and indexes at end of script]
WITHOUT_CLASSIFICATION	no first row, so we cannot retrieve the data i18n[DataSetUpdateableTableModelImpl.error.nomatchingrow=Could not find any row in DB matching current row in table]
WITHOUT_CLASSIFICATION	i18n[mysql.structureAndData=Structure and Data]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.numberBase=Number Base:]
WITHOUT_CLASSIFICATION	i18n[HibernateTabPanel.mappedObjects=Mapped objects]
WITHOUT_CLASSIFICATION	i18n[graphToClipboard.title=Copy graph image pages to clipboard]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.mainTabs=Main Tabs:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotExec=Cannot execute a null command.\nPlease enter a command in the Command field before clicking on Execute.]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[dataTypeBigDecimal.scaleEceeded=Scale Exceeded: Number of digits to right of decimal place ({0})\nis greater than allowed in column ({1}).]
WITHOUT_CLASSIFICATION	i18n[TableTypesTab.hint=Show all the table types available in DBMS]
WITHOUT_CLASSIFICATION	i18n[oracle.details=Details]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadchangelog=Error generating Change Log entry for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[dataTypeTimestamp.full=Full ({0})]
WITHOUT_CLASSIFICATION	i18n[HibernateTabController.hint=Support for Hibernate]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnNullLabel={0} does not support altering column nullability]
WITHOUT_CLASSIFICATION	i18n[graph.scriptAllTables=Script all tables]
WITHOUT_CLASSIFICATION	i18n[syntax.styles=Syntax Styles]
WITHOUT_CLASSIFICATION	i18n[mysql.showLogs=(MySQL) Show Logs]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.systempanelcreatetime=SystemPanel created in ]
WITHOUT_CLASSIFICATION	i18n[laf.settings=Look and Feel settings]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScript=Configure your multi table script:]
WITHOUT_CLASSIFICATION	i18n[sqlval.technologyVersion=Technology Version:]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnTypeUnsupported={0} doesn''t support altering a column's type attribute]
WITHOUT_CLASSIFICATION	i18n[hibernate.hqlToSqlShort=Convert HQL to SQL (ctrl + enter)]
WITHOUT_CLASSIFICATION	i18n[popupEditableIoPanel.wrapLines=Wrap Lines on/off]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingDataTypes=Loading data types]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.checkButtonLabel=Check]
WITHOUT_CLASSIFICATION	i18n[OraclePrefsPanelController.title=Oracle]
WITHOUT_CLASSIFICATION	i18n[RowIDTab.hint=Show columns that uniquely identify a row]
WITHOUT_CLASSIFICATION	i18n[NumericFunctionsTab.title=Numeric Functions]
WITHOUT_CLASSIFICATION	i18n[userscript.enterScriptName=Please enter a script name]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnNameUnsupported={0} doesn''t support altering a column''s name]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.exportCsvFile=Export to file:]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.attrClassName=Attribute class name]
WITHOUT_CLASSIFICATION	i18n[AliasPropertiesInternalFrame.title=Properties for Alias: {0}]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[mssql.add_Menmonic="]
WITHOUT_CLASSIFICATION	i18n[oracle.diskReadsPerExec=Disk Reads per Exec]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.notUseColumns=Not Use Columns]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.promptToDownloadAvailableUpdatesTitle=Updates Available]
WITHOUT_CLASSIFICATION	i18n[xmlRefomatter.unexpectedProblem=Unexpected problem during formatting.]
WITHOUT_CLASSIFICATION	i18n[laf.warning=Note: Changes may not take effect until the application is restarted.]
WITHOUT_CLASSIFICATION	i18n[popupEditableIoPanel.wrapWord=Wrap on Word on/off]
WITHOUT_CLASSIFICATION	i18n[dataTypeTime.medium=Medium ({0})]
WITHOUT_CLASSIFICATION	i18n[oracle.diplayScriptDetails=Display script details]
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.showTriggerSource=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[mysql.withAllFields=With all Fields]
WITHOUT_CLASSIFICATION	i18n[ResultTab.resultsTabTitle=Results]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.driverVersion=JDBC driver version (Hibernate)]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.cancelMsg=Press Cancel to Stop]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadwelcomefile=Error retrieving Welcome file URL for {0}]
WITHOUT_CLASSIFICATION	i18n[syntax.separators=Separators]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.prefixConfig=Configure function completion for function name prefixes:]
WITHOUT_CLASSIFICATION	i18n[mssql.add=Add >>]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorSavingAliases=Error saving aliases]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.newColumnValue=NewColumn]
WITHOUT_CLASSIFICATION	i18n[codecompletion.unknowntable=unknown table {0}]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.dropErrorTitle=Too Many Columns Selected]
WITHOUT_CLASSIFICATION	i18n[HibernateTabPanel.hql=HQL]
WITHOUT_CLASSIFICATION	i18n[SchemaTableUpdateWhatItem.tables=Tables]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.noRowsDeleted={0}\nNo rows deleted from database.]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.fileChooserButton=Choose]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileChooserError=File Chooser Error]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.useDefaultFormating=Use default formating]
WITHOUT_CLASSIFICATION	i18n[oracle.showTriggerSource=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.searchableTypePredChar=only supports 'WHERE...LIKE']
WITHOUT_CLASSIFICATION	i18n[userscript.applicableToTarget=Scripts applicable to selected targets]
WITHOUT_CLASSIFICATION	i18n[graph.addFoldingPoint=add folding point]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptOk=OK]
WITHOUT_CLASSIFICATION	i18n[OraclePlugin.timestampWarning=The setting to use string literals for timestamps may result in the inability to edit tables containing these columns. If this problem occurs, open Global Preferences -> Data Type Controls and set Timestamps to use "JDBC standard escape format"]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.restoreFromBackupTitle=Confirm Restore From Backup
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.typeTimestamp=Timestamp (SQL type 93)]
WITHOUT_CLASSIFICATION	i18n[graph.addRelTables=Add all related tables]
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileSavedTo={0} saved to {1}]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.executeButtonLabel=Execute]
WITHOUT_CLASSIFICATION	set up Update button i18n[cellDataPopUp.updateData=Update Data]
WITHOUT_CLASSIFICATION	i18n[SchemaInfoCacheSerializer.endStore=Finished writing schema cache for Alias{0}. file: {1}]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.spWithParams=SP with params]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.qualifyCheckboxLabel=Qualify table names in scripts with schema]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.server=Server:]
WITHOUT_CLASSIFICATION	set up dialog to ask user if it is ok to proceed IMPORTANT: this dialog is SYNCHRONOUS (ie. we do not proceed until user gives a response). This is critical since this function provides a return value to its caller that depends on the user input. i18n[baseDataSetViewerDestination.warning2=Warning]
WITHOUT_CLASSIFICATION	i18n[DBCopyGlobalPreferencesTab.title=DB Copy]
WITHOUT_CLASSIFICATION	i18n[syntax.enableAutoCorr=Enable auto correct / abreviation]
WITHOUT_CLASSIFICATION	i18n[LockDetailsTab.title=Locks]
WITHOUT_CLASSIFICATION	i18n[oracle.instanceDetails=Details]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesTab.hint=Settings for the Refactoring plugin]
WITHOUT_CLASSIFICATION	i18n[oracle.sortsPerExec=Sorts per Exec]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.modifyColumnTitle=Modify Column]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.suggestColumnsIgnoreCase=ignore case]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noRunSelection=Please select the bookmark to run]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.csvSettings=CSV settings]
WITHOUT_CLASSIFICATION	i18n[ResultTab.statementLabel=SQL:]
WITHOUT_CLASSIFICATION	i18n[syntax.findExplain=Press F3 to go to next result. Press Ctrl+Shift+F7 to toggle highlight search.]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError8=Export Error]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.fileImport=Import file]
WITHOUT_CLASSIFICATION	Add Help, Licence and Change Log nodes to the tree. i18n[HelpViewerWindow.help=Help]
WITHOUT_CLASSIFICATION	i18n[editWherColsSheet.close=Close]
WITHOUT_CLASSIFICATION	i18n[graph.graphRenamed=Renamed "{0}" to "{1}"]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.exceptionduringcheck=Exception seen during check on DB. Exception was:\n{0}\nUpdate is probably not safe to do.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[WindowManager.errorselectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.scaleLabel=Scale: ]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.objectTabs=Object Tabs:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError7=Export Error]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.executequery=executeQuery: Running SQL:\n '{0}']
WITHOUT_CLASSIFICATION	pane.addTab(MergeColumnDialog.i18n.TABBEDPANE_COLUMNS_LABEL, _columnTab);
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.port=Port:]
WITHOUT_CLASSIFICATION	i18n[userscript.selScriptToEdit=Please select the script to edit]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.tableCols=Table columns]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[syntax.prefUseOster=Use Ostermiller editor]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.statusLableFailureMsg=Connection failed. See log for error.]
WITHOUT_CLASSIFICATION	i18n[graph.close=close]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.scriptStmtCounts=Row update counts: {0} Inserts, {1} Selects, {2} Updates, {3} Deletes
WITHOUT_CLASSIFICATION	i18n[DualProgressBarDialog.error.getdialog=getDialog: unable to invokeAndWait for dialog]
WITHOUT_CLASSIFICATION	i18n[graph.refreshAllTables=Refresh all tables]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[cellDataPopUp.cannnotBGeConverted=The given text cannot be converted into the internal object.\n Please change the data or cancel editing.\n The conversion error was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.missingtable=getForeignKeySQL: table '{0}' has a column '{1}' that references table '{2}' column '{3}'. However, that table is not being copied. Skipping this foreign key.]
WITHOUT_CLASSIFICATION	i18n[DB2Plugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	This is a funny functionality anyway and leads to problems with the DockTabStyle. E.g. when SessionProperties is closed first tab gets selected.
WITHOUT_CLASSIFICATION	Find the internal Frame in the list of internal frames and remove it.
WITHOUT_CLASSIFICATION	Has to be done directly on the main frame because of racing condition at start up.
WITHOUT_CLASSIFICATION	Has to be done directly on the main frame because of racing condition at start up.
WITHOUT_CLASSIFICATION	root.setDefaultButton(_okBtn);
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Required with the first beta of JDK1.4.1 to stop this scrollpane from being too tall.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	viewer.removeInternalFrameListener(_lis);
WITHOUT_CLASSIFICATION	Empty block.
WITHOUT_CLASSIFICATION	Instance Creation
WITHOUT_CLASSIFICATION	Primary Key name
WITHOUT_CLASSIFICATION	All rules passed, so enable the buttons.
WITHOUT_CLASSIFICATION	See also loadSchemaNames()
WITHOUT_CLASSIFICATION	Note: If we are here _cacheSchemaIndependentMetaData must be false
WITHOUT_CLASSIFICATION	This seems to be necessary to get background colours correct. Without it labels added to the content pane have a dark background while those added to a JPanel in the content pane have a light background under the java look and feel. Similar effects occur for other look and feels.
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	i18n[I18n.includeTimestamp=Include timestamp in modified properties file]
WITHOUT_CLASSIFICATION	i18n[I18n.CouldNotCreateWorkDir=Could not create Working directory {0}]
WITHOUT_CLASSIFICATION	i18n[I18n.PropsCopyMsg=Copied existing translations from {0} to {1}]
WITHOUT_CLASSIFICATION	i18n[I18n.WorkingDir=Working Directory]
WITHOUT_CLASSIFICATION	i18n[I18n.EditorCommand=Editor command]
WITHOUT_CLASSIFICATION	i18n[I18n.TranlationsGenerationMessage=\n#\n#Missing translation generated by I18n Plugin on {0}\n#]
WITHOUT_CLASSIFICATION	startparts[1] contains our I18n string key followed by </span>
WITHOUT_CLASSIFICATION	i18n[I18n.NativeToAscii=Path to native to Unicode converter (JDK's native2ascii)]
WITHOUT_CLASSIFICATION	i18n[I18n.WorkDirDoesNotExistQuestionCreate=Working directory {0} does not exist.\nDo you want to create it?]
WITHOUT_CLASSIFICATION	i18n[I18n.NativeToAsciiOutDir=native2Ascii output dir]
WITHOUT_CLASSIFICATION	i18n[I18n.noWorkdir=Working directory doesn't exist.\nDo you want to create it?]
WITHOUT_CLASSIFICATION	Dump table types.
WITHOUT_CLASSIFICATION	i18n[I18n.tranlations=Translations]
WITHOUT_CLASSIFICATION	i18n[I18n.bundles=Bundles]
WITHOUT_CLASSIFICATION	i18n[I18n.failedToOpenZip=Failed to open zip/jar {0}]
WITHOUT_CLASSIFICATION	i18n[I18n.ExecuteNativeToAscii=Execute nativeToAscii]
WITHOUT_CLASSIFICATION	i18n[I18n.appendI18nStringsProps=Create/Append I18nString.properties files]
WITHOUT_CLASSIFICATION	i18n[I18n.changeApplicationDefaultLocaleNote=Example VM Parameters to change locale used by SQuirreL: -Duser.language=en -Duser.country=US]
WITHOUT_CLASSIFICATION	i18n[I18n.NoWorkDir=Please choose a work dir to store your translations.]
WITHOUT_CLASSIFICATION	i18n[I18n.locales=Locales]
WITHOUT_CLASSIFICATION	i18n[I18n.generateTemplateComments=Generate template comments for missing translations]
WITHOUT_CLASSIFICATION	i18n[I18n.loadBundles=Load bundles]
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.noDriverSelected=No driver available in this Alias.\nCan not load driver properties tab.]
WITHOUT_CLASSIFICATION	i18n[I18n.WorkdirIsNoDir=The working directory is not a directory.\nNo bundles will be loaded from {0}]
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.loadingDriverFailed=Loading JDBC driver "{0}" failed.\nCan not load driver properties tab.]
WITHOUT_CLASSIFICATION	add more space between the label and the button
WITHOUT_CLASSIFICATION	add more space to the top of the component
WITHOUT_CLASSIFICATION	Has to be done here e.g. when "Close All Sessions" menu was used.
WITHOUT_CLASSIFICATION	Needes to be done via event queque because method is not called from the event disptach thread.
WITHOUT_CLASSIFICATION	actions.get(SQLFilterAction.class).setEnabled(false);
WITHOUT_CLASSIFICATION	Needed to guarantee other components a focus lost and to allow to enter the tabs components via tab key in a well defined way (the user can see where the focus is).
WITHOUT_CLASSIFICATION	_tree.addTreeSelectionListener(new ObjectTreeSelectionListener()); _objTreeSelLis = new ObjectTreeSelectionListener(); _tree.addTreeSelectionListener(_objTreeSelLis);
WITHOUT_CLASSIFICATION	Metrics of the component used in the constructor
WITHOUT_CLASSIFICATION	We don't destroy the timer when there's nothing happening because it would mean a lot more work on every single AWT event that gets dispatched.
WITHOUT_CLASSIFICATION	break when first braket found
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	void sessionInternalFrameOpened(SessionInternalFrame sessionInternalFrame, ISession sess);
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 20 pixels
WITHOUT_CLASSIFICATION	private SimpleAttributeSet _saSetErrorHistory;
WITHOUT_CLASSIFICATION	Thread safe support for every call to this method:
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	Mouse listener used to display popup menu.
WITHOUT_CLASSIFICATION	If the object representing the actual data (i.e. this object) can be edited by the user, then the fw objects need to have a reference to it. Updateable objects must implement an interface derived from IDataSetUpdateableComponent in the net.sourceforge.squirrel_sql.fw.datasetviewer package. If the component does not implement that interface, then we just keep going, but if it does implement it, then we need to tell the DataSetScrollingPanel that the object that fw needs to call is this one.
WITHOUT_CLASSIFICATION	If the file using the base name with no extention exists, it is first. The other files are in order from oldest to newest. The set of files to delete is slightly different depending on whether the base name file exists or not.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	There are some fields that cannot be used in a WHERE clause, either because there cannot be an exact match (e.g. REAL, FLOAT), or because we may not have the actual data in hand (BLOB/CLOB), or because the data cannot be expressed in a string form (e.g. BINARY). An update to one of those fields will look like we are replacing one row with an identical row (because we can only "see" the fields that we know how to do WHEREs on). Therefore, when we are updating them, there should be exactly one row that matches all of our other fields, and when we are not updating one of these special types of fields, there should be no rows that exactly match our criteria (we hope). We determine whether this field is one that cannot be used in the WHERE clause by checking the value returned for that field to use in the WHERE clause. Any field that can be used there will return something of the form "<fieldName> = <value>", and a field that cannot be used will return a null or zero-length string.
WITHOUT_CLASSIFICATION	There should be one row in the data, so try to move to it
WITHOUT_CLASSIFICATION	we have at least one row, so try to retrieve the object Do Not limit the read of this data
WITHOUT_CLASSIFICATION	return the whole contents of this column in the DB
WITHOUT_CLASSIFICATION	go on to the next item
WITHOUT_CLASSIFICATION	for each row in table, do delete and add to number of rows deleted from DB
WITHOUT_CLASSIFICATION	We need to keep track of the bind var index separately, since the number of column defs may not be the number of bind vars (For example: auto-increment columns are excluded)
WITHOUT_CLASSIFICATION	no support for undo
WITHOUT_CLASSIFICATION	JASON: Removed as part of patch void removeSessionListener(ISessionListener lis);
WITHOUT_CLASSIFICATION	If the user has cancelled the query, don't bother logging an error message. It is likely that the cancel request interfered with the attempt to fetch results from the ResultSet, which is to be expected when the Statement is closed. So, let's not bug the user with obvious error messages that we can do nothing about.
WITHOUT_CLASSIFICATION	Each call to _stmt.getMoreResults() places the to the next output. As long as it is a ResultSet, we process it ...
WITHOUT_CLASSIFICATION	There is no need to close result sets if we call _stmt.getMoreResults() because it implicitly closes any current ResultSet. ON DB2 version 7.1 it is even harmful to close a ResultSet explicitly. _stmt.getMoreResults() will never return true anymore if you do.
WITHOUT_CLASSIFICATION	Implementataion of IDataSetUpdateableTableModel: Delegation to _dataSetUpdateableTableModel
WITHOUT_CLASSIFICATION	always wrap on word boundaries
WITHOUT_CLASSIFICATION	NextCh already done
WITHOUT_CLASSIFICATION	toUpperCase replaces the German ß by ss. This will kill reformating later. Since upperIn is just for building pieces it is OK to place ß here.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	IApplication app = getApplication(); CursorChanger cursorChg = new CursorChanger(app.getMainFrame()); cursorChg.show(); try { new ShowNativeSQLCommand(_session).execute(); } finally { cursorChg.restore(); }
WITHOUT_CLASSIFICATION	private IntegerIdentifierFactory _idFactory = new IntegerIdentifierFactory();
WITHOUT_CLASSIFICATION	_listeners.add(ISQLExecutionListener.class, lis);
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	I have seen the reference to the outer class being null when this method is called. I have seen it only with the runtime jars and on Linux. I could not reproduce in my IDE.
WITHOUT_CLASSIFICATION	sql contains columns from multiple tables, so we cannot use all of the columns in a WHERE clause and it becomes difficult to know which table (or tables!) an edited column belongs to. Therefore limit the output to be read-only
WITHOUT_CLASSIFICATION	sticky tab was closed
WITHOUT_CLASSIFICATION	Back-off a bit after a hundred updates to allow the UI to update
WITHOUT_CLASSIFICATION	must not be done in the GUI thread
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for catalog nodes.
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for procedure nodes.
WITHOUT_CLASSIFICATION	Assume DBMS doesn't support catalogs.
WITHOUT_CLASSIFICATION	No more automatic restarts because key events will restart the parser from now on.
WITHOUT_CLASSIFICATION	DO NOT CHANGE THE VALUES OF THIS CONSTANTS. These constants where introduced to make the parser code more readable. Care was taken. Still it can not be guaranteed that changing a value will not be harmful.
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	use all of the columns
WITHOUT_CLASSIFICATION	private String _sqlOutputMetaDataClassName = IDataSetDestinations.READ_ONLY_TABLE;
WITHOUT_CLASSIFICATION	make sure we are starting clean
WITHOUT_CLASSIFICATION	Note: A CaseInsensitiveString can be a mutable string. In fact it is a mutable string here because this is usually called from within Syntax coloring which uses a mutable string.
WITHOUT_CLASSIFICATION	Note: A CaseInsensitiveString can be a mutable string. In fact it is a mutable string here because this is usually called from within Syntax coloring which uses a mutable string.
WITHOUT_CLASSIFICATION	load all table types with catalog = doi.getCatalog() and schema = doi.getSchema()
WITHOUT_CLASSIFICATION	private transient String[] availableTypesInDataBase;
WITHOUT_CLASSIFICATION	CopyOnWriteArrayList is unfortunately not sort-able as a List. So this will throw an UnsupportedOperationException: Collections.sort(_iTableInfos, new TableInfoSimpleNameComparator()); The following is the best approach according to concurrency master Doug Lea, in this post: http:osdir.com/ml/java.jsr.166-concurrency/2004-06/msg00001.html Here we copy the existing internal array into a new array that is large enough to hold the original and new elements. Then sort it. And finally, create a new CopyOnWriteArrayList with the sorted array.
WITHOUT_CLASSIFICATION	Columns have not yet been loaded
WITHOUT_CLASSIFICATION	If characters don't match but case may be ignored, try converting both characters to uppercase. If the results match, then the comparison scan should continue.
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	first time through this method in program, so go cleanup old log files
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	When user leaves a cell after editing it, the contents of that cell need to be converted from a string into an object of the appropriate type before updating the table. However, when the call comes from the Popup window, the data has already been converted and validated. We assume that a String being passed in here is a value from a text field that needs to be converted to an object, and a non-string object has already been validated and converted.
WITHOUT_CLASSIFICATION	When user leaves a cell after editing it, the contents of that cell need to be converted from a string into an object of the appropriate type before updating the table. However, when the call comes from the Popup window, the data has already been converted and validated. We assume that a String being passed in here is a value from a text field that needs to be converted to an object, and a non-string object has already been validated and converted.
WITHOUT_CLASSIFICATION	default is to do nothing. Derived classes must override this to accomplish anything.
WITHOUT_CLASSIFICATION	save for possible future use
WITHOUT_CLASSIFICATION	better safe than sorry!
WITHOUT_CLASSIFICATION	better safe than sorry!
WITHOUT_CLASSIFICATION	save various info about the column for use in user input validation when editing table contents. Note that the columnDisplaySize is included two times, where the first entry may be adjusted for actual display while the second entry is the size expected by the DB. The isNullable() method returns three values that we convert into two by saying that if it is not known whether or not a column allows nulls, we will allow the user to enter nulls and any problems will be caught when they try to save the data to the DB
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	/ Implement the IDataSetTableControls interface, functions needed to support table operations These functions are called from within MyJTable and MyTable to tell those classes how to operate. The code in these functions will be different depending on whether the table is read-only or editable. The definitions below are for read-only operation. The editable table panel overrides these functions with the versions that tell the tables how to set up for editing operations. /
WITHOUT_CLASSIFICATION	double tableWidth =_table.getColumnModel().getTotalColumnWidth() scale;
WITHOUT_CLASSIFICATION	return method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == int.class && method.getReturnType() != Void.TYPE;
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	if we have seen a property for this DataType before, then the hashmap already exists. Otherwise, we need to create it now.
WITHOUT_CLASSIFICATION	if use is not looking for ASCII chars, or if this one is one that is not printable, then convert it into numeric form
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	if both objs are null, then they matched in the previous test, so at this point we know that at least one of them (or both) is not null. However, one of them may still be null, and we cannot call equals() on the null object, so make sure that the one we call it on is not null. The equals() method handles the other one being null, if it is.
WITHOUT_CLASSIFICATION	if both objs are null, then they matched in the previous test, so at this point we know that at least one of them (or both) is not null. However, one of them may still be null, and we cannot call equals() on the null object, so make sure that the one we call it on is not null. The equals() method handles the other one being null, if it is.
WITHOUT_CLASSIFICATION	First convert the string representation into the binary bytes it is describing
WITHOUT_CLASSIFICATION	data was not fully read in before, so try to do that now
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	we are limiting some things. if the string we have is less than the limit, then we are ok and do not need to re-read (because we already have the whole thing).
WITHOUT_CLASSIFICATION	Total number of threads.
WITHOUT_CLASSIFICATION	Return empty list if source string is empty.
WITHOUT_CLASSIFICATION	Need to adjust param which is 1-based(JDBC) to a 0-based number for array access
WITHOUT_CLASSIFICATION	CLOBs are different from normal data types in that what is actually read from the DB is a descriptor pointing to the data rather than the data itself. During the initial load of the table, the values read from the descriptor may have been limited, but the descriptor itself has been completely read, Therefore we do not need to re-read the datum from the Database because we know that we have the entire descriptor. If the contents of the CLOB have been limited during the initial table load, that will be discovered when we check if the cell is editable and the full data will be read at that time using this descriptor.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	The DateFormat object to use for all locale-dependent formatting. This is reset each time the user changes the previous settings.
WITHOUT_CLASSIFICATION	save pointer to object needed to render value for use in the inner class delegate
WITHOUT_CLASSIFICATION	We want to detect two empty text values in a row before we decide to restore the original value. Since 'text' contains the new value, we want to allow the first empty 'text' so that the user can clear the field, and on the second one we will set it to the original value.
WITHOUT_CLASSIFICATION	Now define the Popup-related operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea. Since neither cell nor popup are allowed to edit, just ignore anything seen here.
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	the other obj is null, so see if this non-null obj contains a null value, which is equivilent. Assume that if we have read some of the data and we still have _data == null, then the value in the DB is actually null.
WITHOUT_CLASSIFICATION	both have actual data, so compare the strings Note that if one has read all of the data and the other has read only part of the data that we will say that they are NOT equal.
WITHOUT_CLASSIFICATION	both have actual data, so compare the strings Note that if one has read all of the data and the other has read only part of the data that we will say that they are NOT equal.
WITHOUT_CLASSIFICATION	tables that are netiher children nor parents - utility tables
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, but NOT the same one used in the Text and in-cell operations. The in-cell version may replace newline chars with "\n" while this version does not. In other respects it is the same as the in-cell version because both use the _renderer object to do the rendering.
WITHOUT_CLASSIFICATION	first do special check to see if we should use LONGVARCHAR in the WHERE clause. (Oracle does not allow this.)
WITHOUT_CLASSIFICATION	convert to string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	set the flag for whether or not to limit only on specific fields
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	The first argument is a JTable, which is only used by instances of JTextField to convert coordinates on a double-click. Since that cannot happen with the JTextArea, do not bother passing the table.
WITHOUT_CLASSIFICATION	We should never NOT have an object here because we only get here when a DataType object has claimed that the column is editable. If there is no DataType for the column, then the default in the isEditableXXX() methods in this class is to say that the column is not editable, and therefore we should never have this method called in that case.
WITHOUT_CLASSIFICATION	If we get here, then no data type object was found for this column. (should not get here because switch default returns null.)
WITHOUT_CLASSIFICATION	Oracle's 'TIMESTAMP WITH TIME ZONE' == -101 Oracle's 'TIMESTAMP WITH LOCAL TIME ZONE' == -102
WITHOUT_CLASSIFICATION	Add begin
WITHOUT_CLASSIFICATION	if value contains ":" it probably has a time component
WITHOUT_CLASSIFICATION	When the table initiates editing and sets this field, remember the value as the original value of the field
WITHOUT_CLASSIFICATION	Now the Popup-related methods. These are not quite symmetric with the in-cell calls because the conversion of the object into the text to display in the popup is handled internally to the DataType object inside getJTextArea(), so we do not need a "renderObjectInPopup" function visible to the rest of the world.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea. Since the Unknown data type is not editable either in the Cell or in the Popup, we should never get here, but we have provided appropriate code just in case.
WITHOUT_CLASSIFICATION	public static final int NO_ACTION = 0; public static final int CASCADE_DELETE = 1; public static final int SET_DEFAULT = 2; public static final int SET_NULL = 3;
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	I tried to use the length from the source database (PostgreSQL) which yielded 8192 for this test. So the column def in FB was binary_column bit varying(8192). Yet it gave me an exception that indicated truncation (string data right truncation???) So for now, go back to hard-coded maximal length. registerColumnType(Types.BINARY, 2147000000,"bit varying($l)");
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	ALTER TABLE <table_name> ADD FOREIGN KEY [<referential_constraint_name>] (<referencing_column>,...) REFERENCES <referenced_table> [(<referenced_column>,...)] [<delete_rule>]
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	<create_index_statement> ::= CREATE [UNIQUE] INDEX <index_name> ON <table_name> (<index_spec>) <index_spec> ::= <index_column_name>,... | <dbfunction_name> (<column_name>,...) [ASC|DESC] <index_column_name> ::= <column_name> [ASC|DESC]
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $withCheckOption$";
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $withCheckOption$";
WITHOUT_CLASSIFICATION	<rename_view_statement> ::= RENAME VIEW <old_table_name> TO <new_table_name> <old_table_name> ::= <table_name> <new_table_name> ::= <table_name
WITHOUT_CLASSIFICATION	features
WITHOUT_CLASSIFICATION	Additional Index Creation
WITHOUT_CLASSIFICATION	in Sybase, DEFAULT keyword must appear prior to NULL/NOT NULL
WITHOUT_CLASSIFICATION	CREATE SEQUENCE sequenceName INCREMENT BY increment MINVALUE minimum MAXVALUE maxvalue RESTART WITH restart CACHE cache CYCLE;
WITHOUT_CLASSIFICATION	finally, try to set the catalog, which appears to be a NO-OP in the Informix driver.
WITHOUT_CLASSIFICATION	Need to adjust param which is 1-based(JDBC) to a 0-based number for array access
WITHOUT_CLASSIFICATION	If we've loop through one time for each character in the string, then something must be wrong. Get out!
WITHOUT_CLASSIFICATION	Since we can use a correlated sub-query to update all rows in one statement, we don't care about the set values, unless fromTables is null, in which case we go with a normal update. Using the set values would require an update statement for each row in the merged table for each column that was merged in, which is incredibly inefficient. However, the API is intended to support database dialects that can't handle correlated sub-queries.
WITHOUT_CLASSIFICATION	"ALTER SEQUENCE $sequenceName$ " + "$restartWith$ $startValue$ " + "$incrementBy$ $incrementValue$ ";
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	From MySQL 5.0 Reference: ALTER TABLE tbl_name ADD [CONSTRAINT symbol] FOREIGN KEY [id] (index_col_name, ...) REFERENCES tbl_name (index_col_name, ...) [ON DELETE {RESTRICT | CASCADE | SET NULL | NO ACTION}] [ON UPDATE {RESTRICT | CASCADE | SET NULL | NO ACTION}]
WITHOUT_CLASSIFICATION	From MySQL 5.0 reference manual ALTER [IGNORE] TABLE tbl_name alter_specification [, alter_specification] ... alter_specification: | ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (index_col_name,...)
WITHOUT_CLASSIFICATION	From PostgreSQL 8.2 documentation: CREATE [ UNIQUE ] INDEX [ CONCURRENTLY ] name ON table [ USING method ] ( { column | ( expression ) } [ opclass ] [, ...] ) [ WITH ( storage_parameter = value [, ... ] ) ] [ TABLESPACE tablespace ] [ WHERE predicate ]
WITHOUT_CLASSIFICATION	UPDATE tableName SET setColumn1 = setValue1, setColumn2 = setValue2 FROM fromTable1, fromTable2 WHERE whereColumn1 = whereValue1 AND whereColumn2 = whereValue2;
WITHOUT_CLASSIFICATION	In Oracle, ON UPDATE actions are not supported
WITHOUT_CLASSIFICATION	ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] PRIMARY KEY (<column list>);
WITHOUT_CLASSIFICATION	The index is needed in case this method is called with schema = null, catalog = null and two tables with the same name in different schemas/catalogs. Without the index the same ordinal position could only occur once.
WITHOUT_CLASSIFICATION	During assignable checks many classes can't be loaded but don't cause problems either. So we just issue an info.
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible Logger for this class
WITHOUT_CLASSIFICATION	TimesTen reference claims this is a supported operation, but it yields an exception for me: ALTER TABLE test MODIFY noDefaultVarcharCol DEFAULT 'Default Value' Exception in thread "main" java.sql.SQLException: [TimesTen][TimesTen 6.0.1 ODBC Driver][TimesTen]TT1001: Syntax error in SQL statement before or at: "NODEFAULTVARCHARCOL", character position: 26 -- file "ptSqlY.y", lineno 1940, procedure "sbPtParseSql()" String alterClause = DialectUtils.MODIFY_CLAUSE; String defaultClause = DialectUtils.DEFAULT_CLAUSE; return DialectUtils.getColumnDefaultAlterSQL(this, info, alterClause, false, defaultClause); So, for now, just throw an exception:
WITHOUT_CLASSIFICATION	Do not use Axion's bigint data type. I get the following exception in my test: org.axiondb.AxionException: Invalid value "3074478078827346" for column (BIGINT_TYPE_TABLE).BIGINT_COLUMN, expected numeric(20,10) : data exception: numeric value out of range Can someone please tell me why Axion expects big integers to be limited to 20 precision and 10 scale?(Integers should have scale == 0, right?) So an Axion bigint is limited to just 20 digits to the left of the decimal point. TODO: consider filing a bug report against Axion build M3. 38 is the maximum precision for Axion's numeric type.
WITHOUT_CLASSIFICATION	DB2 needs to reorg table after changing nullabolity
WITHOUT_CLASSIFICATION	DB2 doesn't support adding an auto-increment column once the table has already been created. So this can simulate one using trigger on the table to access a sequence. Found this idea at wikibooks: http:en.wikibooks.org/wiki/SQL_dialects_reference/Data_structure_definition/Auto-increment_column CREATE SEQUENCE sequence_name; CREATE TABLE table_name ( column_name INT ); CREATE TRIGGER insert_trigger NO CASCADE BEFORE INSERT ON table_name REFERENCING NEW AS n FOR EACH ROW SET n.column_name = NEXTVAL FOR sequence_name;
WITHOUT_CLASSIFICATION	UPDATE t SET a = (SELECT a FROM t2 WHERE t.b = t2.b); String templateStr = "UPDATE $destTableName$ SET $columnName$ = " + "(SELECT $columnName$ FROM $sourceTableName$ " + "WHERE $sourceTableName$.$whereColumnName$ = $destTableName$.$whereColumnValue$"; StringTemplate st = new StringTemplate(templateStr);
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	save the pointer needed for insert and delete operations
WITHOUT_CLASSIFICATION	tell the rest of the world that the table has changed. The 'fire' method used here is very course - it says that the whole table has been changed when really only one row has been added. However, finer-grained methods did not seem to cause the right effect, so I'm using this one untill someone reports a problem with it. Also, if either of these notifications (the actual model and the sortable model) are eliminated, it either throws an exception or does not update the GUI. Go figure. Finally, the 'fire' on the _acutalModel is triggered from this method rather than from inside the MyJTable code because the add() method used to add a row is also used when loading the table with lots of rows, and in that case we do not want to generate events until all of the rows have been added, so the 'fire' cannot happen there.
WITHOUT_CLASSIFICATION	At least one version of PostgreSQL through the JDBC/ODBC bridge returns an empty result set for the list of table types. Another version of PostgreSQL returns 6 entries of "SYSTEM TABLE" (which we have already filtered back to one).
WITHOUT_CLASSIFICATION	catalog schema tableName columnName keySequence pkName
WITHOUT_CLASSIFICATION	PointBase doesn't follow the spec with regard to column 11 of getColumns (should return a type constant, but instead returns a Boolean.
WITHOUT_CLASSIFICATION	DatabaseObjectType.UDF_TYPE_DBO=UDF Type
WITHOUT_CLASSIFICATION	-- Path operations --
WITHOUT_CLASSIFICATION	/ A deadlock chain is circular and does not have a defined beginning Pid. In order to make the string representation of a deadlock chain unique we put the smallest Pid at the beginning of the chain.
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	this will skip blank lines
WITHOUT_CLASSIFICATION	encountered a comment character at the beginning of the line so just ignore the rest of the line
WITHOUT_CLASSIFICATION	check to see if the column index is within the bounds of our header array
WITHOUT_CLASSIFICATION	this flag is used as a loop exit condition during parsing
WITHOUT_CLASSIFICATION	/ <summary> / How much usable data has been read into the stream, / which will not always be as long as Buffer.Length. / </summary>
WITHOUT_CLASSIFICATION	IDataTypeComponent interface methods
WITHOUT_CLASSIFICATION	CopyTableListener interface methods
WITHOUT_CLASSIFICATION	Yes
WITHOUT_CLASSIFICATION	No
WITHOUT_CLASSIFICATION	If the source column is DISTINCT and the session is PostgreSQL, try to get the underlying type.
WITHOUT_CLASSIFICATION	Date/Time types never declare a length. Just return something larger than 0 so we bypass other checks above.
WITHOUT_CLASSIFICATION	Oracle declares the column size to be 4000, regardless of the maximum length of the CLOB field. So if the Oracle BLOB/CLOB column contains values that exceed 4000 chars and we use colInfo.getColumnSize() we might create a destination column that is too small for the data that will be copied from Oracle. We specify a default value of 4000 in case the table has no records or if the BLOB/CLOB column contains only null values.
WITHOUT_CLASSIFICATION	skip this table, try the next.
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	trim the column name in case of HADB
WITHOUT_CLASSIFICATION	trim the column name in case of HADB
WITHOUT_CLASSIFICATION	final IObjectTreeAPI api = Compat.getIObjectTreeAPI(session, this);
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	mockApplication
WITHOUT_CLASSIFICATION	Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.
WITHOUT_CLASSIFICATION	Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.
WITHOUT_CLASSIFICATION	trim the table name in case of HADB
WITHOUT_CLASSIFICATION	Reads the value from the specified ResultSet at column index index, and based on the type, calls the appropriate setXXX method on ps with the value obtained. @param ps @param sourceColType @param destColType @param index @param rs @return a string representation of the value that was bound. @throws SQLException
WITHOUT_CLASSIFICATION	Don't change the case of the identifier if database allows mixed case.
WITHOUT_CLASSIFICATION	ResultSet rs = con.getMetaData().getTables("dbcopysrc", null, "BIGINT_TYPE_TABLE", new String[]{ "TABLE" });
WITHOUT_CLASSIFICATION	private class DBCopyPluginResources extends PluginResources {DBCopyPluginResources(String rsrcBundleBaseName, IPlugin plugin) { super(rsrcBundleBaseName, plugin);}}
WITHOUT_CLASSIFICATION	Column is in both table 1 and 2
WITHOUT_CLASSIFICATION	TableModel tm = new DefaultTableModel(new String [] { "Table", "Column" }, 4) { private static final long serialVersionUID = -8826914717673025881L; public boolean isCellEditable(int rowIndex, int columnIndex) { return false; }};
WITHOUT_CLASSIFICATION	Add session ended listener -- needs for Embedded Derby DB
WITHOUT_CLASSIFICATION	_treeAPI.addDetailTab(DatabaseObjectType.INDEX, new DatabaseObjectInfoTab()); _treeAPI.addDetailTab(DatabaseObjectType.INDEX, new IndexDetailsTab());
WITHOUT_CLASSIFICATION	Shutdown Embedded Derby DB
WITHOUT_CLASSIFICATION	it is always thrown as said in Embedded Derby API. So it is not error it is info
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, but NOT the same one used in the Text and in-cell operations. The in-cell version may replace newline chars with "\n" while this version does not. In other respects it is the same as the in-cell version because both use the _renderer object to do the rendering.
WITHOUT_CLASSIFICATION	/ IBM DB 2 specific code to read view definitions.
WITHOUT_CLASSIFICATION	public Folder getSubFolder(int idx) throws IndexOutOfBoundsException { / return (Folder)_folders.get(idx); }
WITHOUT_CLASSIFICATION	String CHECK_TABLE = "checktable";
WITHOUT_CLASSIFICATION	Supports Session main window only
WITHOUT_CLASSIFICATION	Tabs to add to the database node.
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------ -- main
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------ -- misc
WITHOUT_CLASSIFICATION	"backup metadata only" "inhibit garbage collection" "save old style metadata descriptions" "transportable format" "backup external files as tables" "start backup"
WITHOUT_CLASSIFICATION	load properties and fill missing entries with the global preferences
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	lblTitle.setBackground(new Color(204,204,204)); lblTitle.setName("lblTitle"); lblTitle.setOpaque(true); lblTitle.setText("Default values"); EtchedBorder etchedborder1 = new EtchedBorder(EtchedBorder.RAISED,null,null); lblTitle.setBorder(etchedborder1); jpanel1.add(lblTitle,cc.xywh(2,2,9,1));
WITHOUT_CLASSIFICATION	case SESSION_BEAN_GRANT_AND_REVOKE: return new FirebirdManagerGrantPreferenceBean();
WITHOUT_CLASSIFICATION	/ We try to find a completely free space for the new table frame.
WITHOUT_CLASSIFICATION	Index tab
WITHOUT_CLASSIFICATION	These classes have no package see swingsetthemes.jar
WITHOUT_CLASSIFICATION	/ This theme was presented to SQuirreL by Karsten Lentzsch of jgoodies.com. It is SQuirreL's default theme if the LAF plugin is not used. Here we make the AllBluesBoldMetalTheme also available within the LAF plugin. Thanks a lot Karsten.
WITHOUT_CLASSIFICATION	call sp_help on the stored procedure, then look at the second ResultSet for the parameter information.
WITHOUT_CLASSIFICATION	the constructor above sets this from resources, but we'll override it with the name of the index.
WITHOUT_CLASSIFICATION	i do believe the getSimpleName() will end in ;1 if it's a procedure and ;0 if it's a UDF.
WITHOUT_CLASSIFICATION	GRANT { ALL [ PRIVILEGES ] | permission [ ,...n ] } { [ ( column [ ,...n ] ) ] ON { table | view } | ON { table | view } [ ( column [ ,...n ] ) ] | ON { stored_procedure | extended_procedure } | ON { user_defined_function } } TO security_account [ ,...n ] [ WITH GRANT OPTION ] [ AS { group | role } ] REVOKE [ GRANT OPTION FOR ] { ALL [ PRIVILEGES ] | permission [ ,...n ] } { [ ( column [ ,...n ] ) ] ON { table | view } | ON { table | view } [ ( column [ ,...n ] ) ] | ON { stored_procedure | extended_procedure } | ON { user_defined_function } } { TO | FROM } security_account [ ,...n ] [ CASCADE ] [ AS { group | role } ]
WITHOUT_CLASSIFICATION	private javax.swing.JComboBox cbFieldType; private javax.swing.JCheckBox chAutoIncrement; private javax.swing.JCheckBox chBinary; private javax.swing.JCheckBox chNotNull; private javax.swing.JCheckBox chUnsigned; private javax.swing.JLabel lbAttributes; private javax.swing.JLabel lbDefault; private javax.swing.JLabel lbFieldLength; private javax.swing.JLabel lbFieldName; private javax.swing.JLabel lbFieldType; private javax.swing.JLabel lbFields; private javax.swing.JTextField tfFieldDefault; private javax.swing.JTextField tfFieldLength; private javax.swing.JComboBox cbFieldName; private javax.swing.JButton buttonUpdate; private javax.swing.JButton buttonCancel; private JDialog _dlog; private FieldDetails fd; private int selectedIndex; private DBUtils dbUtils; protected String SQLCommandRoot = "ALTER TABLE "; protected String SQLCommand = ""; End of variables declaration
WITHOUT_CLASSIFICATION	Action performed for the combo box private void cbFieldNameActionPerformed(java.awt.event.ActionEvent evt) { selectedIndex = cbFieldName.getSelectedIndex(); DefaultComboBoxModel comboModel = (DefaultComboBoxModel) cbFieldName.getModel(); FieldDetails fd = (FieldDetails) comboModel.getElementAt(selectedIndex); cbFieldName.setSelectedItem(fd.getFieldName()); cbFieldType.setSelectedItem(fd.getFieldType()); tfFieldLength.setText(fd.getFieldLength()); tfFieldDefault.setText(fd.getDefault()); chAutoIncrement.setSelected(fd.IsAutoIncrement()); chNotNull.setSelected(fd.IsNotNull()); }
WITHOUT_CLASSIFICATION	final FormLayout layout = new FormLayout( "3dlu, 75dlu:grow(1.0), 3dlu", "center:pref:grow(1.0), 8dlu, bottom:pref"); final DefaultFormBuilder builder = new DefaultFormBuilder(layout); builder.setDefaultDialogBorder(); builder.setLeadingColumnOffset(1); builder.append(buildMainPanel(session, ti)); builder.nextLine(); builder.appendSeparator(); builder.nextLine(); builder.append(buildToolBar()); return builder.getPanel();
WITHOUT_CLASSIFICATION	boolean isSelected = _exportPrefsChk.isSelected(); _exportPrefsText.setEditable(isSelected); _exportPrefsBtn.setEnabled(isSelected); isSelected = _exportDriversChk.isSelected(); _exportDriversText.setEditable(isSelected); _exportDriversBtn.setEnabled(isSelected); isSelected = _exportAliasesChk.isSelected(); _exportAliasesText.setEditable(isSelected); _exportAliasesBtn.setEnabled(isSelected); _includeUserNamesChk.setEnabled(isSelected); _includePasswordsChk.setEnabled(isSelected);
WITHOUT_CLASSIFICATION	_exportDriversChk.addActionListener(_mediator); _exportAliasesChk.addActionListener(_mediator); _exportPrefsBtn.addActionListener(new BrowseButtonListener(_exportPrefsText)); _exportDriversBtn.addActionListener(new BrowseButtonListener( _exportDriversText)); _exportAliasesBtn.addActionListener(new BrowseButtonListener(_exportAliasesText)); _exportPrefsChk.setSelected(prefs.getExportPreferences()); _exportDriversChk.setSelected(prefs.getExportDrivers()); _exportAliasesChk.setSelected(prefs.getExportAliases()); _includeUserNamesChk.setSelected(prefs.getIncludeUserNames()); _includePasswordsChk.setSelected(prefs.getIncludePasswords()); _exportPrefsText.setText(prefs.getPreferencesFileName()); _exportDriversText.setText(prefs.getDriversFileName()); _exportAliasesText.setText(prefs.getAliasesFileName());
WITHOUT_CLASSIFICATION	Since it is likely to have the procedure separator on it's own line, and it is key to letting us know that proceeding statements form a multi-statement procedure or function, it deserves it's own place in the _queries arraylist. If it is followed by other procedure or function creation blocks, we may fail to detect that, so this just goes through the list and breaks apart statements on newline so that this cannot happen.
WITHOUT_CLASSIFICATION	Nil out the timer so that it can be gc'd
WITHOUT_CLASSIFICATION	Selects the distinct values from the source column.
WITHOUT_CLASSIFICATION	Inserts all keys into the new column depending on the content in the old column.
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Thread SEARCHING ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	/ There are a lot of goodies in the ExtSettingsInitializer that might be interesting in th future. Unfortunately some conflicts with some of Squirrels shortcuts are in ExtSettingsInitializer Settings.removeInitializer(ExtSettingsInitializer.NAME); Settings.addInitializer(new ExtSettingsInitializer(), Settings.CORE_LEVEL); /
WITHOUT_CLASSIFICATION	Needs to be done at this moment. That's why we can't call updateFromPreferences() here.
WITHOUT_CLASSIFICATION	Formatting
WITHOUT_CLASSIFICATION	printing set
WITHOUT_CLASSIFICATION	The parser didn't get triggered on shift+insert. We do it here by hand
WITHOUT_CLASSIFICATION	Check for identifier
WITHOUT_CLASSIFICATION	case ISA_SLASH: state = INIT; return SQLTokenContext.MINUS;
WITHOUT_CLASSIFICATION	this didn't work final int pos = getCaretPosition(); final Document doc = _textArea.getStyledDocument(); final Element docElem = doc.getDefaultRootElement(); final Element lineElem = docElem.getElement(getCaretLineNumber()); return lineElem.getElementIndex(pos);
WITHOUT_CLASSIFICATION	GOOD - Converting a URL to a file this way is fine when the file path contains spaces
WITHOUT_CLASSIFICATION	This column is created in the create script abd unused unless testing DB2
WITHOUT_CLASSIFICATION	Tables might have triggers that depend on sequences, so drop tables next.
WITHOUT_CLASSIFICATION	db2pkCol is used to create a PK when using DB2. DB2 doesn't allow you to add a PK to a table after it has been constructed unless the column(s) that comprise the PK were originally there when created and created not null.
WITHOUT_CLASSIFICATION	We need to add a second column to have a unique constraint so that we can drop that one. Progress doesn't allow the very first index to ever be dropped.
WITHOUT_CLASSIFICATION	TODO move to new standard location and rewrite test to be less static
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#initialize()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#initialize()
WITHOUT_CLASSIFICATION	catalog schema tableName columnName dataType; 1 == CHAR typeName columnSize decimalDigits radix isNullAllowed defaultValue isNullable
WITHOUT_CLASSIFICATION	Need to adjust param which is 1-based(JDBC) to a 0-based number for array access
WITHOUT_CLASSIFICATION	Null tests
WITHOUT_CLASSIFICATION	Null tests
WITHOUT_CLASSIFICATION	this should throw an exception - should not allow multiple custom tokenizers to be installed for a single session.
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	We could make this expectation more restrictive currently. However, we might have impls that have wildly different queries in the future. We don't want to sacrifice flexibility to use this test for a "perceived" benefit of mirroring the current implementations.
WITHOUT_CLASSIFICATION	Should at least bind the tablename to a bind var in the SQL
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	Mock objects
WITHOUT_CLASSIFICATION	FileWrapper mockDownloadsDirectory = mockHelper.createMock("mockDownloadsDirectory", FileWrapper.class); expect(mockDownloadsDirectory.isDirectory()).andStubReturn(true); expect(mockFileWrapperFactory.create(mockUpdateDirectory, UpdateUtil.DOWNLOADS_DIR_NAME)); expectLastCall().andReturn(mockDownloadsDirectory);
WITHOUT_CLASSIFICATION	expect(backupFile.getAbsolutePath()).andReturn("mockBackupFrameworkJarFile");
WITHOUT_CLASSIFICATION	mockResultSet = mockHelper.createMock(ResultSet.class);
WITHOUT_CLASSIFICATION	Java6 types ROWID NVARCHAR NCHAR LONGNVARCHAR NCLOB SQLXML
WITHOUT_CLASSIFICATION	local expectations
WITHOUT_CLASSIFICATION	local expectations
WITHOUT_CLASSIFICATION	this function returns the resulting process from the exec
WITHOUT_CLASSIFICATION	Regression test for HARMONY-382
WITHOUT_CLASSIFICATION	invalid file URIs not hierarchical not file scheme not absolute non empty authority non empty query non empty fragment
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	Tests to see if the correct prefix was used to create the tempfiles.
WITHOUT_CLASSIFICATION	Tests for creating a tempfile with a filename shorter than 3 characters.
WITHOUT_CLASSIFICATION	If the "short file name" doesn't exist, then assume that the 8.3 file name compatibility is disabled.
WITHOUT_CLASSIFICATION	Old test left behind "garbage files" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)
WITHOUT_CLASSIFICATION	Checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	Do not return null when trying to use list(Filename Filter) on a file rather than a directory. All other "list" methods return null for this test case.
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f1 Is Set To ReadOnly." , f1.canWrite());
WITHOUT_CLASSIFICATION	Need a directory that exists
WITHOUT_CLASSIFICATION	Regression for HARMONY-2674
WITHOUT_CLASSIFICATION	testLongVarbinaryColType(sourceName, destName); testNumericColType(sourceName, destName); testRealColType(sourceName, destName); testSmallIntColType(sourceName, destName); testTimestampColType(sourceName, destName); testTimeColType(sourceName, destName); testTinyIntColType(sourceName, destName);
WITHOUT_CLASSIFICATION	ISession mockSession = mockHelper.createMock(ISession.class); IApplication mockApplication = mockHelper.createMock(IApplication.class); expect(mockSession.getApplication()).andStubReturn(mockApplication); TaskThreadPool mockThreadPool = mockHelper.createMock(TaskThreadPool.class); mockThreadPool.addTask(EasyMock.isA(Runnable.class)); expectLastCall().anyTimes(); expect(mockApplication.getThreadPool()).andStubReturn(mockThreadPool); String[] tableTypes = new String[] { "TABLE" }; ISQLConnection mockSQLConnection = mockHelper.createMock(ISQLConnection.class); expect(mockSession.getSQLConnection()).andStubReturn(mockSQLConnection); SQLDatabaseMetaData mockSQLDatabaseMetaData = mockHelper.createMock(SQLDatabaseMetaData.class); expect(mockSQLConnection.getSQLMetaData()).andStubReturn(mockSQLDatabaseMetaData); expect(mockSQLDatabaseMetaData.getTableTypes()).andStubReturn(tableTypes); mockHelper.replayAll(); classUnderTest = new DefaultDatabaseExpander(mockSession); mockHelper.verifyAll(); mockHelper.resetAll();
WITHOUT_CLASSIFICATION	IMessageHandler messageHandler = getEasyMockMessageHandler();
DESIGN	TODO: pass in a message handler so user gets error msgs.
DESIGN	Should probably create my own table model but i am being a bit slack.
DESIGN	TODO: Move all code other than for window creation up to AliasWindowManager Factory to handle creation of maintenance sheets for SQL Alias objects. @author <A HREF="mailto:colbell@users.sourceforge.net">Colin Bell</A>
DESIGN	Required otherwise it gets too wide.
DESIGN	Required otherwise it gets too wide.
DESIGN	JASON: Should be part of status bar?
DESIGN	Don't call super. Packing this frame causes problems.
DESIGN	TODO: This is a nasty quick hack. Needs an API to do this.
DESIGN	TODO: This should not be public. Check all usages of it and put appropriate methods in an API object.
DESIGN	TODO: This shouldn't be public. Its only been done for the JComplete plugin. At some stage this method will be returned to package visibility.
DESIGN	?? Extract this out into a class like CascadeInternalFramePositioner.
DESIGN	Cast is not so nice, but framework doesn't meet new requirements.
DESIGN	Silently ignore, what could we do anyway?
DESIGN	??Need to tell object to display itself in a panel.
DESIGN	TODO: Clean this mess up!!!! Load plugins. Load all plugin jars into class loader.
DESIGN	TODO: Clean this mess up!!!! Load plugins. Load all plugin jars into class loader.
DESIGN	?? Need to associate a panel with an object type somehow.
DESIGN	TODO: Should have session listeners instead of these calls.
DESIGN	multiple rows - not good
DESIGN	hear no evil, see no evil
DESIGN	Facade methods for IMessageHandler. We don't want to allow code to directly access an internal IMessageHandler, now that the IMessageHandler interface requires an ExceptionFormatter to be injected for methods that accept Exceptions.
DESIGN	Implement IDataSetUpdateableModel interface and IDataSetUpdateableTableModel interface TODO: THIS CODE WAS COPIED FROM ContentsTab. IT SHOULD PROBABLY BE PUT INTO A COMMON LOCATION AND SHARED BY BOTH THIS CLASS AND ContentsTab.
DESIGN	JASON: Do we need these?
DESIGN	JASON: Remove?? _session.getSessionSheet().getSQLPanel().executeSQL(sql);
DESIGN	SQLFilterAction.java Created on March 22, 2003, 10:55 AM Adapted from SessionPropertiesAction.java by Colin Bell. TODO: CHange name to ContentsTabFilterAction
DESIGN	JASON: Do we need this? getSQLPanel().selected();
DESIGN	TODO: Rename to IObjectTreeNodeExpander
DESIGN	END-KLUDGE
DESIGN	????? if desired, get fancy and use icons in buttons instead of text ?????????
DESIGN	TODO: Find out why KLUDGE: For some reason, I am not able to get the sheet to size correctly. It always displays with a size that causes the sub-panels to have their scrollbars showing. Add a bit of an increase in the size of the panel so the scrollbars are not displayed.
DESIGN	END-KLUDGE
DESIGN	TODO: Spring-inject when this class is a Spring bean
DESIGN	TODO: Spring-inject when this class is a Spring bean
DESIGN	the utility class that reads and writes release info from/to the release.xml file TODO: Spring-inject when this class is a Spring bean
DESIGN	TODO: move to IOUtilities @see net.sourceforge.squirrel_sql.client.update.UpdateUtil#createZipFile(FileWrapper, FileWrapper[])
DESIGN	TODO: Move this to IOUtilities Extracts the specified zip file to the specified output directory. @param zipFile @param outputDirectory @throws IOException
DESIGN	We set expected and checksum to -1 here, since we don't have that information for release.xml file TODO: Can HttpClient be used to get the byte-size of release.xml so we can perform this check?
DESIGN	Always add plugins - there is not a good way to compare plugin zips and their extracted contents at the moment. TODO: Determine the best way to derive the filesize and checksum of the plugin zip that was last extracted. Should we keep it around? How about using the current release.xml file ? Come to think of it, perhaps we shouldn't be computing the checksum of any existing files, why don't we just get it from the current release.xml file?
DESIGN	CSE: moved this code down here to fix repaint problems on first display - bounds should be set before install Uninstall the old popup from root pane and install the new one. Even in case they are the same objects it's necessary to cover the workspace switches etc.
DESIGN	??GETRIDOFTHIS
DESIGN	We are displaying a new dataset, so if there was a cell editor in operation, tell it to cancel. ???? How does this impact popup display?
DESIGN	check the error stream for a problem This is a bit questionable since it is possible for processes to output something on stderr but continue processing. But without this, some problems are not seen (e.g. "bad argument" type messages from the process).
DESIGN	TODO: These 2 should be handled with an Iterator.
DESIGN	TODO: This should be handled with an Iterator
DESIGN	TODO: These 2 should be handled with an Iterator!!!
DESIGN	TODO: This should be handled with an Iterator!!!
DESIGN	TODO: When 1.4 is the earliest version supported, add the following line:setSurrendersFocusOnKeystroke(true); This should help handle some problems with navigation using tab & return to move through cells.
DESIGN	The following only works if SwingUtilities.getRoot(table) returns and instanceof BaseMDIParentFrame. If SwingTUilities.getRoot(table) returns and instance of Dialog or Frame, then other code must be used.
DESIGN	tell caller that the underlying data was not updated ?? is this always true, or could the data be updated with a warning?
DESIGN	The following only works if SwingUtilities.getRoot(table) returns and instanceof BaseMDIParentFrame. If SwingTUilities.getRoot(table) returns and instance of Dialog or Frame, then other code must be used.
DESIGN	TODO: RENAME to DataSetViewerPropertyDestination
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renderer ?? for this data type.
DESIGN	This is a bit hard coded but if we use _scale here some number displays go crazy.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	set the property values Note: this may have already been done by another instance of this DataType created to handle a different column.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	set the property values Note: this may have already been done by another instance of this DataType created to handle a different column.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	This is a bit hard coded but if we use _scale here some number displays go crazy.
DESIGN	set the property values Note: this may have already been done by another instance of this DataType created to handle a different column.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	set the property values Note: this may have already been done by another instance of this DataType created to handle a different column.
DESIGN	?? Is there any way to check for invalid input? Valid input includes ?? at least any printable character, but could it also include unprintable ?? characters?
DESIGN	set the property values Note: this may have already been done by another instance of this DataType created to handle a different column.
DESIGN	No appropriate DataType for this column, so do the best we can with what we know. THIS MAY NOT BE THE BEST BEHAVIOR HERE!!!!!!!
DESIGN	No appropriate DataType for this column, so do the best we can with what we know. THIS MAY NOT BE THE BEST BEHAVIOR HERE!!!!!!!
DESIGN	TODO: Need to define a better approach to getting dialects. That is, we don't really want to ever prompt the user in this case. It's always Oracle. Yet, we may have a new OracleDialect at some point.
DESIGN	TODO: Hard coded -. JDBC/ODBC bridge JDK1.4 brings back -9 for nvarchar columns in MS SQL Server tables.
DESIGN	set the property values Note: this may have already been done by another instance of this DataType created to handle a different column.
DESIGN	Unfortunately we need to remove the exising tree table component and create a new one due to limitations with replacing models in the existing sun implementation. Why on earth they couldnt formalise the tree table example on JFC (which we use) a bit more is anyones guess.
DESIGN	This is a work-around for what looks like a bug to me - it is a syntax error to qualify with the schema the new table name, but not the old as in: ALTER TABLE "public"."tablerenametest" RENAME TO "public"."tablewasrenamed" The second "public". is apparently not (currently) a valid thing to do.
DESIGN	Total Hack! Type OTHER(1111) can be other types as well?
DESIGN	A dialect delegate for the Progress database. TODO: Progress specification says that the sum of all column lengths of a table row may not exceed 31960. Need to add an interface method to the HibernateDialect interface that takes an array of lengths and and checks the sum of columns for a row. This maximum number may be different across databases so this check method needs to be implemented by each dialect. @author manningr
DESIGN	TODO: Bizarre that I couldn't find a valid SQL to drop an index.
DESIGN	TODO verify this is correct
DESIGN	TODO Need to have a generic hibernate dialect extend this to provide the types.
DESIGN	Don't use "real" type. Axion sets the column size to 12 by default, yet it can handle more precision. So data being copied from the real column can potentially be larger than what the column claims to support. This will be a problem for other databases that pay attention to the column size. TODO: Perhaps re-introduce the REAL type, but use the new getPrecisionDigits to max out the precision.
DESIGN	Discovered that the loginame field can be null - in that case, how to know we have the correct view?
DESIGN	TODO: subclass these hibernate dialects to provide the "canPasteTo" api method in HibernateDialect interface. private static final DB2390Dialect db2390Dialect = new DB2390Dialect();
DESIGN	TODO: should the constraint name simply be the column name or something more like a constraint name?
DESIGN	TODO: figure out why bind variables aren't working
DESIGN	TODO: should I be adding quotes if user wants identifiers quoted??
DESIGN	TODO: verify this
DESIGN	TODO: Once we're happy that JFCUtilities is no longer required
DESIGN	Should the data be first cloned so that the sorting doesn't take place on the array that is used in getValue() TODO: This is a must if sorting is done in a thread! ??
DESIGN	Copied from Java Doc Matcher.replaceAll: Note that backslashes (\) and dollar signs ($) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string. Dollar signs may be treated as references to captured subsequences as described above, and backslashes are used to escape literal characters in the replacement string.
DESIGN	Need to somehow call SQLResultExecuterPanel.reRunSelectedResultTab(true); Something like : SQLResultExecuterPanel panel = getPanel(); panel.reRunSelectedResultTab(true); However, that doesn't apply when the user is exporting from the table contents table. There needs to be a more generic way to do this for all tables containing data that is to be exported where some of the fields contain placeholders. For now, we just inform the user and let them either continue or abort and change the configuration manually, re-run the query / reload the table data and re-export.
DESIGN	Work around some UTC and Daylight saving offsets
DESIGN	TODO: Delete ME
DESIGN	work-around for bug which means we must use "dbo" for schema
DESIGN	TODO: Hard coded -. JDBC/ODBC bridge JDK1.4 brings back -9 for nvarchar columns in MS SQL Server tables. -8 is ROWID in Oracle.
DESIGN	all of the following have been converted to use the DataType objects So, why not just have case Types.NULL and default??? (this seems pointless) RMM 20070726
DESIGN	TODO: Put in all the property accessors
DESIGN	TODO: Decide whether this should be a bound property or not. getPropertyChangeReporter().firePropertyChange(ISQLDriver.IPropertyNames.NAME, _name, _name);
DESIGN	TODO: When JDK1.4 is the earliest JDK supported by Squirrel then remove the hardcoding of the boolean data type.
DESIGN	TODO: Rename this to getTableType.
DESIGN	Should probably create my own table model but i am being a bit slack.
DESIGN	TODO: is this right???
DESIGN	TODO: figure out a more reliable way to handle OTHER type which indicates a database-specific type.
DESIGN	Hack to deal with Ingres IIE meta tables.
DESIGN	Hack to deal with Axion AXION_ tables.
DESIGN	Hack to deal with Firebird's RDB meta tables.
DESIGN	Hack to deal with Sybase's sys tables
DESIGN	This is weird - if I don't set this the column header doesn't line up with the column contents.
DESIGN	?? Split these 4 functions off into a subclass of BaseFavouriteAction
DESIGN	TODO: How to let the user customize this??
DESIGN	This could (perhaps more elegantly) be done by recursion
DESIGN	Skip formatting for Stored Procedures - They can have comments embedded in them, and I'm presently not sure how the formatter handles this.
DESIGN	TODO: What about these Viewport.font, ColorChooser.font, InternalFrame.font, OptionPane.font, "Panel.font", ScrollPane.font, DesktopIcon.font
DESIGN	this should just bring back one table, i hope.
DESIGN	TODO: what I really want to do here is get the SQL script and replace "CREATE PROCEDURE" with "ALTER PROCEDURE", then put that in the SQL pane and NOT execute it.
DESIGN	TODO: Get rid of this class. This combobox contains all the columns in an SQL table. @author <A HREF="mailto:colbell@users.sourceforge.net">Colin Bell</A>
DESIGN	TODO: Delete this class - unused
DESIGN	Should probably create my own table model but i am being a bit slack.
DESIGN	TODO: ? Dialog Handling on Cancelled ?
DESIGN	empty string ('') seems to be represented as null in some drivers. Not sure if this is the best thing to do here, but it fixes an issue where SQL returns is set default to '', when it is already null.
DESIGN	This refactoring depends on the following dialect API methods: getUpdateSQL
DESIGN	This refactoring depends on the following dialect API methods: getUpdateSQL
DESIGN	Hack!!! hopefully the FK name will always be the last token!
DESIGN	Drop FK constraints before dropping any tables. Otherwise, we may drop the child table prior to dropping it's FKs, which would be an error. TODO: This should be done in the dialect's getTableDropSQL method for a database specific handling(or ignoring) of this problem.
DESIGN	This refactoring depends on the following API methods: getCreateTableSQL
DESIGN	TODO: Do we need this one.
DESIGN	TODO: Do we need this one.
DESIGN	TODO: Do we need this one.
DESIGN	TODO: Do we need this one.
DESIGN	BAD - Converting a URL to a file this way is problematic when the file path contains spaces
DESIGN	TODO: Temporary until we sort out a better way to do guido's fix assertEquals(SECOND_STMT_SEP, qt2.getSQLStatementSeparator());
DESIGN	TODO: Make properties file Application.properties so we can use class name to generate properties file name.
DESIGN	The following is a work-around for the problem on Mac OS X where the Apple LAF delegates to the Swing Popup factory but then tries to set a 90% alpha on the underlying Cocoa window, which will always be null if you're using JGoodies L&F see http:www.caimito.net/pebble/2005/07/26/1122392314480.html#comment1127522262179 This has no effect on Linux/Windows
DESIGN	JASON: Mow that multiple object trees exist storing the edit where by objectInfo within session won't work. It needs to be objectinfo within something else. private final Map _editWhereColsSheets = new HashMap();
DESIGN	TODO Maybe we should have a checkbox to allow the user to toggle default value on/off. Some dbs (like DB2) treat empty string "" as a different default value than null.
DESIGN	The call here is the result of a desperate fight to find a place where the components in the split had not height = 0. If someone knows a better way please tell me I'll apreciate any advice. gerdwagner@users.sourceforge.net
DESIGN	On Win 2000 & XP mnemonics are normally hidden. To make them visible you press the alt key. Under the Windows L&F pressing alt may not work. This code is a workaround. See bug report 4736093 for more information.
DESIGN	colDefs not in same order as DB, so search for matching colDef entry Note: linear search here will NORMALLY be not too bad because most tables do not have huge numbers of columns.
DESIGN	If SQL executing produced warnings then write them out to the session message handler. TODO: This is a pain. PostgreSQL sends "raise notice" messages to the connection, not to the statment so they will be mixed up with warnings from other statements.
DESIGN	TODO: Figure out why the selection of the root node in the object tree is undone if we don't delay. It seems like some other thread racing to set the selected node to none. When this happens, the detail pane for the root node disappears when a session is first opened, or when an ObjectTree frame is created. This is a really crappy and unreliable way to fix this problem, but it hides the problem for now. A better understanding of the architecture of session creation is required before a proper solution can be attempted. RMM 20051217
DESIGN	For some reason, when the Oracle plugin adds details tabs for triggers, the _tabPnl's first tab ends up being the trigger details tab and not the generic database object info tab. This causes the _tabs length to be 1 tab greater than the tabs that are actually in the _tabPnl. This throws off the selection such that the tab selected in the tab panel doesn't get rendered until the tab to the right of the selected tab is selected. This is a work-around for this problem until I can determine why the DatabaseObjectInfoTab never makes it into the _tabPnl in the first place.
DESIGN	This info is merely a placeholder in the tree that we can use to get index name and parent name more easily. We probably should create a IndexColumnInfo that has this extra info in it.
DESIGN	Note. Some DBMSs such as Oracle do not allow: "select , rowid from table" You cannot have any column name in the columns clause if you have in there. Aliasing the table name seems to be the best way to get around the problem.
DESIGN	KLUDGE: We want some info about the columns to be available for validating the user input during cell editing operations. Ideally we would get that info inside the ResultSetDataSet class during the creation of the columnDefinition objects by using various functions in ResultSetMetaData such as isNullable(idx). Unfortunately, in at least some DBMSs (e.g. Postgres, HSDB) the results of those calls are not the same (and are less accurate than) the SQLMetaData.getColumns() call used in ColumnsTab to get the column info. Even more unfortunate is the fact that the set of attributes reported on by the two calls is not the same, with the ResultSetMetadata listing things not provided by getColumns. Most of the data provided by the ResultSetMetaData calls is correct. However, the nullable/not-nullable property is not set correctly in at least two DBMSs, while it is correct for those DBMSs in the getColumns() info. Therefore, we collect the collumn nullability information from getColumns() and pass that info to the ResultSet to override what it got from the ResultSetMetaData.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	set the property values Note: this may have already been done by another instance of this DataType created to handle a different column.
DESIGN	?? Best guess: read object? ?? This is probably the wrong thing to do here, but ?? I don't know what else to try.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	set the property values Note: this may have already been done by another instance of this DataType created to handle a different column.
DESIGN	TODO Probably want to allow the user to set these sequence properties ?? Sequence settings.
DESIGN	Don't use tinyint for now, even though Mckoi "supports" it. It's notion of tinyint is 7-bit (not 8-bit) so it is not compatible with other DBs and leads to overflow (resulting in negative values which are a corruption of the actual value inserted/updated). This is not a great work-around. I filed a bug report on the mailing list; hopefully it will get fixed soon.
DESIGN	TODO: Hard coded -. JDBC/ODBC bridge JDK1.4 brings back -9 for nvarchar columns in MS SQL Server tables. -8 is ROWID in Oracle.
DESIGN	Arrays of Strings are a special case. In XMLBeanWriter method ProcessProperty an array of Strings is turned into a list of StringWrapper objects in the XML (presumably so that when reading them back we have a class that we can call setters on). Thus, when reading back an array of Strings we actually read an array of StringWrappers, which gives a type mis-match in the following arrayCopy. Therefore we need to convert the data that is currently in the StringWrapper objects into actual Strings.
DESIGN	TODO: just noticed that MySQL 5.0 supports a multi-bit BIT column by using the getObject/setObject methods with a byte[]. So it would be valuable at some point to make this code a bit more dbms-specific
DESIGN	TODO: Is giving a FK constraint a name universally supported and done the same way on every database?
DESIGN	H2 uses Java classes that implement the "Trigger" interface to operate on database tables rows when an action triggers them. Therefore, there is currently no way to access the source for a trigger. Hopefully this will change at some point in the future. _treeAPI.addDetailTab(DatabaseObjectType.TRIGGER, new TriggerSourceTab("The source of the trigger"));
DESIGN	TODO: This won't work when the column has values with quotes in them. Use PreparedStatements instead. Hmmm... instead of insert statements, could we not just create a sequence and generate a select statement that: a) uses the sequence for the pkid b) selects distinct values That would be a more efficient approach that would also eliminate this quoting problem
DESIGN	TODO: Make Parameter implement SQLItem interface which has a getString method which can also be implemented by SQLString, or SQLFragment or some such. We can then eliminate the use of instanceof below and clean up the code a bit, by making itemsInSql look like: ArrayList<SQLItem> itemsInSql = new ArrayList<SQLItem>();
DESIGN	Some dbs (like McKoi) make -1 the default for scale. Apply the same hack as above.
DESIGN	Evil hack to split the vacuum output a little.
DESIGN	HACK: some dbs (like Frontbase) don't support boolean types. I've tried tinyint, bit and boolean as the column type, and setBoolean fails for all three. It's a mystery at this point what column the getBoolean/setBoolean methods actually work on iin FrontBase.
DESIGN	not used
DESIGN	JASON: Make menu smarter. When second window for the same session is added create a hierarchical menu for all windows for the session.
DESIGN	TODO: Move all code other than for window creation up to AliasWindowManager Factory to handle creation of maintenance sheets for SQL Driver objects. @author <A HREF="mailto:colbell@users.sourceforge.net">Colin Bell</A>
DESIGN	TODO: Delete this class Copyright (C) 2001 Colin Bell colbell@users.sourceforge.net This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
DESIGN	TODO: Delete this class Copyright (C) 2001 Colin Bell colbell@users.sourceforge.net This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
DESIGN	TODO: Delete this class Copyright (C) 2001 Colin Bell colbell@users.sourceforge.net This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
DESIGN	TODO: Delete Me
DESIGN	This is (a logically not sufficent) try to cope with the problem that there are the following contradictory rules in the JDBC API Doc: Statement.getResultSet(): This method should be called only once per result. Statement.getUpdateCount(): This method should be called only once per result. Statement.getMoreResults(): There are no more results when the following is true: (!getMoreResults() && (getUpdateCount() == -1) If getMoreResults() returns false, we don't know if we have more results, we only know that it isn't a result set. Since we called getUpdateCount() before getMoreResults() because we would like to know the update count of the first result, we might not be allowed to call getUpdateCount() again. The Intersystems Cache Driver for example always returns the same updateCount on simple INSERT, UPDATE, DELETE statements not matter if getMoreResults() was called. So updateCount never gets -1 and this will loop forever. When I discussed the issue with the Intersystems people they just told me not to call getUpdateCount() twice. That simple. My hope is that this will cure problems with DBs that just don't care for multiple result sets.
DESIGN	JASON: Do we need these?
DESIGN	TODO: Delete me Copyright (C) 2002-2003 Johan Compagner jcompagner@j-com.nl This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
DESIGN	This <CODE>ICommand</CODE> displays a dialog box that allows the user to enter a 'where' clause or an 'order by' clause used when getting data via the 'Contents' tab. @author <A HREF="mailto:mjhammel@users.sourceforge.net">Maury Hammel</A> TODO: Change name to ContentsTabFilterCommand
DESIGN	TODO: - Col - Add method to Databasemetadata that returns array of objects for getBestRowIdentifier. For PostgreSQL put this kludge in the new function. THis way all the kludges are kept in one place. KLUDGE!!!!!! For some DBs (e.g. PostgreSQL) there is actually a pseudo-column providing the rowId, but the getBestRowIdentifier function is not implemented. This kludge hardcodes the knowledge that specific DBs use a specific pseudo-column. Additionally, as of pg 8.1, you must create the table using "WITH OID" appended to the create statement. Otherwise, OID column is not available by default.
DESIGN	Some tables have pseudo column primary keys and others do not. JDBC on some DBMSs does not handle pseudo columns 'correctly'. Also, getTables returns 'views' as well as tables, so the thing we are looking at might not be a table. (JDBC does not give a simple way to determine what we are looking at since the type of object is described in a DBMS-specific encoding.) For these reasons, rather than testing for all these conditions, we just try using the pseudo column info to get the table data, and if that fails, we try to get the table data without using the pseudo column. TODO: Should we change the mode from editable to non-editable?
DESIGN	TODO: Work out why KLUDGE: For some reason, I am not able to get the sheet to size correctly. It always displays with a size that causes the sub-panels to have their scrollbars showing. Add a bit of an increase in the size of the panel so the scrollbars are not displayed.
DESIGN	TODO: Spring-inject when this class is a Spring bean
DESIGN	TODO: Spring-inject when this class is a Spring bean
DESIGN	DB delete worked correctly, so now delete from table IMPORTANT: The user and the creator both work through the SortableTableModel, not the Actual model. Thus the row indexes to delete are given in the SortableTableModel row numbers, so we must work through that model model to actually do the delete.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renderer ?? for this data type.
DESIGN	The following ugly conversion from text to Byte is necessary because the Byte class is inconsistant. When asked to output as Hex, it does so as an UNSIGNED byte, but when asked to read back the same thing using the Hex radix, it insists that the input must be SIGNED. To get around this, we up-size the conversion to Integer, then truncate that to a byte, and finally convert the byte to a Byte. Yech.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renederer ?? for this data type.
DESIGN	Set the password for this alias. @parampasswordThe new password. @throwsValidationException TODO: What conditions?
DESIGN	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
DESIGN	This is a bit hard coded but if we use _scale here some number displays go crazy. _numberFormat.setMaximumFractionDigits(_scale);
DESIGN	?? Is there any way to check for invalid input? Valid input includes ?? at least any printable character, but could it also include unprintable ?? characters?
DESIGN	When I tried using a length for LONGVARBINARY that is the max length of the source records, I get the following exception: Exception condition 239. Data exception - string data, right truncation. I tried bit varying(32767) with data that had max length of 16384. So it's back to maximum length hard-coded for now. registerColumnType(Types.LONGVARBINARY, 2147000000, "bit varying($l)");
DESIGN	TODO: SPATIAL and FULLTEXT indexes require a MyISAM engine for the table. Is there a way to tell what engine is being used for a table? It may not be necessary, since the following doens't hurt if already a MyISAM engine: ALTER TABLE my_table ENGINE = MYISAM; Still, this is not the kind of thing we would want to do automatically, since MyISAM engine is non-transactional. We will probably need to tell the user - somehow - that they need this otherwise the create index statement will fail. Maybe a comment in the script and if they happen to read it they could uncomment the conversion of the engine? Maybe a custom dialog?
DESIGN	TODO: Why shouldn't we call registerSQLDriver here? RMM 20070401
DESIGN	work-around for this driver, which must have "dbo" for schema. The JConnect family of drivers appears to not be affected and can accept a null schema, which is necessary to find tables in other schemas, within the same catalog. Similarly, jTDS 1.2.2 doesn't require this, yet it doesn't return non-dbo schema tables, unfortunately.
DESIGN	OK, this is a hack. Currently, when precision == scale, I have no way to determine if this is valid for the actual data. The problem comes when the source db's precision/scale are greater - or reported to be greater - than the precision/scale of the destination db. In this case, it maximimizes both for the destination, causing a definition that allows 0 digits to the left of the decimal. Trouble is, without looking at the actual data, there is no way to tell if this is valid - in some cases it will be ok (0.0000000789) in others it will not be ok (100.123). So for now, make the scale be approx. one-half of the precision to accomodate the most digits to the left and right of the decimal and hopefully that covers the majority of cases.
DESIGN	For PointBase, if type maps to Pointbase "BLOB", and the size isn't valid (PB requires size for BLOBS) then set it to something reasonably large, like 16MB. 1 is the default size if no size is specified. That's practically useless :)
DESIGN	TODO: is this right???
DESIGN	TODO: is this right???
DESIGN	TODO: maybe instead of throwing an exception, we could ask the user if they would like us to adjust their preference for them.
DESIGN	?? Split these 4 functions off into a subclass of BaseFavouriteAction
DESIGN	?? Split these 4 functions off into a subclass of BaseFavouriteAction
DESIGN	?? Split these 4 functions off into a subclass of BaseFavouriteAction
DESIGN	TODO: Do we need this one.
DESIGN	TODO: Do we need this one.
DESIGN	TODO: Do we need this one.
DESIGN	TODO: Do we need this one.
DESIGN	TODO: Do we need this one.
DESIGN	TODO: Temporary until we sort out a better way to do guido's fix IQueryTokenizer qt2 = sessionUnderTest.getQueryTokenizer();
DESIGN	Here, I don't completely understand how these types are to be used in all databases and I haven't yet had time to implement support in the dialects for them. So, this exclude list will keep these less commonly used types from failing the test. Also, since not all of these types appear in Java5 and we currently support compiling the code base with it, I use the integer values for new types that were introduces in Java6, rather than the type constant name.
