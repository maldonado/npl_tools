// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999096915783	WITHOUT_CLASSIFICATION	9.0308421758201E-8	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999991273538387	WITHOUT_CLASSIFICATION	8.726461613171801E-7	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966896250535	WITHOUT_CLASSIFICATION	3.310374946502356E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966896250535	WITHOUT_CLASSIFICATION	3.310374946502356E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998564140868641	WITHOUT_CLASSIFICATION	1.4358591313586003E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998564140868641	WITHOUT_CLASSIFICATION	1.4358591313586003E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999435714885747	WITHOUT_CLASSIFICATION	5.642851142533281E-5	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.999999764909661	WITHOUT_CLASSIFICATION	2.3509033891333382E-7	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.999999516966143	WITHOUT_CLASSIFICATION	4.830338569650322E-7	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999994874015875	WITHOUT_CLASSIFICATION	5.125984124430051E-7	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995109596193967	WITHOUT_CLASSIFICATION	4.890403806033063E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995109596193967	WITHOUT_CLASSIFICATION	4.890403806033063E-4	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999992493696919	WITHOUT_CLASSIFICATION	7.506303081372613E-7	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999472272973484	WITHOUT_CLASSIFICATION	5.277270265160595E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999472272973484	WITHOUT_CLASSIFICATION	5.277270265160595E-4	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9998218119990966	WITHOUT_CLASSIFICATION	1.781880009034489E-4	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999305702632229	WITHOUT_CLASSIFICATION	6.942973677709832E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999077775003372	WITHOUT_CLASSIFICATION	9.222249966275723E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999077775003372	WITHOUT_CLASSIFICATION	9.222249966275723E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999077775003372	WITHOUT_CLASSIFICATION	9.222249966275723E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999077775003372	WITHOUT_CLASSIFICATION	9.222249966275723E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999077775003372	WITHOUT_CLASSIFICATION	9.222249966275723E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999077775003372	WITHOUT_CLASSIFICATION	9.222249966275723E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999077775003372	WITHOUT_CLASSIFICATION	9.222249966275723E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998393001241436	WITHOUT_CLASSIFICATION	1.606998758564745E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998393001241436	WITHOUT_CLASSIFICATION	1.606998758564745E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998393001241436	WITHOUT_CLASSIFICATION	1.606998758564745E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998393001241436	WITHOUT_CLASSIFICATION	1.606998758564745E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998393001241436	WITHOUT_CLASSIFICATION	1.606998758564745E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998393001241436	WITHOUT_CLASSIFICATION	1.606998758564745E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998393001241436	WITHOUT_CLASSIFICATION	1.606998758564745E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997058476455992	WITHOUT_CLASSIFICATION	2.9415235440084813E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997058476455992	WITHOUT_CLASSIFICATION	2.9415235440084813E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997058476455992	WITHOUT_CLASSIFICATION	2.9415235440084813E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997058476455992	WITHOUT_CLASSIFICATION	2.9415235440084813E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997058476455992	WITHOUT_CLASSIFICATION	2.9415235440084813E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997058476455992	WITHOUT_CLASSIFICATION	2.9415235440084813E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9994451572241939	WITHOUT_CLASSIFICATION	5.548427758061723E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9994451572241939	WITHOUT_CLASSIFICATION	5.548427758061723E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9994451572241939	WITHOUT_CLASSIFICATION	5.548427758061723E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9994451572241939	WITHOUT_CLASSIFICATION	5.548427758061723E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9994451572241939	WITHOUT_CLASSIFICATION	5.548427758061723E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9994451572241939	WITHOUT_CLASSIFICATION	5.548427758061723E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994012682491017	WITHOUT_CLASSIFICATION	5.987317508981809E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994012682491017	WITHOUT_CLASSIFICATION	5.987317508981809E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994012682491017	WITHOUT_CLASSIFICATION	5.987317508981809E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994012682491017	WITHOUT_CLASSIFICATION	5.987317508981809E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994012682491017	WITHOUT_CLASSIFICATION	5.987317508981809E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994012682491017	WITHOUT_CLASSIFICATION	5.987317508981809E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994012682491017	WITHOUT_CLASSIFICATION	5.987317508981809E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9988887623767307	WITHOUT_CLASSIFICATION	0.0011112376232693328	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9988887623767307	WITHOUT_CLASSIFICATION	0.0011112376232693328	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9988887623767307	WITHOUT_CLASSIFICATION	0.0011112376232693328	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9988887623767307	WITHOUT_CLASSIFICATION	0.0011112376232693328	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9998646528102111	WITHOUT_CLASSIFICATION	1.3534718978888173E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9998646528102111	WITHOUT_CLASSIFICATION	1.3534718978888173E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999497585249625	WITHOUT_CLASSIFICATION	5.0241475037424065E-5	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.99999794471327	WITHOUT_CLASSIFICATION	2.0552867299879823E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999547727367508	WITHOUT_CLASSIFICATION	4.522726324916188E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999998698147257	WITHOUT_CLASSIFICATION	1.3018527429829121E-6	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999994497802871	WITHOUT_CLASSIFICATION	5.50219712898524E-7	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999802424867983	WITHOUT_CLASSIFICATION	1.9757513201781724E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999802424867983	WITHOUT_CLASSIFICATION	1.9757513201781724E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999802424867983	WITHOUT_CLASSIFICATION	1.9757513201781724E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999802424867983	WITHOUT_CLASSIFICATION	1.9757513201781724E-5	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999988891728392	WITHOUT_CLASSIFICATION	1.1108271608142639E-6	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999969624726905	WITHOUT_CLASSIFICATION	3.037527309557792E-6	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999968415831653	WITHOUT_CLASSIFICATION	3.1584168347029323E-6	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9998096726566282	WITHOUT_CLASSIFICATION	1.9032734337183233E-4	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999862888585561	WITHOUT_CLASSIFICATION	1.3711141443868887E-5	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999890064300178	WITHOUT_CLASSIFICATION	1.0993569982184963E-5	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999977783700026	WITHOUT_CLASSIFICATION	2.2216299973675436E-6	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999862933359	WITHOUT_CLASSIFICATION	1.3706664068627776E-8	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9998666776103443	WITHOUT_CLASSIFICATION	1.333223896557175E-4	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999726319037707	WITHOUT_CLASSIFICATION	2.736809622927121E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999947984503416	WITHOUT_CLASSIFICATION	5.201549658386538E-6	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.999998343796892	WITHOUT_CLASSIFICATION	1.6562031079496917E-6	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999974021950735	WITHOUT_CLASSIFICATION	2.5978049264756833E-6	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999300343572428	WITHOUT_CLASSIFICATION	6.996564275720264E-5	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999993009147734	WITHOUT_CLASSIFICATION	6.990852265506319E-7	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999983093836	WITHOUT_CLASSIFICATION	1.6906164683447273E-9	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9807707574488358	DESIGN	0.019229242551164212	WITHOUT_CLASSIFICATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999802424867983	WITHOUT_CLASSIFICATION	1.9757513201781724E-5	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992231308157	WITHOUT_CLASSIFICATION	7.768691843746305E-7	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999998095461368	WITHOUT_CLASSIFICATION	1.9045386331631508E-7	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994318052036	WITHOUT_CLASSIFICATION	5.681947964106097E-7	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9990576855823585	WITHOUT_CLASSIFICATION	9.423144176414048E-4	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9995328692349187	WITHOUT_CLASSIFICATION	4.6713076508130783E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999772561646426	WITHOUT_CLASSIFICATION	2.2743835357290535E-5	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999568093865173	WITHOUT_CLASSIFICATION	4.319061348266021E-5	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999952267895658	WITHOUT_CLASSIFICATION	4.773210434185484E-6	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9305445146745271	WITHOUT_CLASSIFICATION	0.06945548532547283	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999998573561235	WITHOUT_CLASSIFICATION	1.426438764854566E-7	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9915733078186433	WITHOUT_CLASSIFICATION	0.008426692181356733	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999937949936256	WITHOUT_CLASSIFICATION	6.20500637438038E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9875506997943687	WITHOUT_CLASSIFICATION	0.012449300205631201	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999995898260718	WITHOUT_CLASSIFICATION	4.10173928194568E-7	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999966754627224	WITHOUT_CLASSIFICATION	3.3245372776606773E-6	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999997151134117	WITHOUT_CLASSIFICATION	2.848865882688117E-7	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999884503999612	WITHOUT_CLASSIFICATION	1.1549600038873964E-5	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999995944129466	WITHOUT_CLASSIFICATION	4.0558705348923175E-7	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999998361968245	WITHOUT_CLASSIFICATION	1.6380317539643164E-7	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999984370257552	WITHOUT_CLASSIFICATION	1.5629742448397627E-6	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9906829061696742	WITHOUT_CLASSIFICATION	0.009317093830325779	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999905855908195	WITHOUT_CLASSIFICATION	9.414409180425858E-6	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999959706678414	WITHOUT_CLASSIFICATION	4.02933215865864E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999885965818549	WITHOUT_CLASSIFICATION	1.1403418145172376E-5	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9998883382616467	WITHOUT_CLASSIFICATION	1.1166173835327347E-4	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9995248924139024	WITHOUT_CLASSIFICATION	4.75107586097644E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999175456672746	WITHOUT_CLASSIFICATION	8.245433272545906E-5	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999975707367349	WITHOUT_CLASSIFICATION	2.4292632651533433E-6	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999997404026826	WITHOUT_CLASSIFICATION	2.595973174088313E-7	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999991251742838	WITHOUT_CLASSIFICATION	8.748257161951523E-7	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999998353469663	WITHOUT_CLASSIFICATION	1.6465303366602815E-7	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999744640659565	WITHOUT_CLASSIFICATION	2.553593404355514E-5	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999915822269129	WITHOUT_CLASSIFICATION	8.4177730871296E-6	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999810611572	WITHOUT_CLASSIFICATION	1.8938842935943717E-8	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999929095284799	WITHOUT_CLASSIFICATION	7.090471520057947E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.999784131026299	WITHOUT_CLASSIFICATION	2.1586897370089167E-4	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.99999990852203	WITHOUT_CLASSIFICATION	9.147797002604983E-8	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999867537969777	WITHOUT_CLASSIFICATION	1.3246203022322281E-5	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999997981858082	WITHOUT_CLASSIFICATION	2.0181419194215712E-7	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9994417056213718	WITHOUT_CLASSIFICATION	5.582943786281447E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999048361073	WITHOUT_CLASSIFICATION	9.516389264946825E-8	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992546748688	WITHOUT_CLASSIFICATION	7.453251312381357E-7	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999539418824566	WITHOUT_CLASSIFICATION	4.6058117543410626E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999364591135049	WITHOUT_CLASSIFICATION	6.354088649516768E-5	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999364591135049	WITHOUT_CLASSIFICATION	6.354088649516768E-5	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999160053269888	WITHOUT_CLASSIFICATION	8.399467301127397E-5	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999973814280331	WITHOUT_CLASSIFICATION	2.6185719670163747E-6	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9998913574523478	WITHOUT_CLASSIFICATION	1.086425476521822E-4	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999980507400261	WITHOUT_CLASSIFICATION	1.949259973795638E-6	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8309421384209648	DESIGN	0.1690578615790352	WITHOUT_CLASSIFICATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9995105001384831	WITHOUT_CLASSIFICATION	4.894998615169528E-4	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9987304893022996	WITHOUT_CLASSIFICATION	0.0012695106977003662	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999567545584077	WITHOUT_CLASSIFICATION	4.3245441592291105E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992546748688	WITHOUT_CLASSIFICATION	7.453251312381357E-7	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999998231216073	WITHOUT_CLASSIFICATION	1.76878392783286E-7	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999720988931082	WITHOUT_CLASSIFICATION	2.7901106891716062E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999501280854	WITHOUT_CLASSIFICATION	4.9871914506274184E-8	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999919576711	WITHOUT_CLASSIFICATION	8.042328887153385E-9	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999129301176	WITHOUT_CLASSIFICATION	8.706988244367676E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999766126403	WITHOUT_CLASSIFICATION	2.3387359709843406E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999766126403	WITHOUT_CLASSIFICATION	2.3387359709843406E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999766126403	WITHOUT_CLASSIFICATION	2.3387359709843406E-8	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9990294387471178	WITHOUT_CLASSIFICATION	9.705612528821219E-4	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999951480061	WITHOUT_CLASSIFICATION	4.8519939063743885E-9	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999996979121757	WITHOUT_CLASSIFICATION	3.020878243763114E-7	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9969748326964286	WITHOUT_CLASSIFICATION	0.0030251673035714007	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.8357002050533756	WITHOUT_CLASSIFICATION	0.16429979494662447	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999988374706259	WITHOUT_CLASSIFICATION	1.162529374125525E-6	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9952876740584669	WITHOUT_CLASSIFICATION	0.004712325941533169	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999993487028	WITHOUT_CLASSIFICATION	6.512972635150839E-10	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999953784268543	WITHOUT_CLASSIFICATION	4.621573145730854E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999953784268543	WITHOUT_CLASSIFICATION	4.621573145730854E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999571695235172	WITHOUT_CLASSIFICATION	4.283047648284736E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999999950597866	WITHOUT_CLASSIFICATION	4.940213398491917E-8	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999940185202152	WITHOUT_CLASSIFICATION	5.981479784756729E-6	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999940185202152	WITHOUT_CLASSIFICATION	5.981479784756729E-6	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999661828117	WITHOUT_CLASSIFICATION	3.381718821638292E-8	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999245169846	WITHOUT_CLASSIFICATION	7.54830153548002E-8	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9996701186302857	WITHOUT_CLASSIFICATION	3.2988136971428064E-4	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999097252033	WITHOUT_CLASSIFICATION	9.027479685580447E-8	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999991989927787	WITHOUT_CLASSIFICATION	8.010072211911952E-7	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999999590259011	WITHOUT_CLASSIFICATION	4.097409900907013E-8	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999978547396804	WITHOUT_CLASSIFICATION	2.1452603196070806E-6	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999834831112421	WITHOUT_CLASSIFICATION	1.651688875795365E-5	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.999733228030945	WITHOUT_CLASSIFICATION	2.6677196905505404E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999999917150709	WITHOUT_CLASSIFICATION	8.284929091619059E-8	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992546748688	WITHOUT_CLASSIFICATION	7.453251312381357E-7	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999998158436234	WITHOUT_CLASSIFICATION	1.841563766875914E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999959576531678	WITHOUT_CLASSIFICATION	4.04234683207538E-6	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999986562242865	WITHOUT_CLASSIFICATION	1.3437757134391112E-6	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9867056390466071	WITHOUT_CLASSIFICATION	0.013294360953392858	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999190389617756	WITHOUT_CLASSIFICATION	8.096103822440975E-5	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.990835742534736	WITHOUT_CLASSIFICATION	0.009164257465263876	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998885461925368	WITHOUT_CLASSIFICATION	1.1145380746322015E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999765348370478	WITHOUT_CLASSIFICATION	2.3465162952147544E-5	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999847340961295	WITHOUT_CLASSIFICATION	1.526590387044209E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9962316372044359	WITHOUT_CLASSIFICATION	0.003768362795564073	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999935575207087	WITHOUT_CLASSIFICATION	6.442479291315813E-6	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999913322618784	WITHOUT_CLASSIFICATION	8.667738121678933E-6	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999823566504278	WITHOUT_CLASSIFICATION	1.7643349572306E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999985439165274	WITHOUT_CLASSIFICATION	1.4560834726892848E-6	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999939485492524	WITHOUT_CLASSIFICATION	6.0514507476589465E-6	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.999988464151747	WITHOUT_CLASSIFICATION	1.153584825298088E-5	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999707246686274	WITHOUT_CLASSIFICATION	2.927533137268867E-5	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999908362548444	WITHOUT_CLASSIFICATION	9.163745155603017E-6	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999956654947985	WITHOUT_CLASSIFICATION	4.334505201556572E-6	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999967939753978	WITHOUT_CLASSIFICATION	3.206024602199009E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999997072540707	WITHOUT_CLASSIFICATION	2.927459292604762E-7	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999989769637965	WITHOUT_CLASSIFICATION	1.0230362035859938E-6	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999353339697	WITHOUT_CLASSIFICATION	6.46660303566502E-8	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999450791022754	WITHOUT_CLASSIFICATION	5.4920897724683364E-5	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999332275131753	WITHOUT_CLASSIFICATION	6.677248682471787E-5	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999901153049994	WITHOUT_CLASSIFICATION	9.884695000626457E-6	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.998640059835142	WITHOUT_CLASSIFICATION	0.0013599401648580294	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999978017022954	WITHOUT_CLASSIFICATION	2.198297704670909E-6	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999972954872366	WITHOUT_CLASSIFICATION	2.7045127634556596E-6	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999999540379109	WITHOUT_CLASSIFICATION	4.5962089052348744E-8	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9929648348870331	WITHOUT_CLASSIFICATION	0.007035165112966981	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9999065313632187	WITHOUT_CLASSIFICATION	9.3468636781183E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9971001046588814	WITHOUT_CLASSIFICATION	0.0028998953411185162	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999198004719692	WITHOUT_CLASSIFICATION	8.019952803091251E-5	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999907956615262	WITHOUT_CLASSIFICATION	9.204338473880317E-6	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999202892162574	WITHOUT_CLASSIFICATION	7.971078374253822E-5	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999983403564562	WITHOUT_CLASSIFICATION	1.6596435438089924E-5	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999994008725717	WITHOUT_CLASSIFICATION	5.991274282731644E-7	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999974129042778	WITHOUT_CLASSIFICATION	2.5870957222992835E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9996902902596099	WITHOUT_CLASSIFICATION	3.097097403901433E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999819199291	WITHOUT_CLASSIFICATION	1.8080070912011624E-8	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999999149993515	WITHOUT_CLASSIFICATION	8.500064850906037E-8	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999737101552933	WITHOUT_CLASSIFICATION	2.628984470664443E-5	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999761250856873	WITHOUT_CLASSIFICATION	2.3874914312626565E-5	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999837350152322	WITHOUT_CLASSIFICATION	1.6264984767803858E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.999999735416233	WITHOUT_CLASSIFICATION	2.64583767011834E-7	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999997291730772	WITHOUT_CLASSIFICATION	2.7082692284360326E-7	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999999896105507	WITHOUT_CLASSIFICATION	1.0389449313921573E-8	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.999951984549236	WITHOUT_CLASSIFICATION	4.801545076396007E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999953910009415	WITHOUT_CLASSIFICATION	4.608999058489296E-6	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998817131039047	WITHOUT_CLASSIFICATION	1.1828689609529673E-4	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.999937593498787	WITHOUT_CLASSIFICATION	6.240650121303177E-5	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999999632274446	WITHOUT_CLASSIFICATION	3.6772555378728086E-8	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.999999465553006	WITHOUT_CLASSIFICATION	5.344469941256362E-7	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9995858358611616	WITHOUT_CLASSIFICATION	4.141641388384403E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9054566033143031	WITHOUT_CLASSIFICATION	0.09454339668569689	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999603195270563	WITHOUT_CLASSIFICATION	3.968047294369002E-5	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999998889113492	WITHOUT_CLASSIFICATION	1.1108865087071068E-7	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999995997179218	WITHOUT_CLASSIFICATION	4.002820781797456E-7	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.99999946994055	WITHOUT_CLASSIFICATION	5.300594500365174E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999956560850537	WITHOUT_CLASSIFICATION	4.343914946305175E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999956560850537	WITHOUT_CLASSIFICATION	4.343914946305175E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999903581516805	WITHOUT_CLASSIFICATION	9.641848319475589E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999903581516805	WITHOUT_CLASSIFICATION	9.641848319475589E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999702557390006	WITHOUT_CLASSIFICATION	2.974426099944418E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999702557390006	WITHOUT_CLASSIFICATION	2.974426099944418E-5	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999921790521761	WITHOUT_CLASSIFICATION	7.820947823861287E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999921790521761	WITHOUT_CLASSIFICATION	7.820947823861287E-6	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999999643652737	WITHOUT_CLASSIFICATION	3.563472632204035E-8	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999996795305778	WITHOUT_CLASSIFICATION	3.2046942226420507E-7	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999844198503463	WITHOUT_CLASSIFICATION	1.5580149653709376E-4	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999935629010335	WITHOUT_CLASSIFICATION	6.437098966529893E-6	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999979646343942	WITHOUT_CLASSIFICATION	2.035365605820283E-6	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999962578705247	WITHOUT_CLASSIFICATION	3.742129475350946E-6	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999946196563704	WITHOUT_CLASSIFICATION	5.380343629653016E-6	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999998971385309	WITHOUT_CLASSIFICATION	1.0286146909645412E-7	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999958292086532	WITHOUT_CLASSIFICATION	4.170791346842875E-6	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999996287600628	WITHOUT_CLASSIFICATION	3.712399372242311E-7	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999952447691494	WITHOUT_CLASSIFICATION	4.755230850705019E-6	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999652971345481	WITHOUT_CLASSIFICATION	3.470286545203931E-5	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999859554267093	WITHOUT_CLASSIFICATION	1.4044573290777836E-5	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999996522747301	WITHOUT_CLASSIFICATION	3.477252699334103E-7	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999998182116786	WITHOUT_CLASSIFICATION	1.8178832142647758E-7	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999927732477828	WITHOUT_CLASSIFICATION	7.226752217215276E-6	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999962639766	WITHOUT_CLASSIFICATION	3.736023407445701E-9	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999948691995	WITHOUT_CLASSIFICATION	5.130800424443286E-9	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999860599093237	WITHOUT_CLASSIFICATION	1.3940090676322727E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.7130329374422404	DESIGN	0.28696706255775956	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999985164308155	WITHOUT_CLASSIFICATION	1.4835691844872105E-6	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999997463296447	WITHOUT_CLASSIFICATION	2.536703552391296E-7	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.999954017053289	WITHOUT_CLASSIFICATION	4.5982946710952126E-5	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999933574740622	WITHOUT_CLASSIFICATION	6.64252593783758E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999998989380114	WITHOUT_CLASSIFICATION	1.0106198859351489E-6	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999890104817887	WITHOUT_CLASSIFICATION	1.0989518211267455E-5	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.999997704315466	WITHOUT_CLASSIFICATION	2.2956845341115995E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999995498262905	WITHOUT_CLASSIFICATION	4.501737095359285E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999995498262905	WITHOUT_CLASSIFICATION	4.501737095359285E-7	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999742654861732	WITHOUT_CLASSIFICATION	2.5734513826771365E-5	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999949004063606	WITHOUT_CLASSIFICATION	5.099593639320844E-6	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999932915859581	WITHOUT_CLASSIFICATION	6.70841404200001E-6	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999695106292293	WITHOUT_CLASSIFICATION	3.0489370770660135E-5	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999774587498924	WITHOUT_CLASSIFICATION	2.254125010761243E-5	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999579479104155	WITHOUT_CLASSIFICATION	4.2052089584620324E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9995943868870891	WITHOUT_CLASSIFICATION	4.0561311291080005E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9995943868870891	WITHOUT_CLASSIFICATION	4.0561311291080005E-4	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999806474334512	WITHOUT_CLASSIFICATION	1.93525665487312E-5	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9415477540932216	DESIGN	0.05845224590677835	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9996165412246782	WITHOUT_CLASSIFICATION	3.8345877532180734E-4	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9996165412246782	WITHOUT_CLASSIFICATION	3.8345877532180734E-4	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999752150654315	WITHOUT_CLASSIFICATION	2.4784934568546756E-5	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999998168055024	WITHOUT_CLASSIFICATION	1.8319449759914227E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999998168055024	WITHOUT_CLASSIFICATION	1.8319449759914227E-7	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999309669642567	WITHOUT_CLASSIFICATION	6.90330357434058E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999309669642567	WITHOUT_CLASSIFICATION	6.90330357434058E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999962908963138	WITHOUT_CLASSIFICATION	3.7091036862675775E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999962908963138	WITHOUT_CLASSIFICATION	3.7091036862675775E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999000257035865	WITHOUT_CLASSIFICATION	9.997429641350644E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.999772505202393	WITHOUT_CLASSIFICATION	2.2749479760698967E-4	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999995006514748	WITHOUT_CLASSIFICATION	4.993485252671292E-7	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999912335326732	WITHOUT_CLASSIFICATION	8.766467326756401E-6	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999995444944723	WITHOUT_CLASSIFICATION	4.555055277511484E-7	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999981744183318	WITHOUT_CLASSIFICATION	1.8255816681109394E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999640450070052	WITHOUT_CLASSIFICATION	3.5954992994717264E-5	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999931819864923	WITHOUT_CLASSIFICATION	6.818013507685392E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999640450070052	WITHOUT_CLASSIFICATION	3.5954992994717264E-5	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9942276523075718	WITHOUT_CLASSIFICATION	0.005772347692428225	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999997348154285	WITHOUT_CLASSIFICATION	2.6518457151548467E-7	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999999731909993	WITHOUT_CLASSIFICATION	2.6809000613681917E-8	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999999991651238	WITHOUT_CLASSIFICATION	8.348761495817958E-10	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999982613238556	WITHOUT_CLASSIFICATION	1.7386761444809212E-6	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999922283788668	WITHOUT_CLASSIFICATION	7.771621133197999E-6	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999986534857817	WITHOUT_CLASSIFICATION	1.3465142182862182E-6	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.999998243614383	WITHOUT_CLASSIFICATION	1.756385617023287E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999920635811	WITHOUT_CLASSIFICATION	7.936418818466946E-9	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999678028924184	WITHOUT_CLASSIFICATION	3.219710758169127E-5	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999962679756196	WITHOUT_CLASSIFICATION	3.7320243803473694E-6	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999995401217716	WITHOUT_CLASSIFICATION	4.598782283407097E-7	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999994181027466	WITHOUT_CLASSIFICATION	5.818972533209137E-7	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999554548157079	WITHOUT_CLASSIFICATION	4.454518429205342E-5	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999999937812021	WITHOUT_CLASSIFICATION	6.218797921061661E-9	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999164851237	WITHOUT_CLASSIFICATION	8.351487639158715E-8	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999998011099647	WITHOUT_CLASSIFICATION	1.988900353263671E-7	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999992981439736	WITHOUT_CLASSIFICATION	7.018560264858207E-7	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999998177884164	WITHOUT_CLASSIFICATION	1.8221158361595827E-7	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999997435038958	WITHOUT_CLASSIFICATION	2.564961043198009E-7	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.999998791343882	WITHOUT_CLASSIFICATION	1.2086561180582172E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999650058468	WITHOUT_CLASSIFICATION	3.499415323894967E-8	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999989309609539	WITHOUT_CLASSIFICATION	1.0690390460954964E-6	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9986188286199951	WITHOUT_CLASSIFICATION	0.001381171380004862	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999999982795175	WITHOUT_CLASSIFICATION	1.7204824696902023E-9	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999803279993056	WITHOUT_CLASSIFICATION	1.967200069445032E-5	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999934768562997	WITHOUT_CLASSIFICATION	6.5231437002575564E-6	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999509416277	WITHOUT_CLASSIFICATION	4.905837228678726E-8	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999742306486	WITHOUT_CLASSIFICATION	2.576935139265157E-8	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999786604677	WITHOUT_CLASSIFICATION	2.1339532300364803E-8	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999991823623338	WITHOUT_CLASSIFICATION	8.176376661917143E-7	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999997523067	WITHOUT_CLASSIFICATION	2.4769336046197373E-10	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999711149190882	WITHOUT_CLASSIFICATION	2.888508091191961E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999998640454546	WITHOUT_CLASSIFICATION	1.3595454538403086E-7	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999935230217	WITHOUT_CLASSIFICATION	6.476978340962426E-9	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999117614888	WITHOUT_CLASSIFICATION	8.823851114075059E-8	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999789341069	WITHOUT_CLASSIFICATION	2.106589311719377E-8	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999607337021	WITHOUT_CLASSIFICATION	3.926629790704623E-8	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999937948097313	WITHOUT_CLASSIFICATION	6.2051902687634886E-6	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999997122148777	WITHOUT_CLASSIFICATION	2.877851223048584E-7	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999988008947873	WITHOUT_CLASSIFICATION	1.1991052127069216E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999981209324	WITHOUT_CLASSIFICATION	1.879067522397896E-9	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999924811859	WITHOUT_CLASSIFICATION	7.518814024923729E-9	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999951824768	WITHOUT_CLASSIFICATION	4.8175231564961445E-9	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999996558772	WITHOUT_CLASSIFICATION	3.4412285950631216E-10	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999626076064	WITHOUT_CLASSIFICATION	3.739239367020544E-8	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999689262803	WITHOUT_CLASSIFICATION	3.107371960649542E-8	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999591520352	WITHOUT_CLASSIFICATION	4.0847964831284776E-8	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999849059490502	WITHOUT_CLASSIFICATION	1.5094050949730025E-5	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999719191785007	WITHOUT_CLASSIFICATION	2.8080821499299212E-5	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9996481417409526	WITHOUT_CLASSIFICATION	3.518582590474137E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999931432075	WITHOUT_CLASSIFICATION	6.856792450369564E-9	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999804531624766	WITHOUT_CLASSIFICATION	1.954683752337181E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9958184813175559	WITHOUT_CLASSIFICATION	0.004181518682444158	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999806159673468	WITHOUT_CLASSIFICATION	1.9384032653203634E-5	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999806159673468	WITHOUT_CLASSIFICATION	1.9384032653203634E-5	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999702869027	WITHOUT_CLASSIFICATION	2.9713097304986164E-8	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999997664271475	WITHOUT_CLASSIFICATION	2.3357285258716678E-7	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999825564334397	WITHOUT_CLASSIFICATION	1.744356656029033E-5	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999698912259248	WITHOUT_CLASSIFICATION	3.0108774075148344E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999999407804426	WITHOUT_CLASSIFICATION	5.9219557356756E-8	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999993409420375	WITHOUT_CLASSIFICATION	6.590579625060275E-7	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999995608744247	WITHOUT_CLASSIFICATION	4.3912557543352536E-7	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999837726385686	WITHOUT_CLASSIFICATION	1.6227361431344423E-5	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9996385984071998	WITHOUT_CLASSIFICATION	3.614015928001535E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999918278431809	WITHOUT_CLASSIFICATION	8.172156819203772E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999962586485429	WITHOUT_CLASSIFICATION	3.7413514570581025E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999962586485429	WITHOUT_CLASSIFICATION	3.7413514570581025E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9969516185063556	DESIGN	0.0030483814936444788	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.995206472972784	WITHOUT_CLASSIFICATION	0.004793527027216029	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999999300795	WITHOUT_CLASSIFICATION	6.992046415536202E-11	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999998335727722	WITHOUT_CLASSIFICATION	1.6642722775159583E-7	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999991223999	WITHOUT_CLASSIFICATION	8.776001286360059E-10	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999905944837	WITHOUT_CLASSIFICATION	9.405516289431024E-9	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999820738811	WITHOUT_CLASSIFICATION	1.792611892134138E-8	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999999670115093	WITHOUT_CLASSIFICATION	3.298849067680218E-8	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999990450433085	WITHOUT_CLASSIFICATION	9.549566914992585E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999877982479614	WITHOUT_CLASSIFICATION	1.2201752038570968E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999819885678908	WITHOUT_CLASSIFICATION	1.801143210916789E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999652340521	WITHOUT_CLASSIFICATION	3.476594779722737E-8	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999993034477489	WITHOUT_CLASSIFICATION	6.965522510821152E-7	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999993034477489	WITHOUT_CLASSIFICATION	6.965522510821152E-7	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999999619853682	WITHOUT_CLASSIFICATION	3.801463166958723E-8	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.5660600263952711	WITHOUT_CLASSIFICATION	0.433939973604729	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999691192414142	WITHOUT_CLASSIFICATION	3.088075858587808E-5	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999945762494065	WITHOUT_CLASSIFICATION	5.4237505935601525E-6	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999514400503184	WITHOUT_CLASSIFICATION	4.8559949681595686E-5	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9996923022052896	WITHOUT_CLASSIFICATION	3.076977947104127E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999999977793479	WITHOUT_CLASSIFICATION	2.2206521409613818E-9	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999997053762009	WITHOUT_CLASSIFICATION	2.9462379912986555E-7	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999983989995065	WITHOUT_CLASSIFICATION	1.6010004935665185E-6	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.995424985061877	WITHOUT_CLASSIFICATION	0.004575014938122844	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999999300795	WITHOUT_CLASSIFICATION	6.992046415536202E-11	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999999376986606	WITHOUT_CLASSIFICATION	6.230133945597215E-8	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9935832415397866	WITHOUT_CLASSIFICATION	0.006416758460213388	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999497819599	WITHOUT_CLASSIFICATION	5.021804001668708E-8	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.999904401949853	WITHOUT_CLASSIFICATION	9.559805014703727E-5	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9982159169060968	WITHOUT_CLASSIFICATION	0.0017840830939032158	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9996810614478723	WITHOUT_CLASSIFICATION	3.1893855212766634E-4	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999407473414915	WITHOUT_CLASSIFICATION	5.925265850852787E-5	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999417787485123	WITHOUT_CLASSIFICATION	5.822125148763049E-5	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999284956919	WITHOUT_CLASSIFICATION	7.15043081320488E-8	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999984650621622	WITHOUT_CLASSIFICATION	1.5349378378502566E-6	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999958232354598	WITHOUT_CLASSIFICATION	4.176764540237223E-6	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.6679956051910079	WITHOUT_CLASSIFICATION	0.33200439480899224	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999999930046146	WITHOUT_CLASSIFICATION	6.995385414274178E-9	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999959607822692	WITHOUT_CLASSIFICATION	4.039217730836487E-6	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9995514032087714	WITHOUT_CLASSIFICATION	4.4859679122850676E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999972432293169	WITHOUT_CLASSIFICATION	2.7567706830913966E-6	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9992928360320954	WITHOUT_CLASSIFICATION	7.071639679046266E-4	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999782974873677	WITHOUT_CLASSIFICATION	2.170251263229382E-5	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9983581059424815	WITHOUT_CLASSIFICATION	0.0016418940575185007	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9999810208912476	WITHOUT_CLASSIFICATION	1.8979108752343234E-5	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.989330048003594	WITHOUT_CLASSIFICATION	0.010669951996405982	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999974750451482	WITHOUT_CLASSIFICATION	2.524954851778868E-6	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9987632187734234	WITHOUT_CLASSIFICATION	0.001236781226576645	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999998962857017	WITHOUT_CLASSIFICATION	1.037142983090897E-6	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999926948666292	WITHOUT_CLASSIFICATION	7.305133370849182E-6	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999952681198747	WITHOUT_CLASSIFICATION	4.7318801253226765E-6	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9998225320880876	WITHOUT_CLASSIFICATION	1.774679119123224E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999996511698577	WITHOUT_CLASSIFICATION	3.4883014240947676E-7	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999849985324647	WITHOUT_CLASSIFICATION	1.5001467535340545E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999992653768727	WITHOUT_CLASSIFICATION	7.346231273776232E-7	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.999999874961771	WITHOUT_CLASSIFICATION	1.2503822902631866E-7	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.999999874961771	WITHOUT_CLASSIFICATION	1.2503822902631866E-7	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.99999737872383	WITHOUT_CLASSIFICATION	2.621276170031165E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999977799255932	WITHOUT_CLASSIFICATION	2.2200744067507637E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999862030278914	WITHOUT_CLASSIFICATION	1.3796972108489456E-5	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.999975386167194	WITHOUT_CLASSIFICATION	2.461383280608223E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9920036725219612	WITHOUT_CLASSIFICATION	0.007996327478038781	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999982715696837	WITHOUT_CLASSIFICATION	1.7284303163597272E-6	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999992546748688	WITHOUT_CLASSIFICATION	7.453251312381357E-7	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999922416757125	WITHOUT_CLASSIFICATION	7.758324287496439E-6	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999979597385076	WITHOUT_CLASSIFICATION	2.040261492450617E-6	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999711671907316	WITHOUT_CLASSIFICATION	2.883280926836684E-5	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999739523019	WITHOUT_CLASSIFICATION	2.6047698093351398E-8	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9999759721856073	WITHOUT_CLASSIFICATION	2.4027814392798924E-5	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999998439496738	WITHOUT_CLASSIFICATION	1.5605032623733634E-7	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9996902902596099	WITHOUT_CLASSIFICATION	3.097097403901433E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999991711948	WITHOUT_CLASSIFICATION	8.288052889723198E-10	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999388351231163	WITHOUT_CLASSIFICATION	6.116487688363112E-5	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999997054929773	WITHOUT_CLASSIFICATION	2.9450702266797146E-7	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999867548328	WITHOUT_CLASSIFICATION	1.3245167165820206E-8	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999563299570156	WITHOUT_CLASSIFICATION	4.3670042984475795E-5	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9210543426212966	WITHOUT_CLASSIFICATION	0.07894565737870345	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.999951309266536	WITHOUT_CLASSIFICATION	4.869073346401352E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.999951309266536	WITHOUT_CLASSIFICATION	4.869073346401352E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999510423828989	WITHOUT_CLASSIFICATION	4.895761710106681E-5	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999981171660102	WITHOUT_CLASSIFICATION	1.8828339897396812E-6	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999778797031345	WITHOUT_CLASSIFICATION	2.2120296865500883E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999981859964818	WITHOUT_CLASSIFICATION	1.8140035181743969E-6	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999949283337	WITHOUT_CLASSIFICATION	5.071666200499641E-9	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999980883135	WITHOUT_CLASSIFICATION	1.9116864328063786E-9	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999993457237896	WITHOUT_CLASSIFICATION	6.542762104641564E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999997756139	WITHOUT_CLASSIFICATION	2.2438602864903315E-10	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.999988200815508	WITHOUT_CLASSIFICATION	1.1799184492027726E-5	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.999999949916499	WITHOUT_CLASSIFICATION	5.008350102563238E-8	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999982509721975	WITHOUT_CLASSIFICATION	1.749027802533998E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999999185096156	WITHOUT_CLASSIFICATION	8.1490384476229E-8	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.99999971069225	WITHOUT_CLASSIFICATION	2.8930775002404497E-7	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999694450051	WITHOUT_CLASSIFICATION	3.055499482915711E-8	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999999990292582	WITHOUT_CLASSIFICATION	9.70741850089916E-10	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.908023783456907	WITHOUT_CLASSIFICATION	0.09197621654309303	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999935852670981	WITHOUT_CLASSIFICATION	6.414732901903098E-6	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999953108575255	WITHOUT_CLASSIFICATION	4.689142474519067E-6	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999599788627	WITHOUT_CLASSIFICATION	4.002113742439434E-8	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9925084999317564	WITHOUT_CLASSIFICATION	0.007491500068243547	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.999993774627176	WITHOUT_CLASSIFICATION	6.225372824076555E-6	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999996930050601	WITHOUT_CLASSIFICATION	3.069949398310502E-7	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999937513387233	WITHOUT_CLASSIFICATION	6.248661276644613E-6	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999123133290166	WITHOUT_CLASSIFICATION	8.768667098337508E-5	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999982982833363	WITHOUT_CLASSIFICATION	1.7017166636910416E-6	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.99999628812047	WITHOUT_CLASSIFICATION	3.711879530048547E-6	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.999427489403547	WITHOUT_CLASSIFICATION	5.725105964531035E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999923701803698	WITHOUT_CLASSIFICATION	7.629819630185755E-6	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999998588439097	WITHOUT_CLASSIFICATION	1.411560903190847E-7	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9885798988878798	WITHOUT_CLASSIFICATION	0.011420101112120206	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999996517747284	WITHOUT_CLASSIFICATION	3.4822527162802997E-7	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9998548904345613	WITHOUT_CLASSIFICATION	1.4510956543869682E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9993215341022552	WITHOUT_CLASSIFICATION	6.784658977447381E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.999825446289843	WITHOUT_CLASSIFICATION	1.7455371015686618E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999991715769554	WITHOUT_CLASSIFICATION	8.284230446470435E-7	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.986642524934388	WITHOUT_CLASSIFICATION	0.013357475065611872	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999918723813905	WITHOUT_CLASSIFICATION	8.127618609455251E-6	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.99999775791382	WITHOUT_CLASSIFICATION	2.2420861800204105E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9998786580489932	WITHOUT_CLASSIFICATION	1.2134195100672186E-4	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.999990570693758	WITHOUT_CLASSIFICATION	9.429306241943893E-6	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9997854638173317	WITHOUT_CLASSIFICATION	2.145361826682519E-4	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.99999974823215	WITHOUT_CLASSIFICATION	2.5176785007824903E-7	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999530538892	WITHOUT_CLASSIFICATION	4.6946110757960694E-8	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9997012783357355	WITHOUT_CLASSIFICATION	2.9872166426447264E-4	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9983564270382104	WITHOUT_CLASSIFICATION	0.0016435729617896202	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9997012783357355	WITHOUT_CLASSIFICATION	2.9872166426447264E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999993159518907	DESIGN	6.840481092515156E-7	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.6694115873041313	DESIGN	0.33058841269586864	WITHOUT_CLASSIFICATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999987249929932	WITHOUT_CLASSIFICATION	1.2750070067138286E-6	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9992112114191488	DESIGN	7.887885808511056E-4	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999693745724204	WITHOUT_CLASSIFICATION	3.062542757952599E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999453425909083	WITHOUT_CLASSIFICATION	5.465740909179424E-5	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9998587666411648	WITHOUT_CLASSIFICATION	1.4123335883522908E-4	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999762773736037	WITHOUT_CLASSIFICATION	2.3722626396269416E-5	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999999630064039	WITHOUT_CLASSIFICATION	3.699359611246253E-8	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.5063454815670838	DESIGN	0.4936545184329161	WITHOUT_CLASSIFICATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9918304799476896	WITHOUT_CLASSIFICATION	0.008169520052310461	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999013504037151	WITHOUT_CLASSIFICATION	9.864959628491291E-5	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9782514289172116	WITHOUT_CLASSIFICATION	0.02174857108278836	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999417971246	WITHOUT_CLASSIFICATION	5.8202875269079E-8	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999410397129431	WITHOUT_CLASSIFICATION	5.896028705676039E-5	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9496628586504535	DESIGN	0.050337141349546546	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999798926538418	WITHOUT_CLASSIFICATION	2.0107346158205855E-5	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9995365623232374	WITHOUT_CLASSIFICATION	4.634376767625366E-4	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999976316286717	WITHOUT_CLASSIFICATION	2.3683713282283785E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999714615460734	WITHOUT_CLASSIFICATION	2.8538453926571827E-5	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.999989993306499	WITHOUT_CLASSIFICATION	1.000669350094571E-5	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999986807347684	WITHOUT_CLASSIFICATION	1.3192652317131772E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999727566753966	WITHOUT_CLASSIFICATION	2.7243324603321507E-5	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999944232196222	WITHOUT_CLASSIFICATION	5.576780377835843E-6	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.999992203092896	WITHOUT_CLASSIFICATION	7.796907103850944E-6	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999916217675878	WITHOUT_CLASSIFICATION	8.378232412204248E-6	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999252583818009	WITHOUT_CLASSIFICATION	7.474161819909037E-5	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999609571621733	WITHOUT_CLASSIFICATION	3.9042837826789415E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999947984503416	WITHOUT_CLASSIFICATION	5.201549658386538E-6	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999839350259027	WITHOUT_CLASSIFICATION	1.6064974097382573E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999923193096	WITHOUT_CLASSIFICATION	7.680690407560198E-9	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999979269611	WITHOUT_CLASSIFICATION	2.0730388453583403E-9	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999999885853182	WITHOUT_CLASSIFICATION	1.1414681902718318E-8	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9999811919158863	WITHOUT_CLASSIFICATION	1.880808411365167E-5	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999999993737	WITHOUT_CLASSIFICATION	6.262174597660301E-13	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.999997663102399	WITHOUT_CLASSIFICATION	2.336897600861551E-6	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9998943718336913	WITHOUT_CLASSIFICATION	1.0562816630860298E-4	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9667215811809908	WITHOUT_CLASSIFICATION	0.03327841881900917	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999963887923439	WITHOUT_CLASSIFICATION	3.6112076560583446E-6	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999995926645348	WITHOUT_CLASSIFICATION	4.073354652380869E-7	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999990866519	WITHOUT_CLASSIFICATION	9.133480162968992E-10	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999994236300654	WITHOUT_CLASSIFICATION	5.763699345677591E-7	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999997614484419	WITHOUT_CLASSIFICATION	2.385515581338619E-7	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998296968222177	WITHOUT_CLASSIFICATION	1.7030317778243074E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998296968222177	WITHOUT_CLASSIFICATION	1.7030317778243074E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9844794342166091	WITHOUT_CLASSIFICATION	0.015520565783390906	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9947985843388683	WITHOUT_CLASSIFICATION	0.005201415661131861	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.997965327091281	WITHOUT_CLASSIFICATION	0.0020346729087189807	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999881530756	WITHOUT_CLASSIFICATION	1.1846924497492805E-8	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999739003643766	WITHOUT_CLASSIFICATION	2.609963562338596E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999878135742588	WITHOUT_CLASSIFICATION	1.2186425741142154E-5	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999970126405845	WITHOUT_CLASSIFICATION	2.9873594154761696E-6	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999980817172531	WITHOUT_CLASSIFICATION	1.918282746797197E-6	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9997353189954912	WITHOUT_CLASSIFICATION	2.6468100450880035E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9945000981031974	WITHOUT_CLASSIFICATION	0.005499901896802584	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999987703892297	WITHOUT_CLASSIFICATION	1.2296107702384467E-6	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.999768875175191	WITHOUT_CLASSIFICATION	2.3112482480891648E-4	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9998442121659019	WITHOUT_CLASSIFICATION	1.5578783409811545E-4	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999413192530254	WITHOUT_CLASSIFICATION	5.868074697460019E-5	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9899276160792763	WITHOUT_CLASSIFICATION	0.010072383920723772	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999998976088635	WITHOUT_CLASSIFICATION	1.0239113644863787E-7	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999481454354517	WITHOUT_CLASSIFICATION	5.185456454821099E-5	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999962421423455	WITHOUT_CLASSIFICATION	3.757857654393503E-6	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999002749354361	WITHOUT_CLASSIFICATION	9.972506456396779E-5	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.999997624875617	WITHOUT_CLASSIFICATION	2.375124382943464E-6	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.6193519619750021	DESIGN	0.38064803802499786	WITHOUT_CLASSIFICATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.8014626838837283	WITHOUT_CLASSIFICATION	0.19853731611627165	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9712659252530754	WITHOUT_CLASSIFICATION	0.02873407474692463	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9036368193726412	WITHOUT_CLASSIFICATION	0.09636318062735882	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.7305463769206846	DESIGN	0.2694536230793154	WITHOUT_CLASSIFICATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9997688103808636	WITHOUT_CLASSIFICATION	2.3118961913645296E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9987616890484293	WITHOUT_CLASSIFICATION	0.0012383109515706797	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9960493470009215	WITHOUT_CLASSIFICATION	0.0039506529990784274	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999945967506448	WITHOUT_CLASSIFICATION	5.4032493552262906E-6	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999814139888832	WITHOUT_CLASSIFICATION	1.858601111687069E-5	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.99524082066523	DESIGN	0.004759179334769994	WITHOUT_CLASSIFICATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999991555060854	WITHOUT_CLASSIFICATION	8.444939145686211E-7	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999991489978	WITHOUT_CLASSIFICATION	8.510020818372086E-10	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999927786435372	WITHOUT_CLASSIFICATION	7.221356462789625E-6	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999925853891	WITHOUT_CLASSIFICATION	7.414610890172085E-9	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999750521242	WITHOUT_CLASSIFICATION	2.494787569386E-8	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999909242011	WITHOUT_CLASSIFICATION	9.0757988879425E-9	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999342194312	WITHOUT_CLASSIFICATION	6.578056879838744E-8	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9882484162280423	WITHOUT_CLASSIFICATION	0.011751583771957841	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999786204713	WITHOUT_CLASSIFICATION	2.1379528694730006E-8	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999442898117241	WITHOUT_CLASSIFICATION	5.5710188275811005E-5	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999210998336362	WITHOUT_CLASSIFICATION	7.89001663638124E-5	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9980580372332754	WITHOUT_CLASSIFICATION	0.0019419627667245645	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999889306672511	WITHOUT_CLASSIFICATION	1.106933274889038E-5	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999337839312405	WITHOUT_CLASSIFICATION	6.621606875943344E-5	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998841564339	WITHOUT_CLASSIFICATION	1.1584356603266993E-7	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999991978830848	WITHOUT_CLASSIFICATION	8.021169153007899E-7	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999997430652156	WITHOUT_CLASSIFICATION	2.569347844228453E-7	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9999873130470199	WITHOUT_CLASSIFICATION	1.2686952979981888E-5	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999991112987899	WITHOUT_CLASSIFICATION	8.887012101958771E-7	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999810534043	WITHOUT_CLASSIFICATION	1.8946595772711455E-8	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999994395567068	WITHOUT_CLASSIFICATION	5.604432931676781E-7	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999892584004	WITHOUT_CLASSIFICATION	1.0741599596044534E-8	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999986052234668	WITHOUT_CLASSIFICATION	1.3947765331170365E-6	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999736915563131	WITHOUT_CLASSIFICATION	2.6308443686927594E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.999993076034867	WITHOUT_CLASSIFICATION	6.923965133019376E-6	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9994043402405002	WITHOUT_CLASSIFICATION	5.95659759499841E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9855205880210921	DESIGN	0.01447941197890794	WITHOUT_CLASSIFICATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9905002512343839	WITHOUT_CLASSIFICATION	0.009499748765616187	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999757636798748	WITHOUT_CLASSIFICATION	2.4236320125205945E-5	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999988824372072	WITHOUT_CLASSIFICATION	1.1175627927562795E-6	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999981732624642	WITHOUT_CLASSIFICATION	1.8267375357924678E-6	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999993719172678	WITHOUT_CLASSIFICATION	6.280827321436519E-7	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999992053422299	WITHOUT_CLASSIFICATION	7.946577702363507E-7	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999518283043675	WITHOUT_CLASSIFICATION	4.817169563258118E-5	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999813227334	WITHOUT_CLASSIFICATION	1.8677266564101408E-8	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999789326727	WITHOUT_CLASSIFICATION	2.106732741393607E-8	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999997006518	WITHOUT_CLASSIFICATION	2.9934824767207565E-10	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999488124874154	WITHOUT_CLASSIFICATION	5.118751258461212E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9998987801818028	WITHOUT_CLASSIFICATION	1.0121981819724808E-4	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999999582814403	WITHOUT_CLASSIFICATION	4.1718559697215695E-8	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9996709052007597	WITHOUT_CLASSIFICATION	3.290947992402306E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999837396323	WITHOUT_CLASSIFICATION	1.6260367665981805E-8	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999933206919892	WITHOUT_CLASSIFICATION	6.679308010808051E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999659295216391	WITHOUT_CLASSIFICATION	3.407047836094109E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.999958653928537	WITHOUT_CLASSIFICATION	4.134607146301059E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999734791467348	WITHOUT_CLASSIFICATION	2.6520853265175404E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999295291557838	WITHOUT_CLASSIFICATION	7.0470844216289E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999504765348493	WITHOUT_CLASSIFICATION	4.9523465150715905E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999264849785452	WITHOUT_CLASSIFICATION	7.351502145484404E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999183160921132	WITHOUT_CLASSIFICATION	8.168390788667136E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.99992250213534	WITHOUT_CLASSIFICATION	7.749786466005705E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.999950047347974	WITHOUT_CLASSIFICATION	4.9952652025946824E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999299480801453	WITHOUT_CLASSIFICATION	7.00519198545667E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999343722840931	WITHOUT_CLASSIFICATION	6.56277159068589E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999749717432179	WITHOUT_CLASSIFICATION	2.50282567819816E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999293634709268	WITHOUT_CLASSIFICATION	7.063652907330062E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999500124260594	WITHOUT_CLASSIFICATION	4.998757394062112E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999106641481117	WITHOUT_CLASSIFICATION	8.933585188836234E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999325325457806	WITHOUT_CLASSIFICATION	6.746745421934548E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999440248280766	WITHOUT_CLASSIFICATION	5.5975171923438565E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999672486736859	WITHOUT_CLASSIFICATION	3.275132631401328E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999726227675262	WITHOUT_CLASSIFICATION	2.7377232473703993E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999975059216464	WITHOUT_CLASSIFICATION	2.4940783536854454E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.7558732285227969	WITHOUT_CLASSIFICATION	0.24412677147720319	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999293597631261	WITHOUT_CLASSIFICATION	7.064023687377518E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.999999840157615	WITHOUT_CLASSIFICATION	1.598423850756446E-7	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999691690542056	WITHOUT_CLASSIFICATION	3.083094579434693E-5	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999782298647572	WITHOUT_CLASSIFICATION	2.177013524291318E-5	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999322792881544	WITHOUT_CLASSIFICATION	6.772071184563651E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9975292707016374	WITHOUT_CLASSIFICATION	0.002470729298362654	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999986897011248	WITHOUT_CLASSIFICATION	1.3102988751010119E-6	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999868665570614	WITHOUT_CLASSIFICATION	1.3133442938575845E-5	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9983691669012124	DESIGN	0.0016308330987876948	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999983694386043	WITHOUT_CLASSIFICATION	1.6305613957575388E-6	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999998285381778	WITHOUT_CLASSIFICATION	1.7146182224747454E-7	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999940722534068	WITHOUT_CLASSIFICATION	5.92774659321466E-6	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999940722534068	WITHOUT_CLASSIFICATION	5.92774659321466E-6	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999949651320967	WITHOUT_CLASSIFICATION	5.034867903223473E-6	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9978206891554701	WITHOUT_CLASSIFICATION	0.002179310844530033	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999553213200727	WITHOUT_CLASSIFICATION	4.467867992739965E-5	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999251110361919	WITHOUT_CLASSIFICATION	7.488896380818871E-5	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9960868953669175	WITHOUT_CLASSIFICATION	0.003913104633082516	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9955921805938241	WITHOUT_CLASSIFICATION	0.004407819406175875	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999454537108645	WITHOUT_CLASSIFICATION	5.454628913555737E-5	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999920293014376	WITHOUT_CLASSIFICATION	7.970698562505274E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999486193407211	WITHOUT_CLASSIFICATION	5.138065927894782E-5	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999995931522683	WITHOUT_CLASSIFICATION	4.0684773174443057E-7	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999994433199573	WITHOUT_CLASSIFICATION	5.566800427621677E-7	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9996252811580653	WITHOUT_CLASSIFICATION	3.747188419346552E-4	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.99863549207209	WITHOUT_CLASSIFICATION	0.0013645079279099393	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999978986498311	WITHOUT_CLASSIFICATION	2.10135016895447E-6	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9976681831558345	WITHOUT_CLASSIFICATION	0.0023318168441655643	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999620803631597	WITHOUT_CLASSIFICATION	3.7919636840416116E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999772561646426	WITHOUT_CLASSIFICATION	2.2743835357290535E-5	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999892199522897	WITHOUT_CLASSIFICATION	1.0780047710284657E-5	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999998872830201	WITHOUT_CLASSIFICATION	1.1271697985704667E-7	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999936439226597	WITHOUT_CLASSIFICATION	6.356077340350382E-6	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999987414988863	WITHOUT_CLASSIFICATION	1.258501113669232E-6	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9726435125218066	DESIGN	0.027356487478193508	WITHOUT_CLASSIFICATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999908244444126	WITHOUT_CLASSIFICATION	9.17555558733162E-6	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999998030832827	WITHOUT_CLASSIFICATION	1.9691671720054095E-7	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999977575127	WITHOUT_CLASSIFICATION	2.242487264296156E-9	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999345846115547	WITHOUT_CLASSIFICATION	6.541538844524421E-5	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999997058224721	WITHOUT_CLASSIFICATION	2.941775278318495E-7	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999995836462493	WITHOUT_CLASSIFICATION	4.163537507204745E-7	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999986173151317	WITHOUT_CLASSIFICATION	1.3826848682984032E-6	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999969535935922	WITHOUT_CLASSIFICATION	3.046406407879647E-6	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999764525283319	WITHOUT_CLASSIFICATION	2.354747166809686E-5	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9993484048304787	WITHOUT_CLASSIFICATION	6.515951695212262E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999993140367546	WITHOUT_CLASSIFICATION	6.859632453643356E-7	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999993795766089	WITHOUT_CLASSIFICATION	6.204233910340706E-7	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999894293760955	WITHOUT_CLASSIFICATION	1.0570623904381968E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9998810518881933	WITHOUT_CLASSIFICATION	1.1894811180675077E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999929727264373	WITHOUT_CLASSIFICATION	7.027273562620228E-6	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.999999983078622	WITHOUT_CLASSIFICATION	1.6921378002330996E-8	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9993443462187552	WITHOUT_CLASSIFICATION	6.556537812447864E-4	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999637538860903	WITHOUT_CLASSIFICATION	3.6246113909681585E-5	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9653866360905623	WITHOUT_CLASSIFICATION	0.03461336390943767	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999721818999334	WITHOUT_CLASSIFICATION	2.781810006649223E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999998390745081	WITHOUT_CLASSIFICATION	1.6092549184090885E-7	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999062823809121	WITHOUT_CLASSIFICATION	9.371761908795534E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999062823809121	WITHOUT_CLASSIFICATION	9.371761908795534E-5	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999961401889605	WITHOUT_CLASSIFICATION	3.859811039469958E-6	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.999999796291277	WITHOUT_CLASSIFICATION	2.0370872312645036E-7	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999888961053529	WITHOUT_CLASSIFICATION	1.110389464704832E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999844692774403	WITHOUT_CLASSIFICATION	1.5530722559670366E-5	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998007801405111	WITHOUT_CLASSIFICATION	1.992198594889432E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999856892102813	WITHOUT_CLASSIFICATION	1.4310789718596866E-5	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999557396577972	WITHOUT_CLASSIFICATION	4.426034220280186E-5	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999999974213177	WITHOUT_CLASSIFICATION	2.578682237580863E-9	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999317118183628	WITHOUT_CLASSIFICATION	6.828818163727668E-5	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9997812016456621	WITHOUT_CLASSIFICATION	2.187983543378356E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9997639627049842	WITHOUT_CLASSIFICATION	2.3603729501578662E-4	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9997543073616658	WITHOUT_CLASSIFICATION	2.4569263833420314E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999986707359747	WITHOUT_CLASSIFICATION	1.329264025295332E-6	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999950259902538	WITHOUT_CLASSIFICATION	4.974009746261927E-6	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.8600108156281457	DESIGN	0.1399891843718543	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.770316364606355	WITHOUT_CLASSIFICATION	0.22968363539364509	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999881246201959	WITHOUT_CLASSIFICATION	1.1875379804150152E-5	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.999740102590576	WITHOUT_CLASSIFICATION	2.5989740942400976E-4	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999816535231	WITHOUT_CLASSIFICATION	1.8346476926581928E-8	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999994008725717	WITHOUT_CLASSIFICATION	5.991274282731644E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999997589424066	WITHOUT_CLASSIFICATION	2.410575934230031E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999997589424066	WITHOUT_CLASSIFICATION	2.410575934230031E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996718874329	WITHOUT_CLASSIFICATION	3.2811256705251783E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996718874329	WITHOUT_CLASSIFICATION	3.2811256705251783E-7	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999629760118	WITHOUT_CLASSIFICATION	3.702398819871824E-8	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999680724574399	WITHOUT_CLASSIFICATION	3.19275425600789E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999986201375418	WITHOUT_CLASSIFICATION	1.3798624581004082E-6	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999747797089	WITHOUT_CLASSIFICATION	2.522029108898253E-8	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999995006514748	WITHOUT_CLASSIFICATION	4.993485252671292E-7	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999787848084	WITHOUT_CLASSIFICATION	2.1215191535353946E-8	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.5109064681904817	DESIGN	0.4890935318095183	WITHOUT_CLASSIFICATION
// Profile	WITHOUT_CLASSIFICATION	0.9999793249071505	WITHOUT_CLASSIFICATION	2.0675092849620294E-5	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999929414164542	WITHOUT_CLASSIFICATION	7.058583545826429E-6	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999999935356643	WITHOUT_CLASSIFICATION	6.464335794571395E-9	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999741816525372	WITHOUT_CLASSIFICATION	2.5818347462760992E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999746175372466	WITHOUT_CLASSIFICATION	2.5382462753423652E-5	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999998689528323	WITHOUT_CLASSIFICATION	1.310471676031044E-7	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9989510791809594	WITHOUT_CLASSIFICATION	0.001048920819040561	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999991360807929	WITHOUT_CLASSIFICATION	8.639192069861944E-7	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.999994950166588	WITHOUT_CLASSIFICATION	5.0498334119285595E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.999642354103505	WITHOUT_CLASSIFICATION	3.576458964950879E-4	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999953907341433	WITHOUT_CLASSIFICATION	4.609265856646288E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9998539438904768	WITHOUT_CLASSIFICATION	1.460561095232036E-4	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999947723710024	WITHOUT_CLASSIFICATION	5.227628997489568E-6	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999965795734321	WITHOUT_CLASSIFICATION	3.4204265678073205E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999991723755953	WITHOUT_CLASSIFICATION	8.276244047408135E-7	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999989561284295	WITHOUT_CLASSIFICATION	1.0438715705878655E-6	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999252583818009	WITHOUT_CLASSIFICATION	7.474161819909037E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999878135742588	WITHOUT_CLASSIFICATION	1.2186425741142154E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9998751259512633	WITHOUT_CLASSIFICATION	1.2487404873678582E-4	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9975203644857408	WITHOUT_CLASSIFICATION	0.002479635514259174	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999996360558451	WITHOUT_CLASSIFICATION	3.6394415492172404E-7	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9962426287444269	WITHOUT_CLASSIFICATION	0.003757371255572997	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999664360884841	WITHOUT_CLASSIFICATION	3.356391151579226E-5	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999664360884841	WITHOUT_CLASSIFICATION	3.356391151579226E-5	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9614305150067248	WITHOUT_CLASSIFICATION	0.03856948499327515	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999703540893212	WITHOUT_CLASSIFICATION	2.964591067885302E-5	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999972757511084	WITHOUT_CLASSIFICATION	2.724248891631514E-6	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999518696568467	WITHOUT_CLASSIFICATION	4.813034315324045E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999844523361859	WITHOUT_CLASSIFICATION	1.554766381403166E-5	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9976474307032563	WITHOUT_CLASSIFICATION	0.0023525692967435565	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999903842317913	WITHOUT_CLASSIFICATION	9.61576820875677E-6	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9998909667369441	WITHOUT_CLASSIFICATION	1.0903326305589564E-4	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999798427688521	WITHOUT_CLASSIFICATION	2.0157231147898274E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999869731707794	WITHOUT_CLASSIFICATION	1.3026829220477423E-5	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999762276780612	WITHOUT_CLASSIFICATION	2.3772321938914192E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999890756070977	WITHOUT_CLASSIFICATION	1.0924392902219364E-5	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999913592722289	WITHOUT_CLASSIFICATION	8.640727771086624E-6	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999525391183044	WITHOUT_CLASSIFICATION	4.746088169563199E-5	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999976825989745	WITHOUT_CLASSIFICATION	2.317401025587716E-6	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999844198503463	WITHOUT_CLASSIFICATION	1.5580149653709376E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9979771518668131	WITHOUT_CLASSIFICATION	0.002022848133186799	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999305668559186	WITHOUT_CLASSIFICATION	6.943314408140173E-4	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999986017586732	WITHOUT_CLASSIFICATION	1.3982413267454366E-6	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999987387377	WITHOUT_CLASSIFICATION	1.2612622457057652E-9	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999997867824044	WITHOUT_CLASSIFICATION	2.132175954830538E-7	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999983661668137	WITHOUT_CLASSIFICATION	1.6338331862650093E-6	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999997296823516	WITHOUT_CLASSIFICATION	2.703176483614833E-7	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999920187827405	WITHOUT_CLASSIFICATION	7.981217259563323E-6	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.999999660605739	WITHOUT_CLASSIFICATION	3.3939426098752704E-7	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.999999702876423	WITHOUT_CLASSIFICATION	2.9712357694718565E-7	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9998794750778303	WITHOUT_CLASSIFICATION	1.2052492216969946E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9945274422405276	WITHOUT_CLASSIFICATION	0.005472557759472501	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.999998928767129	WITHOUT_CLASSIFICATION	1.071232870910839E-6	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999985972266661	WITHOUT_CLASSIFICATION	1.402773334042422E-6	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9997183048108734	WITHOUT_CLASSIFICATION	2.8169518912648205E-4	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999815081057164	WITHOUT_CLASSIFICATION	1.8491894283653226E-5	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999010352961	WITHOUT_CLASSIFICATION	9.896470379484159E-8	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9994847223945386	WITHOUT_CLASSIFICATION	5.152776054614543E-4	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9998371958645867	WITHOUT_CLASSIFICATION	1.628041354131982E-4	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999928663196063	WITHOUT_CLASSIFICATION	7.133680393623465E-6	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9991619944030934	WITHOUT_CLASSIFICATION	8.380055969065388E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9197181385887271	DESIGN	0.0802818614112729	WITHOUT_CLASSIFICATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999998401082401	WITHOUT_CLASSIFICATION	1.5989175997375724E-7	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999986941581496	WITHOUT_CLASSIFICATION	1.305841850452344E-6	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999977419365	WITHOUT_CLASSIFICATION	2.2580635301267888E-9	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999722909536669	WITHOUT_CLASSIFICATION	2.7709046333061247E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999820012644269	WITHOUT_CLASSIFICATION	1.7998735573118132E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999302731831595	WITHOUT_CLASSIFICATION	6.972681684050905E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9998700095402061	WITHOUT_CLASSIFICATION	1.299904597938689E-4	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999991004211023	WITHOUT_CLASSIFICATION	8.995788977181202E-7	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999998549758173	WITHOUT_CLASSIFICATION	1.4502418275995607E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999989832081247	WITHOUT_CLASSIFICATION	1.0167918752570557E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999985707722895	WITHOUT_CLASSIFICATION	1.4292277104553083E-6	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9994132090019382	WITHOUT_CLASSIFICATION	5.867909980618959E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9998877211805242	WITHOUT_CLASSIFICATION	1.1227881947578452E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999710484853969	WITHOUT_CLASSIFICATION	2.8951514603177854E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999827893194533	WITHOUT_CLASSIFICATION	1.7210680546670093E-5	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999982963960466	WITHOUT_CLASSIFICATION	1.703603953403735E-5	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999977948439347	WITHOUT_CLASSIFICATION	2.205156065201807E-6	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.999998888151939	WITHOUT_CLASSIFICATION	1.1118480608869205E-6	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999988562317091	WITHOUT_CLASSIFICATION	1.143768290844092E-6	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999975758245225	WITHOUT_CLASSIFICATION	2.424175477507048E-6	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999844231016192	WITHOUT_CLASSIFICATION	1.55768983808901E-5	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.7654403069969586	DESIGN	0.23455969300304147	WITHOUT_CLASSIFICATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999799628884412	WITHOUT_CLASSIFICATION	2.0037111558880065E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9998877211805242	WITHOUT_CLASSIFICATION	1.1227881947578452E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999827893194533	WITHOUT_CLASSIFICATION	1.7210680546670093E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999710484853969	WITHOUT_CLASSIFICATION	2.8951514603177854E-5	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999921256928552	WITHOUT_CLASSIFICATION	7.87430714486021E-6	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999671531259267	WITHOUT_CLASSIFICATION	3.2846874073372794E-5	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999882256419997	WITHOUT_CLASSIFICATION	1.1774358000257004E-5	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999646982819982	WITHOUT_CLASSIFICATION	3.5301718001706904E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9999275405149046	WITHOUT_CLASSIFICATION	7.245948509537761E-5	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999956110093525	WITHOUT_CLASSIFICATION	4.388990647389086E-6	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999945746620233	WITHOUT_CLASSIFICATION	5.4253379767042775E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999973368697684	WITHOUT_CLASSIFICATION	2.6631302315756652E-6	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999874473168644	WITHOUT_CLASSIFICATION	1.255268313562538E-5	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999977023920525	WITHOUT_CLASSIFICATION	2.2976079473809234E-6	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999944122498085	WITHOUT_CLASSIFICATION	5.587750191519516E-6	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9992144357913656	WITHOUT_CLASSIFICATION	7.855642086344291E-4	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999966282164223	WITHOUT_CLASSIFICATION	3.371783577537279E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999991333854376	WITHOUT_CLASSIFICATION	8.666145623562748E-7	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9998571556573037	WITHOUT_CLASSIFICATION	1.428443426962296E-4	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9994962650311912	WITHOUT_CLASSIFICATION	5.037349688087981E-4	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9952986897417836	WITHOUT_CLASSIFICATION	0.00470131025821644	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999862610139122	WITHOUT_CLASSIFICATION	1.3738986087803305E-4	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999862610139122	WITHOUT_CLASSIFICATION	1.3738986087803305E-4	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999995327248665	WITHOUT_CLASSIFICATION	4.6727513344014226E-7	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.999962185453952	WITHOUT_CLASSIFICATION	3.781454604800738E-5	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999996696083705	WITHOUT_CLASSIFICATION	3.3039162946747E-7	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999947812676329	WITHOUT_CLASSIFICATION	5.218732367194132E-6	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999727307897718	WITHOUT_CLASSIFICATION	2.726921022819577E-5	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999495349926903	WITHOUT_CLASSIFICATION	5.046500730969256E-5	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999766083848043	WITHOUT_CLASSIFICATION	2.3391615195671156E-5	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999504474278691	WITHOUT_CLASSIFICATION	4.9552572130880204E-5	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9987064908190344	WITHOUT_CLASSIFICATION	0.0012935091809656047	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999963129252406	WITHOUT_CLASSIFICATION	3.6870747594659772E-6	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999772717393736	WITHOUT_CLASSIFICATION	2.27282606263949E-5	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999946436743968	WITHOUT_CLASSIFICATION	5.356325603144556E-6	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999073129967986	WITHOUT_CLASSIFICATION	9.268700320138266E-5	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999999973705158	WITHOUT_CLASSIFICATION	2.6294841875833984E-8	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9956342543083124	WITHOUT_CLASSIFICATION	0.00436574569168758	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999952982762826	WITHOUT_CLASSIFICATION	4.701723717377892E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999907870305277	WITHOUT_CLASSIFICATION	9.212969472318927E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999892734014648	WITHOUT_CLASSIFICATION	1.0726598535243822E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999892734014648	WITHOUT_CLASSIFICATION	1.0726598535243822E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999982441355837	WITHOUT_CLASSIFICATION	1.7558644162976204E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999939440842178	WITHOUT_CLASSIFICATION	6.055915782174321E-6	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9954904519353172	WITHOUT_CLASSIFICATION	0.004509548064682885	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.999999769185564	WITHOUT_CLASSIFICATION	2.3081443606717256E-7	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999934486727248	WITHOUT_CLASSIFICATION	6.551327275158304E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999892734014648	WITHOUT_CLASSIFICATION	1.0726598535243822E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999892734014648	WITHOUT_CLASSIFICATION	1.0726598535243822E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992976814892	WITHOUT_CLASSIFICATION	7.023185107471993E-7	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992976814892	WITHOUT_CLASSIFICATION	7.023185107471993E-7	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999959790215301	WITHOUT_CLASSIFICATION	4.020978469918519E-6	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999997679680378	WITHOUT_CLASSIFICATION	2.3203196209287056E-7	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999746081972768	WITHOUT_CLASSIFICATION	2.5391802723192023E-5	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.5914442816533331	WITHOUT_CLASSIFICATION	0.40855571834666693	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999998640129434	WITHOUT_CLASSIFICATION	1.3598705660349628E-6	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999998640129434	WITHOUT_CLASSIFICATION	1.3598705660349628E-6	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999981854635183	WITHOUT_CLASSIFICATION	1.8145364817236974E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999993212685776	WITHOUT_CLASSIFICATION	6.787314224107923E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999991602835064	WITHOUT_CLASSIFICATION	8.397164934326021E-7	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9994791105252896	WITHOUT_CLASSIFICATION	5.20889474710349E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999990697390255	WITHOUT_CLASSIFICATION	9.302609743467514E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999979176715411	WITHOUT_CLASSIFICATION	2.0823284588017858E-6	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999387475493027	WITHOUT_CLASSIFICATION	6.125245069735867E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999980185315315	WITHOUT_CLASSIFICATION	1.9814684685769946E-6	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.999635350976515	WITHOUT_CLASSIFICATION	3.646490234849344E-4	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9995564548336957	WITHOUT_CLASSIFICATION	4.4354516630426544E-4	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9865977739113161	WITHOUT_CLASSIFICATION	0.01340222608868391	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999966962411304	WITHOUT_CLASSIFICATION	3.303758869513945E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9997629250025356	WITHOUT_CLASSIFICATION	2.3707499746441097E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999970487190586	WITHOUT_CLASSIFICATION	2.9512809413698207E-6	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999952982762826	WITHOUT_CLASSIFICATION	4.701723717377892E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999892734014648	WITHOUT_CLASSIFICATION	1.0726598535243822E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992976814892	WITHOUT_CLASSIFICATION	7.023185107471993E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999979176715411	WITHOUT_CLASSIFICATION	2.0823284588017858E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9215266956496941	WITHOUT_CLASSIFICATION	0.07847330435030594	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9215266956496941	WITHOUT_CLASSIFICATION	0.07847330435030594	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999313762243894	WITHOUT_CLASSIFICATION	6.862377561056931E-5	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999997313654161	WITHOUT_CLASSIFICATION	2.6863458385601673E-7	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999997136438205	WITHOUT_CLASSIFICATION	2.863561794763132E-7	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999922895362	WITHOUT_CLASSIFICATION	7.710463808531574E-9	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999983633510513	WITHOUT_CLASSIFICATION	1.6366489486326517E-6	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9998990649228403	WITHOUT_CLASSIFICATION	1.0093507715967616E-4	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9996436411482196	WITHOUT_CLASSIFICATION	3.5635885178046857E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9939349658138258	WITHOUT_CLASSIFICATION	0.00606503418617421	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9984930063695476	WITHOUT_CLASSIFICATION	0.00150699363045239	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9992627046175557	WITHOUT_CLASSIFICATION	7.37295382444341E-4	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9979889883740846	WITHOUT_CLASSIFICATION	0.0020110116259154467	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.999999255967301	WITHOUT_CLASSIFICATION	7.440326989894314E-7	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999981887194385	WITHOUT_CLASSIFICATION	1.8112805615218882E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999907870305277	WITHOUT_CLASSIFICATION	9.212969472318927E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992976814892	WITHOUT_CLASSIFICATION	7.023185107471993E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999993212685776	WITHOUT_CLASSIFICATION	6.787314224107923E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999991602835064	WITHOUT_CLASSIFICATION	8.397164934326021E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999991602835064	WITHOUT_CLASSIFICATION	8.397164934326021E-7	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999990697390255	WITHOUT_CLASSIFICATION	9.302609743467514E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999979176715411	WITHOUT_CLASSIFICATION	2.0823284588017858E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999979176715411	WITHOUT_CLASSIFICATION	2.0823284588017858E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9215266956496941	WITHOUT_CLASSIFICATION	0.07847330435030594	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999954557608266	WITHOUT_CLASSIFICATION	4.544239173448099E-6	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9998577555771977	WITHOUT_CLASSIFICATION	1.422444228022879E-4	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999111108111	WITHOUT_CLASSIFICATION	8.88891890121779E-8	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9993005563581093	WITHOUT_CLASSIFICATION	6.994436418906815E-4	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9756304932286598	WITHOUT_CLASSIFICATION	0.024369506771340158	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999470250447249	WITHOUT_CLASSIFICATION	5.297495527518666E-5	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999999440006462	WITHOUT_CLASSIFICATION	5.599935380716145E-8	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999993447999403	WITHOUT_CLASSIFICATION	6.552000596890363E-7	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999625169125	WITHOUT_CLASSIFICATION	3.748308750788745E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999993212685776	WITHOUT_CLASSIFICATION	6.787314224107923E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999991602835064	WITHOUT_CLASSIFICATION	8.397164934326021E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999991602835064	WITHOUT_CLASSIFICATION	8.397164934326021E-7	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999990697390255	WITHOUT_CLASSIFICATION	9.302609743467514E-7	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9939349658138258	WITHOUT_CLASSIFICATION	0.00606503418617421	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9992627046175557	WITHOUT_CLASSIFICATION	7.37295382444341E-4	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999998402747877	WITHOUT_CLASSIFICATION	1.597252123199097E-7	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999995627862797	WITHOUT_CLASSIFICATION	4.372137203917104E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999994664078378	WITHOUT_CLASSIFICATION	5.33592162155402E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999994664078378	WITHOUT_CLASSIFICATION	5.33592162155402E-7	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9953865715856995	WITHOUT_CLASSIFICATION	0.0046134284143005315	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999880051399276	WITHOUT_CLASSIFICATION	1.1994860072475847E-5	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999776100262355	WITHOUT_CLASSIFICATION	2.238997376456618E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999978147728058	WITHOUT_CLASSIFICATION	2.1852271942311972E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999995624109638	WITHOUT_CLASSIFICATION	4.375890362365565E-7	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999995624109638	WITHOUT_CLASSIFICATION	4.375890362365565E-7	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999892972035438	WITHOUT_CLASSIFICATION	1.0702796456197172E-5	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999892972035438	WITHOUT_CLASSIFICATION	1.0702796456197172E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999384245343707	WITHOUT_CLASSIFICATION	6.157546562929367E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999384245343707	WITHOUT_CLASSIFICATION	6.157546562929367E-5	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999937113976148	WITHOUT_CLASSIFICATION	6.288602385066006E-6	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999993435266082	WITHOUT_CLASSIFICATION	6.564733918506005E-7	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9898465497876006	WITHOUT_CLASSIFICATION	0.010153450212399445	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999983121207264	WITHOUT_CLASSIFICATION	1.6878792735480418E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999501936177904	WITHOUT_CLASSIFICATION	4.98063822096967E-5	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999953241629808	WITHOUT_CLASSIFICATION	4.6758370192320285E-6	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999903377505993	WITHOUT_CLASSIFICATION	9.662249400672235E-6	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999999715229154	WITHOUT_CLASSIFICATION	2.8477084582423456E-8	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9993285204613251	WITHOUT_CLASSIFICATION	6.714795386748071E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9721216688992487	WITHOUT_CLASSIFICATION	0.027878331100751327	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999873978149927	WITHOUT_CLASSIFICATION	1.2602185007265263E-5	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9998681725643261	WITHOUT_CLASSIFICATION	1.3182743567373734E-4	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9997698086830722	WITHOUT_CLASSIFICATION	2.3019131692772398E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999728866326382	WITHOUT_CLASSIFICATION	2.711336736186463E-5	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999728866326382	WITHOUT_CLASSIFICATION	2.711336736186463E-5	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999767481339507	WITHOUT_CLASSIFICATION	2.3251866049303257E-5	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999787848084	WITHOUT_CLASSIFICATION	2.1215191535353946E-8	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999939012808296	WITHOUT_CLASSIFICATION	6.098719170395789E-5	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999999383365	WITHOUT_CLASSIFICATION	6.166352186307767E-11	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999927361182217	WITHOUT_CLASSIFICATION	7.263881778280734E-6	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999820703314365	WITHOUT_CLASSIFICATION	1.7929668563522598E-5	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999940271555293	WITHOUT_CLASSIFICATION	5.972844470617949E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999996363854657	WITHOUT_CLASSIFICATION	3.6361453428987304E-7	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999997190009	WITHOUT_CLASSIFICATION	2.809990232736193E-10	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999998798156956	WITHOUT_CLASSIFICATION	1.201843044045796E-7	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999850427771	WITHOUT_CLASSIFICATION	1.4957222868567083E-8	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9998887307437697	WITHOUT_CLASSIFICATION	1.1126925623034024E-4	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999999447693011	WITHOUT_CLASSIFICATION	5.523069894629392E-8	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.5547094097619646	WITHOUT_CLASSIFICATION	0.4452905902380355	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9863380720851531	WITHOUT_CLASSIFICATION	0.013661927914846854	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9996778846242669	WITHOUT_CLASSIFICATION	3.221153757330895E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999878342343077	WITHOUT_CLASSIFICATION	1.216576569233973E-5	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999993919080574	WITHOUT_CLASSIFICATION	6.08091942588516E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999995503863461	WITHOUT_CLASSIFICATION	4.4961365382188187E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999995503863461	WITHOUT_CLASSIFICATION	4.4961365382188187E-7	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999582383619303	WITHOUT_CLASSIFICATION	4.17616380697373E-5	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9998915207526559	WITHOUT_CLASSIFICATION	1.0847924734412515E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9994521614071157	WITHOUT_CLASSIFICATION	5.47838592884267E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9994521614071157	WITHOUT_CLASSIFICATION	5.47838592884267E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999994809125355	WITHOUT_CLASSIFICATION	5.190874644216682E-7	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999908925799849	WITHOUT_CLASSIFICATION	9.107420015152328E-6	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999141888934296	WITHOUT_CLASSIFICATION	8.581110657032195E-5	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999956656860272	WITHOUT_CLASSIFICATION	4.334313972885609E-6	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999916415742718	WITHOUT_CLASSIFICATION	8.358425728273827E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999947002391154	WITHOUT_CLASSIFICATION	5.299760884659898E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999947002391154	WITHOUT_CLASSIFICATION	5.299760884659898E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999995184843946	WITHOUT_CLASSIFICATION	4.815156054251204E-7	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999992185704569	WITHOUT_CLASSIFICATION	7.81429542987021E-7	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999882535097125	WITHOUT_CLASSIFICATION	1.174649028749883E-5	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998206658067538	WITHOUT_CLASSIFICATION	1.7933419324612197E-4	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9998915207526559	WITHOUT_CLASSIFICATION	1.0847924734412515E-4	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999834450589526	WITHOUT_CLASSIFICATION	1.655494104728094E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999907244392444	WITHOUT_CLASSIFICATION	9.275560755580047E-6	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999907244392444	WITHOUT_CLASSIFICATION	9.275560755580047E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999560545063211	WITHOUT_CLASSIFICATION	4.394549367897977E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996737179204	WITHOUT_CLASSIFICATION	3.2628207955424537E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996737179204	WITHOUT_CLASSIFICATION	3.2628207955424537E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999854716032	WITHOUT_CLASSIFICATION	1.4528396847500265E-8	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999854716032	WITHOUT_CLASSIFICATION	1.4528396847500265E-8	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999854716032	WITHOUT_CLASSIFICATION	1.4528396847500265E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996737179204	WITHOUT_CLASSIFICATION	3.2628207955424537E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996737179204	WITHOUT_CLASSIFICATION	3.2628207955424537E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999560545063211	WITHOUT_CLASSIFICATION	4.394549367897977E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999601182147972	WITHOUT_CLASSIFICATION	3.9881785202794975E-4	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999994545983701	WITHOUT_CLASSIFICATION	5.454016299037319E-7	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999999752653392	WITHOUT_CLASSIFICATION	2.4734660782938484E-8	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999705900433935	WITHOUT_CLASSIFICATION	2.9409956606442072E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.999999997701475	WITHOUT_CLASSIFICATION	2.29852501678721E-9	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.999993874124283	WITHOUT_CLASSIFICATION	6.125875717057132E-6	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999990025166751	WITHOUT_CLASSIFICATION	9.9748332499339E-7	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999398356504	WITHOUT_CLASSIFICATION	6.01643496202832E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999850427771	WITHOUT_CLASSIFICATION	1.4957222868567083E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996737179204	WITHOUT_CLASSIFICATION	3.2628207955424537E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996737179204	WITHOUT_CLASSIFICATION	3.2628207955424537E-7	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999809946376	WITHOUT_CLASSIFICATION	1.9005362411088264E-8	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999987617628517	WITHOUT_CLASSIFICATION	1.2382371483166223E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999934979457312	WITHOUT_CLASSIFICATION	6.502054268797044E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999949746743	WITHOUT_CLASSIFICATION	5.025325755230394E-9	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999957834941736	WITHOUT_CLASSIFICATION	4.2165058263644266E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999868361767125	WITHOUT_CLASSIFICATION	1.316382328743181E-5	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999796559804	WITHOUT_CLASSIFICATION	2.0344019551993236E-8	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999859488732	WITHOUT_CLASSIFICATION	1.4051126909620199E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999999989855698	WITHOUT_CLASSIFICATION	1.014430188171799E-8	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999836839683937	WITHOUT_CLASSIFICATION	1.631603160636142E-5	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999458706555395	WITHOUT_CLASSIFICATION	5.412934446037006E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.999983894027069	WITHOUT_CLASSIFICATION	1.6105972931050364E-5	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999998510440208	WITHOUT_CLASSIFICATION	1.4895597925450217E-7	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999996812183883	WITHOUT_CLASSIFICATION	3.187816116939675E-7	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999292087325	WITHOUT_CLASSIFICATION	7.079126750114146E-8	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.999992483162952	WITHOUT_CLASSIFICATION	7.516837048017282E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.999992483162952	WITHOUT_CLASSIFICATION	7.516837048017282E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.999992483162952	WITHOUT_CLASSIFICATION	7.516837048017282E-6	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9999957764347884	WITHOUT_CLASSIFICATION	4.2235652115278885E-6	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999999020444	WITHOUT_CLASSIFICATION	9.795560490044711E-11	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999998268445867	WITHOUT_CLASSIFICATION	1.7315541321862893E-7	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999998281033493	WITHOUT_CLASSIFICATION	1.718966507018116E-7	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.999687335906133	WITHOUT_CLASSIFICATION	3.12664093867048E-4	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999876564687326	WITHOUT_CLASSIFICATION	1.23435312674026E-4	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999992311732001	WITHOUT_CLASSIFICATION	7.688267998968354E-7	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999996326109614	WITHOUT_CLASSIFICATION	3.6738903858704075E-7	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.999980563179552	WITHOUT_CLASSIFICATION	1.943682044798637E-5	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.999999665604888	WITHOUT_CLASSIFICATION	3.3439511203361194E-7	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.999978625905268	WITHOUT_CLASSIFICATION	2.1374094731953716E-5	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9994850754667199	WITHOUT_CLASSIFICATION	5.149245332800608E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999995184843946	WITHOUT_CLASSIFICATION	4.815156054251204E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996737179204	WITHOUT_CLASSIFICATION	3.2628207955424537E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996737179204	WITHOUT_CLASSIFICATION	3.2628207955424537E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999560545063211	WITHOUT_CLASSIFICATION	4.394549367897977E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.999993874124283	WITHOUT_CLASSIFICATION	6.125875717057132E-6	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999987617628517	WITHOUT_CLASSIFICATION	1.2382371483166223E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999949746743	WITHOUT_CLASSIFICATION	5.025325755230394E-9	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999868361767125	WITHOUT_CLASSIFICATION	1.316382328743181E-5	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999934979457312	WITHOUT_CLASSIFICATION	6.502054268797044E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999796559804	WITHOUT_CLASSIFICATION	2.0344019551993236E-8	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999836839683937	WITHOUT_CLASSIFICATION	1.631603160636142E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999999989855698	WITHOUT_CLASSIFICATION	1.014430188171799E-8	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.999983894027069	WITHOUT_CLASSIFICATION	1.6105972931050364E-5	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999707619794725	WITHOUT_CLASSIFICATION	2.9238020527457196E-5	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9841785457906882	WITHOUT_CLASSIFICATION	0.015821454209311744	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9954004230708043	WITHOUT_CLASSIFICATION	0.00459957692919569	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999750981165781	WITHOUT_CLASSIFICATION	2.490188342196358E-5	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999298897377277	WITHOUT_CLASSIFICATION	7.011026227228437E-5	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.999999312182988	WITHOUT_CLASSIFICATION	6.878170119121997E-7	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999603199365885	WITHOUT_CLASSIFICATION	3.9680063411395166E-5	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999996857436483	WITHOUT_CLASSIFICATION	3.142563517505191E-7	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999937289045444	WITHOUT_CLASSIFICATION	6.271095455591615E-6	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999335847095	WITHOUT_CLASSIFICATION	6.641529054241765E-8	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.99997991135352	WITHOUT_CLASSIFICATION	2.0088646479953766E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999959762339564	WITHOUT_CLASSIFICATION	4.0237660436022354E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999136659043	WITHOUT_CLASSIFICATION	8.6334095607271E-8	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9962845788718185	WITHOUT_CLASSIFICATION	0.003715421128181484	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999942260955	WITHOUT_CLASSIFICATION	5.7739045074608625E-9	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998749142377584	WITHOUT_CLASSIFICATION	1.250857622415586E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9991259960861107	WITHOUT_CLASSIFICATION	8.740039138893293E-4	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.999999873760297	WITHOUT_CLASSIFICATION	1.2623970296008892E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999961395931863	WITHOUT_CLASSIFICATION	3.860406813639468E-6	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999727345182955	WITHOUT_CLASSIFICATION	2.7265481704467246E-5	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999954622284868	WITHOUT_CLASSIFICATION	4.53777151315956E-6	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999774637676	WITHOUT_CLASSIFICATION	2.253623243252856E-8	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999774637676	WITHOUT_CLASSIFICATION	2.253623243252856E-8	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9961102752396948	WITHOUT_CLASSIFICATION	0.003889724760305199	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9995472845302521	WITHOUT_CLASSIFICATION	4.5271546974787847E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996862541965414	WITHOUT_CLASSIFICATION	3.137458034585371E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996862541965414	WITHOUT_CLASSIFICATION	3.137458034585371E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996862541965414	WITHOUT_CLASSIFICATION	3.137458034585371E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9995483573879101	WITHOUT_CLASSIFICATION	4.516426120897613E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9995483573879101	WITHOUT_CLASSIFICATION	4.516426120897613E-4	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.999689235075502	WITHOUT_CLASSIFICATION	3.107649244980175E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9993312331440932	WITHOUT_CLASSIFICATION	6.68766855906702E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9995472845302521	WITHOUT_CLASSIFICATION	4.5271546974787847E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999185073463	WITHOUT_CLASSIFICATION	8.149265379380088E-8	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996862541965414	WITHOUT_CLASSIFICATION	3.137458034585371E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996862541965414	WITHOUT_CLASSIFICATION	3.137458034585371E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9995483573879101	WITHOUT_CLASSIFICATION	4.516426120897613E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9993312331440932	WITHOUT_CLASSIFICATION	6.68766855906702E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999981725921412	WITHOUT_CLASSIFICATION	1.8274078587971397E-6	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999981725921412	WITHOUT_CLASSIFICATION	1.8274078587971397E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999122818092	WITHOUT_CLASSIFICATION	8.77181908408148E-8	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999122818092	WITHOUT_CLASSIFICATION	8.77181908408148E-8	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999565050647422	WITHOUT_CLASSIFICATION	4.349493525775144E-5	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999565050647422	WITHOUT_CLASSIFICATION	4.349493525775144E-5	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999999887329865	WITHOUT_CLASSIFICATION	1.126701347005657E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998786349732	WITHOUT_CLASSIFICATION	1.2136502685396093E-7	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998786349732	WITHOUT_CLASSIFICATION	1.2136502685396093E-7	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999975693748835	WITHOUT_CLASSIFICATION	2.4306251164493308E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999975693748835	WITHOUT_CLASSIFICATION	2.4306251164493308E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999427211365	WITHOUT_CLASSIFICATION	5.7278863551105575E-8	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999962932750196	WITHOUT_CLASSIFICATION	3.706724980317654E-6	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999962932750196	WITHOUT_CLASSIFICATION	3.706724980317654E-6	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999917137130366	WITHOUT_CLASSIFICATION	8.28628696338664E-6	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.999999973825104	WITHOUT_CLASSIFICATION	2.6174896057887123E-8	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999398827817	WITHOUT_CLASSIFICATION	6.011721827450744E-8	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999917137130366	WITHOUT_CLASSIFICATION	8.28628696338664E-6	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999992295701232	WITHOUT_CLASSIFICATION	7.704298768021668E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999995521344299	WITHOUT_CLASSIFICATION	4.4786557009741416E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999995521344299	WITHOUT_CLASSIFICATION	4.4786557009741416E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999995521344299	WITHOUT_CLASSIFICATION	4.4786557009741416E-7	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999690864534766	WITHOUT_CLASSIFICATION	3.0913546523378555E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999920717565115	WITHOUT_CLASSIFICATION	7.928243488532702E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999980356579665	WITHOUT_CLASSIFICATION	1.9643420334116524E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999980356579665	WITHOUT_CLASSIFICATION	1.9643420334116524E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.999996632136891	WITHOUT_CLASSIFICATION	3.367863108901377E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998067987893718	WITHOUT_CLASSIFICATION	1.932012106280169E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999921495854397	WITHOUT_CLASSIFICATION	7.850414560274083E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.999937235517413	WITHOUT_CLASSIFICATION	6.276448258705481E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.99999998069357	WITHOUT_CLASSIFICATION	1.9306430037912393E-8	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999880090057742	WITHOUT_CLASSIFICATION	1.1990994225843686E-5	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999880090057742	WITHOUT_CLASSIFICATION	1.1990994225843686E-5	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999951959880772	WITHOUT_CLASSIFICATION	4.804011922869697E-6	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9994985137851069	WITHOUT_CLASSIFICATION	5.01486214893186E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9994985137851069	WITHOUT_CLASSIFICATION	5.01486214893186E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999995521344299	WITHOUT_CLASSIFICATION	4.4786557009741416E-7	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999920717565115	WITHOUT_CLASSIFICATION	7.928243488532702E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999980356579665	WITHOUT_CLASSIFICATION	1.9643420334116524E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.999996632136891	WITHOUT_CLASSIFICATION	3.367863108901377E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998067987893718	WITHOUT_CLASSIFICATION	1.932012106280169E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999921495854397	WITHOUT_CLASSIFICATION	7.850414560274083E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.999937235517413	WITHOUT_CLASSIFICATION	6.276448258705481E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9994985137851069	WITHOUT_CLASSIFICATION	5.01486214893186E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9996078847050677	WITHOUT_CLASSIFICATION	3.9211529493238625E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999325478781738	WITHOUT_CLASSIFICATION	6.74521218262651E-5	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999944544813645	WITHOUT_CLASSIFICATION	5.545518635516561E-6	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999800174414446	WITHOUT_CLASSIFICATION	1.9982558555321047E-5	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.999953465153481	WITHOUT_CLASSIFICATION	4.6534846518999726E-5	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9998848822455799	WITHOUT_CLASSIFICATION	1.1511775442003353E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999842435764977	WITHOUT_CLASSIFICATION	1.5756423502333987E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999842435764977	WITHOUT_CLASSIFICATION	1.5756423502333987E-5	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.999988848018536	WITHOUT_CLASSIFICATION	1.1151981464028051E-5	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999933424633295	WITHOUT_CLASSIFICATION	6.657536670441745E-6	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999400051978101	WITHOUT_CLASSIFICATION	5.999480218977292E-5	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999996521805352	WITHOUT_CLASSIFICATION	3.47819464762769E-7	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999991773754423	WITHOUT_CLASSIFICATION	8.226245576954324E-6	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999991773754423	WITHOUT_CLASSIFICATION	8.226245576954324E-6	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999741634023381	WITHOUT_CLASSIFICATION	2.5836597661815686E-5	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999784300840985	WITHOUT_CLASSIFICATION	2.156991590155973E-5	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999981343104908	WITHOUT_CLASSIFICATION	1.8656895091522423E-6	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999981343104908	WITHOUT_CLASSIFICATION	1.8656895091522423E-6	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999953032266164	WITHOUT_CLASSIFICATION	4.696773383587952E-6	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999888065298419	WITHOUT_CLASSIFICATION	1.119347015805023E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.99999998069357	WITHOUT_CLASSIFICATION	1.9306430037912393E-8	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998725218475772	WITHOUT_CLASSIFICATION	1.2747815242282405E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999996744754063	WITHOUT_CLASSIFICATION	3.255245937930566E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999987141201517	WITHOUT_CLASSIFICATION	1.2858798481629543E-6	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999767543577	WITHOUT_CLASSIFICATION	2.3245642225303356E-8	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999638017127807	WITHOUT_CLASSIFICATION	3.619828721930025E-5	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.999997452357598	WITHOUT_CLASSIFICATION	2.547642402037625E-6	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999987392840647	WITHOUT_CLASSIFICATION	1.260715935243906E-6	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9987867843808298	WITHOUT_CLASSIFICATION	0.0012132156191702235	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9997726736012084	WITHOUT_CLASSIFICATION	2.2732639879160957E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9997726736012084	WITHOUT_CLASSIFICATION	2.2732639879160957E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999966122158209	WITHOUT_CLASSIFICATION	3.387784179054667E-6	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999966122158209	WITHOUT_CLASSIFICATION	3.387784179054667E-6	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999998678628521	WITHOUT_CLASSIFICATION	1.321371478097738E-7	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999905301240304	WITHOUT_CLASSIFICATION	9.469875969539269E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999905301240304	WITHOUT_CLASSIFICATION	9.469875969539269E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999905301240304	WITHOUT_CLASSIFICATION	9.469875969539269E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999944856393	WITHOUT_CLASSIFICATION	5.514360690900448E-9	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.99999999092513	WITHOUT_CLASSIFICATION	9.074869868836976E-9	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.99999999092513	WITHOUT_CLASSIFICATION	9.074869868836976E-9	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999999999734743	WITHOUT_CLASSIFICATION	2.652569976817116E-10	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999950164899454	WITHOUT_CLASSIFICATION	4.983510054510306E-6	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999994024273373	WITHOUT_CLASSIFICATION	5.975726626690284E-7	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999998562750498	WITHOUT_CLASSIFICATION	1.4372495014028028E-7	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.999996533701941	WITHOUT_CLASSIFICATION	3.466298058990203E-6	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9998782877276665	WITHOUT_CLASSIFICATION	1.2171227233349698E-4	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999956748676384	WITHOUT_CLASSIFICATION	4.325132361543544E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999136659043	WITHOUT_CLASSIFICATION	8.6334095607271E-8	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999136659043	WITHOUT_CLASSIFICATION	8.6334095607271E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999944856393	WITHOUT_CLASSIFICATION	5.514360690900448E-9	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999999999734743	WITHOUT_CLASSIFICATION	2.652569976817116E-10	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999662489403	WITHOUT_CLASSIFICATION	3.375105970227175E-8	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999950164899454	WITHOUT_CLASSIFICATION	4.983510054510306E-6	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999994024273373	WITHOUT_CLASSIFICATION	5.975726626690284E-7	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999835492562059	WITHOUT_CLASSIFICATION	1.6450743793992844E-5	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999945228707959	WITHOUT_CLASSIFICATION	5.47712920399689E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995045772081	WITHOUT_CLASSIFICATION	4.954227919268542E-7	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9997347233896586	WITHOUT_CLASSIFICATION	2.6527661034136794E-4	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999981906945061	WITHOUT_CLASSIFICATION	1.8093054939118978E-6	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999996748867478	WITHOUT_CLASSIFICATION	3.2511325225670516E-7	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999985251810389	WITHOUT_CLASSIFICATION	1.4748189609967113E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999835492562059	WITHOUT_CLASSIFICATION	1.6450743793992844E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999207029909967	WITHOUT_CLASSIFICATION	7.929700900341009E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999207029909967	WITHOUT_CLASSIFICATION	7.929700900341009E-5	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999849771625766	WITHOUT_CLASSIFICATION	1.5022837423450347E-5	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999449578135142	WITHOUT_CLASSIFICATION	5.5042186485668385E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.999177875573763	WITHOUT_CLASSIFICATION	8.221244262368917E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999135081257272	WITHOUT_CLASSIFICATION	8.649187427282573E-5	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999551425338	WITHOUT_CLASSIFICATION	4.485746621049802E-8	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9992820428143445	WITHOUT_CLASSIFICATION	7.179571856555689E-4	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999994966290772	WITHOUT_CLASSIFICATION	5.033709228272652E-7	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9862491097941183	WITHOUT_CLASSIFICATION	0.013750890205881695	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999998754229764	WITHOUT_CLASSIFICATION	1.2457702355737473E-7	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999999943495205	WITHOUT_CLASSIFICATION	5.6504795463814215E-9	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999928682692951	WITHOUT_CLASSIFICATION	7.131730704897355E-6	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999135081257272	WITHOUT_CLASSIFICATION	8.649187427282573E-5	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999551425338	WITHOUT_CLASSIFICATION	4.485746621049802E-8	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999000168230722	WITHOUT_CLASSIFICATION	9.998317692783812E-5	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999999730613217	WITHOUT_CLASSIFICATION	2.693867820071196E-8	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999998956624105	WITHOUT_CLASSIFICATION	1.043375894502986E-7	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999999318843359	WITHOUT_CLASSIFICATION	6.8115664031722E-8	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999987467986	WITHOUT_CLASSIFICATION	1.2532013750940901E-9	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999976039545951	WITHOUT_CLASSIFICATION	2.3960454048235256E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9996006293609612	WITHOUT_CLASSIFICATION	3.993706390388583E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999977424695592	WITHOUT_CLASSIFICATION	2.2575304407703187E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.999998377735283	WITHOUT_CLASSIFICATION	1.6222647169565035E-6	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999960879095837	WITHOUT_CLASSIFICATION	3.912090416305316E-6	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999846415855527	WITHOUT_CLASSIFICATION	1.535841444723291E-5	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9999909885687907	WITHOUT_CLASSIFICATION	9.01143120943832E-6	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999298365096909	WITHOUT_CLASSIFICATION	7.016349030910046E-5	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9998812455077407	WITHOUT_CLASSIFICATION	1.1875449225923734E-4	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.5855731336390344	DESIGN	0.4144268663609657	WITHOUT_CLASSIFICATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999932864797696	WITHOUT_CLASSIFICATION	6.713520230471168E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999984194442969	WITHOUT_CLASSIFICATION	1.5805557031127165E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.998799607811841	WITHOUT_CLASSIFICATION	0.0012003921881590458	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999980697695543	WITHOUT_CLASSIFICATION	1.9302304456918666E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999948538264991	WITHOUT_CLASSIFICATION	5.146173500875067E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999984194442969	WITHOUT_CLASSIFICATION	1.5805557031127165E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.998799607811841	WITHOUT_CLASSIFICATION	0.0012003921881590458	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999980697695543	WITHOUT_CLASSIFICATION	1.9302304456918666E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.999748575433225	WITHOUT_CLASSIFICATION	2.5142456677493475E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999589333994977	WITHOUT_CLASSIFICATION	4.106660050226355E-5	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9996282975169184	WITHOUT_CLASSIFICATION	3.717024830815369E-4	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999958726802778	WITHOUT_CLASSIFICATION	4.127319722233424E-6	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.5424659654755629	DESIGN	0.457534034524437	WITHOUT_CLASSIFICATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999948976612193	WITHOUT_CLASSIFICATION	5.10233878061965E-6	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999951227434465	WITHOUT_CLASSIFICATION	4.877256553516293E-6	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999485573390712	WITHOUT_CLASSIFICATION	5.1442660928804985E-5	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9998326879692853	WITHOUT_CLASSIFICATION	1.6731203071479768E-4	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999831947738065	WITHOUT_CLASSIFICATION	1.6805226193507097E-5	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9849361529409492	DESIGN	0.015063847059050778	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.999990962569003	WITHOUT_CLASSIFICATION	9.037430997044527E-6	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999986303199195	WITHOUT_CLASSIFICATION	1.369680080504221E-6	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999986032411702	WITHOUT_CLASSIFICATION	1.3967588297324728E-6	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999795206548	WITHOUT_CLASSIFICATION	2.0479345184211748E-8	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999683872991394	WITHOUT_CLASSIFICATION	3.161270086062153E-5	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999859210329456	WITHOUT_CLASSIFICATION	1.4078967054374018E-5	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.99413051120507	WITHOUT_CLASSIFICATION	0.005869488794930001	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999677730589124	WITHOUT_CLASSIFICATION	3.222694108755376E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999994056799211	WITHOUT_CLASSIFICATION	5.943200790067157E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999991883829231	WITHOUT_CLASSIFICATION	8.116170768493258E-7	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999988689427828	WITHOUT_CLASSIFICATION	1.1310572172011587E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999988689427828	WITHOUT_CLASSIFICATION	1.1310572172011587E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999994882531646	WITHOUT_CLASSIFICATION	5.117468353082847E-7	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999994882531646	WITHOUT_CLASSIFICATION	5.117468353082847E-7	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999968353091151	WITHOUT_CLASSIFICATION	3.164690884852263E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999968353091151	WITHOUT_CLASSIFICATION	3.164690884852263E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999550077527	WITHOUT_CLASSIFICATION	4.4992247236021674E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998168137743	WITHOUT_CLASSIFICATION	1.83186225774793E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999656082017	WITHOUT_CLASSIFICATION	3.4391798230856014E-8	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999976348336842	WITHOUT_CLASSIFICATION	2.3651663158650427E-6	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999991098737	WITHOUT_CLASSIFICATION	8.901263359189607E-10	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999824868307685	WITHOUT_CLASSIFICATION	1.7513169231493924E-4	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999813280364	WITHOUT_CLASSIFICATION	1.867196362894844E-8	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.999998835514412	WITHOUT_CLASSIFICATION	1.164485587903399E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999136659043	WITHOUT_CLASSIFICATION	8.6334095607271E-8	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999550077527	WITHOUT_CLASSIFICATION	4.4992247236021674E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998168137743	WITHOUT_CLASSIFICATION	1.83186225774793E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999656082017	WITHOUT_CLASSIFICATION	3.4391798230856014E-8	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999991098737	WITHOUT_CLASSIFICATION	8.901263359189607E-10	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999824868307685	WITHOUT_CLASSIFICATION	1.7513169231493924E-4	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999995190013644	WITHOUT_CLASSIFICATION	4.809986355896121E-7	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999916543014004	WITHOUT_CLASSIFICATION	8.345698599773156E-6	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997479143151817	WITHOUT_CLASSIFICATION	2.520856848183165E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997479143151817	WITHOUT_CLASSIFICATION	2.520856848183165E-4	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9994288140268447	WITHOUT_CLASSIFICATION	5.711859731552998E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999490915918	WITHOUT_CLASSIFICATION	5.090840822478634E-8	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999961133820374	WITHOUT_CLASSIFICATION	3.886617962596292E-6	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999964135321	WITHOUT_CLASSIFICATION	3.5864677530281875E-9	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999964135321	WITHOUT_CLASSIFICATION	3.5864677530281875E-9	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999986954387082	WITHOUT_CLASSIFICATION	1.304561291754348E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999987133263214	WITHOUT_CLASSIFICATION	1.2866736785926295E-6	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999995909897272	WITHOUT_CLASSIFICATION	4.0901027286676216E-7	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999995589907001	WITHOUT_CLASSIFICATION	4.410092998988072E-6	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9993703383533934	WITHOUT_CLASSIFICATION	6.296616466067039E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9962845788718185	WITHOUT_CLASSIFICATION	0.003715421128181484	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999942260955	WITHOUT_CLASSIFICATION	5.7739045074608625E-9	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998749142377584	WITHOUT_CLASSIFICATION	1.250857622415586E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9991259960861107	WITHOUT_CLASSIFICATION	8.740039138893293E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999727345182955	WITHOUT_CLASSIFICATION	2.7265481704467246E-5	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999954622284868	WITHOUT_CLASSIFICATION	4.53777151315956E-6	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999986954387082	WITHOUT_CLASSIFICATION	1.304561291754348E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999987133263214	WITHOUT_CLASSIFICATION	1.2866736785926295E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999995589907001	WITHOUT_CLASSIFICATION	4.410092998988072E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999469404416635	WITHOUT_CLASSIFICATION	5.305955833631542E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999961133820374	WITHOUT_CLASSIFICATION	3.886617962596292E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999961133820374	WITHOUT_CLASSIFICATION	3.886617962596292E-6	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999928682692951	WITHOUT_CLASSIFICATION	7.131730704897355E-6	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999928682692951	WITHOUT_CLASSIFICATION	7.131730704897355E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999980995202554	WITHOUT_CLASSIFICATION	1.9004797446025537E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999980995202554	WITHOUT_CLASSIFICATION	1.9004797446025537E-5	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999653801235	WITHOUT_CLASSIFICATION	3.4619876496968274E-8	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.99999944092391	WITHOUT_CLASSIFICATION	5.590760899982933E-7	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9947793023562248	WITHOUT_CLASSIFICATION	0.005220697643775229	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999972119863921	WITHOUT_CLASSIFICATION	2.7880136078121514E-6	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999895306572221	WITHOUT_CLASSIFICATION	1.046934277795966E-5	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999996995839132	WITHOUT_CLASSIFICATION	3.00416086699847E-7	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999607264535902	WITHOUT_CLASSIFICATION	3.927354640976195E-5	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999301872401746	WITHOUT_CLASSIFICATION	6.981275982536749E-5	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999988956189916	WITHOUT_CLASSIFICATION	1.1043810084442352E-6	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999966454176326	WITHOUT_CLASSIFICATION	3.3545823675044472E-6	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999850915897649	WITHOUT_CLASSIFICATION	1.4908410234945168E-5	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9998742450701491	WITHOUT_CLASSIFICATION	1.2575492985093857E-4	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999780417093488	WITHOUT_CLASSIFICATION	2.1958290651286597E-5	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999098416333	WITHOUT_CLASSIFICATION	9.015836660759439E-8	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.999999995940194	WITHOUT_CLASSIFICATION	4.0598060431111206E-9	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999616356940783	WITHOUT_CLASSIFICATION	3.836430592174631E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999959025791704	WITHOUT_CLASSIFICATION	4.0974208297097145E-6	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999814494896069	WITHOUT_CLASSIFICATION	1.8550510393198846E-5	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999998927347182	WITHOUT_CLASSIFICATION	1.0726528175576249E-7	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999942260955	WITHOUT_CLASSIFICATION	5.7739045074608625E-9	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9991259960861107	WITHOUT_CLASSIFICATION	8.740039138893293E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999774637676	WITHOUT_CLASSIFICATION	2.253623243252856E-8	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999980356579665	WITHOUT_CLASSIFICATION	1.9643420334116524E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999980356579665	WITHOUT_CLASSIFICATION	1.9643420334116524E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999469404416635	WITHOUT_CLASSIFICATION	5.305955833631542E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999961133820374	WITHOUT_CLASSIFICATION	3.886617962596292E-6	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999928682692951	WITHOUT_CLASSIFICATION	7.131730704897355E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999980995202554	WITHOUT_CLASSIFICATION	1.9004797446025537E-5	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.8596434503155276	WITHOUT_CLASSIFICATION	0.14035654968447236	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9989201394470509	WITHOUT_CLASSIFICATION	0.001079860552949109	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999871568669645	WITHOUT_CLASSIFICATION	1.2843133035511966E-5	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.999491789076467	WITHOUT_CLASSIFICATION	5.082109235330317E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9982751085246618	WITHOUT_CLASSIFICATION	0.0017248914753380828	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9982751085246618	WITHOUT_CLASSIFICATION	0.0017248914753380828	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999968723133986	WITHOUT_CLASSIFICATION	3.1276866013000633E-6	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999482424473	WITHOUT_CLASSIFICATION	5.175755260848934E-8	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999972679150234	WITHOUT_CLASSIFICATION	2.7320849765078875E-6	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999994666857228	WITHOUT_CLASSIFICATION	5.333142772604286E-7	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999797872970186	WITHOUT_CLASSIFICATION	2.0212702981403428E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999797872970186	WITHOUT_CLASSIFICATION	2.0212702981403428E-5	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9887520553804181	WITHOUT_CLASSIFICATION	0.011247944619581974	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999932843782635	WITHOUT_CLASSIFICATION	6.715621736465539E-6	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999995051605796	WITHOUT_CLASSIFICATION	4.948394204164256E-7	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9991444852397835	WITHOUT_CLASSIFICATION	8.555147602164294E-4	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9998592365239567	WITHOUT_CLASSIFICATION	1.4076347604339746E-4	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999984846201992	WITHOUT_CLASSIFICATION	1.5153798007108946E-6	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999296080262388	WITHOUT_CLASSIFICATION	7.039197376120737E-5	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999997839304192	WITHOUT_CLASSIFICATION	2.1606958078641354E-7	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9995911253523379	WITHOUT_CLASSIFICATION	4.088746476621132E-4	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9678960218450903	WITHOUT_CLASSIFICATION	0.03210397815490977	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9998914546947222	WITHOUT_CLASSIFICATION	1.0854530527779982E-4	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9973467004953118	WITHOUT_CLASSIFICATION	0.0026532995046881906	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999995571596	WITHOUT_CLASSIFICATION	4.428404179677222E-10	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9402514941580127	WITHOUT_CLASSIFICATION	0.05974850584198728	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999978746880002	WITHOUT_CLASSIFICATION	2.125311999754731E-6	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9992590364996066	WITHOUT_CLASSIFICATION	7.409635003935083E-4	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9993327771937811	WITHOUT_CLASSIFICATION	6.672228062189016E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999603470502395	WITHOUT_CLASSIFICATION	3.965294976048306E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999954133952456	WITHOUT_CLASSIFICATION	4.586604754456701E-6	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999986499342493	WITHOUT_CLASSIFICATION	1.3500657507121354E-6	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999988255949522	WITHOUT_CLASSIFICATION	1.1744050477747028E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999097685110296	WITHOUT_CLASSIFICATION	9.023148897035314E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999097685110296	WITHOUT_CLASSIFICATION	9.023148897035314E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999598576824446	WITHOUT_CLASSIFICATION	4.0142317555397806E-5	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999547252030742	WITHOUT_CLASSIFICATION	4.52747969259182E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999996363854657	WITHOUT_CLASSIFICATION	3.6361453428987304E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999996363854657	WITHOUT_CLASSIFICATION	3.6361453428987304E-7	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999971031244203	DESIGN	2.8968755797679355E-6	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9965986186821005	WITHOUT_CLASSIFICATION	0.00340138131789951	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.999997844064033	WITHOUT_CLASSIFICATION	2.155935966964086E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999941925738798	WITHOUT_CLASSIFICATION	5.80742612010897E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999941925738798	WITHOUT_CLASSIFICATION	5.80742612010897E-6	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.6702492240573047	WITHOUT_CLASSIFICATION	0.3297507759426952	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999541404532	WITHOUT_CLASSIFICATION	4.5859546819950044E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.999999999711734	WITHOUT_CLASSIFICATION	2.882659872898099E-10	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999998390838867	WITHOUT_CLASSIFICATION	1.6091611335131485E-7	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.999999674166368	WITHOUT_CLASSIFICATION	3.258336320463433E-7	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999955125364745	WITHOUT_CLASSIFICATION	4.487463525550214E-6	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999026702800209	WITHOUT_CLASSIFICATION	9.73297199790852E-5	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9996511200781152	WITHOUT_CLASSIFICATION	3.4887992188486144E-4	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999998516339169	WITHOUT_CLASSIFICATION	1.4836608321899076E-7	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9996825879707155	WITHOUT_CLASSIFICATION	3.174120292844381E-4	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999995114306562	WITHOUT_CLASSIFICATION	4.885693437337296E-7	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999804322574412	WITHOUT_CLASSIFICATION	1.9567742558776238E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999942275695977	WITHOUT_CLASSIFICATION	5.772430402359159E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999876269706945	WITHOUT_CLASSIFICATION	1.2373029305482127E-5	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.986756149638326	WITHOUT_CLASSIFICATION	0.013243850361673946	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999991813957245	WITHOUT_CLASSIFICATION	8.186042755935098E-7	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999999999820431	WITHOUT_CLASSIFICATION	1.795691384644033E-10	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999878119291004	WITHOUT_CLASSIFICATION	1.218807089971176E-5	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.999995215978605	WITHOUT_CLASSIFICATION	4.78402139496464E-6	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999815503096654	WITHOUT_CLASSIFICATION	1.8449690334583327E-5	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999982597662997	WITHOUT_CLASSIFICATION	1.7402337003434178E-6	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.999998228810406	WITHOUT_CLASSIFICATION	1.7711895939410493E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.997105786860993	WITHOUT_CLASSIFICATION	0.002894213139007035	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999924898602955	WITHOUT_CLASSIFICATION	7.510139704540239E-6	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999963505461325	WITHOUT_CLASSIFICATION	3.649453867553637E-6	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999957081233335	WITHOUT_CLASSIFICATION	4.291876666499637E-6	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999715905551048	WITHOUT_CLASSIFICATION	2.8409444895304653E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999515769356	WITHOUT_CLASSIFICATION	4.842306436113474E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999948728812948	WITHOUT_CLASSIFICATION	5.127118705128654E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999993148813455	WITHOUT_CLASSIFICATION	6.851186545593245E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999947475138982	WITHOUT_CLASSIFICATION	5.252486101888196E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999876269706945	WITHOUT_CLASSIFICATION	1.2373029305482127E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999515769356	WITHOUT_CLASSIFICATION	4.842306436113474E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999948728812948	WITHOUT_CLASSIFICATION	5.127118705128654E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999947475138982	WITHOUT_CLASSIFICATION	5.252486101888196E-6	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999962561629334	WITHOUT_CLASSIFICATION	3.7438370664489017E-6	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999919762600167	WITHOUT_CLASSIFICATION	8.023739983381226E-6	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999977211387883	WITHOUT_CLASSIFICATION	2.2788612117502814E-6	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999988572924153	WITHOUT_CLASSIFICATION	1.1427075845829495E-6	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999893033663329	WITHOUT_CLASSIFICATION	1.0696633667097021E-4	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999551320141	WITHOUT_CLASSIFICATION	4.486798595478806E-8	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999967784343907	WITHOUT_CLASSIFICATION	3.221565609286472E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999791679757511	WITHOUT_CLASSIFICATION	2.0832024248837428E-5	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999962031630262	WITHOUT_CLASSIFICATION	3.7968369738938434E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9964815819364727	WITHOUT_CLASSIFICATION	0.003518418063527235	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9995757678701617	WITHOUT_CLASSIFICATION	4.242321298383706E-4	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9995757678701617	WITHOUT_CLASSIFICATION	4.242321298383706E-4	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999995422229604	WITHOUT_CLASSIFICATION	4.5777703967046154E-7	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999959532153	WITHOUT_CLASSIFICATION	4.046784613653579E-9	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999981546668	WITHOUT_CLASSIFICATION	1.8453333122766855E-9	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9986693787667896	WITHOUT_CLASSIFICATION	0.001330621233210311	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999372107169	WITHOUT_CLASSIFICATION	6.278928311645319E-8	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999993735473347	WITHOUT_CLASSIFICATION	6.264526652857019E-7	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9993221002530871	WITHOUT_CLASSIFICATION	6.77899746912992E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999856855167228	WITHOUT_CLASSIFICATION	1.4314483277081572E-5	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999998912566866	WITHOUT_CLASSIFICATION	1.0874331340089145E-7	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999950583396454	WITHOUT_CLASSIFICATION	4.9416603545984995E-5	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999275975979699	WITHOUT_CLASSIFICATION	7.24024020301167E-5	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9995447581396604	WITHOUT_CLASSIFICATION	4.552418603395195E-4	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999988858496	WITHOUT_CLASSIFICATION	1.1141503627273217E-9	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999999702050172	WITHOUT_CLASSIFICATION	2.9794982839730273E-8	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999996776848401	WITHOUT_CLASSIFICATION	3.2231515988135155E-7	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.999999569539358	WITHOUT_CLASSIFICATION	4.304606420955205E-7	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999995181744841	WITHOUT_CLASSIFICATION	4.818255158855252E-7	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999996610618873	WITHOUT_CLASSIFICATION	3.38938112769106E-7	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9999335174624049	WITHOUT_CLASSIFICATION	6.648253759501854E-5	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999426135194646	WITHOUT_CLASSIFICATION	5.7386480535455044E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999984819456289	WITHOUT_CLASSIFICATION	1.5180543710979188E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999714847472784	WITHOUT_CLASSIFICATION	2.851525272165213E-5	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999364409065	WITHOUT_CLASSIFICATION	6.355909359887698E-8	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999764012171377	WITHOUT_CLASSIFICATION	2.359878286228871E-5	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.999988212707142	WITHOUT_CLASSIFICATION	1.1787292858054133E-5	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999998490429082	WITHOUT_CLASSIFICATION	1.5095709178974954E-7	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9896924857641122	WITHOUT_CLASSIFICATION	0.010307514235887966	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9996722477788066	WITHOUT_CLASSIFICATION	3.277522211933774E-4	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9998011220689496	WITHOUT_CLASSIFICATION	1.9887793105043112E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999535820779099	WITHOUT_CLASSIFICATION	4.6417922090111134E-5	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999947346607059	WITHOUT_CLASSIFICATION	5.265339294093259E-6	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999940952618804	WITHOUT_CLASSIFICATION	5.904738119557751E-6	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999963932060956	WITHOUT_CLASSIFICATION	3.6067939044122533E-6	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9996269335561818	WITHOUT_CLASSIFICATION	3.7306644381817136E-4	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999994655943578	WITHOUT_CLASSIFICATION	5.344056422554602E-7	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999996836365912	WITHOUT_CLASSIFICATION	3.1636340881798817E-7	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.999999874071736	WITHOUT_CLASSIFICATION	1.2592826408835432E-7	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999913499558182	WITHOUT_CLASSIFICATION	8.65004418175285E-6	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.99999959197847	WITHOUT_CLASSIFICATION	4.080215299453947E-7	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999999945469442	WITHOUT_CLASSIFICATION	5.453055751511707E-9	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.998739859399982	WITHOUT_CLASSIFICATION	0.001260140600017969	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.985175444567047	DESIGN	0.014824555432953053	WITHOUT_CLASSIFICATION
// Readline	WITHOUT_CLASSIFICATION	0.9999938691744251	WITHOUT_CLASSIFICATION	6.130825574905051E-6	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9697081715967609	WITHOUT_CLASSIFICATION	0.030291828403239008	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999926773413025	WITHOUT_CLASSIFICATION	7.322658697567035E-6	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999646285724066	WITHOUT_CLASSIFICATION	3.5371427593355774E-5	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999675594061367	WITHOUT_CLASSIFICATION	3.244059386331499E-5	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9977279965345154	WITHOUT_CLASSIFICATION	0.0022720034654846494	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.999997474949609	WITHOUT_CLASSIFICATION	2.5250503910578595E-6	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999882789985729	WITHOUT_CLASSIFICATION	1.1721001427108674E-5	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9998807592162057	WITHOUT_CLASSIFICATION	1.1924078379423622E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999860761822803	WITHOUT_CLASSIFICATION	1.3923817719830647E-5	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999990902406559	WITHOUT_CLASSIFICATION	9.097593441058632E-7	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999990083220562	WITHOUT_CLASSIFICATION	9.916779437971377E-7	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9996815366082712	WITHOUT_CLASSIFICATION	3.1846339172878033E-4	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999992447086544	WITHOUT_CLASSIFICATION	7.552913455597937E-7	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999840263739	WITHOUT_CLASSIFICATION	1.59736261304792E-8	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999999921248627	WITHOUT_CLASSIFICATION	7.875137351217437E-9	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9987706497342945	WITHOUT_CLASSIFICATION	0.001229350265705385	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999900815874007	WITHOUT_CLASSIFICATION	9.918412599306337E-6	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999900815874007	WITHOUT_CLASSIFICATION	9.918412599306337E-6	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999973744030464	WITHOUT_CLASSIFICATION	2.6255969536903375E-6	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.999999824653852	WITHOUT_CLASSIFICATION	1.7534614808303728E-7	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999996074909303	WITHOUT_CLASSIFICATION	3.925090697302118E-7	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999992998339324	WITHOUT_CLASSIFICATION	7.001660676852909E-7	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999973689768	WITHOUT_CLASSIFICATION	2.63102313752505E-9	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9961400155101717	WITHOUT_CLASSIFICATION	0.0038599844898281727	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.99999136847207	WITHOUT_CLASSIFICATION	8.631527930034789E-6	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999841448320786	WITHOUT_CLASSIFICATION	1.58551679214252E-5	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9996557931582383	WITHOUT_CLASSIFICATION	3.4420684176175964E-4	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999227736648966	WITHOUT_CLASSIFICATION	7.722633510337038E-5	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.99999913622649	WITHOUT_CLASSIFICATION	8.637735100748161E-7	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999993626379687	WITHOUT_CLASSIFICATION	6.373620311694428E-7	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999502631698621	WITHOUT_CLASSIFICATION	4.9736830137917845E-5	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999998830196709	WITHOUT_CLASSIFICATION	1.1698032903308052E-7	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.999963626997185	WITHOUT_CLASSIFICATION	3.637300281500459E-5	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999913213345898	WITHOUT_CLASSIFICATION	8.678665410165606E-6	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999988591267586	WITHOUT_CLASSIFICATION	1.1408732413888785E-6	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999944336661113	WITHOUT_CLASSIFICATION	5.566333888642887E-6	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999910844381058	WITHOUT_CLASSIFICATION	8.915561894141806E-6	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9988796135342183	WITHOUT_CLASSIFICATION	0.0011203864657817661	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999987705426279	WITHOUT_CLASSIFICATION	1.229457372130241E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.999551073699458	WITHOUT_CLASSIFICATION	4.489263005420162E-4	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999490007779371	WITHOUT_CLASSIFICATION	5.0999222062836466E-5	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.6268449783622865	DESIGN	0.3731550216377134	WITHOUT_CLASSIFICATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999998943588528	WITHOUT_CLASSIFICATION	1.0564114713452531E-7	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9998750806853848	WITHOUT_CLASSIFICATION	1.2491931461521664E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9998185743562946	WITHOUT_CLASSIFICATION	1.8142564370525496E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999999581973	WITHOUT_CLASSIFICATION	4.180262788204011E-11	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999951891627222	WITHOUT_CLASSIFICATION	4.810837277738339E-6	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999964175967507	DESIGN	3.582403249303427E-6	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999935747527009	WITHOUT_CLASSIFICATION	6.425247299073911E-6	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.999999791324137	WITHOUT_CLASSIFICATION	2.0867586303142724E-7	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999934411347	WITHOUT_CLASSIFICATION	6.558865292288086E-8	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999974973432246	WITHOUT_CLASSIFICATION	2.5026567753546508E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999934411347	WITHOUT_CLASSIFICATION	6.558865292288086E-8	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9998938909516544	WITHOUT_CLASSIFICATION	1.0610904834574394E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999984463613099	WITHOUT_CLASSIFICATION	1.5536386901280172E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999984463613099	WITHOUT_CLASSIFICATION	1.5536386901280172E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999984463613099	WITHOUT_CLASSIFICATION	1.5536386901280172E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999957272221739	WITHOUT_CLASSIFICATION	4.272777826194886E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999957272221739	WITHOUT_CLASSIFICATION	4.272777826194886E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9992018077842195	WITHOUT_CLASSIFICATION	7.98192215780577E-4	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999990935840162	WITHOUT_CLASSIFICATION	9.064159838576823E-7	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9995399281555158	WITHOUT_CLASSIFICATION	4.600718444841987E-4	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9861626398830916	WITHOUT_CLASSIFICATION	0.013837360116908275	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999868015140745	WITHOUT_CLASSIFICATION	1.3198485925580618E-5	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.999995498035139	WITHOUT_CLASSIFICATION	4.501964861035789E-6	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.999999991251502	WITHOUT_CLASSIFICATION	8.74849798588057E-9	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999951493180458	WITHOUT_CLASSIFICATION	4.850681954237807E-6	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999999235693684	WITHOUT_CLASSIFICATION	7.643063163178314E-8	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999994858989826	WITHOUT_CLASSIFICATION	5.141010174093652E-7	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999980542110877	WITHOUT_CLASSIFICATION	1.9457889123209777E-6	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.999987768186906	WITHOUT_CLASSIFICATION	1.2231813093995735E-5	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999998876127566	WITHOUT_CLASSIFICATION	1.1238724340741171E-7	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999797746236538	WITHOUT_CLASSIFICATION	2.022537634610541E-5	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999904045667785	WITHOUT_CLASSIFICATION	9.59543322154427E-6	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999925103965278	WITHOUT_CLASSIFICATION	7.4896034722196375E-6	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999909161235851	WITHOUT_CLASSIFICATION	9.08387641481564E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999998425879112	WITHOUT_CLASSIFICATION	1.5741208887754112E-7	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999998425879112	WITHOUT_CLASSIFICATION	1.5741208887754112E-7	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999972642809294	WITHOUT_CLASSIFICATION	2.7357190706304312E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999990814559606	WITHOUT_CLASSIFICATION	9.185440394621016E-7	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999990814559606	WITHOUT_CLASSIFICATION	9.185440394621016E-7	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999974638501892	WITHOUT_CLASSIFICATION	2.536149810951748E-6	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999841198753775	WITHOUT_CLASSIFICATION	1.58801246225596E-5	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.99999967430705	WITHOUT_CLASSIFICATION	3.256929500630787E-7	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999502147578959	WITHOUT_CLASSIFICATION	4.9785242104106076E-5	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999411225439813	WITHOUT_CLASSIFICATION	5.887745601872302E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999992993295079	WITHOUT_CLASSIFICATION	7.006704921893175E-7	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999954735165936	WITHOUT_CLASSIFICATION	4.526483406503982E-6	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.999999765788344	WITHOUT_CLASSIFICATION	2.3421165582706393E-7	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999995862182272	WITHOUT_CLASSIFICATION	4.1378177279113524E-7	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9438470869266621	WITHOUT_CLASSIFICATION	0.05615291307333783	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9968970488230154	WITHOUT_CLASSIFICATION	0.003102951176984631	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.999898827750998	WITHOUT_CLASSIFICATION	1.01172249001845E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9998751259512633	WITHOUT_CLASSIFICATION	1.2487404873678582E-4	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999892294766498	WITHOUT_CLASSIFICATION	1.0770523350243217E-5	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999951493180458	WITHOUT_CLASSIFICATION	4.850681954237807E-6	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999292342106463	WITHOUT_CLASSIFICATION	7.076578935378293E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999970147765977	WITHOUT_CLASSIFICATION	2.9852234022882354E-6	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999847995671436	WITHOUT_CLASSIFICATION	1.520043285628431E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999847995671436	WITHOUT_CLASSIFICATION	1.520043285628431E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999958640728698	WITHOUT_CLASSIFICATION	4.135927130241428E-6	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999775626108206	WITHOUT_CLASSIFICATION	2.2437389179409018E-5	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999864538014868	WITHOUT_CLASSIFICATION	1.3546198513355097E-5	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999899158772886	WITHOUT_CLASSIFICATION	1.0084122711443E-5	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999943295219113	WITHOUT_CLASSIFICATION	5.670478088756331E-6	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9997706608925879	WITHOUT_CLASSIFICATION	2.2933910741214746E-4	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999584631168	WITHOUT_CLASSIFICATION	4.153688304954862E-8	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999653607980412	WITHOUT_CLASSIFICATION	3.4639201958795734E-5	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9998972422690439	WITHOUT_CLASSIFICATION	1.0275773095609363E-4	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999997239777179	WITHOUT_CLASSIFICATION	2.76022282182487E-7	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999986893780539	WITHOUT_CLASSIFICATION	1.3106219460249826E-6	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9992101050437024	WITHOUT_CLASSIFICATION	7.898949562976846E-4	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.7423318997355564	DESIGN	0.2576681002644436	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999983393154132	WITHOUT_CLASSIFICATION	1.6606845867531434E-6	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999556222153776	WITHOUT_CLASSIFICATION	4.437778462247917E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999947698276932	WITHOUT_CLASSIFICATION	5.230172306867795E-6	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999859193815506	WITHOUT_CLASSIFICATION	1.4080618449534715E-5	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999950500976206	WITHOUT_CLASSIFICATION	4.949902379419961E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9998305072946982	WITHOUT_CLASSIFICATION	1.6949270530188274E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999327958656	WITHOUT_CLASSIFICATION	6.720413446722335E-8	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999810506618	WITHOUT_CLASSIFICATION	1.8949338205118675E-8	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999995686645562	WITHOUT_CLASSIFICATION	4.3133544386561953E-7	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.999993272189211	WITHOUT_CLASSIFICATION	6.727810789132097E-6	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999119516538	WITHOUT_CLASSIFICATION	8.804834622666135E-8	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999999917939192	WITHOUT_CLASSIFICATION	8.206080877213752E-9	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.999998918443659	WITHOUT_CLASSIFICATION	1.0815563410271811E-6	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999998272141128	WITHOUT_CLASSIFICATION	1.7278588713442E-7	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9965346383653486	WITHOUT_CLASSIFICATION	0.0034653616346512887	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999922495599517	WITHOUT_CLASSIFICATION	7.75044004839327E-6	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999139044686154	WITHOUT_CLASSIFICATION	8.609553138464714E-5	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9997975555237859	WITHOUT_CLASSIFICATION	2.0244447621417636E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999992169166678	WITHOUT_CLASSIFICATION	7.830833321935319E-6	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999107440045854	WITHOUT_CLASSIFICATION	8.925599541463838E-5	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999773048982908	WITHOUT_CLASSIFICATION	2.2695101709135108E-5	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999939033651333	WITHOUT_CLASSIFICATION	6.096634866719505E-6	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999964270338029	WITHOUT_CLASSIFICATION	3.5729661972014473E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9965346383653486	WITHOUT_CLASSIFICATION	0.0034653616346512887	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999875807214	WITHOUT_CLASSIFICATION	1.2419278582519943E-8	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999939033651333	WITHOUT_CLASSIFICATION	6.096634866719505E-6	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999510214752111	WITHOUT_CLASSIFICATION	4.8978524788876605E-5	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.999999008273245	WITHOUT_CLASSIFICATION	9.917267550180114E-7	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999948208563	WITHOUT_CLASSIFICATION	5.179143582281511E-9	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999966217065392	WITHOUT_CLASSIFICATION	3.3782934608683463E-6	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999953069114336	WITHOUT_CLASSIFICATION	4.693088566440421E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9964283399803471	WITHOUT_CLASSIFICATION	0.0035716600196528457	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9964283399803471	WITHOUT_CLASSIFICATION	0.0035716600196528457	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998902464077742	WITHOUT_CLASSIFICATION	1.0975359222579578E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999993609417761	WITHOUT_CLASSIFICATION	6.390582237921955E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.999999756275699	WITHOUT_CLASSIFICATION	2.4372430099281245E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.999999756275699	WITHOUT_CLASSIFICATION	2.4372430099281245E-7	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9991236891867203	WITHOUT_CLASSIFICATION	8.763108132797497E-4	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.999975377801618	WITHOUT_CLASSIFICATION	2.462219838200741E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9999134257233332	WITHOUT_CLASSIFICATION	8.657427666678345E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9999134257233332	WITHOUT_CLASSIFICATION	8.657427666678345E-5	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999383220803671	WITHOUT_CLASSIFICATION	6.167791963290611E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.999999678854858	WITHOUT_CLASSIFICATION	3.211451421101539E-7	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999953024029	WITHOUT_CLASSIFICATION	4.697597128805765E-9	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999977823442752	WITHOUT_CLASSIFICATION	2.2176557248234556E-6	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9957475978553472	WITHOUT_CLASSIFICATION	0.004252402144652837	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9988723896166635	WITHOUT_CLASSIFICATION	0.0011276103833365173	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999978602138865	WITHOUT_CLASSIFICATION	2.139786113527434E-6	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999610760953729	WITHOUT_CLASSIFICATION	3.892390462710855E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9998909707653215	WITHOUT_CLASSIFICATION	1.0902923467844421E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9997833888667359	WITHOUT_CLASSIFICATION	2.1661113326414821E-4	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9997279937190523	WITHOUT_CLASSIFICATION	2.720062809476878E-4	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996282911305531	WITHOUT_CLASSIFICATION	3.7170886944684053E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999971251716	WITHOUT_CLASSIFICATION	2.874828279020786E-9	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999886425797736	WITHOUT_CLASSIFICATION	1.1357420226402007E-5	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999998878950699	WITHOUT_CLASSIFICATION	1.1210493009650438E-7	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999405808237817	WITHOUT_CLASSIFICATION	5.9419176218246593E-5	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.991438401529383	WITHOUT_CLASSIFICATION	0.008561598470616995	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999828207487655	WITHOUT_CLASSIFICATION	1.7179251234511008E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9966643206098947	WITHOUT_CLASSIFICATION	0.003335679390105195	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999294776173911	WITHOUT_CLASSIFICATION	7.052238260880321E-5	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999509172338664	WITHOUT_CLASSIFICATION	4.908276613350311E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999999794557873	WITHOUT_CLASSIFICATION	2.0544212685841327E-8	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9997873216931683	WITHOUT_CLASSIFICATION	2.1267830683173453E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999982407728015	WITHOUT_CLASSIFICATION	1.7592271984627955E-6	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999999317109156	WITHOUT_CLASSIFICATION	6.828908441079998E-7	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999997133302357	WITHOUT_CLASSIFICATION	2.8666976430885404E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9278657970218387	WITHOUT_CLASSIFICATION	0.07213420297816125	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999993638681448	WITHOUT_CLASSIFICATION	6.361318552464158E-7	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999757636798748	WITHOUT_CLASSIFICATION	2.4236320125205945E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999757636798748	WITHOUT_CLASSIFICATION	2.4236320125205945E-5	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9997031830461377	WITHOUT_CLASSIFICATION	2.968169538623748E-4	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999541663166	WITHOUT_CLASSIFICATION	4.583368342873626E-8	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999638414633807	WITHOUT_CLASSIFICATION	3.615853661933094E-5	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.999924905884178	WITHOUT_CLASSIFICATION	7.50941158219882E-5	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999997418479658	WITHOUT_CLASSIFICATION	2.5815203418039164E-7	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9998757758183506	WITHOUT_CLASSIFICATION	1.24224181649284E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9969449329443343	WITHOUT_CLASSIFICATION	0.0030550670556657	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998243658302	WITHOUT_CLASSIFICATION	1.7563416967023838E-7	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999949904456709	WITHOUT_CLASSIFICATION	5.009554329097804E-6	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999982728767501	WITHOUT_CLASSIFICATION	1.7271232499699011E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999996908144608	WITHOUT_CLASSIFICATION	3.091855391245938E-7	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9998702010239376	WITHOUT_CLASSIFICATION	1.2979897606237075E-4	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999932663919465	WITHOUT_CLASSIFICATION	6.733608053461029E-6	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9952309738331809	WITHOUT_CLASSIFICATION	0.0047690261668190325	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9998928068158899	WITHOUT_CLASSIFICATION	1.0719318411005769E-4	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.999968385552394	WITHOUT_CLASSIFICATION	3.161444760589898E-5	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999717731728758	WITHOUT_CLASSIFICATION	2.8226827124237534E-5	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9997541868717658	WITHOUT_CLASSIFICATION	2.458131282341589E-4	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9961750206605703	WITHOUT_CLASSIFICATION	0.0038249793394296737	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9998439534019765	WITHOUT_CLASSIFICATION	1.5604659802349207E-4	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999260819605384	WITHOUT_CLASSIFICATION	7.391803946150663E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999740849455135	WITHOUT_CLASSIFICATION	2.5915054486437343E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999996249069828	WITHOUT_CLASSIFICATION	3.7509301712656826E-7	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999377192178	WITHOUT_CLASSIFICATION	6.228078215206275E-8	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999997672643047	WITHOUT_CLASSIFICATION	2.3273569520926018E-7	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999848245786641	WITHOUT_CLASSIFICATION	1.5175421335741564E-5	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9938457131009677	WITHOUT_CLASSIFICATION	0.006154286899032343	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9990016402787512	WITHOUT_CLASSIFICATION	9.983597212488164E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999993376706521	WITHOUT_CLASSIFICATION	6.623293479437177E-7	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999935186555559	WITHOUT_CLASSIFICATION	6.481344444136362E-6	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999919457872514	WITHOUT_CLASSIFICATION	8.054212748646646E-6	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.999999966183159	WITHOUT_CLASSIFICATION	3.381684101348536E-8	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999225471215644	WITHOUT_CLASSIFICATION	7.745287843560197E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999904872273321	WITHOUT_CLASSIFICATION	9.512772667953607E-6	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.999999829796935	WITHOUT_CLASSIFICATION	1.7020306495497147E-7	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999948224068551	WITHOUT_CLASSIFICATION	5.177593144859749E-6	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999955664313847	WITHOUT_CLASSIFICATION	4.433568615340795E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9985739315914474	WITHOUT_CLASSIFICATION	0.0014260684085527422	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999896684562	WITHOUT_CLASSIFICATION	1.0331543850525444E-8	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999995279919085	WITHOUT_CLASSIFICATION	4.7200809143599254E-7	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999018887869092	WITHOUT_CLASSIFICATION	9.811121309085667E-5	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9994828836692713	WITHOUT_CLASSIFICATION	5.171163307286668E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999979186038442	WITHOUT_CLASSIFICATION	2.0813961557999796E-6	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999979186038442	WITHOUT_CLASSIFICATION	2.0813961557999796E-6	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999666458556418	WITHOUT_CLASSIFICATION	3.3354144358303156E-5	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999942099173712	WITHOUT_CLASSIFICATION	5.79008262881604E-6	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999974245948701	WITHOUT_CLASSIFICATION	2.5754051299072797E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.999988920445645	WITHOUT_CLASSIFICATION	1.1079554355097683E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999677730589124	WITHOUT_CLASSIFICATION	3.222694108755376E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999994056799211	WITHOUT_CLASSIFICATION	5.943200790067157E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999895250473667	WITHOUT_CLASSIFICATION	1.0474952633208796E-5	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.999996725136112	WITHOUT_CLASSIFICATION	3.274863888044269E-6	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.999978665626293	WITHOUT_CLASSIFICATION	2.1334373707003578E-5	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9998893552676992	WITHOUT_CLASSIFICATION	1.1064473230078126E-4	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999958473899144	WITHOUT_CLASSIFICATION	4.152610085565903E-6	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999272906474554	WITHOUT_CLASSIFICATION	7.270935254458091E-5	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999863881348293	WITHOUT_CLASSIFICATION	1.3611865170646199E-5	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999988673640073	WITHOUT_CLASSIFICATION	1.1326359926719608E-6	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999990085759118	WITHOUT_CLASSIFICATION	9.914240882607463E-7	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999981143126341	WITHOUT_CLASSIFICATION	1.8856873659060343E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999993273046119	WITHOUT_CLASSIFICATION	6.726953880852153E-7	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.999956738337226	WITHOUT_CLASSIFICATION	4.326166277401374E-5	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999928746896425	WITHOUT_CLASSIFICATION	7.125310357511399E-6	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.99990686558515	WITHOUT_CLASSIFICATION	9.313441485001998E-5	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999868002627603	WITHOUT_CLASSIFICATION	1.319973723960806E-5	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999999171873504	WITHOUT_CLASSIFICATION	8.281264964008416E-8	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9994015219029886	WITHOUT_CLASSIFICATION	5.98478097011346E-4	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9996063128990844	WITHOUT_CLASSIFICATION	3.9368710091559683E-4	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.999993785300208	WITHOUT_CLASSIFICATION	6.21469979198244E-6	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999958012450578	WITHOUT_CLASSIFICATION	4.198754942190677E-5	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999117465677837	WITHOUT_CLASSIFICATION	8.825343221641352E-5	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.999999916419383	WITHOUT_CLASSIFICATION	8.358061708826235E-8	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.999999998523191	WITHOUT_CLASSIFICATION	1.4768089269297851E-9	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999829232129045	WITHOUT_CLASSIFICATION	1.707678709554616E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999240531307	WITHOUT_CLASSIFICATION	7.594686935011866E-8	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999999111390304	WITHOUT_CLASSIFICATION	8.886096955657141E-8	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999092280690417	WITHOUT_CLASSIFICATION	9.077193095826483E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999886484114677	WITHOUT_CLASSIFICATION	1.1351588532261173E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9985739315914474	WITHOUT_CLASSIFICATION	0.0014260684085527422	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999993404466814	WITHOUT_CLASSIFICATION	6.595533186057337E-7	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999976470448202	WITHOUT_CLASSIFICATION	2.3529551797124575E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999976470448202	WITHOUT_CLASSIFICATION	2.3529551797124575E-6	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9356828970297313	WITHOUT_CLASSIFICATION	0.06431710297026881	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9996352781823666	WITHOUT_CLASSIFICATION	3.647218176333626E-4	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999977248950676	WITHOUT_CLASSIFICATION	2.275104932520771E-6	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9999751048900579	WITHOUT_CLASSIFICATION	2.4895109942075962E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999565438199391	WITHOUT_CLASSIFICATION	4.3456180060920816E-5	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999949534994119	WITHOUT_CLASSIFICATION	5.046500588031669E-6	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999777567749818	WITHOUT_CLASSIFICATION	2.2243225018305208E-5	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999618867420635	WITHOUT_CLASSIFICATION	3.811325793642094E-5	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999926142271278	WITHOUT_CLASSIFICATION	7.385772872217232E-6	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999742478317537	WITHOUT_CLASSIFICATION	2.575216824627597E-5	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999442204460423	WITHOUT_CLASSIFICATION	5.5779553957861864E-5	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9997868621074179	WITHOUT_CLASSIFICATION	2.1313789258219722E-4	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999181104472696	WITHOUT_CLASSIFICATION	8.188955273034683E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999897370013161	WITHOUT_CLASSIFICATION	1.0262998684026863E-5	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9998487451503806	WITHOUT_CLASSIFICATION	1.5125484961938504E-4	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999614083270117	WITHOUT_CLASSIFICATION	3.8591672988304614E-5	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999837403063858	WITHOUT_CLASSIFICATION	1.6259693614232227E-5	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999101885930771	WITHOUT_CLASSIFICATION	8.981140692288137E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999926900044162	WITHOUT_CLASSIFICATION	7.309995583917509E-6	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.999974512041612	WITHOUT_CLASSIFICATION	2.5487958387940147E-5	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999538498634317	WITHOUT_CLASSIFICATION	4.615013656826856E-5	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9992214695185737	WITHOUT_CLASSIFICATION	7.7853048142635E-4	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999963872266803	WITHOUT_CLASSIFICATION	3.6127733195997525E-6	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999991493162962	WITHOUT_CLASSIFICATION	8.506837038437897E-7	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999998397157858	WITHOUT_CLASSIFICATION	1.60284214297211E-7	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998287750143394	WITHOUT_CLASSIFICATION	1.7122498566059536E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999780498023	WITHOUT_CLASSIFICATION	2.1950197652857144E-8	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.999799556087164	WITHOUT_CLASSIFICATION	2.0044391283588836E-4	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999999807028584	WITHOUT_CLASSIFICATION	1.9297141476065113E-8	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.999772083171734	WITHOUT_CLASSIFICATION	2.2791682826598072E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9998843212519659	WITHOUT_CLASSIFICATION	1.1567874803411666E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999921320391048	WITHOUT_CLASSIFICATION	7.86796089526933E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999745480732705	WITHOUT_CLASSIFICATION	2.545192672956757E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999993236105914	WITHOUT_CLASSIFICATION	6.763894086576702E-7	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999677565362117	WITHOUT_CLASSIFICATION	3.224346378834781E-5	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999655152286328	WITHOUT_CLASSIFICATION	3.448477136726052E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999565404261	WITHOUT_CLASSIFICATION	4.345957389450006E-8	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998287750143394	WITHOUT_CLASSIFICATION	1.7122498566059536E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999780498023	WITHOUT_CLASSIFICATION	2.1950197652857144E-8	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.999799556087164	WITHOUT_CLASSIFICATION	2.0044391283588836E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.999772083171734	WITHOUT_CLASSIFICATION	2.2791682826598072E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999847356496417	WITHOUT_CLASSIFICATION	1.5264350358270992E-5	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999995306461403	WITHOUT_CLASSIFICATION	4.6935385964118533E-7	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999264046037357	WITHOUT_CLASSIFICATION	7.359539626427609E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999999454913685	WITHOUT_CLASSIFICATION	5.4508631456521907E-8	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9997346862800791	WITHOUT_CLASSIFICATION	2.653137199208368E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999999502643	WITHOUT_CLASSIFICATION	4.973553196568917E-11	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999865162902409	WITHOUT_CLASSIFICATION	1.3483709759117804E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999945360384372	WITHOUT_CLASSIFICATION	5.463961562790797E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999754849037994	WITHOUT_CLASSIFICATION	2.4515096200552788E-5	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999997069024507	WITHOUT_CLASSIFICATION	2.9309754938737225E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999999909294788	WITHOUT_CLASSIFICATION	9.070521192276415E-9	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999941418157006	WITHOUT_CLASSIFICATION	5.858184299457073E-6	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999910748563838	WITHOUT_CLASSIFICATION	8.925143616232112E-6	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998892660319832	WITHOUT_CLASSIFICATION	1.1073396801668303E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999940528557862	WITHOUT_CLASSIFICATION	5.947144213835393E-6	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999963959465	WITHOUT_CLASSIFICATION	3.6040534999532334E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9997043802073272	WITHOUT_CLASSIFICATION	2.956197926727916E-4	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999886462779463	WITHOUT_CLASSIFICATION	1.135372205378135E-5	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999996359142533	WITHOUT_CLASSIFICATION	3.6408574663446373E-7	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999565404261	WITHOUT_CLASSIFICATION	4.345957389450006E-8	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999995306461403	WITHOUT_CLASSIFICATION	4.6935385964118533E-7	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999264046037357	WITHOUT_CLASSIFICATION	7.359539626427609E-5	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9997346862800791	WITHOUT_CLASSIFICATION	2.653137199208368E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999999502643	WITHOUT_CLASSIFICATION	4.973553196568917E-11	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999865162902409	WITHOUT_CLASSIFICATION	1.3483709759117804E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999945360384372	WITHOUT_CLASSIFICATION	5.463961562790797E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999690327879742	WITHOUT_CLASSIFICATION	3.0967212025656665E-5	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999731701321768	WITHOUT_CLASSIFICATION	2.6829867823215097E-5	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999818759254	WITHOUT_CLASSIFICATION	1.8124074677018097E-8	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999949554927	WITHOUT_CLASSIFICATION	5.044507282142008E-9	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999940920910569	WITHOUT_CLASSIFICATION	5.907908943045214E-6	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999940920910569	WITHOUT_CLASSIFICATION	5.907908943045214E-6	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999763312884401	WITHOUT_CLASSIFICATION	2.3668711559883777E-5	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999955207840286	WITHOUT_CLASSIFICATION	4.479215971358583E-6	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9998506856378008	WITHOUT_CLASSIFICATION	1.49314362199268E-4	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9973969704547109	WITHOUT_CLASSIFICATION	0.0026030295452891716	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999981450618954	WITHOUT_CLASSIFICATION	1.8549381046159545E-6	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.999897563609615	WITHOUT_CLASSIFICATION	1.0243639038506959E-4	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999971120693679	WITHOUT_CLASSIFICATION	2.887930632128619E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999986222147309	WITHOUT_CLASSIFICATION	1.3777852690599113E-6	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999605990627	WITHOUT_CLASSIFICATION	3.94009373389433E-8	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999809121970222	WITHOUT_CLASSIFICATION	1.908780297778677E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9968150116079366	WITHOUT_CLASSIFICATION	0.0031849883920633914	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999944763431647	WITHOUT_CLASSIFICATION	5.523656835189588E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999984473604796	WITHOUT_CLASSIFICATION	1.5526395204237735E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9986597732211833	WITHOUT_CLASSIFICATION	0.0013402267788166795	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999994570212262	WITHOUT_CLASSIFICATION	5.429787737961676E-7	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999999663867056	WITHOUT_CLASSIFICATION	3.361329441544548E-8	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9996712866044447	WITHOUT_CLASSIFICATION	3.287133955552248E-4	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999986913542034	WITHOUT_CLASSIFICATION	1.308645796655909E-6	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999991611293194	WITHOUT_CLASSIFICATION	8.388706805454279E-7	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9466284604476819	WITHOUT_CLASSIFICATION	0.05337153955231797	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9931973102968702	DESIGN	0.0068026897031298085	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.999999763892976	WITHOUT_CLASSIFICATION	2.3610702411221815E-7	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999995676145423	WITHOUT_CLASSIFICATION	4.323854576738164E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999841064543263	DESIGN	1.5893545673692607E-5	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997225081717	WITHOUT_CLASSIFICATION	2.7749182828923813E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999771545299017	WITHOUT_CLASSIFICATION	2.284547009832515E-5	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999847698346	WITHOUT_CLASSIFICATION	1.523016536521327E-8	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999705852443396	WITHOUT_CLASSIFICATION	2.9414755660452184E-5	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.999998956403567	WITHOUT_CLASSIFICATION	1.0435964330870827E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997225081717	WITHOUT_CLASSIFICATION	2.7749182828923813E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999771545299017	WITHOUT_CLASSIFICATION	2.284547009832515E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9986597732211833	WITHOUT_CLASSIFICATION	0.0013402267788166795	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999558409629948	WITHOUT_CLASSIFICATION	4.415903700514627E-5	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999992942491612	WITHOUT_CLASSIFICATION	7.05750838802251E-7	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999366292108176	WITHOUT_CLASSIFICATION	6.337078918233618E-5	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999933010554922	WITHOUT_CLASSIFICATION	6.698944507785992E-6	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.999846467293567	WITHOUT_CLASSIFICATION	1.5353270643310335E-4	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999994353657334	WITHOUT_CLASSIFICATION	5.646342664566745E-7	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999685303529551	WITHOUT_CLASSIFICATION	3.146964704494234E-5	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999991344012513	WITHOUT_CLASSIFICATION	8.655987485991255E-7	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.7043167970765348	DESIGN	0.2956832029234651	WITHOUT_CLASSIFICATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9980277606355328	WITHOUT_CLASSIFICATION	0.001972239364467222	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999994544453511	WITHOUT_CLASSIFICATION	5.455546488306548E-7	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9996075998169859	WITHOUT_CLASSIFICATION	3.924001830140676E-4	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.999999993209101	WITHOUT_CLASSIFICATION	6.790898950932255E-9	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999991423997414	WITHOUT_CLASSIFICATION	8.576002586344472E-7	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.981507703725862	WITHOUT_CLASSIFICATION	0.018492296274137957	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999949239536995	WITHOUT_CLASSIFICATION	5.0760463005900804E-6	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999973257539078	WITHOUT_CLASSIFICATION	2.674246092303051E-6	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9952415580539308	WITHOUT_CLASSIFICATION	0.00475844194606925	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999996457952922	WITHOUT_CLASSIFICATION	3.5420470783055727E-7	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9476882294416173	WITHOUT_CLASSIFICATION	0.052311770558382584	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999899958786608	WITHOUT_CLASSIFICATION	1.0004121339301553E-5	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9998086832321814	WITHOUT_CLASSIFICATION	1.9131676781857816E-4	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999886475422733	WITHOUT_CLASSIFICATION	1.1352457726551034E-5	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.999795604838348	WITHOUT_CLASSIFICATION	2.043951616519315E-4	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999990139109137	WITHOUT_CLASSIFICATION	9.860890863455687E-7	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999937957253118	WITHOUT_CLASSIFICATION	6.2042746883231385E-6	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.6677163053998126	WITHOUT_CLASSIFICATION	0.3322836946001873	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.7167297783297312	WITHOUT_CLASSIFICATION	0.2832702216702689	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9994672490164712	WITHOUT_CLASSIFICATION	5.327509835287771E-4	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999927201933755	WITHOUT_CLASSIFICATION	7.2798066245853545E-6	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999960553101617	WITHOUT_CLASSIFICATION	3.944689838328129E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998884314965548	WITHOUT_CLASSIFICATION	1.1156850344509463E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998884314965548	WITHOUT_CLASSIFICATION	1.1156850344509463E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999984473604796	WITHOUT_CLASSIFICATION	1.5526395204237735E-6	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999607617846283	WITHOUT_CLASSIFICATION	3.9238215371621815E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999992918038655	WITHOUT_CLASSIFICATION	7.081961346502997E-7	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.99967759932082	WITHOUT_CLASSIFICATION	3.224006791799407E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999984785107932	WITHOUT_CLASSIFICATION	1.5214892068000194E-6	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999984785107932	WITHOUT_CLASSIFICATION	1.5214892068000194E-6	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999995659592891	WITHOUT_CLASSIFICATION	4.3404071090676044E-7	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999741511870528	WITHOUT_CLASSIFICATION	2.5848812947195805E-5	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999620353428	WITHOUT_CLASSIFICATION	3.796465716788101E-8	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999617538005433	WITHOUT_CLASSIFICATION	3.824619945658296E-5	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9992997843031359	WITHOUT_CLASSIFICATION	7.002156968640467E-4	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999958312444241	WITHOUT_CLASSIFICATION	4.1687555759284075E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999995701694427	WITHOUT_CLASSIFICATION	4.2983055727158014E-7	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999998044452408	WITHOUT_CLASSIFICATION	1.955547591519471E-7	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998155815837	WITHOUT_CLASSIFICATION	1.8441841634159373E-7	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999503638457927	WITHOUT_CLASSIFICATION	4.963615420735417E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999710874238	WITHOUT_CLASSIFICATION	2.8912576296868682E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999991521795192	WITHOUT_CLASSIFICATION	8.478204807863712E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999994311816357	WITHOUT_CLASSIFICATION	5.688183643326588E-7	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.999427308292123	WITHOUT_CLASSIFICATION	5.726917078770691E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9991980650652093	WITHOUT_CLASSIFICATION	8.01934934790785E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9328353451340993	WITHOUT_CLASSIFICATION	0.06716465486590081	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999858996798114	WITHOUT_CLASSIFICATION	1.4100320188461776E-5	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999858996798114	WITHOUT_CLASSIFICATION	1.4100320188461776E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999883540731	WITHOUT_CLASSIFICATION	1.1645926930737484E-8	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999883540731	WITHOUT_CLASSIFICATION	1.1645926930737484E-8	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.999999992179923	WITHOUT_CLASSIFICATION	7.820077122561276E-9	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999281882771475	WITHOUT_CLASSIFICATION	7.181172285258783E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999975100918802	WITHOUT_CLASSIFICATION	2.4899081198636797E-6	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999998813759865	WITHOUT_CLASSIFICATION	1.1862401354807906E-7	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999844192892008	WITHOUT_CLASSIFICATION	1.558071079915308E-5	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999978148443461	WITHOUT_CLASSIFICATION	2.185155653844512E-6	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999519023292	WITHOUT_CLASSIFICATION	4.809767087751445E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999991521795192	WITHOUT_CLASSIFICATION	8.478204807863712E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999994311816357	WITHOUT_CLASSIFICATION	5.688183643326588E-7	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9991980650652093	WITHOUT_CLASSIFICATION	8.01934934790785E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999997805620914	WITHOUT_CLASSIFICATION	2.1943790855526553E-7	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9993473608891726	WITHOUT_CLASSIFICATION	6.526391108273912E-4	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9998257043791151	WITHOUT_CLASSIFICATION	1.7429562088493096E-4	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9997238235592469	WITHOUT_CLASSIFICATION	2.761764407530048E-4	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9997270946737958	WITHOUT_CLASSIFICATION	2.7290532620410614E-4	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9506054224834721	WITHOUT_CLASSIFICATION	0.0493945775165278	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999999712563578	WITHOUT_CLASSIFICATION	2.874364230590964E-8	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999994444692744	WITHOUT_CLASSIFICATION	5.555307255907646E-7	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999919142301	WITHOUT_CLASSIFICATION	8.085769963706802E-9	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999966655847	WITHOUT_CLASSIFICATION	3.334415243401953E-9	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.6369192959269283	WITHOUT_CLASSIFICATION	0.3630807040730717	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.999997848589568	WITHOUT_CLASSIFICATION	2.1514104320420747E-6	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999988267866384	WITHOUT_CLASSIFICATION	1.173213361606304E-6	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.999859363024839	WITHOUT_CLASSIFICATION	1.406369751609258E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.7589414631930965	WITHOUT_CLASSIFICATION	0.24105853680690345	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999998737904799	WITHOUT_CLASSIFICATION	1.262095200491294E-7	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999995689604098	WITHOUT_CLASSIFICATION	4.3103959026330244E-7	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999998554998462	WITHOUT_CLASSIFICATION	1.4450015380408565E-7	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999836399541	WITHOUT_CLASSIFICATION	1.6360045852214324E-8	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999996575315959	WITHOUT_CLASSIFICATION	3.424684041829256E-7	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999921155573455	WITHOUT_CLASSIFICATION	7.884442654614248E-6	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999982783461876	WITHOUT_CLASSIFICATION	1.7216538124189998E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.999891626519751	WITHOUT_CLASSIFICATION	1.08373480248863E-4	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999937483247565	WITHOUT_CLASSIFICATION	6.251675243506604E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999987800676923	WITHOUT_CLASSIFICATION	1.2199323077243734E-6	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999999881274566	WITHOUT_CLASSIFICATION	1.1872543402282988E-7	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.999999894925132	WITHOUT_CLASSIFICATION	1.0507486802686642E-7	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999904949863337	WITHOUT_CLASSIFICATION	9.50501366628589E-6	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999996231442206	WITHOUT_CLASSIFICATION	3.768557794348255E-7	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999995481159323	WITHOUT_CLASSIFICATION	4.5188406771135614E-7	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999860211491323	WITHOUT_CLASSIFICATION	1.3978850867829713E-5	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9998582416309828	WITHOUT_CLASSIFICATION	1.4175836901708736E-4	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9993040200672137	WITHOUT_CLASSIFICATION	6.95979932786227E-4	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.999997757519744	WITHOUT_CLASSIFICATION	2.242480256102019E-6	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999994326935526	WITHOUT_CLASSIFICATION	5.673064474140577E-7	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.999996025313277	WITHOUT_CLASSIFICATION	3.974686722917127E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999987647253751	WITHOUT_CLASSIFICATION	1.2352746249693842E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999946992368028	WITHOUT_CLASSIFICATION	5.3007631972643864E-6	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999983694719168	WITHOUT_CLASSIFICATION	1.6305280831652115E-6	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999374598508235	WITHOUT_CLASSIFICATION	6.254014917649504E-5	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999684926507594	WITHOUT_CLASSIFICATION	3.150734924057725E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999992918038655	WITHOUT_CLASSIFICATION	7.081961346502997E-7	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999987647253751	WITHOUT_CLASSIFICATION	1.2352746249693842E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9944984361944739	WITHOUT_CLASSIFICATION	0.005501563805526167	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9960639380498953	WITHOUT_CLASSIFICATION	0.0039360619501046185	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9997209395369128	WITHOUT_CLASSIFICATION	2.790604630873072E-4	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999997187232565	WITHOUT_CLASSIFICATION	2.812767434531079E-7	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999997187232565	WITHOUT_CLASSIFICATION	2.812767434531079E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9996897811649318	WITHOUT_CLASSIFICATION	3.102188350682495E-4	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999941990311205	WITHOUT_CLASSIFICATION	5.800968879450621E-6	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9693557871486084	WITHOUT_CLASSIFICATION	0.03064421285139168	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999965777168749	WITHOUT_CLASSIFICATION	3.4222831250296863E-6	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999093267820055	WITHOUT_CLASSIFICATION	9.06732179944105E-5	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999476119514	WITHOUT_CLASSIFICATION	5.23880485682153E-8	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999375371159026	WITHOUT_CLASSIFICATION	6.246288409732467E-5	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999884488851348	WITHOUT_CLASSIFICATION	1.1551114865202226E-5	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999996473154488	WITHOUT_CLASSIFICATION	3.526845512235716E-7	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999996473154488	WITHOUT_CLASSIFICATION	3.526845512235716E-7	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999372706146148	WITHOUT_CLASSIFICATION	6.272938538523828E-5	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999982823209738	WITHOUT_CLASSIFICATION	1.7176790262355573E-6	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999496074927866	WITHOUT_CLASSIFICATION	5.039250721341952E-5	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9981929715151097	WITHOUT_CLASSIFICATION	0.001807028484890399	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.999221604005159	WITHOUT_CLASSIFICATION	7.783959948410379E-4	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9998582814194774	WITHOUT_CLASSIFICATION	1.4171858052263744E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999857861387322	WITHOUT_CLASSIFICATION	1.42138612677655E-5	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999918942270943	WITHOUT_CLASSIFICATION	8.105772905707078E-6	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9998973717734786	WITHOUT_CLASSIFICATION	1.0262822652140537E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999746595825182	WITHOUT_CLASSIFICATION	2.534041748182407E-5	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999959075932955	WITHOUT_CLASSIFICATION	4.092406704480669E-6	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999933702455744	WITHOUT_CLASSIFICATION	6.629754425478016E-6	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999989940075752	WITHOUT_CLASSIFICATION	1.0059924247592986E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999952789029299	WITHOUT_CLASSIFICATION	4.721097069962802E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999952789029299	WITHOUT_CLASSIFICATION	4.721097069962802E-6	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999880051399276	WITHOUT_CLASSIFICATION	1.1994860072475847E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999945360384372	WITHOUT_CLASSIFICATION	5.463961562790797E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999211105566	WITHOUT_CLASSIFICATION	7.888944339630983E-8	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999996143480842	WITHOUT_CLASSIFICATION	3.8565191589225363E-7	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999998132494455	WITHOUT_CLASSIFICATION	1.8675055442272286E-7	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9997331488286244	WITHOUT_CLASSIFICATION	2.668511713756232E-4	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999925041069977	WITHOUT_CLASSIFICATION	7.495893002264788E-6	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999997746046443	WITHOUT_CLASSIFICATION	2.2539535573289076E-7	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999995368658291	WITHOUT_CLASSIFICATION	4.631341709625637E-7	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9990006656167632	WITHOUT_CLASSIFICATION	9.993343832369053E-4	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999998104521062	WITHOUT_CLASSIFICATION	1.8954789390605606E-7	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999986149185401	WITHOUT_CLASSIFICATION	1.3850814598310673E-6	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999991553930649	WITHOUT_CLASSIFICATION	8.446069350286339E-7	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999448380976589	WITHOUT_CLASSIFICATION	5.516190234111124E-5	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9998910735758285	WITHOUT_CLASSIFICATION	1.089264241715044E-4	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999992041120709	WITHOUT_CLASSIFICATION	7.958879291069827E-7	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999998787284742	WITHOUT_CLASSIFICATION	1.2127152584673434E-7	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9998900081252685	WITHOUT_CLASSIFICATION	1.0999187473148889E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999868606464218	WITHOUT_CLASSIFICATION	1.3139353578246826E-5	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999593624431514	WITHOUT_CLASSIFICATION	4.06375568484634E-5	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9996603432276486	WITHOUT_CLASSIFICATION	3.396567723512659E-4	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999779927002029	WITHOUT_CLASSIFICATION	2.2007299797047523E-5	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999238902688474	WITHOUT_CLASSIFICATION	7.610973115251662E-5	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9996698666033971	WITHOUT_CLASSIFICATION	3.3013339660293894E-4	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9762947934828194	WITHOUT_CLASSIFICATION	0.0237052065171805	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.99957893126291	WITHOUT_CLASSIFICATION	4.2106873709001346E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9997235342797066	WITHOUT_CLASSIFICATION	2.7646572029345584E-4	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999913514478849	WITHOUT_CLASSIFICATION	8.648552115128106E-6	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999986429767748	WITHOUT_CLASSIFICATION	1.357023225202213E-6	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9981886412388754	WITHOUT_CLASSIFICATION	0.0018113587611245257	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999995705771348	WITHOUT_CLASSIFICATION	4.2942286516922893E-7	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9999718405836742	WITHOUT_CLASSIFICATION	2.8159416325845136E-5	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999989805678675	WITHOUT_CLASSIFICATION	1.019432132453506E-6	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9998742248469451	WITHOUT_CLASSIFICATION	1.2577515305498387E-4	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9998921084201284	WITHOUT_CLASSIFICATION	1.0789157987148735E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999997020360354	WITHOUT_CLASSIFICATION	2.979639646816367E-7	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999937585374389	WITHOUT_CLASSIFICATION	6.2414625611096504E-6	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999819784346748	WITHOUT_CLASSIFICATION	1.802156532523623E-5	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999766473541	WITHOUT_CLASSIFICATION	2.335264593064409E-8	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999967933390753	WITHOUT_CLASSIFICATION	3.2066609246717957E-6	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999754851462225	WITHOUT_CLASSIFICATION	2.4514853777466622E-5	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999810477551668	WITHOUT_CLASSIFICATION	1.8952244833170977E-5	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9996449417129988	WITHOUT_CLASSIFICATION	3.550582870011536E-4	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9419254762219702	WITHOUT_CLASSIFICATION	0.05807452377802975	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.999958483702337	WITHOUT_CLASSIFICATION	4.151629766304567E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999986201375418	WITHOUT_CLASSIFICATION	1.3798624581004082E-6	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999747797089	WITHOUT_CLASSIFICATION	2.522029108898253E-8	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9984930063695476	WITHOUT_CLASSIFICATION	0.00150699363045239	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9993005563581093	WITHOUT_CLASSIFICATION	6.994436418906815E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997225081717	WITHOUT_CLASSIFICATION	2.7749182828923813E-7	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997225081717	WITHOUT_CLASSIFICATION	2.7749182828923813E-7	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999947142882843	WITHOUT_CLASSIFICATION	5.285711715682986E-6	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999970803148119	WITHOUT_CLASSIFICATION	2.919685187929601E-6	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999951814230048	WITHOUT_CLASSIFICATION	4.818576995159288E-6	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.7367315880237059	WITHOUT_CLASSIFICATION	0.2632684119762941	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999999255362628	WITHOUT_CLASSIFICATION	7.446373713581438E-8	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999999185057616	WITHOUT_CLASSIFICATION	8.149423831828006E-8	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9998459222794284	WITHOUT_CLASSIFICATION	1.5407772057162686E-4	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999999389266	WITHOUT_CLASSIFICATION	6.10734410483642E-11	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999999931530819	WITHOUT_CLASSIFICATION	6.846918097010965E-8	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9996489426879168	WITHOUT_CLASSIFICATION	3.5105731208315944E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999973975038861	WITHOUT_CLASSIFICATION	2.6024961138964753E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999973975038861	WITHOUT_CLASSIFICATION	2.6024961138964753E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999973975038861	WITHOUT_CLASSIFICATION	2.6024961138964753E-5	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999974448991	WITHOUT_CLASSIFICATION	2.5551010000346584E-9	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999909748558574	WITHOUT_CLASSIFICATION	9.025144142514386E-6	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9999085795328077	WITHOUT_CLASSIFICATION	9.142046719241467E-5	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999926300963	WITHOUT_CLASSIFICATION	7.3699036851333756E-9	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999926300963	WITHOUT_CLASSIFICATION	7.3699036851333756E-9	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999986643390696	WITHOUT_CLASSIFICATION	1.3356609303122622E-6	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999357524929512	WITHOUT_CLASSIFICATION	6.424750704881766E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999997359098616	WITHOUT_CLASSIFICATION	2.6409013835316075E-7	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999999709740036	WITHOUT_CLASSIFICATION	2.9025996394669387E-7	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9996372873320136	WITHOUT_CLASSIFICATION	3.6271266798637927E-4	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999975290393014	WITHOUT_CLASSIFICATION	2.4709606984933587E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.999999765365861	WITHOUT_CLASSIFICATION	2.3463413897333295E-7	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999150865917928	WITHOUT_CLASSIFICATION	8.491340820709479E-5	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999773848325	WITHOUT_CLASSIFICATION	2.2615167448027775E-8	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999996885813418	WITHOUT_CLASSIFICATION	3.114186581601248E-7	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999996885813418	WITHOUT_CLASSIFICATION	3.114186581601248E-7	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999917960821159	WITHOUT_CLASSIFICATION	8.203917884119617E-6	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9998417254608493	WITHOUT_CLASSIFICATION	1.582745391508104E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999992550532267	WITHOUT_CLASSIFICATION	7.449467732885234E-7	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999880314884941	WITHOUT_CLASSIFICATION	1.1968511505825834E-5	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999993835784946	WITHOUT_CLASSIFICATION	6.164215053871152E-7	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999901865877742	WITHOUT_CLASSIFICATION	9.813412225848412E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999994028205729	WITHOUT_CLASSIFICATION	5.971794271762828E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999579004988235	WITHOUT_CLASSIFICATION	4.209950117641167E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9998088957953242	WITHOUT_CLASSIFICATION	1.9110420467590995E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999861501341002	WITHOUT_CLASSIFICATION	1.384986589984625E-5	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9985553578339387	WITHOUT_CLASSIFICATION	0.0014446421660612864	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999967325869288	WITHOUT_CLASSIFICATION	3.26741307116021E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.999960266560228	WITHOUT_CLASSIFICATION	3.9733439772096906E-5	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999949488467554	WITHOUT_CLASSIFICATION	5.051153244579238E-6	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999582164933791	WITHOUT_CLASSIFICATION	4.178350662084902E-5	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999994772881724	WITHOUT_CLASSIFICATION	5.227118275603032E-7	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999997484057765	WITHOUT_CLASSIFICATION	2.5159422334401545E-7	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999982061624278	WITHOUT_CLASSIFICATION	1.793837572115989E-6	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999947829103081	WITHOUT_CLASSIFICATION	5.217089691950616E-6	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999998469083667	WITHOUT_CLASSIFICATION	1.5309163330023511E-7	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9867972175191065	DESIGN	0.01320278248089336	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999793487230352	WITHOUT_CLASSIFICATION	2.0651276964768593E-5	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999999960929011	WITHOUT_CLASSIFICATION	3.907098874522472E-9	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9998065345574619	WITHOUT_CLASSIFICATION	1.9346544253807496E-4	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999998402594628	WITHOUT_CLASSIFICATION	1.5974053725902825E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9960769482442857	WITHOUT_CLASSIFICATION	0.003923051755714288	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999972500256475	WITHOUT_CLASSIFICATION	2.74997435248255E-6	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999084208479295	WITHOUT_CLASSIFICATION	9.157915207047368E-5	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.5237373199703167	DESIGN	0.4762626800296833	WITHOUT_CLASSIFICATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999961343313748	WITHOUT_CLASSIFICATION	3.865668625210973E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9998771679888337	WITHOUT_CLASSIFICATION	1.2283201116632846E-4	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.99988297433788	WITHOUT_CLASSIFICATION	1.1702566212007396E-4	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999098595074297	WITHOUT_CLASSIFICATION	9.01404925702942E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9998771679888337	WITHOUT_CLASSIFICATION	1.2283201116632846E-4	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9998740939493369	WITHOUT_CLASSIFICATION	1.2590605066316202E-4	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999948698358554	WITHOUT_CLASSIFICATION	5.130164144663313E-6	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9976486807183017	WITHOUT_CLASSIFICATION	0.0023513192816982235	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9977997910783065	WITHOUT_CLASSIFICATION	0.002200208921693447	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999995928838127	WITHOUT_CLASSIFICATION	4.071161872973326E-7	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999997463405785	WITHOUT_CLASSIFICATION	2.5365942147491753E-7	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999997922755607	WITHOUT_CLASSIFICATION	2.07724439308689E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.999968943853933	WITHOUT_CLASSIFICATION	3.1056146067050445E-5	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999166454223724	WITHOUT_CLASSIFICATION	8.335457762757934E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9991898468357567	WITHOUT_CLASSIFICATION	8.101531642434015E-4	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9540121794123072	WITHOUT_CLASSIFICATION	0.04598782058769268	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9861350323202368	WITHOUT_CLASSIFICATION	0.013864967679763264	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9867465322403123	WITHOUT_CLASSIFICATION	0.013253467759687772	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9938088339320746	WITHOUT_CLASSIFICATION	0.0061911660679254	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9961622908687975	WITHOUT_CLASSIFICATION	0.003837709131202508	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9665289956831061	WITHOUT_CLASSIFICATION	0.033471004316893836	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9957344777081352	WITHOUT_CLASSIFICATION	0.004265522291864796	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9979764833723531	WITHOUT_CLASSIFICATION	0.0020235166276468884	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999176010820137	WITHOUT_CLASSIFICATION	8.239891798637502E-5	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9994676256257597	WITHOUT_CLASSIFICATION	5.323743742402763E-4	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9978715894044052	WITHOUT_CLASSIFICATION	0.00212841059559474	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999661642297604	WITHOUT_CLASSIFICATION	3.383577023965523E-5	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999858115812204	WITHOUT_CLASSIFICATION	1.4188418779705123E-5	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999879495893997	WITHOUT_CLASSIFICATION	1.2050410600290215E-5	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999998230182376	WITHOUT_CLASSIFICATION	1.7698176224458929E-7	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999607601694114	WITHOUT_CLASSIFICATION	3.923983058856399E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999997597504401	WITHOUT_CLASSIFICATION	2.4024955992068065E-7	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999990027212577	WITHOUT_CLASSIFICATION	9.972787422245365E-7	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.999969063409092	WITHOUT_CLASSIFICATION	3.09365909079235E-5	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999947254203734	WITHOUT_CLASSIFICATION	5.274579626577571E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9998487907527823	WITHOUT_CLASSIFICATION	1.512092472177671E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9865303263702655	WITHOUT_CLASSIFICATION	0.01346967362973459	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.8533147098913859	DESIGN	0.146685290108614	WITHOUT_CLASSIFICATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9449999939788042	WITHOUT_CLASSIFICATION	0.055000006021195876	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999876720953412	WITHOUT_CLASSIFICATION	1.232790465875201E-5	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999815079545564	WITHOUT_CLASSIFICATION	1.849204544354424E-5	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999788725800682	WITHOUT_CLASSIFICATION	2.112741993170412E-5	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999948851544539	WITHOUT_CLASSIFICATION	5.11484554618202E-6	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9995884592633962	WITHOUT_CLASSIFICATION	4.115407366037878E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999999262825979	WITHOUT_CLASSIFICATION	7.371740206090204E-8	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999816561731363	WITHOUT_CLASSIFICATION	1.834382686374918E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999306924045382	WITHOUT_CLASSIFICATION	6.930759546169919E-5	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999951325582279	WITHOUT_CLASSIFICATION	4.8674417720466915E-6	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999842682635398	WITHOUT_CLASSIFICATION	1.5731736460175682E-5	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.999999206419314	WITHOUT_CLASSIFICATION	7.935806860648873E-7	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999936131301144	WITHOUT_CLASSIFICATION	6.386869885630049E-6	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9999137235560488	WITHOUT_CLASSIFICATION	8.627644395117756E-5	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999995612673084	WITHOUT_CLASSIFICATION	4.387326916381285E-7	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999998831897062	WITHOUT_CLASSIFICATION	1.168102936972212E-7	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999155576468879	WITHOUT_CLASSIFICATION	8.44423531120846E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999011050569374	WITHOUT_CLASSIFICATION	9.889494306250453E-5	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9987243040101145	WITHOUT_CLASSIFICATION	0.0012756959898855534	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999931797849101	WITHOUT_CLASSIFICATION	6.820215089846589E-6	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999998831897062	WITHOUT_CLASSIFICATION	1.168102936972212E-7	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9985961944411289	DESIGN	0.001403805558871195	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9985961944411289	DESIGN	0.001403805558871195	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999973706377008	WITHOUT_CLASSIFICATION	2.629362299268711E-6	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999990915875017	WITHOUT_CLASSIFICATION	9.08412498242105E-7	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9998204784407103	WITHOUT_CLASSIFICATION	1.7952155928969258E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999692720541428	WITHOUT_CLASSIFICATION	3.07279458572915E-5	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999011279031367	WITHOUT_CLASSIFICATION	9.88720968633271E-5	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999985376731028	WITHOUT_CLASSIFICATION	1.462326897204986E-6	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999992903321959	WITHOUT_CLASSIFICATION	7.096678041468615E-7	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.7101515342892813	DESIGN	0.2898484657107187	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9992292450160478	WITHOUT_CLASSIFICATION	7.70754983952258E-4	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9997238672352815	WITHOUT_CLASSIFICATION	2.7613276471855297E-4	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999994542684291	WITHOUT_CLASSIFICATION	5.457315709299009E-7	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999997646927926	WITHOUT_CLASSIFICATION	2.3530720732251832E-7	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999991470078163	WITHOUT_CLASSIFICATION	8.529921837681775E-7	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9998946295665696	WITHOUT_CLASSIFICATION	1.0537043343046069E-4	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9969790401341312	WITHOUT_CLASSIFICATION	0.0030209598658688555	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9981664859968401	WITHOUT_CLASSIFICATION	0.0018335140031598871	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999996490567531	WITHOUT_CLASSIFICATION	3.509432468863999E-7	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997471110470836	WITHOUT_CLASSIFICATION	2.5288895291644963E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997471110470836	WITHOUT_CLASSIFICATION	2.5288895291644963E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997471110470836	WITHOUT_CLASSIFICATION	2.5288895291644963E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997471110470836	WITHOUT_CLASSIFICATION	2.5288895291644963E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997471110470836	WITHOUT_CLASSIFICATION	2.5288895291644963E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999994696343266	WITHOUT_CLASSIFICATION	5.303656734456317E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997058761639	WITHOUT_CLASSIFICATION	2.9412383599767853E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997866515527062	WITHOUT_CLASSIFICATION	2.1334844729382506E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9998657544773003	WITHOUT_CLASSIFICATION	1.3424552269976052E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999998644891333	WITHOUT_CLASSIFICATION	1.355108666886133E-6	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999759257929625	WITHOUT_CLASSIFICATION	2.4074207037611532E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9991972253931294	WITHOUT_CLASSIFICATION	8.027746068706373E-4	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9982188302809695	WITHOUT_CLASSIFICATION	0.0017811697190304255	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999863831348419	WITHOUT_CLASSIFICATION	1.3616865158238688E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999998126171039	WITHOUT_CLASSIFICATION	1.8738289618558354E-7	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999996866279588	WITHOUT_CLASSIFICATION	3.13372041201026E-7	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999992865258288	WITHOUT_CLASSIFICATION	7.134741711021443E-7	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999993019177743	WITHOUT_CLASSIFICATION	6.980822256577109E-7	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999992693191616	WITHOUT_CLASSIFICATION	7.306808384303901E-7	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999992231233025	WITHOUT_CLASSIFICATION	7.768766975020241E-7	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999994617747583	WITHOUT_CLASSIFICATION	5.382252417189878E-7	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999991396504404	WITHOUT_CLASSIFICATION	8.603495595328677E-7	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999994622056887	WITHOUT_CLASSIFICATION	5.377943112928239E-7	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999988468980736	WITHOUT_CLASSIFICATION	1.1531019264464774E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999996060979455	WITHOUT_CLASSIFICATION	3.939020545675296E-7	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999993831100229	WITHOUT_CLASSIFICATION	6.168899770189609E-7	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999986069357709	WITHOUT_CLASSIFICATION	1.3930642290680286E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999994874015875	WITHOUT_CLASSIFICATION	5.125984124430051E-7	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999991359717204	WITHOUT_CLASSIFICATION	8.640282794821608E-7	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999997066822306	WITHOUT_CLASSIFICATION	2.9331776935673564E-7	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999993019688418	WITHOUT_CLASSIFICATION	6.980311581309039E-7	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999995013274198	WITHOUT_CLASSIFICATION	4.98672580280366E-7	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999993850418543	WITHOUT_CLASSIFICATION	6.149581456983417E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999994449841957	WITHOUT_CLASSIFICATION	5.55015804275285E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999998125030438	WITHOUT_CLASSIFICATION	1.8749695614961106E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999992931304551	WITHOUT_CLASSIFICATION	7.068695448655275E-7	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999989400348682	WITHOUT_CLASSIFICATION	1.0599651317863899E-6	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999989182008233	WITHOUT_CLASSIFICATION	1.0817991767611145E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999985912113095	WITHOUT_CLASSIFICATION	1.4087886904912535E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999997300613195	WITHOUT_CLASSIFICATION	2.6993868049737115E-7	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999992862034695	WITHOUT_CLASSIFICATION	7.13796530547806E-7	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999989832301516	WITHOUT_CLASSIFICATION	1.016769848518801E-6	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999989852120265	WITHOUT_CLASSIFICATION	1.014787973616303E-6	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999994832889811	WITHOUT_CLASSIFICATION	5.167110188086417E-7	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999990005654037	WITHOUT_CLASSIFICATION	9.994345962289819E-7	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999992481916985	WITHOUT_CLASSIFICATION	7.518083015003141E-7	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999990268115053	WITHOUT_CLASSIFICATION	9.731884946385553E-7	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999996448780678	WITHOUT_CLASSIFICATION	3.551219321961816E-7	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.999999415102707	WITHOUT_CLASSIFICATION	5.848972930461757E-7	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999995712203495	WITHOUT_CLASSIFICATION	4.287796503425582E-7	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999991317477298	WITHOUT_CLASSIFICATION	8.682522702774345E-7	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999989772840696	WITHOUT_CLASSIFICATION	1.0227159303263302E-6	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999997107469247	WITHOUT_CLASSIFICATION	2.892530753252103E-7	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999993542366059	WITHOUT_CLASSIFICATION	6.457633941220448E-7	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999994655136641	WITHOUT_CLASSIFICATION	5.344863358846072E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997866515527062	WITHOUT_CLASSIFICATION	2.1334844729382506E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999984838241598	WITHOUT_CLASSIFICATION	1.5161758402062775E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999995149434885	WITHOUT_CLASSIFICATION	4.850565114262336E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999987139299421	WITHOUT_CLASSIFICATION	1.2860700578751178E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999983255232187	WITHOUT_CLASSIFICATION	1.6744767812544743E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999979499612408	WITHOUT_CLASSIFICATION	2.0500387593262305E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.999998311440263	WITHOUT_CLASSIFICATION	1.6885597370774232E-6	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999982837069221	WITHOUT_CLASSIFICATION	1.716293077925805E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999979619548227	WITHOUT_CLASSIFICATION	2.0380451773247623E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999985559955852	WITHOUT_CLASSIFICATION	1.4440044148185756E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999986637905	WITHOUT_CLASSIFICATION	1.3362094999746127E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999990563458956	WITHOUT_CLASSIFICATION	9.436541043066881E-7	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999990348453927	WITHOUT_CLASSIFICATION	9.651546073482731E-7	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999967136002404	WITHOUT_CLASSIFICATION	3.2863997596286247E-6	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999990566107472	WITHOUT_CLASSIFICATION	9.433892528062386E-7	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999988923888911	WITHOUT_CLASSIFICATION	1.1076111088807625E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999996376231961	WITHOUT_CLASSIFICATION	3.623768039419147E-7	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999989632581056	WITHOUT_CLASSIFICATION	1.0367418943986814E-6	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999985293941689	WITHOUT_CLASSIFICATION	1.470605831096944E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999984625290256	WITHOUT_CLASSIFICATION	1.5374709744017766E-6	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999987788768745	WITHOUT_CLASSIFICATION	1.2211231254641617E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999986186925027	WITHOUT_CLASSIFICATION	1.3813074972165181E-6	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999982533398528	WITHOUT_CLASSIFICATION	1.7466601472727811E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999988960721927	WITHOUT_CLASSIFICATION	1.1039278072746495E-6	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999993369621692	WITHOUT_CLASSIFICATION	6.630378306504426E-7	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999983512497786	WITHOUT_CLASSIFICATION	1.6487502213502072E-6	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999992286944988	WITHOUT_CLASSIFICATION	7.713055013128738E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999993700233226	WITHOUT_CLASSIFICATION	6.29976677381793E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999977206992888	WITHOUT_CLASSIFICATION	2.2793007110362586E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999994859830849	WITHOUT_CLASSIFICATION	5.140169151228839E-7	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999990810368687	WITHOUT_CLASSIFICATION	9.189631311651233E-7	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999996996791025	WITHOUT_CLASSIFICATION	3.003208974999712E-7	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999986506515104	WITHOUT_CLASSIFICATION	1.3493484895032438E-6	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999994259976915	WITHOUT_CLASSIFICATION	5.740023085120403E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999993535259522	WITHOUT_CLASSIFICATION	6.464740479264824E-7	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999989491281863	WITHOUT_CLASSIFICATION	1.0508718136803202E-6	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999989637417227	WITHOUT_CLASSIFICATION	1.0362582773240232E-6	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999994537122583	WITHOUT_CLASSIFICATION	5.462877416722707E-7	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999989622315403	WITHOUT_CLASSIFICATION	1.037768459673128E-6	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999987540267069	WITHOUT_CLASSIFICATION	1.2459732930226626E-6	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999993693934233	WITHOUT_CLASSIFICATION	6.30606576720011E-7	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999982547691003	WITHOUT_CLASSIFICATION	1.7452308997874666E-6	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999985304010374	WITHOUT_CLASSIFICATION	1.4695989626951344E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999993711494676	WITHOUT_CLASSIFICATION	6.288505324718202E-7	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999988367922162	WITHOUT_CLASSIFICATION	1.1632077837638809E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.999999635962774	WITHOUT_CLASSIFICATION	3.640372260645812E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999990362419362	WITHOUT_CLASSIFICATION	9.637580637585932E-7	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999992345970855	WITHOUT_CLASSIFICATION	7.654029144244337E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999986562085665	WITHOUT_CLASSIFICATION	1.3437914334813763E-6	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999984536936996	WITHOUT_CLASSIFICATION	1.5463063003958205E-6	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999993022379356	WITHOUT_CLASSIFICATION	6.977620643542967E-7	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999987602229102	WITHOUT_CLASSIFICATION	1.239777089750787E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999994192536245	WITHOUT_CLASSIFICATION	5.807463756420612E-7	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999996079339478	WITHOUT_CLASSIFICATION	3.92066052217181E-7	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999995601546932	WITHOUT_CLASSIFICATION	4.398453067628177E-7	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999997990071433	WITHOUT_CLASSIFICATION	2.009928566040552E-7	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999996584314913	WITHOUT_CLASSIFICATION	3.4156850871877447E-7	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999995723979274	WITHOUT_CLASSIFICATION	4.2760207261696254E-7	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999988698462731	WITHOUT_CLASSIFICATION	1.130153726839496E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999984269128941	WITHOUT_CLASSIFICATION	1.5730871058425063E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999987960092845	WITHOUT_CLASSIFICATION	1.203990715503921E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999996737745213	WITHOUT_CLASSIFICATION	3.2622547875461084E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999990959947401	WITHOUT_CLASSIFICATION	9.040052599147295E-7	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999997275211692	WITHOUT_CLASSIFICATION	2.724788307801293E-7	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999992952702298	WITHOUT_CLASSIFICATION	7.047297702329146E-7	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999994633440835	WITHOUT_CLASSIFICATION	5.366559165496741E-7	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999989709594254	WITHOUT_CLASSIFICATION	1.0290405746580095E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999995040352381	WITHOUT_CLASSIFICATION	4.959647618941044E-7	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.999998696708864	WITHOUT_CLASSIFICATION	1.3032911360244224E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999990678616397	WITHOUT_CLASSIFICATION	9.321383603950398E-7	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999989096133329	WITHOUT_CLASSIFICATION	1.0903866671461244E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.999999029830341	WITHOUT_CLASSIFICATION	9.701696590617805E-7	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999986514722157	WITHOUT_CLASSIFICATION	1.3485277843760514E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999991123493263	WITHOUT_CLASSIFICATION	8.876506737918426E-7	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999989872140975	WITHOUT_CLASSIFICATION	1.012785902474554E-6	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999989783269463	WITHOUT_CLASSIFICATION	1.021673053658824E-6	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999994486084858	WITHOUT_CLASSIFICATION	5.513915142712055E-7	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999997405982908	WITHOUT_CLASSIFICATION	2.594017092185661E-7	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999993507251194	WITHOUT_CLASSIFICATION	6.492748805827595E-7	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999990255668151	WITHOUT_CLASSIFICATION	9.744331848293071E-7	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999994113981469	WITHOUT_CLASSIFICATION	5.886018531706937E-7	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999979001637097	WITHOUT_CLASSIFICATION	2.0998362902830648E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999995302802006	WITHOUT_CLASSIFICATION	4.6971979951534656E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999987537415017	WITHOUT_CLASSIFICATION	1.2462584981994022E-6	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.999999217490972	WITHOUT_CLASSIFICATION	7.825090279881727E-7	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999985537878848	WITHOUT_CLASSIFICATION	1.4462121151566444E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999993648139441	WITHOUT_CLASSIFICATION	6.351860559589212E-7	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999986942900867	WITHOUT_CLASSIFICATION	1.3057099133071457E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.999998430989772	WITHOUT_CLASSIFICATION	1.5690102279445144E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999994833687766	WITHOUT_CLASSIFICATION	5.166312233006905E-7	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999991227757468	WITHOUT_CLASSIFICATION	8.772242531507192E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.99999960402745	WITHOUT_CLASSIFICATION	3.959725499895907E-7	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999991862328935	WITHOUT_CLASSIFICATION	8.137671063908234E-7	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999987334932773	WITHOUT_CLASSIFICATION	1.266506722724341E-6	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999978897774523	WITHOUT_CLASSIFICATION	2.110222547699531E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999996649857371	WITHOUT_CLASSIFICATION	3.3501426296743273E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999995132488092	WITHOUT_CLASSIFICATION	4.867511908218192E-7	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999997572362376	WITHOUT_CLASSIFICATION	2.427637624247205E-7	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999996602007009	WITHOUT_CLASSIFICATION	3.397992991785941E-7	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999998453240612	WITHOUT_CLASSIFICATION	1.5467593883141746E-7	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999998304182683	WITHOUT_CLASSIFICATION	1.6958173161299273E-7	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999996409211528	WITHOUT_CLASSIFICATION	3.5907884719579173E-7	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999997813518583	WITHOUT_CLASSIFICATION	2.186481417617285E-7	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999997702464256	WITHOUT_CLASSIFICATION	2.297535743784757E-7	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999997907814959	WITHOUT_CLASSIFICATION	2.0921850419752635E-7	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999998286250172	WITHOUT_CLASSIFICATION	1.71374982789192E-7	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999996142716918	WITHOUT_CLASSIFICATION	3.8572830815254884E-7	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999995308624708	WITHOUT_CLASSIFICATION	4.6913752918145475E-7	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999994101871578	WITHOUT_CLASSIFICATION	5.898128422341532E-7	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999995784441129	WITHOUT_CLASSIFICATION	4.2155588711240787E-7	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999999130084388	WITHOUT_CLASSIFICATION	8.699156116007455E-8	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999997804994244	WITHOUT_CLASSIFICATION	2.1950057549802419E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999996354800464	WITHOUT_CLASSIFICATION	3.6451995350728245E-7	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999996818077218	WITHOUT_CLASSIFICATION	3.181922782305373E-7	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999995336978419	WITHOUT_CLASSIFICATION	4.6630215804399895E-7	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999995047468796	WITHOUT_CLASSIFICATION	4.952531204813793E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999992804858926	WITHOUT_CLASSIFICATION	7.195141075526241E-7	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999991189365623	WITHOUT_CLASSIFICATION	8.810634377059671E-7	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999994437025617	WITHOUT_CLASSIFICATION	5.562974383170545E-7	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999993145857186	WITHOUT_CLASSIFICATION	6.854142814438854E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999996737234336	WITHOUT_CLASSIFICATION	3.262765665288417E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999991379701354	WITHOUT_CLASSIFICATION	8.620298646697572E-7	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999994548070257	WITHOUT_CLASSIFICATION	5.451929743475047E-7	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999991517815032	WITHOUT_CLASSIFICATION	8.482184966994183E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.999999727959028	WITHOUT_CLASSIFICATION	2.7204097192176266E-7	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999995274979574	WITHOUT_CLASSIFICATION	4.725020425219361E-7	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999994792111984	WITHOUT_CLASSIFICATION	5.207888016888731E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999996137227604	WITHOUT_CLASSIFICATION	3.862772397272974E-7	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.999999243110605	WITHOUT_CLASSIFICATION	7.568893950060034E-7	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999994762049953	WITHOUT_CLASSIFICATION	5.237950046742264E-7	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999995088457118	WITHOUT_CLASSIFICATION	4.911542882885258E-7	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.999999593271387	WITHOUT_CLASSIFICATION	4.0672861304944654E-7	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999996374876262	WITHOUT_CLASSIFICATION	3.62512373797665E-7	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999992557297748	WITHOUT_CLASSIFICATION	7.442702251651326E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.999999797901846	WITHOUT_CLASSIFICATION	2.0209815384943014E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999997615198137	WITHOUT_CLASSIFICATION	2.384801863604334E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999998761828663	WITHOUT_CLASSIFICATION	1.2381713373477682E-7	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999996931891236	WITHOUT_CLASSIFICATION	3.068108764200194E-7	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999997554220311	WITHOUT_CLASSIFICATION	2.445779688839926E-7	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999996100479852	WITHOUT_CLASSIFICATION	3.8995201484108473E-7	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999997163831588	WITHOUT_CLASSIFICATION	2.8361684117561404E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999997204797605	WITHOUT_CLASSIFICATION	2.7952023954394807E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999998232069222	WITHOUT_CLASSIFICATION	1.767930778464855E-7	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999995914257298	WITHOUT_CLASSIFICATION	4.0857427012023923E-7	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999996559537211	WITHOUT_CLASSIFICATION	3.440462788449291E-7	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.999999911069399	WITHOUT_CLASSIFICATION	8.893060099756856E-8	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999997750957755	WITHOUT_CLASSIFICATION	2.2490422455353572E-7	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999998734998313	WITHOUT_CLASSIFICATION	1.2650016865060103E-7	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.999999582076718	WITHOUT_CLASSIFICATION	4.1792328191453503E-7	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.999999724907585	WITHOUT_CLASSIFICATION	2.7509241492613834E-7	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999998085117819	WITHOUT_CLASSIFICATION	1.9148821805161297E-7	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999995722256894	WITHOUT_CLASSIFICATION	4.277743106414247E-7	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999991132216618	WITHOUT_CLASSIFICATION	8.867783382886123E-7	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999994082622592	WITHOUT_CLASSIFICATION	5.917377408336996E-7	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999998289745509	WITHOUT_CLASSIFICATION	1.710254491479499E-7	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999997718218805	WITHOUT_CLASSIFICATION	2.2817811957744912E-7	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999994503345064	WITHOUT_CLASSIFICATION	5.496654935234591E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999995435102157	WITHOUT_CLASSIFICATION	4.56489784316147E-7	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999997686203319	WITHOUT_CLASSIFICATION	2.3137966809190669E-7	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999996110535131	WITHOUT_CLASSIFICATION	3.889464869404445E-7	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999992834765196	WITHOUT_CLASSIFICATION	7.165234803679457E-7	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.999999514752611	WITHOUT_CLASSIFICATION	4.85247389043134E-7	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999994449291033	WITHOUT_CLASSIFICATION	5.550708966981532E-7	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999996451309044	WITHOUT_CLASSIFICATION	3.5486909557202374E-7	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.99999954455251	WITHOUT_CLASSIFICATION	4.5544749001509023E-7	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999993705141786	WITHOUT_CLASSIFICATION	6.294858214279271E-7	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999992770221642	WITHOUT_CLASSIFICATION	7.229778358659396E-7	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999997159624959	WITHOUT_CLASSIFICATION	2.840375040355908E-7	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999992457674419	WITHOUT_CLASSIFICATION	7.542325580719542E-7	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999995036850028	WITHOUT_CLASSIFICATION	4.963149971855396E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999993512831907	WITHOUT_CLASSIFICATION	6.48716809341074E-7	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999997535799461	WITHOUT_CLASSIFICATION	2.464200538913119E-7	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999995239068068	WITHOUT_CLASSIFICATION	4.760931931794682E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999996146739742	WITHOUT_CLASSIFICATION	3.8532602573890803E-7	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999991934745864	WITHOUT_CLASSIFICATION	8.065254135495179E-7	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999997820151386	WITHOUT_CLASSIFICATION	2.1798486135425377E-7	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9999996932533591	WITHOUT_CLASSIFICATION	3.067466409096184E-7	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999995595761484	WITHOUT_CLASSIFICATION	4.4042385156535793E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999990134267608	WITHOUT_CLASSIFICATION	9.86573239190408E-7	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999998498215165	WITHOUT_CLASSIFICATION	1.501784834663007E-7	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999997936536021	WITHOUT_CLASSIFICATION	2.0634639778015578E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999994077326695	WITHOUT_CLASSIFICATION	5.922673304443231E-7	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999991189492932	WITHOUT_CLASSIFICATION	8.810507067786429E-7	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999993626607356	WITHOUT_CLASSIFICATION	6.373392643966527E-7	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999997436394864	WITHOUT_CLASSIFICATION	2.563605136278693E-7	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999993659083014	WITHOUT_CLASSIFICATION	6.340916985925494E-7	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999991525757271	WITHOUT_CLASSIFICATION	8.47424272851414E-7	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.99999943415828	WITHOUT_CLASSIFICATION	5.658417200914962E-7	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999996032272709	WITHOUT_CLASSIFICATION	3.96772729035836E-7	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999994718395184	WITHOUT_CLASSIFICATION	5.281604816183753E-7	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999994867423498	WITHOUT_CLASSIFICATION	5.132576502186341E-7	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999993449143336	WITHOUT_CLASSIFICATION	6.550856664356365E-7	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999996011726628	WITHOUT_CLASSIFICATION	3.988273371365532E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999993699679657	WITHOUT_CLASSIFICATION	6.300320342949112E-7	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999995662889306	WITHOUT_CLASSIFICATION	4.337110694672E-7	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999994582558285	WITHOUT_CLASSIFICATION	5.41744171448392E-7	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999993654754168	WITHOUT_CLASSIFICATION	6.345245832092484E-7	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999994802261347	WITHOUT_CLASSIFICATION	5.197738653536225E-7	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999992383907459	WITHOUT_CLASSIFICATION	7.616092540192086E-7	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999996188898883	WITHOUT_CLASSIFICATION	3.811101116569892E-7	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999999411943866	WITHOUT_CLASSIFICATION	5.880561340308785E-7	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999989488510136	WITHOUT_CLASSIFICATION	1.0511489864292604E-6	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999991948936017	WITHOUT_CLASSIFICATION	8.05106398223836E-7	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999989980228693	WITHOUT_CLASSIFICATION	1.0019771307361624E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999991116782981	WITHOUT_CLASSIFICATION	8.88321701948327E-7	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999991935367815	WITHOUT_CLASSIFICATION	8.06463218591215E-7	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999994242283369	WITHOUT_CLASSIFICATION	5.75771663121305E-7	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999989800035656	WITHOUT_CLASSIFICATION	1.0199964344667609E-6	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999995428321401	WITHOUT_CLASSIFICATION	4.5716785984286065E-7	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999987045834313	WITHOUT_CLASSIFICATION	1.2954165686587067E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999992267953293	WITHOUT_CLASSIFICATION	7.732046708148022E-7	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999989755325165	WITHOUT_CLASSIFICATION	1.024467483450604E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999996591303673	WITHOUT_CLASSIFICATION	3.4086963284328975E-7	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999996581816389	WITHOUT_CLASSIFICATION	3.418183610160953E-7	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999997695906937	WITHOUT_CLASSIFICATION	2.3040930620335618E-7	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.999999119447092	WITHOUT_CLASSIFICATION	8.805529080974534E-7	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999997522069463	WITHOUT_CLASSIFICATION	2.477930537090991E-7	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999995734182578	WITHOUT_CLASSIFICATION	4.2658174216207136E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999993701968589	WITHOUT_CLASSIFICATION	6.298031411189936E-7	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.999999344098742	WITHOUT_CLASSIFICATION	6.559012579955447E-7	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999992212483656	WITHOUT_CLASSIFICATION	7.787516344243751E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999996240192796	WITHOUT_CLASSIFICATION	3.7598072051448996E-7	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999992877495223	WITHOUT_CLASSIFICATION	7.122504776460989E-7	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999994845358138	WITHOUT_CLASSIFICATION	5.154641862715096E-7	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999997563122577	WITHOUT_CLASSIFICATION	2.43687742308448E-7	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999996405288819	WITHOUT_CLASSIFICATION	3.594711180513161E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999996022320835	WITHOUT_CLASSIFICATION	3.977679164008334E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999998757956992	WITHOUT_CLASSIFICATION	1.2420430086550506E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999866525171399	WITHOUT_CLASSIFICATION	1.3347482859995002E-5	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9923909925834133	WITHOUT_CLASSIFICATION	0.007609007416586734	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999958075636508	WITHOUT_CLASSIFICATION	4.192436349205111E-6	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999710326343372	WITHOUT_CLASSIFICATION	2.8967365662847555E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999910841404598	WITHOUT_CLASSIFICATION	8.915859540209638E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9993998350640602	WITHOUT_CLASSIFICATION	6.001649359398999E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9954661124643257	WITHOUT_CLASSIFICATION	0.004533887535674209	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9947382689741642	WITHOUT_CLASSIFICATION	0.005261731025835803	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999893400625708	WITHOUT_CLASSIFICATION	1.0659937429281082E-5	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9990200081273415	WITHOUT_CLASSIFICATION	9.799918726584999E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999310080557182	WITHOUT_CLASSIFICATION	6.89919442818419E-5	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999994606568814	WITHOUT_CLASSIFICATION	5.393431185859255E-7	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999983759514639	WITHOUT_CLASSIFICATION	1.6240485360644407E-6	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9800560535804761	WITHOUT_CLASSIFICATION	0.019943946419523864	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999948736506864	WITHOUT_CLASSIFICATION	5.126349313670884E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999924063612411	WITHOUT_CLASSIFICATION	7.59363875882296E-6	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9988908199602465	WITHOUT_CLASSIFICATION	0.0011091800397534848	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999947491236812	WITHOUT_CLASSIFICATION	5.250876318747703E-6	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999999795522	WITHOUT_CLASSIFICATION	2.0447697132882306E-11	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999704374179605	WITHOUT_CLASSIFICATION	2.956258203951658E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999849841527	WITHOUT_CLASSIFICATION	1.5015847257866437E-8	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999999058738441	WITHOUT_CLASSIFICATION	9.412615583531597E-8	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999955798146222	WITHOUT_CLASSIFICATION	4.420185377825444E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999995204981417	WITHOUT_CLASSIFICATION	4.795018582535121E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999995204981417	WITHOUT_CLASSIFICATION	4.795018582535121E-7	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.8207498780133382	WITHOUT_CLASSIFICATION	0.17925012198666182	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9391228575820897	WITHOUT_CLASSIFICATION	0.06087714241791034	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9996439310990153	WITHOUT_CLASSIFICATION	3.560689009847885E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9966583468755087	WITHOUT_CLASSIFICATION	0.0033416531244913317	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999225612870386	WITHOUT_CLASSIFICATION	7.743871296143437E-5	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999966914623	WITHOUT_CLASSIFICATION	3.3085375945177557E-9	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999856023757855	WITHOUT_CLASSIFICATION	1.4397624214529966E-5	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999999983218367	WITHOUT_CLASSIFICATION	1.6781633410042232E-9	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.7609805610702293	WITHOUT_CLASSIFICATION	0.23901943892977065	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999999888270216	WITHOUT_CLASSIFICATION	1.1172978340964823E-8	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.999999825567103	WITHOUT_CLASSIFICATION	1.7443289705341706E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999998364746863	WITHOUT_CLASSIFICATION	1.6352531376414278E-7	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.999999723965988	WITHOUT_CLASSIFICATION	2.760340119795017E-7	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999994705073612	WITHOUT_CLASSIFICATION	5.294926388064157E-7	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.999999257581834	WITHOUT_CLASSIFICATION	7.424181660824512E-7	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999999665938193	WITHOUT_CLASSIFICATION	3.3406180678151226E-8	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999999933481447	WITHOUT_CLASSIFICATION	6.651855353533793E-9	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9993804552557223	WITHOUT_CLASSIFICATION	6.195447442777204E-4	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9992057675449816	WITHOUT_CLASSIFICATION	7.942324550183257E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999641920450957	WITHOUT_CLASSIFICATION	3.580795490443848E-5	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999980103204	WITHOUT_CLASSIFICATION	1.989679568773058E-9	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999449016388121	WITHOUT_CLASSIFICATION	5.50983611877807E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9745108610736086	DESIGN	0.025489138926391354	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999824534334167	WITHOUT_CLASSIFICATION	1.7546566583205416E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9745108610736086	DESIGN	0.025489138926391354	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999980598369088	WITHOUT_CLASSIFICATION	1.940163091284739E-6	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999532690095829	WITHOUT_CLASSIFICATION	4.6730990417119894E-5	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.8755208352064896	WITHOUT_CLASSIFICATION	0.12447916479351034	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9998448783853896	WITHOUT_CLASSIFICATION	1.5512161461035724E-4	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999990423934063	WITHOUT_CLASSIFICATION	9.576065936637145E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999975346843631	WITHOUT_CLASSIFICATION	2.465315636856547E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999975346843631	WITHOUT_CLASSIFICATION	2.465315636856547E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999975346843631	WITHOUT_CLASSIFICATION	2.465315636856547E-6	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999808427969497	WITHOUT_CLASSIFICATION	1.9157203050410056E-5	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.999975858299372	WITHOUT_CLASSIFICATION	2.4141700627997765E-5	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999736364661455	WITHOUT_CLASSIFICATION	2.6363533854534213E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999207289466874	WITHOUT_CLASSIFICATION	7.927105331257845E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999207289466874	WITHOUT_CLASSIFICATION	7.927105331257845E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999207289466874	WITHOUT_CLASSIFICATION	7.927105331257845E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999207289466874	WITHOUT_CLASSIFICATION	7.927105331257845E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999207289466874	WITHOUT_CLASSIFICATION	7.927105331257845E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999207289466874	WITHOUT_CLASSIFICATION	7.927105331257845E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966896250535	WITHOUT_CLASSIFICATION	3.310374946502356E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966896250535	WITHOUT_CLASSIFICATION	3.310374946502356E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966896250535	WITHOUT_CLASSIFICATION	3.310374946502356E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966896250535	WITHOUT_CLASSIFICATION	3.310374946502356E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966896250535	WITHOUT_CLASSIFICATION	3.310374946502356E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998564140868641	WITHOUT_CLASSIFICATION	1.4358591313586003E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998564140868641	WITHOUT_CLASSIFICATION	1.4358591313586003E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998564140868641	WITHOUT_CLASSIFICATION	1.4358591313586003E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998564140868641	WITHOUT_CLASSIFICATION	1.4358591313586003E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998564140868641	WITHOUT_CLASSIFICATION	1.4358591313586003E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999435714885747	WITHOUT_CLASSIFICATION	5.642851142533281E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999435714885747	WITHOUT_CLASSIFICATION	5.642851142533281E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999435714885747	WITHOUT_CLASSIFICATION	5.642851142533281E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999435714885747	WITHOUT_CLASSIFICATION	5.642851142533281E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999435714885747	WITHOUT_CLASSIFICATION	5.642851142533281E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999435714885747	WITHOUT_CLASSIFICATION	5.642851142533281E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995109596193967	WITHOUT_CLASSIFICATION	4.890403806033063E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995109596193967	WITHOUT_CLASSIFICATION	4.890403806033063E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995109596193967	WITHOUT_CLASSIFICATION	4.890403806033063E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995109596193967	WITHOUT_CLASSIFICATION	4.890403806033063E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9995109596193967	WITHOUT_CLASSIFICATION	4.890403806033063E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999472272973484	WITHOUT_CLASSIFICATION	5.277270265160595E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999472272973484	WITHOUT_CLASSIFICATION	5.277270265160595E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999472272973484	WITHOUT_CLASSIFICATION	5.277270265160595E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999472272973484	WITHOUT_CLASSIFICATION	5.277270265160595E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999472272973484	WITHOUT_CLASSIFICATION	5.277270265160595E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997866515527062	WITHOUT_CLASSIFICATION	2.1334844729382506E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997866515527062	WITHOUT_CLASSIFICATION	2.1334844729382506E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997866515527062	WITHOUT_CLASSIFICATION	2.1334844729382506E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997866515527062	WITHOUT_CLASSIFICATION	2.1334844729382506E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997866515527062	WITHOUT_CLASSIFICATION	2.1334844729382506E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9998657544773003	WITHOUT_CLASSIFICATION	1.3424552269976052E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999759257929625	WITHOUT_CLASSIFICATION	2.4074207037611532E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9991972253931294	WITHOUT_CLASSIFICATION	8.027746068706373E-4	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9982188302809695	WITHOUT_CLASSIFICATION	0.0017811697190304255	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999863831348419	WITHOUT_CLASSIFICATION	1.3616865158238688E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.999999678854858	WITHOUT_CLASSIFICATION	3.211451421101539E-7	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999996060979455	WITHOUT_CLASSIFICATION	3.939020545675296E-7	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999997066822306	WITHOUT_CLASSIFICATION	2.9331776935673564E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999994449841957	WITHOUT_CLASSIFICATION	5.55015804275285E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999998125030438	WITHOUT_CLASSIFICATION	1.8749695614961106E-7	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999995395955922	WITHOUT_CLASSIFICATION	4.6040440775947596E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999992931304551	WITHOUT_CLASSIFICATION	7.068695448655275E-7	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999998733400032	WITHOUT_CLASSIFICATION	1.2665999681661465E-7	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999996792292575	WITHOUT_CLASSIFICATION	3.2077074253526603E-7	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999993862796556	WITHOUT_CLASSIFICATION	6.137203445616833E-7	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999994531744184	WITHOUT_CLASSIFICATION	5.468255816558631E-7	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999994404773818	WITHOUT_CLASSIFICATION	5.595226181569731E-7	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999993051251693	WITHOUT_CLASSIFICATION	6.948748306675434E-7	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999986059461823	WITHOUT_CLASSIFICATION	1.3940538177054156E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999980771302147	WITHOUT_CLASSIFICATION	1.9228697853291598E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999995984889241	WITHOUT_CLASSIFICATION	4.015110759607954E-7	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999993380641783	WITHOUT_CLASSIFICATION	6.619358217313256E-7	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999992759827616	WITHOUT_CLASSIFICATION	7.240172385263994E-7	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999991908857866	WITHOUT_CLASSIFICATION	8.091142133592929E-7	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.999999131750521	WITHOUT_CLASSIFICATION	8.682494791118875E-7	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999985475172964	WITHOUT_CLASSIFICATION	1.4524827035872961E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999992117498396	WITHOUT_CLASSIFICATION	7.882501603191092E-7	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999994375679411	WITHOUT_CLASSIFICATION	5.624320588833531E-7	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999985271269015	WITHOUT_CLASSIFICATION	1.4728730985209311E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999996407622063	WITHOUT_CLASSIFICATION	3.5923779368311843E-7	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999995842647049	WITHOUT_CLASSIFICATION	4.157352950908912E-7	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.999998515995156	WITHOUT_CLASSIFICATION	1.4840048440454288E-6	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999993505407052	WITHOUT_CLASSIFICATION	6.494592946964614E-7	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999993053985401	WITHOUT_CLASSIFICATION	6.946014599377202E-7	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999992643039076	WITHOUT_CLASSIFICATION	7.356960923423812E-7	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999991803451685	WITHOUT_CLASSIFICATION	8.196548313749747E-7	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999986597101946	WITHOUT_CLASSIFICATION	1.3402898054320197E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999990464468552	WITHOUT_CLASSIFICATION	9.535531448002338E-7	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999993331671412	WITHOUT_CLASSIFICATION	6.668328588307142E-7	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999996614018203	WITHOUT_CLASSIFICATION	3.3859817961840985E-7	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999993715592331	WITHOUT_CLASSIFICATION	6.284407667727743E-7	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999989796885531	WITHOUT_CLASSIFICATION	1.020311446836373E-6	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999990503638907	WITHOUT_CLASSIFICATION	9.496361092856619E-7	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999990350838714	WITHOUT_CLASSIFICATION	9.64916128530346E-7	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999982871682023	WITHOUT_CLASSIFICATION	1.7128317977464761E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999992140299403	WITHOUT_CLASSIFICATION	7.859700597002603E-7	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999997169092638	WITHOUT_CLASSIFICATION	2.8309073623656005E-7	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999996728675296	WITHOUT_CLASSIFICATION	3.2713247045542903E-7	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999989386375148	WITHOUT_CLASSIFICATION	1.0613624852318432E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999995149434885	WITHOUT_CLASSIFICATION	4.850565114262336E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999987139299421	WITHOUT_CLASSIFICATION	1.2860700578751178E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999983255232187	WITHOUT_CLASSIFICATION	1.6744767812544743E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999979619548227	WITHOUT_CLASSIFICATION	2.0380451773247623E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999996376231961	WITHOUT_CLASSIFICATION	3.623768039419147E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999993700233226	WITHOUT_CLASSIFICATION	6.29976677381793E-7	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999992011224609	WITHOUT_CLASSIFICATION	7.988775391690087E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999977206992888	WITHOUT_CLASSIFICATION	2.2793007110362586E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999993711494676	WITHOUT_CLASSIFICATION	6.288505324718202E-7	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.999999635962774	WITHOUT_CLASSIFICATION	3.640372260645812E-7	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999993189473462	WITHOUT_CLASSIFICATION	6.810526538114346E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999990362419362	WITHOUT_CLASSIFICATION	9.637580637585932E-7	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999992345970855	WITHOUT_CLASSIFICATION	7.654029144244337E-7	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999987267359342	WITHOUT_CLASSIFICATION	1.2732640659344774E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999988604798915	WITHOUT_CLASSIFICATION	1.139520108476171E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999994438021389	WITHOUT_CLASSIFICATION	5.561978610942054E-7	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999990658365578	WITHOUT_CLASSIFICATION	9.341634422528233E-7	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999992302114389	WITHOUT_CLASSIFICATION	7.697885611266418E-7	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999992571251993	WITHOUT_CLASSIFICATION	7.428748006886361E-7	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999987576448521	WITHOUT_CLASSIFICATION	1.2423551478819108E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.999998606508603	WITHOUT_CLASSIFICATION	1.3934913970219438E-6	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999985965288904	WITHOUT_CLASSIFICATION	1.4034711094546633E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999991399775454	WITHOUT_CLASSIFICATION	8.600224545797735E-7	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999991949287226	WITHOUT_CLASSIFICATION	8.050712774763536E-7	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999980687793875	WITHOUT_CLASSIFICATION	1.931220612540342E-6	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.99999867230625	WITHOUT_CLASSIFICATION	1.3276937500813761E-6	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999992837482207	WITHOUT_CLASSIFICATION	7.162517792496734E-7	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999994413748851	WITHOUT_CLASSIFICATION	5.586251149344551E-7	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999992997956448	WITHOUT_CLASSIFICATION	7.002043552181448E-7	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.999998149413872	WITHOUT_CLASSIFICATION	1.85058612795908E-6	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999980285085485	WITHOUT_CLASSIFICATION	1.971491451575574E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999991159478536	WITHOUT_CLASSIFICATION	8.840521462630252E-7	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999987599187341	WITHOUT_CLASSIFICATION	1.2400812658874651E-6	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999991761661686	WITHOUT_CLASSIFICATION	8.23833831424099E-7	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999977707831256	WITHOUT_CLASSIFICATION	2.229216874345202E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999989820604849	WITHOUT_CLASSIFICATION	1.0179395151230215E-6	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999996285701841	WITHOUT_CLASSIFICATION	3.714298158350612E-7	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999990034854862	WITHOUT_CLASSIFICATION	9.96514513850515E-7	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999984242340142	WITHOUT_CLASSIFICATION	1.5757659858513274E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999979488638658	WITHOUT_CLASSIFICATION	2.051136134202243E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999993565228179	WITHOUT_CLASSIFICATION	6.434771821091713E-7	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999994082922546	WITHOUT_CLASSIFICATION	5.917077453518801E-7	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999983112467143	WITHOUT_CLASSIFICATION	1.688753285566371E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999987365348567	WITHOUT_CLASSIFICATION	1.2634651432149032E-6	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999983940089011	WITHOUT_CLASSIFICATION	1.6059910989576549E-6	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999996895416698	WITHOUT_CLASSIFICATION	3.1045833020327866E-7	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999994021528522	WITHOUT_CLASSIFICATION	5.978471477922202E-7	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999995004908315	WITHOUT_CLASSIFICATION	4.995091683681862E-7	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999994448015894	WITHOUT_CLASSIFICATION	5.551984105745904E-7	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999996737745213	WITHOUT_CLASSIFICATION	3.2622547875461084E-7	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999994387147707	WITHOUT_CLASSIFICATION	5.612852292154922E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999990959947401	WITHOUT_CLASSIFICATION	9.040052599147295E-7	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.999999029830341	WITHOUT_CLASSIFICATION	9.701696590617805E-7	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999991123493263	WITHOUT_CLASSIFICATION	8.876506737918426E-7	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999994113981469	WITHOUT_CLASSIFICATION	5.886018531706937E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999987537415017	WITHOUT_CLASSIFICATION	1.2462584981994022E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999993648139441	WITHOUT_CLASSIFICATION	6.351860559589212E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.99999960402745	WITHOUT_CLASSIFICATION	3.959725499895907E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999995132488092	WITHOUT_CLASSIFICATION	4.867511908218192E-7	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999997289067186	WITHOUT_CLASSIFICATION	2.7109328139021576E-7	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999998266689895	WITHOUT_CLASSIFICATION	1.733310104995947E-7	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999993481289908	WITHOUT_CLASSIFICATION	6.518710092949912E-7	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999996688134349	WITHOUT_CLASSIFICATION	3.311865650485282E-7	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999995585862839	WITHOUT_CLASSIFICATION	4.414137161683815E-7	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999996744633939	WITHOUT_CLASSIFICATION	3.255366061195335E-7	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999992796168217	WITHOUT_CLASSIFICATION	7.203831782434085E-7	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999995687069874	WITHOUT_CLASSIFICATION	4.312930126877436E-7	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999988047028376	WITHOUT_CLASSIFICATION	1.1952971623463157E-6	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999985794152189	WITHOUT_CLASSIFICATION	1.4205847812304692E-6	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.999998987448109	WITHOUT_CLASSIFICATION	1.0125518910011034E-6	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999993248590259	WITHOUT_CLASSIFICATION	6.751409740798068E-7	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999991110919444	WITHOUT_CLASSIFICATION	8.889080555823326E-7	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999990486121507	WITHOUT_CLASSIFICATION	9.513878493248025E-7	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999996087079077	WITHOUT_CLASSIFICATION	3.912920921874034E-7	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999996233913818	WITHOUT_CLASSIFICATION	3.766086181228953E-7	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999991084641732	WITHOUT_CLASSIFICATION	8.915358269168711E-7	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.999999702410282	WITHOUT_CLASSIFICATION	2.975897179837392E-7	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999987008979578	WITHOUT_CLASSIFICATION	1.2991020422572926E-6	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999995199386226	WITHOUT_CLASSIFICATION	4.800613775162171E-7	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.999999657929439	WITHOUT_CLASSIFICATION	3.4207056092174974E-7	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999994187584387	WITHOUT_CLASSIFICATION	5.812415612852254E-7	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999987750980974	WITHOUT_CLASSIFICATION	1.224901902651248E-6	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999995309862242	WITHOUT_CLASSIFICATION	4.6901377591055965E-7	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999990736237655	WITHOUT_CLASSIFICATION	9.263762345199306E-7	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.99999894734444	WITHOUT_CLASSIFICATION	1.0526555600981229E-6	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999984462863456	WITHOUT_CLASSIFICATION	1.5537136543230326E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999985259705554	WITHOUT_CLASSIFICATION	1.4740294445250114E-6	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999990017856036	WITHOUT_CLASSIFICATION	9.982143963152832E-7	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999995887217002	WITHOUT_CLASSIFICATION	4.1127829969106817E-7	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999998019228398	WITHOUT_CLASSIFICATION	1.9807716016548256E-7	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999997250837	WITHOUT_CLASSIFICATION	2.749162999216829E-7	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999997063180422	WITHOUT_CLASSIFICATION	2.936819578340634E-7	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999996343342974	WITHOUT_CLASSIFICATION	3.656657026189061E-7	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999997687408926	WITHOUT_CLASSIFICATION	2.312591075543709E-7	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999997302307637	WITHOUT_CLASSIFICATION	2.69769236197842E-7	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999996842647729	WITHOUT_CLASSIFICATION	3.157352270208549E-7	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999995663855662	WITHOUT_CLASSIFICATION	4.336144338312222E-7	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999996939252823	WITHOUT_CLASSIFICATION	3.060747176973578E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.999999740831687	WITHOUT_CLASSIFICATION	2.591683130394909E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999992804858926	WITHOUT_CLASSIFICATION	7.195141075526241E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999997071927789	WITHOUT_CLASSIFICATION	2.92807221132639E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999996737234336	WITHOUT_CLASSIFICATION	3.262765665288417E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.999999727959028	WITHOUT_CLASSIFICATION	2.7204097192176266E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999996137227604	WITHOUT_CLASSIFICATION	3.862772397272974E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.999999797901846	WITHOUT_CLASSIFICATION	2.0209815384943014E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999997615198137	WITHOUT_CLASSIFICATION	2.384801863604334E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999997204797605	WITHOUT_CLASSIFICATION	2.7952023954394807E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999998232069222	WITHOUT_CLASSIFICATION	1.767930778464855E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999996844320767	WITHOUT_CLASSIFICATION	3.155679233560185E-7	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999997153522994	WITHOUT_CLASSIFICATION	2.846477005617137E-7	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999997673707881	WITHOUT_CLASSIFICATION	2.326292118820256E-7	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999997511079584	WITHOUT_CLASSIFICATION	2.488920415453247E-7	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999997210176843	WITHOUT_CLASSIFICATION	2.7898231563577876E-7	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999995980619555	WITHOUT_CLASSIFICATION	4.0193804447788536E-7	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999992730114647	WITHOUT_CLASSIFICATION	7.269885352939792E-7	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999987132891984	WITHOUT_CLASSIFICATION	1.2867108015583732E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999995949839576	WITHOUT_CLASSIFICATION	4.0501604248535925E-7	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999997026729458	WITHOUT_CLASSIFICATION	2.9732705420452816E-7	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999994298307708	WITHOUT_CLASSIFICATION	5.701692291504045E-7	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999994623885415	WITHOUT_CLASSIFICATION	5.376114584852194E-7	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999992620539443	WITHOUT_CLASSIFICATION	7.37946055742809E-7	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999993604237174	WITHOUT_CLASSIFICATION	6.395762825688821E-7	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999994583932325	WITHOUT_CLASSIFICATION	5.416067674818224E-7	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999996724642656	WITHOUT_CLASSIFICATION	3.275357344342368E-7	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999991943677258	WITHOUT_CLASSIFICATION	8.056322742610751E-7	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999992586675995	WITHOUT_CLASSIFICATION	7.413324005712767E-7	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.999999858045157	WITHOUT_CLASSIFICATION	1.4195484291756828E-7	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999997112725192	WITHOUT_CLASSIFICATION	2.8872748080894853E-7	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999989593789209	WITHOUT_CLASSIFICATION	1.0406210790654354E-6	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999996457295167	WITHOUT_CLASSIFICATION	3.5427048333031396E-7	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999996748249739	WITHOUT_CLASSIFICATION	3.251750261197252E-7	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999997146506944	WITHOUT_CLASSIFICATION	2.853493057184686E-7	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999995508760521	WITHOUT_CLASSIFICATION	4.4912394794886813E-7	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.999999716177857	WITHOUT_CLASSIFICATION	2.838221430402643E-7	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999998049139863	WITHOUT_CLASSIFICATION	1.9508601373860066E-7	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999998553769794	WITHOUT_CLASSIFICATION	1.4462302056434473E-7	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999996940694192	WITHOUT_CLASSIFICATION	3.059305807270835E-7	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999998716231383	WITHOUT_CLASSIFICATION	1.283768617009532E-7	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999997151587044	WITHOUT_CLASSIFICATION	2.8484129559038497E-7	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999996582676957	WITHOUT_CLASSIFICATION	3.4173230429623974E-7	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999997385708792	WITHOUT_CLASSIFICATION	2.61429120776299E-7	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.99999982800815	WITHOUT_CLASSIFICATION	1.719918499509367E-7	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999998251472162	WITHOUT_CLASSIFICATION	1.7485278375049183E-7	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999997431659137	WITHOUT_CLASSIFICATION	2.5683408626401885E-7	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999998144864567	WITHOUT_CLASSIFICATION	1.8551354329399236E-7	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999998311607774	WITHOUT_CLASSIFICATION	1.6883922266580292E-7	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999997335656136	WITHOUT_CLASSIFICATION	2.664343864208685E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999995435102157	WITHOUT_CLASSIFICATION	4.56489784316147E-7	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999994449291033	WITHOUT_CLASSIFICATION	5.550708966981532E-7	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999996451309044	WITHOUT_CLASSIFICATION	3.5486909557202374E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999995052105031	WITHOUT_CLASSIFICATION	4.947894969974023E-7	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999997535799461	WITHOUT_CLASSIFICATION	2.464200538913119E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999996146739742	WITHOUT_CLASSIFICATION	3.8532602573890803E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999990134267608	WITHOUT_CLASSIFICATION	9.86573239190408E-7	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999998498215165	WITHOUT_CLASSIFICATION	1.501784834663007E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999993699679657	WITHOUT_CLASSIFICATION	6.300320342949112E-7	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999995662889306	WITHOUT_CLASSIFICATION	4.337110694672E-7	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999997138994049	WITHOUT_CLASSIFICATION	2.86100595033213E-7	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999992460591504	WITHOUT_CLASSIFICATION	7.539408497607915E-7	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.999999160916937	WITHOUT_CLASSIFICATION	8.390830630705466E-7	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999996070640542	WITHOUT_CLASSIFICATION	3.9293594581888396E-7	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999993562455016	WITHOUT_CLASSIFICATION	6.437544983805402E-7	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999996728378805	WITHOUT_CLASSIFICATION	3.2716211947934615E-7	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999991430636098	WITHOUT_CLASSIFICATION	8.56936390239945E-7	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999997468490074	WITHOUT_CLASSIFICATION	2.5315099264381737E-7	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999995826522939	WITHOUT_CLASSIFICATION	4.1734770594240415E-7	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999994898569194	WITHOUT_CLASSIFICATION	5.101430804452563E-7	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999992983242734	WITHOUT_CLASSIFICATION	7.016757265625918E-7	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999988064363707	WITHOUT_CLASSIFICATION	1.1935636292637987E-6	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999991555163062	WITHOUT_CLASSIFICATION	8.444836937931389E-7	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999991631628401	WITHOUT_CLASSIFICATION	8.368371599247668E-7	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999990854802943	WITHOUT_CLASSIFICATION	9.145197058225269E-7	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999994054602953	WITHOUT_CLASSIFICATION	5.945397046303719E-7	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999990677379761	WITHOUT_CLASSIFICATION	9.322620238570767E-7	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.999999660320429	WITHOUT_CLASSIFICATION	3.3967957100625196E-7	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999992833557482	WITHOUT_CLASSIFICATION	7.16644251889851E-7	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999993526020636	WITHOUT_CLASSIFICATION	6.473979364497307E-7	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999996967028557	WITHOUT_CLASSIFICATION	3.032971443701477E-7	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999997549037837	WITHOUT_CLASSIFICATION	2.4509621631648177E-7	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999997251564343	WITHOUT_CLASSIFICATION	2.7484356565433095E-7	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999992737811915	WITHOUT_CLASSIFICATION	7.262188085807457E-7	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999989877942933	WITHOUT_CLASSIFICATION	1.0122057066109676E-6	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999997368249266	WITHOUT_CLASSIFICATION	2.63175073423767E-7	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.999999547195735	WITHOUT_CLASSIFICATION	4.5280426496795785E-7	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999996903737884	WITHOUT_CLASSIFICATION	3.096262116021513E-7	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999992894917965	WITHOUT_CLASSIFICATION	7.105082035292461E-7	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999995819018326	WITHOUT_CLASSIFICATION	4.180981674982667E-7	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.999999289489126	WITHOUT_CLASSIFICATION	7.105108740039837E-7	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999995725286055	WITHOUT_CLASSIFICATION	4.2747139448039455E-7	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999995392895673	WITHOUT_CLASSIFICATION	4.607104326057593E-7	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999997510616093	WITHOUT_CLASSIFICATION	2.4893839066042554E-7	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999996118857165	WITHOUT_CLASSIFICATION	3.881142834365442E-7	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999998146869428	WITHOUT_CLASSIFICATION	1.8531305721244635E-7	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999993921469679	WITHOUT_CLASSIFICATION	6.078530320743405E-7	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999993608824649	WITHOUT_CLASSIFICATION	6.391175350558971E-7	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999993823195099	WITHOUT_CLASSIFICATION	6.176804901511663E-7	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999991817759263	WITHOUT_CLASSIFICATION	8.18224073765893E-7	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999996188898883	WITHOUT_CLASSIFICATION	3.811101116569892E-7	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999999411943866	WITHOUT_CLASSIFICATION	5.880561340308785E-7	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999996591303673	WITHOUT_CLASSIFICATION	3.4086963284328975E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999986417769593	WITHOUT_CLASSIFICATION	1.3582230406670839E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999997695906937	WITHOUT_CLASSIFICATION	2.3040930620335618E-7	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999997522069463	WITHOUT_CLASSIFICATION	2.477930537090991E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999993701968589	WITHOUT_CLASSIFICATION	6.298031411189936E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999996022320835	WITHOUT_CLASSIFICATION	3.977679164008334E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999998757956992	WITHOUT_CLASSIFICATION	1.2420430086550506E-7	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999991977895305	WITHOUT_CLASSIFICATION	8.022104694059558E-7	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999995470376336	WITHOUT_CLASSIFICATION	4.529623664182829E-7	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999996066554538	WITHOUT_CLASSIFICATION	3.933445461354009E-7	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999996962981496	WITHOUT_CLASSIFICATION	3.03701850542113E-7	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999979987699154	WITHOUT_CLASSIFICATION	2.0012300846206844E-6	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999983960790592	WITHOUT_CLASSIFICATION	1.6039209408917003E-6	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999990143843046	WITHOUT_CLASSIFICATION	9.85615695445394E-7	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.99999929570462	WITHOUT_CLASSIFICATION	7.042953800114182E-7	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999990943553562	WITHOUT_CLASSIFICATION	9.056446438098927E-7	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999995229799065	WITHOUT_CLASSIFICATION	4.770200935166827E-7	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999986798655689	WITHOUT_CLASSIFICATION	1.3201344310671684E-6	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999992612912576	WITHOUT_CLASSIFICATION	7.387087424219262E-7	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999997712801056	WITHOUT_CLASSIFICATION	2.2871989432590062E-7	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.999999269650494	WITHOUT_CLASSIFICATION	7.303495059162878E-7	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999992938151939	WITHOUT_CLASSIFICATION	7.061848061142174E-7	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999997033268234	WITHOUT_CLASSIFICATION	2.966731766033712E-7	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999992369182891	WITHOUT_CLASSIFICATION	7.630817109645836E-7	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999992817979526	WITHOUT_CLASSIFICATION	7.18202047373218E-7	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999994508365013	WITHOUT_CLASSIFICATION	5.491634987345549E-7	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999990759672133	WITHOUT_CLASSIFICATION	9.240327867464673E-7	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999991116049589	WITHOUT_CLASSIFICATION	8.883950410604951E-7	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999995941397779	WITHOUT_CLASSIFICATION	4.058602221410555E-7	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999992854481382	WITHOUT_CLASSIFICATION	7.145518617375547E-7	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.999999093501344	WITHOUT_CLASSIFICATION	9.064986560267713E-7	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999986250727808	WITHOUT_CLASSIFICATION	1.3749272192529534E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999998072008701	WITHOUT_CLASSIFICATION	1.927991299383227E-7	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999996393050784	WITHOUT_CLASSIFICATION	3.60694921497148E-7	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999994895803086	WITHOUT_CLASSIFICATION	5.104196913870919E-7	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999992858398941	WITHOUT_CLASSIFICATION	7.141601060588157E-7	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.999999160444582	WITHOUT_CLASSIFICATION	8.395554179792846E-7	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999997972485819	WITHOUT_CLASSIFICATION	2.027514181078074E-7	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999997155860443	WITHOUT_CLASSIFICATION	2.8441395567935297E-7	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999994946557895	WITHOUT_CLASSIFICATION	5.05344210423368E-7	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999997632826848	WITHOUT_CLASSIFICATION	2.367173151582176E-7	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999997249298508	WITHOUT_CLASSIFICATION	2.7507014919341256E-7	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999998992917717	WITHOUT_CLASSIFICATION	1.0070822823873748E-7	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999998555331852	WITHOUT_CLASSIFICATION	1.4446681478738968E-7	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999996049949872	WITHOUT_CLASSIFICATION	3.950050127433008E-7	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999996265425272	WITHOUT_CLASSIFICATION	3.734574728485001E-7	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9954661124643257	WITHOUT_CLASSIFICATION	0.004533887535674209	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9947382689741642	WITHOUT_CLASSIFICATION	0.005261731025835803	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999983759514639	WITHOUT_CLASSIFICATION	1.6240485360644407E-6	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999948736506864	WITHOUT_CLASSIFICATION	5.126349313670884E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999924063612411	WITHOUT_CLASSIFICATION	7.59363875882296E-6	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9988908199602465	WITHOUT_CLASSIFICATION	0.0011091800397534848	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999947491236812	WITHOUT_CLASSIFICATION	5.250876318747703E-6	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999986900104	WITHOUT_CLASSIFICATION	1.3099894600026772E-9	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.999999749807705	WITHOUT_CLASSIFICATION	2.501922950512745E-7	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999995904427943	WITHOUT_CLASSIFICATION	4.09557205741003E-7	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999998483457834	WITHOUT_CLASSIFICATION	1.5165421667017705E-7	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999995702771076	WITHOUT_CLASSIFICATION	4.2972289237387465E-7	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999994398646664	WITHOUT_CLASSIFICATION	5.60135333608638E-7	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999996739270238	WITHOUT_CLASSIFICATION	3.2607297624196624E-7	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999998311485097	WITHOUT_CLASSIFICATION	1.6885149032318673E-7	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999997479818595	WITHOUT_CLASSIFICATION	2.520181404224293E-7	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999994036012199	WITHOUT_CLASSIFICATION	5.963987800682835E-7	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.999999659478234	WITHOUT_CLASSIFICATION	3.4052176597555424E-7	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999995278027258	WITHOUT_CLASSIFICATION	4.7219727418913385E-7	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999995344333528	WITHOUT_CLASSIFICATION	4.6556664726963427E-7	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.999999784769641	WITHOUT_CLASSIFICATION	2.1523035896651378E-7	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999996121774626	WITHOUT_CLASSIFICATION	3.8782253735301944E-7	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999996813985755	WITHOUT_CLASSIFICATION	3.18601424509692E-7	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999991299207092	WITHOUT_CLASSIFICATION	8.700792908869408E-7	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999995127472874	WITHOUT_CLASSIFICATION	4.872527126718785E-7	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999997476002361	WITHOUT_CLASSIFICATION	2.5239976382967793E-7	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999998473002938	WITHOUT_CLASSIFICATION	1.5269970627760187E-7	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999995373121775	WITHOUT_CLASSIFICATION	4.6268782250443936E-7	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999995642098916	WITHOUT_CLASSIFICATION	4.3579010836222415E-7	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.999998958656782	WITHOUT_CLASSIFICATION	1.0413432180037294E-6	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999998743973685	WITHOUT_CLASSIFICATION	1.2560263156613986E-7	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.99995763957949	WITHOUT_CLASSIFICATION	4.236042050994307E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9978118286046215	WITHOUT_CLASSIFICATION	0.0021881713953785563	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999998115454799	WITHOUT_CLASSIFICATION	1.8845452011117004E-7	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999710137377156	WITHOUT_CLASSIFICATION	2.8986262284422693E-5	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999942782576	WITHOUT_CLASSIFICATION	5.721742352144418E-9	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9983962229205275	WITHOUT_CLASSIFICATION	0.0016037770794724599	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999704374179605	WITHOUT_CLASSIFICATION	2.956258203951658E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999849841527	WITHOUT_CLASSIFICATION	1.5015847257866437E-8	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999995204981417	WITHOUT_CLASSIFICATION	4.795018582535121E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999995204981417	WITHOUT_CLASSIFICATION	4.795018582535121E-7	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9858500933703032	DESIGN	0.01414990662969671	WITHOUT_CLASSIFICATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999841425078697	WITHOUT_CLASSIFICATION	1.585749213025809E-5	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999982822824	WITHOUT_CLASSIFICATION	1.7177176648735747E-9	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999999548301748	WITHOUT_CLASSIFICATION	4.516982515946897E-8	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.999998314251311	WITHOUT_CLASSIFICATION	1.6857486889697759E-6	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999773097074718	WITHOUT_CLASSIFICATION	2.269029252817963E-5	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.7460541198813997	WITHOUT_CLASSIFICATION	0.2539458801186003	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999899461103706	WITHOUT_CLASSIFICATION	1.0053889629270984E-5	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999646306605505	WITHOUT_CLASSIFICATION	3.5369339449493714E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999813581599577	WITHOUT_CLASSIFICATION	1.864184004226109E-5	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.6416092261830513	WITHOUT_CLASSIFICATION	0.3583907738169486	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9594151600424913	WITHOUT_CLASSIFICATION	0.040584839957508674	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999874168149567	WITHOUT_CLASSIFICATION	1.2583185043282744E-5	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999931969441289	WITHOUT_CLASSIFICATION	6.8030558711585254E-6	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999929522415563	WITHOUT_CLASSIFICATION	7.04775844370612E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999929522415563	WITHOUT_CLASSIFICATION	7.04775844370612E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.962277062064445	WITHOUT_CLASSIFICATION	0.037722937935555	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999954710414221	WITHOUT_CLASSIFICATION	4.528958578004069E-6	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999786448036	WITHOUT_CLASSIFICATION	2.1355196375716907E-8	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999994997850214	WITHOUT_CLASSIFICATION	5.002149786050493E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9996600992002974	WITHOUT_CLASSIFICATION	3.399007997026318E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999983413904003	WITHOUT_CLASSIFICATION	1.65860959972516E-6	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999997191876756	WITHOUT_CLASSIFICATION	2.808123243961728E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999983413904003	WITHOUT_CLASSIFICATION	1.65860959972516E-6	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.7588299427990888	WITHOUT_CLASSIFICATION	0.2411700572009113	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999997947195616	WITHOUT_CLASSIFICATION	2.0528043851231708E-7	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.6415093137054039	WITHOUT_CLASSIFICATION	0.35849068629459613	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.6990704678330064	DESIGN	0.30092953216699364	WITHOUT_CLASSIFICATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.999005345513271	WITHOUT_CLASSIFICATION	9.94654486728972E-4	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9989983484139312	WITHOUT_CLASSIFICATION	0.0010016515860687607	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9998532994092506	WITHOUT_CLASSIFICATION	1.46700590749432E-4	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999985321724223	WITHOUT_CLASSIFICATION	1.467827577760659E-6	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999997528774479	WITHOUT_CLASSIFICATION	2.4712255210798955E-7	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999520126845564	WITHOUT_CLASSIFICATION	4.798731544352291E-5	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.8365365489059754	WITHOUT_CLASSIFICATION	0.1634634510940247	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999921523751204	WITHOUT_CLASSIFICATION	7.847624879545602E-6	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999905652540512	WITHOUT_CLASSIFICATION	9.434745948855211E-6	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998933520953474	WITHOUT_CLASSIFICATION	1.0664790465265766E-4	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999567549203	WITHOUT_CLASSIFICATION	4.3245079689783554E-8	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999567549203	WITHOUT_CLASSIFICATION	4.3245079689783554E-8	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.999999940118808	WITHOUT_CLASSIFICATION	5.988119203826984E-8	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999983372827781	WITHOUT_CLASSIFICATION	1.662717221862162E-6	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999999920581891	WITHOUT_CLASSIFICATION	7.941810856217069E-9	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999998619563355	WITHOUT_CLASSIFICATION	1.3804366444612967E-7	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999157055087	WITHOUT_CLASSIFICATION	8.429449122327558E-8	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999983413904003	WITHOUT_CLASSIFICATION	1.65860959972516E-6	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999512243479	WITHOUT_CLASSIFICATION	4.877565212623816E-8	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999997964713	WITHOUT_CLASSIFICATION	2.0352881058033967E-10	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999366485186325	WITHOUT_CLASSIFICATION	6.33514813674333E-5	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999242824863	WITHOUT_CLASSIFICATION	7.571751370809528E-8	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999996787947055	WITHOUT_CLASSIFICATION	3.2120529444100773E-7	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999996038441	WITHOUT_CLASSIFICATION	3.9615581832363137E-10	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.999999991948383	WITHOUT_CLASSIFICATION	8.051617038231448E-9	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999997751908207	WITHOUT_CLASSIFICATION	2.2480917934116724E-7	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.914426563496512	WITHOUT_CLASSIFICATION	0.08557343650348795	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.5680892016576561	DESIGN	0.4319107983423438	WITHOUT_CLASSIFICATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999596917112417	WITHOUT_CLASSIFICATION	4.0308288758416166E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999990411087435	WITHOUT_CLASSIFICATION	9.5889125646807E-7	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9007696235974157	WITHOUT_CLASSIFICATION	0.09923037640258416	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999506861643365	WITHOUT_CLASSIFICATION	4.9313835663663045E-5	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9893617978883181	DESIGN	0.01063820211168188	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9991825586238733	WITHOUT_CLASSIFICATION	8.174413761266157E-4	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.999979721965332	WITHOUT_CLASSIFICATION	2.0278034667918087E-5	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9998887314047644	WITHOUT_CLASSIFICATION	1.1126859523557934E-4	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999897218288426	WITHOUT_CLASSIFICATION	1.0278171157401908E-5	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999902599466223	WITHOUT_CLASSIFICATION	9.740053377664684E-6	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999854278759767	WITHOUT_CLASSIFICATION	1.457212402329054E-5	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999937244715711	WITHOUT_CLASSIFICATION	6.275528428954035E-6	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999839548879398	WITHOUT_CLASSIFICATION	1.604511206021284E-5	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999983022829543	WITHOUT_CLASSIFICATION	1.69771704577731E-6	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999993132913344	WITHOUT_CLASSIFICATION	6.867086655188782E-7	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999829176029786	WITHOUT_CLASSIFICATION	1.7082397021378037E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999316440030812	WITHOUT_CLASSIFICATION	6.835599691880108E-5	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999939708841934	WITHOUT_CLASSIFICATION	6.029115806577367E-6	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9929401340058689	WITHOUT_CLASSIFICATION	0.007059865994131095	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9998535545015493	WITHOUT_CLASSIFICATION	1.464454984506874E-4	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999925904579349	WITHOUT_CLASSIFICATION	7.4095420652326134E-6	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999995568822372	WITHOUT_CLASSIFICATION	4.4311776288230694E-7	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999367569412773	WITHOUT_CLASSIFICATION	6.324305872270879E-5	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999998581767845	WITHOUT_CLASSIFICATION	1.4182321546594022E-7	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9957375447958594	WITHOUT_CLASSIFICATION	0.004262455204140669	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.999952591464392	WITHOUT_CLASSIFICATION	4.7408535608088444E-5	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9998937919743829	WITHOUT_CLASSIFICATION	1.0620802561715744E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9995120419547132	WITHOUT_CLASSIFICATION	4.8795804528683947E-4	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9999293497912592	WITHOUT_CLASSIFICATION	7.065020874081975E-5	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.8681068987845937	WITHOUT_CLASSIFICATION	0.13189310121540632	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999986900104	WITHOUT_CLASSIFICATION	1.3099894600026772E-9	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999998812735	WITHOUT_CLASSIFICATION	1.187265469213499E-10	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999680724574399	WITHOUT_CLASSIFICATION	3.19275425600789E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999986201375418	WITHOUT_CLASSIFICATION	1.3798624581004082E-6	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999747797089	WITHOUT_CLASSIFICATION	2.522029108898253E-8	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999997947195616	WITHOUT_CLASSIFICATION	2.0528043851231708E-7	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999999043359893	WITHOUT_CLASSIFICATION	9.566401077175149E-8	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9945995822978048	DESIGN	0.005400417702195188	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9998311014339889	WITHOUT_CLASSIFICATION	1.6889856601110757E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999972598147461	WITHOUT_CLASSIFICATION	2.740185253935461E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999972598147461	WITHOUT_CLASSIFICATION	2.740185253935461E-6	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999155501618759	WITHOUT_CLASSIFICATION	8.444983812394347E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999155501618759	WITHOUT_CLASSIFICATION	8.444983812394347E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999155501618759	WITHOUT_CLASSIFICATION	8.444983812394347E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999403286473305	WITHOUT_CLASSIFICATION	5.967135266959011E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999403286473305	WITHOUT_CLASSIFICATION	5.967135266959011E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999981287845399	WITHOUT_CLASSIFICATION	1.871215460178038E-6	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999981287845399	WITHOUT_CLASSIFICATION	1.871215460178038E-6	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999998767235	WITHOUT_CLASSIFICATION	1.2327655212000585E-10	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999998938121033	WITHOUT_CLASSIFICATION	1.0618789680297792E-7	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999966315625087	WITHOUT_CLASSIFICATION	3.3684374913145295E-6	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999966315625087	WITHOUT_CLASSIFICATION	3.3684374913145295E-6	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999801303517499	WITHOUT_CLASSIFICATION	1.9869648250132023E-5	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9993436354092672	WITHOUT_CLASSIFICATION	6.563645907328681E-4	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9989335766684551	WITHOUT_CLASSIFICATION	0.001066423331544907	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.999999342618083	WITHOUT_CLASSIFICATION	6.573819169882094E-7	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999997854989162	WITHOUT_CLASSIFICATION	2.1450108370771925E-7	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9980168071156725	WITHOUT_CLASSIFICATION	0.0019831928843274797	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999961973704811	WITHOUT_CLASSIFICATION	3.8026295189195012E-6	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9996621653419078	WITHOUT_CLASSIFICATION	3.3783465809222684E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999978762019971	WITHOUT_CLASSIFICATION	2.123798002823614E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.999996117372753	WITHOUT_CLASSIFICATION	3.882627247131693E-6	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999147370356036	WITHOUT_CLASSIFICATION	8.526296439630954E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999981349242615	WITHOUT_CLASSIFICATION	1.865075738494057E-6	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999974938795189	WITHOUT_CLASSIFICATION	2.5061204810842244E-6	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9998841998255845	WITHOUT_CLASSIFICATION	1.1580017441548638E-4	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9998879595806418	WITHOUT_CLASSIFICATION	1.1204041935811204E-4	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9993712226685915	WITHOUT_CLASSIFICATION	6.287773314084799E-4	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.8736488913196438	WITHOUT_CLASSIFICATION	0.12635110868035626	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999992834859315	WITHOUT_CLASSIFICATION	7.165140686285236E-7	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999998669288562	WITHOUT_CLASSIFICATION	1.3307114368561558E-7	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9997394965469856	WITHOUT_CLASSIFICATION	2.605034530144787E-4	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999981590133643	WITHOUT_CLASSIFICATION	1.8409866356909908E-6	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999960977615117	WITHOUT_CLASSIFICATION	3.902238488288043E-6	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.99999982916164	WITHOUT_CLASSIFICATION	1.7083836002344846E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999969371243798	WITHOUT_CLASSIFICATION	3.062875620144854E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999998563399053	WITHOUT_CLASSIFICATION	1.4366009469444733E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999950279300712	WITHOUT_CLASSIFICATION	4.972069928784036E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999995763119193	WITHOUT_CLASSIFICATION	4.236880807092764E-7	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999993563284582	WITHOUT_CLASSIFICATION	6.436715417880992E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999940368065705	WITHOUT_CLASSIFICATION	5.963193429427448E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999972030393715	WITHOUT_CLASSIFICATION	2.796960628660947E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999903197632536	WITHOUT_CLASSIFICATION	9.68023674638328E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999916908616638	WITHOUT_CLASSIFICATION	8.30913833621603E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961026986617	WITHOUT_CLASSIFICATION	3.897301338303643E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999831644751235	WITHOUT_CLASSIFICATION	1.6835524876506405E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961026986617	WITHOUT_CLASSIFICATION	3.897301338303643E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961026986617	WITHOUT_CLASSIFICATION	3.897301338303643E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961026986617	WITHOUT_CLASSIFICATION	3.897301338303643E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961026986617	WITHOUT_CLASSIFICATION	3.897301338303643E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961026986617	WITHOUT_CLASSIFICATION	3.897301338303643E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961026986617	WITHOUT_CLASSIFICATION	3.897301338303643E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999831644751235	WITHOUT_CLASSIFICATION	1.6835524876506405E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999831644751235	WITHOUT_CLASSIFICATION	1.6835524876506405E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999831644751235	WITHOUT_CLASSIFICATION	1.6835524876506405E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999831644751235	WITHOUT_CLASSIFICATION	1.6835524876506405E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999831644751235	WITHOUT_CLASSIFICATION	1.6835524876506405E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999831644751235	WITHOUT_CLASSIFICATION	1.6835524876506405E-5	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999996244891941	WITHOUT_CLASSIFICATION	3.7551080591671503E-7	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999998929512426	WITHOUT_CLASSIFICATION	1.0704875732670096E-7	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999995314255344	WITHOUT_CLASSIFICATION	4.6857446548468926E-7	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999986790549961	WITHOUT_CLASSIFICATION	1.320945003991579E-6	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999126266197412	WITHOUT_CLASSIFICATION	8.737338025877643E-5	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999979546317189	WITHOUT_CLASSIFICATION	2.045368281089707E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999954006268614	WITHOUT_CLASSIFICATION	4.599373138548155E-6	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999716219926	WITHOUT_CLASSIFICATION	2.837800735067094E-8	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9995403123850938	WITHOUT_CLASSIFICATION	4.5968761490621516E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999755236410048	WITHOUT_CLASSIFICATION	2.4476358995244377E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9953986312014845	WITHOUT_CLASSIFICATION	0.004601368798515555	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999995650241	WITHOUT_CLASSIFICATION	4.3497597816685874E-10	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999993824461352	WITHOUT_CLASSIFICATION	6.175538647441244E-7	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999962214867218	WITHOUT_CLASSIFICATION	3.7785132779897683E-6	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9998792514521342	WITHOUT_CLASSIFICATION	1.2074854786583537E-4	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9781026770377487	WITHOUT_CLASSIFICATION	0.021897322962251286	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.999990373826144	WITHOUT_CLASSIFICATION	9.62617385605094E-6	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999517435743661	WITHOUT_CLASSIFICATION	4.8256425633887626E-5	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9841553546880466	WITHOUT_CLASSIFICATION	0.01584464531195351	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999988327942	WITHOUT_CLASSIFICATION	1.1672058571149964E-9	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999971645749	WITHOUT_CLASSIFICATION	2.835425072600662E-9	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9998514587483793	WITHOUT_CLASSIFICATION	1.4854125162075765E-4	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999997191876756	WITHOUT_CLASSIFICATION	2.808123243961728E-7	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999861370095107	WITHOUT_CLASSIFICATION	1.3862990489228902E-5	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9998477550170549	WITHOUT_CLASSIFICATION	1.5224498294498195E-4	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999995173931944	WITHOUT_CLASSIFICATION	4.826068056792732E-7	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999991368295036	WITHOUT_CLASSIFICATION	8.631704963901442E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999538383995	WITHOUT_CLASSIFICATION	4.61616005922601E-8	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999998154040016	WITHOUT_CLASSIFICATION	1.845959984296747E-7	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.99999948706384	WITHOUT_CLASSIFICATION	5.129361600139301E-7	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999999666423213	WITHOUT_CLASSIFICATION	3.3357678804596514E-8	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999991207467	WITHOUT_CLASSIFICATION	8.792533401869866E-10	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999968271251957	WITHOUT_CLASSIFICATION	3.172874804247811E-6	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999811445468	WITHOUT_CLASSIFICATION	1.885545316145077E-8	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999978889375122	WITHOUT_CLASSIFICATION	2.111062487810318E-6	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999555653766263	WITHOUT_CLASSIFICATION	4.443462337362539E-5	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999943642919964	WITHOUT_CLASSIFICATION	5.6357080035540735E-6	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9998958745225448	WITHOUT_CLASSIFICATION	1.041254774551117E-4	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999989915505	WITHOUT_CLASSIFICATION	1.0084494983358044E-9	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999991059442	WITHOUT_CLASSIFICATION	8.940558357514498E-10	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999881088025822	WITHOUT_CLASSIFICATION	1.189119741781949E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999998597157556	WITHOUT_CLASSIFICATION	1.4028424446410534E-7	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999879248278	WITHOUT_CLASSIFICATION	1.2075172172196085E-8	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999056837931775	WITHOUT_CLASSIFICATION	9.431620682256435E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999056837931775	WITHOUT_CLASSIFICATION	9.431620682256435E-5	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999971734515307	WITHOUT_CLASSIFICATION	2.8265484692851696E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999971734515307	WITHOUT_CLASSIFICATION	2.8265484692851696E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999996594456363	WITHOUT_CLASSIFICATION	3.4055436370918497E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999996594456363	WITHOUT_CLASSIFICATION	3.4055436370918497E-7	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999993278098	WITHOUT_CLASSIFICATION	6.721901322926141E-10	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999508789379343	WITHOUT_CLASSIFICATION	4.912106206577263E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999993167727634	WITHOUT_CLASSIFICATION	6.832272365843548E-7	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999960283141422	WITHOUT_CLASSIFICATION	3.9716858577258414E-6	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999932954831409	WITHOUT_CLASSIFICATION	6.704516859196028E-6	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9974750353594346	WITHOUT_CLASSIFICATION	0.0025249646405653635	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9910806417932141	WITHOUT_CLASSIFICATION	0.008919358206785875	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999998933924645	WITHOUT_CLASSIFICATION	1.0660753547431525E-7	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.999643743671735	WITHOUT_CLASSIFICATION	3.5625632826492685E-4	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999988487450505	WITHOUT_CLASSIFICATION	1.1512549495418904E-6	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.999054280980987	WITHOUT_CLASSIFICATION	9.457190190130107E-4	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.999999480799128	WITHOUT_CLASSIFICATION	5.192008719606944E-7	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.999999826584465	WITHOUT_CLASSIFICATION	1.7341553492906526E-7	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9988982230904802	WITHOUT_CLASSIFICATION	0.0011017769095197543	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999947161824898	WITHOUT_CLASSIFICATION	5.283817510092368E-6	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999832945740404	WITHOUT_CLASSIFICATION	1.6705425959520718E-5	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999295703809634	WITHOUT_CLASSIFICATION	7.042961903668522E-5	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999982629569215	WITHOUT_CLASSIFICATION	1.7370430785438075E-6	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999829276454163	WITHOUT_CLASSIFICATION	1.707235458373928E-5	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999836527874086	WITHOUT_CLASSIFICATION	1.634721259133983E-5	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999941855910237	WITHOUT_CLASSIFICATION	5.814408976240777E-6	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999974259865109	WITHOUT_CLASSIFICATION	2.574013489173063E-6	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999934119063187	WITHOUT_CLASSIFICATION	6.588093681285641E-6	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999998453733141	WITHOUT_CLASSIFICATION	1.5462668588907383E-7	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.999931894202821	WITHOUT_CLASSIFICATION	6.810579717898047E-5	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999991060610647	WITHOUT_CLASSIFICATION	8.939389353213957E-7	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9994738608267897	WITHOUT_CLASSIFICATION	5.261391732103056E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999941621359338	WITHOUT_CLASSIFICATION	5.837864066205018E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999941621359338	WITHOUT_CLASSIFICATION	5.837864066205018E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999941621359338	WITHOUT_CLASSIFICATION	5.837864066205018E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9913247494745034	WITHOUT_CLASSIFICATION	0.008675250525496486	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9913247494745034	WITHOUT_CLASSIFICATION	0.008675250525496486	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999506861643365	WITHOUT_CLASSIFICATION	4.9313835663663045E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999506861643365	WITHOUT_CLASSIFICATION	4.9313835663663045E-5	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999942948103	WITHOUT_CLASSIFICATION	5.705189637237E-9	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.5330025254763829	DESIGN	0.466997474523617	WITHOUT_CLASSIFICATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9839931406091823	WITHOUT_CLASSIFICATION	0.016006859390817734	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999986537101873	WITHOUT_CLASSIFICATION	1.346289812696976E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999941621359338	WITHOUT_CLASSIFICATION	5.837864066205018E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999941621359338	WITHOUT_CLASSIFICATION	5.837864066205018E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999941621359338	WITHOUT_CLASSIFICATION	5.837864066205018E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9913247494745034	WITHOUT_CLASSIFICATION	0.008675250525496486	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9913247494745034	WITHOUT_CLASSIFICATION	0.008675250525496486	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9913247494745034	WITHOUT_CLASSIFICATION	0.008675250525496486	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999506861643365	WITHOUT_CLASSIFICATION	4.9313835663663045E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999506861643365	WITHOUT_CLASSIFICATION	4.9313835663663045E-5	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999998193526419	WITHOUT_CLASSIFICATION	1.8064735807931888E-7	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9077434484131669	WITHOUT_CLASSIFICATION	0.09225655158683313	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.8979230671034308	WITHOUT_CLASSIFICATION	0.10207693289656919	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.8979230671034308	WITHOUT_CLASSIFICATION	0.10207693289656919	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.8979230671034308	WITHOUT_CLASSIFICATION	0.10207693289656919	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.8979230671034308	WITHOUT_CLASSIFICATION	0.10207693289656919	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.8979230671034308	WITHOUT_CLASSIFICATION	0.10207693289656919	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999569976180096	WITHOUT_CLASSIFICATION	4.300238199033783E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999284037945863	WITHOUT_CLASSIFICATION	7.159620541374767E-5	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999798652563999	WITHOUT_CLASSIFICATION	2.0134743600092177E-5	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999999348133956	WITHOUT_CLASSIFICATION	6.518660446218717E-8	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999950223446153	WITHOUT_CLASSIFICATION	4.977655384693341E-6	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9997865457877911	WITHOUT_CLASSIFICATION	2.1345421220888492E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999576669931153	WITHOUT_CLASSIFICATION	4.2333006884796894E-5	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999992068709191	WITHOUT_CLASSIFICATION	7.931290809009941E-7	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9997825798718719	WITHOUT_CLASSIFICATION	2.1742012812798892E-4	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999863018600257	WITHOUT_CLASSIFICATION	1.3698139974307332E-5	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999999059067178	WITHOUT_CLASSIFICATION	9.40932820948912E-8	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999981110480828	WITHOUT_CLASSIFICATION	1.8889519171079692E-6	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999722117052441	WITHOUT_CLASSIFICATION	2.7788294755917044E-5	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999292675714708	WITHOUT_CLASSIFICATION	7.073242852919073E-5	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9763067083341448	WITHOUT_CLASSIFICATION	0.02369329166585521	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9923369036652255	WITHOUT_CLASSIFICATION	0.007663096334774437	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9923369036652255	WITHOUT_CLASSIFICATION	0.007663096334774437	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9923369036652255	WITHOUT_CLASSIFICATION	0.007663096334774437	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999451400033598	WITHOUT_CLASSIFICATION	5.4859996640243286E-5	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999451180488155	WITHOUT_CLASSIFICATION	5.48819511844137E-5	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999994291037865	WITHOUT_CLASSIFICATION	5.708962134768046E-7	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999717320878	WITHOUT_CLASSIFICATION	2.8267912233230195E-8	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999876297523	WITHOUT_CLASSIFICATION	1.2370247703334E-8	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999666155930071	WITHOUT_CLASSIFICATION	3.338440699290842E-5	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999969493203897	WITHOUT_CLASSIFICATION	3.0506796102854554E-6	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9994888835552459	WITHOUT_CLASSIFICATION	5.111164447541696E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999898574165267	WITHOUT_CLASSIFICATION	1.0142583473299014E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999933260035375	WITHOUT_CLASSIFICATION	6.6739964625044565E-6	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999995093589119	WITHOUT_CLASSIFICATION	4.906410879736663E-7	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9998582071765839	WITHOUT_CLASSIFICATION	1.4179282341602025E-4	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9992532306954709	WITHOUT_CLASSIFICATION	7.467693045291386E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999937645726041	WITHOUT_CLASSIFICATION	6.2354273959716484E-6	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999896362722728	WITHOUT_CLASSIFICATION	1.0363727727182906E-5	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999965955607126	WITHOUT_CLASSIFICATION	3.40443928728149E-6	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999998352821005	WITHOUT_CLASSIFICATION	1.6471789961744624E-7	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9997101360422522	WITHOUT_CLASSIFICATION	2.8986395774780865E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999534082490841	WITHOUT_CLASSIFICATION	4.659175091587673E-5	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999668087588813	WITHOUT_CLASSIFICATION	3.3191241118599385E-5	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999831842033636	WITHOUT_CLASSIFICATION	1.681579663639489E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999977935416884	WITHOUT_CLASSIFICATION	2.2064583115953825E-6	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.8401556665041432	WITHOUT_CLASSIFICATION	0.15984433349585686	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999961316520062	WITHOUT_CLASSIFICATION	3.868347993847522E-6	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999990433804611	WITHOUT_CLASSIFICATION	9.56619538934847E-7	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999969096043843	WITHOUT_CLASSIFICATION	3.09039561573616E-6	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.999997735806683	WITHOUT_CLASSIFICATION	2.2641933169048664E-6	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.999993166192706	WITHOUT_CLASSIFICATION	6.833807294033407E-6	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999795683058231	WITHOUT_CLASSIFICATION	2.0431694176893158E-5	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999700437666381	WITHOUT_CLASSIFICATION	2.9956233361812742E-5	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999851906610953	WITHOUT_CLASSIFICATION	1.4809338904649753E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999585548151487	WITHOUT_CLASSIFICATION	4.144518485123821E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.999945623434069	WITHOUT_CLASSIFICATION	5.437656593088098E-5	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999508554142973	WITHOUT_CLASSIFICATION	4.914458570285231E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999438797806564	WITHOUT_CLASSIFICATION	5.612021934367891E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999403629562807	WITHOUT_CLASSIFICATION	5.9637043719216024E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9991484768529414	WITHOUT_CLASSIFICATION	8.515231470586352E-4	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9739832905718042	WITHOUT_CLASSIFICATION	0.02601670942819574	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999999860103254	WITHOUT_CLASSIFICATION	1.3989674606868935E-7	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.999999963029307	WITHOUT_CLASSIFICATION	3.6970692895618765E-8	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999185678206	WITHOUT_CLASSIFICATION	8.143217932393846E-8	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.999985719884701	WITHOUT_CLASSIFICATION	1.428011529911484E-5	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999883143679982	WITHOUT_CLASSIFICATION	1.1685632001774708E-5	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999995683651455	WITHOUT_CLASSIFICATION	4.3163485449360987E-7	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999964943365762	WITHOUT_CLASSIFICATION	3.5056634238024067E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999902849322413	WITHOUT_CLASSIFICATION	9.715067758623376E-6	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.99999955573111	WITHOUT_CLASSIFICATION	4.442688899332941E-7	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.99999955573111	WITHOUT_CLASSIFICATION	4.442688899332941E-7	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9996559064402386	WITHOUT_CLASSIFICATION	3.440935597612785E-4	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999550498289866	WITHOUT_CLASSIFICATION	4.495017101327308E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999991987118472	WITHOUT_CLASSIFICATION	8.012881528151142E-7	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9921421817042018	WITHOUT_CLASSIFICATION	0.00785781829579821	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9984930534992118	WITHOUT_CLASSIFICATION	0.0015069465007882682	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999998577110312	WITHOUT_CLASSIFICATION	1.4228896883448934E-7	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9989654255220918	WITHOUT_CLASSIFICATION	0.0010345744779081472	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998713750126	WITHOUT_CLASSIFICATION	1.286249874272419E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999700934432011	WITHOUT_CLASSIFICATION	2.990655679882831E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999998680717153	WITHOUT_CLASSIFICATION	1.319282847797862E-7	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999850788596216	WITHOUT_CLASSIFICATION	1.4921140378454183E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999850788596216	WITHOUT_CLASSIFICATION	1.4921140378454183E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999850788596216	WITHOUT_CLASSIFICATION	1.4921140378454183E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999850788596216	WITHOUT_CLASSIFICATION	1.4921140378454183E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999932833647204	WITHOUT_CLASSIFICATION	6.716635279657401E-6	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.999976905362741	WITHOUT_CLASSIFICATION	2.309463725899344E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999834820608505	WITHOUT_CLASSIFICATION	1.6517939149548634E-5	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9995233170040003	WITHOUT_CLASSIFICATION	4.766829959997553E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9518206759948749	DESIGN	0.04817932400512514	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999916725989	WITHOUT_CLASSIFICATION	8.327401201613647E-9	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999999643272268	WITHOUT_CLASSIFICATION	3.5672773204024014E-8	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999986642515418	WITHOUT_CLASSIFICATION	1.3357484582098687E-6	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999986642515418	WITHOUT_CLASSIFICATION	1.3357484582098687E-6	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999994354571016	WITHOUT_CLASSIFICATION	5.645428984298279E-7	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999977152822616	WITHOUT_CLASSIFICATION	2.284717738551829E-6	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999998650678381	WITHOUT_CLASSIFICATION	1.3493216195356617E-7	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999990731096008	WITHOUT_CLASSIFICATION	9.26890399248995E-7	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999990731096008	WITHOUT_CLASSIFICATION	9.26890399248995E-7	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999996405047112	WITHOUT_CLASSIFICATION	3.5949528866651187E-7	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9979508200015691	WITHOUT_CLASSIFICATION	0.002049179998430822	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9979508200015691	WITHOUT_CLASSIFICATION	0.002049179998430822	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999918514467	WITHOUT_CLASSIFICATION	8.148553269087257E-9	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999938462355643	WITHOUT_CLASSIFICATION	6.153764435721861E-6	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999999010689	WITHOUT_CLASSIFICATION	9.893109156336987E-11	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999085792123712	WITHOUT_CLASSIFICATION	9.142078762883885E-5	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9995187297432994	WITHOUT_CLASSIFICATION	4.812702567006015E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999918613164	WITHOUT_CLASSIFICATION	8.138683528812177E-9	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9997935033159051	WITHOUT_CLASSIFICATION	2.064966840948909E-4	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999830230222893	WITHOUT_CLASSIFICATION	1.6976977710807397E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999994393819	WITHOUT_CLASSIFICATION	5.606180664163228E-10	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999979412024933	WITHOUT_CLASSIFICATION	2.058797506769327E-6	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999453949117	WITHOUT_CLASSIFICATION	5.4605088256932224E-8	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999808227051131	WITHOUT_CLASSIFICATION	1.9177294886882785E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999578028028063	WITHOUT_CLASSIFICATION	4.219719719371501E-5	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999787826106877	WITHOUT_CLASSIFICATION	2.1217389312351678E-5	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999998126394413	WITHOUT_CLASSIFICATION	1.8736055875927553E-7	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.6446726024170755	WITHOUT_CLASSIFICATION	0.35532739758292453	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999966169656858	WITHOUT_CLASSIFICATION	3.3830343143090165E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999691135034933	WITHOUT_CLASSIFICATION	3.088649650671832E-5	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999820621831	WITHOUT_CLASSIFICATION	1.7937816998796117E-8	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999080393760018	WITHOUT_CLASSIFICATION	9.196062399813387E-5	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999992982223187	WITHOUT_CLASSIFICATION	7.017776812610083E-7	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999988652218974	WITHOUT_CLASSIFICATION	1.1347781026223976E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999999781402628	WITHOUT_CLASSIFICATION	2.1859737142947835E-8	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9981240210082145	WITHOUT_CLASSIFICATION	0.0018759789917854048	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9998900193479245	WITHOUT_CLASSIFICATION	1.0998065207553964E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9979155770172184	WITHOUT_CLASSIFICATION	0.0020844229827815643	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999998449900945	WITHOUT_CLASSIFICATION	1.5500990549880806E-6	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999997879231421	WITHOUT_CLASSIFICATION	2.1207685793900533E-7	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.684409269971414	WITHOUT_CLASSIFICATION	0.31559073002858595	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999900223544712	WITHOUT_CLASSIFICATION	9.977645528815455E-6	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999791562444694	WITHOUT_CLASSIFICATION	2.0843755530646116E-5	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999995958429202	WITHOUT_CLASSIFICATION	4.0415707985301377E-7	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999996260516615	DESIGN	3.7394833862328257E-7	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999950171357652	WITHOUT_CLASSIFICATION	4.982864234787772E-6	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.999999865322554	WITHOUT_CLASSIFICATION	1.346774460712155E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9659432488738013	WITHOUT_CLASSIFICATION	0.034056751126198624	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999542480311138	WITHOUT_CLASSIFICATION	4.575196888617978E-5	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999981564183	WITHOUT_CLASSIFICATION	1.8435817773760621E-9	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999993419770301	WITHOUT_CLASSIFICATION	6.58022969776969E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9659432488738013	WITHOUT_CLASSIFICATION	0.034056751126198624	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999542480311138	WITHOUT_CLASSIFICATION	4.575196888617978E-5	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999999359342292	WITHOUT_CLASSIFICATION	6.406577072672872E-8	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999201525935584	WITHOUT_CLASSIFICATION	7.984740644165054E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999201525935584	WITHOUT_CLASSIFICATION	7.984740644165054E-5	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999999673502418	WITHOUT_CLASSIFICATION	3.2649758193710604E-7	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999553783735051	WITHOUT_CLASSIFICATION	4.462162649493287E-5	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999998126598447	WITHOUT_CLASSIFICATION	1.8734015541231043E-7	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999998799155047	WITHOUT_CLASSIFICATION	1.2008449529417857E-7	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9996273846330082	WITHOUT_CLASSIFICATION	3.726153669918665E-4	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9967905642567487	WITHOUT_CLASSIFICATION	0.003209435743251344	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999862972011179	WITHOUT_CLASSIFICATION	1.3702798882128934E-5	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999998802869153	WITHOUT_CLASSIFICATION	1.1971308464478768E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.999195589831274	WITHOUT_CLASSIFICATION	8.044101687259338E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999962976144446	WITHOUT_CLASSIFICATION	3.7023855554045486E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.999999094852798	WITHOUT_CLASSIFICATION	9.051472019894415E-7	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999958354940867	WITHOUT_CLASSIFICATION	4.164505913315121E-6	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.999999763330667	WITHOUT_CLASSIFICATION	2.3666933308742167E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998681193843	WITHOUT_CLASSIFICATION	1.3188061562429313E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998681193843	WITHOUT_CLASSIFICATION	1.3188061562429313E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999976624475728	WITHOUT_CLASSIFICATION	2.3375524271967855E-5	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999976624475728	WITHOUT_CLASSIFICATION	2.3375524271967855E-5	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999994319172802	WITHOUT_CLASSIFICATION	5.680827197769766E-7	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999938885307098	WITHOUT_CLASSIFICATION	6.111469290220324E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999919831607466	WITHOUT_CLASSIFICATION	8.01683925346568E-6	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999948882933071	WITHOUT_CLASSIFICATION	5.111706692926455E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999950338670032	WITHOUT_CLASSIFICATION	4.966132996849287E-6	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999999941762028	WITHOUT_CLASSIFICATION	5.823797263534307E-9	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999998126598447	WITHOUT_CLASSIFICATION	1.8734015541231043E-7	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999998799155047	WITHOUT_CLASSIFICATION	1.2008449529417857E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.999195589831274	WITHOUT_CLASSIFICATION	8.044101687259338E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999962976144446	WITHOUT_CLASSIFICATION	3.7023855554045486E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999977195368527	WITHOUT_CLASSIFICATION	2.2804631472301192E-6	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.999999994152255	WITHOUT_CLASSIFICATION	5.847744909598745E-9	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999778368375607	WITHOUT_CLASSIFICATION	2.2163162439259297E-5	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999991952232633	WITHOUT_CLASSIFICATION	8.047767365998049E-7	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999999721522244	WITHOUT_CLASSIFICATION	2.784777566746482E-8	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999885527420165	WITHOUT_CLASSIFICATION	1.1447257983506154E-5	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999729321634234	WITHOUT_CLASSIFICATION	2.7067836576524838E-5	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999994804112122	WITHOUT_CLASSIFICATION	5.195887877149335E-7	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999982379938243	WITHOUT_CLASSIFICATION	1.7620061757827034E-6	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.999881137380997	WITHOUT_CLASSIFICATION	1.1886261900300322E-4	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999225072802	WITHOUT_CLASSIFICATION	7.749271979336321E-8	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999997094214611	WITHOUT_CLASSIFICATION	2.905785389383893E-7	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.890494036752766	WITHOUT_CLASSIFICATION	0.10950596324723404	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998559275621031	WITHOUT_CLASSIFICATION	1.4407243789695958E-4	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.999979181846138	WITHOUT_CLASSIFICATION	2.0818153862083674E-5	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9998250436034511	WITHOUT_CLASSIFICATION	1.7495639654890497E-4	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999436620875665	WITHOUT_CLASSIFICATION	5.633791243347713E-5	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999350103824141	WITHOUT_CLASSIFICATION	6.498961758598518E-5	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999758162342075	WITHOUT_CLASSIFICATION	2.41837657924977E-4	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999988514375288	WITHOUT_CLASSIFICATION	1.1485624711844984E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999968631457559	WITHOUT_CLASSIFICATION	3.1368542440603486E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999968631457559	WITHOUT_CLASSIFICATION	3.1368542440603486E-6	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999998862352597	WITHOUT_CLASSIFICATION	1.1376474032761193E-7	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998658987402258	WITHOUT_CLASSIFICATION	1.3410125977419526E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999990391633018	WITHOUT_CLASSIFICATION	9.60836698113071E-7	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999926095958	WITHOUT_CLASSIFICATION	7.390404161525706E-9	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999926095958	WITHOUT_CLASSIFICATION	7.390404161525706E-9	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999778368375607	WITHOUT_CLASSIFICATION	2.2163162439259297E-5	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999996901911469	WITHOUT_CLASSIFICATION	3.0980885314098875E-7	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999584294597	WITHOUT_CLASSIFICATION	4.157054035784371E-8	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999990410172	WITHOUT_CLASSIFICATION	9.58982822391036E-10	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999983561879	WITHOUT_CLASSIFICATION	1.6438120230624206E-9	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999779476527	WITHOUT_CLASSIFICATION	2.2052347361779484E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988779123162704	WITHOUT_CLASSIFICATION	0.0011220876837295753	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999305925785	WITHOUT_CLASSIFICATION	6.940742151450487E-8	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999400178827921	WITHOUT_CLASSIFICATION	5.9982117207905E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999997707876749	WITHOUT_CLASSIFICATION	2.2921232520946885E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999953278226417	WITHOUT_CLASSIFICATION	4.672177358326829E-6	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9997846973048583	WITHOUT_CLASSIFICATION	2.153026951416995E-4	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999823347495929	WITHOUT_CLASSIFICATION	1.7665250407072032E-5	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999971496528683	WITHOUT_CLASSIFICATION	2.8503471317308256E-6	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9994381069213424	WITHOUT_CLASSIFICATION	5.618930786577183E-4	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999832787148504	WITHOUT_CLASSIFICATION	1.6721285149555746E-5	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.999877636567487	WITHOUT_CLASSIFICATION	1.2236343251298092E-4	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999871585892701	WITHOUT_CLASSIFICATION	1.2841410729898072E-5	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999989784349778	WITHOUT_CLASSIFICATION	1.0215650222843302E-6	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999999989647	WITHOUT_CLASSIFICATION	1.0352215524287285E-12	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999999999999941	WITHOUT_CLASSIFICATION	5.895084722018053E-14	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.999835714546234	WITHOUT_CLASSIFICATION	1.6428545376599986E-4	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9872214588718474	WITHOUT_CLASSIFICATION	0.012778541128152493	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999919345835087	WITHOUT_CLASSIFICATION	8.065416491255687E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999979930012	WITHOUT_CLASSIFICATION	2.006998815371092E-9	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999601375681	WITHOUT_CLASSIFICATION	3.9862431885710396E-8	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999918277808	WITHOUT_CLASSIFICATION	8.172219245044162E-9	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999998520057267	WITHOUT_CLASSIFICATION	1.4799427326944727E-7	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999948082546	WITHOUT_CLASSIFICATION	5.1917454035441945E-9	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999827541109259	WITHOUT_CLASSIFICATION	1.7245889074128322E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999976176404	WITHOUT_CLASSIFICATION	2.3823595969010467E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999976176404	WITHOUT_CLASSIFICATION	2.3823595969010467E-9	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999972534359501	WITHOUT_CLASSIFICATION	2.746564049830502E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999991911059251	WITHOUT_CLASSIFICATION	8.088940749061973E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999991911059251	WITHOUT_CLASSIFICATION	8.088940749061973E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999996237812888	WITHOUT_CLASSIFICATION	3.7621871116922194E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999996237812888	WITHOUT_CLASSIFICATION	3.7621871116922194E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999876900325865	WITHOUT_CLASSIFICATION	1.2309967413548765E-5	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999998720153953	WITHOUT_CLASSIFICATION	1.279846047329159E-7	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999945261035217	WITHOUT_CLASSIFICATION	5.473896478346401E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999929097461655	WITHOUT_CLASSIFICATION	7.0902538345091106E-6	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999847187428655	WITHOUT_CLASSIFICATION	1.528125713442335E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999980356579665	WITHOUT_CLASSIFICATION	1.9643420334116524E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999980356579665	WITHOUT_CLASSIFICATION	1.9643420334116524E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999979930012	WITHOUT_CLASSIFICATION	2.006998815371092E-9	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999979930012	WITHOUT_CLASSIFICATION	2.006998815371092E-9	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999979930012	WITHOUT_CLASSIFICATION	2.006998815371092E-9	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999601375681	WITHOUT_CLASSIFICATION	3.9862431885710396E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999976176404	WITHOUT_CLASSIFICATION	2.3823595969010467E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999976176404	WITHOUT_CLASSIFICATION	2.3823595969010467E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999976176404	WITHOUT_CLASSIFICATION	2.3823595969010467E-9	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999876900325865	WITHOUT_CLASSIFICATION	1.2309967413548765E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999876900325865	WITHOUT_CLASSIFICATION	1.2309967413548765E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999876900325865	WITHOUT_CLASSIFICATION	1.2309967413548765E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999929097461655	WITHOUT_CLASSIFICATION	7.0902538345091106E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999929097461655	WITHOUT_CLASSIFICATION	7.0902538345091106E-6	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999991987343099	WITHOUT_CLASSIFICATION	8.012656899819747E-7	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999446851535	WITHOUT_CLASSIFICATION	5.531484645969535E-8	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999998705910743	WITHOUT_CLASSIFICATION	1.294089256950822E-6	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999996927994277	DESIGN	3.07200572217634E-7	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.999261198467254	WITHOUT_CLASSIFICATION	7.388015327460364E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998957613679673	WITHOUT_CLASSIFICATION	1.0423863203267901E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998957613679673	WITHOUT_CLASSIFICATION	1.0423863203267901E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999977772382651	WITHOUT_CLASSIFICATION	2.2227617348404426E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988779123162704	WITHOUT_CLASSIFICATION	0.0011220876837295753	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988779123162704	WITHOUT_CLASSIFICATION	0.0011220876837295753	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988779123162704	WITHOUT_CLASSIFICATION	0.0011220876837295753	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988779123162704	WITHOUT_CLASSIFICATION	0.0011220876837295753	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988779123162704	WITHOUT_CLASSIFICATION	0.0011220876837295753	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999999284020127	WITHOUT_CLASSIFICATION	7.159798730167801E-7	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999999284020127	WITHOUT_CLASSIFICATION	7.159798730167801E-7	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999999284020127	WITHOUT_CLASSIFICATION	7.159798730167801E-7	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.999996229174485	WITHOUT_CLASSIFICATION	3.7708255150552446E-6	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999927795446302	WITHOUT_CLASSIFICATION	7.2204553698217456E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999601375681	WITHOUT_CLASSIFICATION	3.9862431885710396E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999876900325865	WITHOUT_CLASSIFICATION	1.2309967413548765E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999876900325865	WITHOUT_CLASSIFICATION	1.2309967413548765E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988779123162704	WITHOUT_CLASSIFICATION	0.0011220876837295753	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988779123162704	WITHOUT_CLASSIFICATION	0.0011220876837295753	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999999284020127	WITHOUT_CLASSIFICATION	7.159798730167801E-7	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999977772382651	WITHOUT_CLASSIFICATION	2.2227617348404426E-6	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.999999999656635	WITHOUT_CLASSIFICATION	3.433649833998581E-10	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999951313591628	WITHOUT_CLASSIFICATION	4.868640837112901E-6	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9913611097964751	WITHOUT_CLASSIFICATION	0.008638890203524955	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.99891164472335	WITHOUT_CLASSIFICATION	0.0010883552766500178	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999989560649503	WITHOUT_CLASSIFICATION	1.0439350497430017E-6	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999975845068527	WITHOUT_CLASSIFICATION	2.415493147251334E-6	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999784910469158	WITHOUT_CLASSIFICATION	2.1508953084215226E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9975173029762805	WITHOUT_CLASSIFICATION	0.002482697023719433	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999226945774423	WITHOUT_CLASSIFICATION	7.730542255765954E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999873362116483	WITHOUT_CLASSIFICATION	1.266378835170494E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9954757976849612	WITHOUT_CLASSIFICATION	0.004524202315038846	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999205842871	WITHOUT_CLASSIFICATION	7.941571292840788E-8	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9997550108238755	WITHOUT_CLASSIFICATION	2.449891761244486E-4	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.999999671572828	WITHOUT_CLASSIFICATION	3.2842717207193247E-7	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999988721003525	WITHOUT_CLASSIFICATION	1.1278996475417482E-6	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999988138510488	WITHOUT_CLASSIFICATION	1.1861489512074114E-6	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999690669413487	WITHOUT_CLASSIFICATION	3.093305865135192E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9995169301761381	WITHOUT_CLASSIFICATION	4.830698238619934E-4	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999177040773799	WITHOUT_CLASSIFICATION	8.229592262012866E-5	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.999999954692479	WITHOUT_CLASSIFICATION	4.530752106721912E-8	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999960326957233	WITHOUT_CLASSIFICATION	3.967304276604537E-6	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999787373917	WITHOUT_CLASSIFICATION	2.1262608325539217E-8	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999586600075	WITHOUT_CLASSIFICATION	4.133999249396699E-8	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999839506243698	WITHOUT_CLASSIFICATION	1.6049375630176423E-5	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999296276978944	WITHOUT_CLASSIFICATION	7.037230210564273E-5	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9981163154447164	WITHOUT_CLASSIFICATION	0.001883684555283741	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9999777645552768	WITHOUT_CLASSIFICATION	2.2235444723222078E-5	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999994111028	WITHOUT_CLASSIFICATION	5.888972301344626E-10	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999992961591737	WITHOUT_CLASSIFICATION	7.038408262126081E-7	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999995389426253	WITHOUT_CLASSIFICATION	4.6105737464325437E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999877596696	WITHOUT_CLASSIFICATION	1.224033040594985E-8	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999978620924	WITHOUT_CLASSIFICATION	2.1379076606345088E-9	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999997586558	WITHOUT_CLASSIFICATION	2.4134417228775517E-10	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999995287678	WITHOUT_CLASSIFICATION	4.712321317330051E-10	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.999999999656635	WITHOUT_CLASSIFICATION	3.433649833998581E-10	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999979931856	WITHOUT_CLASSIFICATION	2.006814408497912E-9	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999789527108905	WITHOUT_CLASSIFICATION	2.104728910947459E-5	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.8821074189629633	WITHOUT_CLASSIFICATION	0.11789258103703666	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9995120380136227	WITHOUT_CLASSIFICATION	4.879619863773602E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9995120380136227	WITHOUT_CLASSIFICATION	4.879619863773602E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999901523027014	WITHOUT_CLASSIFICATION	9.847697298566772E-6	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999901523027014	WITHOUT_CLASSIFICATION	9.847697298566772E-6	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999954325849	WITHOUT_CLASSIFICATION	4.567415044968397E-9	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999968980824822	WITHOUT_CLASSIFICATION	3.101917517948332E-6	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999193969314	WITHOUT_CLASSIFICATION	8.06030684406162E-8	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999996966623856	WITHOUT_CLASSIFICATION	3.0333761433314583E-7	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999798819519	WITHOUT_CLASSIFICATION	2.011804815528751E-8	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999395416802996	WITHOUT_CLASSIFICATION	6.045831970031578E-5	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999994134156692	WITHOUT_CLASSIFICATION	5.865843308154224E-7	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999998210561	WITHOUT_CLASSIFICATION	1.7894376477881092E-10	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999797413861266	WITHOUT_CLASSIFICATION	2.025861387348455E-5	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999957809496	WITHOUT_CLASSIFICATION	4.21905053247413E-9	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999997887759788	WITHOUT_CLASSIFICATION	2.1122402122162343E-7	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999999989067441	WITHOUT_CLASSIFICATION	1.0932559301896106E-9	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999999989067441	WITHOUT_CLASSIFICATION	1.0932559301896106E-9	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999941227163	WITHOUT_CLASSIFICATION	5.877283774710132E-9	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999933890794	WITHOUT_CLASSIFICATION	6.610920595136268E-9	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999965579772347	WITHOUT_CLASSIFICATION	3.4420227653116574E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999965579772347	WITHOUT_CLASSIFICATION	3.4420227653116574E-6	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999994939319372	WITHOUT_CLASSIFICATION	5.06068062749797E-7	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999998864300317	WITHOUT_CLASSIFICATION	1.1356996829627221E-7	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9992025313041466	WITHOUT_CLASSIFICATION	7.974686958534063E-4	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999987312424453	WITHOUT_CLASSIFICATION	1.2687575546941994E-6	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999318022674	WITHOUT_CLASSIFICATION	6.81977325686421E-8	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.996735693925993	WITHOUT_CLASSIFICATION	0.003264306074007099	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999480432578719	WITHOUT_CLASSIFICATION	5.195674212814564E-5	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999870271575861	WITHOUT_CLASSIFICATION	1.2972842413906884E-5	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999984523807184	WITHOUT_CLASSIFICATION	1.5476192815839195E-6	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999991074192858	WITHOUT_CLASSIFICATION	8.925807141762495E-7	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999995155965983	WITHOUT_CLASSIFICATION	4.844034016726172E-7	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999908403055504	WITHOUT_CLASSIFICATION	9.159694449606644E-6	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999999233320782	WITHOUT_CLASSIFICATION	7.66679217912642E-8	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999999873985631	WITHOUT_CLASSIFICATION	1.2601436891780707E-8	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999975263268	WITHOUT_CLASSIFICATION	2.4736731778107783E-9	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999998034814054	WITHOUT_CLASSIFICATION	1.9651859456667414E-7	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9997148533710543	WITHOUT_CLASSIFICATION	2.851466289457464E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9992147693696898	WITHOUT_CLASSIFICATION	7.852306303101807E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999731621002	WITHOUT_CLASSIFICATION	2.68378997824109E-8	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999973869135437	WITHOUT_CLASSIFICATION	2.6130864562537203E-6	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999769240113607	DESIGN	2.3075988639309977E-5	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999982471866495	WITHOUT_CLASSIFICATION	1.7528133505265048E-6	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.999999613626435	WITHOUT_CLASSIFICATION	3.863735650157522E-7	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999994211801959	WITHOUT_CLASSIFICATION	5.788198041301486E-7	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999429079219518	WITHOUT_CLASSIFICATION	5.709207804825893E-5	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9984970173687818	WITHOUT_CLASSIFICATION	0.0015029826312181005	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999994127932941	WITHOUT_CLASSIFICATION	5.872067059158534E-7	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999010542957355	WITHOUT_CLASSIFICATION	9.894570426453139E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9997969272052856	WITHOUT_CLASSIFICATION	2.030727947144544E-4	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999130696066	WITHOUT_CLASSIFICATION	8.693039338944069E-8	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999883323057	WITHOUT_CLASSIFICATION	1.1667694211557153E-8	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999995170618572	WITHOUT_CLASSIFICATION	4.829381428133663E-7	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999508356464	WITHOUT_CLASSIFICATION	4.916435352594724E-8	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999980689845968	WITHOUT_CLASSIFICATION	1.9310154032827556E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999980689845968	WITHOUT_CLASSIFICATION	1.9310154032827556E-6	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999888490337	WITHOUT_CLASSIFICATION	1.1150966300265923E-8	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999992562576341	WITHOUT_CLASSIFICATION	7.43742365935774E-7	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999988495568	WITHOUT_CLASSIFICATION	1.1504432207702465E-9	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999908814464883	WITHOUT_CLASSIFICATION	9.118553511689635E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999939061793678	WITHOUT_CLASSIFICATION	6.0938206321702006E-6	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9978944936626934	WITHOUT_CLASSIFICATION	0.0021055063373065655	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9821037996756399	WITHOUT_CLASSIFICATION	0.017896200324360186	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9960022285437737	WITHOUT_CLASSIFICATION	0.0039977714562262345	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9998371584392849	WITHOUT_CLASSIFICATION	1.6284156071515673E-4	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999900423046536	WITHOUT_CLASSIFICATION	9.957695346390648E-6	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9438300732428455	DESIGN	0.056169926757154445	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9998553422305062	WITHOUT_CLASSIFICATION	1.4465776949379772E-4	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999730333703687	WITHOUT_CLASSIFICATION	2.696662963129887E-5	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999828273150084	WITHOUT_CLASSIFICATION	1.7172684991532528E-5	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999980658579118	WITHOUT_CLASSIFICATION	1.9341420881967793E-6	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999920890742002	WITHOUT_CLASSIFICATION	7.910925799782169E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.998457044407225	WITHOUT_CLASSIFICATION	0.0015429555927749833	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9989401193752344	WITHOUT_CLASSIFICATION	0.0010598806247656327	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9958615160479732	WITHOUT_CLASSIFICATION	0.004138483952026787	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999254602594494	WITHOUT_CLASSIFICATION	7.453974055057282E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999998328234463	WITHOUT_CLASSIFICATION	1.6717655370613407E-6	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999890104817887	WITHOUT_CLASSIFICATION	1.0989518211267455E-5	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9799860202232522	WITHOUT_CLASSIFICATION	0.020013979776747827	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999273290770805	WITHOUT_CLASSIFICATION	7.267092291940729E-5	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9443382483386606	WITHOUT_CLASSIFICATION	0.05566175166133937	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999781768778455	WITHOUT_CLASSIFICATION	2.1823122154500447E-5	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999386794607	WITHOUT_CLASSIFICATION	6.132053932322517E-8	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999314956317	WITHOUT_CLASSIFICATION	6.850436827917371E-8	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9992311102072219	WITHOUT_CLASSIFICATION	7.68889792778046E-4	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999995720650712	WITHOUT_CLASSIFICATION	4.279349289064872E-7	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999995480191244	WITHOUT_CLASSIFICATION	4.519808756803924E-7	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999879528060686	WITHOUT_CLASSIFICATION	1.2047193931481249E-5	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999998470967215	WITHOUT_CLASSIFICATION	1.5290327852199277E-7	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999995898943299	WITHOUT_CLASSIFICATION	4.101056701564157E-7	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999971464309122	WITHOUT_CLASSIFICATION	2.8535690878646274E-6	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999077312255	WITHOUT_CLASSIFICATION	9.22687744863724E-8	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9957928025227173	WITHOUT_CLASSIFICATION	0.004207197477282669	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999963899093719	WITHOUT_CLASSIFICATION	3.610090628219481E-6	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999803308256577	WITHOUT_CLASSIFICATION	1.966917434230402E-5	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999991789900665	WITHOUT_CLASSIFICATION	8.210099333749564E-7	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999993152706699	WITHOUT_CLASSIFICATION	6.847293301312422E-7	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999992167314308	WITHOUT_CLASSIFICATION	7.832685693411028E-7	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999992167314308	WITHOUT_CLASSIFICATION	7.832685693411028E-7	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999983469490259	WITHOUT_CLASSIFICATION	1.6530509740740315E-6	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.999999986739367	WITHOUT_CLASSIFICATION	1.3260633126199463E-8	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999999443761051	WITHOUT_CLASSIFICATION	5.562389498949349E-8	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9995538138916051	WITHOUT_CLASSIFICATION	4.4618610839481634E-4	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999268687418226	WITHOUT_CLASSIFICATION	7.31312581773569E-5	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999997693002648	WITHOUT_CLASSIFICATION	2.306997352138735E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999774637676	WITHOUT_CLASSIFICATION	2.253623243252856E-8	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.7568712954467612	WITHOUT_CLASSIFICATION	0.24312870455323884	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9992305504554053	WITHOUT_CLASSIFICATION	7.694495445947788E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9997514013056114	WITHOUT_CLASSIFICATION	2.4859869438859084E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998206658067538	WITHOUT_CLASSIFICATION	1.7933419324612197E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999185073463	WITHOUT_CLASSIFICATION	8.149265379380088E-8	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9681461452736362	WITHOUT_CLASSIFICATION	0.0318538547263639	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999954104714798	WITHOUT_CLASSIFICATION	4.589528520150344E-6	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.999997535679305	WITHOUT_CLASSIFICATION	2.464320694972434E-6	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999192901300816	DESIGN	8.070986991840501E-5	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9960639380498953	WITHOUT_CLASSIFICATION	0.0039360619501046185	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999996775990915	WITHOUT_CLASSIFICATION	3.224009086073169E-7	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9995708099475926	WITHOUT_CLASSIFICATION	4.2919005240745276E-4	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999937337904988	DESIGN	6.266209501161864E-6	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9998971967001511	WITHOUT_CLASSIFICATION	1.0280329984893469E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999868240380948	WITHOUT_CLASSIFICATION	1.3175961905147514E-5	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999999340586	WITHOUT_CLASSIFICATION	6.5941360818672E-11	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999612364688668	WITHOUT_CLASSIFICATION	3.8763531133250636E-5	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998155815837	WITHOUT_CLASSIFICATION	1.8441841634159373E-7	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999969939112	WITHOUT_CLASSIFICATION	3.0060887268449642E-9	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999805566233899	WITHOUT_CLASSIFICATION	1.9443376610161734E-5	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999969129504357	WITHOUT_CLASSIFICATION	3.0870495642357484E-6	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999981033877	WITHOUT_CLASSIFICATION	1.896612342167724E-9	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999839163444021	WITHOUT_CLASSIFICATION	1.6083655597882106E-5	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999994388624	WITHOUT_CLASSIFICATION	5.611375722540895E-10	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999991744417593	WITHOUT_CLASSIFICATION	8.255582407261003E-7	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999839163444021	WITHOUT_CLASSIFICATION	1.6083655597882106E-5	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999972719306349	WITHOUT_CLASSIFICATION	2.7280693650594036E-6	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9998900193479245	WITHOUT_CLASSIFICATION	1.0998065207553964E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999968993146	WITHOUT_CLASSIFICATION	3.1006853008462803E-9	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9999185284626133	DESIGN	8.147153738676992E-5	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9998128663091108	WITHOUT_CLASSIFICATION	1.8713369088913393E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.8979230671034308	WITHOUT_CLASSIFICATION	0.10207693289656919	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.999976288593796	WITHOUT_CLASSIFICATION	2.371140620412394E-5	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.6333158119107534	WITHOUT_CLASSIFICATION	0.3666841880892466	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999553783735051	WITHOUT_CLASSIFICATION	4.462162649493287E-5	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999973869135437	WITHOUT_CLASSIFICATION	2.6130864562537203E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999998705910743	WITHOUT_CLASSIFICATION	1.294089256950822E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9215266956496941	WITHOUT_CLASSIFICATION	0.07847330435030594	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999991162439747	WITHOUT_CLASSIFICATION	8.837560253094748E-6	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999826428007401	WITHOUT_CLASSIFICATION	1.7357199259860575E-5	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999999951543667	WITHOUT_CLASSIFICATION	4.8456333254131504E-9	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999621870648747	WITHOUT_CLASSIFICATION	3.7812935125384594E-5	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9985384761318447	DESIGN	0.0014615238681553548	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9645039722440042	WITHOUT_CLASSIFICATION	0.03549602775599574	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.6693696468231458	DESIGN	0.33063035317685413	WITHOUT_CLASSIFICATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.999815887954382	WITHOUT_CLASSIFICATION	1.8411204561789645E-4	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.999999954965466	WITHOUT_CLASSIFICATION	4.5034534112753806E-8	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999538111620875	WITHOUT_CLASSIFICATION	4.6188837912434796E-5	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9998791510807471	WITHOUT_CLASSIFICATION	1.2084891925287866E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999985196765938	WITHOUT_CLASSIFICATION	1.4803234062074388E-6	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9989827253726647	WITHOUT_CLASSIFICATION	0.0010172746273352747	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999995395955922	WITHOUT_CLASSIFICATION	4.6040440775947596E-7	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999990268115053	WITHOUT_CLASSIFICATION	9.731884946385553E-7	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9998847745491491	WITHOUT_CLASSIFICATION	1.1522545085079867E-4	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999997756139	WITHOUT_CLASSIFICATION	2.2438602864903315E-10	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9855205880210921	DESIGN	0.01447941197890794	WITHOUT_CLASSIFICATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9855205880210921	DESIGN	0.01447941197890794	WITHOUT_CLASSIFICATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999995503863461	WITHOUT_CLASSIFICATION	4.4961365382188187E-7	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999983795193	WITHOUT_CLASSIFICATION	1.620480724262488E-9	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999993609417761	WITHOUT_CLASSIFICATION	6.390582237921955E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999841064543263	DESIGN	1.5893545673692607E-5	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999841064543263	DESIGN	1.5893545673692607E-5	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999841064543263	DESIGN	1.5893545673692607E-5	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999841064543263	DESIGN	1.5893545673692607E-5	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999987968528253	WITHOUT_CLASSIFICATION	1.2031471746482688E-6	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999996812183883	WITHOUT_CLASSIFICATION	3.187816116939675E-7	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.999999565016525	WITHOUT_CLASSIFICATION	4.349834751052621E-7	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999029838833262	DESIGN	9.701611667373597E-5	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997225081717	WITHOUT_CLASSIFICATION	2.7749182828923813E-7	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999988505837957	WITHOUT_CLASSIFICATION	1.1494162043281783E-6	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9971001046588814	WITHOUT_CLASSIFICATION	0.0028998953411185162	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9971001046588814	WITHOUT_CLASSIFICATION	0.0028998953411185162	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.660493820648084	DESIGN	0.339506179351916	WITHOUT_CLASSIFICATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999675850314061	WITHOUT_CLASSIFICATION	3.241496859395923E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9956217934280203	WITHOUT_CLASSIFICATION	0.004378206571979745	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999999993491794	WITHOUT_CLASSIFICATION	6.508205565211466E-10	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999998510440208	WITHOUT_CLASSIFICATION	1.4895597925450217E-7	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999998425602117	WITHOUT_CLASSIFICATION	1.5743978826364685E-7	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999993457918	WITHOUT_CLASSIFICATION	6.542082698396008E-10	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999996292839793	WITHOUT_CLASSIFICATION	3.7071602062962446E-7	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997471110470836	WITHOUT_CLASSIFICATION	2.5288895291644963E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997471110470836	WITHOUT_CLASSIFICATION	2.5288895291644963E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999991744417593	WITHOUT_CLASSIFICATION	8.255582407261003E-7	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999990412404549	WITHOUT_CLASSIFICATION	9.587595451454169E-7	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999993574296626	WITHOUT_CLASSIFICATION	6.42570337399234E-7	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9996367385900297	WITHOUT_CLASSIFICATION	3.632614099703524E-4	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999558469	WITHOUT_CLASSIFICATION	4.415321362994427E-11	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.999943999804807	WITHOUT_CLASSIFICATION	5.6000195192948575E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999997568798034	WITHOUT_CLASSIFICATION	2.4312019663278067E-7	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999606171952673	WITHOUT_CLASSIFICATION	3.938280473259125E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999991883829231	WITHOUT_CLASSIFICATION	8.116170768493258E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999991883829231	WITHOUT_CLASSIFICATION	8.116170768493258E-7	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9974763064347089	WITHOUT_CLASSIFICATION	0.0025236935652910354	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999999998123659	WITHOUT_CLASSIFICATION	1.8763409943433085E-9	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9998331492932164	WITHOUT_CLASSIFICATION	1.66850706783561E-4	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999988689427828	WITHOUT_CLASSIFICATION	1.1310572172011587E-5	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999980752851868	WITHOUT_CLASSIFICATION	1.924714813120057E-6	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999670901103968	WITHOUT_CLASSIFICATION	3.290988960318172E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9956342543083124	WITHOUT_CLASSIFICATION	0.00436574569168758	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999959762339564	WITHOUT_CLASSIFICATION	4.0237660436022354E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999959762339564	WITHOUT_CLASSIFICATION	4.0237660436022354E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999959762339564	WITHOUT_CLASSIFICATION	4.0237660436022354E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999959762339564	WITHOUT_CLASSIFICATION	4.0237660436022354E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999941925738798	WITHOUT_CLASSIFICATION	5.80742612010897E-6	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999911605	WITHOUT_CLASSIFICATION	8.839409942218196E-12	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.991438401529383	WITHOUT_CLASSIFICATION	0.008561598470616995	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999998712687571	WITHOUT_CLASSIFICATION	1.2873124293566954E-7	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.99999986100103	WITHOUT_CLASSIFICATION	1.389989700809798E-7	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999606413000065	WITHOUT_CLASSIFICATION	3.935869999355145E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999952982762826	WITHOUT_CLASSIFICATION	4.701723717377892E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999136659043	WITHOUT_CLASSIFICATION	8.6334095607271E-8	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999136659043	WITHOUT_CLASSIFICATION	8.6334095607271E-8	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999136659043	WITHOUT_CLASSIFICATION	8.6334095607271E-8	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999490915918	WITHOUT_CLASSIFICATION	5.090840822478634E-8	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9825618413670284	WITHOUT_CLASSIFICATION	0.01743815863297161	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999934411347	WITHOUT_CLASSIFICATION	6.558865292288086E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999934411347	WITHOUT_CLASSIFICATION	6.558865292288086E-8	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999982407728015	WITHOUT_CLASSIFICATION	1.7592271984627955E-6	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999987380721714	WITHOUT_CLASSIFICATION	1.26192782852658E-6	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999997735497	WITHOUT_CLASSIFICATION	2.2645038858570973E-10	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999605203027742	WITHOUT_CLASSIFICATION	3.947969722581272E-5	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999981102773	WITHOUT_CLASSIFICATION	1.8897227171511975E-9	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999907870305277	WITHOUT_CLASSIFICATION	9.212969472318927E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9962845788718185	WITHOUT_CLASSIFICATION	0.003715421128181484	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9962845788718185	WITHOUT_CLASSIFICATION	0.003715421128181484	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999964135321	WITHOUT_CLASSIFICATION	3.5864677530281875E-9	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999835088404643	WITHOUT_CLASSIFICATION	1.649115953571361E-5	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999998281400307	WITHOUT_CLASSIFICATION	1.7185996919267982E-7	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9995486520773098	WITHOUT_CLASSIFICATION	4.513479226901507E-4	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9998003374275641	WITHOUT_CLASSIFICATION	1.9966257243598295E-4	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999999880036	WITHOUT_CLASSIFICATION	1.1996320940959189E-11	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999996716715753	WITHOUT_CLASSIFICATION	3.283284246026845E-7	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997058476455992	WITHOUT_CLASSIFICATION	2.9415235440084813E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999998644891333	WITHOUT_CLASSIFICATION	1.355108666886133E-6	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999874172440344	WITHOUT_CLASSIFICATION	1.2582755965718392E-5	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999879334548	WITHOUT_CLASSIFICATION	1.206654520664379E-8	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999942260955	WITHOUT_CLASSIFICATION	5.7739045074608625E-9	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999980995202554	WITHOUT_CLASSIFICATION	1.9004797446025537E-5	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999999845156994	WITHOUT_CLASSIFICATION	1.548430055834729E-8	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999982728767501	WITHOUT_CLASSIFICATION	1.7271232499699011E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.964375449506473	WITHOUT_CLASSIFICATION	0.03562455049352691	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.999992898936552	WITHOUT_CLASSIFICATION	7.1010634479336155E-6	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999213089522	WITHOUT_CLASSIFICATION	7.869104783205975E-8	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999961395931863	WITHOUT_CLASSIFICATION	3.860406813639468E-6	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999998397285608	WITHOUT_CLASSIFICATION	1.6027143924956288E-7	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999993148813455	WITHOUT_CLASSIFICATION	6.851186545593245E-7	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999847356496417	WITHOUT_CLASSIFICATION	1.5264350358270992E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998884314965548	WITHOUT_CLASSIFICATION	1.1156850344509463E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998884314965548	WITHOUT_CLASSIFICATION	1.1156850344509463E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998884314965548	WITHOUT_CLASSIFICATION	1.1156850344509463E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998884314965548	WITHOUT_CLASSIFICATION	1.1156850344509463E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998884314965548	WITHOUT_CLASSIFICATION	1.1156850344509463E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998884314965548	WITHOUT_CLASSIFICATION	1.1156850344509463E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998884314965548	WITHOUT_CLASSIFICATION	1.1156850344509463E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998884314965548	WITHOUT_CLASSIFICATION	1.1156850344509463E-4	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999975100918802	WITHOUT_CLASSIFICATION	2.4899081198636797E-6	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999906715590592	WITHOUT_CLASSIFICATION	9.328440940824909E-6	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9989437694324551	WITHOUT_CLASSIFICATION	0.001056230567544852	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999993159518907	DESIGN	6.840481092515156E-7	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999774637676	WITHOUT_CLASSIFICATION	2.253623243252856E-8	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999774637676	WITHOUT_CLASSIFICATION	2.253623243252856E-8	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9961554464145987	WITHOUT_CLASSIFICATION	0.003844553585401266	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9779727465338727	WITHOUT_CLASSIFICATION	0.022027253466127345	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999862007425	WITHOUT_CLASSIFICATION	1.3799257519400219E-8	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999473393077	WITHOUT_CLASSIFICATION	5.2660692365603334E-8	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999655152286328	WITHOUT_CLASSIFICATION	3.448477136726052E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999998756620334	WITHOUT_CLASSIFICATION	1.2433796669346928E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999686631290532	WITHOUT_CLASSIFICATION	3.133687094670563E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.7130329374422404	DESIGN	0.28696706255775956	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999868665570614	WITHOUT_CLASSIFICATION	1.3133442938575845E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999892734014648	WITHOUT_CLASSIFICATION	1.0726598535243822E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999892734014648	WITHOUT_CLASSIFICATION	1.0726598535243822E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999892734014648	WITHOUT_CLASSIFICATION	1.0726598535243822E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9982751085246618	WITHOUT_CLASSIFICATION	0.0017248914753380828	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.999898827750998	WITHOUT_CLASSIFICATION	1.01172249001845E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999998989380114	WITHOUT_CLASSIFICATION	1.0106198859351489E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999453425909083	WITHOUT_CLASSIFICATION	5.465740909179424E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999943668898655	WITHOUT_CLASSIFICATION	5.633110134497941E-5	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999972679150234	WITHOUT_CLASSIFICATION	2.7320849765078875E-6	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999893033663329	WITHOUT_CLASSIFICATION	1.0696633667097021E-4	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.999998207888356	WITHOUT_CLASSIFICATION	1.7921116439521802E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999848245786641	WITHOUT_CLASSIFICATION	1.5175421335741564E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999848245786641	WITHOUT_CLASSIFICATION	1.5175421335741564E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999999454913685	WITHOUT_CLASSIFICATION	5.4508631456521907E-8	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999992918038655	WITHOUT_CLASSIFICATION	7.081961346502997E-7	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.999995166219449	WITHOUT_CLASSIFICATION	4.833780550939412E-6	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9998958814075716	WITHOUT_CLASSIFICATION	1.0411859242849425E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999995498262905	WITHOUT_CLASSIFICATION	4.501737095359285E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999995498262905	WITHOUT_CLASSIFICATION	4.501737095359285E-7	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9243730267235335	WITHOUT_CLASSIFICATION	0.07562697327646653	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999741916735	WITHOUT_CLASSIFICATION	2.5808326516490542E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999993212685776	WITHOUT_CLASSIFICATION	6.787314224107923E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9993396144819143	WITHOUT_CLASSIFICATION	6.603855180855815E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999797872970186	WITHOUT_CLASSIFICATION	2.0212702981403428E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999970147765977	WITHOUT_CLASSIFICATION	2.9852234022882354E-6	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999970147765977	WITHOUT_CLASSIFICATION	2.9852234022882354E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999428586822338	WITHOUT_CLASSIFICATION	5.714131776634499E-5	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999428586822338	WITHOUT_CLASSIFICATION	5.714131776634499E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999690327879742	WITHOUT_CLASSIFICATION	3.0967212025656665E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999984785107932	WITHOUT_CLASSIFICATION	1.5214892068000194E-6	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999998540251706	WITHOUT_CLASSIFICATION	1.4597482947780083E-7	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999962908963138	WITHOUT_CLASSIFICATION	3.7091036862675775E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999727566753966	WITHOUT_CLASSIFICATION	2.7243324603321507E-5	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999911302228545	WITHOUT_CLASSIFICATION	8.869777145478596E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999990697390255	WITHOUT_CLASSIFICATION	9.302609743467514E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999980356579665	WITHOUT_CLASSIFICATION	1.9643420334116524E-6	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999989599249258	WITHOUT_CLASSIFICATION	1.0400750740944827E-6	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999995756943	WITHOUT_CLASSIFICATION	4.243056787812209E-10	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.7423318997355564	DESIGN	0.2576681002644436	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9990016402787512	WITHOUT_CLASSIFICATION	9.983597212488164E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.999998617403788	WITHOUT_CLASSIFICATION	1.382596212041472E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999995701694427	WITHOUT_CLASSIFICATION	4.2983055727158014E-7	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999377325816913	WITHOUT_CLASSIFICATION	6.226741830866342E-5	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999695174472779	WITHOUT_CLASSIFICATION	3.048255272208861E-5	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999357510049898	WITHOUT_CLASSIFICATION	6.424899501026893E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999920635811	WITHOUT_CLASSIFICATION	7.936418818466946E-9	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999932205955	WITHOUT_CLASSIFICATION	6.779404473351722E-9	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999790121366092	WITHOUT_CLASSIFICATION	2.0987863390744337E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9215266956496941	WITHOUT_CLASSIFICATION	0.07847330435030594	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9994985137851069	WITHOUT_CLASSIFICATION	5.01486214893186E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999974066741152	WITHOUT_CLASSIFICATION	2.593325884801106E-6	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999972157231829	WITHOUT_CLASSIFICATION	2.7842768169964906E-6	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999951270898874	WITHOUT_CLASSIFICATION	4.872910112670189E-6	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9721690519608516	WITHOUT_CLASSIFICATION	0.027830948039148408	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999983694719168	WITHOUT_CLASSIFICATION	1.6305280831652115E-6	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.999725142600954	WITHOUT_CLASSIFICATION	2.7485739904602023E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999991174325245	WITHOUT_CLASSIFICATION	8.825674754668612E-7	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999979989999	WITHOUT_CLASSIFICATION	2.001000229679442E-9	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999999512028559	WITHOUT_CLASSIFICATION	4.879714415079354E-8	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999704960438204	WITHOUT_CLASSIFICATION	2.9503956179618965E-5	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999325478781738	WITHOUT_CLASSIFICATION	6.74521218262651E-5	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999971998041866	WITHOUT_CLASSIFICATION	2.800195813378186E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999650058468	WITHOUT_CLASSIFICATION	3.499415323894967E-8	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.7261678131645277	DESIGN	0.27383218683547234	WITHOUT_CLASSIFICATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999327567211	WITHOUT_CLASSIFICATION	6.724327890000549E-4	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.992634381554189	WITHOUT_CLASSIFICATION	0.007365618445810969	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9998848822455799	WITHOUT_CLASSIFICATION	1.1511775442003353E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999856855167228	WITHOUT_CLASSIFICATION	1.4314483277081572E-5	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.7168862921650504	WITHOUT_CLASSIFICATION	0.28311370783494966	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999919457872514	WITHOUT_CLASSIFICATION	8.054212748646646E-6	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999998870862308	WITHOUT_CLASSIFICATION	1.1291376919797996E-7	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999287135454	WITHOUT_CLASSIFICATION	7.128645460477712E-8	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999927051631892	WITHOUT_CLASSIFICATION	7.294836810833501E-6	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9993005563581093	WITHOUT_CLASSIFICATION	6.994436418906815E-4	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999723317789272	WITHOUT_CLASSIFICATION	2.766822107271286E-5	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999990142875	WITHOUT_CLASSIFICATION	9.85712585386655E-10	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999707987978	WITHOUT_CLASSIFICATION	2.920120219874163E-8	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999923193096	WITHOUT_CLASSIFICATION	7.680690407560198E-9	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9990782268558391	WITHOUT_CLASSIFICATION	9.217731441609614E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999978147728058	WITHOUT_CLASSIFICATION	2.1852271942311972E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999978147728058	WITHOUT_CLASSIFICATION	2.1852271942311972E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999996744754063	WITHOUT_CLASSIFICATION	3.255245937930566E-7	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999996744754063	WITHOUT_CLASSIFICATION	3.255245937930566E-7	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.985175444567047	DESIGN	0.014824555432953053	WITHOUT_CLASSIFICATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.985175444567047	DESIGN	0.014824555432953053	WITHOUT_CLASSIFICATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9994417056213718	WITHOUT_CLASSIFICATION	5.582943786281447E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9994417056213718	WITHOUT_CLASSIFICATION	5.582943786281447E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996718874329	WITHOUT_CLASSIFICATION	3.2811256705251783E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996718874329	WITHOUT_CLASSIFICATION	3.2811256705251783E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996718874329	WITHOUT_CLASSIFICATION	3.2811256705251783E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996718874329	WITHOUT_CLASSIFICATION	3.2811256705251783E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996718874329	WITHOUT_CLASSIFICATION	3.2811256705251783E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996718874329	WITHOUT_CLASSIFICATION	3.2811256705251783E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996718874329	WITHOUT_CLASSIFICATION	3.2811256705251783E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996718874329	WITHOUT_CLASSIFICATION	3.2811256705251783E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996718874329	WITHOUT_CLASSIFICATION	3.2811256705251783E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999987141201517	WITHOUT_CLASSIFICATION	1.2858798481629543E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999987141201517	WITHOUT_CLASSIFICATION	1.2858798481629543E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999987141201517	WITHOUT_CLASSIFICATION	1.2858798481629543E-6	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999503638457927	WITHOUT_CLASSIFICATION	4.963615420735417E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992546748688	WITHOUT_CLASSIFICATION	7.453251312381357E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992546748688	WITHOUT_CLASSIFICATION	7.453251312381357E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992546748688	WITHOUT_CLASSIFICATION	7.453251312381357E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999849059490502	WITHOUT_CLASSIFICATION	1.5094050949730025E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999849059490502	WITHOUT_CLASSIFICATION	1.5094050949730025E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999849059490502	WITHOUT_CLASSIFICATION	1.5094050949730025E-5	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999979269611	WITHOUT_CLASSIFICATION	2.0730388453583403E-9	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999991058641082	WITHOUT_CLASSIFICATION	8.941358916369526E-7	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9994451572241939	WITHOUT_CLASSIFICATION	5.548427758061723E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9988887623767307	WITHOUT_CLASSIFICATION	0.0011112376232693328	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9988887623767307	WITHOUT_CLASSIFICATION	0.0011112376232693328	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9988887623767307	WITHOUT_CLASSIFICATION	0.0011112376232693328	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9998484452233037	WITHOUT_CLASSIFICATION	1.5155477669629076E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999979852961399	WITHOUT_CLASSIFICATION	2.0147038600416105E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999979852961399	WITHOUT_CLASSIFICATION	2.0147038600416105E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999539418824566	WITHOUT_CLASSIFICATION	4.6058117543410626E-4	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9994950268497751	WITHOUT_CLASSIFICATION	5.049731502249814E-4	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9994950268497751	WITHOUT_CLASSIFICATION	5.049731502249814E-4	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9999108423555554	DESIGN	8.915764444472111E-5	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999998812735	WITHOUT_CLASSIFICATION	1.187265469213499E-10	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999804281356969	WITHOUT_CLASSIFICATION	1.9571864303195806E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999944856393	WITHOUT_CLASSIFICATION	5.514360690900448E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999944856393	WITHOUT_CLASSIFICATION	5.514360690900448E-9	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8309421384209648	DESIGN	0.1690578615790352	WITHOUT_CLASSIFICATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9735875179384196	WITHOUT_CLASSIFICATION	0.026412482061580447	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.8209374386816152	DESIGN	0.17906256131838486	WITHOUT_CLASSIFICATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.999667603969428	WITHOUT_CLASSIFICATION	3.3239603057196775E-4	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9784036761386024	WITHOUT_CLASSIFICATION	0.021596323861397704	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999944856393	WITHOUT_CLASSIFICATION	5.514360690900448E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999944856393	WITHOUT_CLASSIFICATION	5.514360690900448E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999944856393	WITHOUT_CLASSIFICATION	5.514360690900448E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999944856393	WITHOUT_CLASSIFICATION	5.514360690900448E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999944856393	WITHOUT_CLASSIFICATION	5.514360690900448E-9	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9998305072946982	WITHOUT_CLASSIFICATION	1.6949270530188274E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999955664313847	WITHOUT_CLASSIFICATION	4.433568615340795E-6	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999214252117767	WITHOUT_CLASSIFICATION	7.857478822325596E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999710874238	WITHOUT_CLASSIFICATION	2.8912576296868682E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999998629154345	WITHOUT_CLASSIFICATION	1.370845655367141E-7	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998831930746992	WITHOUT_CLASSIFICATION	1.1680692530087704E-4	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9473438732400217	WITHOUT_CLASSIFICATION	0.05265612675997834	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9962426287444269	WITHOUT_CLASSIFICATION	0.003757371255572997	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999662489403	WITHOUT_CLASSIFICATION	3.375105970227175E-8	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999986499342493	WITHOUT_CLASSIFICATION	1.3500657507121354E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999327958656	WITHOUT_CLASSIFICATION	6.720413446722335E-8	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999868240380948	WITHOUT_CLASSIFICATION	1.3175961905147514E-5	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9998913470510731	WITHOUT_CLASSIFICATION	1.0865294892698144E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999999950597866	WITHOUT_CLASSIFICATION	4.940213398491917E-8	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999830801867942	WITHOUT_CLASSIFICATION	1.691981320580251E-5	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999686092327559	WITHOUT_CLASSIFICATION	3.139076724408692E-5	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999987083675553	WITHOUT_CLASSIFICATION	1.2916324447416388E-6	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999949848541706	WITHOUT_CLASSIFICATION	5.015145829409599E-6	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999994085468545	WITHOUT_CLASSIFICATION	5.914531453654905E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999820738811	WITHOUT_CLASSIFICATION	1.792611892134138E-8	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9998954278573269	WITHOUT_CLASSIFICATION	1.0457214267308853E-4	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999869731707794	WITHOUT_CLASSIFICATION	1.3026829220477423E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9997514013056114	WITHOUT_CLASSIFICATION	2.4859869438859084E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995045772081	WITHOUT_CLASSIFICATION	4.954227919268542E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995045772081	WITHOUT_CLASSIFICATION	4.954227919268542E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995045772081	WITHOUT_CLASSIFICATION	4.954227919268542E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995045772081	WITHOUT_CLASSIFICATION	4.954227919268542E-7	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999825894244853	WITHOUT_CLASSIFICATION	1.741057551467644E-5	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999988661293232	WITHOUT_CLASSIFICATION	1.1338706767100086E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999991439077757	WITHOUT_CLASSIFICATION	8.560922244319848E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999991439077757	WITHOUT_CLASSIFICATION	8.560922244319848E-7	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999932864797696	WITHOUT_CLASSIFICATION	6.713520230471168E-6	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999996597851708	WITHOUT_CLASSIFICATION	3.4021482921036564E-6	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999875807214	WITHOUT_CLASSIFICATION	1.2419278582519943E-8	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999990840747528	WITHOUT_CLASSIFICATION	9.159252471972351E-6	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999281882771475	WITHOUT_CLASSIFICATION	7.181172285258783E-5	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.999999371910547	WITHOUT_CLASSIFICATION	6.280894530119672E-7	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.999999850121026	WITHOUT_CLASSIFICATION	1.4987897412827417E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.99993239134931	WITHOUT_CLASSIFICATION	6.760865069004612E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.99993239134931	WITHOUT_CLASSIFICATION	6.760865069004612E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.99993239134931	WITHOUT_CLASSIFICATION	6.760865069004612E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.99993239134931	WITHOUT_CLASSIFICATION	6.760865069004612E-5	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999647800390926	WITHOUT_CLASSIFICATION	3.5219960907293394E-5	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9987616890484293	WITHOUT_CLASSIFICATION	0.0012383109515706797	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9987616890484293	WITHOUT_CLASSIFICATION	0.0012383109515706797	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9987616890484293	WITHOUT_CLASSIFICATION	0.0012383109515706797	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999940271555293	WITHOUT_CLASSIFICATION	5.972844470617949E-6	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9997302956479471	WITHOUT_CLASSIFICATION	2.697043520528339E-4	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999020360710722	WITHOUT_CLASSIFICATION	9.796392892771797E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999841064543263	DESIGN	1.5893545673692607E-5	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999841064543263	DESIGN	1.5893545673692607E-5	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999968594144	WITHOUT_CLASSIFICATION	3.1405855968211284E-9	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9418312820435413	WITHOUT_CLASSIFICATION	0.05816871795645874	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999796455761027	WITHOUT_CLASSIFICATION	2.035442389714822E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999796455761027	WITHOUT_CLASSIFICATION	2.035442389714822E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9979771518668131	WITHOUT_CLASSIFICATION	0.002022848133186799	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9979771518668131	WITHOUT_CLASSIFICATION	0.002022848133186799	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.999999996199395	WITHOUT_CLASSIFICATION	3.800605113215829E-9	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9973159769489355	WITHOUT_CLASSIFICATION	0.0026840230510646198	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999991842228754	WITHOUT_CLASSIFICATION	8.157771246701477E-7	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999988653691402	WITHOUT_CLASSIFICATION	1.1346308597807337E-6	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998493008505	WITHOUT_CLASSIFICATION	1.5069914953251133E-7	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999887987120405	WITHOUT_CLASSIFICATION	1.1201287959385773E-5	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999959576531678	WITHOUT_CLASSIFICATION	4.04234683207538E-6	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9414161904900233	DESIGN	0.058583809509976735	WITHOUT_CLASSIFICATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999968144353	WITHOUT_CLASSIFICATION	3.1855645624901176E-9	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999989832081247	WITHOUT_CLASSIFICATION	1.0167918752570557E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999989832081247	WITHOUT_CLASSIFICATION	1.0167918752570557E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999985439165274	WITHOUT_CLASSIFICATION	1.4560834726892848E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999985439165274	WITHOUT_CLASSIFICATION	1.4560834726892848E-6	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.999998002567036	WITHOUT_CLASSIFICATION	1.9974329639499068E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998841564339	WITHOUT_CLASSIFICATION	1.1584356603266993E-7	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999982963960466	WITHOUT_CLASSIFICATION	1.703603953403735E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997058761639	WITHOUT_CLASSIFICATION	2.9412383599767853E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997058761639	WITHOUT_CLASSIFICATION	2.9412383599767853E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997058761639	WITHOUT_CLASSIFICATION	2.9412383599767853E-7	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999995929936811	WITHOUT_CLASSIFICATION	4.0700631891932305E-7	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999986026170892	WITHOUT_CLASSIFICATION	1.3973829108874292E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999991697692713	WITHOUT_CLASSIFICATION	8.302307286440041E-7	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999994183846573	WITHOUT_CLASSIFICATION	5.816153427727941E-7	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999984619113134	WITHOUT_CLASSIFICATION	1.5380886866139299E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999984838241598	WITHOUT_CLASSIFICATION	1.5161758402062775E-6	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999993354979044	WITHOUT_CLASSIFICATION	6.645020954841454E-7	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999997681508517	WITHOUT_CLASSIFICATION	2.3184914837197402E-7	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999073407299606	WITHOUT_CLASSIFICATION	9.265927003947205E-5	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999589333994977	WITHOUT_CLASSIFICATION	4.106660050226355E-5	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.98778002760075	WITHOUT_CLASSIFICATION	0.012219972399249903	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999997836604244	WITHOUT_CLASSIFICATION	2.1633957559353026E-7	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999996094068772	WITHOUT_CLASSIFICATION	3.90593122788857E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999841064543263	DESIGN	1.5893545673692607E-5	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9853388348047369	WITHOUT_CLASSIFICATION	0.014661165195263094	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9210543426212966	WITHOUT_CLASSIFICATION	0.07894565737870345	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9855205880210921	DESIGN	0.01447941197890794	WITHOUT_CLASSIFICATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998663432152505	WITHOUT_CLASSIFICATION	1.336567847495297E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998663432152505	WITHOUT_CLASSIFICATION	1.336567847495297E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998663432152505	WITHOUT_CLASSIFICATION	1.336567847495297E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998663432152505	WITHOUT_CLASSIFICATION	1.336567847495297E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998663432152505	WITHOUT_CLASSIFICATION	1.336567847495297E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999207289466874	WITHOUT_CLASSIFICATION	7.927105331257845E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998663432152505	WITHOUT_CLASSIFICATION	1.336567847495297E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998663432152505	WITHOUT_CLASSIFICATION	1.336567847495297E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998663432152505	WITHOUT_CLASSIFICATION	1.336567847495297E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999944201862713	WITHOUT_CLASSIFICATION	5.579813728726338E-6	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9976892290786735	WITHOUT_CLASSIFICATION	0.002310770921326513	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.999999999719146	WITHOUT_CLASSIFICATION	2.8085409135708315E-10	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.5671328906839473	WITHOUT_CLASSIFICATION	0.43286710931605255	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999997395682098	WITHOUT_CLASSIFICATION	2.6043179022556783E-7	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9987243040101145	WITHOUT_CLASSIFICATION	0.0012756959898855534	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9998082226287404	WITHOUT_CLASSIFICATION	1.9177737125964942E-4	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999994404039158	WITHOUT_CLASSIFICATION	5.595960841788085E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999995346029965	WITHOUT_CLASSIFICATION	4.6539700341317103E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999995346029965	WITHOUT_CLASSIFICATION	4.6539700341317103E-7	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999995814968333	WITHOUT_CLASSIFICATION	4.18503166624388E-7	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999987531253248	WITHOUT_CLASSIFICATION	1.2468746751865323E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999992011224609	WITHOUT_CLASSIFICATION	7.988775391690087E-7	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999992643502951	WITHOUT_CLASSIFICATION	7.356497049213745E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999993535259522	WITHOUT_CLASSIFICATION	6.464740479264824E-7	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999991867175897	WITHOUT_CLASSIFICATION	8.13282410329533E-7	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999979258933345	WITHOUT_CLASSIFICATION	2.0741066655140195E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999993189473462	WITHOUT_CLASSIFICATION	6.810526538114346E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999986562085665	WITHOUT_CLASSIFICATION	1.3437914334813763E-6	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999995027509149	WITHOUT_CLASSIFICATION	4.972490852166246E-7	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999997884056726	WITHOUT_CLASSIFICATION	2.1159432747724547E-7	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999996736549487	WITHOUT_CLASSIFICATION	3.2634505135221303E-7	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999987960092845	WITHOUT_CLASSIFICATION	1.203990715503921E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999994387147707	WITHOUT_CLASSIFICATION	5.612852292154922E-7	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999991049900739	WITHOUT_CLASSIFICATION	8.950099260641743E-7	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999986172073559	WITHOUT_CLASSIFICATION	1.3827926439990858E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999986514722157	WITHOUT_CLASSIFICATION	1.3485277843760514E-6	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999992984491216	WITHOUT_CLASSIFICATION	7.015508784893767E-7	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999994780383141	WITHOUT_CLASSIFICATION	5.219616858506829E-7	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999996074722372	WITHOUT_CLASSIFICATION	3.925277628353496E-7	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999993631621396	WITHOUT_CLASSIFICATION	6.368378605591498E-7	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999994833687766	WITHOUT_CLASSIFICATION	5.166312233006905E-7	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999992935021059	WITHOUT_CLASSIFICATION	7.064978940496504E-7	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.999999670817466	WITHOUT_CLASSIFICATION	3.291825339889596E-7	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999996954608188	WITHOUT_CLASSIFICATION	3.045391811534148E-7	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999997289067186	WITHOUT_CLASSIFICATION	2.7109328139021576E-7	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999995373207757	WITHOUT_CLASSIFICATION	4.626792242625882E-7	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999998371649073	WITHOUT_CLASSIFICATION	1.6283509272404324E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999996354800464	WITHOUT_CLASSIFICATION	3.6451995350728245E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.999999740831687	WITHOUT_CLASSIFICATION	2.591683130394909E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999997071927789	WITHOUT_CLASSIFICATION	2.92807221132639E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999991379701354	WITHOUT_CLASSIFICATION	8.620298646697572E-7	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999995667996014	WITHOUT_CLASSIFICATION	4.332003986190261E-7	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999991169451663	WITHOUT_CLASSIFICATION	8.830548336988141E-7	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999998282420334	WITHOUT_CLASSIFICATION	1.717579666888998E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999998761828663	WITHOUT_CLASSIFICATION	1.2381713373477682E-7	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999997400729811	WITHOUT_CLASSIFICATION	2.599270188931664E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999996844320767	WITHOUT_CLASSIFICATION	3.155679233560185E-7	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999998037555938	WITHOUT_CLASSIFICATION	1.962444061571651E-7	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.999999699334054	WITHOUT_CLASSIFICATION	3.006659460497871E-7	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999994583771753	WITHOUT_CLASSIFICATION	5.416228247829569E-7	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999998289745509	WITHOUT_CLASSIFICATION	1.710254491479499E-7	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999997551292957	WITHOUT_CLASSIFICATION	2.44870704210821E-7	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999990575841307	WITHOUT_CLASSIFICATION	9.42415869454393E-7	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999994278197913	WITHOUT_CLASSIFICATION	5.721802086924724E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999995052105031	WITHOUT_CLASSIFICATION	4.947894969974023E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999993512831907	WITHOUT_CLASSIFICATION	6.48716809341074E-7	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999992095173159	WITHOUT_CLASSIFICATION	7.904826840948807E-7	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999997576667403	WITHOUT_CLASSIFICATION	2.423332596919996E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999994077326695	WITHOUT_CLASSIFICATION	5.922673304443231E-7	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999997137667365	WITHOUT_CLASSIFICATION	2.862332635660021E-7	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.999999778753858	WITHOUT_CLASSIFICATION	2.2124614193981506E-7	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999998606075279	WITHOUT_CLASSIFICATION	1.3939247209178282E-7	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999992426135524	WITHOUT_CLASSIFICATION	7.573864475913557E-7	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999992426135524	WITHOUT_CLASSIFICATION	7.573864475913557E-7	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999991817759263	WITHOUT_CLASSIFICATION	8.18224073765893E-7	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.999999787702201	WITHOUT_CLASSIFICATION	2.1229779905503316E-7	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999990478061039	WITHOUT_CLASSIFICATION	9.521938961659041E-7	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999996574475508	WITHOUT_CLASSIFICATION	3.4255244920370565E-7	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999993240380319	WITHOUT_CLASSIFICATION	6.759619680078556E-7	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999996581816389	WITHOUT_CLASSIFICATION	3.418183610160953E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999986417769593	WITHOUT_CLASSIFICATION	1.3582230406670839E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999994309355597	WITHOUT_CLASSIFICATION	5.690644403161495E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999996240192796	WITHOUT_CLASSIFICATION	3.7598072051448996E-7	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999995236420989	WITHOUT_CLASSIFICATION	4.763579011220304E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999996012172494	WITHOUT_CLASSIFICATION	3.9878275058503327E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999996012172494	WITHOUT_CLASSIFICATION	3.9878275058503327E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999866525171399	WITHOUT_CLASSIFICATION	1.3347482859995002E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999910841404598	WITHOUT_CLASSIFICATION	8.915859540209638E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9993998350640602	WITHOUT_CLASSIFICATION	6.001649359398999E-4	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999470482003	WITHOUT_CLASSIFICATION	5.295179969793133E-8	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999704374179605	WITHOUT_CLASSIFICATION	2.956258203951658E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999704374179605	WITHOUT_CLASSIFICATION	2.956258203951658E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999704374179605	WITHOUT_CLASSIFICATION	2.956258203951658E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999704374179605	WITHOUT_CLASSIFICATION	2.956258203951658E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9745108610736086	DESIGN	0.025489138926391354	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9157355856856032	WITHOUT_CLASSIFICATION	0.08426441431439681	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9999991861196892	WITHOUT_CLASSIFICATION	8.138803107200401E-7	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999985299328021	WITHOUT_CLASSIFICATION	1.4700671978941486E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999993039040835	WITHOUT_CLASSIFICATION	6.960959164023322E-7	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.999999380120005	WITHOUT_CLASSIFICATION	6.198799948761639E-7	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999996774398595	WITHOUT_CLASSIFICATION	3.225601404826656E-7	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999995986487209	WITHOUT_CLASSIFICATION	4.013512790626109E-7	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999993128891107	WITHOUT_CLASSIFICATION	6.871108892638289E-7	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999993061103343	WITHOUT_CLASSIFICATION	6.938896657711019E-7	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999986648880489	WITHOUT_CLASSIFICATION	1.335111951142366E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999996626727315	WITHOUT_CLASSIFICATION	3.3732726847866023E-7	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999991938787574	WITHOUT_CLASSIFICATION	8.061212427300677E-7	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999975401483049	WITHOUT_CLASSIFICATION	2.4598516950822585E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999984569865362	WITHOUT_CLASSIFICATION	1.543013463838798E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999988438169909	WITHOUT_CLASSIFICATION	1.156183009054847E-6	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999977545464374	WITHOUT_CLASSIFICATION	2.245453562628764E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999994876346361	WITHOUT_CLASSIFICATION	5.123653638693826E-7	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999995760126054	WITHOUT_CLASSIFICATION	4.2398739467410026E-7	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999993824530033	WITHOUT_CLASSIFICATION	6.17546996693111E-7	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999996256734462	WITHOUT_CLASSIFICATION	3.7432655378678464E-7	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999994378954327	WITHOUT_CLASSIFICATION	5.621045672290071E-7	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999996288762053	WITHOUT_CLASSIFICATION	3.7112379475125793E-7	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.999999339302764	WITHOUT_CLASSIFICATION	6.606972360599765E-7	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.999999481670279	WITHOUT_CLASSIFICATION	5.183297210429626E-7	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999996400807953	WITHOUT_CLASSIFICATION	3.599192047644413E-7	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999998146030475	WITHOUT_CLASSIFICATION	1.8539695242248925E-7	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999997823537649	WITHOUT_CLASSIFICATION	2.1764623506807243E-7	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999997399870907	WITHOUT_CLASSIFICATION	2.6001290935706295E-7	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999988015144885	WITHOUT_CLASSIFICATION	1.198485511558271E-6	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999994127307725	WITHOUT_CLASSIFICATION	5.8726922740973E-7	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999997505860291	WITHOUT_CLASSIFICATION	2.4941397087354683E-7	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999997742591256	WITHOUT_CLASSIFICATION	2.2574087452966087E-7	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999996329655648	WITHOUT_CLASSIFICATION	3.670344350927456E-7	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999997146328179	WITHOUT_CLASSIFICATION	2.8536718212084737E-7	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999996090931257	WITHOUT_CLASSIFICATION	3.9090687441879907E-7	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999992108520881	WITHOUT_CLASSIFICATION	7.891479120158587E-7	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999991218199323	WITHOUT_CLASSIFICATION	8.781800675507572E-7	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999996878273707	WITHOUT_CLASSIFICATION	3.121726293065496E-7	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999993705187331	WITHOUT_CLASSIFICATION	6.294812668379652E-7	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999998720389272	WITHOUT_CLASSIFICATION	1.2796107292473653E-7	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999992261514019	WITHOUT_CLASSIFICATION	7.738485981032983E-7	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999990089967823	WITHOUT_CLASSIFICATION	9.910032176835E-7	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999994670708942	WITHOUT_CLASSIFICATION	5.329291057907512E-7	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999996254938596	WITHOUT_CLASSIFICATION	3.7450614046009714E-7	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999994034506656	WITHOUT_CLASSIFICATION	5.965493343424253E-7	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999990338856043	WITHOUT_CLASSIFICATION	9.661143956274144E-7	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999988914398259	WITHOUT_CLASSIFICATION	1.1085601741984518E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999997851742877	WITHOUT_CLASSIFICATION	2.14825712368185E-7	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999993337252472	WITHOUT_CLASSIFICATION	6.662747527931849E-7	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.999999016626144	WITHOUT_CLASSIFICATION	9.833738560306247E-7	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999992714208218	WITHOUT_CLASSIFICATION	7.285791783342651E-7	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999998515472591	WITHOUT_CLASSIFICATION	1.4845274097055724E-7	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.999999551057783	WITHOUT_CLASSIFICATION	4.489422169485319E-7	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999997581529185	WITHOUT_CLASSIFICATION	2.418470815250763E-7	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999998188964242	WITHOUT_CLASSIFICATION	1.8110357591503317E-7	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999997825731706	WITHOUT_CLASSIFICATION	2.1742682939700013E-7	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999997446499542	WITHOUT_CLASSIFICATION	2.553500457523931E-7	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999998255697574	WITHOUT_CLASSIFICATION	1.7443024266772445E-7	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9993296868992646	WITHOUT_CLASSIFICATION	6.703131007352732E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999954710414221	WITHOUT_CLASSIFICATION	4.528958578004069E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9996600992002974	WITHOUT_CLASSIFICATION	3.399007997026318E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9996600992002974	WITHOUT_CLASSIFICATION	3.399007997026318E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9996600992002974	WITHOUT_CLASSIFICATION	3.399007997026318E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9996600992002974	WITHOUT_CLASSIFICATION	3.399007997026318E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9996600992002974	WITHOUT_CLASSIFICATION	3.399007997026318E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9996600992002974	WITHOUT_CLASSIFICATION	3.399007997026318E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9996600992002974	WITHOUT_CLASSIFICATION	3.399007997026318E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999997947195616	WITHOUT_CLASSIFICATION	2.0528043851231708E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999997947195616	WITHOUT_CLASSIFICATION	2.0528043851231708E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999997947195616	WITHOUT_CLASSIFICATION	2.0528043851231708E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999997947195616	WITHOUT_CLASSIFICATION	2.0528043851231708E-7	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998933520953474	WITHOUT_CLASSIFICATION	1.0664790465265766E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998933520953474	WITHOUT_CLASSIFICATION	1.0664790465265766E-4	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999855483089	WITHOUT_CLASSIFICATION	1.4451691093760625E-8	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999972598147461	WITHOUT_CLASSIFICATION	2.740185253935461E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999972598147461	WITHOUT_CLASSIFICATION	2.740185253935461E-6	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9910370397753125	WITHOUT_CLASSIFICATION	0.008962960224687495	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9998556757466075	WITHOUT_CLASSIFICATION	1.4432425339254646E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999916908616638	WITHOUT_CLASSIFICATION	8.30913833621603E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999916908616638	WITHOUT_CLASSIFICATION	8.30913833621603E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999916908616638	WITHOUT_CLASSIFICATION	8.30913833621603E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999916908616638	WITHOUT_CLASSIFICATION	8.30913833621603E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999916908616638	WITHOUT_CLASSIFICATION	8.30913833621603E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999916908616638	WITHOUT_CLASSIFICATION	8.30913833621603E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999916908616638	WITHOUT_CLASSIFICATION	8.30913833621603E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961026986617	WITHOUT_CLASSIFICATION	3.897301338303643E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999831644751235	WITHOUT_CLASSIFICATION	1.6835524876506405E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999538383995	WITHOUT_CLASSIFICATION	4.61616005922601E-8	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999538383995	WITHOUT_CLASSIFICATION	4.61616005922601E-8	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999831373401501	WITHOUT_CLASSIFICATION	1.6862659849893155E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999881088025822	WITHOUT_CLASSIFICATION	1.189119741781949E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999881088025822	WITHOUT_CLASSIFICATION	1.189119741781949E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999976958038	WITHOUT_CLASSIFICATION	2.304196118402468E-9	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999989233329	DESIGN	1.0766671217837173E-9	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999211443455104	WITHOUT_CLASSIFICATION	7.885565448958491E-5	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9977041306793761	WITHOUT_CLASSIFICATION	0.002295869320623957	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999718709947805	WITHOUT_CLASSIFICATION	2.8129005219545883E-5	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999922708748336	WITHOUT_CLASSIFICATION	7.72912516641144E-6	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999999663889501	WITHOUT_CLASSIFICATION	3.361104993939411E-8	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.999999947823369	WITHOUT_CLASSIFICATION	5.217663098855692E-8	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999998650678381	WITHOUT_CLASSIFICATION	1.3493216195356617E-7	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9991369314539238	WITHOUT_CLASSIFICATION	8.630685460762192E-4	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9921421817042018	WITHOUT_CLASSIFICATION	0.00785781829579821	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999933837214559	WITHOUT_CLASSIFICATION	6.616278544144754E-6	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998713750126	WITHOUT_CLASSIFICATION	1.286249874272419E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.6752683505162738	WITHOUT_CLASSIFICATION	0.3247316494837263	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999999673502418	WITHOUT_CLASSIFICATION	3.2649758193710604E-7	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999979691866961	WITHOUT_CLASSIFICATION	2.0308133039083113E-6	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999632892493	WITHOUT_CLASSIFICATION	3.6710750540514266E-8	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9996273846330082	WITHOUT_CLASSIFICATION	3.726153669918665E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.999195589831274	WITHOUT_CLASSIFICATION	8.044101687259338E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.999195589831274	WITHOUT_CLASSIFICATION	8.044101687259338E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998861358802976	WITHOUT_CLASSIFICATION	1.1386411970241625E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999976176404	WITHOUT_CLASSIFICATION	2.3823595969010467E-9	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999910195913	WITHOUT_CLASSIFICATION	8.980408814875409E-9	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988779123162704	WITHOUT_CLASSIFICATION	0.0011220876837295753	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999784910469158	WITHOUT_CLASSIFICATION	2.1508953084215226E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999784910469158	WITHOUT_CLASSIFICATION	2.1508953084215226E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999784910469158	WITHOUT_CLASSIFICATION	2.1508953084215226E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9954757976849612	WITHOUT_CLASSIFICATION	0.004524202315038846	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999960326957233	WITHOUT_CLASSIFICATION	3.967304276604537E-6	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999933137767231	WITHOUT_CLASSIFICATION	6.686223276967239E-6	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999979007350086	WITHOUT_CLASSIFICATION	2.099264991354822E-6	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.999965286602626	WITHOUT_CLASSIFICATION	3.4713397374115564E-5	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999999997664	WITHOUT_CLASSIFICATION	2.3363390020061797E-13	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.999999999993517	WITHOUT_CLASSIFICATION	6.483071678544456E-12	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999957809496	WITHOUT_CLASSIFICATION	4.21905053247413E-9	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999797413861266	WITHOUT_CLASSIFICATION	2.025861387348455E-5	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999999584123993	WITHOUT_CLASSIFICATION	4.1587600827949937E-8	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.999997819411415	WITHOUT_CLASSIFICATION	2.1805885849346373E-6	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999995463763705	WITHOUT_CLASSIFICATION	4.536236295070612E-6	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999769240113607	DESIGN	2.3075988639309977E-5	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9381500734134365	WITHOUT_CLASSIFICATION	0.061849926586563464	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999997386711513	WITHOUT_CLASSIFICATION	2.613288487022391E-7	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999741429	WITHOUT_CLASSIFICATION	2.5857119779995128E-11	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9982078857753389	WITHOUT_CLASSIFICATION	0.001792114224661124	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999995480191244	WITHOUT_CLASSIFICATION	4.519808756803924E-7	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999649797258361	WITHOUT_CLASSIFICATION	3.5020274163905825E-5	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.5335764441088076	WITHOUT_CLASSIFICATION	0.46642355589119244	DESIGN
// FIXME: move out of this class!	DESIGN	0.9992378237320182	DESIGN	7.621762679818298E-4	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9999999220374616	DESIGN	7.796253842604796E-8	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9998250142484241	DESIGN	1.749857515759203E-4	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9999411039397254	DESIGN	5.88960602747239E-5	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.9988819188543235	DESIGN	0.001118081145676531	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.999995661521216	DESIGN	4.33847878398419E-6	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.8569713001720576	WITHOUT_CLASSIFICATION	0.1430286998279424	DESIGN
// we might need to perform a DST correction	DESIGN	0.999993113779816	WITHOUT_CLASSIFICATION	6.886220184016441E-6	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9988365950732091	WITHOUT_CLASSIFICATION	0.00116340492679089	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9999982004855229	DESIGN	1.799514477060735E-6	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9994928252488567	WITHOUT_CLASSIFICATION	5.07174751143237E-4	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9999219358672545	DESIGN	7.806413274547645E-5	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9999219358672545	DESIGN	7.806413274547645E-5	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9999858126761058	DESIGN	1.4187323894336753E-5	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9999912124763989	DESIGN	8.787523601176774E-6	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999997817332537	DESIGN	2.182667463151524E-7	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9996175025542274	DESIGN	3.8249744577258945E-4	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999999374641089	DESIGN	6.253589106370858E-8	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.9654900107877109	DESIGN	0.034509989212289115	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9999997676905241	DESIGN	2.3230947582422285E-7	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9998482424945979	DESIGN	1.517575054020761E-4	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999999763685548	DESIGN	2.3631445251670262E-8	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.6197165507310333	WITHOUT_CLASSIFICATION	0.3802834492689669	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.999995239733223	DESIGN	4.760266776974437E-6	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9999932717652038	DESIGN	6.728234796287134E-6	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9944709146311207	DESIGN	0.005529085368879229	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9999979498210239	DESIGN	2.0501789761722995E-6	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9994639288065127	WITHOUT_CLASSIFICATION	5.360711934872766E-4	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9999963723754026	DESIGN	3.6276245972990873E-6	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9955927216075414	DESIGN	0.004407278392458608	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9999999901796501	DESIGN	9.820349861161023E-9	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9996456210122697	DESIGN	3.5437898773026523E-4	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9930613066968481	WITHOUT_CLASSIFICATION	0.0069386933031518995	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.9966061916979918	DESIGN	0.003393808302008248	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9942945540905131	DESIGN	0.005705445909486894	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9999780147478979	DESIGN	2.1985252102079762E-5	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9999459107542448	DESIGN	5.408924575529089E-5	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.999999834233286	DESIGN	1.6576671402341567E-7	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9999991272292591	DESIGN	8.72770740893474E-7	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999999998363116	DESIGN	1.6368845443963347E-10	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999999999574603	DESIGN	4.253964162211755E-11	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9999763808062122	DESIGN	2.3619193787807255E-5	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.7545146906578099	WITHOUT_CLASSIFICATION	0.24548530934219023	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.8501238937953443	DESIGN	0.14987610620465572	WITHOUT_CLASSIFICATION
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9998594608921003	DESIGN	1.4053910789962702E-4	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9999859909794905	DESIGN	1.4009020509525104E-5	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.999999996839914	DESIGN	3.1600858927015434E-9	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.8974046197742576	DESIGN	0.10259538022574245	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.9994895157527209	DESIGN	5.104842472789799E-4	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.999998323174929	DESIGN	1.6768250711098E-6	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9999776265449524	DESIGN	2.237345504767499E-5	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9904681868262206	DESIGN	0.009531813173779397	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999883901026967	DESIGN	1.1609897303335636E-5	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999999010578838	DESIGN	9.894211616986392E-8	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9987806034545617	DESIGN	0.0012193965454382893	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9179584857870914	DESIGN	0.08204151421290858	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9999788260417405	DESIGN	2.1173958259580774E-5	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999999999936992	DESIGN	6.300904280910444E-12	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9999057747352293	DESIGN	9.422526477058125E-5	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9999979949828123	DESIGN	2.005017187696661E-6	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9999996865535195	DESIGN	3.134464805200708E-7	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9999883905656016	DESIGN	1.1609434398269038E-5	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.9277488802461781	DESIGN	0.07225111975382192	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.8850724800145215	DESIGN	0.11492751998547855	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.8795886869363696	DESIGN	0.12041131306363032	WITHOUT_CLASSIFICATION
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9999998422692098	DESIGN	1.5773079015371727E-7	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9999999904290897	DESIGN	9.570910389079773E-9	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9999212513520186	DESIGN	7.874864798134684E-5	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9999961291640531	DESIGN	3.870835946902462E-6	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9925063252515056	DESIGN	0.0074936747484945	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9998232162597164	DESIGN	1.7678374028363896E-4	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999999891059275	DESIGN	1.0894072400967928E-8	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999999966936783	DESIGN	3.3063216194679673E-9	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.996649736515928	DESIGN	0.0033502634840720143	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.7374201971263411	WITHOUT_CLASSIFICATION	0.26257980287365884	DESIGN
// end hack	DESIGN	0.9875723618230797	WITHOUT_CLASSIFICATION	0.012427638176920166	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.9748323521969681	DESIGN	0.025167647803031875	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9999901809112504	DESIGN	9.819088749636689E-6	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9999567469333819	DESIGN	4.325306661818542E-5	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9965470706563231	DESIGN	0.003452929343677012	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999999874501014	DESIGN	1.2549898606517036E-8	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999993442742	WITHOUT_CLASSIFICATION	6.557258864042735E-10	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9999270895592692	DESIGN	7.291044073081539E-5	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8111997058476167	DESIGN	0.18880029415238328	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8111997058476167	DESIGN	0.18880029415238328	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8111997058476167	DESIGN	0.18880029415238328	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.6425232385155628	WITHOUT_CLASSIFICATION	0.35747676148443724	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.999974368099293	DESIGN	2.5631900707049966E-5	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9979094332049417	DESIGN	0.0020905667950582244	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9617174194744791	DESIGN	0.038282580525520894	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.8691725888913011	WITHOUT_CLASSIFICATION	0.1308274111086988	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9999668604932056	DESIGN	3.313950679441531E-5	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9784099514163306	WITHOUT_CLASSIFICATION	0.021590048583669405	DESIGN
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.999916317550473	DESIGN	8.368244952683783E-5	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9987746549260231	DESIGN	0.0012253450739768354	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9791967659359389	WITHOUT_CLASSIFICATION	0.0208032340640611	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.999887218679416	DESIGN	1.127813205839584E-4	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9999994821184551	DESIGN	5.178815449060124E-7	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.999887218679416	DESIGN	1.127813205839584E-4	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.947803106918424	DESIGN	0.05219689308157606	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.6735712239778606	WITHOUT_CLASSIFICATION	0.3264287760221393	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.6735712239778606	WITHOUT_CLASSIFICATION	0.3264287760221393	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.99999994351079	DESIGN	5.648921004968094E-8	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999999253250031	DESIGN	7.467499683847937E-8	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.99999994351079	DESIGN	5.648921004968094E-8	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9999997058861246	DESIGN	2.9411387544176157E-7	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9991104715896862	DESIGN	8.89528410313816E-4	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.9999999974063166	DESIGN	2.593683451663988E-9	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9991432672595663	DESIGN	8.567327404336945E-4	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9957622356869186	DESIGN	0.004237764313081378	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9957622356869186	DESIGN	0.004237764313081378	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9999057841921649	DESIGN	9.421580783498608E-5	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.7200225205329364	DESIGN	0.2799774794670637	WITHOUT_CLASSIFICATION
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9999988795593399	DESIGN	1.1204406601855333E-6	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9291551628860709	DESIGN	0.07084483711392911	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9997718948006108	DESIGN	2.2810519938913068E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9991183009608395	DESIGN	8.816990391604033E-4	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9999939276317108	DESIGN	6.072368289220689E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.6225938467025471	WITHOUT_CLASSIFICATION	0.3774061532974528	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9998388296679245	DESIGN	1.611703320756068E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.6225938467025471	WITHOUT_CLASSIFICATION	0.3774061532974528	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9163685294985924	DESIGN	0.08363147050140758	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9999916467851865	DESIGN	8.353214813519463E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9999993935409899	DESIGN	6.064590100160655E-7	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9999934224657199	DESIGN	6.577534280100316E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9999908540575282	DESIGN	9.1459424717742E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9999608399124925	DESIGN	3.916008750753355E-5	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9999231750740954	DESIGN	7.682492590456889E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9988565830541261	DESIGN	0.0011434169458738764	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9874715218586857	DESIGN	0.0125284781413142	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9999608399124925	DESIGN	3.916008750753355E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9948310018563317	DESIGN	0.005168998143668266	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999999381606225	DESIGN	6.183937746125636E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9999710565807565	DESIGN	2.894341924354854E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9463804614387394	DESIGN	0.05361953856126053	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999999960272697	DESIGN	3.972730219409199E-9	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.999899812482446	DESIGN	1.0018751755397992E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.999999644455711	DESIGN	3.5554428904057003E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9999317452500497	DESIGN	6.825474995028982E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9990628210841827	DESIGN	9.371789158172963E-4	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9618436846642633	WITHOUT_CLASSIFICATION	0.038156315335736685	DESIGN
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9950411329671032	DESIGN	0.004958867032896896	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9999984875131682	DESIGN	1.5124868318430567E-6	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9999986132847799	DESIGN	1.386715220118078E-6	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.8973612256597174	DESIGN	0.10263877434028253	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9948712735938916	WITHOUT_CLASSIFICATION	0.005128726406108323	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9999931890963295	DESIGN	6.810903670550424E-6	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9996887420809847	DESIGN	3.1125791901536083E-4	WITHOUT_CLASSIFICATION
// we basically ignore protocol. let someone report it...	DESIGN	0.9835556030016703	WITHOUT_CLASSIFICATION	0.016444396998329634	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9999136767216966	DESIGN	8.63232783032972E-5	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9985909779323368	WITHOUT_CLASSIFICATION	0.0014090220676632533	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.6200459006166933	DESIGN	0.37995409938330665	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9999993673438005	DESIGN	6.326561996054989E-7	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9957290496347133	DESIGN	0.004270950365286694	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.987371309327047	DESIGN	0.012628690672953002	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9999733555998966	DESIGN	2.664440010333536E-5	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.7553071700298898	WITHOUT_CLASSIFICATION	0.2446928299701102	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.5000692355001499	WITHOUT_CLASSIFICATION	0.4999307644998501	DESIGN
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999971595488558	DESIGN	2.8404511441948044E-6	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999979578355367	WITHOUT_CLASSIFICATION	2.042164463228554E-6	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999962521603901	WITHOUT_CLASSIFICATION	3.747839609821432E-6	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999511854769016	WITHOUT_CLASSIFICATION	4.881452309831825E-5	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9854115384973094	DESIGN	0.014588461502690558	WITHOUT_CLASSIFICATION
// TODO: WRONG - get interfaces from class	DESIGN	0.966297421933308	DESIGN	0.03370257806669202	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.8701853131386019	WITHOUT_CLASSIFICATION	0.1298146868613981	DESIGN
// TODO: public only?	DESIGN	0.9999490771185313	DESIGN	5.092288146865557E-5	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9788725248622621	WITHOUT_CLASSIFICATION	0.02112747513773801	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9999932395497876	DESIGN	6.760450212317717E-6	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9999984624902108	DESIGN	1.5375097891536532E-6	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9999978800385197	DESIGN	2.1199614802583472E-6	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.9982964436748821	DESIGN	0.0017035563251178135	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9066521034540176	DESIGN	0.09334789654598248	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9066521034540176	DESIGN	0.09334789654598248	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9937380004914301	WITHOUT_CLASSIFICATION	0.006261999508569851	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9960515098628802	DESIGN	0.003948490137119774	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9960515098628802	DESIGN	0.003948490137119774	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9999993116925245	WITHOUT_CLASSIFICATION	6.88307475412162E-7	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.8996274994184486	DESIGN	0.10037250058155137	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.8724464119583494	WITHOUT_CLASSIFICATION	0.12755358804165062	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9970587012481507	DESIGN	0.00294129875184937	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9999999998747255	DESIGN	1.2527445248791826E-10	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9999367556770422	DESIGN	6.324432295773939E-5	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.985635657882409	DESIGN	0.014364342117590852	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9980005326342495	DESIGN	0.001999467365750542	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9980005326342495	DESIGN	0.001999467365750542	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9929093536124207	WITHOUT_CLASSIFICATION	0.007090646387579324	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.8801440454304373	WITHOUT_CLASSIFICATION	0.1198559545695627	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9945045761065526	DESIGN	0.005495423893447335	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9997398484239526	DESIGN	2.6015157604747315E-4	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9999966335359762	DESIGN	3.3664640238040646E-6	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999950965480672	WITHOUT_CLASSIFICATION	4.903451932747332E-6	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9999991630604755	DESIGN	8.369395244015819E-7	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9579592544190489	WITHOUT_CLASSIFICATION	0.04204074558095101	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.8880597552893954	DESIGN	0.11194024471060463	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9703308603330266	DESIGN	0.029669139666973342	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999987856565316	WITHOUT_CLASSIFICATION	1.2143434684268613E-6	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.998619223971067	DESIGN	0.001380776028932964	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9996887420809847	DESIGN	3.1125791901536083E-4	WITHOUT_CLASSIFICATION
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9998426753343298	WITHOUT_CLASSIFICATION	1.5732466567016824E-4	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9999959200010429	DESIGN	4.0799989571909E-6	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9999786594049151	DESIGN	2.1340595084855425E-5	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9995566900384444	DESIGN	4.433099615555707E-4	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9908250979503294	DESIGN	0.00917490204967055	WITHOUT_CLASSIFICATION
// Hacky: Advance position to eat newline here....	DESIGN	0.9999298125522332	DESIGN	7.018744776680365E-5	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9983215270609406	DESIGN	0.0016784729390594306	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999962931804434	DESIGN	3.7068195567431914E-6	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999962931804434	DESIGN	3.7068195567431914E-6	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.8328039214671611	DESIGN	0.16719607853283894	WITHOUT_CLASSIFICATION
// FIXME: Remove this from grammars.	DESIGN	0.998789551186461	DESIGN	0.0012104488135391278	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9999865643404638	DESIGN	1.3435659536107148E-5	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999882218063916	DESIGN	1.1778193608401902E-5	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9956297796797614	DESIGN	0.004370220320238579	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9998692627304727	WITHOUT_CLASSIFICATION	1.3073726952726172E-4	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9642960000775264	DESIGN	0.03570399992247355	WITHOUT_CLASSIFICATION
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9970461495058033	DESIGN	0.002953850494196638	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9531551159746211	DESIGN	0.046844884025378945	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999999997980513	DESIGN	2.0194876082421397E-10	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999965833872538	DESIGN	3.416612746119478E-6	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9999999878485215	DESIGN	1.215147855479624E-8	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999965833872538	DESIGN	3.416612746119478E-6	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999965833872538	DESIGN	3.416612746119478E-6	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.5466841390954134	DESIGN	0.4533158609045865	WITHOUT_CLASSIFICATION
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9999729600844561	DESIGN	2.7039915543816717E-5	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999999997282533	DESIGN	2.7174678636890375E-10	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.9673846978996143	DESIGN	0.03261530210038565	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9998116899469388	DESIGN	1.8831005306126395E-4	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.9654327984426554	DESIGN	0.03456720155734452	WITHOUT_CLASSIFICATION
// TODO: This is probably BAD...	DESIGN	0.9999960271811481	DESIGN	3.972818851941614E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.999999167675208	DESIGN	8.323247918820301E-7	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9999991422322672	DESIGN	8.577677328575699E-7	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999999405083991	DESIGN	5.9491600815485846E-8	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9999996798952518	DESIGN	3.201047481335136E-7	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.999999167675208	DESIGN	8.323247918820301E-7	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.999999167675208	DESIGN	8.323247918820301E-7	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.999999167675208	DESIGN	8.323247918820301E-7	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.999999167675208	DESIGN	8.323247918820301E-7	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9999977595041487	DESIGN	2.2404958513326932E-6	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9999993340739143	DESIGN	6.65926085827098E-7	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9987388251675785	DESIGN	0.001261174832421508	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9998517485681792	DESIGN	1.4825143182079536E-4	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9998517485681792	DESIGN	1.4825143182079536E-4	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9989925192081047	WITHOUT_CLASSIFICATION	0.00100748079189536	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9995407977290837	WITHOUT_CLASSIFICATION	4.5920227091631794E-4	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9597787267559177	WITHOUT_CLASSIFICATION	0.04022127324408226	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9597787267559177	WITHOUT_CLASSIFICATION	0.04022127324408226	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9986355605103081	DESIGN	0.0013644394896918976	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9999204986430501	DESIGN	7.950135694991316E-5	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9999796333317591	DESIGN	2.036666824095257E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999813636283	DESIGN	1.8636371707342654E-8	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999813636283	DESIGN	1.8636371707342654E-8	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9999013811669514	DESIGN	9.861883304853297E-5	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9998929669806552	DESIGN	1.0703301934478627E-4	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9999963847999089	DESIGN	3.6152000911352777E-6	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999697097824396	DESIGN	3.0290217560402795E-5	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.999998028689373	DESIGN	1.9713106269703917E-6	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999878157907409	WITHOUT_CLASSIFICATION	1.2184209259106383E-5	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9998698949101417	DESIGN	1.301050898583548E-4	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9985536839924797	DESIGN	0.0014463160075203956	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9988654574749921	DESIGN	0.0011345425250078387	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9991432672595663	DESIGN	8.567327404336945E-4	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9991432672595663	DESIGN	8.567327404336945E-4	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9993922926624866	DESIGN	6.077073375134254E-4	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9999057841921649	DESIGN	9.421580783498608E-5	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.7200225205329364	DESIGN	0.2799774794670637	WITHOUT_CLASSIFICATION
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999999986204143	DESIGN	1.3795857604047849E-9	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999996915247871	DESIGN	3.084752128835509E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9999999329256717	DESIGN	6.707432836201067E-8	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.9754201837037847	DESIGN	0.024579816296215327	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9999649153383441	DESIGN	3.508466165593253E-5	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9999995628610708	DESIGN	4.371389291711822E-7	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9173254678853037	WITHOUT_CLASSIFICATION	0.08267453211469629	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9929093536124207	WITHOUT_CLASSIFICATION	0.007090646387579324	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9531551159746211	DESIGN	0.046844884025378945	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.999999999416788	DESIGN	5.83211961800377E-10	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9901616297598124	DESIGN	0.009838370240187732	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999962931804434	DESIGN	3.7068195567431914E-6	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9984063275420983	DESIGN	0.0015936724579016944	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999999910485148	DESIGN	8.951485165060279E-9	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999999999683256	DESIGN	3.1674431553500654E-11	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999999917	DESIGN	8.383432300609318E-15	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9998705087004288	DESIGN	1.2949129957125216E-4	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999928536341636	DESIGN	7.146365836370133E-6	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999928536341636	DESIGN	7.146365836370133E-6	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9967199539643019	DESIGN	0.003280046035698171	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9972691536232896	DESIGN	0.002730846376710441	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.5944801446698232	WITHOUT_CLASSIFICATION	0.4055198553301768	DESIGN
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999986471342229	DESIGN	1.3528657770323423E-6	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9972691536232896	DESIGN	0.002730846376710441	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.7459274466740574	WITHOUT_CLASSIFICATION	0.25407255332594264	DESIGN
// HACK: force clinit to be created	DESIGN	0.9976614957349776	DESIGN	0.002338504265022336	WITHOUT_CLASSIFICATION
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999999989946645	DESIGN	1.0053355317385991E-9	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9999996759121444	DESIGN	3.2408785556492263E-7	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.7178100652446089	WITHOUT_CLASSIFICATION	0.28218993475539106	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8111997058476167	DESIGN	0.18880029415238328	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999962931804434	DESIGN	3.7068195567431914E-6	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.6425232385155628	WITHOUT_CLASSIFICATION	0.35747676148443724	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999983914665654	DESIGN	1.60853343454757E-6	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9808826379982476	DESIGN	0.019117362001752364	WITHOUT_CLASSIFICATION
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9999837379752823	DESIGN	1.6262024717684572E-5	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999834619732358	DESIGN	1.6538026764102948E-5	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.999999996839914	DESIGN	3.1600858927015434E-9	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9985179576679934	DESIGN	0.001482042332006511	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9999897144978667	DESIGN	1.0285502133289053E-5	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.999995767020463	DESIGN	4.232979536985078E-6	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9992292029771576	WITHOUT_CLASSIFICATION	7.707970228424477E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9979094332049417	DESIGN	0.0020905667950582244	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9980005326342495	DESIGN	0.001999467365750542	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9996175025542274	DESIGN	3.8249744577258945E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9996175025542274	DESIGN	3.8249744577258945E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9996175025542274	DESIGN	3.8249744577258945E-4	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999999908163	DESIGN	9.183692331321816E-12	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999999998751065	DESIGN	1.2489347474321314E-10	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9911196302665897	WITHOUT_CLASSIFICATION	0.008880369733410366	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9999999966376734	DESIGN	3.3623266645869075E-9	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9997372171028703	DESIGN	2.6278289712970937E-4	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9991180599367557	DESIGN	8.819400632441346E-4	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999883901026967	DESIGN	1.1609897303335636E-5	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.6656574920204174	DESIGN	0.33434250797958265	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999999010578838	DESIGN	9.894211616986392E-8	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9988576567079447	DESIGN	0.0011423432920553158	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999952888304582	DESIGN	4.711169541766092E-6	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9999999895524101	DESIGN	1.0447589851665248E-8	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.999938629046886	DESIGN	6.137095311394694E-5	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9998250142484241	DESIGN	1.749857515759203E-4	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.7464173698305107	WITHOUT_CLASSIFICATION	0.2535826301694894	DESIGN
// end hack	DESIGN	0.9875723618230797	WITHOUT_CLASSIFICATION	0.012427638176920166	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.5857007108647985	DESIGN	0.41429928913520164	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999999917	DESIGN	8.383432300609318E-15	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999999999999301	DESIGN	7.003254842698326E-14	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9748323521969681	DESIGN	0.025167647803031875	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9974769492192053	WITHOUT_CLASSIFICATION	0.002523050780794668	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9999865643404638	DESIGN	1.3435659536107148E-5	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999882218063916	DESIGN	1.1778193608401902E-5	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9997808223669908	DESIGN	2.191776330091817E-4	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9999733385113649	DESIGN	2.666148863501346E-5	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9642960000775264	DESIGN	0.03570399992247355	WITHOUT_CLASSIFICATION
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9999434304861126	DESIGN	5.6569513887420146E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999965833872538	DESIGN	3.416612746119478E-6	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999965833872538	DESIGN	3.416612746119478E-6	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.8993092246250116	DESIGN	0.1006907753749884	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9998164060189572	DESIGN	1.835939810428002E-4	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.999997331996817	DESIGN	2.6680031829501626E-6	WITHOUT_CLASSIFICATION
