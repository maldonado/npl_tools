// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.999999899344564	WITHOUT_CLASSIFICATION	1.0065543592038575E-7	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999949157884634	WITHOUT_CLASSIFICATION	5.084211536483832E-6	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999514916374672	WITHOUT_CLASSIFICATION	4.850836253285428E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999514916374672	WITHOUT_CLASSIFICATION	4.850836253285428E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997750911470775	WITHOUT_CLASSIFICATION	2.249088529224093E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997750911470775	WITHOUT_CLASSIFICATION	2.249088529224093E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999725287187732	WITHOUT_CLASSIFICATION	2.747128122681702E-5	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999780290701797	WITHOUT_CLASSIFICATION	2.1970929820250988E-5	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999968572860086	WITHOUT_CLASSIFICATION	3.1427139914677236E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.999997021639463	WITHOUT_CLASSIFICATION	2.978360536947113E-6	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999098331110156	WITHOUT_CLASSIFICATION	9.01668889844254E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999098331110156	WITHOUT_CLASSIFICATION	9.01668889844254E-5	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999964781409988	WITHOUT_CLASSIFICATION	3.5218590012827455E-6	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999195159503395	WITHOUT_CLASSIFICATION	8.048404966054992E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999195159503395	WITHOUT_CLASSIFICATION	8.048404966054992E-5	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999946942460995	WITHOUT_CLASSIFICATION	5.305753900501883E-6	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.999996339539327	WITHOUT_CLASSIFICATION	3.660460672982207E-6	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999084299320197	WITHOUT_CLASSIFICATION	9.157006798041807E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999084299320197	WITHOUT_CLASSIFICATION	9.157006798041807E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999084299320197	WITHOUT_CLASSIFICATION	9.157006798041807E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999084299320197	WITHOUT_CLASSIFICATION	9.157006798041807E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999084299320197	WITHOUT_CLASSIFICATION	9.157006798041807E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999084299320197	WITHOUT_CLASSIFICATION	9.157006798041807E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999084299320197	WITHOUT_CLASSIFICATION	9.157006798041807E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999818797340145	WITHOUT_CLASSIFICATION	1.812026598550556E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999818797340145	WITHOUT_CLASSIFICATION	1.812026598550556E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999818797340145	WITHOUT_CLASSIFICATION	1.812026598550556E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999818797340145	WITHOUT_CLASSIFICATION	1.812026598550556E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999818797340145	WITHOUT_CLASSIFICATION	1.812026598550556E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999818797340145	WITHOUT_CLASSIFICATION	1.812026598550556E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999818797340145	WITHOUT_CLASSIFICATION	1.812026598550556E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580136955155	WITHOUT_CLASSIFICATION	4.198630448445873E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580136955155	WITHOUT_CLASSIFICATION	4.198630448445873E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580136955155	WITHOUT_CLASSIFICATION	4.198630448445873E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580136955155	WITHOUT_CLASSIFICATION	4.198630448445873E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580136955155	WITHOUT_CLASSIFICATION	4.198630448445873E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580136955155	WITHOUT_CLASSIFICATION	4.198630448445873E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999272997665746	WITHOUT_CLASSIFICATION	7.270023342533522E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999272997665746	WITHOUT_CLASSIFICATION	7.270023342533522E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999272997665746	WITHOUT_CLASSIFICATION	7.270023342533522E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999272997665746	WITHOUT_CLASSIFICATION	7.270023342533522E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999272997665746	WITHOUT_CLASSIFICATION	7.270023342533522E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999272997665746	WITHOUT_CLASSIFICATION	7.270023342533522E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999351070189167	WITHOUT_CLASSIFICATION	6.489298108328617E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999351070189167	WITHOUT_CLASSIFICATION	6.489298108328617E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999351070189167	WITHOUT_CLASSIFICATION	6.489298108328617E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999351070189167	WITHOUT_CLASSIFICATION	6.489298108328617E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999351070189167	WITHOUT_CLASSIFICATION	6.489298108328617E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999351070189167	WITHOUT_CLASSIFICATION	6.489298108328617E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999351070189167	WITHOUT_CLASSIFICATION	6.489298108328617E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999348769525038	WITHOUT_CLASSIFICATION	6.512304749621134E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999348769525038	WITHOUT_CLASSIFICATION	6.512304749621134E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999348769525038	WITHOUT_CLASSIFICATION	6.512304749621134E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999348769525038	WITHOUT_CLASSIFICATION	6.512304749621134E-5	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9988944709053456	WITHOUT_CLASSIFICATION	0.0011055290946544438	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9988944709053456	WITHOUT_CLASSIFICATION	0.0011055290946544438	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999952300268313	WITHOUT_CLASSIFICATION	4.769973168672994E-6	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.999994445456346	WITHOUT_CLASSIFICATION	5.55454365402891E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999902836394882	WITHOUT_CLASSIFICATION	9.716360511792978E-6	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999987724985445	WITHOUT_CLASSIFICATION	1.2275014554258858E-6	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999958295885285	WITHOUT_CLASSIFICATION	4.170411471450244E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999935982440259	WITHOUT_CLASSIFICATION	6.401755974089635E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999935982440259	WITHOUT_CLASSIFICATION	6.401755974089635E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999935982440259	WITHOUT_CLASSIFICATION	6.401755974089635E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999935982440259	WITHOUT_CLASSIFICATION	6.401755974089635E-6	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999676581848423	WITHOUT_CLASSIFICATION	3.234181515767382E-5	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999982968000495	WITHOUT_CLASSIFICATION	1.7031999504145833E-6	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999657726730488	WITHOUT_CLASSIFICATION	3.422732695122101E-5	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9998553302756858	WITHOUT_CLASSIFICATION	1.4466972431423274E-4	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999974183156592	WITHOUT_CLASSIFICATION	2.581684340789022E-6	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999233326782592	WITHOUT_CLASSIFICATION	7.666732174085694E-5	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999986868336792	WITHOUT_CLASSIFICATION	1.313166320798599E-6	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999880048226	WITHOUT_CLASSIFICATION	1.1995177387506556E-8	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9974654599188196	WITHOUT_CLASSIFICATION	0.0025345400811804227	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999636171228149	WITHOUT_CLASSIFICATION	3.638287718509693E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999864552228945	WITHOUT_CLASSIFICATION	1.3544777105377968E-5	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999999899967876	WITHOUT_CLASSIFICATION	1.0003212377734828E-8	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999657595981274	WITHOUT_CLASSIFICATION	3.4240401872680455E-5	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9974985533589081	WITHOUT_CLASSIFICATION	0.002501446641091804	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999992507415943	WITHOUT_CLASSIFICATION	7.492584056843332E-6	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999981308829887	WITHOUT_CLASSIFICATION	1.869117011233799E-6	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.7742152113705376	DESIGN	0.2257847886294623	WITHOUT_CLASSIFICATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999935982440259	WITHOUT_CLASSIFICATION	6.401755974089635E-6	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999929340431272	WITHOUT_CLASSIFICATION	7.065956872732901E-6	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.999999095156781	WITHOUT_CLASSIFICATION	9.048432190220939E-7	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948123744047	WITHOUT_CLASSIFICATION	5.187625595297637E-6	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.992158074781222	WITHOUT_CLASSIFICATION	0.007841925218777945	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9998535281120651	WITHOUT_CLASSIFICATION	1.4647188793484716E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999972919534645	WITHOUT_CLASSIFICATION	2.708046535438653E-6	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999972301850338	WITHOUT_CLASSIFICATION	2.769814966172556E-6	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999983200472548	WITHOUT_CLASSIFICATION	1.6799527452718677E-6	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.8962705070101549	WITHOUT_CLASSIFICATION	0.10372949298984509	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999445508936711	WITHOUT_CLASSIFICATION	5.5449106328970914E-5	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9211137133631458	WITHOUT_CLASSIFICATION	0.07888628663685412	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999896084596882	WITHOUT_CLASSIFICATION	1.0391540311771935E-5	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9994048891567923	WITHOUT_CLASSIFICATION	5.951108432076967E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9995594927890453	WITHOUT_CLASSIFICATION	4.4050721095457415E-4	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999081573385622	WITHOUT_CLASSIFICATION	9.184266143775654E-5	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999939112418373	WITHOUT_CLASSIFICATION	6.088758162566193E-6	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.99999283114778	WITHOUT_CLASSIFICATION	7.168852219964853E-6	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999115751534	WITHOUT_CLASSIFICATION	8.842484663855462E-8	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.999994995130806	WITHOUT_CLASSIFICATION	5.004869194034672E-6	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999933250997352	WITHOUT_CLASSIFICATION	6.674900264762906E-6	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9548561375163465	WITHOUT_CLASSIFICATION	0.04514386248365348	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999931995556351	WITHOUT_CLASSIFICATION	6.80044436494542E-6	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999927007204379	WITHOUT_CLASSIFICATION	7.299279562111269E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999822257514885	WITHOUT_CLASSIFICATION	1.7774248511522765E-5	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.999978820485366	WITHOUT_CLASSIFICATION	2.117951463399257E-5	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9999932213269371	WITHOUT_CLASSIFICATION	6.7786730628298465E-6	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.999999054337889	WITHOUT_CLASSIFICATION	9.45662110880693E-7	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.999982738766012	WITHOUT_CLASSIFICATION	1.72612339881348E-5	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999974148513012	WITHOUT_CLASSIFICATION	2.5851486987905395E-6	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999882951431706	WITHOUT_CLASSIFICATION	1.17048568293202E-5	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999989890889344	WITHOUT_CLASSIFICATION	1.0109110656171062E-6	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999131625707415	WITHOUT_CLASSIFICATION	8.683742925848953E-5	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9998241990372847	WITHOUT_CLASSIFICATION	1.7580096271539082E-4	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999994665863436	WITHOUT_CLASSIFICATION	5.334136563425017E-7	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999712910791659	WITHOUT_CLASSIFICATION	2.870892083406469E-5	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999997936127643	WITHOUT_CLASSIFICATION	2.0638723572793557E-7	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999791301827676	WITHOUT_CLASSIFICATION	2.086981723237919E-5	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9869275653670269	WITHOUT_CLASSIFICATION	0.013072434632973065	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999946685021361	WITHOUT_CLASSIFICATION	5.331497863782755E-6	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999798593544866	WITHOUT_CLASSIFICATION	2.0140645513386576E-5	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999834420378517	WITHOUT_CLASSIFICATION	1.6557962148220184E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993956775324	WITHOUT_CLASSIFICATION	6.04322467594994E-7	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999674674236733	WITHOUT_CLASSIFICATION	3.2532576326723297E-5	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998247295770197	WITHOUT_CLASSIFICATION	1.7527042298032028E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998247295770197	WITHOUT_CLASSIFICATION	1.7527042298032028E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9996503201810462	WITHOUT_CLASSIFICATION	3.4967981895390625E-4	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999947497633589	WITHOUT_CLASSIFICATION	5.250236641159335E-6	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999674518648624	WITHOUT_CLASSIFICATION	3.254813513754437E-5	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999994207472492	WITHOUT_CLASSIFICATION	5.792527507796592E-7	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.968240625659012	WITHOUT_CLASSIFICATION	0.03175937434098798	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9991100422490177	WITHOUT_CLASSIFICATION	8.899577509822247E-4	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.999798838370737	WITHOUT_CLASSIFICATION	2.011616292630548E-4	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999905946165646	WITHOUT_CLASSIFICATION	9.405383435415972E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993956775324	WITHOUT_CLASSIFICATION	6.04322467594994E-7	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999431152414	WITHOUT_CLASSIFICATION	5.6884758617100763E-8	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999789301076478	WITHOUT_CLASSIFICATION	2.1069892352121894E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999381216810116	WITHOUT_CLASSIFICATION	6.187831898840721E-5	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999993728484275	WITHOUT_CLASSIFICATION	6.271515725027408E-7	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999998735348848	WITHOUT_CLASSIFICATION	1.2646511515576942E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999997479514575	WITHOUT_CLASSIFICATION	2.520485424317375E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999997479514575	WITHOUT_CLASSIFICATION	2.520485424317375E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999997479514575	WITHOUT_CLASSIFICATION	2.520485424317375E-7	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999870772727026	WITHOUT_CLASSIFICATION	1.2922727297275035E-5	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999881544849	WITHOUT_CLASSIFICATION	1.184551516521636E-8	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999081483237	WITHOUT_CLASSIFICATION	9.185167632762698E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.999714132550602	WITHOUT_CLASSIFICATION	2.858674493978889E-4	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.7983368850767601	WITHOUT_CLASSIFICATION	0.20166311492323982	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.999999743094276	WITHOUT_CLASSIFICATION	2.5690572406985924E-7	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9986108948099665	WITHOUT_CLASSIFICATION	0.0013891051900335714	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999998609636874	WITHOUT_CLASSIFICATION	1.390363125486396E-7	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999724233014485	WITHOUT_CLASSIFICATION	2.757669855146886E-5	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999724233014485	WITHOUT_CLASSIFICATION	2.757669855146886E-5	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999766669318073	WITHOUT_CLASSIFICATION	2.3333068192718204E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999991442095644	WITHOUT_CLASSIFICATION	8.557904355423832E-7	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999933499375142	WITHOUT_CLASSIFICATION	6.650062485852185E-6	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999933499375142	WITHOUT_CLASSIFICATION	6.650062485852185E-6	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999275473919	WITHOUT_CLASSIFICATION	7.245260819446699E-8	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999978887176002	WITHOUT_CLASSIFICATION	2.1112823998775776E-6	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999827481975748	WITHOUT_CLASSIFICATION	1.7251802425156884E-5	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999998725739007	WITHOUT_CLASSIFICATION	1.274260993334485E-7	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999939376952574	WITHOUT_CLASSIFICATION	6.062304742674169E-6	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999988539281525	WITHOUT_CLASSIFICATION	1.1460718474493997E-6	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999842988248241	WITHOUT_CLASSIFICATION	1.570117517588871E-5	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9998718720459348	WITHOUT_CLASSIFICATION	1.2812795406517556E-4	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9992866837071609	WITHOUT_CLASSIFICATION	7.13316292839117E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999950394737078	WITHOUT_CLASSIFICATION	4.960526292178063E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993956775324	WITHOUT_CLASSIFICATION	6.04322467594994E-7	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999992050313639	WITHOUT_CLASSIFICATION	7.94968636167031E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999988849167607	WITHOUT_CLASSIFICATION	1.1150832392971142E-6	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999941783543999	WITHOUT_CLASSIFICATION	5.821645600139912E-6	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9917671923262497	WITHOUT_CLASSIFICATION	0.00823280767375038	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9992036026862375	WITHOUT_CLASSIFICATION	7.963973137625525E-4	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9997145372922254	WITHOUT_CLASSIFICATION	2.8546270777465876E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999274984730739	WITHOUT_CLASSIFICATION	7.250152692605185E-5	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998506281823882	WITHOUT_CLASSIFICATION	1.493718176118269E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999871010230088	WITHOUT_CLASSIFICATION	1.2898976991229076E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9855992705498375	WITHOUT_CLASSIFICATION	0.014400729450162497	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9987979868904179	WITHOUT_CLASSIFICATION	0.00120201310958208	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999745270463811	WITHOUT_CLASSIFICATION	2.5472953618978284E-5	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999886751365844	WITHOUT_CLASSIFICATION	1.1324863415624305E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999922220671078	WITHOUT_CLASSIFICATION	7.777932892154894E-6	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9997659410489937	WITHOUT_CLASSIFICATION	2.3405895100618782E-4	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999203844397878	WITHOUT_CLASSIFICATION	7.961556021208533E-5	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999945199338733	WITHOUT_CLASSIFICATION	5.480066126753124E-6	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999724633830017	WITHOUT_CLASSIFICATION	2.7536616998286608E-5	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999989974054017	WITHOUT_CLASSIFICATION	1.0025945983446442E-6	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999951588092703	WITHOUT_CLASSIFICATION	4.841190729774533E-6	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999972638575086	WITHOUT_CLASSIFICATION	2.7361424913654892E-6	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999847934780938	WITHOUT_CLASSIFICATION	1.5206521906138569E-5	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999994993336455	WITHOUT_CLASSIFICATION	5.006663544401462E-7	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999857904768717	WITHOUT_CLASSIFICATION	1.4209523128298481E-5	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999434389866317	WITHOUT_CLASSIFICATION	5.656101336830934E-5	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999993787371279	WITHOUT_CLASSIFICATION	6.212628721436973E-7	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9997621935599882	WITHOUT_CLASSIFICATION	2.378064400118599E-4	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999959837072067	WITHOUT_CLASSIFICATION	4.016292793297851E-6	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999914059776	WITHOUT_CLASSIFICATION	8.594022405334582E-9	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999998108615928	WITHOUT_CLASSIFICATION	1.891384073000935E-7	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9997391686865954	WITHOUT_CLASSIFICATION	2.6083131340463823E-4	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9998479328202107	WITHOUT_CLASSIFICATION	1.5206717978925134E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998218787357828	WITHOUT_CLASSIFICATION	1.781212642171918E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.999947185415708	WITHOUT_CLASSIFICATION	5.281458429197662E-5	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9998280860556467	WITHOUT_CLASSIFICATION	1.719139443534552E-4	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999235783792575	WITHOUT_CLASSIFICATION	7.642162074251599E-5	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998438841895171	WITHOUT_CLASSIFICATION	1.5611581048297508E-4	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999799996754895	WITHOUT_CLASSIFICATION	2.000032451053335E-5	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999978540239788	WITHOUT_CLASSIFICATION	2.145976021259931E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9998502726468993	WITHOUT_CLASSIFICATION	1.4972735310067565E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999993608225795	WITHOUT_CLASSIFICATION	6.391774205071568E-7	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999999938106559	WITHOUT_CLASSIFICATION	6.189344218446758E-9	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999459270563604	WITHOUT_CLASSIFICATION	5.407294363955458E-5	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999957586774479	WITHOUT_CLASSIFICATION	4.241322552121906E-6	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999888530841574	WITHOUT_CLASSIFICATION	1.1146915842567094E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999997912455166	WITHOUT_CLASSIFICATION	2.0875448331192268E-7	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999983950817005	WITHOUT_CLASSIFICATION	1.60491829949737E-6	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999864571949559	WITHOUT_CLASSIFICATION	1.3542805044127273E-5	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999542019351786	WITHOUT_CLASSIFICATION	4.579806482151164E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999992685449232	WITHOUT_CLASSIFICATION	7.31455076918963E-7	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.99999713682945	WITHOUT_CLASSIFICATION	2.8631705499513783E-6	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9978156100152362	WITHOUT_CLASSIFICATION	0.00218438998476366	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999998802236136	WITHOUT_CLASSIFICATION	1.1977638634177612E-7	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999997503810389	WITHOUT_CLASSIFICATION	2.4961896112232397E-7	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9995897308430571	WITHOUT_CLASSIFICATION	4.102691569429731E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.8962831614237394	WITHOUT_CLASSIFICATION	0.10371683857626054	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999988016257676	WITHOUT_CLASSIFICATION	1.1983742323769997E-6	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999996314434215	WITHOUT_CLASSIFICATION	3.6855657847879383E-7	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999997164962171	WITHOUT_CLASSIFICATION	2.8350378292696297E-7	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999996770948264	WITHOUT_CLASSIFICATION	3.2290517349621227E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999913293574447	WITHOUT_CLASSIFICATION	8.670642555330434E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999913293574447	WITHOUT_CLASSIFICATION	8.670642555330434E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999830960963048	WITHOUT_CLASSIFICATION	1.6903903695207842E-5	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999830960963048	WITHOUT_CLASSIFICATION	1.6903903695207842E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999853590698501	WITHOUT_CLASSIFICATION	1.4640930149815555E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999853590698501	WITHOUT_CLASSIFICATION	1.4640930149815555E-5	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999763853388992	WITHOUT_CLASSIFICATION	2.3614661100797516E-5	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999763853388992	WITHOUT_CLASSIFICATION	2.3614661100797516E-5	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999996553675512	WITHOUT_CLASSIFICATION	3.446324488320345E-7	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999985278956977	WITHOUT_CLASSIFICATION	1.4721043022480697E-6	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999708741868846	WITHOUT_CLASSIFICATION	2.9125813115382317E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.999999649177825	WITHOUT_CLASSIFICATION	3.508221750351506E-7	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999904074137916	WITHOUT_CLASSIFICATION	9.592586208301042E-6	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999971017501718	WITHOUT_CLASSIFICATION	2.8982498282001433E-6	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999739806652195	WITHOUT_CLASSIFICATION	2.6019334780552828E-5	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999981066799185	WITHOUT_CLASSIFICATION	1.8933200814996078E-6	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999890498235062	WITHOUT_CLASSIFICATION	1.0950176493838226E-5	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999962683636597	WITHOUT_CLASSIFICATION	3.7316363402918982E-6	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.999979048139341	WITHOUT_CLASSIFICATION	2.0951860658977507E-5	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9998957350626696	WITHOUT_CLASSIFICATION	1.0426493733034453E-4	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999943686672832	WITHOUT_CLASSIFICATION	5.631332716755076E-6	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999871471289893	WITHOUT_CLASSIFICATION	1.2852871010762867E-5	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999989637930081	WITHOUT_CLASSIFICATION	1.0362069918360118E-6	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.999995217550916	WITHOUT_CLASSIFICATION	4.782449083976437E-6	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999997117331447	WITHOUT_CLASSIFICATION	2.8826685531538065E-7	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999932802041154	WITHOUT_CLASSIFICATION	6.719795884665859E-6	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9994303311916739	WITHOUT_CLASSIFICATION	5.69668808326123E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.8679488090897826	DESIGN	0.1320511909102175	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999874864820403	WITHOUT_CLASSIFICATION	1.2513517959652623E-5	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999928267651288	WITHOUT_CLASSIFICATION	7.173234871135231E-6	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.999971993993795	WITHOUT_CLASSIFICATION	2.800600620504727E-5	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999852588711494	WITHOUT_CLASSIFICATION	1.4741128850615024E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999955647567862	WITHOUT_CLASSIFICATION	4.435243213808615E-6	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999916719674153	WITHOUT_CLASSIFICATION	8.32803258458238E-6	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999948242005625	WITHOUT_CLASSIFICATION	5.175799437455389E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999867507820664	WITHOUT_CLASSIFICATION	1.3249217933489102E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999867507820664	WITHOUT_CLASSIFICATION	1.3249217933489102E-5	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999935711617776	WITHOUT_CLASSIFICATION	6.42883822236391E-6	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999881972255937	WITHOUT_CLASSIFICATION	1.1802774406313897E-5	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999631484537707	WITHOUT_CLASSIFICATION	3.685154622937661E-5	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.999991717547871	WITHOUT_CLASSIFICATION	8.282452129114368E-6	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999977764661833	WITHOUT_CLASSIFICATION	2.2235338166419856E-6	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999936471186753	WITHOUT_CLASSIFICATION	6.352881324700451E-6	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9998328629507641	WITHOUT_CLASSIFICATION	1.6713704923596484E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9998328629507641	WITHOUT_CLASSIFICATION	1.6713704923596484E-4	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999820170126	WITHOUT_CLASSIFICATION	1.798298739996211E-5	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9947409848879964	DESIGN	0.005259015112003598	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9996480578563073	WITHOUT_CLASSIFICATION	3.519421436927267E-4	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9996480578563073	WITHOUT_CLASSIFICATION	3.519421436927267E-4	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999971343145418	WITHOUT_CLASSIFICATION	2.865685458200692E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999985080920817	WITHOUT_CLASSIFICATION	1.4919079182939507E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999985080920817	WITHOUT_CLASSIFICATION	1.4919079182939507E-6	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.999990391230537	WITHOUT_CLASSIFICATION	9.608769463066267E-6	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.999990391230537	WITHOUT_CLASSIFICATION	9.608769463066267E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999980206640591	WITHOUT_CLASSIFICATION	1.9793359409834605E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999980206640591	WITHOUT_CLASSIFICATION	1.9793359409834605E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999866361568636	WITHOUT_CLASSIFICATION	1.3363843136516163E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999883509176455	WITHOUT_CLASSIFICATION	1.1649082354399123E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999897455687324	WITHOUT_CLASSIFICATION	1.0254431267500024E-5	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999997781288445	WITHOUT_CLASSIFICATION	2.218711555091172E-6	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999917617399221	WITHOUT_CLASSIFICATION	8.238260077919754E-6	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999141981382706	WITHOUT_CLASSIFICATION	8.58018617293231E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999966649682352	WITHOUT_CLASSIFICATION	3.335031764796165E-5	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999946867278068	WITHOUT_CLASSIFICATION	5.3132721932091314E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999966649682352	WITHOUT_CLASSIFICATION	3.335031764796165E-5	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999799064742215	WITHOUT_CLASSIFICATION	2.009352577843403E-5	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999341230742853	WITHOUT_CLASSIFICATION	6.587692571469155E-5	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999995542793128	WITHOUT_CLASSIFICATION	4.4572068720246004E-7	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999903125732565	WITHOUT_CLASSIFICATION	9.687426743455894E-6	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999825432309877	WITHOUT_CLASSIFICATION	1.7456769012333186E-5	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999952186689559	WITHOUT_CLASSIFICATION	4.78133104402059E-6	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999967673332154	WITHOUT_CLASSIFICATION	3.232666784532134E-6	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999961410748351	WITHOUT_CLASSIFICATION	3.858925164758138E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999900881276443	WITHOUT_CLASSIFICATION	9.911872355600097E-6	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999108853639823	WITHOUT_CLASSIFICATION	8.911463601768474E-5	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999806667654252	WITHOUT_CLASSIFICATION	1.9333234574833776E-5	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999983254437	WITHOUT_CLASSIFICATION	1.6745563725949525E-9	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.999995328741619	WITHOUT_CLASSIFICATION	4.671258380991004E-6	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999969507214679	WITHOUT_CLASSIFICATION	3.0492785320688704E-6	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999523685813537	WITHOUT_CLASSIFICATION	4.763141864617389E-5	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999998367489328	WITHOUT_CLASSIFICATION	1.6325106713433878E-7	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999606236358225	WITHOUT_CLASSIFICATION	3.9376364177421974E-5	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999940001827493	WITHOUT_CLASSIFICATION	5.999817250783227E-6	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.999866876572292	WITHOUT_CLASSIFICATION	1.3312342770796818E-4	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999822889616462	WITHOUT_CLASSIFICATION	1.7711038353773242E-5	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999828900476199	WITHOUT_CLASSIFICATION	1.710995238014864E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999988528515577	WITHOUT_CLASSIFICATION	1.1471484422869034E-6	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999995673228641	WITHOUT_CLASSIFICATION	4.3267713578163006E-7	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999793708719674	WITHOUT_CLASSIFICATION	2.0629128032499724E-5	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999995894342634	WITHOUT_CLASSIFICATION	4.1056573661215706E-7	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999842645605925	WITHOUT_CLASSIFICATION	1.5735439407536406E-5	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999948551428206	WITHOUT_CLASSIFICATION	5.144857179333209E-6	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999975658437265	WITHOUT_CLASSIFICATION	2.4341562735039143E-6	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999996883758521	WITHOUT_CLASSIFICATION	3.1162414791579534E-7	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999417218297	WITHOUT_CLASSIFICATION	5.827817018862645E-8	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.999999229238016	WITHOUT_CLASSIFICATION	7.70761984006075E-7	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999609219922	WITHOUT_CLASSIFICATION	3.90780078539326E-8	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999974767518772	WITHOUT_CLASSIFICATION	2.5232481228996855E-6	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999284771689241	WITHOUT_CLASSIFICATION	7.152283107591068E-5	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999993249684241	WITHOUT_CLASSIFICATION	6.750315757922946E-7	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999928302918548	WITHOUT_CLASSIFICATION	7.169708145170021E-6	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.999999894432015	WITHOUT_CLASSIFICATION	1.0556798502022461E-7	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999983619314647	WITHOUT_CLASSIFICATION	1.6380685352389208E-6	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999971902817535	WITHOUT_CLASSIFICATION	2.809718246551196E-6	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999993696583915	WITHOUT_CLASSIFICATION	6.303416085764427E-7	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999979298687043	WITHOUT_CLASSIFICATION	2.070131295668441E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999952914221	WITHOUT_CLASSIFICATION	4.708577892057856E-9	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999264764793	WITHOUT_CLASSIFICATION	7.352352074180628E-8	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999993176774675	WITHOUT_CLASSIFICATION	6.823225325156241E-7	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999803989997	WITHOUT_CLASSIFICATION	1.9601000341483405E-8	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999984337060466	WITHOUT_CLASSIFICATION	1.5662939533482986E-6	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999993654057836	WITHOUT_CLASSIFICATION	6.345942164258275E-7	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999998658671287	WITHOUT_CLASSIFICATION	1.3413287134834646E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999719768623531	WITHOUT_CLASSIFICATION	2.8023137646899496E-4	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9938180182029376	WITHOUT_CLASSIFICATION	0.006181981797062373	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.999966883880179	WITHOUT_CLASSIFICATION	3.3116119820988465E-5	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999870463060908	WITHOUT_CLASSIFICATION	1.295369390920922E-5	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9997085133278225	WITHOUT_CLASSIFICATION	2.9148667217748986E-4	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9994101621683704	WITHOUT_CLASSIFICATION	5.898378316295625E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999921227631153	WITHOUT_CLASSIFICATION	7.877236884722872E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999921227631153	WITHOUT_CLASSIFICATION	7.877236884722872E-6	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998972362153745	WITHOUT_CLASSIFICATION	1.0276378462542203E-4	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998862098420047	WITHOUT_CLASSIFICATION	1.1379015799525359E-4	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9965848065534089	WITHOUT_CLASSIFICATION	0.0034151934465912236	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999619253618391	WITHOUT_CLASSIFICATION	3.8074638160909196E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999998714451128	WITHOUT_CLASSIFICATION	1.2855488713619884E-7	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999887533377474	WITHOUT_CLASSIFICATION	1.1246662252652667E-5	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999938823798386	WITHOUT_CLASSIFICATION	6.117620161467337E-6	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.999867712336984	WITHOUT_CLASSIFICATION	1.322876630159821E-4	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999567631497744	WITHOUT_CLASSIFICATION	4.323685022568331E-5	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999832403043464	WITHOUT_CLASSIFICATION	1.675969565369553E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999854203068036	WITHOUT_CLASSIFICATION	1.4579693196471802E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999854203068036	WITHOUT_CLASSIFICATION	1.4579693196471802E-5	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.7832133210538758	WITHOUT_CLASSIFICATION	0.21678667894612424	DESIGN
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9998745465836054	WITHOUT_CLASSIFICATION	1.2545341639458952E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999993380672	WITHOUT_CLASSIFICATION	6.619329532025314E-10	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999107491994	WITHOUT_CLASSIFICATION	8.925080061171925E-8	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999610074182	WITHOUT_CLASSIFICATION	3.89925817236518E-8	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999992015098105	WITHOUT_CLASSIFICATION	7.98490189574661E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999996514099174	WITHOUT_CLASSIFICATION	3.48590082585938E-7	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999980358395907	WITHOUT_CLASSIFICATION	1.96416040937433E-6	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999997030111226	WITHOUT_CLASSIFICATION	2.969888773356775E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999864545484837	WITHOUT_CLASSIFICATION	1.3545451516329045E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999984459641651	WITHOUT_CLASSIFICATION	1.5540358349809226E-6	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999927779040546	WITHOUT_CLASSIFICATION	7.222095945493317E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999431280967489	WITHOUT_CLASSIFICATION	5.6871903251087754E-5	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999431280967489	WITHOUT_CLASSIFICATION	5.6871903251087754E-5	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9996286210183252	WITHOUT_CLASSIFICATION	3.7137898167487876E-4	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.8452399650290371	WITHOUT_CLASSIFICATION	0.15476003497096286	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999688948507702	WITHOUT_CLASSIFICATION	3.1105149229716245E-5	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999986109103105	WITHOUT_CLASSIFICATION	1.3890896895670946E-6	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9961269480969442	WITHOUT_CLASSIFICATION	0.0038730519030556994	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9998879144253917	WITHOUT_CLASSIFICATION	1.1208557460832748E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999979734509782	WITHOUT_CLASSIFICATION	2.026549021867889E-6	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999992442922008	WITHOUT_CLASSIFICATION	7.557077990770281E-7	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999974145178068	WITHOUT_CLASSIFICATION	2.585482193214226E-6	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9998143129406607	WITHOUT_CLASSIFICATION	1.8568705933934786E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999993380672	WITHOUT_CLASSIFICATION	6.619329532025314E-10	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999997126058192	WITHOUT_CLASSIFICATION	2.8739418078808793E-7	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.999882674012976	WITHOUT_CLASSIFICATION	1.1732598702396563E-4	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999768876639334	WITHOUT_CLASSIFICATION	2.3112336066512707E-5	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.8775645144227747	WITHOUT_CLASSIFICATION	0.12243548557722526	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9998883646991904	WITHOUT_CLASSIFICATION	1.116353008095129E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9031882026812063	WITHOUT_CLASSIFICATION	0.09681179731879369	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999364187810291	WITHOUT_CLASSIFICATION	6.358121897092699E-5	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9996848773964202	WITHOUT_CLASSIFICATION	3.151226035798357E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999938823960739	WITHOUT_CLASSIFICATION	6.117603926156414E-6	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.999999361150979	WITHOUT_CLASSIFICATION	6.388490210096243E-7	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999988509277221	WITHOUT_CLASSIFICATION	1.1490722779585002E-6	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9945150649647638	WITHOUT_CLASSIFICATION	0.005484935035236251	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999977736094637	WITHOUT_CLASSIFICATION	2.2263905361869194E-6	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9998640187136697	WITHOUT_CLASSIFICATION	1.3598128633029666E-4	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9962289162183107	WITHOUT_CLASSIFICATION	0.0037710837816893827	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999172504243516	WITHOUT_CLASSIFICATION	8.274957564838214E-5	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9844232863454453	WITHOUT_CLASSIFICATION	0.015576713654554732	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999322041845062	WITHOUT_CLASSIFICATION	6.77958154937767E-5	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9995958911824353	WITHOUT_CLASSIFICATION	4.0410881756467457E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9999812116783077	WITHOUT_CLASSIFICATION	1.8788321692277458E-5	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9996277998175671	WITHOUT_CLASSIFICATION	3.722001824328988E-4	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999932091748093	WITHOUT_CLASSIFICATION	6.790825190802556E-6	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9991266144017363	WITHOUT_CLASSIFICATION	8.733855982636468E-4	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999997055132399	WITHOUT_CLASSIFICATION	2.9448676005065054E-7	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999608690630013	WITHOUT_CLASSIFICATION	3.9130936998737565E-5	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999980579724083	WITHOUT_CLASSIFICATION	1.94202759179432E-6	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9999511804904935	WITHOUT_CLASSIFICATION	4.881950950647912E-5	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999961333539792	WITHOUT_CLASSIFICATION	3.8666460207750276E-6	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999785590161097	WITHOUT_CLASSIFICATION	2.1440983890327604E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.999998981285798	WITHOUT_CLASSIFICATION	1.0187142019625018E-6	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999986941786584	WITHOUT_CLASSIFICATION	1.305821341575981E-6	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999986941786584	WITHOUT_CLASSIFICATION	1.305821341575981E-6	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999797175452908	WITHOUT_CLASSIFICATION	2.0282454709248725E-5	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999970025960963	WITHOUT_CLASSIFICATION	2.997403903768857E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999909624656631	WITHOUT_CLASSIFICATION	9.037534336912179E-6	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999754513175074	WITHOUT_CLASSIFICATION	2.454868249258061E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9996891137003261	WITHOUT_CLASSIFICATION	3.108862996738896E-4	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.999992612744315	WITHOUT_CLASSIFICATION	7.387255685047155E-6	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999993956775324	WITHOUT_CLASSIFICATION	6.04322467594994E-7	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9998593600327714	WITHOUT_CLASSIFICATION	1.406399672285401E-4	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999766964594858	WITHOUT_CLASSIFICATION	2.3303540514225924E-5	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999762670068365	WITHOUT_CLASSIFICATION	2.3732993163566293E-5	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998361880109	WITHOUT_CLASSIFICATION	1.6381198897054133E-7	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9997874324883268	WITHOUT_CLASSIFICATION	2.1256751167310348E-4	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999959949007449	WITHOUT_CLASSIFICATION	4.005099255095778E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9998502726468993	WITHOUT_CLASSIFICATION	1.4972735310067565E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999656135771	WITHOUT_CLASSIFICATION	3.43864229639241E-8	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.997958163578451	WITHOUT_CLASSIFICATION	0.0020418364215490045	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999948006782371	WITHOUT_CLASSIFICATION	5.199321762903144E-6	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999998163415492	WITHOUT_CLASSIFICATION	1.8365845079865255E-7	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999978307469096	WITHOUT_CLASSIFICATION	2.1692530903588743E-6	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998978682457745	WITHOUT_CLASSIFICATION	1.0213175422541337E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999436474941644	WITHOUT_CLASSIFICATION	5.6352505835705345E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999436474941644	WITHOUT_CLASSIFICATION	5.6352505835705345E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999949613373601	WITHOUT_CLASSIFICATION	5.038662639869198E-6	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999992902052851	WITHOUT_CLASSIFICATION	7.097947149733096E-7	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.999900363253517	WITHOUT_CLASSIFICATION	9.963674648286908E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999995942610468	WITHOUT_CLASSIFICATION	4.057389531837557E-7	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999977591700412	WITHOUT_CLASSIFICATION	2.2408299588372974E-6	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999943068929809	WITHOUT_CLASSIFICATION	5.693107019087704E-6	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999995140562498	WITHOUT_CLASSIFICATION	4.859437502568512E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999999866500079	WITHOUT_CLASSIFICATION	1.3349992097301456E-7	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999874675547696	WITHOUT_CLASSIFICATION	1.2532445230382659E-5	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999993692578558	WITHOUT_CLASSIFICATION	6.307421442060486E-7	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.999995057215205	WITHOUT_CLASSIFICATION	4.942784794964862E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999884484983869	WITHOUT_CLASSIFICATION	1.1551501613222555E-5	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999995631019386	WITHOUT_CLASSIFICATION	4.368980614040801E-7	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999826142737864	WITHOUT_CLASSIFICATION	1.7385726213612185E-5	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999994660652903	WITHOUT_CLASSIFICATION	5.339347096534158E-7	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.999977111591691	WITHOUT_CLASSIFICATION	2.2888408308987165E-5	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.999983029395132	WITHOUT_CLASSIFICATION	1.6970604868057847E-5	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999556469969545	WITHOUT_CLASSIFICATION	4.4353003045485034E-5	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9997975099882435	WITHOUT_CLASSIFICATION	2.0249001175652777E-4	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999742403896664	WITHOUT_CLASSIFICATION	2.5759610333527308E-5	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.999997016192753	WITHOUT_CLASSIFICATION	2.9838072468724007E-6	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999994157741121	WITHOUT_CLASSIFICATION	5.84225887864866E-7	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999798881615344	WITHOUT_CLASSIFICATION	2.0111838465524246E-5	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9996135805766904	WITHOUT_CLASSIFICATION	3.864194233095628E-4	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999166106665761	WITHOUT_CLASSIFICATION	8.338933342391505E-5	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.999868183678141	WITHOUT_CLASSIFICATION	1.3181632185896546E-4	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9951544295093598	WITHOUT_CLASSIFICATION	0.0048455704906401696	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999832655879217	WITHOUT_CLASSIFICATION	1.6734412078277926E-5	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999978099148263	WITHOUT_CLASSIFICATION	2.1900851736893026E-6	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9998141572795103	WITHOUT_CLASSIFICATION	1.858427204898567E-4	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999997850849199	WITHOUT_CLASSIFICATION	2.1491508011258726E-7	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999878645017339	WITHOUT_CLASSIFICATION	1.2135498266105987E-5	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999221548373637	WITHOUT_CLASSIFICATION	7.784516263629793E-5	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9999920714850145	WITHOUT_CLASSIFICATION	7.92851498555225E-6	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999994764217037	WITHOUT_CLASSIFICATION	5.235782961767163E-7	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.7418363601461461	DESIGN	0.25816363985385393	WITHOUT_CLASSIFICATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9979053664454441	WITHOUT_CLASSIFICATION	0.0020946335545557818	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999953914994888	WITHOUT_CLASSIFICATION	4.608500511192179E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999135773717861	WITHOUT_CLASSIFICATION	8.642262821383781E-5	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999961410540555	WITHOUT_CLASSIFICATION	3.8589459444543E-6	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9997990792087663	WITHOUT_CLASSIFICATION	2.0092079123374952E-4	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999988114953452	WITHOUT_CLASSIFICATION	1.1885046547770156E-6	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999994664389319	WITHOUT_CLASSIFICATION	5.335610681824636E-7	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9989200392723796	WITHOUT_CLASSIFICATION	0.0010799607276203223	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.999547611695435	WITHOUT_CLASSIFICATION	4.5238830456496994E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9989200392723796	WITHOUT_CLASSIFICATION	0.0010799607276203223	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9996412789774705	DESIGN	3.587210225295312E-4	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9875215171731624	DESIGN	0.012478482826837625	WITHOUT_CLASSIFICATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999204315449175	WITHOUT_CLASSIFICATION	7.95684550825264E-5	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9997231697610309	DESIGN	2.768302389690367E-4	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999064073529453	WITHOUT_CLASSIFICATION	9.359264705469748E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999305402940372	WITHOUT_CLASSIFICATION	6.94597059628112E-5	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999851612688794	WITHOUT_CLASSIFICATION	1.4838731120706304E-5	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998917083832565	WITHOUT_CLASSIFICATION	1.0829161674346676E-4	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999377840342223	WITHOUT_CLASSIFICATION	6.221596577775222E-5	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.8667373127605715	WITHOUT_CLASSIFICATION	0.1332626872394284	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9929698099610964	WITHOUT_CLASSIFICATION	0.007030190038903593	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9996762218446497	WITHOUT_CLASSIFICATION	3.2377815535023624E-4	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9923349681165904	WITHOUT_CLASSIFICATION	0.007665031883409518	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999395936353662	WITHOUT_CLASSIFICATION	6.0406364633651314E-5	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.998859660714959	WITHOUT_CLASSIFICATION	0.0011403392850409093	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9913394316498726	DESIGN	0.008660568350127405	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9998046859153251	WITHOUT_CLASSIFICATION	1.953140846749642E-4	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9977249102840965	WITHOUT_CLASSIFICATION	0.0022750897159035622	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.999913769948168	WITHOUT_CLASSIFICATION	8.623005183197981E-5	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999701076679981	WITHOUT_CLASSIFICATION	2.9892332001940453E-5	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999843407751157	WITHOUT_CLASSIFICATION	1.5659224884328733E-5	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999972455366696	WITHOUT_CLASSIFICATION	2.7544633303841064E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999965800242808	WITHOUT_CLASSIFICATION	3.419975719189406E-6	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999997003238142	WITHOUT_CLASSIFICATION	2.996761857505337E-7	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999965835066975	WITHOUT_CLASSIFICATION	3.416493302590247E-6	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9994268957560565	WITHOUT_CLASSIFICATION	5.731042439434201E-4	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999983402238876	WITHOUT_CLASSIFICATION	1.6597761124910243E-6	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9993444103328635	WITHOUT_CLASSIFICATION	6.555896671365202E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999864552228945	WITHOUT_CLASSIFICATION	1.3544777105377968E-5	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9997144473674366	WITHOUT_CLASSIFICATION	2.8555263256333413E-4	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999845799478385	WITHOUT_CLASSIFICATION	1.5420052161520405E-5	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999938453642775	WITHOUT_CLASSIFICATION	6.154635722624621E-6	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999732449038764	WITHOUT_CLASSIFICATION	2.6755096123666387E-5	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.999995852432475	WITHOUT_CLASSIFICATION	4.147567525070442E-6	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999992453796	WITHOUT_CLASSIFICATION	7.546203685399446E-10	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999948294160963	WITHOUT_CLASSIFICATION	5.17058390367746E-6	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999996954866222	WITHOUT_CLASSIFICATION	3.0451337783835646E-7	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9949580104275508	WITHOUT_CLASSIFICATION	0.005041989572449134	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999776655741575	WITHOUT_CLASSIFICATION	2.233442584247556E-5	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999846592209325	WITHOUT_CLASSIFICATION	1.534077906751261E-5	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999950090560011	WITHOUT_CLASSIFICATION	4.990943998782384E-6	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999947434493247	WITHOUT_CLASSIFICATION	5.2565506752413295E-6	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999360204477	WITHOUT_CLASSIFICATION	6.397955237634472E-8	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998714608559549	WITHOUT_CLASSIFICATION	1.285391440450894E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998714608559549	WITHOUT_CLASSIFICATION	1.285391440450894E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9983853445832943	WITHOUT_CLASSIFICATION	0.0016146554167057563	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9989215765301099	WITHOUT_CLASSIFICATION	0.0010784234698901151	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999275499986646	WITHOUT_CLASSIFICATION	7.245000133540423E-5	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999411062973	WITHOUT_CLASSIFICATION	5.8893702714847377E-8	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9996940765968461	WITHOUT_CLASSIFICATION	3.0592340315393834E-4	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9997688247434112	WITHOUT_CLASSIFICATION	2.3117525658871866E-4	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.999997442333177	WITHOUT_CLASSIFICATION	2.5576668229673678E-6	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999966170870163	WITHOUT_CLASSIFICATION	3.3829129836659034E-6	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9998277896003757	WITHOUT_CLASSIFICATION	1.722103996242288E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9995398348627124	WITHOUT_CLASSIFICATION	4.601651372876647E-4	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999857784718316	WITHOUT_CLASSIFICATION	1.422152816841045E-5	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9942489820025028	WITHOUT_CLASSIFICATION	0.005751017997497215	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9980469239336002	WITHOUT_CLASSIFICATION	0.001953076066399856	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9998461952803889	WITHOUT_CLASSIFICATION	1.5380471961114867E-4	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9985833576201263	WITHOUT_CLASSIFICATION	0.0014166423798737623	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999992522118635	WITHOUT_CLASSIFICATION	7.477881365972221E-7	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999850828705386	WITHOUT_CLASSIFICATION	1.4917129461346274E-5	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.999993160917583	WITHOUT_CLASSIFICATION	6.839082417130927E-6	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9997717722921705	WITHOUT_CLASSIFICATION	2.2822770782953913E-4	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.999987810753446	WITHOUT_CLASSIFICATION	1.2189246554020154E-5	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.5637974253390003	DESIGN	0.43620257466099954	WITHOUT_CLASSIFICATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.5440697000092015	DESIGN	0.4559302999907984	WITHOUT_CLASSIFICATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.94165754265224	WITHOUT_CLASSIFICATION	0.05834245734775994	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9987148811228043	WITHOUT_CLASSIFICATION	0.0012851188771957254	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999864573487417	WITHOUT_CLASSIFICATION	1.354265125837383E-5	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9979531455659214	WITHOUT_CLASSIFICATION	0.0020468544340785737	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9974316882797364	WITHOUT_CLASSIFICATION	0.0025683117202636133	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999741162465388	WITHOUT_CLASSIFICATION	2.588375346130282E-5	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999962829708143	WITHOUT_CLASSIFICATION	3.71702918569092E-6	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999808326771334	WITHOUT_CLASSIFICATION	1.916732286654722E-5	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9290447638378532	WITHOUT_CLASSIFICATION	0.07095523616214676	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999908135746395	WITHOUT_CLASSIFICATION	9.186425360506737E-6	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999823674610534	WITHOUT_CLASSIFICATION	1.763253894667082E-5	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999997200076812	WITHOUT_CLASSIFICATION	2.7999231869242826E-7	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999044861811	WITHOUT_CLASSIFICATION	9.551381877565987E-8	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9987909413393976	WITHOUT_CLASSIFICATION	0.0012090586606022984	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999249887781336	WITHOUT_CLASSIFICATION	7.50112218664253E-5	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999987634456214	WITHOUT_CLASSIFICATION	1.2365543786077846E-5	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9996100259625111	WITHOUT_CLASSIFICATION	3.8997403748887324E-4	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998387507271319	WITHOUT_CLASSIFICATION	1.6124927286815358E-4	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999799881745898	WITHOUT_CLASSIFICATION	2.001182541022137E-5	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999526954515019	WITHOUT_CLASSIFICATION	4.730454849816729E-5	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999814322835533	WITHOUT_CLASSIFICATION	1.8567716446698944E-5	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999960945735559	WITHOUT_CLASSIFICATION	3.9054264441221994E-6	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9994901120068941	WITHOUT_CLASSIFICATION	5.09887993105792E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999931004652768	WITHOUT_CLASSIFICATION	6.899534723238987E-6	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999881040841863	WITHOUT_CLASSIFICATION	1.1895915813736885E-5	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999923277313785	WITHOUT_CLASSIFICATION	7.672268621492951E-6	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9999381061290316	WITHOUT_CLASSIFICATION	6.189387096845563E-5	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999936082028692	WITHOUT_CLASSIFICATION	6.3917971307740305E-6	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999891059386	WITHOUT_CLASSIFICATION	1.089406134035217E-8	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.999999869732948	WITHOUT_CLASSIFICATION	1.302670521008983E-7	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999744504295	WITHOUT_CLASSIFICATION	2.554957044766599E-8	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999997511037676	WITHOUT_CLASSIFICATION	2.488962323907084E-7	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999559131241488	WITHOUT_CLASSIFICATION	4.408687585113939E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999961067929067	WITHOUT_CLASSIFICATION	3.893207093250095E-6	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9998221312924284	WITHOUT_CLASSIFICATION	1.7786870757167616E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9390551251140763	WITHOUT_CLASSIFICATION	0.06094487488592362	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9994509899936721	WITHOUT_CLASSIFICATION	5.490100063279113E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998451609065603	WITHOUT_CLASSIFICATION	1.5483909343981216E-4	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999997809008475	WITHOUT_CLASSIFICATION	2.1909915242699518E-7	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9998892073283157	WITHOUT_CLASSIFICATION	1.1079267168425258E-4	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999990838226658	WITHOUT_CLASSIFICATION	9.161773341662117E-7	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999953524611404	WITHOUT_CLASSIFICATION	4.647538859627075E-6	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.999995384861555	WITHOUT_CLASSIFICATION	4.61513844492273E-6	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999938566991108	WITHOUT_CLASSIFICATION	6.143300889191905E-6	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999774275910475	WITHOUT_CLASSIFICATION	2.257240895262738E-5	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999982750861184	WITHOUT_CLASSIFICATION	1.7249138815298903E-6	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999941396212708	WITHOUT_CLASSIFICATION	5.860378729122424E-6	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9998947143267958	WITHOUT_CLASSIFICATION	1.0528567320432421E-4	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.999999421735335	WITHOUT_CLASSIFICATION	5.782646649625011E-7	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9993120629546068	WITHOUT_CLASSIFICATION	6.879370453931314E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999998015669389	WITHOUT_CLASSIFICATION	1.9843306113488232E-7	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999947050757608	WITHOUT_CLASSIFICATION	5.294924239145578E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999961432642946	WITHOUT_CLASSIFICATION	3.856735705376596E-6	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999965782182084	WITHOUT_CLASSIFICATION	3.4217817915247366E-6	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.999997246718865	WITHOUT_CLASSIFICATION	2.7532811350295935E-6	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999957102467679	WITHOUT_CLASSIFICATION	4.289753232123901E-6	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999943232346435	WITHOUT_CLASSIFICATION	5.6767653565223785E-6	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999931295583981	WITHOUT_CLASSIFICATION	6.870441601867719E-6	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999943680057521	WITHOUT_CLASSIFICATION	5.631994247867846E-6	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999949469459509	WITHOUT_CLASSIFICATION	5.053054049109273E-6	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999956389486525	WITHOUT_CLASSIFICATION	4.361051347534144E-6	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999944263019632	WITHOUT_CLASSIFICATION	5.573698036766523E-6	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999962941949723	WITHOUT_CLASSIFICATION	3.705805027746163E-6	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999975163219114	WITHOUT_CLASSIFICATION	2.4836780886112734E-6	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999966579378826	WITHOUT_CLASSIFICATION	3.342062117341098E-6	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999959034361318	WITHOUT_CLASSIFICATION	4.096563868255037E-6	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999960282147285	WITHOUT_CLASSIFICATION	3.971785271359019E-6	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.999996101414235	WITHOUT_CLASSIFICATION	3.898585765037055E-6	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.999996052273244	WITHOUT_CLASSIFICATION	3.9477267559930785E-6	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999979040719914	WITHOUT_CLASSIFICATION	2.095928008617404E-6	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999979349657899	WITHOUT_CLASSIFICATION	2.0650342100617673E-6	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999997315677392	WITHOUT_CLASSIFICATION	2.684322607686266E-7	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9982525254099858	WITHOUT_CLASSIFICATION	0.0017474745900142143	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.99993475963706	WITHOUT_CLASSIFICATION	6.52403629399894E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999998013583917	WITHOUT_CLASSIFICATION	1.9864160819459178E-7	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9996348008073226	WITHOUT_CLASSIFICATION	3.6519919267743507E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.999990000360443	WITHOUT_CLASSIFICATION	9.999639556900354E-6	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999924427947942	WITHOUT_CLASSIFICATION	7.557205205907859E-6	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9867485670020678	WITHOUT_CLASSIFICATION	0.013251432997932279	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999873839109374	WITHOUT_CLASSIFICATION	1.2616089062561134E-5	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999756483875032	WITHOUT_CLASSIFICATION	2.4351612496763755E-5	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9998122938806163	DESIGN	1.8770611938374594E-4	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999993950727386	WITHOUT_CLASSIFICATION	6.049272614662134E-7	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.99999863870926	WITHOUT_CLASSIFICATION	1.3612907399857898E-6	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9997246512857366	WITHOUT_CLASSIFICATION	2.7534871426340295E-4	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9997246512857366	WITHOUT_CLASSIFICATION	2.7534871426340295E-4	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999953464359538	WITHOUT_CLASSIFICATION	4.653564046288296E-6	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9955454749269068	WITHOUT_CLASSIFICATION	0.004454525073093144	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999748154095951	WITHOUT_CLASSIFICATION	2.5184590404929127E-5	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9997304151460474	WITHOUT_CLASSIFICATION	2.6958485395257224E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9980264115548363	WITHOUT_CLASSIFICATION	0.0019735884451636846	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9984670750317252	WITHOUT_CLASSIFICATION	0.0015329249682749302	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999970480496724	WITHOUT_CLASSIFICATION	2.951950327593944E-6	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999968419964281	WITHOUT_CLASSIFICATION	3.1580035719086555E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999533692248024	WITHOUT_CLASSIFICATION	4.663077519764297E-5	DESIGN
// base	WITHOUT_CLASSIFICATION	0.999998219665796	WITHOUT_CLASSIFICATION	1.78033420395481E-6	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999889837200397	WITHOUT_CLASSIFICATION	1.1016279960234414E-5	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.999993336576253	WITHOUT_CLASSIFICATION	6.663423747004627E-6	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9999230812570272	WITHOUT_CLASSIFICATION	7.691874297280934E-5	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999937289569597	WITHOUT_CLASSIFICATION	6.2710430403345814E-6	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9934196164154838	WITHOUT_CLASSIFICATION	0.00658038358451617	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999862887807894	WITHOUT_CLASSIFICATION	1.371121921066456E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999972919534645	WITHOUT_CLASSIFICATION	2.708046535438653E-6	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999998638797564	WITHOUT_CLASSIFICATION	1.3612024371056052E-7	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999988185074306	WITHOUT_CLASSIFICATION	1.1814925695573859E-6	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999841190880661	WITHOUT_CLASSIFICATION	1.588091193392227E-5	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999988299509686	WITHOUT_CLASSIFICATION	1.1700490314950684E-6	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.5163847063224248	WITHOUT_CLASSIFICATION	0.4836152936775752	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999974081317187	WITHOUT_CLASSIFICATION	2.591868281310853E-6	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999985105032168	WITHOUT_CLASSIFICATION	1.4894967832724945E-6	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999994192521832	WITHOUT_CLASSIFICATION	5.80747816843439E-7	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999975055861575	WITHOUT_CLASSIFICATION	2.4944138425939363E-6	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999954538806831	WITHOUT_CLASSIFICATION	4.54611931688779E-6	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999882695476239	WITHOUT_CLASSIFICATION	1.1730452376040706E-5	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999998464163499	WITHOUT_CLASSIFICATION	1.5358365007411968E-7	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999842729335521	WITHOUT_CLASSIFICATION	1.572706644794913E-5	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999857033574588	WITHOUT_CLASSIFICATION	1.4296642541263968E-5	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9996338898213032	WITHOUT_CLASSIFICATION	3.6611017869686666E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999988858737047	WITHOUT_CLASSIFICATION	1.1141262953432786E-6	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999974396015793	WITHOUT_CLASSIFICATION	2.5603984206379232E-6	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999838742683392	WITHOUT_CLASSIFICATION	1.612573166079587E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9998175676092	WITHOUT_CLASSIFICATION	1.824323907999163E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992594987376	WITHOUT_CLASSIFICATION	7.405012625168819E-7	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999990686346101	WITHOUT_CLASSIFICATION	9.313653898531435E-7	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9992766513616538	WITHOUT_CLASSIFICATION	7.233486383463166E-4	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999585265744934	WITHOUT_CLASSIFICATION	4.147342550661602E-5	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.8503314232255943	WITHOUT_CLASSIFICATION	0.14966857677440568	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999763954282183	WITHOUT_CLASSIFICATION	2.360457178180401E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999941056768171	WITHOUT_CLASSIFICATION	5.894323182844144E-6	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9995807876647445	WITHOUT_CLASSIFICATION	4.1921233525563654E-4	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9995807876647445	WITHOUT_CLASSIFICATION	4.1921233525563654E-4	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9997939060008214	WITHOUT_CLASSIFICATION	2.060939991786023E-4	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999963125730086	WITHOUT_CLASSIFICATION	3.6874269914594042E-6	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999878578819317	WITHOUT_CLASSIFICATION	1.2142118068295748E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.99999048852278	WITHOUT_CLASSIFICATION	9.511477219892539E-6	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9981928205019561	WITHOUT_CLASSIFICATION	0.0018071794980438589	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999095514221087	WITHOUT_CLASSIFICATION	9.044857789127856E-5	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9996110743943639	WITHOUT_CLASSIFICATION	3.8892560563611426E-4	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9998440891620434	WITHOUT_CLASSIFICATION	1.5591083795662677E-4	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999936560975619	WITHOUT_CLASSIFICATION	6.3439024382079865E-6	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999464900910779	WITHOUT_CLASSIFICATION	5.350990892206898E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999102678155358	WITHOUT_CLASSIFICATION	8.97321844641888E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.99997187753385	WITHOUT_CLASSIFICATION	2.8122466150037562E-5	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999442913358155	WITHOUT_CLASSIFICATION	5.5708664184418784E-5	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999952076211709	WITHOUT_CLASSIFICATION	4.792378829119253E-6	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9753973100953122	DESIGN	0.02460268990468786	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.5430824629466877	WITHOUT_CLASSIFICATION	0.45691753705331234	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9998373860980494	WITHOUT_CLASSIFICATION	1.6261390195062298E-4	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999757763183671	WITHOUT_CLASSIFICATION	2.4223681632826458E-5	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999928995277	WITHOUT_CLASSIFICATION	7.100472320667123E-9	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999799996754895	WITHOUT_CLASSIFICATION	2.000032451053335E-5	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999997453119782	WITHOUT_CLASSIFICATION	2.5468802171193E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999997453119782	WITHOUT_CLASSIFICATION	2.5468802171193E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999956676049356	WITHOUT_CLASSIFICATION	4.332395064326902E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999956676049356	WITHOUT_CLASSIFICATION	4.332395064326902E-6	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9998475465846836	WITHOUT_CLASSIFICATION	1.5245341531653785E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999537377540187	WITHOUT_CLASSIFICATION	4.626224598122515E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999986654840303	WITHOUT_CLASSIFICATION	1.3345159697828195E-6	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999936302599653	WITHOUT_CLASSIFICATION	6.369740034650944E-6	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999897455687324	WITHOUT_CLASSIFICATION	1.0254431267500024E-5	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999720946493746	WITHOUT_CLASSIFICATION	2.7905350625399762E-5	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.716335272093725	WITHOUT_CLASSIFICATION	0.28366472790627484	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9999965707369903	WITHOUT_CLASSIFICATION	3.429263009740443E-6	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999998536290722	WITHOUT_CLASSIFICATION	1.4637092792123706E-7	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999998102590401	WITHOUT_CLASSIFICATION	1.8974095998053528E-7	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999977524176803	WITHOUT_CLASSIFICATION	2.2475823197069722E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999973191083839	WITHOUT_CLASSIFICATION	2.6808916161211944E-6	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9998232801484864	WITHOUT_CLASSIFICATION	1.767198515134987E-4	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9985495531367043	WITHOUT_CLASSIFICATION	0.0014504468632956955	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999980492316306	WITHOUT_CLASSIFICATION	1.9507683693423554E-6	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999984144084694	WITHOUT_CLASSIFICATION	1.585591530592705E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.98934855460726	WITHOUT_CLASSIFICATION	0.010651445392740027	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999970473975842	WITHOUT_CLASSIFICATION	2.952602415797127E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9983506284377022	WITHOUT_CLASSIFICATION	0.001649371562297825	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999952118954527	WITHOUT_CLASSIFICATION	4.788104547228233E-6	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999941390485666	WITHOUT_CLASSIFICATION	5.860951433350185E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999996472904796	WITHOUT_CLASSIFICATION	3.5270952038003594E-7	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999992061634294	WITHOUT_CLASSIFICATION	7.938365705623884E-7	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999983402238876	WITHOUT_CLASSIFICATION	1.6597761124910243E-6	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9997688247434112	WITHOUT_CLASSIFICATION	2.3117525658871866E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.999983312109582	WITHOUT_CLASSIFICATION	1.668789041802602E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.6581132447665501	DESIGN	0.34188675523344997	WITHOUT_CLASSIFICATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999995480225186	WITHOUT_CLASSIFICATION	4.519774814635471E-7	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999166036635437	WITHOUT_CLASSIFICATION	8.339633645627724E-5	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9997880332482705	WITHOUT_CLASSIFICATION	2.119667517295593E-4	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9997880332482705	WITHOUT_CLASSIFICATION	2.119667517295593E-4	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.998023259776364	WITHOUT_CLASSIFICATION	0.001976740223636082	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9995569907033257	WITHOUT_CLASSIFICATION	4.4300929667430693E-4	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999920321627402	WITHOUT_CLASSIFICATION	7.967837259829188E-6	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999723942743257	WITHOUT_CLASSIFICATION	2.7605725674286623E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999548693180517	WITHOUT_CLASSIFICATION	4.513068194835943E-5	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9994851501212568	WITHOUT_CLASSIFICATION	5.148498787432026E-4	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999994511849034	WITHOUT_CLASSIFICATION	5.488150966375239E-7	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999644354177826	WITHOUT_CLASSIFICATION	3.556458221738684E-5	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999978038776405	WITHOUT_CLASSIFICATION	2.196122359476818E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999905548681809	WITHOUT_CLASSIFICATION	9.44513181907193E-6	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999956477035148	WITHOUT_CLASSIFICATION	4.352296485222788E-6	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999987086806532	WITHOUT_CLASSIFICATION	1.2913193468650744E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9997627352804762	WITHOUT_CLASSIFICATION	2.3726471952368637E-4	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9997579256118565	WITHOUT_CLASSIFICATION	2.4207438814358585E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999962119429799	WITHOUT_CLASSIFICATION	3.7880570201789032E-6	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999708741868846	WITHOUT_CLASSIFICATION	2.9125813115382317E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9995124492547562	WITHOUT_CLASSIFICATION	4.875507452437237E-4	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999960606607768	WITHOUT_CLASSIFICATION	3.939339223125895E-6	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999777480874668	WITHOUT_CLASSIFICATION	2.2251912533217207E-5	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9992035975750916	WITHOUT_CLASSIFICATION	7.964024249083234E-4	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999383432688491	WITHOUT_CLASSIFICATION	6.165673115084304E-5	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9998911192964505	WITHOUT_CLASSIFICATION	1.088807035495892E-4	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.99999591564884	WITHOUT_CLASSIFICATION	4.084351159993314E-6	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999992855078167	WITHOUT_CLASSIFICATION	7.144921831738728E-7	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999609984587146	WITHOUT_CLASSIFICATION	3.900154128550471E-5	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999958599050377	WITHOUT_CLASSIFICATION	4.1400949622473985E-6	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999177429792029	WITHOUT_CLASSIFICATION	8.22570207971172E-5	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9998418518117	WITHOUT_CLASSIFICATION	1.5814818830004064E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999959574589674	WITHOUT_CLASSIFICATION	4.042541032566803E-6	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999813914983398	WITHOUT_CLASSIFICATION	1.8608501660280644E-5	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9997120807932667	WITHOUT_CLASSIFICATION	2.87919206733359E-4	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999888897320733	WITHOUT_CLASSIFICATION	1.1110267926625104E-5	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999971551793703	WITHOUT_CLASSIFICATION	2.844820629659523E-6	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.999649580882163	WITHOUT_CLASSIFICATION	3.504191178368924E-4	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9998402126070274	WITHOUT_CLASSIFICATION	1.5978739297262432E-4	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9997002842473884	WITHOUT_CLASSIFICATION	2.9971575261150956E-4	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9997617297830947	WITHOUT_CLASSIFICATION	2.382702169051688E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9945462968373877	WITHOUT_CLASSIFICATION	0.005453703162612356	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.999995364590809	WITHOUT_CLASSIFICATION	4.635409191128734E-6	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999847585119428	WITHOUT_CLASSIFICATION	1.5241488057345122E-5	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999839128642859	WITHOUT_CLASSIFICATION	1.6087135714144275E-5	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9986337516625947	WITHOUT_CLASSIFICATION	0.001366248337405207	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999692786963541	WITHOUT_CLASSIFICATION	3.0721303645862536E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999905560991946	WITHOUT_CLASSIFICATION	9.443900805399185E-6	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.999990295322182	WITHOUT_CLASSIFICATION	9.704677818064733E-6	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999868377437005	WITHOUT_CLASSIFICATION	1.3162256299499792E-5	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999998725406289	WITHOUT_CLASSIFICATION	1.2745937108222927E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999942768073866	WITHOUT_CLASSIFICATION	5.7231926134191906E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999998105569886	WITHOUT_CLASSIFICATION	1.8944301135496644E-7	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9998344681082686	WITHOUT_CLASSIFICATION	1.6553189173138514E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999954390808363	WITHOUT_CLASSIFICATION	4.5609191637517815E-6	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999430116138737	WITHOUT_CLASSIFICATION	5.698838612633559E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999710724435221	WITHOUT_CLASSIFICATION	2.8927556477779407E-5	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999682158494934	WITHOUT_CLASSIFICATION	3.1784150506669545E-5	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999957362287544	WITHOUT_CLASSIFICATION	4.263771245613218E-6	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999960036496541	WITHOUT_CLASSIFICATION	3.9963503458682225E-6	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.999997035324764	WITHOUT_CLASSIFICATION	2.9646752360277553E-6	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999851803748537	WITHOUT_CLASSIFICATION	1.4819625146254219E-5	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999995432098183	WITHOUT_CLASSIFICATION	4.567901815770229E-7	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9870098647558354	WITHOUT_CLASSIFICATION	0.012990135244164595	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999909671051949	WITHOUT_CLASSIFICATION	9.032894805138896E-6	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999954390808363	WITHOUT_CLASSIFICATION	4.5609191637517815E-6	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999710724435221	WITHOUT_CLASSIFICATION	2.8927556477779407E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999430116138737	WITHOUT_CLASSIFICATION	5.698838612633559E-5	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999892109579912	WITHOUT_CLASSIFICATION	1.0789042008708069E-5	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999926248352957	WITHOUT_CLASSIFICATION	7.375164704376117E-6	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999974182818543	WITHOUT_CLASSIFICATION	2.5817181456956913E-6	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999840831970872	WITHOUT_CLASSIFICATION	1.591680291285352E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9998545557895165	WITHOUT_CLASSIFICATION	1.4544421048347163E-4	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999903039229117	WITHOUT_CLASSIFICATION	9.696077088473483E-6	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999914212626476	WITHOUT_CLASSIFICATION	8.578737352413973E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999899356461219	WITHOUT_CLASSIFICATION	1.0064353878117413E-5	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999789646646589	WITHOUT_CLASSIFICATION	2.103533534114295E-5	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999918330275657	WITHOUT_CLASSIFICATION	8.166972434402819E-6	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999896189409095	WITHOUT_CLASSIFICATION	1.0381059090500807E-5	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9997197161445938	WITHOUT_CLASSIFICATION	2.802838554063177E-4	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999981859955246	WITHOUT_CLASSIFICATION	1.8140044754729183E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999985496418398	WITHOUT_CLASSIFICATION	1.4503581602312868E-6	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999974665672062	WITHOUT_CLASSIFICATION	2.533432793809206E-6	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9999951808604675	WITHOUT_CLASSIFICATION	4.8191395325507815E-6	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9999371183764828	WITHOUT_CLASSIFICATION	6.288162351712782E-5	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999939812234501	WITHOUT_CLASSIFICATION	6.018776549937878E-6	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999939812234501	WITHOUT_CLASSIFICATION	6.018776549937878E-6	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999972965200186	WITHOUT_CLASSIFICATION	2.703479981495276E-6	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.99999482871914	WITHOUT_CLASSIFICATION	5.171280859928149E-6	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999992138354586	WITHOUT_CLASSIFICATION	7.861645414568022E-7	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9998282718233704	WITHOUT_CLASSIFICATION	1.717281766294993E-4	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999485440299535	WITHOUT_CLASSIFICATION	5.145597004658972E-5	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999964287062422	WITHOUT_CLASSIFICATION	3.5712937578526498E-6	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9997459498109432	WITHOUT_CLASSIFICATION	2.5405018905682057E-4	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9998889318642268	WITHOUT_CLASSIFICATION	1.1106813577315245E-4	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9953012789701989	WITHOUT_CLASSIFICATION	0.004698721029801015	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999361724360453	WITHOUT_CLASSIFICATION	6.382756395475885E-5	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999068981527417	WITHOUT_CLASSIFICATION	9.31018472583092E-5	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999896646949883	WITHOUT_CLASSIFICATION	1.0335305011644244E-5	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999936167288387	WITHOUT_CLASSIFICATION	6.383271161248471E-6	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9996763734968515	WITHOUT_CLASSIFICATION	3.23626503148643E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9996541732059239	WITHOUT_CLASSIFICATION	3.458267940762272E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999972487315696	WITHOUT_CLASSIFICATION	2.751268430389689E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999973413478018	WITHOUT_CLASSIFICATION	2.6586521981309006E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994223119207086	WITHOUT_CLASSIFICATION	5.776880792914181E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994223119207086	WITHOUT_CLASSIFICATION	5.776880792914181E-4	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999973878852118	WITHOUT_CLASSIFICATION	2.6121147881506124E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999959058369885	WITHOUT_CLASSIFICATION	4.094163011565083E-6	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999891734529366	WITHOUT_CLASSIFICATION	1.0826547063319083E-5	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999981645190813	WITHOUT_CLASSIFICATION	1.8354809187471666E-6	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999953734552365	WITHOUT_CLASSIFICATION	4.626544763508777E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994223119207086	WITHOUT_CLASSIFICATION	5.776880792914181E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994223119207086	WITHOUT_CLASSIFICATION	5.776880792914181E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992470889807	WITHOUT_CLASSIFICATION	7.52911019250887E-7	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992470889807	WITHOUT_CLASSIFICATION	7.52911019250887E-7	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999933387633769	WITHOUT_CLASSIFICATION	6.661236623156303E-6	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999980124717526	WITHOUT_CLASSIFICATION	1.9875282475121937E-6	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999993949070574	WITHOUT_CLASSIFICATION	6.05092942577422E-7	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.6713916069235234	DESIGN	0.3286083930764767	WITHOUT_CLASSIFICATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999996926096147	WITHOUT_CLASSIFICATION	3.073903851593153E-7	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999996926096147	WITHOUT_CLASSIFICATION	3.073903851593153E-7	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.999998829881452	WITHOUT_CLASSIFICATION	1.17011854807115E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999935548275778	WITHOUT_CLASSIFICATION	6.4451724221234795E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998360881611	WITHOUT_CLASSIFICATION	1.639118389217572E-7	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999131346749119	WITHOUT_CLASSIFICATION	8.686532508803611E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999991679127432	WITHOUT_CLASSIFICATION	8.320872567903697E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999639941121053	WITHOUT_CLASSIFICATION	3.6005887894673094E-5	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999284586686901	WITHOUT_CLASSIFICATION	7.154133130998585E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999809018148157	WITHOUT_CLASSIFICATION	1.9098185184329398E-5	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9997417565454746	WITHOUT_CLASSIFICATION	2.5824345452542903E-4	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999498367659267	WITHOUT_CLASSIFICATION	5.016323407317675E-5	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9989717716727927	WITHOUT_CLASSIFICATION	0.0010282283272072862	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999956262596342	WITHOUT_CLASSIFICATION	4.373740365859981E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999692770055181	WITHOUT_CLASSIFICATION	3.072299448189644E-5	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999712199839725	WITHOUT_CLASSIFICATION	2.8780016027412808E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999972487315696	WITHOUT_CLASSIFICATION	2.751268430389689E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994223119207086	WITHOUT_CLASSIFICATION	5.776880792914181E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992470889807	WITHOUT_CLASSIFICATION	7.52911019250887E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999639941121053	WITHOUT_CLASSIFICATION	3.6005887894673094E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9950955646727928	WITHOUT_CLASSIFICATION	0.004904435327207114	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9950955646727928	WITHOUT_CLASSIFICATION	0.004904435327207114	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999949452853613	WITHOUT_CLASSIFICATION	5.0547146387937936E-6	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999993623837307	WITHOUT_CLASSIFICATION	6.376162694074893E-7	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.999927716360122	WITHOUT_CLASSIFICATION	7.228363987791666E-5	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999547608196	WITHOUT_CLASSIFICATION	4.5239180323563406E-8	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999999325609858	WITHOUT_CLASSIFICATION	6.743901418573746E-8	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9988252424281615	WITHOUT_CLASSIFICATION	0.0011747575718384993	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9918263798021825	WITHOUT_CLASSIFICATION	0.008173620197817451	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9986946559976865	WITHOUT_CLASSIFICATION	0.0013053440023136026	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999993541257636	WITHOUT_CLASSIFICATION	6.458742364541631E-7	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9997856916125436	WITHOUT_CLASSIFICATION	2.1430838745651454E-4	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9998659710299439	WITHOUT_CLASSIFICATION	1.3402897005621408E-4	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999673595394455	WITHOUT_CLASSIFICATION	3.264046055460337E-5	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.999914382281906	WITHOUT_CLASSIFICATION	8.561771809398891E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999973413478018	WITHOUT_CLASSIFICATION	2.6586521981309006E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992470889807	WITHOUT_CLASSIFICATION	7.52911019250887E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999935548275778	WITHOUT_CLASSIFICATION	6.4451724221234795E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998360881611	WITHOUT_CLASSIFICATION	1.639118389217572E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998360881611	WITHOUT_CLASSIFICATION	1.639118389217572E-7	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999991679127432	WITHOUT_CLASSIFICATION	8.320872567903697E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999639941121053	WITHOUT_CLASSIFICATION	3.6005887894673094E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999639941121053	WITHOUT_CLASSIFICATION	3.6005887894673094E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9950955646727928	WITHOUT_CLASSIFICATION	0.004904435327207114	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999561587951414	WITHOUT_CLASSIFICATION	4.384120485861456E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999622654669291	WITHOUT_CLASSIFICATION	3.773453307080158E-5	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999996828693658	WITHOUT_CLASSIFICATION	3.171306341511091E-7	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9987665144748139	WITHOUT_CLASSIFICATION	0.0012334855251860909	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9777303554090653	WITHOUT_CLASSIFICATION	0.022269644590934747	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9995361355326813	WITHOUT_CLASSIFICATION	4.63864467318746E-4	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999993585104501	WITHOUT_CLASSIFICATION	6.414895499156365E-7	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.999988857925854	WITHOUT_CLASSIFICATION	1.1142074146016732E-5	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999998742628146	WITHOUT_CLASSIFICATION	1.2573718548330376E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999935548275778	WITHOUT_CLASSIFICATION	6.4451724221234795E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998360881611	WITHOUT_CLASSIFICATION	1.639118389217572E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998360881611	WITHOUT_CLASSIFICATION	1.639118389217572E-7	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999991679127432	WITHOUT_CLASSIFICATION	8.320872567903697E-7	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9986946559976865	WITHOUT_CLASSIFICATION	0.0013053440023136026	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9997856916125436	WITHOUT_CLASSIFICATION	2.1430838745651454E-4	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999998323982573	WITHOUT_CLASSIFICATION	1.6760174258958884E-7	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999987366241485	WITHOUT_CLASSIFICATION	1.263375851602996E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999971409002979	WITHOUT_CLASSIFICATION	2.8590997021130275E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999971409002979	WITHOUT_CLASSIFICATION	2.8590997021130275E-6	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9997164413103431	WITHOUT_CLASSIFICATION	2.835586896569556E-4	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999640915233462	WITHOUT_CLASSIFICATION	3.5908476653836175E-5	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.998339539848166	WITHOUT_CLASSIFICATION	0.0016604601518339884	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999800712917702	WITHOUT_CLASSIFICATION	1.992870822978117E-5	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999971538631176	WITHOUT_CLASSIFICATION	2.8461368824903473E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999971538631176	WITHOUT_CLASSIFICATION	2.8461368824903473E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999397008385403	WITHOUT_CLASSIFICATION	6.029916145969934E-5	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999397008385403	WITHOUT_CLASSIFICATION	6.029916145969934E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999532868033917	WITHOUT_CLASSIFICATION	4.6713196608328594E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999532868033917	WITHOUT_CLASSIFICATION	4.6713196608328594E-5	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999985265640047	WITHOUT_CLASSIFICATION	1.4734359953470006E-6	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999999322379695	WITHOUT_CLASSIFICATION	6.776203046760276E-8	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998559720799804	WITHOUT_CLASSIFICATION	1.4402792001957652E-4	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999988682348002	WITHOUT_CLASSIFICATION	1.1317651998786194E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999955036912064	WITHOUT_CLASSIFICATION	4.496308793520953E-6	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.999999413030987	WITHOUT_CLASSIFICATION	5.86969013046644E-7	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9946512533083808	WITHOUT_CLASSIFICATION	0.005348746691619248	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999946935102821	WITHOUT_CLASSIFICATION	5.306489717865808E-6	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9995134041772892	WITHOUT_CLASSIFICATION	4.865958227108185E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.6977218003042548	WITHOUT_CLASSIFICATION	0.30227819969574526	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999978424124889	WITHOUT_CLASSIFICATION	2.1575875110946424E-6	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999973899852552	WITHOUT_CLASSIFICATION	2.6100147448041935E-6	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9995798894079151	WITHOUT_CLASSIFICATION	4.2011059208491345E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999469355413887	WITHOUT_CLASSIFICATION	5.3064458611188703E-5	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999469355413887	WITHOUT_CLASSIFICATION	5.3064458611188703E-5	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9998618522202221	WITHOUT_CLASSIFICATION	1.3814777977787913E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999720946493746	WITHOUT_CLASSIFICATION	2.7905350625399762E-5	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9919029063084168	WITHOUT_CLASSIFICATION	0.008097093691583228	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999958881375965	WITHOUT_CLASSIFICATION	4.111862403457575E-6	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999981165424717	WITHOUT_CLASSIFICATION	1.8834575282922748E-6	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999593844833624	WITHOUT_CLASSIFICATION	4.0615516637608125E-5	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999433319533221	WITHOUT_CLASSIFICATION	5.666804667790735E-4	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999801751133219	WITHOUT_CLASSIFICATION	1.9824886678128285E-5	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999986523965	WITHOUT_CLASSIFICATION	1.3476034482297111E-9	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.999999985664998	WITHOUT_CLASSIFICATION	1.4335001909421023E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999998306648649	WITHOUT_CLASSIFICATION	1.6933513515048182E-7	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999263755976849	WITHOUT_CLASSIFICATION	7.36244023151154E-5	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999995888512857	WITHOUT_CLASSIFICATION	4.111487143004932E-7	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999970175042893	WITHOUT_CLASSIFICATION	2.982495710780778E-6	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9997179683113826	WITHOUT_CLASSIFICATION	2.8203168861739956E-4	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9995662926045149	WITHOUT_CLASSIFICATION	4.337073954851408E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999408101631939	WITHOUT_CLASSIFICATION	5.918983680604499E-5	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999995826082015	WITHOUT_CLASSIFICATION	4.1739179842089037E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999986371431691	WITHOUT_CLASSIFICATION	1.3628568308840773E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999986371431691	WITHOUT_CLASSIFICATION	1.3628568308840773E-6	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999995483847748	WITHOUT_CLASSIFICATION	4.5161522517342227E-7	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9995664289398541	WITHOUT_CLASSIFICATION	4.335710601458108E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9999225947240545	WITHOUT_CLASSIFICATION	7.740527594550056E-5	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9999225947240545	WITHOUT_CLASSIFICATION	7.740527594550056E-5	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999975784975017	WITHOUT_CLASSIFICATION	2.421502498283117E-6	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999746893441468	WITHOUT_CLASSIFICATION	2.5310655853207097E-5	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998448405300123	WITHOUT_CLASSIFICATION	1.551594699877462E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999542474954288	WITHOUT_CLASSIFICATION	4.575250457115327E-5	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999986325228475	WITHOUT_CLASSIFICATION	1.3674771525986384E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999977247904182	WITHOUT_CLASSIFICATION	2.2752095817873232E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999977247904182	WITHOUT_CLASSIFICATION	2.2752095817873232E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999535080725	WITHOUT_CLASSIFICATION	4.64919274874116E-8	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999997370160072	WITHOUT_CLASSIFICATION	2.6298399281060266E-7	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999996019926178	WITHOUT_CLASSIFICATION	3.9800738223947817E-7	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994945301495581	WITHOUT_CLASSIFICATION	5.054698504419308E-4	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9995664289398541	WITHOUT_CLASSIFICATION	4.335710601458108E-4	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999528442602148	WITHOUT_CLASSIFICATION	4.7155739785149865E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999651847138701	WITHOUT_CLASSIFICATION	3.4815286129887976E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999651847138701	WITHOUT_CLASSIFICATION	3.4815286129887976E-5	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999958669651045	WITHOUT_CLASSIFICATION	4.133034895561023E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992766622531	WITHOUT_CLASSIFICATION	7.233377467902566E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992766622531	WITHOUT_CLASSIFICATION	7.233377467902566E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999999998787844	WITHOUT_CLASSIFICATION	1.2121559600653918E-9	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999999998787844	WITHOUT_CLASSIFICATION	1.2121559600653918E-9	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999999998787844	WITHOUT_CLASSIFICATION	1.2121559600653918E-9	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992766622531	WITHOUT_CLASSIFICATION	7.233377467902566E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992766622531	WITHOUT_CLASSIFICATION	7.233377467902566E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999958669651045	WITHOUT_CLASSIFICATION	4.133034895561023E-6	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999867491530544	WITHOUT_CLASSIFICATION	1.3250846945596728E-4	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999989822089816	WITHOUT_CLASSIFICATION	1.0177910184181017E-6	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999854883221626	WITHOUT_CLASSIFICATION	1.45116778373641E-5	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999947312114328	WITHOUT_CLASSIFICATION	5.268788567176512E-6	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999936367597	WITHOUT_CLASSIFICATION	6.3632403398514395E-9	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999954113391364	WITHOUT_CLASSIFICATION	4.5886608637252845E-6	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999997425115732	WITHOUT_CLASSIFICATION	2.574884267864054E-7	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999998918202413	WITHOUT_CLASSIFICATION	1.0817975872476651E-7	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999998306648649	WITHOUT_CLASSIFICATION	1.6933513515048182E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992766622531	WITHOUT_CLASSIFICATION	7.233377467902566E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992766622531	WITHOUT_CLASSIFICATION	7.233377467902566E-7	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999965376857606	WITHOUT_CLASSIFICATION	3.462314239426136E-6	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999989061651696	WITHOUT_CLASSIFICATION	1.093834830298794E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999973529013679	WITHOUT_CLASSIFICATION	2.6470986322003256E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999997443642034	WITHOUT_CLASSIFICATION	2.556357965381177E-7	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999974366121169	WITHOUT_CLASSIFICATION	2.5633878830652856E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999998345528623	WITHOUT_CLASSIFICATION	1.6544713754804202E-7	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999996340989671	WITHOUT_CLASSIFICATION	3.65901032923546E-7	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999182189611	WITHOUT_CLASSIFICATION	8.178103897108266E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999988721870963	WITHOUT_CLASSIFICATION	1.1278129037211138E-6	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9962067591565467	WITHOUT_CLASSIFICATION	0.0037932408434533803	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999826226244459	WITHOUT_CLASSIFICATION	1.737737555411067E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999768059287761	WITHOUT_CLASSIFICATION	2.3194071223921016E-5	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999914730519	WITHOUT_CLASSIFICATION	8.526948188044298E-9	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999998365155125	WITHOUT_CLASSIFICATION	1.634844876035005E-7	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999623842223	WITHOUT_CLASSIFICATION	3.761577776847821E-8	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999931785092753	WITHOUT_CLASSIFICATION	6.8214907247427035E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999931785092753	WITHOUT_CLASSIFICATION	6.8214907247427035E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999931785092753	WITHOUT_CLASSIFICATION	6.8214907247427035E-6	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9999969060867537	WITHOUT_CLASSIFICATION	3.093913246287558E-6	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999966781573	WITHOUT_CLASSIFICATION	3.3218426716946928E-9	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999995618903691	WITHOUT_CLASSIFICATION	4.3810963095946374E-7	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999997155104046	WITHOUT_CLASSIFICATION	2.8448959540807913E-7	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999997479675438	WITHOUT_CLASSIFICATION	2.520324561790379E-7	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999944598027271	WITHOUT_CLASSIFICATION	5.540197272897923E-5	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999714359858498	WITHOUT_CLASSIFICATION	2.8564014150201857E-5	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999977289752787	WITHOUT_CLASSIFICATION	2.2710247212832518E-6	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999962816672862	WITHOUT_CLASSIFICATION	3.7183327137106806E-6	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999968121672953	WITHOUT_CLASSIFICATION	3.1878327046992425E-6	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9996861172052303	WITHOUT_CLASSIFICATION	3.1388279476966005E-4	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9996786426908051	WITHOUT_CLASSIFICATION	3.2135730919493965E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999535080725	WITHOUT_CLASSIFICATION	4.64919274874116E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992766622531	WITHOUT_CLASSIFICATION	7.233377467902566E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999992766622531	WITHOUT_CLASSIFICATION	7.233377467902566E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999958669651045	WITHOUT_CLASSIFICATION	4.133034895561023E-6	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999954113391364	WITHOUT_CLASSIFICATION	4.5886608637252845E-6	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999989061651696	WITHOUT_CLASSIFICATION	1.093834830298794E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999997443642034	WITHOUT_CLASSIFICATION	2.556357965381177E-7	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999998345528623	WITHOUT_CLASSIFICATION	1.6544713754804202E-7	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999973529013679	WITHOUT_CLASSIFICATION	2.6470986322003256E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999996340989671	WITHOUT_CLASSIFICATION	3.65901032923546E-7	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9962067591565467	WITHOUT_CLASSIFICATION	0.0037932408434533803	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999988721870963	WITHOUT_CLASSIFICATION	1.1278129037211138E-6	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999768059287761	WITHOUT_CLASSIFICATION	2.3194071223921016E-5	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999804314962971	WITHOUT_CLASSIFICATION	1.956850370290789E-5	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999882069707089	WITHOUT_CLASSIFICATION	1.1793029291036168E-5	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.999838210072574	WITHOUT_CLASSIFICATION	1.6178992742596425E-4	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999994267958938	WITHOUT_CLASSIFICATION	5.732041061522714E-7	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9998330346413375	WITHOUT_CLASSIFICATION	1.6696535866239594E-4	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999691622244873	WITHOUT_CLASSIFICATION	3.0837775512685085E-5	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9998032766295546	WITHOUT_CLASSIFICATION	1.9672337044536294E-4	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999976196500523	WITHOUT_CLASSIFICATION	2.3803499476807277E-6	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9993892908278238	WITHOUT_CLASSIFICATION	6.107091721761915E-4	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999997754045146	WITHOUT_CLASSIFICATION	2.2459548537435166E-7	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999328216932255	WITHOUT_CLASSIFICATION	6.71783067744112E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999957488986162	WITHOUT_CLASSIFICATION	4.251101383878743E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998808351576	WITHOUT_CLASSIFICATION	1.1916484239738691E-7	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9713989719008889	WITHOUT_CLASSIFICATION	0.028601028099111154	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999995734570422	WITHOUT_CLASSIFICATION	4.2654295783616746E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.999388032547797	WITHOUT_CLASSIFICATION	6.119674522031589E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999358263237729	WITHOUT_CLASSIFICATION	6.417367622717563E-5	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999907326360268	WITHOUT_CLASSIFICATION	9.267363973263087E-6	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999998931582011	WITHOUT_CLASSIFICATION	1.0684179891491212E-7	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999711400942379	WITHOUT_CLASSIFICATION	2.885990576210662E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999550408230777	WITHOUT_CLASSIFICATION	4.495917692223136E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999932248677899	WITHOUT_CLASSIFICATION	6.775132210056367E-6	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999932248677899	WITHOUT_CLASSIFICATION	6.775132210056367E-6	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999277978012294	WITHOUT_CLASSIFICATION	7.220219877058652E-5	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9940850203812001	WITHOUT_CLASSIFICATION	0.0059149796187999105	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999653336259589	WITHOUT_CLASSIFICATION	3.466637404126234E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999653336259589	WITHOUT_CLASSIFICATION	3.466637404126234E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999653336259589	WITHOUT_CLASSIFICATION	3.466637404126234E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999697549032379	WITHOUT_CLASSIFICATION	3.024509676214641E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999697549032379	WITHOUT_CLASSIFICATION	3.024509676214641E-5	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999697724462114	WITHOUT_CLASSIFICATION	3.0227553788625587E-5	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9999513276523888	WITHOUT_CLASSIFICATION	4.867234761129205E-5	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9940850203812001	WITHOUT_CLASSIFICATION	0.0059149796187999105	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999998623380141	WITHOUT_CLASSIFICATION	1.3766198594034705E-7	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999653336259589	WITHOUT_CLASSIFICATION	3.466637404126234E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999653336259589	WITHOUT_CLASSIFICATION	3.466637404126234E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999697549032379	WITHOUT_CLASSIFICATION	3.024509676214641E-5	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9999513276523888	WITHOUT_CLASSIFICATION	4.867234761129205E-5	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999983452322933	WITHOUT_CLASSIFICATION	1.6547677067372566E-6	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999983452322933	WITHOUT_CLASSIFICATION	1.6547677067372566E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999953506204337	WITHOUT_CLASSIFICATION	4.649379566366074E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999953506204337	WITHOUT_CLASSIFICATION	4.649379566366074E-6	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999776399077677	WITHOUT_CLASSIFICATION	2.236009223240003E-5	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999776399077677	WITHOUT_CLASSIFICATION	2.236009223240003E-5	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999783579719813	WITHOUT_CLASSIFICATION	2.1642028018646557E-5	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999987849211812	WITHOUT_CLASSIFICATION	1.2150788187489201E-6	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999987849211812	WITHOUT_CLASSIFICATION	1.2150788187489201E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999809391522815	WITHOUT_CLASSIFICATION	1.906084771844226E-5	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999809391522815	WITHOUT_CLASSIFICATION	1.906084771844226E-5	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999989646753781	WITHOUT_CLASSIFICATION	1.0353246219161806E-6	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.999981008331032	WITHOUT_CLASSIFICATION	1.8991668967975814E-5	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.999981008331032	WITHOUT_CLASSIFICATION	1.8991668967975814E-5	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9990748121469801	WITHOUT_CLASSIFICATION	9.251878530197537E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.999965924318415	WITHOUT_CLASSIFICATION	3.407568158499837E-5	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.999991815863107	WITHOUT_CLASSIFICATION	8.18413689293633E-6	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9990748121469801	WITHOUT_CLASSIFICATION	9.251878530197537E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999960954041659	WITHOUT_CLASSIFICATION	3.9045958340220345E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999967881738661	WITHOUT_CLASSIFICATION	3.211826133982351E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999967881738661	WITHOUT_CLASSIFICATION	3.211826133982351E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999967881738661	WITHOUT_CLASSIFICATION	3.211826133982351E-6	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999853739902238	WITHOUT_CLASSIFICATION	1.4626009776090741E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999993219940239	WITHOUT_CLASSIFICATION	6.780059761950685E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999985077212251	WITHOUT_CLASSIFICATION	1.4922787748498705E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999985077212251	WITHOUT_CLASSIFICATION	1.4922787748498705E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999957660258537	WITHOUT_CLASSIFICATION	4.233974146242596E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.999974990967728	WITHOUT_CLASSIFICATION	2.5009032271941647E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999974808652713	WITHOUT_CLASSIFICATION	2.5191347287233987E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999952361097645	WITHOUT_CLASSIFICATION	4.763890235522858E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999995415724766	WITHOUT_CLASSIFICATION	4.584275233809668E-7	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999975974963431	WITHOUT_CLASSIFICATION	2.4025036569339436E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999975974963431	WITHOUT_CLASSIFICATION	2.4025036569339436E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999938953754797	WITHOUT_CLASSIFICATION	6.104624520287929E-6	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999538628920055	WITHOUT_CLASSIFICATION	4.613710799452951E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999538628920055	WITHOUT_CLASSIFICATION	4.613710799452951E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999967881738661	WITHOUT_CLASSIFICATION	3.211826133982351E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999993219940239	WITHOUT_CLASSIFICATION	6.780059761950685E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999985077212251	WITHOUT_CLASSIFICATION	1.4922787748498705E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999957660258537	WITHOUT_CLASSIFICATION	4.233974146242596E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.999974990967728	WITHOUT_CLASSIFICATION	2.5009032271941647E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999974808652713	WITHOUT_CLASSIFICATION	2.5191347287233987E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999952361097645	WITHOUT_CLASSIFICATION	4.763890235522858E-6	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999538628920055	WITHOUT_CLASSIFICATION	4.613710799452951E-5	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998611823622843	WITHOUT_CLASSIFICATION	1.3881763771577606E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9998554955590707	WITHOUT_CLASSIFICATION	1.445044409292201E-4	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999891219572153	WITHOUT_CLASSIFICATION	1.087804278465576E-5	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999889221637025	WITHOUT_CLASSIFICATION	1.1077836297443181E-5	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999945413195392	WITHOUT_CLASSIFICATION	5.458680460850594E-6	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999228214403657	WITHOUT_CLASSIFICATION	7.717855963430407E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.999990814818895	WITHOUT_CLASSIFICATION	9.18518110501208E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.999990814818895	WITHOUT_CLASSIFICATION	9.18518110501208E-6	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999740652682828	WITHOUT_CLASSIFICATION	2.593473171714482E-5	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999758099120423	WITHOUT_CLASSIFICATION	2.41900879576911E-5	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9998804613520631	WITHOUT_CLASSIFICATION	1.1953864793685888E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999977992535442	WITHOUT_CLASSIFICATION	2.200746455854877E-6	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999852504145107	WITHOUT_CLASSIFICATION	1.4749585489297612E-5	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999852504145107	WITHOUT_CLASSIFICATION	1.4749585489297612E-5	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999133346402063	WITHOUT_CLASSIFICATION	8.666535979377002E-5	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9998556929190422	WITHOUT_CLASSIFICATION	1.4430708095779365E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999838024084569	WITHOUT_CLASSIFICATION	1.6197591543149714E-5	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999838024084569	WITHOUT_CLASSIFICATION	1.6197591543149714E-5	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999913472419122	WITHOUT_CLASSIFICATION	8.652758087756201E-6	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999540425762121	WITHOUT_CLASSIFICATION	4.595742378787489E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999995415724766	WITHOUT_CLASSIFICATION	4.584275233809668E-7	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999502397617157	WITHOUT_CLASSIFICATION	4.976023828428216E-5	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999921347334635	WITHOUT_CLASSIFICATION	7.865266536430405E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999988847758384	WITHOUT_CLASSIFICATION	1.1152241614808341E-6	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999829411523337	WITHOUT_CLASSIFICATION	1.7058847666370003E-5	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999806606183486	WITHOUT_CLASSIFICATION	1.9339381651444215E-5	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999761382703075	WITHOUT_CLASSIFICATION	2.3861729692489236E-5	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999918591920012	WITHOUT_CLASSIFICATION	8.140807998863294E-6	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9998113717954472	WITHOUT_CLASSIFICATION	1.8862820455267887E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998829456227458	WITHOUT_CLASSIFICATION	1.1705437725410317E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998829456227458	WITHOUT_CLASSIFICATION	1.1705437725410317E-4	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999942197810182	WITHOUT_CLASSIFICATION	5.780218981807079E-6	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999942197810182	WITHOUT_CLASSIFICATION	5.780218981807079E-6	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999987964260081	WITHOUT_CLASSIFICATION	1.2035739919282458E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999188201335022	WITHOUT_CLASSIFICATION	8.117986649791283E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999188201335022	WITHOUT_CLASSIFICATION	8.117986649791283E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999188201335022	WITHOUT_CLASSIFICATION	8.117986649791283E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999910077471067	WITHOUT_CLASSIFICATION	8.992252893261994E-6	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999945417801188	WITHOUT_CLASSIFICATION	5.458219881128964E-6	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999945417801188	WITHOUT_CLASSIFICATION	5.458219881128964E-6	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999745954831	WITHOUT_CLASSIFICATION	2.540451693162883E-8	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999769521673679	WITHOUT_CLASSIFICATION	2.304783263205609E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999951194137986	WITHOUT_CLASSIFICATION	4.880586201394481E-6	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999997105978563	WITHOUT_CLASSIFICATION	2.8940214369421653E-7	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999975564221675	WITHOUT_CLASSIFICATION	2.4435778325781934E-6	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.999985088870088	WITHOUT_CLASSIFICATION	1.4911129911958505E-5	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999974235888583	WITHOUT_CLASSIFICATION	2.5764111416948606E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998808351576	WITHOUT_CLASSIFICATION	1.1916484239738691E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998808351576	WITHOUT_CLASSIFICATION	1.1916484239738691E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999910077471067	WITHOUT_CLASSIFICATION	8.992252893261994E-6	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999745954831	WITHOUT_CLASSIFICATION	2.540451693162883E-8	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999967943062832	WITHOUT_CLASSIFICATION	3.2056937167851552E-6	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999769521673679	WITHOUT_CLASSIFICATION	2.304783263205609E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999951194137986	WITHOUT_CLASSIFICATION	4.880586201394481E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999992572248149	WITHOUT_CLASSIFICATION	7.42775185075355E-7	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999916337177353	WITHOUT_CLASSIFICATION	8.366282264840073E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999997233520208	WITHOUT_CLASSIFICATION	2.7664797919218604E-6	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9999687065678305	WITHOUT_CLASSIFICATION	3.129343216951157E-5	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999999861108887	WITHOUT_CLASSIFICATION	1.38891113159972E-8	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999978065770857	WITHOUT_CLASSIFICATION	2.193422914248489E-6	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.999999427735344	WITHOUT_CLASSIFICATION	5.722646560053737E-7	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999992572248149	WITHOUT_CLASSIFICATION	7.42775185075355E-7	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9991564441645397	WITHOUT_CLASSIFICATION	8.435558354602042E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9991564441645397	WITHOUT_CLASSIFICATION	8.435558354602042E-4	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999975490344531	WITHOUT_CLASSIFICATION	2.450965546828252E-6	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999767344703068	WITHOUT_CLASSIFICATION	2.326552969322444E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9995621571916057	WITHOUT_CLASSIFICATION	4.3784280839429316E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999959972481743	WITHOUT_CLASSIFICATION	4.0027518256647E-6	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999988411726742	WITHOUT_CLASSIFICATION	1.158827325756892E-6	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9994808098737517	WITHOUT_CLASSIFICATION	5.19190126248379E-4	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999917264383031	WITHOUT_CLASSIFICATION	8.273561696840575E-6	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9993694241826436	WITHOUT_CLASSIFICATION	6.305758173564721E-4	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999986028631583	WITHOUT_CLASSIFICATION	1.397136841642771E-6	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999985574373262	WITHOUT_CLASSIFICATION	1.4425626737909915E-6	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9997858537555504	WITHOUT_CLASSIFICATION	2.14146244449655E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999959972481743	WITHOUT_CLASSIFICATION	4.0027518256647E-6	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999988411726742	WITHOUT_CLASSIFICATION	1.158827325756892E-6	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999946240819426	WITHOUT_CLASSIFICATION	5.375918057418547E-6	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999902280283259	WITHOUT_CLASSIFICATION	9.771971674095631E-6	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999998184031458	WITHOUT_CLASSIFICATION	1.81596854342283E-7	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999789330006259	WITHOUT_CLASSIFICATION	2.106699937404325E-5	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999851610834509	WITHOUT_CLASSIFICATION	1.483891654902524E-5	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.999997320812777	WITHOUT_CLASSIFICATION	2.679187222865045E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9999186876730598	WITHOUT_CLASSIFICATION	8.131232694015087E-5	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999858881452993	WITHOUT_CLASSIFICATION	1.411185470066744E-5	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999744899423282	WITHOUT_CLASSIFICATION	2.5510057671696382E-5	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999886755419954	WITHOUT_CLASSIFICATION	1.1324458004480194E-5	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999798409555447	WITHOUT_CLASSIFICATION	2.015904445528658E-5	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9999901990829494	WITHOUT_CLASSIFICATION	9.800917050585547E-6	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999344471484727	WITHOUT_CLASSIFICATION	6.555285152740742E-5	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9626991278178495	WITHOUT_CLASSIFICATION	0.03730087218215054	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9303667900660508	WITHOUT_CLASSIFICATION	0.06963320993394914	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999994669760804	WITHOUT_CLASSIFICATION	5.330239195736387E-7	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999486243254327	WITHOUT_CLASSIFICATION	5.137567456721627E-5	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.999970569672039	WITHOUT_CLASSIFICATION	2.9430327960953033E-5	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999985037313224	WITHOUT_CLASSIFICATION	1.4962686775990891E-5	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999931047882828	WITHOUT_CLASSIFICATION	6.8952117171606725E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999486243254327	WITHOUT_CLASSIFICATION	5.137567456721627E-5	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.999970569672039	WITHOUT_CLASSIFICATION	2.9430327960953033E-5	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999985037313224	WITHOUT_CLASSIFICATION	1.4962686775990891E-5	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999618625088651	WITHOUT_CLASSIFICATION	3.8137491134936916E-5	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999464734505207	WITHOUT_CLASSIFICATION	5.352654947929619E-4	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.995371058567893	WITHOUT_CLASSIFICATION	0.004628941432106973	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999956244003539	WITHOUT_CLASSIFICATION	4.375599646005348E-6	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9991951526237627	WITHOUT_CLASSIFICATION	8.048473762373062E-4	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9998716480184854	WITHOUT_CLASSIFICATION	1.283519815145144E-4	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9987800501140834	WITHOUT_CLASSIFICATION	0.0012199498859165542	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9982746264480354	WITHOUT_CLASSIFICATION	0.0017253735519644855	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9999987902802856	WITHOUT_CLASSIFICATION	1.2097197143879159E-6	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999979212485304	WITHOUT_CLASSIFICATION	2.078751469595354E-6	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9878812144098897	DESIGN	0.012118785590110356	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999954143206111	WITHOUT_CLASSIFICATION	4.585679388880388E-6	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9998805720738468	WITHOUT_CLASSIFICATION	1.1942792615325033E-4	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999999064340411	WITHOUT_CLASSIFICATION	9.356595890400016E-8	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999994232401238	WITHOUT_CLASSIFICATION	5.767598761370061E-7	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999846397214669	WITHOUT_CLASSIFICATION	1.5360278533140378E-5	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999954829141552	WITHOUT_CLASSIFICATION	4.517085844813752E-6	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9885502277404599	WITHOUT_CLASSIFICATION	0.011449772259540152	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998461663711444	WITHOUT_CLASSIFICATION	1.538336288556403E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999998004559609	WITHOUT_CLASSIFICATION	1.9954403896492965E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999552174414243	WITHOUT_CLASSIFICATION	4.478255857567709E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999951034584836	WITHOUT_CLASSIFICATION	4.896541516395296E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999951034584836	WITHOUT_CLASSIFICATION	4.896541516395296E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999923454953243	WITHOUT_CLASSIFICATION	7.654504675691225E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999923454953243	WITHOUT_CLASSIFICATION	7.654504675691225E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999718075303335	WITHOUT_CLASSIFICATION	2.819246966647562E-5	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999718075303335	WITHOUT_CLASSIFICATION	2.819246966647562E-5	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999421131854	WITHOUT_CLASSIFICATION	5.78868144456085E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999838436274	WITHOUT_CLASSIFICATION	1.6156372564867183E-8	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999947159691789	WITHOUT_CLASSIFICATION	5.28403082107692E-6	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999870776522596	WITHOUT_CLASSIFICATION	1.2922347740489227E-5	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999955959185	WITHOUT_CLASSIFICATION	4.404081489332666E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9989469307017718	WITHOUT_CLASSIFICATION	0.0010530692982282442	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999995916525594	WITHOUT_CLASSIFICATION	4.083474406777182E-7	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9999995218596568	WITHOUT_CLASSIFICATION	4.781403431614422E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998808351576	WITHOUT_CLASSIFICATION	1.1916484239738691E-7	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999421131854	WITHOUT_CLASSIFICATION	5.78868144456085E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999838436274	WITHOUT_CLASSIFICATION	1.6156372564867183E-8	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999947159691789	WITHOUT_CLASSIFICATION	5.28403082107692E-6	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999955959185	WITHOUT_CLASSIFICATION	4.404081489332666E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9989469307017718	WITHOUT_CLASSIFICATION	0.0010530692982282442	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999987642717765	WITHOUT_CLASSIFICATION	1.2357282236097118E-6	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999989463789872	WITHOUT_CLASSIFICATION	1.0536210127608725E-6	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999199287699209	WITHOUT_CLASSIFICATION	8.007123007913019E-5	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999199287699209	WITHOUT_CLASSIFICATION	8.007123007913019E-5	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9993946346372728	WITHOUT_CLASSIFICATION	6.053653627271329E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999231699471	WITHOUT_CLASSIFICATION	7.683005284716877E-8	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998721408277415	WITHOUT_CLASSIFICATION	1.2785917225864506E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999985907351074	WITHOUT_CLASSIFICATION	1.4092648925184023E-6	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999985907351074	WITHOUT_CLASSIFICATION	1.4092648925184023E-6	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999761016564775	WITHOUT_CLASSIFICATION	2.3898343522396256E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999359515181053	WITHOUT_CLASSIFICATION	6.404848189465936E-5	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999995979502122	WITHOUT_CLASSIFICATION	4.020497877020298E-7	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999740688088018	WITHOUT_CLASSIFICATION	2.5931191198199423E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9998658906029787	WITHOUT_CLASSIFICATION	1.3410939702130162E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9713989719008889	WITHOUT_CLASSIFICATION	0.028601028099111154	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999995734570422	WITHOUT_CLASSIFICATION	4.2654295783616746E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.999388032547797	WITHOUT_CLASSIFICATION	6.119674522031589E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999358263237729	WITHOUT_CLASSIFICATION	6.417367622717563E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999711400942379	WITHOUT_CLASSIFICATION	2.885990576210662E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999550408230777	WITHOUT_CLASSIFICATION	4.495917692223136E-5	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999761016564775	WITHOUT_CLASSIFICATION	2.3898343522396256E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999359515181053	WITHOUT_CLASSIFICATION	6.404848189465936E-5	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999740688088018	WITHOUT_CLASSIFICATION	2.5931191198199423E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999959379774851	WITHOUT_CLASSIFICATION	4.062022514886871E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998721408277415	WITHOUT_CLASSIFICATION	1.2785917225864506E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998721408277415	WITHOUT_CLASSIFICATION	1.2785917225864506E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9997858537555504	WITHOUT_CLASSIFICATION	2.14146244449655E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9997858537555504	WITHOUT_CLASSIFICATION	2.14146244449655E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999985596122957	WITHOUT_CLASSIFICATION	1.4403877043772497E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999985596122957	WITHOUT_CLASSIFICATION	1.4403877043772497E-6	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999998581341045	WITHOUT_CLASSIFICATION	1.4186589551440504E-7	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999996694605157	WITHOUT_CLASSIFICATION	3.305394843762482E-7	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9997186480881997	WITHOUT_CLASSIFICATION	2.813519118003817E-4	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999994663701506	WITHOUT_CLASSIFICATION	5.336298494499365E-7	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999997724231088	WITHOUT_CLASSIFICATION	2.2757689118610164E-7	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.99999964854034	WITHOUT_CLASSIFICATION	3.5145966004570916E-7	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9997475686828784	WITHOUT_CLASSIFICATION	2.524313171215647E-4	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9971404695344439	WITHOUT_CLASSIFICATION	0.0028595304655561426	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999853021067	WITHOUT_CLASSIFICATION	1.46978934210193E-8	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999965317343046	WITHOUT_CLASSIFICATION	3.4682656955216004E-6	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999709847018148	WITHOUT_CLASSIFICATION	2.9015298185210796E-5	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999953268495497	WITHOUT_CLASSIFICATION	4.673150450322204E-6	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999551731692959	WITHOUT_CLASSIFICATION	4.482683070402803E-5	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999330294471	WITHOUT_CLASSIFICATION	6.697055287903581E-8	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999982348594	WITHOUT_CLASSIFICATION	1.7651405658914649E-9	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999565370036811	WITHOUT_CLASSIFICATION	4.346299631892297E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999929643089568	WITHOUT_CLASSIFICATION	7.035691043224295E-6	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.999999645778448	WITHOUT_CLASSIFICATION	3.542215520595295E-7	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999983747045689	WITHOUT_CLASSIFICATION	1.625295431152142E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999995734570422	WITHOUT_CLASSIFICATION	4.2654295783616746E-7	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999358263237729	WITHOUT_CLASSIFICATION	6.417367622717563E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999932248677899	WITHOUT_CLASSIFICATION	6.775132210056367E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999985077212251	WITHOUT_CLASSIFICATION	1.4922787748498705E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999985077212251	WITHOUT_CLASSIFICATION	1.4922787748498705E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999959379774851	WITHOUT_CLASSIFICATION	4.062022514886871E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998721408277415	WITHOUT_CLASSIFICATION	1.2785917225864506E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9997858537555504	WITHOUT_CLASSIFICATION	2.14146244449655E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999985596122957	WITHOUT_CLASSIFICATION	1.4403877043772497E-6	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999987435897052	WITHOUT_CLASSIFICATION	1.256410294836144E-6	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999145146913869	WITHOUT_CLASSIFICATION	8.548530861303546E-5	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999993940508277	WITHOUT_CLASSIFICATION	6.059491723098395E-7	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.5454137641018132	WITHOUT_CLASSIFICATION	0.4545862358981869	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9981628119508248	WITHOUT_CLASSIFICATION	0.0018371880491752086	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9981628119508248	WITHOUT_CLASSIFICATION	0.0018371880491752086	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999980487485639	WITHOUT_CLASSIFICATION	1.951251436035472E-6	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999991305246048	WITHOUT_CLASSIFICATION	8.694753952655082E-7	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999942241798945	WITHOUT_CLASSIFICATION	5.775820105498528E-6	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999989268747053	WITHOUT_CLASSIFICATION	1.0731252947820297E-6	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999681896291776	WITHOUT_CLASSIFICATION	3.181037082253874E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999681896291776	WITHOUT_CLASSIFICATION	3.181037082253874E-5	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9814028224625341	WITHOUT_CLASSIFICATION	0.018597177537465898	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999377112796028	WITHOUT_CLASSIFICATION	6.228872039720022E-5	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9990067692811428	WITHOUT_CLASSIFICATION	9.932307188571937E-4	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.98869535704079	WITHOUT_CLASSIFICATION	0.011304642959210031	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999595996420222	WITHOUT_CLASSIFICATION	4.0400357977764496E-5	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9991443453431189	WITHOUT_CLASSIFICATION	8.556546568810556E-4	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999739593600525	WITHOUT_CLASSIFICATION	2.6040639947512725E-5	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999959132310279	WITHOUT_CLASSIFICATION	4.086768972092106E-6	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9942319412637957	WITHOUT_CLASSIFICATION	0.005768058736204387	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9997483272369184	WITHOUT_CLASSIFICATION	2.516727630816764E-4	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9997358017749224	WITHOUT_CLASSIFICATION	2.641982250776193E-4	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9995481958422634	WITHOUT_CLASSIFICATION	4.5180415773670986E-4	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999978950191637	WITHOUT_CLASSIFICATION	2.104980836313748E-6	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999999349609365	WITHOUT_CLASSIFICATION	6.503906341024845E-8	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999768381185761	WITHOUT_CLASSIFICATION	2.316188142396799E-5	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9998143309282662	WITHOUT_CLASSIFICATION	1.856690717337934E-4	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9987325345563767	WITHOUT_CLASSIFICATION	0.0012674654436233882	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999719783341945	WITHOUT_CLASSIFICATION	2.8021665805478264E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999687947379894	WITHOUT_CLASSIFICATION	3.120526201060491E-5	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999997341631556	WITHOUT_CLASSIFICATION	2.6583684447473776E-7	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999779656757811	WITHOUT_CLASSIFICATION	2.2034324218785675E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999888820876628	WITHOUT_CLASSIFICATION	1.1117912337296775E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999888820876628	WITHOUT_CLASSIFICATION	1.1117912337296775E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9941518110165842	WITHOUT_CLASSIFICATION	0.005848188983415764	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999656022636745	WITHOUT_CLASSIFICATION	3.439773632550143E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999801751133219	WITHOUT_CLASSIFICATION	1.9824886678128285E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999801751133219	WITHOUT_CLASSIFICATION	1.9824886678128285E-5	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9965720144018463	DESIGN	0.003427985598153637	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9998727329759408	WITHOUT_CLASSIFICATION	1.272670240591883E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999144367477047	WITHOUT_CLASSIFICATION	8.556325229519921E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999543985062016	WITHOUT_CLASSIFICATION	4.560149379840302E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999543985062016	WITHOUT_CLASSIFICATION	4.560149379840302E-4	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9474518064633333	WITHOUT_CLASSIFICATION	0.052548193536666774	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999819393298	WITHOUT_CLASSIFICATION	1.8060670228867832E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999743646938	WITHOUT_CLASSIFICATION	2.5635306242087478E-8	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999530261677	WITHOUT_CLASSIFICATION	4.697383229330826E-8	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999607528125369	WITHOUT_CLASSIFICATION	3.924718746316651E-5	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999978850534299	WITHOUT_CLASSIFICATION	2.114946570103579E-6	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998863002958766	WITHOUT_CLASSIFICATION	1.1369970412350205E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999992414474541	WITHOUT_CLASSIFICATION	7.585525458110203E-7	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999990268496897	WITHOUT_CLASSIFICATION	9.7315031038981E-7	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9989233213478181	WITHOUT_CLASSIFICATION	0.0010766786521818395	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999999336221562	WITHOUT_CLASSIFICATION	6.637784381815145E-8	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999880591236443	WITHOUT_CLASSIFICATION	1.194087635562201E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999605805300714	WITHOUT_CLASSIFICATION	3.941946992848381E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999255329546072	WITHOUT_CLASSIFICATION	7.446704539273233E-5	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9954295428886039	WITHOUT_CLASSIFICATION	0.004570457111396177	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999994798652143	WITHOUT_CLASSIFICATION	5.201347857075967E-7	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999993551835517	WITHOUT_CLASSIFICATION	6.44816448441392E-7	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999769236339233	WITHOUT_CLASSIFICATION	2.307636607669195E-5	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999654108225112	WITHOUT_CLASSIFICATION	3.4589177488860005E-5	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999958092239289	WITHOUT_CLASSIFICATION	4.190776071064739E-6	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999828784648362	WITHOUT_CLASSIFICATION	1.7121535163703274E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999883394651353	WITHOUT_CLASSIFICATION	1.1660534864573511E-5	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999184532275381	WITHOUT_CLASSIFICATION	8.154677246179224E-5	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999906471119949	WITHOUT_CLASSIFICATION	9.352888005131751E-6	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.999986229300082	WITHOUT_CLASSIFICATION	1.3770699918014467E-5	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999255938984819	WITHOUT_CLASSIFICATION	7.440610151816877E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999758159710798	WITHOUT_CLASSIFICATION	2.4184028920266444E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999998648291684	WITHOUT_CLASSIFICATION	1.351708316403359E-7	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999910415641879	WITHOUT_CLASSIFICATION	8.958435811986284E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999976295565997	WITHOUT_CLASSIFICATION	2.370443400298308E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999188893673554	WITHOUT_CLASSIFICATION	8.111063264461243E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999255329546072	WITHOUT_CLASSIFICATION	7.446704539273233E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999998648291684	WITHOUT_CLASSIFICATION	1.351708316403359E-7	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999910415641879	WITHOUT_CLASSIFICATION	8.958435811986284E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999188893673554	WITHOUT_CLASSIFICATION	8.111063264461243E-5	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.999923904864412	WITHOUT_CLASSIFICATION	7.609513558802801E-5	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.99997140196529	WITHOUT_CLASSIFICATION	2.8598034710013604E-5	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999872633184244	WITHOUT_CLASSIFICATION	1.2736681575787623E-5	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999997711410731	WITHOUT_CLASSIFICATION	2.2885892698689012E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9998592879697855	WITHOUT_CLASSIFICATION	1.4071203021450194E-4	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999944687738066	WITHOUT_CLASSIFICATION	5.53122619340485E-6	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999988726819914	WITHOUT_CLASSIFICATION	1.127318008648712E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999430407469713	WITHOUT_CLASSIFICATION	5.695925302873933E-5	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999985631497674	WITHOUT_CLASSIFICATION	1.4368502325989203E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9993610889881422	WITHOUT_CLASSIFICATION	6.389110118578034E-4	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999668257513113	WITHOUT_CLASSIFICATION	3.317424868869807E-4	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999668257513113	WITHOUT_CLASSIFICATION	3.317424868869807E-4	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999966789058035	WITHOUT_CLASSIFICATION	3.3210941964749957E-6	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999732915069	WITHOUT_CLASSIFICATION	2.670849302431503E-8	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999775106829	WITHOUT_CLASSIFICATION	2.248931696757311E-8	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9998931165317823	WITHOUT_CLASSIFICATION	1.0688346821766524E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999959088382548	WITHOUT_CLASSIFICATION	4.091161745198453E-6	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999971441210589	WITHOUT_CLASSIFICATION	2.8558789410706233E-6	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9989713543392017	WITHOUT_CLASSIFICATION	0.0010286456607982925	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9981345229396171	WITHOUT_CLASSIFICATION	0.0018654770603828508	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999994428697581	WITHOUT_CLASSIFICATION	5.571302418966488E-6	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999974511230566	WITHOUT_CLASSIFICATION	2.5488769433751943E-6	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.99999618716825	WITHOUT_CLASSIFICATION	3.812831749959265E-6	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999966838931745	WITHOUT_CLASSIFICATION	3.3161068255020864E-6	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999467240877	WITHOUT_CLASSIFICATION	5.327591237074383E-8	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.999999899495405	WITHOUT_CLASSIFICATION	1.005045949809648E-7	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999995209295199	WITHOUT_CLASSIFICATION	4.790704800149016E-7	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999426447777594	WITHOUT_CLASSIFICATION	5.7355222240554216E-5	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999940695643937	WITHOUT_CLASSIFICATION	5.930435606268689E-6	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999962215973718	WITHOUT_CLASSIFICATION	3.7784026282365017E-6	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9999640220802305	WITHOUT_CLASSIFICATION	3.597791976947941E-5	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999749882286669	WITHOUT_CLASSIFICATION	2.501177133307572E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999990235152927	WITHOUT_CLASSIFICATION	9.764847072637544E-7	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999992145981091	WITHOUT_CLASSIFICATION	7.854018909686071E-7	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999998700243559	WITHOUT_CLASSIFICATION	1.2997564404044075E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.999997473717242	WITHOUT_CLASSIFICATION	2.5262827578532767E-6	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999980769534008	WITHOUT_CLASSIFICATION	1.92304659922948E-6	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999994238564105	WITHOUT_CLASSIFICATION	5.761435895262083E-7	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.6242567891163641	DESIGN	0.37574321088363594	WITHOUT_CLASSIFICATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999909017055165	WITHOUT_CLASSIFICATION	9.098294483504173E-6	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9999994113646683	WITHOUT_CLASSIFICATION	5.886353317745065E-7	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999994182308661	WITHOUT_CLASSIFICATION	5.817691338204751E-7	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999990128296941	WITHOUT_CLASSIFICATION	9.871703059009131E-7	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.999999133691704	WITHOUT_CLASSIFICATION	8.663082959313059E-7	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999988789326336	WITHOUT_CLASSIFICATION	1.1210673663490245E-6	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999711424967254	WITHOUT_CLASSIFICATION	2.8857503274584362E-5	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999977378391303	WITHOUT_CLASSIFICATION	2.262160869785329E-6	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999404161290129	WITHOUT_CLASSIFICATION	5.9583870987170274E-5	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999975289209676	WITHOUT_CLASSIFICATION	2.4710790324414966E-6	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999777965059661	WITHOUT_CLASSIFICATION	2.2203494033920653E-5	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999997850805339	WITHOUT_CLASSIFICATION	2.1491946607247853E-7	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999977022185577	WITHOUT_CLASSIFICATION	2.297781442389197E-6	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999053502775016	WITHOUT_CLASSIFICATION	9.464972249834424E-5	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.5045766406434765	WITHOUT_CLASSIFICATION	0.49542335935652354	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9999754567915629	WITHOUT_CLASSIFICATION	2.4543208437173082E-5	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9985945578002354	WITHOUT_CLASSIFICATION	0.0014054421997645662	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999865874591916	WITHOUT_CLASSIFICATION	1.3412540808343296E-5	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999877852303153	WITHOUT_CLASSIFICATION	1.2214769684704232E-5	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999472238314282	WITHOUT_CLASSIFICATION	5.277616857175057E-5	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9995053201053948	WITHOUT_CLASSIFICATION	4.946798946051881E-4	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9998340175141296	WITHOUT_CLASSIFICATION	1.6598248587051527E-4	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999932701215128	WITHOUT_CLASSIFICATION	6.729878487186404E-6	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999971700218486	WITHOUT_CLASSIFICATION	2.8299781514006763E-6	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999994839196981	WITHOUT_CLASSIFICATION	5.160803018926269E-7	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999955087497907	WITHOUT_CLASSIFICATION	4.491250209186513E-6	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.999997299612404	WITHOUT_CLASSIFICATION	2.7003875959532018E-6	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999697339428335	WITHOUT_CLASSIFICATION	3.0266057166484723E-5	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999849357286065	WITHOUT_CLASSIFICATION	1.506427139346188E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.999999959479299	WITHOUT_CLASSIFICATION	4.052070098576664E-8	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999998784248545	WITHOUT_CLASSIFICATION	1.215751454192207E-7	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9997994625130724	WITHOUT_CLASSIFICATION	2.0053748692755956E-4	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999752948176197	WITHOUT_CLASSIFICATION	2.470518238026812E-5	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999752948176197	WITHOUT_CLASSIFICATION	2.470518238026812E-5	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999982864741238	WITHOUT_CLASSIFICATION	1.713525876199071E-6	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999454265717992	WITHOUT_CLASSIFICATION	5.457342820072369E-5	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.99999883735508	WITHOUT_CLASSIFICATION	1.1626449200291093E-6	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999989576415723	WITHOUT_CLASSIFICATION	1.042358427727944E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999997021011443	WITHOUT_CLASSIFICATION	2.978988556807809E-7	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.995949840725333	WITHOUT_CLASSIFICATION	0.004050159274667032	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999794769923761	WITHOUT_CLASSIFICATION	2.0523007623895225E-5	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9992933077843902	WITHOUT_CLASSIFICATION	7.06692215609821E-4	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999933465722299	WITHOUT_CLASSIFICATION	6.65342777010153E-6	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.99999932917804	WITHOUT_CLASSIFICATION	6.708219599954032E-7	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999914422741969	WITHOUT_CLASSIFICATION	8.557725803113142E-6	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.999997672486766	WITHOUT_CLASSIFICATION	2.3275132340822957E-6	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999806217352765	WITHOUT_CLASSIFICATION	1.937826472352576E-5	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999501159894628	WITHOUT_CLASSIFICATION	4.988401053721939E-5	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999832851534015	WITHOUT_CLASSIFICATION	1.6714846598473132E-5	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999815698538049	WITHOUT_CLASSIFICATION	1.8430146195078787E-5	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999963577173677	WITHOUT_CLASSIFICATION	3.6422826322100866E-6	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999944715119877	WITHOUT_CLASSIFICATION	5.5284880122725504E-6	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999993427327413	WITHOUT_CLASSIFICATION	6.572672587373295E-7	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9996577761314178	WITHOUT_CLASSIFICATION	3.422238685821571E-4	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999981174797103	WITHOUT_CLASSIFICATION	1.8825202896927694E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999987300134795	WITHOUT_CLASSIFICATION	1.2699865205307353E-6	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9997914294192196	WITHOUT_CLASSIFICATION	2.0857058078039675E-4	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9198875889279199	WITHOUT_CLASSIFICATION	0.08011241107208007	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999997158788364	WITHOUT_CLASSIFICATION	2.841211634906837E-7	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9993437315151361	WITHOUT_CLASSIFICATION	6.562684848639326E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9994921480920251	WITHOUT_CLASSIFICATION	5.078519079747929E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999597968312625	WITHOUT_CLASSIFICATION	4.02031687375888E-5	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999984175692642	WITHOUT_CLASSIFICATION	1.5824307358503451E-6	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9994974189109929	DESIGN	5.025810890071494E-4	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999941760399212	WITHOUT_CLASSIFICATION	5.823960078834308E-6	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999986888103268	WITHOUT_CLASSIFICATION	1.3111896731205518E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999939779001386	WITHOUT_CLASSIFICATION	6.022099861506354E-6	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.999998482954883	WITHOUT_CLASSIFICATION	1.517045117035119E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999939779001386	WITHOUT_CLASSIFICATION	6.022099861506354E-6	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999988995549203	WITHOUT_CLASSIFICATION	1.1004450796503966E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999826726536714	WITHOUT_CLASSIFICATION	1.7327346328659146E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999826726536714	WITHOUT_CLASSIFICATION	1.7327346328659146E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999826726536714	WITHOUT_CLASSIFICATION	1.7327346328659146E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999850000089499	WITHOUT_CLASSIFICATION	1.4999991050213952E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999850000089499	WITHOUT_CLASSIFICATION	1.4999991050213952E-5	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.996194955575077	WITHOUT_CLASSIFICATION	0.0038050444249229875	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999998628029293	WITHOUT_CLASSIFICATION	1.371970707053554E-7	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9956198372538515	WITHOUT_CLASSIFICATION	0.0043801627461484615	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9993011193332424	WITHOUT_CLASSIFICATION	6.988806667575205E-4	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999924028391576	WITHOUT_CLASSIFICATION	7.59716084248012E-6	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999968602920081	WITHOUT_CLASSIFICATION	3.139707991913047E-6	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999999762910792	WITHOUT_CLASSIFICATION	2.3708920833057474E-8	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999967332423346	WITHOUT_CLASSIFICATION	3.266757665412638E-6	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999966526510679	WITHOUT_CLASSIFICATION	3.3473489321371043E-6	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999990195071715	WITHOUT_CLASSIFICATION	9.804928284717014E-7	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.999999512291227	WITHOUT_CLASSIFICATION	4.877087730501718E-7	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999950314753822	WITHOUT_CLASSIFICATION	4.96852461783654E-6	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999992458761936	WITHOUT_CLASSIFICATION	7.541238065384778E-7	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999966114957772	WITHOUT_CLASSIFICATION	3.388504222665901E-6	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999909464609501	WITHOUT_CLASSIFICATION	9.053539049851652E-6	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999944681606727	WITHOUT_CLASSIFICATION	5.531839327299298E-6	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999727131406341	WITHOUT_CLASSIFICATION	2.7286859365908796E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999928048832452	WITHOUT_CLASSIFICATION	7.195116754892912E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999928048832452	WITHOUT_CLASSIFICATION	7.195116754892912E-6	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999869669147438	WITHOUT_CLASSIFICATION	1.3033085256231152E-5	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999888554510435	WITHOUT_CLASSIFICATION	1.114454895647882E-5	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999888554510435	WITHOUT_CLASSIFICATION	1.114454895647882E-5	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.999806186500177	WITHOUT_CLASSIFICATION	1.938134998228668E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999994680647999	WITHOUT_CLASSIFICATION	5.319352001396582E-7	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999671632444052	WITHOUT_CLASSIFICATION	3.283675559481947E-5	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999955321554231	WITHOUT_CLASSIFICATION	4.467844576932048E-6	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9998365050959799	WITHOUT_CLASSIFICATION	1.6349490402005104E-4	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999991840946081	WITHOUT_CLASSIFICATION	8.159053919910499E-7	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999993927764542	WITHOUT_CLASSIFICATION	6.072235457043206E-7	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999945682525289	WITHOUT_CLASSIFICATION	5.431747471176004E-6	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999967491759065	WITHOUT_CLASSIFICATION	3.2508240934140787E-6	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.999931422422694	WITHOUT_CLASSIFICATION	6.857757730606773E-5	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9991658727774008	WITHOUT_CLASSIFICATION	8.34127222599326E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999897256146236	WITHOUT_CLASSIFICATION	1.0274385376381364E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.999983312109582	WITHOUT_CLASSIFICATION	1.668789041802602E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999784008406114	WITHOUT_CLASSIFICATION	2.1599159388538254E-5	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999967332423346	WITHOUT_CLASSIFICATION	3.266757665412638E-6	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999346643908942	WITHOUT_CLASSIFICATION	6.533560910591345E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999988587438707	WITHOUT_CLASSIFICATION	1.1412561293507332E-6	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999857046521011	WITHOUT_CLASSIFICATION	1.429534789894091E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999857046521011	WITHOUT_CLASSIFICATION	1.429534789894091E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.999036516782262	WITHOUT_CLASSIFICATION	9.634832177379495E-4	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9998817131190811	WITHOUT_CLASSIFICATION	1.1828688091891065E-4	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999817176136628	WITHOUT_CLASSIFICATION	1.8282386337249713E-5	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999889121925869	WITHOUT_CLASSIFICATION	1.1087807413054494E-5	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999987381808779	WITHOUT_CLASSIFICATION	1.2618191221054963E-6	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.99998027466806	WITHOUT_CLASSIFICATION	1.972533193998546E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999964980955989	WITHOUT_CLASSIFICATION	3.50190440097813E-6	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999977715768418	WITHOUT_CLASSIFICATION	2.2284231582305374E-6	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9927192952271472	WITHOUT_CLASSIFICATION	0.007280704772852879	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9995763435490097	WITHOUT_CLASSIFICATION	4.2365645099036697E-4	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999838597142273	WITHOUT_CLASSIFICATION	1.6140285772620213E-5	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9987490354851499	WITHOUT_CLASSIFICATION	0.0012509645148500264	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.5246465532058305	DESIGN	0.4753534467941696	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.999999814111369	WITHOUT_CLASSIFICATION	1.8588863100314907E-7	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9997070672480455	WITHOUT_CLASSIFICATION	2.929327519545086E-4	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.643018306125427	WITHOUT_CLASSIFICATION	0.356981693874573	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9996939128083049	WITHOUT_CLASSIFICATION	3.0608719169503704E-4	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999461613834673	WITHOUT_CLASSIFICATION	5.383861653276064E-5	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999936605440346	WITHOUT_CLASSIFICATION	6.339455965487175E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999819259793964	WITHOUT_CLASSIFICATION	1.8074020603645096E-5	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.999996182468829	WITHOUT_CLASSIFICATION	3.81753117088496E-6	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999959370803636	WITHOUT_CLASSIFICATION	4.062919636339236E-6	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999872832582732	WITHOUT_CLASSIFICATION	1.2716741726684224E-5	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999376449392997	WITHOUT_CLASSIFICATION	6.235506070030937E-5	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999973227060176	WITHOUT_CLASSIFICATION	2.6772939823548337E-6	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.999997507828392	WITHOUT_CLASSIFICATION	2.4921716080566597E-6	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999996562863692	WITHOUT_CLASSIFICATION	3.4371363067635675E-7	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999995882672477	WITHOUT_CLASSIFICATION	4.1173275226883484E-7	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.999993766651067	WITHOUT_CLASSIFICATION	6.23334893311796E-6	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999940177937563	WITHOUT_CLASSIFICATION	5.9822062437273954E-6	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9967657690190564	WITHOUT_CLASSIFICATION	0.0032342309809435827	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9972096262190722	WITHOUT_CLASSIFICATION	0.0027903737809277557	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999892186529914	WITHOUT_CLASSIFICATION	1.0781347008605077E-5	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999978551410591	WITHOUT_CLASSIFICATION	2.1448589410218975E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999526385879483	WITHOUT_CLASSIFICATION	4.736141205166559E-5	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.99999760341934	WITHOUT_CLASSIFICATION	2.396580660010384E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999995882672477	WITHOUT_CLASSIFICATION	4.1173275226883484E-7	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999988029320483	WITHOUT_CLASSIFICATION	1.1970679515553648E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999526385879483	WITHOUT_CLASSIFICATION	4.736141205166559E-5	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9978095791026385	WITHOUT_CLASSIFICATION	0.0021904208973615967	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999993961999984	WITHOUT_CLASSIFICATION	6.038000015254381E-7	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999468591539	WITHOUT_CLASSIFICATION	5.314084598945354E-8	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.999994853604526	WITHOUT_CLASSIFICATION	5.1463954740060595E-6	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9997629771395433	WITHOUT_CLASSIFICATION	2.3702286045677295E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.990404767464669	WITHOUT_CLASSIFICATION	0.009595232535331009	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.990404767464669	WITHOUT_CLASSIFICATION	0.009595232535331009	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998676843221321	WITHOUT_CLASSIFICATION	1.3231567786785897E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999892395590613	WITHOUT_CLASSIFICATION	1.0760440938853098E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999879385350268	WITHOUT_CLASSIFICATION	1.206146497311543E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999879385350268	WITHOUT_CLASSIFICATION	1.206146497311543E-5	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999368660715526	WITHOUT_CLASSIFICATION	6.313392844743011E-5	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.999935925332842	WITHOUT_CLASSIFICATION	6.407466715799474E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.999898947983143	WITHOUT_CLASSIFICATION	1.0105201685704105E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.999898947983143	WITHOUT_CLASSIFICATION	1.0105201685704105E-4	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999635420643124	WITHOUT_CLASSIFICATION	3.6457935687600494E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999978042460913	WITHOUT_CLASSIFICATION	2.195753908664724E-6	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999995961623706	WITHOUT_CLASSIFICATION	4.0383762944612577E-7	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.999980106206322	WITHOUT_CLASSIFICATION	1.9893793677885486E-5	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999593355438832	WITHOUT_CLASSIFICATION	4.066445611680626E-4	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999991717475654	WITHOUT_CLASSIFICATION	8.282524347081574E-7	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999997837509377	WITHOUT_CLASSIFICATION	2.1624906228274593E-7	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9919861968087064	WITHOUT_CLASSIFICATION	0.008013803191293717	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999888910464241	WITHOUT_CLASSIFICATION	1.1108953575904416E-5	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9992241237605495	WITHOUT_CLASSIFICATION	7.75876239450512E-4	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9996403203566079	WITHOUT_CLASSIFICATION	3.5967964339216703E-4	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999726896620011	WITHOUT_CLASSIFICATION	2.7310337998817033E-5	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999874478328	WITHOUT_CLASSIFICATION	1.2552167122724546E-8	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999986689108086	WITHOUT_CLASSIFICATION	1.3310891914684102E-6	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999820508882243	WITHOUT_CLASSIFICATION	1.7949111775596473E-5	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999901374524569	WITHOUT_CLASSIFICATION	9.862547543103581E-6	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999751564714638	WITHOUT_CLASSIFICATION	2.4843528536231717E-5	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999939076029052	WITHOUT_CLASSIFICATION	6.092397094784307E-6	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999304431714789	WITHOUT_CLASSIFICATION	6.955682852104021E-5	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999677419585269	WITHOUT_CLASSIFICATION	3.2258041473065266E-5	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999801778799098	WITHOUT_CLASSIFICATION	1.982212009018803E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999995444518549	WITHOUT_CLASSIFICATION	4.555481451616803E-7	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9989467763261027	WITHOUT_CLASSIFICATION	0.00105322367389729	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999958337750272	WITHOUT_CLASSIFICATION	4.166224972797961E-6	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999967511491723	WITHOUT_CLASSIFICATION	3.248850827655448E-6	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999981765996279	WITHOUT_CLASSIFICATION	1.8234003721549391E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999580830253464	WITHOUT_CLASSIFICATION	4.191697465366197E-5	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999961357254363	WITHOUT_CLASSIFICATION	3.864274563587497E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998451609065603	WITHOUT_CLASSIFICATION	1.5483909343981216E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998451609065603	WITHOUT_CLASSIFICATION	1.5483909343981216E-4	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9990173386952186	WITHOUT_CLASSIFICATION	9.826613047815111E-4	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999952572529817	WITHOUT_CLASSIFICATION	4.742747018279965E-6	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999853147813268	WITHOUT_CLASSIFICATION	1.4685218673244615E-5	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999956521505495	WITHOUT_CLASSIFICATION	4.347849450461231E-6	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999783941868037	WITHOUT_CLASSIFICATION	2.160581319631508E-5	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9999888181020107	WITHOUT_CLASSIFICATION	1.1181897989447103E-5	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9948576301804055	WITHOUT_CLASSIFICATION	0.005142369819594398	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999960965613818	WITHOUT_CLASSIFICATION	3.903438618238183E-6	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999946901831694	WITHOUT_CLASSIFICATION	5.309816830549398E-6	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999986746229699	WITHOUT_CLASSIFICATION	1.325377030171615E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999327157477	WITHOUT_CLASSIFICATION	6.728425235383824E-8	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999115463864905	WITHOUT_CLASSIFICATION	8.845361350952536E-5	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9994439321872565	WITHOUT_CLASSIFICATION	5.560678127434831E-4	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9997734613619319	WITHOUT_CLASSIFICATION	2.2653863806802206E-4	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999820709822095	WITHOUT_CLASSIFICATION	1.7929017790526435E-5	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9998814854283926	WITHOUT_CLASSIFICATION	1.1851457160738103E-4	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9970601049872815	WITHOUT_CLASSIFICATION	0.0029398950127184982	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9997837391236328	WITHOUT_CLASSIFICATION	2.162608763672661E-4	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9999551290649524	WITHOUT_CLASSIFICATION	4.487093504761688E-5	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999999891887935	WITHOUT_CLASSIFICATION	1.0811206490287714E-7	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9994133134416344	WITHOUT_CLASSIFICATION	5.866865583655408E-4	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.999757379792595	WITHOUT_CLASSIFICATION	2.4262020740508088E-4	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999705798625317	WITHOUT_CLASSIFICATION	2.9420137468257283E-5	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999965167107367	WITHOUT_CLASSIFICATION	3.4832892631503656E-6	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999996536459841	WITHOUT_CLASSIFICATION	3.4635401589646694E-7	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999155967221913	WITHOUT_CLASSIFICATION	8.440327780862209E-5	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.99999744494595	WITHOUT_CLASSIFICATION	2.5550540499459892E-6	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9955033421856412	WITHOUT_CLASSIFICATION	0.004496657814358797	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999958120331327	WITHOUT_CLASSIFICATION	4.18796686728913E-6	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9998914413772892	WITHOUT_CLASSIFICATION	1.0855862271074251E-4	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999963105748326	WITHOUT_CLASSIFICATION	3.689425167457433E-6	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999989466467493	WITHOUT_CLASSIFICATION	1.0533532506636564E-6	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9998698243807392	WITHOUT_CLASSIFICATION	1.301756192607359E-4	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999897530371276	WITHOUT_CLASSIFICATION	1.0246962872309208E-5	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999797480043485	WITHOUT_CLASSIFICATION	2.025199565148721E-5	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999896149261748	WITHOUT_CLASSIFICATION	1.0385073825180989E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999864327195472	WITHOUT_CLASSIFICATION	1.3567280452750537E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9940969778143279	WITHOUT_CLASSIFICATION	0.005903022185672	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999637023645	WITHOUT_CLASSIFICATION	3.629763555792776E-8	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999999259628625	WITHOUT_CLASSIFICATION	7.403713758978151E-8	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999997569715204	WITHOUT_CLASSIFICATION	2.4302847955071394E-7	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9996171911868778	WITHOUT_CLASSIFICATION	3.828088131222597E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999861896801227	WITHOUT_CLASSIFICATION	1.3810319877393343E-5	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999861896801227	WITHOUT_CLASSIFICATION	1.3810319877393343E-5	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.999927378738081	WITHOUT_CLASSIFICATION	7.2621261918962E-5	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999882128580042	WITHOUT_CLASSIFICATION	1.1787141995707999E-5	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999822470909112	WITHOUT_CLASSIFICATION	1.7752909088787944E-5	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999916923202488	WITHOUT_CLASSIFICATION	8.307679751303787E-6	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998461663711444	WITHOUT_CLASSIFICATION	1.538336288556403E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999998004559609	WITHOUT_CLASSIFICATION	1.9954403896492965E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999902166735304	WITHOUT_CLASSIFICATION	9.783326469594745E-5	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999998906217169	WITHOUT_CLASSIFICATION	1.0937828303996026E-7	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999999465512969	WITHOUT_CLASSIFICATION	5.3448703150297446E-8	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.999992714789601	WITHOUT_CLASSIFICATION	7.2852103991619005E-6	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999976603763802	WITHOUT_CLASSIFICATION	2.339623619847599E-6	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999972809478698	WITHOUT_CLASSIFICATION	2.719052130172861E-6	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999973008082261	WITHOUT_CLASSIFICATION	2.6991917738451335E-6	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999986367147826	WITHOUT_CLASSIFICATION	1.363285217315874E-6	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999534061553985	WITHOUT_CLASSIFICATION	4.659384460144408E-5	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999983796191297	WITHOUT_CLASSIFICATION	1.620380870328963E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999923808033746	WITHOUT_CLASSIFICATION	7.6191966254623264E-6	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999920056764672	WITHOUT_CLASSIFICATION	7.994323532741474E-6	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999602186988495	WITHOUT_CLASSIFICATION	3.978130115047892E-5	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999967114709926	WITHOUT_CLASSIFICATION	3.288529007338193E-6	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999766516947719	WITHOUT_CLASSIFICATION	2.33483052281215E-5	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999971683666052	WITHOUT_CLASSIFICATION	2.831633394792232E-6	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999244773061177	WITHOUT_CLASSIFICATION	7.552269388231341E-5	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999078080488257	WITHOUT_CLASSIFICATION	9.219195117418663E-5	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999627590843694	WITHOUT_CLASSIFICATION	3.7240915630559074E-5	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997932055954415	WITHOUT_CLASSIFICATION	2.0679440455853665E-4	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998941594471344	WITHOUT_CLASSIFICATION	1.0584055286551818E-4	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999782785334307	WITHOUT_CLASSIFICATION	2.1721466569325287E-5	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999967662147944	WITHOUT_CLASSIFICATION	3.233785205508654E-6	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999883376762004	WITHOUT_CLASSIFICATION	1.1662323799574031E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999928747399304	WITHOUT_CLASSIFICATION	7.125260069673547E-6	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999612097094793	WITHOUT_CLASSIFICATION	3.879029052067018E-5	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999745294196121	WITHOUT_CLASSIFICATION	2.5470580387870147E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999845472701137	WITHOUT_CLASSIFICATION	1.5452729886400224E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9940969778143279	WITHOUT_CLASSIFICATION	0.005903022185672	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999899452162873	WITHOUT_CLASSIFICATION	1.0054783712779532E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999965966336728	WITHOUT_CLASSIFICATION	3.403366327172512E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999965966336728	WITHOUT_CLASSIFICATION	3.403366327172512E-6	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9800483113195428	WITHOUT_CLASSIFICATION	0.01995168868045713	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.8505285495950927	WITHOUT_CLASSIFICATION	0.1494714504049072	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9998649163562505	WITHOUT_CLASSIFICATION	1.350836437495238E-4	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9999583508885269	WITHOUT_CLASSIFICATION	4.16491114731083E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999853554895722	WITHOUT_CLASSIFICATION	1.4644510427817027E-5	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999881933710566	WITHOUT_CLASSIFICATION	1.1806628943362528E-5	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999897231205065	WITHOUT_CLASSIFICATION	1.0276879493589277E-5	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999808346034109	WITHOUT_CLASSIFICATION	1.9165396589004865E-5	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999833611921779	WITHOUT_CLASSIFICATION	1.6638807822189962E-5	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999830256782134	WITHOUT_CLASSIFICATION	1.6974321786622885E-5	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999729907332754	WITHOUT_CLASSIFICATION	2.700926672461604E-5	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999687917394224	WITHOUT_CLASSIFICATION	3.1208260577556755E-5	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999539976822647	WITHOUT_CLASSIFICATION	4.600231773528035E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9998788690488437	WITHOUT_CLASSIFICATION	1.2113095115630102E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9997911039931204	WITHOUT_CLASSIFICATION	2.088960068795891E-4	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9716950448310319	WITHOUT_CLASSIFICATION	0.028304955168968124	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999657076871646	WITHOUT_CLASSIFICATION	3.429231283522568E-5	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999695643006631	WITHOUT_CLASSIFICATION	3.0435699336923975E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999602081512704	WITHOUT_CLASSIFICATION	3.9791848729512295E-5	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999594057857576	WITHOUT_CLASSIFICATION	4.059421424235901E-5	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999231378643063	WITHOUT_CLASSIFICATION	7.686213569363356E-5	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9998440915527709	WITHOUT_CLASSIFICATION	1.5590844722909218E-4	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.999999008495516	WITHOUT_CLASSIFICATION	9.91504483929544E-7	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999992331362413	WITHOUT_CLASSIFICATION	7.66863758661319E-7	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999834349214	WITHOUT_CLASSIFICATION	1.6565078631042406E-8	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999948010301423	WITHOUT_CLASSIFICATION	5.198969857783091E-6	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999908900659	WITHOUT_CLASSIFICATION	9.109934035986043E-9	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999738607930703	WITHOUT_CLASSIFICATION	2.613920692970684E-5	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999999528105646	WITHOUT_CLASSIFICATION	4.7189435362744404E-8	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999038817304499	WITHOUT_CLASSIFICATION	9.611826955014005E-5	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9999563396906188	WITHOUT_CLASSIFICATION	4.366030938123262E-5	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999987256753726	WITHOUT_CLASSIFICATION	1.2743246273233827E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999887711950781	WITHOUT_CLASSIFICATION	1.122880492180885E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999995769431915	WITHOUT_CLASSIFICATION	4.230568085068053E-7	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999987885275238	WITHOUT_CLASSIFICATION	1.2114724762683062E-6	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999989749130607	WITHOUT_CLASSIFICATION	1.0250869393602633E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999965880442959	WITHOUT_CLASSIFICATION	3.411955704197117E-6	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999948010301423	WITHOUT_CLASSIFICATION	5.198969857783091E-6	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999908900659	WITHOUT_CLASSIFICATION	9.109934035986043E-9	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999738607930703	WITHOUT_CLASSIFICATION	2.613920692970684E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999038817304499	WITHOUT_CLASSIFICATION	9.611826955014005E-5	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999995606561087	WITHOUT_CLASSIFICATION	4.3934389130999134E-7	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999915511553203	WITHOUT_CLASSIFICATION	8.44884467957561E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999906009610876	WITHOUT_CLASSIFICATION	9.399038912409774E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999990676061817	WITHOUT_CLASSIFICATION	9.323938181713161E-7	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9994951172981826	WITHOUT_CLASSIFICATION	5.048827018172483E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999954601329539	WITHOUT_CLASSIFICATION	4.5398670460633916E-6	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.99995159297921	WITHOUT_CLASSIFICATION	4.84070207899448E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999823960228914	WITHOUT_CLASSIFICATION	1.7603977108629048E-5	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999961882609969	WITHOUT_CLASSIFICATION	3.811739003016351E-6	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999994820312365	WITHOUT_CLASSIFICATION	5.179687634773084E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999991990741279	WITHOUT_CLASSIFICATION	8.00925872196186E-7	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999993123087884	WITHOUT_CLASSIFICATION	6.87691211621276E-7	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999998866548513	WITHOUT_CLASSIFICATION	1.1334514875906858E-7	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999975977390154	WITHOUT_CLASSIFICATION	2.402260984632E-6	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999929523930687	WITHOUT_CLASSIFICATION	7.047606931246663E-6	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999854506752069	WITHOUT_CLASSIFICATION	1.4549324792946857E-5	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999889040095159	WITHOUT_CLASSIFICATION	1.1095990484049032E-5	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999723417612078	WITHOUT_CLASSIFICATION	2.765823879228467E-5	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999932586611567	WITHOUT_CLASSIFICATION	6.741338843269662E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999965880442959	WITHOUT_CLASSIFICATION	3.411955704197117E-6	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999915511553203	WITHOUT_CLASSIFICATION	8.44884467957561E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999906009610876	WITHOUT_CLASSIFICATION	9.399038912409774E-5	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9994951172981826	WITHOUT_CLASSIFICATION	5.048827018172483E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999954601329539	WITHOUT_CLASSIFICATION	4.5398670460633916E-6	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.99995159297921	WITHOUT_CLASSIFICATION	4.84070207899448E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999823960228914	WITHOUT_CLASSIFICATION	1.7603977108629048E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999989795043213	WITHOUT_CLASSIFICATION	1.020495678733942E-6	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999781416602344	WITHOUT_CLASSIFICATION	2.1858339765733065E-5	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999992778260542	WITHOUT_CLASSIFICATION	7.22173945719053E-7	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999753663946	WITHOUT_CLASSIFICATION	2.4633605416882195E-8	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999874009024057	WITHOUT_CLASSIFICATION	1.25990975943906E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999874009024057	WITHOUT_CLASSIFICATION	1.25990975943906E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999996687303576	WITHOUT_CLASSIFICATION	3.3126964229387067E-7	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999992709347181	WITHOUT_CLASSIFICATION	7.290652819993904E-7	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9986735620730193	WITHOUT_CLASSIFICATION	0.0013264379269807207	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9997198137524027	WITHOUT_CLASSIFICATION	2.801862475973682E-4	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.999988777889987	WITHOUT_CLASSIFICATION	1.1222110012989875E-5	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999294071121231	WITHOUT_CLASSIFICATION	7.05928878768241E-5	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999995261578349	WITHOUT_CLASSIFICATION	4.7384216516137426E-7	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999983650093238	WITHOUT_CLASSIFICATION	1.6349906760738533E-6	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999994787006857	WITHOUT_CLASSIFICATION	5.212993143528438E-7	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.999970095176177	WITHOUT_CLASSIFICATION	2.990482382308735E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9986371454555034	WITHOUT_CLASSIFICATION	0.0013628545444965808	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999964419153481	WITHOUT_CLASSIFICATION	3.5580846518285594E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999935920783268	WITHOUT_CLASSIFICATION	6.407921673194712E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9993312401715962	WITHOUT_CLASSIFICATION	6.687598284037752E-4	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999999371617737	WITHOUT_CLASSIFICATION	6.283822632347588E-8	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999981816194308	WITHOUT_CLASSIFICATION	1.8183805692027589E-6	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999821443733417	WITHOUT_CLASSIFICATION	1.7855626658421343E-5	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999995475929498	WITHOUT_CLASSIFICATION	4.524070502019346E-6	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999996927272832	WITHOUT_CLASSIFICATION	3.0727271682737477E-7	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9670164028359111	WITHOUT_CLASSIFICATION	0.032983597164088926	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.6828516614708157	DESIGN	0.3171483385291844	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9885255752652958	WITHOUT_CLASSIFICATION	0.011474424734704213	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9505196092631745	WITHOUT_CLASSIFICATION	0.049480390736825586	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9997206452069781	DESIGN	2.7935479302180084E-4	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999746713126625	WITHOUT_CLASSIFICATION	2.5328687337494702E-5	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999742240536934	WITHOUT_CLASSIFICATION	2.5775946306582075E-5	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999996000094198	WITHOUT_CLASSIFICATION	3.9999058014546987E-7	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999640574488636	WITHOUT_CLASSIFICATION	3.594255113626217E-5	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999957463761279	WITHOUT_CLASSIFICATION	4.2536238721986E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999746713126625	WITHOUT_CLASSIFICATION	2.5328687337494702E-5	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999742240536934	WITHOUT_CLASSIFICATION	2.5775946306582075E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9993312401715962	WITHOUT_CLASSIFICATION	6.687598284037752E-4	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999948233356111	WITHOUT_CLASSIFICATION	5.17666438894494E-6	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999861701537753	WITHOUT_CLASSIFICATION	1.3829846224676789E-5	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999936314819443	WITHOUT_CLASSIFICATION	6.368518055620239E-6	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999923465533795	WITHOUT_CLASSIFICATION	7.653446620434657E-6	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9959080532865636	WITHOUT_CLASSIFICATION	0.004091946713436341	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999996117448057	WITHOUT_CLASSIFICATION	3.882551942678284E-7	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999038299760091	WITHOUT_CLASSIFICATION	9.617002399082686E-5	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999979081074317	WITHOUT_CLASSIFICATION	2.091892568278239E-6	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9895890395360059	WITHOUT_CLASSIFICATION	0.01041096046399416	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9998198209957241	WITHOUT_CLASSIFICATION	1.8017900427579983E-4	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999332893555237	WITHOUT_CLASSIFICATION	6.67106444762709E-5	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999298586368256	WITHOUT_CLASSIFICATION	7.014136317433611E-5	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999997384923882	WITHOUT_CLASSIFICATION	2.615076118131701E-7	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999968905755919	WITHOUT_CLASSIFICATION	3.1094244080845977E-6	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9980129305113103	WITHOUT_CLASSIFICATION	0.0019870694886897034	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999992898532345	WITHOUT_CLASSIFICATION	7.101467655426225E-7	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999997967076221	WITHOUT_CLASSIFICATION	2.0329237794810813E-7	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9970224087112717	WITHOUT_CLASSIFICATION	0.0029775912887283398	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999006327579	WITHOUT_CLASSIFICATION	9.936724206051095E-8	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999284135305103	WITHOUT_CLASSIFICATION	7.158646948976872E-5	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999960182967605	WITHOUT_CLASSIFICATION	3.9817032394889395E-6	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999748038722048	WITHOUT_CLASSIFICATION	2.5196127795272785E-5	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999951544828569	WITHOUT_CLASSIFICATION	4.8455171430923355E-6	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999994369485588	WITHOUT_CLASSIFICATION	5.630514413078234E-7	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999946966012202	WITHOUT_CLASSIFICATION	5.3033987798621E-6	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.999978430167755	WITHOUT_CLASSIFICATION	2.15698322449146E-5	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.8407824770673878	WITHOUT_CLASSIFICATION	0.1592175229326122	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.5976967954734008	WITHOUT_CLASSIFICATION	0.4023032045265992	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9971610489149231	WITHOUT_CLASSIFICATION	0.002838951085076949	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9998524898294187	WITHOUT_CLASSIFICATION	1.475101705812763E-4	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999976613579072	WITHOUT_CLASSIFICATION	2.3386420927592924E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999744974584025	WITHOUT_CLASSIFICATION	2.5502541597582297E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999744974584025	WITHOUT_CLASSIFICATION	2.5502541597582297E-5	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999935920783268	WITHOUT_CLASSIFICATION	6.407921673194712E-6	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.999451335526725	WITHOUT_CLASSIFICATION	5.486644732749289E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999805704390331	WITHOUT_CLASSIFICATION	1.942956096690405E-5	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.999456256300909	WITHOUT_CLASSIFICATION	5.437436990910091E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999812987699399	WITHOUT_CLASSIFICATION	1.870123006014212E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999812987699399	WITHOUT_CLASSIFICATION	1.870123006014212E-5	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998438870099	WITHOUT_CLASSIFICATION	1.561129900264899E-7	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9991768540852235	WITHOUT_CLASSIFICATION	8.231459147764825E-4	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999230409199	WITHOUT_CLASSIFICATION	7.695908013925831E-8	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999480205951923	WITHOUT_CLASSIFICATION	5.1979404807727356E-5	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9072351824098596	WITHOUT_CLASSIFICATION	0.09276481759014045	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999924060777222	WITHOUT_CLASSIFICATION	7.593922277757378E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999991730023138	WITHOUT_CLASSIFICATION	8.269976861964974E-7	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999999007266318	WITHOUT_CLASSIFICATION	9.927336811707328E-8	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9988425364172031	WITHOUT_CLASSIFICATION	0.0011574635827969095	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999664745529138	WITHOUT_CLASSIFICATION	3.352544708626286E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999999815195358	WITHOUT_CLASSIFICATION	1.848046419504424E-7	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999994246197879	WITHOUT_CLASSIFICATION	5.753802120420856E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999975258471244	WITHOUT_CLASSIFICATION	2.4741528756326737E-6	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999991583970965	WITHOUT_CLASSIFICATION	8.416029035489188E-7	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9872897745087572	WITHOUT_CLASSIFICATION	0.012710225491242764	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9526411670313292	WITHOUT_CLASSIFICATION	0.047358832968670814	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999935775989939	WITHOUT_CLASSIFICATION	6.422401006062033E-6	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999935775989939	WITHOUT_CLASSIFICATION	6.422401006062033E-6	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999949116985549	WITHOUT_CLASSIFICATION	5.088301445035184E-6	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999949116985549	WITHOUT_CLASSIFICATION	5.088301445035184E-6	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999624463736067	WITHOUT_CLASSIFICATION	3.755362639339088E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9997305666587276	WITHOUT_CLASSIFICATION	2.6943334127245834E-4	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9997756199708997	WITHOUT_CLASSIFICATION	2.2438002910034048E-4	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999986605977491	WITHOUT_CLASSIFICATION	1.3394022509401396E-6	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999983401177963	WITHOUT_CLASSIFICATION	1.659882203701734E-5	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999367416257786	WITHOUT_CLASSIFICATION	6.325837422145349E-5	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999996316381751	WITHOUT_CLASSIFICATION	3.683618249411634E-7	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999994246197879	WITHOUT_CLASSIFICATION	5.753802120420856E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999975258471244	WITHOUT_CLASSIFICATION	2.4741528756326737E-6	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9872897745087572	WITHOUT_CLASSIFICATION	0.012710225491242764	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9997916627765381	WITHOUT_CLASSIFICATION	2.083372234619115E-4	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9998823449753659	WITHOUT_CLASSIFICATION	1.1765502463417969E-4	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9956052457236861	WITHOUT_CLASSIFICATION	0.004394754276313876	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999581623517743	WITHOUT_CLASSIFICATION	4.183764822581601E-5	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9974772846796683	WITHOUT_CLASSIFICATION	0.002522715320331719	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.8005881294350945	DESIGN	0.19941187056490553	WITHOUT_CLASSIFICATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999990107690007	WITHOUT_CLASSIFICATION	9.892309993350616E-7	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.999996804297964	WITHOUT_CLASSIFICATION	3.1957020360746646E-6	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999998721241005	WITHOUT_CLASSIFICATION	1.2787589954001368E-7	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999958384431435	WITHOUT_CLASSIFICATION	4.161556856439946E-6	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.999857549049959	WITHOUT_CLASSIFICATION	1.4245095004086468E-4	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999936718144606	WITHOUT_CLASSIFICATION	6.328185539307309E-6	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999991245612692	WITHOUT_CLASSIFICATION	8.754387309799967E-7	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999890942185308	WITHOUT_CLASSIFICATION	1.0905781469173409E-5	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.998928399612466	WITHOUT_CLASSIFICATION	0.0010716003875339555	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999310149454	WITHOUT_CLASSIFICATION	6.898505455588116E-8	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999929963975349	WITHOUT_CLASSIFICATION	7.0036024651165264E-6	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9938471029897056	WITHOUT_CLASSIFICATION	0.00615289701029439	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9998922335334071	WITHOUT_CLASSIFICATION	1.0776646659294481E-4	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999891009529195	WITHOUT_CLASSIFICATION	1.089904708053704E-5	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999894365197366	WITHOUT_CLASSIFICATION	1.0563480263396005E-5	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999968905088156	WITHOUT_CLASSIFICATION	3.109491184475108E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999726384278562	WITHOUT_CLASSIFICATION	2.736157214370873E-5	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.99999749576153	WITHOUT_CLASSIFICATION	2.5042384700417567E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999989171525773	WITHOUT_CLASSIFICATION	1.0828474227003846E-5	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999999846112255	WITHOUT_CLASSIFICATION	1.5388774533935044E-8	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999995153063391	WITHOUT_CLASSIFICATION	4.84693660805546E-7	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9993282351475512	WITHOUT_CLASSIFICATION	6.717648524488546E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999995777481574	WITHOUT_CLASSIFICATION	4.222518426471496E-7	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.999974995101074	WITHOUT_CLASSIFICATION	2.500489892599157E-5	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.99999117755027	WITHOUT_CLASSIFICATION	8.822449730015808E-6	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999995695214456	WITHOUT_CLASSIFICATION	4.3047855440115475E-6	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9998083394382865	WITHOUT_CLASSIFICATION	1.9166056171356538E-4	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999980011610454	WITHOUT_CLASSIFICATION	1.9988389545295767E-6	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.999957930941371	WITHOUT_CLASSIFICATION	4.206905862911725E-5	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999904975481619	WITHOUT_CLASSIFICATION	9.502451837993032E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999954092067271	WITHOUT_CLASSIFICATION	4.590793272891209E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999771049842783	WITHOUT_CLASSIFICATION	2.2895015721720783E-5	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999984805220359	WITHOUT_CLASSIFICATION	1.5194779641629312E-6	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9993288512797394	WITHOUT_CLASSIFICATION	6.711487202606173E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999930549948854	WITHOUT_CLASSIFICATION	6.945005114665419E-6	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999805704390331	WITHOUT_CLASSIFICATION	1.942956096690405E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999954092067271	WITHOUT_CLASSIFICATION	4.590793272891209E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9065759788298732	WITHOUT_CLASSIFICATION	0.09342402117012681	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.959200626666401	WITHOUT_CLASSIFICATION	0.040799373333599	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999973325322892	WITHOUT_CLASSIFICATION	2.667467710849331E-6	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.999996709055223	WITHOUT_CLASSIFICATION	3.290944777001105E-6	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.999996709055223	WITHOUT_CLASSIFICATION	3.290944777001105E-6	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9981059875936494	WITHOUT_CLASSIFICATION	0.0018940124063505951	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.999990602652386	WITHOUT_CLASSIFICATION	9.397347613969646E-6	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9986179971672994	WITHOUT_CLASSIFICATION	0.001382002832700646	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9997815776001185	WITHOUT_CLASSIFICATION	2.1842239988156524E-4	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.999927863958675	WITHOUT_CLASSIFICATION	7.21360413250693E-5	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.999995320990934	WITHOUT_CLASSIFICATION	4.679009065951869E-6	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999986441320076	WITHOUT_CLASSIFICATION	1.3558679924983338E-6	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999999078936205	WITHOUT_CLASSIFICATION	9.210637956497648E-8	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999958720915576	WITHOUT_CLASSIFICATION	4.127908442384231E-6	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999958720915576	WITHOUT_CLASSIFICATION	4.127908442384231E-6	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9996948645582254	WITHOUT_CLASSIFICATION	3.0513544177453676E-4	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999948213498158	WITHOUT_CLASSIFICATION	5.17865018424055E-6	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9942858822614085	WITHOUT_CLASSIFICATION	0.005714117738591466	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.999902310601106	WITHOUT_CLASSIFICATION	9.768939889402051E-5	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9999726439892589	WITHOUT_CLASSIFICATION	2.7356010741141382E-5	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9998810518792963	WITHOUT_CLASSIFICATION	1.1894812070369712E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999971072858728	WITHOUT_CLASSIFICATION	2.8927141272543347E-6	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9995478680015321	WITHOUT_CLASSIFICATION	4.521319984680424E-4	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9996873051629067	WITHOUT_CLASSIFICATION	3.1269483709332854E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9994442453351641	WITHOUT_CLASSIFICATION	5.557546648359908E-4	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999939222223746	WITHOUT_CLASSIFICATION	6.0777776254478036E-6	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999982750978944	WITHOUT_CLASSIFICATION	1.7249021055788842E-6	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999995493901825	WITHOUT_CLASSIFICATION	4.506098174211911E-7	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999422063038483	WITHOUT_CLASSIFICATION	5.779369615168296E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999422063038483	WITHOUT_CLASSIFICATION	5.779369615168296E-5	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999640915233462	WITHOUT_CLASSIFICATION	3.5908476653836175E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999823960228914	WITHOUT_CLASSIFICATION	1.7603977108629048E-5	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9996380029519073	WITHOUT_CLASSIFICATION	3.619970480927355E-4	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999507801611291	WITHOUT_CLASSIFICATION	4.9219838870713213E-5	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999981329519031	WITHOUT_CLASSIFICATION	1.8670480968963826E-6	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999981712887933	WITHOUT_CLASSIFICATION	1.8287112066199154E-6	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999995821829673	WITHOUT_CLASSIFICATION	4.178170327711775E-7	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999999962836997	WITHOUT_CLASSIFICATION	3.7163002160730368E-9	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999999538175781	WITHOUT_CLASSIFICATION	4.6182421880268715E-8	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9999244587297722	WITHOUT_CLASSIFICATION	7.554127022785467E-5	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999783230281768	WITHOUT_CLASSIFICATION	2.167697182326548E-5	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999793427929716	WITHOUT_CLASSIFICATION	2.0657207028346207E-5	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999989863379222	WITHOUT_CLASSIFICATION	1.0136620778915762E-6	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999941764025937	WITHOUT_CLASSIFICATION	5.823597406226853E-6	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9998106722384162	WITHOUT_CLASSIFICATION	1.8932776158372543E-4	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.999999847480342	WITHOUT_CLASSIFICATION	1.5251965806203322E-7	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999921339281245	WITHOUT_CLASSIFICATION	7.866071875455151E-6	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999621644961114	WITHOUT_CLASSIFICATION	3.783550388852886E-5	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999655920053321	WITHOUT_CLASSIFICATION	3.440799466801783E-5	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999740576899904	WITHOUT_CLASSIFICATION	2.5942310009606747E-5	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9997870950383932	WITHOUT_CLASSIFICATION	2.1290496160679772E-4	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.999991353153561	WITHOUT_CLASSIFICATION	8.646846439036397E-6	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999413009338278	WITHOUT_CLASSIFICATION	5.869906617212156E-5	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999729218989997	WITHOUT_CLASSIFICATION	2.70781010003727E-5	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9239756905930839	WITHOUT_CLASSIFICATION	0.07602430940691603	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999014229566076	WITHOUT_CLASSIFICATION	9.857704339246887E-5	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9999878395655944	WITHOUT_CLASSIFICATION	1.2160434405663131E-5	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999657234125126	WITHOUT_CLASSIFICATION	3.427658748752834E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999961529113882	WITHOUT_CLASSIFICATION	3.847088611771823E-6	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9927006171477478	WITHOUT_CLASSIFICATION	0.007299382852252109	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999493432786988	WITHOUT_CLASSIFICATION	5.0656721301310636E-5	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9998427060179581	WITHOUT_CLASSIFICATION	1.572939820419584E-4	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9998923576704877	WITHOUT_CLASSIFICATION	1.0764232951243711E-4	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9990378932169822	WITHOUT_CLASSIFICATION	9.621067830178542E-4	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9997246571467885	WITHOUT_CLASSIFICATION	2.7534285321144505E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999984689018959	WITHOUT_CLASSIFICATION	1.5310981040446327E-6	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999981489339322	WITHOUT_CLASSIFICATION	1.8510660677168459E-6	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999998290366968	WITHOUT_CLASSIFICATION	1.7096330307279074E-7	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999778563741	WITHOUT_CLASSIFICATION	2.2143625886184417E-8	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999999623679511	WITHOUT_CLASSIFICATION	3.763204898445728E-8	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999337617303485	WITHOUT_CLASSIFICATION	6.623826965145522E-5	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999115967352337	WITHOUT_CLASSIFICATION	8.840326476635932E-5	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9997162136935035	WITHOUT_CLASSIFICATION	2.8378630649650364E-4	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.8766187789319873	WITHOUT_CLASSIFICATION	0.12338122106801276	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999973109775296	WITHOUT_CLASSIFICATION	2.689022470338651E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999986654840303	WITHOUT_CLASSIFICATION	1.3345159697828195E-6	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999936302599653	WITHOUT_CLASSIFICATION	6.369740034650944E-6	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999993541257636	WITHOUT_CLASSIFICATION	6.458742364541631E-7	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9987665144748139	WITHOUT_CLASSIFICATION	0.0012334855251860909	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999746713126625	WITHOUT_CLASSIFICATION	2.5328687337494702E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999746713126625	WITHOUT_CLASSIFICATION	2.5328687337494702E-5	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999999500089759	WITHOUT_CLASSIFICATION	4.999102418572885E-8	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999990064824721	WITHOUT_CLASSIFICATION	9.935175278175397E-7	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999580656098175	WITHOUT_CLASSIFICATION	4.1934390182470543E-5	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9998444968483607	WITHOUT_CLASSIFICATION	1.5550315163933288E-4	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999999126375223	WITHOUT_CLASSIFICATION	8.736247772259189E-8	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999993750008183	WITHOUT_CLASSIFICATION	6.249991816872747E-7	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999025736501352	WITHOUT_CLASSIFICATION	9.74263498647864E-5	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999970899933961	WITHOUT_CLASSIFICATION	2.9100066039612435E-6	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999986598593148	WITHOUT_CLASSIFICATION	1.3401406851937168E-6	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9771893517714788	WITHOUT_CLASSIFICATION	0.022810648228521187	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999970057076208	WITHOUT_CLASSIFICATION	2.9942923791222767E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999970057076208	WITHOUT_CLASSIFICATION	2.9942923791222767E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999970057076208	WITHOUT_CLASSIFICATION	2.9942923791222767E-6	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999988501690471	WITHOUT_CLASSIFICATION	1.1498309529250746E-6	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999978714601969	WITHOUT_CLASSIFICATION	2.128539803171537E-6	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9993132033033431	WITHOUT_CLASSIFICATION	6.867966966570428E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999921967164095	WITHOUT_CLASSIFICATION	7.803283590586776E-6	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999921967164095	WITHOUT_CLASSIFICATION	7.803283590586776E-6	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999987055483578	WITHOUT_CLASSIFICATION	1.294451642197893E-6	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999427876836152	WITHOUT_CLASSIFICATION	5.721231638473581E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999996786270517	WITHOUT_CLASSIFICATION	3.2137294835575836E-7	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999965870745103	WITHOUT_CLASSIFICATION	3.412925489693253E-5	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.996933993313088	WITHOUT_CLASSIFICATION	0.0030660066869121457	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999998254371265	WITHOUT_CLASSIFICATION	1.7456287351850816E-7	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.999997183856213	WITHOUT_CLASSIFICATION	2.816143786988355E-6	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.99989147175329	WITHOUT_CLASSIFICATION	1.0852824671005745E-4	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999995919132119	WITHOUT_CLASSIFICATION	4.0808678820135423E-7	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999997130649559	WITHOUT_CLASSIFICATION	2.869350441068492E-6	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999997130649559	WITHOUT_CLASSIFICATION	2.869350441068492E-6	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999892306645058	WITHOUT_CLASSIFICATION	1.0769335494116552E-5	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.999686106445363	WITHOUT_CLASSIFICATION	3.138935546369756E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999936410787147	WITHOUT_CLASSIFICATION	6.358921285295913E-6	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999966054892627	WITHOUT_CLASSIFICATION	3.3945107373008125E-6	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.999999023290447	WITHOUT_CLASSIFICATION	9.767095530902964E-7	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999968065305134	WITHOUT_CLASSIFICATION	3.19346948656011E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999992827007305	WITHOUT_CLASSIFICATION	7.172992696364844E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999961600201385	WITHOUT_CLASSIFICATION	3.839979861597469E-6	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999937177058043	WITHOUT_CLASSIFICATION	6.282294195634567E-6	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999948024477788	WITHOUT_CLASSIFICATION	5.1975522211541534E-6	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998905809035525	WITHOUT_CLASSIFICATION	1.0941909644743831E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999945456358497	WITHOUT_CLASSIFICATION	5.4543641503105464E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999897110913959	WITHOUT_CLASSIFICATION	1.0288908603982912E-5	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999975020012921	WITHOUT_CLASSIFICATION	2.4979987078478945E-6	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.998639200770768	WITHOUT_CLASSIFICATION	0.0013607992292320398	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.999999956298802	WITHOUT_CLASSIFICATION	4.370119803006756E-8	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999998727191335	WITHOUT_CLASSIFICATION	1.2728086650751419E-6	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999975712210961	WITHOUT_CLASSIFICATION	2.4287789037589218E-6	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.999999612410639	WITHOUT_CLASSIFICATION	3.8758936098038584E-7	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999460237242	WITHOUT_CLASSIFICATION	5.397627572524229E-8	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.619739662899552	DESIGN	0.3802603371004481	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999999483246103	WITHOUT_CLASSIFICATION	5.167538975915148E-8	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999995052552616	WITHOUT_CLASSIFICATION	4.947447384846235E-7	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999659316087371	WITHOUT_CLASSIFICATION	3.406839126289008E-5	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999993784580632	WITHOUT_CLASSIFICATION	6.215419368076762E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999587015841254	WITHOUT_CLASSIFICATION	4.129841587473174E-5	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999965217939769	WITHOUT_CLASSIFICATION	3.4782060230457986E-6	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.999936352781841	WITHOUT_CLASSIFICATION	6.364721815902743E-5	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999984433603931	WITHOUT_CLASSIFICATION	1.5566396068887726E-6	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.999994684223623	WITHOUT_CLASSIFICATION	5.31577637696646E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999963610804838	WITHOUT_CLASSIFICATION	3.63891951621625E-6	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.999977681880697	WITHOUT_CLASSIFICATION	2.2318119302902283E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999754818638381	WITHOUT_CLASSIFICATION	2.4518136161928752E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999963610804838	WITHOUT_CLASSIFICATION	3.63891951621625E-6	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999161007748635	WITHOUT_CLASSIFICATION	8.389922513653846E-5	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.999988677794649	WITHOUT_CLASSIFICATION	1.132220535094714E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9995939441249883	WITHOUT_CLASSIFICATION	4.06055875011839E-4	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9992492076700006	WITHOUT_CLASSIFICATION	7.50792329999477E-4	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999942539691256	WITHOUT_CLASSIFICATION	5.746030874448454E-6	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999993531371544	WITHOUT_CLASSIFICATION	6.468628456354718E-7	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.999999291517438	WITHOUT_CLASSIFICATION	7.084825618941712E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9998523629286662	WITHOUT_CLASSIFICATION	1.4763707133385242E-4	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999790672639943	WITHOUT_CLASSIFICATION	2.0932736005600964E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999488399077997	WITHOUT_CLASSIFICATION	5.116009220018519E-5	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9986289490760165	WITHOUT_CLASSIFICATION	0.0013710509239835153	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999169830408564	WITHOUT_CLASSIFICATION	8.301695914355557E-5	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9995128086929708	WITHOUT_CLASSIFICATION	4.871913070292296E-4	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9998866429264752	WITHOUT_CLASSIFICATION	1.1335707352477525E-4	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9994654226405357	WITHOUT_CLASSIFICATION	5.345773594643073E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9995928735895736	WITHOUT_CLASSIFICATION	4.071264104263834E-4	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9998588421563274	WITHOUT_CLASSIFICATION	1.4115784367264655E-4	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9994443492129681	WITHOUT_CLASSIFICATION	5.556507870320027E-4	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999058239625217	WITHOUT_CLASSIFICATION	9.417603747830974E-5	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999354937974697	WITHOUT_CLASSIFICATION	6.450620253032902E-5	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9923395257659233	WITHOUT_CLASSIFICATION	0.007660474234076627	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999721799248446	WITHOUT_CLASSIFICATION	2.7820075155416258E-5	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999975294868738	WITHOUT_CLASSIFICATION	2.470513126209987E-6	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999982015022336	WITHOUT_CLASSIFICATION	1.798497766467619E-6	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999996791681773	WITHOUT_CLASSIFICATION	3.2083182264732083E-7	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9998574683278433	WITHOUT_CLASSIFICATION	1.4253167215680303E-4	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999328222167733	WITHOUT_CLASSIFICATION	6.717778322675378E-5	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999975768453001	WITHOUT_CLASSIFICATION	2.4231546998396185E-6	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.999990882338225	WITHOUT_CLASSIFICATION	9.117661775072136E-6	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999969366559829	WITHOUT_CLASSIFICATION	3.063344017083436E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9999870614629576	WITHOUT_CLASSIFICATION	1.293853704246978E-5	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.881969071858773	WITHOUT_CLASSIFICATION	0.11803092814122702	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.7089365588376179	DESIGN	0.29106344116238225	WITHOUT_CLASSIFICATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999882754790502	WITHOUT_CLASSIFICATION	1.172452094968221E-5	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.999969943657774	WITHOUT_CLASSIFICATION	3.00563422260297E-5	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999710589169516	WITHOUT_CLASSIFICATION	2.8941083048482567E-5	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999815562396283	WITHOUT_CLASSIFICATION	1.8443760371834597E-5	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999813811724828	WITHOUT_CLASSIFICATION	1.8618827517182657E-5	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.999897407789588	WITHOUT_CLASSIFICATION	1.0259221041196056E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999978056065225	WITHOUT_CLASSIFICATION	2.1943934774551464E-6	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999561455408764	WITHOUT_CLASSIFICATION	4.3854459123645255E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.999935814784215	WITHOUT_CLASSIFICATION	6.418521578504928E-5	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999962874887456	WITHOUT_CLASSIFICATION	3.7125112544704476E-6	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999924691327846	WITHOUT_CLASSIFICATION	7.530867215435836E-6	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999985376198454	WITHOUT_CLASSIFICATION	1.4623801546579775E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.999993073498861	WITHOUT_CLASSIFICATION	6.9265011389328935E-6	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9999877719172577	WITHOUT_CLASSIFICATION	1.2228082742322109E-5	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.999998042813966	WITHOUT_CLASSIFICATION	1.9571860340281067E-6	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999999139762187	WITHOUT_CLASSIFICATION	8.602378130428482E-8	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999958637197178	WITHOUT_CLASSIFICATION	4.136280282158349E-6	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9990687351987383	WITHOUT_CLASSIFICATION	9.31264801261694E-4	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9979909443595957	WITHOUT_CLASSIFICATION	0.0020090556404042917	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999993083597488	WITHOUT_CLASSIFICATION	6.916402511508304E-7	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999999139762187	WITHOUT_CLASSIFICATION	8.602378130428482E-8	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9957046412252166	DESIGN	0.004295358774783375	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9957046412252166	DESIGN	0.004295358774783375	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999459006800833	WITHOUT_CLASSIFICATION	5.409931991677899E-5	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999951351085799	WITHOUT_CLASSIFICATION	4.86489142009424E-5	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999940819456805	WITHOUT_CLASSIFICATION	5.918054319416538E-6	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.999986107801455	WITHOUT_CLASSIFICATION	1.3892198544903544E-5	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9988894476468254	WITHOUT_CLASSIFICATION	0.0011105523531745982	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999942469358255	WITHOUT_CLASSIFICATION	5.753064174430916E-6	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999952614566163	WITHOUT_CLASSIFICATION	4.738543383632525E-6	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9999514501507684	DESIGN	4.8549849231758204E-5	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.998308974535366	WITHOUT_CLASSIFICATION	0.0016910254646339607	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999965498175026	WITHOUT_CLASSIFICATION	3.450182497298613E-6	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999951867481133	WITHOUT_CLASSIFICATION	4.81325188670017E-6	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9971917907916642	WITHOUT_CLASSIFICATION	0.002808209208335879	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999827543763722	WITHOUT_CLASSIFICATION	1.7245623627844815E-5	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.999988359842199	WITHOUT_CLASSIFICATION	1.164015780094797E-5	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9995703797089371	WITHOUT_CLASSIFICATION	4.2962029106290736E-4	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9983562413949982	WITHOUT_CLASSIFICATION	0.001643758605001793	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999840388952498	WITHOUT_CLASSIFICATION	1.5961104750240818E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998789405020161	WITHOUT_CLASSIFICATION	1.2105949798398592E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998789405020161	WITHOUT_CLASSIFICATION	1.2105949798398592E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998789405020161	WITHOUT_CLASSIFICATION	1.2105949798398592E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998789405020161	WITHOUT_CLASSIFICATION	1.2105949798398592E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998789405020161	WITHOUT_CLASSIFICATION	1.2105949798398592E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.999996518304407	WITHOUT_CLASSIFICATION	3.4816955931282946E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999907968954604	WITHOUT_CLASSIFICATION	9.203104539519773E-6	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999573873847036	WITHOUT_CLASSIFICATION	4.261261529629429E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999609642741227	WITHOUT_CLASSIFICATION	3.903572587719312E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999973480691527	WITHOUT_CLASSIFICATION	2.6519308471992503E-6	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999996888752044	WITHOUT_CLASSIFICATION	3.1112479550557774E-7	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999836489756393	WITHOUT_CLASSIFICATION	1.6351024360759476E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999588126457081	WITHOUT_CLASSIFICATION	4.1187354291938124E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999003996109876	WITHOUT_CLASSIFICATION	9.960038901238968E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999983110352267	WITHOUT_CLASSIFICATION	1.6889647731982905E-6	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999974388770598	WITHOUT_CLASSIFICATION	2.5611229400985003E-6	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999958445268643	WITHOUT_CLASSIFICATION	4.1554731356992925E-6	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999970413127521	WITHOUT_CLASSIFICATION	2.9586872478803495E-6	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.999996954445564	WITHOUT_CLASSIFICATION	3.045554435999165E-6	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.999996956526604	WITHOUT_CLASSIFICATION	3.0434733958685166E-6	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999968171702012	WITHOUT_CLASSIFICATION	3.182829798705914E-6	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999960849797072	WITHOUT_CLASSIFICATION	3.915020292777674E-6	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999968265558847	WITHOUT_CLASSIFICATION	3.17344411528536E-6	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999951461228138	WITHOUT_CLASSIFICATION	4.8538771862379894E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999966581973605	WITHOUT_CLASSIFICATION	3.341802639442931E-6	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999956381085541	WITHOUT_CLASSIFICATION	4.3618914459131615E-6	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999951102046808	WITHOUT_CLASSIFICATION	4.8897953191314585E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.999997021639463	WITHOUT_CLASSIFICATION	2.978360536947113E-6	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999959770927587	WITHOUT_CLASSIFICATION	4.022907241365967E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.99999746027476	WITHOUT_CLASSIFICATION	2.539725239968023E-6	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999955266785714	WITHOUT_CLASSIFICATION	4.473321428618981E-6	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999961628338705	WITHOUT_CLASSIFICATION	3.837166129427175E-6	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999959961838704	WITHOUT_CLASSIFICATION	4.003816129667623E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999960355809672	WITHOUT_CLASSIFICATION	3.964419032825529E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999978308231575	WITHOUT_CLASSIFICATION	2.1691768425921823E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999949111051026	WITHOUT_CLASSIFICATION	5.088894897274274E-6	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999948037906885	WITHOUT_CLASSIFICATION	5.196209311507789E-6	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999943116104155	WITHOUT_CLASSIFICATION	5.688389584523736E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999922886113122	WITHOUT_CLASSIFICATION	7.711388687896545E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999958155891107	WITHOUT_CLASSIFICATION	4.184410889405158E-6	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999937852163742	WITHOUT_CLASSIFICATION	6.214783625768968E-6	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999937857800919	WITHOUT_CLASSIFICATION	6.214219908037308E-6	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999937729305406	WITHOUT_CLASSIFICATION	6.2270694594347205E-6	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999965703592723	WITHOUT_CLASSIFICATION	3.4296407277362124E-6	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999938071287565	WITHOUT_CLASSIFICATION	6.192871243511972E-6	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.999995126929871	WITHOUT_CLASSIFICATION	4.873070129013677E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999938448403747	WITHOUT_CLASSIFICATION	6.155159625280743E-6	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999958624310321	WITHOUT_CLASSIFICATION	4.137568967911043E-6	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999946033632999	WITHOUT_CLASSIFICATION	5.3966367000861075E-6	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.99999639662477	WITHOUT_CLASSIFICATION	3.6033752300487516E-6	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999949233347701	WITHOUT_CLASSIFICATION	5.076665229789724E-6	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.999994873654624	WITHOUT_CLASSIFICATION	5.126345375907421E-6	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999973731816891	WITHOUT_CLASSIFICATION	2.6268183108585714E-6	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999952079608786	WITHOUT_CLASSIFICATION	4.792039121425499E-6	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999951196336886	WITHOUT_CLASSIFICATION	4.880366311501971E-6	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999573873847036	WITHOUT_CLASSIFICATION	4.261261529629429E-5	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999938791529726	WITHOUT_CLASSIFICATION	6.1208470275325766E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999957144720185	WITHOUT_CLASSIFICATION	4.28552798147942E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999931513746333	WITHOUT_CLASSIFICATION	6.8486253667211315E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999907157571393	WITHOUT_CLASSIFICATION	9.284242860680684E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.999990300367838	WITHOUT_CLASSIFICATION	9.699632162102904E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9999908791347734	WITHOUT_CLASSIFICATION	9.1208652266795E-6	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999921356290065	WITHOUT_CLASSIFICATION	7.864370993532722E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999902902528393	WITHOUT_CLASSIFICATION	9.709747160697408E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.999991267164601	WITHOUT_CLASSIFICATION	8.7328353989965E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999929305559958	WITHOUT_CLASSIFICATION	7.069444004145362E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999938774588699	WITHOUT_CLASSIFICATION	6.1225411300215495E-6	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999941241537932	WITHOUT_CLASSIFICATION	5.875846206853422E-6	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999860660828849	WITHOUT_CLASSIFICATION	1.3933917115086208E-5	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999956157123516	WITHOUT_CLASSIFICATION	4.3842876483733795E-6	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999956447346882	WITHOUT_CLASSIFICATION	4.355265311810027E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999977429874609	WITHOUT_CLASSIFICATION	2.2570125390113066E-6	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.999996184955358	WITHOUT_CLASSIFICATION	3.815044641992627E-6	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999953960831269	WITHOUT_CLASSIFICATION	4.603916873107619E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.999994742482948	WITHOUT_CLASSIFICATION	5.25751705195399E-6	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999956998009528	WITHOUT_CLASSIFICATION	4.300199047217322E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999948111669705	WITHOUT_CLASSIFICATION	5.188833029488196E-6	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999931372286529	WITHOUT_CLASSIFICATION	6.862771347061361E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999935918669041	WITHOUT_CLASSIFICATION	6.408133095920712E-6	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999963859599212	WITHOUT_CLASSIFICATION	3.6140400786912326E-6	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999941002527353	WITHOUT_CLASSIFICATION	5.8997472647270185E-6	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999966005117934	WITHOUT_CLASSIFICATION	3.3994882065481904E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999962891195888	WITHOUT_CLASSIFICATION	3.7108804113076306E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999919958003852	WITHOUT_CLASSIFICATION	8.004199614863902E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999972787969972	WITHOUT_CLASSIFICATION	2.7212030027371774E-6	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999962940307995	WITHOUT_CLASSIFICATION	3.705969200442715E-6	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999981204730966	WITHOUT_CLASSIFICATION	1.8795269034240042E-6	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999955965607115	WITHOUT_CLASSIFICATION	4.403439288595129E-6	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999963942784991	WITHOUT_CLASSIFICATION	3.6057215009715283E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.99999686466422	WITHOUT_CLASSIFICATION	3.13533577993849E-6	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.999994989937784	WITHOUT_CLASSIFICATION	5.01006221598998E-6	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999961421862787	WITHOUT_CLASSIFICATION	3.857813721164661E-6	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999962875623549	WITHOUT_CLASSIFICATION	3.712437645081798E-6	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999942308899306	WITHOUT_CLASSIFICATION	5.7691100694806424E-6	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.999994111419255	WITHOUT_CLASSIFICATION	5.888580745000576E-6	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999965517213049	WITHOUT_CLASSIFICATION	3.4482786951002705E-6	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999943954831613	WITHOUT_CLASSIFICATION	5.60451683874315E-6	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999937765734477	WITHOUT_CLASSIFICATION	6.223426552245275E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999965005119534	WITHOUT_CLASSIFICATION	3.499488046671536E-6	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999941328028131	WITHOUT_CLASSIFICATION	5.8671971868707E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999969935610107	WITHOUT_CLASSIFICATION	3.006438989222598E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999952864340556	WITHOUT_CLASSIFICATION	4.713565944502679E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999962307830491	WITHOUT_CLASSIFICATION	3.7692169509855835E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999942796499008	WITHOUT_CLASSIFICATION	5.720350099243321E-6	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999941714738484	WITHOUT_CLASSIFICATION	5.828526151660183E-6	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999964219331527	WITHOUT_CLASSIFICATION	3.5780668472874303E-6	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999939332241617	WITHOUT_CLASSIFICATION	6.066775838283783E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999963403180483	WITHOUT_CLASSIFICATION	3.65968195157394E-6	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999967558963394	WITHOUT_CLASSIFICATION	3.2441036605139814E-6	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999971787119019	WITHOUT_CLASSIFICATION	2.8212880981232503E-6	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.999998004890851	WITHOUT_CLASSIFICATION	1.9951091490297717E-6	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.999996971261287	WITHOUT_CLASSIFICATION	3.0287387129925872E-6	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999976131415897	WITHOUT_CLASSIFICATION	2.3868584102322286E-6	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999955534254965	WITHOUT_CLASSIFICATION	4.446574503379624E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999949706127662	WITHOUT_CLASSIFICATION	5.029387233753758E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999955361764198	WITHOUT_CLASSIFICATION	4.463823580217338E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999969950184039	WITHOUT_CLASSIFICATION	3.0049815960162056E-6	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999954067551936	WITHOUT_CLASSIFICATION	4.593244806432643E-6	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999967979227373	WITHOUT_CLASSIFICATION	3.202077262723304E-6	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999950107977925	WITHOUT_CLASSIFICATION	4.9892022074335365E-6	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999967207882519	WITHOUT_CLASSIFICATION	3.279211748130402E-6	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999949296077172	WITHOUT_CLASSIFICATION	5.070392282723426E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999970783790905	WITHOUT_CLASSIFICATION	2.921620909644425E-6	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999943558250761	WITHOUT_CLASSIFICATION	5.644174923924452E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999952880156724	WITHOUT_CLASSIFICATION	4.711984327610839E-6	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.999995482094981	WITHOUT_CLASSIFICATION	4.5179050188992896E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.999995225409357	WITHOUT_CLASSIFICATION	4.774590642965895E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999935292027292	WITHOUT_CLASSIFICATION	6.470797270813615E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999950699058426	WITHOUT_CLASSIFICATION	4.930094157379459E-6	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.999994833083334	WITHOUT_CLASSIFICATION	5.166916665997299E-6	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999950939144062	WITHOUT_CLASSIFICATION	4.906085593850833E-6	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999958454151373	WITHOUT_CLASSIFICATION	4.154584862675423E-6	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999979080396885	WITHOUT_CLASSIFICATION	2.091960311581043E-6	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999961362185028	WITHOUT_CLASSIFICATION	3.86378149718947E-6	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999950975580784	WITHOUT_CLASSIFICATION	4.902441921587278E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999965392640573	WITHOUT_CLASSIFICATION	3.4607359426715454E-6	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999935321483397	WITHOUT_CLASSIFICATION	6.467851660241379E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999965323796858	WITHOUT_CLASSIFICATION	3.467620314123294E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999940435003294	WITHOUT_CLASSIFICATION	5.956499670538967E-6	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999951194408155	WITHOUT_CLASSIFICATION	4.880559184458333E-6	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999917036346895	WITHOUT_CLASSIFICATION	8.296365310484177E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999960730999329	WITHOUT_CLASSIFICATION	3.926900067114113E-6	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999936908488257	WITHOUT_CLASSIFICATION	6.309151174264685E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.999993589525063	WITHOUT_CLASSIFICATION	6.410474936961684E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999963344769941	WITHOUT_CLASSIFICATION	3.665523005866881E-6	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999950489353767	WITHOUT_CLASSIFICATION	4.951064623310489E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999970224773619	WITHOUT_CLASSIFICATION	2.9775226380889648E-6	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999951137026087	WITHOUT_CLASSIFICATION	4.886297391172934E-6	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999937443809518	WITHOUT_CLASSIFICATION	6.255619048268061E-6	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999922446344451	WITHOUT_CLASSIFICATION	7.755365554745068E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999975798856972	WITHOUT_CLASSIFICATION	2.4201143027915416E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999978527637285	WITHOUT_CLASSIFICATION	2.147236271542221E-6	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999979915364632	WITHOUT_CLASSIFICATION	2.0084635367330454E-6	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999975109131553	WITHOUT_CLASSIFICATION	2.4890868446620093E-6	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999983767700166	WITHOUT_CLASSIFICATION	1.623229983366695E-6	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999985082045847	WITHOUT_CLASSIFICATION	1.4917954152677493E-6	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999977581486105	WITHOUT_CLASSIFICATION	2.2418513895396924E-6	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999975706296319	WITHOUT_CLASSIFICATION	2.4293703681657983E-6	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999980791192469	WITHOUT_CLASSIFICATION	1.920880753026194E-6	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999975437473061	WITHOUT_CLASSIFICATION	2.456252693821263E-6	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999978401815603	WITHOUT_CLASSIFICATION	2.1598184395347282E-6	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999981756467387	WITHOUT_CLASSIFICATION	1.8243532613622963E-6	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.999997737924469	WITHOUT_CLASSIFICATION	2.2620755310247268E-6	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.999997030737795	WITHOUT_CLASSIFICATION	2.9692622049619463E-6	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999975230153463	WITHOUT_CLASSIFICATION	2.4769846538034356E-6	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999986688064726	WITHOUT_CLASSIFICATION	1.3311935274966946E-6	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999978280362726	WITHOUT_CLASSIFICATION	2.1719637273708466E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.999997530407304	WITHOUT_CLASSIFICATION	2.469592695986497E-6	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.999998191558738	WITHOUT_CLASSIFICATION	1.8084412620022432E-6	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999976063209012	WITHOUT_CLASSIFICATION	2.393679098720083E-6	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999977252789775	WITHOUT_CLASSIFICATION	2.274721022426558E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999966676257939	WITHOUT_CLASSIFICATION	3.332374206040637E-6	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999968105117687	WITHOUT_CLASSIFICATION	3.1894882313418213E-6	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999964862593804	WITHOUT_CLASSIFICATION	3.51374061963336E-6	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.999996635133291	WITHOUT_CLASSIFICATION	3.3648667090446742E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999983106583553	WITHOUT_CLASSIFICATION	1.6893416447315137E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999968471303178	WITHOUT_CLASSIFICATION	3.1528696822620176E-6	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999969531286084	WITHOUT_CLASSIFICATION	3.0468713917280956E-6	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999972201232109	WITHOUT_CLASSIFICATION	2.7798767891653068E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999980931075891	WITHOUT_CLASSIFICATION	1.9068924109383246E-6	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999965489558061	WITHOUT_CLASSIFICATION	3.4510441939177316E-6	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999964679570772	WITHOUT_CLASSIFICATION	3.5320429228029583E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999970319697302	WITHOUT_CLASSIFICATION	2.968030269687239E-6	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999970358478231	WITHOUT_CLASSIFICATION	2.964152176980567E-6	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999965636343806	WITHOUT_CLASSIFICATION	3.4363656193519847E-6	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999971908418377	WITHOUT_CLASSIFICATION	2.809158162405566E-6	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.99999760980188	WITHOUT_CLASSIFICATION	2.3901981198653094E-6	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999973674695437	WITHOUT_CLASSIFICATION	2.6325304562350908E-6	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999967088079054	WITHOUT_CLASSIFICATION	3.2911920945790947E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999985471430147	WITHOUT_CLASSIFICATION	1.4528569852685194E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999985332310481	WITHOUT_CLASSIFICATION	1.4667689518635012E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999987396764445	WITHOUT_CLASSIFICATION	1.260323555471157E-6	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.999997807851571	WITHOUT_CLASSIFICATION	2.192148428955577E-6	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999979893564248	WITHOUT_CLASSIFICATION	2.0106435752395007E-6	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999976955977538	WITHOUT_CLASSIFICATION	2.304402246355508E-6	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999979326377778	WITHOUT_CLASSIFICATION	2.0673622221478617E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999978498419017	WITHOUT_CLASSIFICATION	2.150158098236748E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999976591600092	WITHOUT_CLASSIFICATION	2.340839990829709E-6	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999976881209811	WITHOUT_CLASSIFICATION	2.3118790189219197E-6	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999974328180435	WITHOUT_CLASSIFICATION	2.567181956529481E-6	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999989203884844	WITHOUT_CLASSIFICATION	1.0796115156734087E-6	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999982735852166	WITHOUT_CLASSIFICATION	1.7264147833721378E-6	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999984239631435	WITHOUT_CLASSIFICATION	1.5760368564732349E-6	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999969583168762	WITHOUT_CLASSIFICATION	3.041683123835872E-6	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999976825464737	WITHOUT_CLASSIFICATION	2.3174535263688134E-6	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999985900554712	WITHOUT_CLASSIFICATION	1.4099445287616796E-6	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999976874418669	WITHOUT_CLASSIFICATION	2.3125581331070008E-6	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999967180939553	WITHOUT_CLASSIFICATION	3.281906044807156E-6	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999969118588407	WITHOUT_CLASSIFICATION	3.0881411592823297E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999989108902902	WITHOUT_CLASSIFICATION	1.0891097096466659E-6	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999983640731188	WITHOUT_CLASSIFICATION	1.6359268812446795E-6	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999968221743234	WITHOUT_CLASSIFICATION	3.1778256765667966E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999975378934755	WITHOUT_CLASSIFICATION	2.4621065245922552E-6	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999978946309809	WITHOUT_CLASSIFICATION	2.1053690191479124E-6	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999972996839533	WITHOUT_CLASSIFICATION	2.7003160466548477E-6	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999971306844182	WITHOUT_CLASSIFICATION	2.8693155817562987E-6	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999975754582493	WITHOUT_CLASSIFICATION	2.4245417507329603E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.999997665156022	WITHOUT_CLASSIFICATION	2.3348439780348543E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999978692574488	WITHOUT_CLASSIFICATION	2.1307425511713654E-6	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999963946186573	WITHOUT_CLASSIFICATION	3.605381342704366E-6	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999972033640592	WITHOUT_CLASSIFICATION	2.796635940858758E-6	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999970814762628	WITHOUT_CLASSIFICATION	2.9185237372573164E-6	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999980006532835	WITHOUT_CLASSIFICATION	1.999346716590343E-6	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999968028747449	WITHOUT_CLASSIFICATION	3.197125255100339E-6	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999966285895586	WITHOUT_CLASSIFICATION	3.3714104414208455E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.999995298414285	WITHOUT_CLASSIFICATION	4.701585714916687E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.999997691908679	WITHOUT_CLASSIFICATION	2.3080913209820693E-6	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999961429448546	WITHOUT_CLASSIFICATION	3.857055145409672E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999980731611011	WITHOUT_CLASSIFICATION	1.9268388988982613E-6	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999965982536811	WITHOUT_CLASSIFICATION	3.4017463187483575E-6	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999983213321908	WITHOUT_CLASSIFICATION	1.6786678091620257E-6	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9999971041438661	WITHOUT_CLASSIFICATION	2.8958561339384893E-6	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.99999716788517	WITHOUT_CLASSIFICATION	2.832114830034222E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999952584647579	WITHOUT_CLASSIFICATION	4.741535242041401E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999983308156107	WITHOUT_CLASSIFICATION	1.6691843891595542E-6	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999980001565996	WITHOUT_CLASSIFICATION	1.9998434003640893E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999965415351458	WITHOUT_CLASSIFICATION	3.458464854114696E-6	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999955721166353	WITHOUT_CLASSIFICATION	4.427883364771713E-6	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999965211873283	WITHOUT_CLASSIFICATION	3.478812671703609E-6	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.999997874896446	WITHOUT_CLASSIFICATION	2.1251035540620204E-6	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999964664117402	WITHOUT_CLASSIFICATION	3.5335882596882365E-6	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999951408809185	WITHOUT_CLASSIFICATION	4.859119081465952E-6	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999959412058244	WITHOUT_CLASSIFICATION	4.058794175571389E-6	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999965857282381	WITHOUT_CLASSIFICATION	3.414271761953138E-6	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999964625097547	WITHOUT_CLASSIFICATION	3.5374902451501875E-6	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999964654953096	WITHOUT_CLASSIFICATION	3.5345046903900926E-6	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999963280666393	WITHOUT_CLASSIFICATION	3.6719333607007146E-6	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999970567479746	WITHOUT_CLASSIFICATION	2.9432520254634462E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999955019177281	WITHOUT_CLASSIFICATION	4.498082271930872E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999961959923109	WITHOUT_CLASSIFICATION	3.8040076889739814E-6	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999979257114738	WITHOUT_CLASSIFICATION	2.0742885261414175E-6	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999972222259835	WITHOUT_CLASSIFICATION	2.7777740163911468E-6	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999977261368815	WITHOUT_CLASSIFICATION	2.2738631184513684E-6	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999972794453893	WITHOUT_CLASSIFICATION	2.7205546107458745E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999976867932374	WITHOUT_CLASSIFICATION	2.3132067626933103E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999997927204154	WITHOUT_CLASSIFICATION	2.072795845949428E-6	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999974513796172	WITHOUT_CLASSIFICATION	2.5486203828150618E-6	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999967204099647	WITHOUT_CLASSIFICATION	3.2795900352978226E-6	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999967149493951	WITHOUT_CLASSIFICATION	3.2850506048258305E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999965200646117	WITHOUT_CLASSIFICATION	3.4799353882466983E-6	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999962026142014	WITHOUT_CLASSIFICATION	3.7973857986542387E-6	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999968052049336	WITHOUT_CLASSIFICATION	3.194795066390999E-6	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999964063358895	WITHOUT_CLASSIFICATION	3.5936641105887837E-6	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.99999780197349	WITHOUT_CLASSIFICATION	2.1980265100392106E-6	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999964451118526	WITHOUT_CLASSIFICATION	3.5548881472729474E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999971527825251	WITHOUT_CLASSIFICATION	2.8472174748989646E-6	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999961701121753	WITHOUT_CLASSIFICATION	3.829887824633546E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999972893279471	WITHOUT_CLASSIFICATION	2.710672052911648E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999977980002458	WITHOUT_CLASSIFICATION	2.2019997541959827E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999975861327084	WITHOUT_CLASSIFICATION	2.4138672915243116E-6	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.999996634941097	WITHOUT_CLASSIFICATION	3.3650589028755995E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999977188175309	WITHOUT_CLASSIFICATION	2.2811824691127097E-6	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.999996366801283	WITHOUT_CLASSIFICATION	3.6331987169028878E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999963117167794	WITHOUT_CLASSIFICATION	3.688283220674114E-6	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999961778587804	WITHOUT_CLASSIFICATION	3.822141219691319E-6	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999959606505389	WITHOUT_CLASSIFICATION	4.039349461206956E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999976490087941	WITHOUT_CLASSIFICATION	2.350991205900618E-6	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.999996001804998	WITHOUT_CLASSIFICATION	3.998195001935479E-6	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999970270471359	WITHOUT_CLASSIFICATION	2.9729528640606157E-6	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999980020260641	WITHOUT_CLASSIFICATION	1.997973935868725E-6	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999974728542961	WITHOUT_CLASSIFICATION	2.5271457039241547E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999973743399077	WITHOUT_CLASSIFICATION	2.625660092257508E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999984081883911	WITHOUT_CLASSIFICATION	1.5918116088859333E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999980899117031	WITHOUT_CLASSIFICATION	1.910088296757009E-6	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9981795849851056	WITHOUT_CLASSIFICATION	0.0018204150148943372	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.999996383806863	WITHOUT_CLASSIFICATION	3.6161931369678663E-6	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999882585893427	WITHOUT_CLASSIFICATION	1.1741410657306034E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999975402596986	WITHOUT_CLASSIFICATION	2.459740301360484E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999930484721046	WITHOUT_CLASSIFICATION	6.95152789535554E-6	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9984926332979527	WITHOUT_CLASSIFICATION	0.0015073667020472279	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9979040886154449	WITHOUT_CLASSIFICATION	0.002095911384555157	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999657840823558	WITHOUT_CLASSIFICATION	3.4215917644196385E-5	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9992704237717394	WITHOUT_CLASSIFICATION	7.295762282606694E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999841781056884	WITHOUT_CLASSIFICATION	1.5821894311495955E-5	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999949598091536	WITHOUT_CLASSIFICATION	5.040190846466684E-6	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999992542890521	WITHOUT_CLASSIFICATION	7.45710947759159E-7	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9993824713114853	WITHOUT_CLASSIFICATION	6.175286885147138E-4	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999920337757535	WITHOUT_CLASSIFICATION	7.966224246453659E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999983188760249	WITHOUT_CLASSIFICATION	1.681123975150011E-6	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999678255334674	WITHOUT_CLASSIFICATION	3.217446653260577E-5	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999982954903998	WITHOUT_CLASSIFICATION	1.704509600237059E-6	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999934380217	WITHOUT_CLASSIFICATION	6.561978254718958E-9	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999983071777032	WITHOUT_CLASSIFICATION	1.6928222967925635E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999987459934478	WITHOUT_CLASSIFICATION	1.2540065521653718E-6	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999994734510091	WITHOUT_CLASSIFICATION	5.265489907666413E-7	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999895954183934	WITHOUT_CLASSIFICATION	1.0404581606634151E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999995339916005	WITHOUT_CLASSIFICATION	4.660083994355663E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999995339916005	WITHOUT_CLASSIFICATION	4.660083994355663E-7	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9902862176036927	WITHOUT_CLASSIFICATION	0.009713782396307182	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9921864795607576	WITHOUT_CLASSIFICATION	0.007813520439242487	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9996496784474813	WITHOUT_CLASSIFICATION	3.50321552518684E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9644109681997202	DESIGN	0.03558903180027983	WITHOUT_CLASSIFICATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9998299790680149	WITHOUT_CLASSIFICATION	1.7002093198518776E-4	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999997384336379	WITHOUT_CLASSIFICATION	2.6156636217737454E-7	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999959793305576	WITHOUT_CLASSIFICATION	4.0206694424191816E-6	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999999999741333	WITHOUT_CLASSIFICATION	2.586669974796661E-10	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9372880885246664	WITHOUT_CLASSIFICATION	0.06271191147533366	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999999751024554	WITHOUT_CLASSIFICATION	2.4897544583184238E-8	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.999999128611453	WITHOUT_CLASSIFICATION	8.713885469414388E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999880908388333	WITHOUT_CLASSIFICATION	1.1909161166719551E-5	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999987660464488	WITHOUT_CLASSIFICATION	1.2339535511892635E-6	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999959612078554	WITHOUT_CLASSIFICATION	4.038792144593638E-6	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999976825520186	WITHOUT_CLASSIFICATION	2.3174479813629607E-6	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999988686742044	WITHOUT_CLASSIFICATION	1.1313257955550871E-6	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999985376297541	WITHOUT_CLASSIFICATION	1.4623702459880215E-6	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999254783585126	WITHOUT_CLASSIFICATION	7.452164148740302E-5	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9989480218642997	WITHOUT_CLASSIFICATION	0.0010519781357002668	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999042311327895	WITHOUT_CLASSIFICATION	9.576886721042891E-5	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999991350979146	WITHOUT_CLASSIFICATION	8.649020853053071E-7	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999869604833331	WITHOUT_CLASSIFICATION	1.3039516666815996E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9863296797979466	DESIGN	0.013670320202053483	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9992391186618387	WITHOUT_CLASSIFICATION	7.608813381613811E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9863296797979466	DESIGN	0.013670320202053483	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9987457738697875	WITHOUT_CLASSIFICATION	0.0012542261302125994	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.999580117371287	WITHOUT_CLASSIFICATION	4.1988262871292824E-4	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.6406402873989886	DESIGN	0.35935971260101135	WITHOUT_CLASSIFICATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999858244094483	WITHOUT_CLASSIFICATION	1.4175590551743802E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999950547066844	WITHOUT_CLASSIFICATION	4.94529331567042E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999991401572514	WITHOUT_CLASSIFICATION	8.598427486589958E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999991401572514	WITHOUT_CLASSIFICATION	8.598427486589958E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999991401572514	WITHOUT_CLASSIFICATION	8.598427486589958E-7	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999991855777614	WITHOUT_CLASSIFICATION	8.144222386297924E-7	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9997424927874691	WITHOUT_CLASSIFICATION	2.5750721253096253E-4	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9982078838003464	WITHOUT_CLASSIFICATION	0.001792116199653546	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999313009824119	WITHOUT_CLASSIFICATION	6.869901758819365E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999313009824119	WITHOUT_CLASSIFICATION	6.869901758819365E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999313009824119	WITHOUT_CLASSIFICATION	6.869901758819365E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999313009824119	WITHOUT_CLASSIFICATION	6.869901758819365E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999313009824119	WITHOUT_CLASSIFICATION	6.869901758819365E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999313009824119	WITHOUT_CLASSIFICATION	6.869901758819365E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999514916374672	WITHOUT_CLASSIFICATION	4.850836253285428E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999514916374672	WITHOUT_CLASSIFICATION	4.850836253285428E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999514916374672	WITHOUT_CLASSIFICATION	4.850836253285428E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999514916374672	WITHOUT_CLASSIFICATION	4.850836253285428E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999514916374672	WITHOUT_CLASSIFICATION	4.850836253285428E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997750911470775	WITHOUT_CLASSIFICATION	2.249088529224093E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997750911470775	WITHOUT_CLASSIFICATION	2.249088529224093E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997750911470775	WITHOUT_CLASSIFICATION	2.249088529224093E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997750911470775	WITHOUT_CLASSIFICATION	2.249088529224093E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997750911470775	WITHOUT_CLASSIFICATION	2.249088529224093E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999725287187732	WITHOUT_CLASSIFICATION	2.747128122681702E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999725287187732	WITHOUT_CLASSIFICATION	2.747128122681702E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999725287187732	WITHOUT_CLASSIFICATION	2.747128122681702E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999725287187732	WITHOUT_CLASSIFICATION	2.747128122681702E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999725287187732	WITHOUT_CLASSIFICATION	2.747128122681702E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999725287187732	WITHOUT_CLASSIFICATION	2.747128122681702E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999098331110156	WITHOUT_CLASSIFICATION	9.01668889844254E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999098331110156	WITHOUT_CLASSIFICATION	9.01668889844254E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999098331110156	WITHOUT_CLASSIFICATION	9.01668889844254E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999098331110156	WITHOUT_CLASSIFICATION	9.01668889844254E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999098331110156	WITHOUT_CLASSIFICATION	9.01668889844254E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999195159503395	WITHOUT_CLASSIFICATION	8.048404966054992E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999195159503395	WITHOUT_CLASSIFICATION	8.048404966054992E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999195159503395	WITHOUT_CLASSIFICATION	8.048404966054992E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999195159503395	WITHOUT_CLASSIFICATION	8.048404966054992E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999195159503395	WITHOUT_CLASSIFICATION	8.048404966054992E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999573873847036	WITHOUT_CLASSIFICATION	4.261261529629429E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999573873847036	WITHOUT_CLASSIFICATION	4.261261529629429E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999573873847036	WITHOUT_CLASSIFICATION	4.261261529629429E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999573873847036	WITHOUT_CLASSIFICATION	4.261261529629429E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999573873847036	WITHOUT_CLASSIFICATION	4.261261529629429E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999609642741227	WITHOUT_CLASSIFICATION	3.903572587719312E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999996888752044	WITHOUT_CLASSIFICATION	3.1112479550557774E-7	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999836489756393	WITHOUT_CLASSIFICATION	1.6351024360759476E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999588126457081	WITHOUT_CLASSIFICATION	4.1187354291938124E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999003996109876	WITHOUT_CLASSIFICATION	9.960038901238968E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999978042460913	WITHOUT_CLASSIFICATION	2.195753908664724E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999966581973605	WITHOUT_CLASSIFICATION	3.341802639442931E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.99999746027476	WITHOUT_CLASSIFICATION	2.539725239968023E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999960355809672	WITHOUT_CLASSIFICATION	3.964419032825529E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999978308231575	WITHOUT_CLASSIFICATION	2.1691768425921823E-6	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999959897556838	WITHOUT_CLASSIFICATION	4.010244316244123E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999949111051026	WITHOUT_CLASSIFICATION	5.088894897274274E-6	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999986724914325	WITHOUT_CLASSIFICATION	1.3275085675808645E-6	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999978763480145	WITHOUT_CLASSIFICATION	2.12365198541634E-6	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999962112848096	WITHOUT_CLASSIFICATION	3.788715190379075E-6	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999966653734045	WITHOUT_CLASSIFICATION	3.3346265955685673E-6	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999968086565746	WITHOUT_CLASSIFICATION	3.191343425514017E-6	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999969368179298	WITHOUT_CLASSIFICATION	3.063182070210711E-6	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999946744676316	WITHOUT_CLASSIFICATION	5.325532368484056E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.999994049174744	WITHOUT_CLASSIFICATION	5.95082525600068E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999968392174117	WITHOUT_CLASSIFICATION	3.160782588265011E-6	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999949665993861	WITHOUT_CLASSIFICATION	5.033400613797479E-6	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999960228940697	WITHOUT_CLASSIFICATION	3.9771059302502725E-6	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999948088676376	WITHOUT_CLASSIFICATION	5.1911323624422465E-6	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999957802806111	WITHOUT_CLASSIFICATION	4.2197193889936264E-6	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999951830728963	WITHOUT_CLASSIFICATION	4.816927103718492E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999960184147039	WITHOUT_CLASSIFICATION	3.981585296051911E-6	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999965587171029	WITHOUT_CLASSIFICATION	3.441282897147197E-6	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.999994806680202	WITHOUT_CLASSIFICATION	5.193319797982288E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999958346139303	WITHOUT_CLASSIFICATION	4.1653860698076825E-6	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999965897025573	WITHOUT_CLASSIFICATION	3.410297442651779E-6	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999936263602256	WITHOUT_CLASSIFICATION	6.37363977442979E-6	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999936586117333	WITHOUT_CLASSIFICATION	6.341388266789188E-6	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.999994990111067	WITHOUT_CLASSIFICATION	5.0098889330378315E-6	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999935258771164	WITHOUT_CLASSIFICATION	6.474122883647186E-6	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999921285654876	WITHOUT_CLASSIFICATION	7.871434512427046E-6	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999923487117227	WITHOUT_CLASSIFICATION	7.651288277379561E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999930189772164	WITHOUT_CLASSIFICATION	6.981022783685676E-6	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999949432127766	WITHOUT_CLASSIFICATION	5.056787223396698E-6	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999968040510621	WITHOUT_CLASSIFICATION	3.1959489378821176E-6	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999950545106819	WITHOUT_CLASSIFICATION	4.945489318085368E-6	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999934889130531	WITHOUT_CLASSIFICATION	6.5110869469542395E-6	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999937559009644	WITHOUT_CLASSIFICATION	6.244099035584134E-6	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999946011135474	WITHOUT_CLASSIFICATION	5.398886452666496E-6	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999908551560294	WITHOUT_CLASSIFICATION	9.144843970608509E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.999994559432324	WITHOUT_CLASSIFICATION	5.4405676760394464E-6	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999969681511007	WITHOUT_CLASSIFICATION	3.031848899180859E-6	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999968202564022	WITHOUT_CLASSIFICATION	3.17974359770403E-6	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999938421744393	WITHOUT_CLASSIFICATION	6.157825560791683E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999957144720185	WITHOUT_CLASSIFICATION	4.28552798147942E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999931513746333	WITHOUT_CLASSIFICATION	6.8486253667211315E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999907157571393	WITHOUT_CLASSIFICATION	9.284242860680684E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999902902528393	WITHOUT_CLASSIFICATION	9.709747160697408E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999977429874609	WITHOUT_CLASSIFICATION	2.2570125390113066E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999962891195888	WITHOUT_CLASSIFICATION	3.7108804113076306E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999957393571097	WITHOUT_CLASSIFICATION	4.260642890217571E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999919958003852	WITHOUT_CLASSIFICATION	8.004199614863902E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999965005119534	WITHOUT_CLASSIFICATION	3.499488046671536E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999969935610107	WITHOUT_CLASSIFICATION	3.006438989222598E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999951825884885	WITHOUT_CLASSIFICATION	4.817411511555093E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999952864340556	WITHOUT_CLASSIFICATION	4.713565944502679E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999962307830491	WITHOUT_CLASSIFICATION	3.7692169509855835E-6	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999936883356363	WITHOUT_CLASSIFICATION	6.311664363740374E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999922494334662	WITHOUT_CLASSIFICATION	7.75056653379917E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999951510401455	WITHOUT_CLASSIFICATION	4.848959854461695E-6	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999937809742192	WITHOUT_CLASSIFICATION	6.219025780723783E-6	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999946460844562	WITHOUT_CLASSIFICATION	5.3539155438837915E-6	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999953464300366	WITHOUT_CLASSIFICATION	4.653569963389116E-6	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999929434013485	WITHOUT_CLASSIFICATION	7.056598651501299E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999925019388501	WITHOUT_CLASSIFICATION	7.49806114983572E-6	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999922570051707	WITHOUT_CLASSIFICATION	7.742994829327594E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999935284282501	WITHOUT_CLASSIFICATION	6.471571749923596E-6	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.99999316949563	WITHOUT_CLASSIFICATION	6.830504369975484E-6	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999894443711629	WITHOUT_CLASSIFICATION	1.0555628837148138E-5	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.999991090100047	WITHOUT_CLASSIFICATION	8.9098999529625E-6	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999961620319634	WITHOUT_CLASSIFICATION	3.8379680366058115E-6	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999963496872105	WITHOUT_CLASSIFICATION	3.6503127894645244E-6	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999968979351339	WITHOUT_CLASSIFICATION	3.1020648660193383E-6	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999942210907501	WITHOUT_CLASSIFICATION	5.778909249901809E-6	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999941986733327	WITHOUT_CLASSIFICATION	5.801326667239555E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999952697965426	WITHOUT_CLASSIFICATION	4.730203457347591E-6	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999937572496883	WITHOUT_CLASSIFICATION	6.242750311643414E-6	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999960011419656	WITHOUT_CLASSIFICATION	3.998858034420959E-6	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999927413152389	WITHOUT_CLASSIFICATION	7.25868476117137E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999949876706806	WITHOUT_CLASSIFICATION	5.012329319469592E-6	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999967583146595	WITHOUT_CLASSIFICATION	3.2416853405415713E-6	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999949195130634	WITHOUT_CLASSIFICATION	5.080486936668835E-6	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999935300583609	WITHOUT_CLASSIFICATION	6.469941639164684E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.999993105660412	WITHOUT_CLASSIFICATION	6.894339588034249E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999966075177332	WITHOUT_CLASSIFICATION	3.3924822668572854E-6	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999965327781644	WITHOUT_CLASSIFICATION	3.467221835680828E-6	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999952019093794	WITHOUT_CLASSIFICATION	4.798090620628478E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999945017063746	WITHOUT_CLASSIFICATION	5.498293625382406E-6	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999941259252019	WITHOUT_CLASSIFICATION	5.87407479802269E-6	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999976085646561	WITHOUT_CLASSIFICATION	2.391435343776931E-6	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999963780641263	WITHOUT_CLASSIFICATION	3.6219358736920645E-6	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999970564562343	WITHOUT_CLASSIFICATION	2.9435437657407592E-6	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999969599801715	WITHOUT_CLASSIFICATION	3.040019828479239E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999969950184039	WITHOUT_CLASSIFICATION	3.0049815960162056E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999952140213493	WITHOUT_CLASSIFICATION	4.7859786506673415E-6	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999954067551936	WITHOUT_CLASSIFICATION	4.593244806432643E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.999995225409357	WITHOUT_CLASSIFICATION	4.774590642965895E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999950699058426	WITHOUT_CLASSIFICATION	4.930094157379459E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999965392640573	WITHOUT_CLASSIFICATION	3.4607359426715454E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999940435003294	WITHOUT_CLASSIFICATION	5.956499670538967E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999960730999329	WITHOUT_CLASSIFICATION	3.926900067114113E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999970224773619	WITHOUT_CLASSIFICATION	2.9775226380889648E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999978527637285	WITHOUT_CLASSIFICATION	2.147236271542221E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999981644181004	WITHOUT_CLASSIFICATION	1.8355818995667901E-6	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999983516035236	WITHOUT_CLASSIFICATION	1.6483964763998435E-6	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999961365640173	WITHOUT_CLASSIFICATION	3.863435982731179E-6	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.999996837683	WITHOUT_CLASSIFICATION	3.162317000062138E-6	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999973089863542	WITHOUT_CLASSIFICATION	2.6910136457057402E-6	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999968536162083	WITHOUT_CLASSIFICATION	3.1463837917611224E-6	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999952445475433	WITHOUT_CLASSIFICATION	4.7554524566237914E-6	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999970375026705	WITHOUT_CLASSIFICATION	2.96249732944622E-6	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999951831584509	WITHOUT_CLASSIFICATION	4.816841549084378E-6	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999940528814015	WITHOUT_CLASSIFICATION	5.947118598437022E-6	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999946512316645	WITHOUT_CLASSIFICATION	5.348768335361296E-6	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999952935326661	WITHOUT_CLASSIFICATION	4.706467333924155E-6	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999953580830889	WITHOUT_CLASSIFICATION	4.641916911100985E-6	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999954902854603	WITHOUT_CLASSIFICATION	4.509714539702355E-6	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.999996648473972	WITHOUT_CLASSIFICATION	3.3515260280345712E-6	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999967836937451	WITHOUT_CLASSIFICATION	3.2163062549424945E-6	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999949789055632	WITHOUT_CLASSIFICATION	5.021094436763584E-6	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999974828923368	WITHOUT_CLASSIFICATION	2.5171076631377644E-6	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999951717279472	WITHOUT_CLASSIFICATION	4.828272052865933E-6	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999963010303486	WITHOUT_CLASSIFICATION	3.698969651278202E-6	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999969159861293	WITHOUT_CLASSIFICATION	3.08401387069649E-6	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999961056645403	WITHOUT_CLASSIFICATION	3.8943354596093006E-6	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999942415999725	WITHOUT_CLASSIFICATION	5.758400027417473E-6	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999959247229976	WITHOUT_CLASSIFICATION	4.075277002436983E-6	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999936773916103	WITHOUT_CLASSIFICATION	6.322608389816783E-6	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999930518253143	WITHOUT_CLASSIFICATION	6.948174685808119E-6	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999932629718318	WITHOUT_CLASSIFICATION	6.737028168174454E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999940717218726	WITHOUT_CLASSIFICATION	5.928278127331503E-6	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999952442432568	WITHOUT_CLASSIFICATION	4.755756743243328E-6	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999975827692649	WITHOUT_CLASSIFICATION	2.4172307352071043E-6	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999984377109711	WITHOUT_CLASSIFICATION	1.5622890289989577E-6	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999976161666326	WITHOUT_CLASSIFICATION	2.383833367470694E-6	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999976738547438	WITHOUT_CLASSIFICATION	2.3261452561345837E-6	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999978189690858	WITHOUT_CLASSIFICATION	2.181030914238918E-6	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999974277478118	WITHOUT_CLASSIFICATION	2.572252188282202E-6	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999974972797115	WITHOUT_CLASSIFICATION	2.5027202884324142E-6	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999975541566629	WITHOUT_CLASSIFICATION	2.44584333712245E-6	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.99999673052381	WITHOUT_CLASSIFICATION	3.2694761898953953E-6	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999975240438946	WITHOUT_CLASSIFICATION	2.4759561054410526E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999975454259629	WITHOUT_CLASSIFICATION	2.454574037218413E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999966676257939	WITHOUT_CLASSIFICATION	3.332374206040637E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999979526818684	WITHOUT_CLASSIFICATION	2.0473181316571376E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999983106583553	WITHOUT_CLASSIFICATION	1.6893416447315137E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999980931075891	WITHOUT_CLASSIFICATION	1.9068924109383246E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999970319697302	WITHOUT_CLASSIFICATION	2.968030269687239E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999985471430147	WITHOUT_CLASSIFICATION	1.4528569852685194E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999985332310481	WITHOUT_CLASSIFICATION	1.4667689518635012E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999978498419017	WITHOUT_CLASSIFICATION	2.150158098236748E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999976591600092	WITHOUT_CLASSIFICATION	2.340839990829709E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999976113726173	WITHOUT_CLASSIFICATION	2.3886273827152904E-6	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.999997977263678	WITHOUT_CLASSIFICATION	2.0227363219539536E-6	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999979701619548	WITHOUT_CLASSIFICATION	2.029838045165439E-6	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999980280407441	WITHOUT_CLASSIFICATION	1.971959255970588E-6	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.999997728501599	WITHOUT_CLASSIFICATION	2.271498401038138E-6	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999975351804316	WITHOUT_CLASSIFICATION	2.464819568505568E-6	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999967178331158	WITHOUT_CLASSIFICATION	3.2821668842506043E-6	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999960548597476	WITHOUT_CLASSIFICATION	3.945140252425036E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.999997485633918	WITHOUT_CLASSIFICATION	2.514366082028814E-6	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999978717108988	WITHOUT_CLASSIFICATION	2.1282891012043172E-6	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999972851928028	WITHOUT_CLASSIFICATION	2.714807197143133E-6	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999976538700622	WITHOUT_CLASSIFICATION	2.3461299376581246E-6	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999967229228724	WITHOUT_CLASSIFICATION	3.277077127632165E-6	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999965497025147	WITHOUT_CLASSIFICATION	3.450297485151888E-6	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.999996472150406	WITHOUT_CLASSIFICATION	3.527849594086039E-6	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999979025461813	WITHOUT_CLASSIFICATION	2.097453818676592E-6	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999968592598677	WITHOUT_CLASSIFICATION	3.1407401323074892E-6	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999965582715945	WITHOUT_CLASSIFICATION	3.4417284055344757E-6	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999983864009976	WITHOUT_CLASSIFICATION	1.6135990025034157E-6	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999976915542871	WITHOUT_CLASSIFICATION	2.3084457130118702E-6	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999955515477263	WITHOUT_CLASSIFICATION	4.448452273624352E-6	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999978690876233	WITHOUT_CLASSIFICATION	2.1309123767723837E-6	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999977990506196	WITHOUT_CLASSIFICATION	2.200949380487204E-6	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.999998048498838	WITHOUT_CLASSIFICATION	1.951501161979373E-6	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999975010401155	WITHOUT_CLASSIFICATION	2.498959884415421E-6	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999977781446598	WITHOUT_CLASSIFICATION	2.2218553401363986E-6	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999976032121455	WITHOUT_CLASSIFICATION	2.3967878545948796E-6	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.999997987424849	WITHOUT_CLASSIFICATION	2.0125751508673108E-6	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999977137752598	WITHOUT_CLASSIFICATION	2.2862247402434015E-6	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.99999877255048	WITHOUT_CLASSIFICATION	1.2274495200527388E-6	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999979707400167	WITHOUT_CLASSIFICATION	2.0292599833390643E-6	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999973344885493	WITHOUT_CLASSIFICATION	2.6655114507059176E-6	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999977747061899	WITHOUT_CLASSIFICATION	2.225293810091156E-6	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999982257993296	WITHOUT_CLASSIFICATION	1.774200670465045E-6	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999981027106437	WITHOUT_CLASSIFICATION	1.897289356214005E-6	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999977268760731	WITHOUT_CLASSIFICATION	2.2731239267920186E-6	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999975542928657	WITHOUT_CLASSIFICATION	2.4457071343113896E-6	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999980550346567	WITHOUT_CLASSIFICATION	1.9449653433975674E-6	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999976812262129	WITHOUT_CLASSIFICATION	2.318773787202563E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999975378934755	WITHOUT_CLASSIFICATION	2.4621065245922552E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.999997665156022	WITHOUT_CLASSIFICATION	2.3348439780348543E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999978692574488	WITHOUT_CLASSIFICATION	2.1307425511713654E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.999997184222804	WITHOUT_CLASSIFICATION	2.815777195893278E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.999997691908679	WITHOUT_CLASSIFICATION	2.3080913209820693E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999980731611011	WITHOUT_CLASSIFICATION	1.9268388988982613E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999952584647579	WITHOUT_CLASSIFICATION	4.741535242041401E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999983308156107	WITHOUT_CLASSIFICATION	1.6691843891595542E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999955019177281	WITHOUT_CLASSIFICATION	4.498082271930872E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999961959923109	WITHOUT_CLASSIFICATION	3.8040076889739814E-6	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999981172320855	WITHOUT_CLASSIFICATION	1.8827679144917321E-6	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999971979343287	WITHOUT_CLASSIFICATION	2.8020656713465003E-6	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9999971113294223	WITHOUT_CLASSIFICATION	2.8886705777457433E-6	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999976801350127	WITHOUT_CLASSIFICATION	2.3198649873849457E-6	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999974463940219	WITHOUT_CLASSIFICATION	2.5536059779831706E-6	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999979098114445	WITHOUT_CLASSIFICATION	2.090188555525818E-6	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999970986739808	WITHOUT_CLASSIFICATION	2.9013260193400042E-6	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999980432552842	WITHOUT_CLASSIFICATION	1.9567447158546956E-6	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999968839719896	WITHOUT_CLASSIFICATION	3.1160280103207753E-6	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999967863247813	WITHOUT_CLASSIFICATION	3.2136752187438676E-6	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999960400790351	WITHOUT_CLASSIFICATION	3.959920964953143E-6	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999962839063596	WITHOUT_CLASSIFICATION	3.71609364027915E-6	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999966590859821	WITHOUT_CLASSIFICATION	3.340914017889232E-6	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999967929822239	WITHOUT_CLASSIFICATION	3.2070177759780285E-6	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.999997019119565	WITHOUT_CLASSIFICATION	2.980880435150247E-6	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999973099529489	WITHOUT_CLASSIFICATION	2.6900470512275285E-6	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999966886256708	WITHOUT_CLASSIFICATION	3.311374329290787E-6	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999973147486138	WITHOUT_CLASSIFICATION	2.685251386207509E-6	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999957571210546	WITHOUT_CLASSIFICATION	4.242878945404725E-6	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999966194582879	WITHOUT_CLASSIFICATION	3.3805417122459307E-6	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999977305698986	WITHOUT_CLASSIFICATION	2.2694301013405742E-6	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999978550864543	WITHOUT_CLASSIFICATION	2.1449135457167333E-6	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999983010553445	WITHOUT_CLASSIFICATION	1.6989446553982006E-6	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999968350817765	WITHOUT_CLASSIFICATION	3.1649182235271096E-6	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999964201541047	WITHOUT_CLASSIFICATION	3.57984589530369E-6	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999977621774305	WITHOUT_CLASSIFICATION	2.2378225694241475E-6	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999964358597321	WITHOUT_CLASSIFICATION	3.5641402680043714E-6	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999969849697696	WITHOUT_CLASSIFICATION	3.015030230364442E-6	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999964582985357	WITHOUT_CLASSIFICATION	3.541701464358922E-6	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999970539396766	WITHOUT_CLASSIFICATION	2.946060323374225E-6	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999965000198874	WITHOUT_CLASSIFICATION	3.4999801125995102E-6	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.999997454940336	WITHOUT_CLASSIFICATION	2.5450596640714593E-6	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.999996351550179	WITHOUT_CLASSIFICATION	3.6484498208989747E-6	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999978946473435	WITHOUT_CLASSIFICATION	2.1053526564570086E-6	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999974479413436	WITHOUT_CLASSIFICATION	2.5520586563933685E-6	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999975992711949	WITHOUT_CLASSIFICATION	2.400728805000309E-6	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999963924694724	WITHOUT_CLASSIFICATION	3.6075305277031357E-6	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999965728142902	WITHOUT_CLASSIFICATION	3.427185709781375E-6	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999954700739265	WITHOUT_CLASSIFICATION	4.529926073519111E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999962195585543	WITHOUT_CLASSIFICATION	3.7804414456516306E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999976867932374	WITHOUT_CLASSIFICATION	2.3132067626933103E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.999997927204154	WITHOUT_CLASSIFICATION	2.072795845949428E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999972893279471	WITHOUT_CLASSIFICATION	2.710672052911648E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.999995685778018	WITHOUT_CLASSIFICATION	4.314221981914062E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999975861327084	WITHOUT_CLASSIFICATION	2.4138672915243116E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999977188175309	WITHOUT_CLASSIFICATION	2.2811824691127097E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999963117167794	WITHOUT_CLASSIFICATION	3.688283220674114E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999973743399077	WITHOUT_CLASSIFICATION	2.625660092257508E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999984081883911	WITHOUT_CLASSIFICATION	1.5918116088859333E-6	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999974222329446	WITHOUT_CLASSIFICATION	2.5777670553700875E-6	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999979698500777	WITHOUT_CLASSIFICATION	2.0301499223579886E-6	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999978225021279	WITHOUT_CLASSIFICATION	2.1774978721858075E-6	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999975766161446	WITHOUT_CLASSIFICATION	2.4233838553662875E-6	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999963485332453	WITHOUT_CLASSIFICATION	3.6514667547412034E-6	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999965616967331	WITHOUT_CLASSIFICATION	3.438303266817589E-6	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999968034311456	WITHOUT_CLASSIFICATION	3.196568854353662E-6	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999962852876971	WITHOUT_CLASSIFICATION	3.714712302752832E-6	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.999996300618382	WITHOUT_CLASSIFICATION	3.699381617989149E-6	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.999997859979067	WITHOUT_CLASSIFICATION	2.1400209329722007E-6	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999965218320607	WITHOUT_CLASSIFICATION	3.4781679392719364E-6	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999970310984603	WITHOUT_CLASSIFICATION	2.968901539690625E-6	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999983526068523	WITHOUT_CLASSIFICATION	1.6473931475970965E-6	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999966316318771	WITHOUT_CLASSIFICATION	3.368368122748794E-6	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999964452777802	WITHOUT_CLASSIFICATION	3.5547222197587766E-6	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999978321453412	WITHOUT_CLASSIFICATION	2.167854658740647E-6	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999970265964307	WITHOUT_CLASSIFICATION	2.9734035692995955E-6	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.999996938548445	WITHOUT_CLASSIFICATION	3.061451555057302E-6	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999974959745698	WITHOUT_CLASSIFICATION	2.5040254302548284E-6	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999955835917346	WITHOUT_CLASSIFICATION	4.416408265383386E-6	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999950926028514	WITHOUT_CLASSIFICATION	4.907397148627131E-6	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.999996853573786	WITHOUT_CLASSIFICATION	3.1464262140032857E-6	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999962415980314	WITHOUT_CLASSIFICATION	3.758401968664227E-6	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999961670984805	WITHOUT_CLASSIFICATION	3.832901519509338E-6	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999952052115622	WITHOUT_CLASSIFICATION	4.794788437754591E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.99999804947757	WITHOUT_CLASSIFICATION	1.9505224300109492E-6	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999968745498519	WITHOUT_CLASSIFICATION	3.125450148225619E-6	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999969419231037	WITHOUT_CLASSIFICATION	3.0580768961226877E-6	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999962845103499	WITHOUT_CLASSIFICATION	3.7154896499806607E-6	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999962128189113	WITHOUT_CLASSIFICATION	3.7871810886393794E-6	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.999998493533897	WITHOUT_CLASSIFICATION	1.506466102960027E-6	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999980262256399	WITHOUT_CLASSIFICATION	1.9737743600008998E-6	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999966533716472	WITHOUT_CLASSIFICATION	3.3466283527958546E-6	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999979812041042	WITHOUT_CLASSIFICATION	2.0187958957731E-6	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999972945510397	WITHOUT_CLASSIFICATION	2.705448960334714E-6	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999982175427014	WITHOUT_CLASSIFICATION	1.782457298691002E-6	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999983478469651	WITHOUT_CLASSIFICATION	1.652153034919384E-6	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999978459610138	WITHOUT_CLASSIFICATION	2.1540389862527095E-6	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.999997539408895	WITHOUT_CLASSIFICATION	2.4605911048755023E-6	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9984926332979527	WITHOUT_CLASSIFICATION	0.0015073667020472279	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9979040886154449	WITHOUT_CLASSIFICATION	0.002095911384555157	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999992542890521	WITHOUT_CLASSIFICATION	7.45710947759159E-7	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999920337757535	WITHOUT_CLASSIFICATION	7.966224246453659E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999983188760249	WITHOUT_CLASSIFICATION	1.681123975150011E-6	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999678255334674	WITHOUT_CLASSIFICATION	3.217446653260577E-5	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999982954903998	WITHOUT_CLASSIFICATION	1.704509600237059E-6	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999929462377174	WITHOUT_CLASSIFICATION	7.0537622825778445E-6	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9999973146911914	WITHOUT_CLASSIFICATION	2.6853088086545364E-6	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999970632450714	WITHOUT_CLASSIFICATION	2.936754928618133E-6	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999984349638688	WITHOUT_CLASSIFICATION	1.565036131155049E-6	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999974688519264	WITHOUT_CLASSIFICATION	2.5311480736216904E-6	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999967352245823	WITHOUT_CLASSIFICATION	3.2647754177170872E-6	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999972381440512	WITHOUT_CLASSIFICATION	2.7618559487413563E-6	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999980742441533	WITHOUT_CLASSIFICATION	1.9257558466940893E-6	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999968299559663	WITHOUT_CLASSIFICATION	3.170044033678266E-6	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999965893756195	WITHOUT_CLASSIFICATION	3.410624380570111E-6	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999973119580365	WITHOUT_CLASSIFICATION	2.6880419633520182E-6	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.999996701541025	WITHOUT_CLASSIFICATION	3.2984589749358226E-6	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999974601442587	WITHOUT_CLASSIFICATION	2.539855741209151E-6	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999976848348092	WITHOUT_CLASSIFICATION	2.3151651907410408E-6	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999970857760077	WITHOUT_CLASSIFICATION	2.9142239922597475E-6	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999976624089603	WITHOUT_CLASSIFICATION	2.337591039646182E-6	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999962006906631	WITHOUT_CLASSIFICATION	3.799309336983681E-6	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999967069209607	WITHOUT_CLASSIFICATION	3.293079039304495E-6	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999978121761862	WITHOUT_CLASSIFICATION	2.1878238137831077E-6	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999980830268355	WITHOUT_CLASSIFICATION	1.9169731645458235E-6	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999962532399362	WITHOUT_CLASSIFICATION	3.746760063659375E-6	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999985931032135	WITHOUT_CLASSIFICATION	1.4068967865426604E-6	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999971772634851	WITHOUT_CLASSIFICATION	2.8227365148961594E-6	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999990623619798	WITHOUT_CLASSIFICATION	9.376380201307529E-7	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999938660472314	WITHOUT_CLASSIFICATION	6.1339527686282255E-6	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.999925644981341	WITHOUT_CLASSIFICATION	7.435501865907994E-5	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999999036576916	WITHOUT_CLASSIFICATION	9.634230837652836E-8	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.999998779321763	WITHOUT_CLASSIFICATION	1.2206782370341733E-6	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999817354237	WITHOUT_CLASSIFICATION	1.8264576213396804E-8	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.999772713323217	WITHOUT_CLASSIFICATION	2.2728667678302078E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999983071777032	WITHOUT_CLASSIFICATION	1.6928222967925635E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999987459934478	WITHOUT_CLASSIFICATION	1.2540065521653718E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999995339916005	WITHOUT_CLASSIFICATION	4.660083994355663E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999995339916005	WITHOUT_CLASSIFICATION	4.660083994355663E-7	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.8810695870414407	WITHOUT_CLASSIFICATION	0.11893041295855927	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999977336648006	WITHOUT_CLASSIFICATION	2.266335199505527E-6	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999998856027537	WITHOUT_CLASSIFICATION	1.1439724628667238E-7	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999995897345597	WITHOUT_CLASSIFICATION	4.10265440286804E-7	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999988282915727	WITHOUT_CLASSIFICATION	1.1717084273650141E-6	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.997898435935865	WITHOUT_CLASSIFICATION	0.002101564064134952	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.998887991949096	WITHOUT_CLASSIFICATION	0.0011120080509039645	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9998233154283759	WITHOUT_CLASSIFICATION	1.766845716241008E-4	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999958157871075	WITHOUT_CLASSIFICATION	4.184212892428624E-6	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999953096427036	WITHOUT_CLASSIFICATION	4.69035729642383E-6	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9711505051225456	WITHOUT_CLASSIFICATION	0.028849494877454456	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9893678908517206	WITHOUT_CLASSIFICATION	0.010632109148279414	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999997112547312	WITHOUT_CLASSIFICATION	2.8874526883121194E-7	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999990585895835	WITHOUT_CLASSIFICATION	9.414104164938473E-7	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999489070619979	WITHOUT_CLASSIFICATION	5.109293800201347E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999489070619979	WITHOUT_CLASSIFICATION	5.109293800201347E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9824964224125398	WITHOUT_CLASSIFICATION	0.017503577587460226	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999870092363669	WITHOUT_CLASSIFICATION	1.2990763633155598E-5	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999899774802565	WITHOUT_CLASSIFICATION	1.0022519743435671E-5	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999925548549781	WITHOUT_CLASSIFICATION	7.445145021920899E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998897425951181	WITHOUT_CLASSIFICATION	1.1025740488191182E-4	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999987487999117	WITHOUT_CLASSIFICATION	1.2512000882888932E-6	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999998506024683	WITHOUT_CLASSIFICATION	1.4939753165362263E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999987487999117	WITHOUT_CLASSIFICATION	1.2512000882888932E-6	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9777104428536071	WITHOUT_CLASSIFICATION	0.02228955714639302	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999989045937506	WITHOUT_CLASSIFICATION	1.0954062493474127E-6	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9748946943263902	WITHOUT_CLASSIFICATION	0.02510530567360987	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9992707277842632	WITHOUT_CLASSIFICATION	7.29272215736802E-4	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9997320006260121	WITHOUT_CLASSIFICATION	2.6799937398792835E-4	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.999889973217671	WITHOUT_CLASSIFICATION	1.1002678232888794E-4	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999875639212904	WITHOUT_CLASSIFICATION	1.2436078709490859E-5	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999370787762134	WITHOUT_CLASSIFICATION	6.292122378663316E-5	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999730760413437	WITHOUT_CLASSIFICATION	2.692395865639236E-5	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9697033155062568	WITHOUT_CLASSIFICATION	0.03029668449374318	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9868417582932552	WITHOUT_CLASSIFICATION	0.013158241706744808	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999878585603257	WITHOUT_CLASSIFICATION	1.2141439674338139E-5	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999715716221184	WITHOUT_CLASSIFICATION	2.842837788168224E-5	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9986921444318992	WITHOUT_CLASSIFICATION	0.0013078555681007246	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999993188583327	WITHOUT_CLASSIFICATION	6.811416673266496E-7	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999993188583327	WITHOUT_CLASSIFICATION	6.811416673266496E-7	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.999998167660968	WITHOUT_CLASSIFICATION	1.8323390319443812E-6	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998952284402248	WITHOUT_CLASSIFICATION	1.0477155977515955E-4	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999997391544443	WITHOUT_CLASSIFICATION	2.608455556401841E-7	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999870417436293	WITHOUT_CLASSIFICATION	1.295825637072384E-5	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999129575081	WITHOUT_CLASSIFICATION	8.704249198624228E-8	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999987487999117	WITHOUT_CLASSIFICATION	1.2512000882888932E-6	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999973671836208	WITHOUT_CLASSIFICATION	2.6328163793098466E-6	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999850554148	WITHOUT_CLASSIFICATION	1.4944585222028878E-8	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999632811858021	WITHOUT_CLASSIFICATION	3.671881419792188E-5	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999987709594176	WITHOUT_CLASSIFICATION	1.2290405824197335E-6	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9997009166163001	WITHOUT_CLASSIFICATION	2.990833836999676E-4	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999985043956	WITHOUT_CLASSIFICATION	1.4956043632183346E-9	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999999984450074	WITHOUT_CLASSIFICATION	1.5549924747493558E-9	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999312339883838	WITHOUT_CLASSIFICATION	6.876601161622061E-5	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9988970903721851	WITHOUT_CLASSIFICATION	0.0011029096278149493	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.6011833488723349	WITHOUT_CLASSIFICATION	0.3988166511276651	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999885150947075	WITHOUT_CLASSIFICATION	1.1484905292324481E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9996070121590556	WITHOUT_CLASSIFICATION	3.9298784094447115E-4	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9150069381657806	WITHOUT_CLASSIFICATION	0.08499306183421934	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999977166123408	WITHOUT_CLASSIFICATION	2.2833876591963637E-6	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9973718893532012	DESIGN	0.002628110646798782	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9969638636024435	WITHOUT_CLASSIFICATION	0.0030361363975565867	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999506985795464	WITHOUT_CLASSIFICATION	4.930142045350397E-5	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9999053508015332	WITHOUT_CLASSIFICATION	9.46491984668133E-5	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999994021085981	WITHOUT_CLASSIFICATION	5.978914018929366E-7	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999925284527049	WITHOUT_CLASSIFICATION	7.471547295045131E-6	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.999998884916671	WITHOUT_CLASSIFICATION	1.1150833290438087E-6	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9998575436897726	WITHOUT_CLASSIFICATION	1.4245631022729758E-4	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.999779131668116	WITHOUT_CLASSIFICATION	2.2086833188396875E-4	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999726410966788	WITHOUT_CLASSIFICATION	2.735890332119032E-5	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999683424207895	WITHOUT_CLASSIFICATION	3.165757921049305E-5	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999515473647683	WITHOUT_CLASSIFICATION	4.845263523174475E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9989822984349886	WITHOUT_CLASSIFICATION	0.0010177015650113656	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999809899667155	WITHOUT_CLASSIFICATION	1.9010033284516916E-5	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9984301489099293	WITHOUT_CLASSIFICATION	0.0015698510900705727	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999891848492469	WITHOUT_CLASSIFICATION	1.0815150752994678E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999898051759388	WITHOUT_CLASSIFICATION	1.0194824061085475E-5	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999958697889046	WITHOUT_CLASSIFICATION	4.130211095301726E-6	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9878820429016487	WITHOUT_CLASSIFICATION	0.012117957098351286	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999998576406066	WITHOUT_CLASSIFICATION	1.4235939337136175E-7	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999815501247331	WITHOUT_CLASSIFICATION	1.8449875266818732E-5	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999968417316024	WITHOUT_CLASSIFICATION	3.158268397562295E-6	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9998704798972086	WITHOUT_CLASSIFICATION	1.295201027914567E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.999980823033692	WITHOUT_CLASSIFICATION	1.9176966308085995E-5	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9994911975285955	WITHOUT_CLASSIFICATION	5.088024714045603E-4	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9878478896920979	WITHOUT_CLASSIFICATION	0.012152110307901996	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999929462377174	WITHOUT_CLASSIFICATION	7.0537622825778445E-6	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999984425937737	WITHOUT_CLASSIFICATION	1.5574062262511839E-6	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999537377540187	WITHOUT_CLASSIFICATION	4.626224598122515E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999986654840303	WITHOUT_CLASSIFICATION	1.3345159697828195E-6	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999936302599653	WITHOUT_CLASSIFICATION	6.369740034650944E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999989045937506	WITHOUT_CLASSIFICATION	1.0954062493474127E-6	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9998612737647431	WITHOUT_CLASSIFICATION	1.3872623525693116E-4	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.8140641130489968	DESIGN	0.1859358869510032	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9994801181030085	WITHOUT_CLASSIFICATION	5.198818969915579E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999695106467	WITHOUT_CLASSIFICATION	3.048935328937351E-7	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999695106467	WITHOUT_CLASSIFICATION	3.048935328937351E-7	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999562517065917	WITHOUT_CLASSIFICATION	4.3748293408307506E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999562517065917	WITHOUT_CLASSIFICATION	4.3748293408307506E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999562517065917	WITHOUT_CLASSIFICATION	4.3748293408307506E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999783108211997	WITHOUT_CLASSIFICATION	2.1689178800288098E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999783108211997	WITHOUT_CLASSIFICATION	2.1689178800288098E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999930268550916	WITHOUT_CLASSIFICATION	6.973144908391482E-6	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999930268550916	WITHOUT_CLASSIFICATION	6.973144908391482E-6	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.999999952719042	WITHOUT_CLASSIFICATION	4.728095797996269E-8	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999993598523618	WITHOUT_CLASSIFICATION	6.401476381957489E-7	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999313672571432	WITHOUT_CLASSIFICATION	6.863274285686836E-5	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999313672571432	WITHOUT_CLASSIFICATION	6.863274285686836E-5	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999958370081012	WITHOUT_CLASSIFICATION	4.1629918987749545E-6	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999546501937646	WITHOUT_CLASSIFICATION	4.534980623536098E-5	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.999714585460966	WITHOUT_CLASSIFICATION	2.8541453903396303E-4	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999966216818312	WITHOUT_CLASSIFICATION	3.3783181687609047E-6	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.999999276830896	WITHOUT_CLASSIFICATION	7.231691041131785E-7	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999854258677107	WITHOUT_CLASSIFICATION	1.4574132289297314E-5	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9998485973213965	WITHOUT_CLASSIFICATION	1.514026786034812E-4	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.997856943826035	WITHOUT_CLASSIFICATION	0.002143056173965101	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999975322379334	WITHOUT_CLASSIFICATION	2.4677620665643706E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999881673393691	WITHOUT_CLASSIFICATION	1.1832660630797614E-5	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999691172633718	WITHOUT_CLASSIFICATION	3.0882736628152905E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999733391485164	WITHOUT_CLASSIFICATION	2.6660851483718124E-5	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999973514672923	WITHOUT_CLASSIFICATION	2.6485327076832086E-6	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9999471704433154	WITHOUT_CLASSIFICATION	5.28295566845372E-5	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999788533268814	WITHOUT_CLASSIFICATION	2.114667311852086E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9977227841839279	WITHOUT_CLASSIFICATION	0.002277215816072012	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9997927470082083	WITHOUT_CLASSIFICATION	2.0725299179182326E-4	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9998956834628628	WITHOUT_CLASSIFICATION	1.0431653713715352E-4	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999683007055381	WITHOUT_CLASSIFICATION	3.169929446192561E-5	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.992378197553119	WITHOUT_CLASSIFICATION	0.007621802446881061	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998341928663462	WITHOUT_CLASSIFICATION	1.6580713365377635E-4	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9995091989402641	WITHOUT_CLASSIFICATION	4.908010597358656E-4	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999539686805194	WITHOUT_CLASSIFICATION	4.603131948046309E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999995439214944	WITHOUT_CLASSIFICATION	4.560785056017602E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999975538509288	WITHOUT_CLASSIFICATION	2.4461490712823372E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999997404054827	WITHOUT_CLASSIFICATION	2.595945172932502E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999975322464945	WITHOUT_CLASSIFICATION	2.4677535055234457E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999912139622464	WITHOUT_CLASSIFICATION	8.78603775367824E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999880031581401	WITHOUT_CLASSIFICATION	1.1996841859982601E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999935655453188	WITHOUT_CLASSIFICATION	6.434454681170399E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999993171516942	WITHOUT_CLASSIFICATION	6.828483057948806E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960739906537	WITHOUT_CLASSIFICATION	3.926009346266015E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978943096042	WITHOUT_CLASSIFICATION	2.1056903957841357E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999970765692475	WITHOUT_CLASSIFICATION	2.9234307524461763E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978943096042	WITHOUT_CLASSIFICATION	2.1056903957841357E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978943096042	WITHOUT_CLASSIFICATION	2.1056903957841357E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978943096042	WITHOUT_CLASSIFICATION	2.1056903957841357E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978943096042	WITHOUT_CLASSIFICATION	2.1056903957841357E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978943096042	WITHOUT_CLASSIFICATION	2.1056903957841357E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978943096042	WITHOUT_CLASSIFICATION	2.1056903957841357E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999970765692475	WITHOUT_CLASSIFICATION	2.9234307524461763E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999970765692475	WITHOUT_CLASSIFICATION	2.9234307524461763E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999970765692475	WITHOUT_CLASSIFICATION	2.9234307524461763E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999970765692475	WITHOUT_CLASSIFICATION	2.9234307524461763E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999970765692475	WITHOUT_CLASSIFICATION	2.9234307524461763E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999970765692475	WITHOUT_CLASSIFICATION	2.9234307524461763E-6	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999962217496869	WITHOUT_CLASSIFICATION	3.7782503130993912E-6	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.999983655320149	WITHOUT_CLASSIFICATION	1.6344679850969782E-5	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999795268214081	WITHOUT_CLASSIFICATION	2.0473178591843183E-5	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999854638395267	WITHOUT_CLASSIFICATION	1.4536160473460843E-5	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999063350245866	WITHOUT_CLASSIFICATION	9.366497541333124E-5	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999928321213218	WITHOUT_CLASSIFICATION	7.16787867817409E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999899360091306	WITHOUT_CLASSIFICATION	1.0063990869403357E-5	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.99999974085247	WITHOUT_CLASSIFICATION	2.5914753000733454E-7	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999999127531037	WITHOUT_CLASSIFICATION	8.724689627854232E-8	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999965984433073	WITHOUT_CLASSIFICATION	3.4015566926997587E-6	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9997652700393419	WITHOUT_CLASSIFICATION	2.3472996065810296E-4	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.999999044765937	WITHOUT_CLASSIFICATION	9.552340629078125E-7	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999981930259125	WITHOUT_CLASSIFICATION	1.8069740874584491E-6	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999977699959	WITHOUT_CLASSIFICATION	2.2300041117563206E-9	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999450170450204	WITHOUT_CLASSIFICATION	5.4982954979535856E-5	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.997301691028717	WITHOUT_CLASSIFICATION	0.0026983089712829126	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999951483759737	WITHOUT_CLASSIFICATION	4.851624026303656E-6	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.999987116592886	WITHOUT_CLASSIFICATION	1.2883407114119099E-5	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9997602171521499	WITHOUT_CLASSIFICATION	2.3978284785005456E-4	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999387168089	WITHOUT_CLASSIFICATION	6.128319116095312E-8	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999998482978	WITHOUT_CLASSIFICATION	1.5170227349377876E-10	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999561203076517	WITHOUT_CLASSIFICATION	4.3879692348252464E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999998506024683	WITHOUT_CLASSIFICATION	1.4939753165362263E-7	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9998868832562244	WITHOUT_CLASSIFICATION	1.1311674377556525E-4	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999995042405596	WITHOUT_CLASSIFICATION	4.957594404333067E-7	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999999972509488	WITHOUT_CLASSIFICATION	2.7490511963195116E-8	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999289005408756	WITHOUT_CLASSIFICATION	7.109945912441885E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999997319606965	WITHOUT_CLASSIFICATION	2.68039303528635E-7	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999995773935414	WITHOUT_CLASSIFICATION	4.2260645858011043E-7	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999963686208527	WITHOUT_CLASSIFICATION	3.631379147381949E-6	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999999644024976	WITHOUT_CLASSIFICATION	3.559750236280848E-8	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999989572428	WITHOUT_CLASSIFICATION	1.0427572904027184E-9	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999457494743574	WITHOUT_CLASSIFICATION	5.425052564258572E-5	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999326436415	WITHOUT_CLASSIFICATION	6.735635852138459E-8	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999990232706467	WITHOUT_CLASSIFICATION	9.76729353322922E-7	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9994833257315645	WITHOUT_CLASSIFICATION	5.166742684355492E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999993240649009	WITHOUT_CLASSIFICATION	6.759350991825079E-7	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999939039863959	WITHOUT_CLASSIFICATION	6.096013604121073E-6	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999426620753	WITHOUT_CLASSIFICATION	5.733792480047738E-8	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999949822297676	WITHOUT_CLASSIFICATION	5.017770232385355E-6	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.99986542333469	WITHOUT_CLASSIFICATION	1.345766653100195E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999991030362839	WITHOUT_CLASSIFICATION	8.969637161316905E-7	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999911206885	WITHOUT_CLASSIFICATION	8.879311516407574E-9	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998821448622138	WITHOUT_CLASSIFICATION	1.1785513778609665E-4	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998821448622138	WITHOUT_CLASSIFICATION	1.1785513778609665E-4	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999998215462706	WITHOUT_CLASSIFICATION	1.784537294013008E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999998215462706	WITHOUT_CLASSIFICATION	1.784537294013008E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999528917623532	WITHOUT_CLASSIFICATION	4.710823764669474E-5	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999528917623532	WITHOUT_CLASSIFICATION	4.710823764669474E-5	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999993961982534	WITHOUT_CLASSIFICATION	6.038017466879965E-7	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999802543737797	WITHOUT_CLASSIFICATION	1.9745626220351702E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999977462354652	WITHOUT_CLASSIFICATION	2.2537645347482594E-6	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999940252578012	WITHOUT_CLASSIFICATION	5.974742198737475E-6	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999859658028025	WITHOUT_CLASSIFICATION	1.4034197197365787E-5	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9982229734105497	WITHOUT_CLASSIFICATION	0.0017770265894503597	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.999540399160456	WITHOUT_CLASSIFICATION	4.596008395439871E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999979064057882	WITHOUT_CLASSIFICATION	2.0935942117412394E-6	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999930963037152	WITHOUT_CLASSIFICATION	6.903696284740583E-6	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999947437532859	WITHOUT_CLASSIFICATION	5.256246714136104E-6	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.999998884413543	WITHOUT_CLASSIFICATION	1.1155864569658024E-6	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999999386520171	WITHOUT_CLASSIFICATION	6.134798297152069E-8	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9995719953175495	WITHOUT_CLASSIFICATION	4.28004682450585E-4	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999322015550203	WITHOUT_CLASSIFICATION	6.779844497975288E-5	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9997839177092478	WITHOUT_CLASSIFICATION	2.1608229075219335E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999726484201896	WITHOUT_CLASSIFICATION	2.7351579810391156E-5	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999985147745218	WITHOUT_CLASSIFICATION	1.485225478079358E-6	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999959691631409	WITHOUT_CLASSIFICATION	4.030836859123622E-6	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999620664037886	WITHOUT_CLASSIFICATION	3.793359621139946E-5	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999905375868691	WITHOUT_CLASSIFICATION	9.462413130933892E-6	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999872910587456	WITHOUT_CLASSIFICATION	1.2708941254391035E-5	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999081397330519	WITHOUT_CLASSIFICATION	9.186026694805351E-5	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999907244532471	WITHOUT_CLASSIFICATION	9.275546752902017E-6	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.999999362220314	WITHOUT_CLASSIFICATION	6.377796859250293E-7	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.999999242824529	WITHOUT_CLASSIFICATION	7.571754710891425E-7	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.999980511232636	WITHOUT_CLASSIFICATION	1.948876736394587E-5	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9999915053265689	WITHOUT_CLASSIFICATION	8.494673431088463E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996138654287391	WITHOUT_CLASSIFICATION	3.861345712609456E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996138654287391	WITHOUT_CLASSIFICATION	3.861345712609456E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996138654287391	WITHOUT_CLASSIFICATION	3.861345712609456E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9969991066483307	WITHOUT_CLASSIFICATION	0.003000893351669376	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9969991066483307	WITHOUT_CLASSIFICATION	0.003000893351669376	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999977166123408	WITHOUT_CLASSIFICATION	2.2833876591963637E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999977166123408	WITHOUT_CLASSIFICATION	2.2833876591963637E-6	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999962589863046	WITHOUT_CLASSIFICATION	3.7410136955420423E-6	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.6977577189938224	WITHOUT_CLASSIFICATION	0.30224228100617767	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9963423194380474	WITHOUT_CLASSIFICATION	0.0036576805619526593	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999589154478842	WITHOUT_CLASSIFICATION	4.1084552115879174E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996138654287391	WITHOUT_CLASSIFICATION	3.861345712609456E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996138654287391	WITHOUT_CLASSIFICATION	3.861345712609456E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9996138654287391	WITHOUT_CLASSIFICATION	3.861345712609456E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9969991066483307	WITHOUT_CLASSIFICATION	0.003000893351669376	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9969991066483307	WITHOUT_CLASSIFICATION	0.003000893351669376	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9969991066483307	WITHOUT_CLASSIFICATION	0.003000893351669376	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999977166123408	WITHOUT_CLASSIFICATION	2.2833876591963637E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999977166123408	WITHOUT_CLASSIFICATION	2.2833876591963637E-6	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999594285476675	WITHOUT_CLASSIFICATION	4.057145233248371E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999508879054408	WITHOUT_CLASSIFICATION	4.9112094559125504E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9966473808511843	WITHOUT_CLASSIFICATION	0.0033526191488157915	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9966473808511843	WITHOUT_CLASSIFICATION	0.0033526191488157915	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9966473808511843	WITHOUT_CLASSIFICATION	0.0033526191488157915	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9966473808511843	WITHOUT_CLASSIFICATION	0.0033526191488157915	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9966473808511843	WITHOUT_CLASSIFICATION	0.0033526191488157915	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999862465152551	WITHOUT_CLASSIFICATION	1.3753484744875776E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999624940212082	WITHOUT_CLASSIFICATION	3.750597879185311E-5	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999973143944215	WITHOUT_CLASSIFICATION	2.6856055784341805E-6	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999986254269978	WITHOUT_CLASSIFICATION	1.3745730022080076E-6	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999886907475277	WITHOUT_CLASSIFICATION	1.1309252472355506E-5	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9994984977542887	WITHOUT_CLASSIFICATION	5.015022457112812E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999931738250016	WITHOUT_CLASSIFICATION	6.8261749983921865E-6	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999941170956079	WITHOUT_CLASSIFICATION	5.882904392157539E-6	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999921119834473	WITHOUT_CLASSIFICATION	7.888016552640002E-6	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999908628623061	WITHOUT_CLASSIFICATION	9.137137693886043E-6	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999998850027974	WITHOUT_CLASSIFICATION	1.149972026811047E-7	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999973615165306	WITHOUT_CLASSIFICATION	2.638483469429518E-6	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.999999675213521	WITHOUT_CLASSIFICATION	3.247864790414002E-7	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999997408156486	WITHOUT_CLASSIFICATION	2.5918435136290367E-7	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9986489008325609	WITHOUT_CLASSIFICATION	0.0013510991674391573	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9995917900103463	WITHOUT_CLASSIFICATION	4.082099896537734E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9995917900103463	WITHOUT_CLASSIFICATION	4.082099896537734E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9995917900103463	WITHOUT_CLASSIFICATION	4.082099896537734E-4	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997089859862704	WITHOUT_CLASSIFICATION	2.910140137294919E-4	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997089563763215	WITHOUT_CLASSIFICATION	2.9104362367854663E-4	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.999996912205289	WITHOUT_CLASSIFICATION	3.0877947109334434E-6	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999952006865894	WITHOUT_CLASSIFICATION	4.799313410609893E-6	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999988900513563	WITHOUT_CLASSIFICATION	1.1099486436249984E-6	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9996289355108681	WITHOUT_CLASSIFICATION	3.7106448913183497E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9998919267173667	WITHOUT_CLASSIFICATION	1.080732826332786E-4	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9992650246765986	WITHOUT_CLASSIFICATION	7.34975323401471E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9996304064045192	WITHOUT_CLASSIFICATION	3.6959359548081785E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9998395428414044	WITHOUT_CLASSIFICATION	1.604571585954426E-4	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999757199742177	WITHOUT_CLASSIFICATION	2.4280025782197887E-5	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9993700934379148	WITHOUT_CLASSIFICATION	6.299065620851693E-4	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9998832186180763	WITHOUT_CLASSIFICATION	1.1678138192375572E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999900008849586	WITHOUT_CLASSIFICATION	9.999115041332853E-6	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999221290131525	WITHOUT_CLASSIFICATION	7.787098684750757E-5	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9998761963372744	WITHOUT_CLASSIFICATION	1.2380366272561852E-4	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999824340988223	WITHOUT_CLASSIFICATION	1.7565901177696735E-5	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9992291714467748	WITHOUT_CLASSIFICATION	7.708285532252026E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.999934253569349	WITHOUT_CLASSIFICATION	6.57464306510224E-5	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9997534447736814	WITHOUT_CLASSIFICATION	2.4655522631847955E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999626842127289	WITHOUT_CLASSIFICATION	3.731578727103821E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9994734996178773	WITHOUT_CLASSIFICATION	5.265003821226393E-4	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.989935637464092	WITHOUT_CLASSIFICATION	0.010064362535907968	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999980926831449	WITHOUT_CLASSIFICATION	1.9073168551046594E-6	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999989675558314	WITHOUT_CLASSIFICATION	1.0324441686150933E-6	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999968421278411	WITHOUT_CLASSIFICATION	3.157872158832477E-6	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.999995254526392	WITHOUT_CLASSIFICATION	4.7454736079089165E-6	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999914427232173	WITHOUT_CLASSIFICATION	8.557276782692575E-6	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9993069164719589	WITHOUT_CLASSIFICATION	6.930835280410449E-4	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999977569097663	WITHOUT_CLASSIFICATION	2.2430902337116066E-6	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.999998287215423	WITHOUT_CLASSIFICATION	1.7127845769253686E-6	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999971580769726	WITHOUT_CLASSIFICATION	2.8419230273969646E-6	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999946238070734	WITHOUT_CLASSIFICATION	5.3761929266389E-6	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.999994706954775	WITHOUT_CLASSIFICATION	5.293045224994289E-6	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999955822341439	WITHOUT_CLASSIFICATION	4.417765856105262E-6	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999961637669891	WITHOUT_CLASSIFICATION	3.836233010910652E-6	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9980978637612088	WITHOUT_CLASSIFICATION	0.0019021362387911425	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.998940494151881	WITHOUT_CLASSIFICATION	0.0010595058481189627	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999990438790415	WITHOUT_CLASSIFICATION	9.561209585818761E-7	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999990721754388	WITHOUT_CLASSIFICATION	9.278245612673415E-7	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999488053291895	WITHOUT_CLASSIFICATION	5.119467081060332E-5	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999990607599125	WITHOUT_CLASSIFICATION	9.39240087504785E-7	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.999995102664591	WITHOUT_CLASSIFICATION	4.897335408949207E-6	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999997181629132	WITHOUT_CLASSIFICATION	2.818370868157548E-7	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.999988869185162	WITHOUT_CLASSIFICATION	1.1130814837989288E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999738095491619	WITHOUT_CLASSIFICATION	2.619045083810272E-5	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.999859812609046	WITHOUT_CLASSIFICATION	1.4018739095413035E-4	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.999859812609046	WITHOUT_CLASSIFICATION	1.4018739095413035E-4	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.999899922720074	WITHOUT_CLASSIFICATION	1.0007727992591961E-4	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999905462782582	WITHOUT_CLASSIFICATION	9.453721741793801E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999933976530232	WITHOUT_CLASSIFICATION	6.602346976808337E-6	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9550095586139924	WITHOUT_CLASSIFICATION	0.04499044138600757	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.998769897602732	WITHOUT_CLASSIFICATION	0.0012301023972680434	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999388420846337	WITHOUT_CLASSIFICATION	6.115791536632892E-5	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9988700794209929	WITHOUT_CLASSIFICATION	0.0011299205790070849	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999995281700704	WITHOUT_CLASSIFICATION	4.7182992955654773E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999904071564764	WITHOUT_CLASSIFICATION	9.59284352363237E-6	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.999999967524799	WITHOUT_CLASSIFICATION	3.247520090292082E-8	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999490392506561	WITHOUT_CLASSIFICATION	5.0960749343889165E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999490392506561	WITHOUT_CLASSIFICATION	5.0960749343889165E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999490392506561	WITHOUT_CLASSIFICATION	5.0960749343889165E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999490392506561	WITHOUT_CLASSIFICATION	5.0960749343889165E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999985953481927	WITHOUT_CLASSIFICATION	1.4046518073183229E-6	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999825075591986	WITHOUT_CLASSIFICATION	1.7492440801326038E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999996331958245	WITHOUT_CLASSIFICATION	3.6680417554320025E-7	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9999692258007419	WITHOUT_CLASSIFICATION	3.077419925819323E-5	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.867386260464508	WITHOUT_CLASSIFICATION	0.13261373953549208	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999919733116	WITHOUT_CLASSIFICATION	8.026688470726374E-9	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999965658071445	WITHOUT_CLASSIFICATION	3.434192855565322E-6	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999564048372732	WITHOUT_CLASSIFICATION	4.359516272684629E-5	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999564048372732	WITHOUT_CLASSIFICATION	4.359516272684629E-5	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9995629105949072	WITHOUT_CLASSIFICATION	4.370894050928018E-4	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999982473011153	WITHOUT_CLASSIFICATION	1.7526988847301917E-6	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9993449109892847	WITHOUT_CLASSIFICATION	6.550890107152934E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9996666073963442	WITHOUT_CLASSIFICATION	3.333926036558239E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9996666073963442	WITHOUT_CLASSIFICATION	3.333926036558239E-4	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.999876030763038	WITHOUT_CLASSIFICATION	1.2396923696195457E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9990145489782122	WITHOUT_CLASSIFICATION	9.854510217877502E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9990145489782122	WITHOUT_CLASSIFICATION	9.854510217877502E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999838195043	WITHOUT_CLASSIFICATION	1.6180495740299046E-8	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999814155992813	WITHOUT_CLASSIFICATION	1.8584400718598857E-5	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999989772816641	WITHOUT_CLASSIFICATION	1.022718335892212E-6	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9902143101593257	WITHOUT_CLASSIFICATION	0.009785689840674346	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.999667621780378	WITHOUT_CLASSIFICATION	3.323782196220518E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999786960272	WITHOUT_CLASSIFICATION	2.130397280260994E-8	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999255767207204	WITHOUT_CLASSIFICATION	7.442327927969262E-5	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.999967820072073	WITHOUT_CLASSIFICATION	3.21799279270702E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999993316957946	WITHOUT_CLASSIFICATION	6.683042053674163E-7	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999998942677214	WITHOUT_CLASSIFICATION	1.0573227853317861E-7	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999998296916436	WITHOUT_CLASSIFICATION	1.7030835643907016E-7	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999759754044789	WITHOUT_CLASSIFICATION	2.4024595521162605E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999609137940122	WITHOUT_CLASSIFICATION	3.9086205987827223E-5	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.99998844576527	WITHOUT_CLASSIFICATION	1.155423472988176E-5	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999938847605722	WITHOUT_CLASSIFICATION	6.115239427741916E-6	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.8432647731464589	WITHOUT_CLASSIFICATION	0.1567352268535411	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999992379109021	WITHOUT_CLASSIFICATION	7.62089098012599E-7	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999975269841267	WITHOUT_CLASSIFICATION	2.473015873182259E-6	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999997017419676	WITHOUT_CLASSIFICATION	2.98258032281655E-7	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999974485076357	WITHOUT_CLASSIFICATION	2.551492364257373E-6	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999897634028857	WITHOUT_CLASSIFICATION	1.02365971143404E-5	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999951683987931	WITHOUT_CLASSIFICATION	4.831601206827388E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.999999940215785	WITHOUT_CLASSIFICATION	5.978421498783587E-8	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9987371900258306	WITHOUT_CLASSIFICATION	0.0012628099741694321	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999995163191681	WITHOUT_CLASSIFICATION	4.83680832000755E-7	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9961225939008612	WITHOUT_CLASSIFICATION	0.0038774060991387826	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999913371410958	WITHOUT_CLASSIFICATION	8.662858904162631E-6	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999970775293696	WITHOUT_CLASSIFICATION	2.9224706304121154E-6	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.665113369763718	WITHOUT_CLASSIFICATION	0.33488663023628196	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999964551119609	WITHOUT_CLASSIFICATION	3.5448880390333545E-6	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999937411778176	WITHOUT_CLASSIFICATION	6.25882218241487E-6	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999965984542102	WITHOUT_CLASSIFICATION	3.4015457898315144E-6	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999901919749824	DESIGN	9.808025017695599E-6	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999994024684934	WITHOUT_CLASSIFICATION	5.975315066823534E-7	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.999963055028134	WITHOUT_CLASSIFICATION	3.694497186609245E-5	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.7241653553737281	WITHOUT_CLASSIFICATION	0.27583464462627194	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999928110619721	WITHOUT_CLASSIFICATION	7.188938027825844E-6	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999983010734053	WITHOUT_CLASSIFICATION	1.6989265947943056E-6	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999914827671978	WITHOUT_CLASSIFICATION	8.517232802190658E-6	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.7241653553737281	WITHOUT_CLASSIFICATION	0.27583464462627194	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999928110619721	WITHOUT_CLASSIFICATION	7.188938027825844E-6	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999998497858669	WITHOUT_CLASSIFICATION	1.5021413315529584E-7	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999292856798327	WITHOUT_CLASSIFICATION	7.071432016730219E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999292856798327	WITHOUT_CLASSIFICATION	7.071432016730219E-5	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999998161647807	WITHOUT_CLASSIFICATION	1.8383521920042566E-7	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999258418092	WITHOUT_CLASSIFICATION	7.415819087647894E-8	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999919872759764	WITHOUT_CLASSIFICATION	8.012724023583738E-6	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999952916405195	WITHOUT_CLASSIFICATION	4.708359480457335E-6	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999652497476395	WITHOUT_CLASSIFICATION	3.475025236057134E-5	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9984248652863231	WITHOUT_CLASSIFICATION	0.0015751347136767895	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999973974926336	WITHOUT_CLASSIFICATION	2.602507366407076E-6	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999995799338605	WITHOUT_CLASSIFICATION	4.2006613951241766E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9998085232102838	WITHOUT_CLASSIFICATION	1.914767897162522E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999986623792964	WITHOUT_CLASSIFICATION	1.3376207037158764E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999955687536133	WITHOUT_CLASSIFICATION	4.431246386761899E-6	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999887942179987	WITHOUT_CLASSIFICATION	1.1205782001249739E-5	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999996394157968	WITHOUT_CLASSIFICATION	3.605842032099821E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998972230238	WITHOUT_CLASSIFICATION	1.0277697622238131E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998972230238	WITHOUT_CLASSIFICATION	1.0277697622238131E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999990945868337	WITHOUT_CLASSIFICATION	9.054131663430697E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999990945868337	WITHOUT_CLASSIFICATION	9.054131663430697E-7	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999982358619514	WITHOUT_CLASSIFICATION	1.7641380486160932E-6	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999950206895328	WITHOUT_CLASSIFICATION	4.979310467211721E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.999989487879244	WITHOUT_CLASSIFICATION	1.0512120755973975E-5	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999974152958433	WITHOUT_CLASSIFICATION	2.5847041567614537E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999989786042546	WITHOUT_CLASSIFICATION	1.0213957453953704E-6	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999995517660469	WITHOUT_CLASSIFICATION	4.4823395309216754E-7	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999919872759764	WITHOUT_CLASSIFICATION	8.012724023583738E-6	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999952916405195	WITHOUT_CLASSIFICATION	4.708359480457335E-6	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9998085232102838	WITHOUT_CLASSIFICATION	1.914767897162522E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999986623792964	WITHOUT_CLASSIFICATION	1.3376207037158764E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999986227073749	WITHOUT_CLASSIFICATION	1.3772926251108717E-5	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999887467839	WITHOUT_CLASSIFICATION	1.1253216116393472E-8	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999936365064483	WITHOUT_CLASSIFICATION	6.363493551700914E-6	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999940923175656	WITHOUT_CLASSIFICATION	5.907682434412078E-6	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999998663273011	WITHOUT_CLASSIFICATION	1.3367269887378812E-7	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999503453045678	WITHOUT_CLASSIFICATION	4.965469543229603E-5	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9990220276291885	WITHOUT_CLASSIFICATION	9.779723708115875E-4	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999992026420056	WITHOUT_CLASSIFICATION	7.973579943496107E-7	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999534237971741	WITHOUT_CLASSIFICATION	4.657620282593185E-5	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999367936582599	WITHOUT_CLASSIFICATION	6.320634174001625E-5	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999995661474408	WITHOUT_CLASSIFICATION	4.3385255923055337E-7	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999954320369617	WITHOUT_CLASSIFICATION	4.5679630382245155E-6	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9999931517947983	WITHOUT_CLASSIFICATION	6.848205201682555E-6	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999882192459398	WITHOUT_CLASSIFICATION	1.1780754060144689E-5	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999064086565689	WITHOUT_CLASSIFICATION	9.359134343117946E-5	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9992751590833652	WITHOUT_CLASSIFICATION	7.248409166347734E-4	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999933109238771	WITHOUT_CLASSIFICATION	6.689076122792813E-6	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999975126429269	WITHOUT_CLASSIFICATION	2.4873570731183717E-6	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999985264732099	WITHOUT_CLASSIFICATION	1.47352679008105E-6	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999991750974789	WITHOUT_CLASSIFICATION	8.249025209909179E-7	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999984133083702	WITHOUT_CLASSIFICATION	1.5866916297555515E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999984133083702	WITHOUT_CLASSIFICATION	1.5866916297555515E-6	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999925018558162	WITHOUT_CLASSIFICATION	7.4981441837346394E-6	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998131918093024	WITHOUT_CLASSIFICATION	1.8680819069756172E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999287649463	WITHOUT_CLASSIFICATION	7.123505376247546E-8	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999990783106739	WITHOUT_CLASSIFICATION	9.216893259521984E-7	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999990783106739	WITHOUT_CLASSIFICATION	9.216893259521984E-7	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999936365064483	WITHOUT_CLASSIFICATION	6.363493551700914E-6	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999973159459438	WITHOUT_CLASSIFICATION	2.6840540561712434E-6	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999997061616069	WITHOUT_CLASSIFICATION	2.938383929956781E-7	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999383041632	WITHOUT_CLASSIFICATION	6.169583673184938E-8	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999998990744032	WITHOUT_CLASSIFICATION	1.0092559671293554E-7	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999998783573452	WITHOUT_CLASSIFICATION	1.2164265474792754E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9998471069896704	WITHOUT_CLASSIFICATION	1.5289301032966237E-4	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999990225426351	WITHOUT_CLASSIFICATION	9.774573649790908E-7	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999830411002603	WITHOUT_CLASSIFICATION	1.6958899739694356E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999990411303361	WITHOUT_CLASSIFICATION	9.588696639601104E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999598995175252	WITHOUT_CLASSIFICATION	4.010048247484125E-5	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999432236465047	WITHOUT_CLASSIFICATION	5.677635349528387E-5	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999803200205587	WITHOUT_CLASSIFICATION	1.9679979441256712E-5	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999793020204483	WITHOUT_CLASSIFICATION	2.0697979551753494E-5	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999989394550515	WITHOUT_CLASSIFICATION	1.0605449485498138E-6	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.999950731513067	WITHOUT_CLASSIFICATION	4.926848693305649E-5	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999987252504314	WITHOUT_CLASSIFICATION	1.2747495685717249E-6	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999996793905971	WITHOUT_CLASSIFICATION	3.206094029250433E-7	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.999996602742074	WITHOUT_CLASSIFICATION	3.3972579260010386E-6	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999214584154	WITHOUT_CLASSIFICATION	7.854158459477075E-8	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999998340081524	WITHOUT_CLASSIFICATION	1.6599184765134935E-7	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999828071320382	WITHOUT_CLASSIFICATION	1.7192867961803014E-5	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9737704853574356	WITHOUT_CLASSIFICATION	0.026229514642564445	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.999997341910232	WITHOUT_CLASSIFICATION	2.6580897679328038E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999262655749	WITHOUT_CLASSIFICATION	7.373442519678436E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999992050588732	WITHOUT_CLASSIFICATION	7.949411269062205E-7	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999924182530884	WITHOUT_CLASSIFICATION	7.58174691168672E-6	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999953099903144	WITHOUT_CLASSIFICATION	4.690009685569734E-6	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999955527568	WITHOUT_CLASSIFICATION	4.447243218301663E-9	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999994230607977	WITHOUT_CLASSIFICATION	5.769392022108396E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999477966066	WITHOUT_CLASSIFICATION	5.220339351792584E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999477966066	WITHOUT_CLASSIFICATION	5.220339351792584E-8	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9995536908152857	WITHOUT_CLASSIFICATION	4.463091847143913E-4	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999980150677426	WITHOUT_CLASSIFICATION	1.9849322574084993E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999980150677426	WITHOUT_CLASSIFICATION	1.9849322574084993E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999976917386815	WITHOUT_CLASSIFICATION	2.308261318579643E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999976917386815	WITHOUT_CLASSIFICATION	2.308261318579643E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.999996562746386	WITHOUT_CLASSIFICATION	3.4372536138661304E-6	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999994475118552	WITHOUT_CLASSIFICATION	5.524881447699416E-7	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999907023878601	WITHOUT_CLASSIFICATION	9.297612139833529E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.999993018473713	WITHOUT_CLASSIFICATION	6.98152628699729E-6	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999723311332772	WITHOUT_CLASSIFICATION	2.7668866722868816E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999985077212251	WITHOUT_CLASSIFICATION	1.4922787748498705E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999985077212251	WITHOUT_CLASSIFICATION	1.4922787748498705E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999262655749	WITHOUT_CLASSIFICATION	7.373442519678436E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999262655749	WITHOUT_CLASSIFICATION	7.373442519678436E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999262655749	WITHOUT_CLASSIFICATION	7.373442519678436E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999992050588732	WITHOUT_CLASSIFICATION	7.949411269062205E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999477966066	WITHOUT_CLASSIFICATION	5.220339351792584E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999477966066	WITHOUT_CLASSIFICATION	5.220339351792584E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999477966066	WITHOUT_CLASSIFICATION	5.220339351792584E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.999996562746386	WITHOUT_CLASSIFICATION	3.4372536138661304E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.999996562746386	WITHOUT_CLASSIFICATION	3.4372536138661304E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.999996562746386	WITHOUT_CLASSIFICATION	3.4372536138661304E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.999993018473713	WITHOUT_CLASSIFICATION	6.98152628699729E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.999993018473713	WITHOUT_CLASSIFICATION	6.98152628699729E-6	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999989878934132	WITHOUT_CLASSIFICATION	1.0121065867197412E-6	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999988232670776	WITHOUT_CLASSIFICATION	1.1767329224394294E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999980882133287	WITHOUT_CLASSIFICATION	1.9117866713223105E-6	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999998915512409	DESIGN	1.0844875915032579E-7	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999682972474706	WITHOUT_CLASSIFICATION	3.170275252933134E-5	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9999566193121283	WITHOUT_CLASSIFICATION	4.3380687871617774E-5	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9999566193121283	WITHOUT_CLASSIFICATION	4.3380687871617774E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999997132409872	WITHOUT_CLASSIFICATION	2.867590128073275E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9998471069896704	WITHOUT_CLASSIFICATION	1.5289301032966237E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9998471069896704	WITHOUT_CLASSIFICATION	1.5289301032966237E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9998471069896704	WITHOUT_CLASSIFICATION	1.5289301032966237E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9998471069896704	WITHOUT_CLASSIFICATION	1.5289301032966237E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9998471069896704	WITHOUT_CLASSIFICATION	1.5289301032966237E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999884740132311	WITHOUT_CLASSIFICATION	1.152598676895902E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999884740132311	WITHOUT_CLASSIFICATION	1.152598676895902E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999884740132311	WITHOUT_CLASSIFICATION	1.152598676895902E-5	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999953594702844	WITHOUT_CLASSIFICATION	4.6405297156519166E-6	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999873423428328	WITHOUT_CLASSIFICATION	1.2657657167273521E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999992050588732	WITHOUT_CLASSIFICATION	7.949411269062205E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.999996562746386	WITHOUT_CLASSIFICATION	3.4372536138661304E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.999996562746386	WITHOUT_CLASSIFICATION	3.4372536138661304E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9998471069896704	WITHOUT_CLASSIFICATION	1.5289301032966237E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9998471069896704	WITHOUT_CLASSIFICATION	1.5289301032966237E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999884740132311	WITHOUT_CLASSIFICATION	1.152598676895902E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999997132409872	WITHOUT_CLASSIFICATION	2.867590128073275E-7	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999649298585	WITHOUT_CLASSIFICATION	3.507014145815596E-8	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999932213742893	WITHOUT_CLASSIFICATION	6.7786257108025104E-6	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9997528645969271	WITHOUT_CLASSIFICATION	2.4713540307294644E-4	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999900996503287	WITHOUT_CLASSIFICATION	9.900349671297292E-6	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999909863004574	WITHOUT_CLASSIFICATION	9.013699542687786E-6	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.999947985881594	WITHOUT_CLASSIFICATION	5.2014118406119274E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999700248630835	WITHOUT_CLASSIFICATION	2.997513691642725E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9861206844672429	WITHOUT_CLASSIFICATION	0.013879315532757201	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999900463322716	WITHOUT_CLASSIFICATION	9.95366772842656E-6	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999234102952214	WITHOUT_CLASSIFICATION	7.658970477857169E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9991591729631264	WITHOUT_CLASSIFICATION	8.408270368737182E-4	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999715139724	WITHOUT_CLASSIFICATION	2.8486027550439507E-8	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999977020839972	WITHOUT_CLASSIFICATION	2.297916002866681E-6	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999995821124567	WITHOUT_CLASSIFICATION	4.1788754332271476E-7	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999993559310513	WITHOUT_CLASSIFICATION	6.440689486096959E-7	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.999997152646215	WITHOUT_CLASSIFICATION	2.847353785011858E-6	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999794215444964	WITHOUT_CLASSIFICATION	2.0578455503609873E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9945811567854175	WITHOUT_CLASSIFICATION	0.0054188432145826386	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9996425271408524	WITHOUT_CLASSIFICATION	3.5747285914747556E-4	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999953527117252	WITHOUT_CLASSIFICATION	4.647288274743327E-6	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999931099402631	WITHOUT_CLASSIFICATION	6.890059736787145E-6	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999907523549382	WITHOUT_CLASSIFICATION	9.247645061790714E-6	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998956022091264	WITHOUT_CLASSIFICATION	1.0439779087347662E-4	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999519881140609	WITHOUT_CLASSIFICATION	4.80118859391584E-5	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9653051494663899	WITHOUT_CLASSIFICATION	0.03469485053361013	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.5212233864923678	WITHOUT_CLASSIFICATION	0.47877661350763234	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9994911984732155	WITHOUT_CLASSIFICATION	5.088015267844978E-4	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999922743227975	WITHOUT_CLASSIFICATION	7.725677202603796E-6	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999778176046688	WITHOUT_CLASSIFICATION	2.2182395331222628E-5	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999995849909457	WITHOUT_CLASSIFICATION	4.1500905428967385E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999820781792705	WITHOUT_CLASSIFICATION	1.7921820729445133E-5	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999400246794947	WITHOUT_CLASSIFICATION	5.9975320505222474E-5	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999550474844	WITHOUT_CLASSIFICATION	4.495251556689673E-8	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999943700594717	WITHOUT_CLASSIFICATION	5.629940528399086E-6	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999649298585	WITHOUT_CLASSIFICATION	3.507014145815596E-8	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999984183371695	WITHOUT_CLASSIFICATION	1.581662830524815E-6	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9975808534259226	WITHOUT_CLASSIFICATION	0.0024191465740774367	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9954939112751893	WITHOUT_CLASSIFICATION	0.004506088724810711	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999948167103817	WITHOUT_CLASSIFICATION	5.183289618273117E-6	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999948167103817	WITHOUT_CLASSIFICATION	5.183289618273117E-6	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999991613016824	WITHOUT_CLASSIFICATION	8.386983175674638E-7	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999991613016824	WITHOUT_CLASSIFICATION	8.386983175674638E-7	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999997297362635	WITHOUT_CLASSIFICATION	2.702637364177907E-7	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9990165291811124	WITHOUT_CLASSIFICATION	9.834708188875606E-4	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999992265617753	WITHOUT_CLASSIFICATION	7.734382247127904E-7	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999994605012427	WITHOUT_CLASSIFICATION	5.394987572188065E-7	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999948081663685	WITHOUT_CLASSIFICATION	5.191833631468883E-6	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.992679565447302	WITHOUT_CLASSIFICATION	0.007320434552697959	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999898899094413	WITHOUT_CLASSIFICATION	1.0110090558769845E-5	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999996825571583	WITHOUT_CLASSIFICATION	3.1744284169145634E-7	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999854869453728	WITHOUT_CLASSIFICATION	1.451305462718375E-5	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9998118299247191	WITHOUT_CLASSIFICATION	1.881700752808487E-4	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999859771550114	WITHOUT_CLASSIFICATION	1.4022844988592893E-5	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999986747939007	WITHOUT_CLASSIFICATION	1.3252060993410445E-6	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999986747939007	WITHOUT_CLASSIFICATION	1.3252060993410445E-6	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999938479832684	WITHOUT_CLASSIFICATION	6.152016731684441E-6	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9998919807707988	WITHOUT_CLASSIFICATION	1.0801922920117139E-4	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999987551866341	WITHOUT_CLASSIFICATION	1.2448133659913826E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999987551866341	WITHOUT_CLASSIFICATION	1.2448133659913826E-6	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999966318520196	WITHOUT_CLASSIFICATION	3.3681479804817017E-6	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999874027206874	WITHOUT_CLASSIFICATION	1.259727931247578E-5	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9855157246153	WITHOUT_CLASSIFICATION	0.014484275384699975	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9997016322813804	WITHOUT_CLASSIFICATION	2.983677186195237E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999531453754592	WITHOUT_CLASSIFICATION	4.685462454071719E-5	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9995568394847656	WITHOUT_CLASSIFICATION	4.431605152342888E-4	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999686682623593	WITHOUT_CLASSIFICATION	3.133173764059703E-5	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999896470416655	WITHOUT_CLASSIFICATION	1.0352958334645549E-5	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9996286380600176	WITHOUT_CLASSIFICATION	3.713619399823987E-4	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.999990371041364	WITHOUT_CLASSIFICATION	9.628958635986839E-6	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999975252618938	WITHOUT_CLASSIFICATION	2.4747381061437412E-6	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9998610903308959	WITHOUT_CLASSIFICATION	1.3890966910409363E-4	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999998129008351	WITHOUT_CLASSIFICATION	1.8709916489428422E-7	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999976616171928	WITHOUT_CLASSIFICATION	2.3383828071269198E-6	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999865852117	WITHOUT_CLASSIFICATION	1.3414788219504116E-8	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999987252841478	WITHOUT_CLASSIFICATION	1.2747158522191284E-6	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999254061817702	WITHOUT_CLASSIFICATION	7.459381822988492E-5	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9998677902914328	WITHOUT_CLASSIFICATION	1.3220970856722943E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999466246471	WITHOUT_CLASSIFICATION	5.337535288440701E-8	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999957895466726	WITHOUT_CLASSIFICATION	4.210453327400792E-6	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.996520121249316	DESIGN	0.0034798787506838767	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999997820770657	WITHOUT_CLASSIFICATION	2.1792293422058775E-7	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999999211920779	WITHOUT_CLASSIFICATION	7.880792211543362E-8	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999964837237713	WITHOUT_CLASSIFICATION	3.5162762287408344E-6	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999754186438615	WITHOUT_CLASSIFICATION	2.4581356138372516E-5	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9993531505760024	WITHOUT_CLASSIFICATION	6.468494239977075E-4	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999961745762628	WITHOUT_CLASSIFICATION	3.825423737186699E-6	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999703639529997	WITHOUT_CLASSIFICATION	2.963604700043831E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9997422973632072	WITHOUT_CLASSIFICATION	2.5770263679281846E-4	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999840416062865	WITHOUT_CLASSIFICATION	1.5958393713411417E-5	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999996612836869	WITHOUT_CLASSIFICATION	3.3871631305741504E-7	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999990007051532	WITHOUT_CLASSIFICATION	9.99294846736875E-7	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.999999844241276	WITHOUT_CLASSIFICATION	1.5575872395770359E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999557936194022	WITHOUT_CLASSIFICATION	4.420638059779596E-5	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999557936194022	WITHOUT_CLASSIFICATION	4.420638059779596E-5	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999999811755478	WITHOUT_CLASSIFICATION	1.8824452204047601E-7	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9990838523672906	WITHOUT_CLASSIFICATION	9.161476327093383E-4	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999829979601	WITHOUT_CLASSIFICATION	1.7002039925633083E-8	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999938297624907	WITHOUT_CLASSIFICATION	6.170237509184179E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999970741819175	WITHOUT_CLASSIFICATION	2.92581808236339E-6	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999677306683632	WITHOUT_CLASSIFICATION	3.226933163683006E-5	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9996907392712112	WITHOUT_CLASSIFICATION	3.092607287887663E-4	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9996155788992471	WITHOUT_CLASSIFICATION	3.844211007528863E-4	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999827552293565	WITHOUT_CLASSIFICATION	1.7244770643417454E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999980650510701	WITHOUT_CLASSIFICATION	1.9349489299031025E-6	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999725268675659	DESIGN	2.7473132434126812E-5	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9590521320070133	WITHOUT_CLASSIFICATION	0.0409478679929866	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9997284363911119	WITHOUT_CLASSIFICATION	2.715636088881009E-4	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999387027522926	WITHOUT_CLASSIFICATION	6.129724770741398E-4	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999989929184772	WITHOUT_CLASSIFICATION	1.0070815228476027E-6	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.999997996558361	WITHOUT_CLASSIFICATION	2.0034416389417154E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999939991006445	WITHOUT_CLASSIFICATION	6.000899355610181E-6	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.992602517023546	WITHOUT_CLASSIFICATION	0.007397482976454063	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9956590721775084	WITHOUT_CLASSIFICATION	0.004340927822491622	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9996238826678117	WITHOUT_CLASSIFICATION	3.7611733218839683E-4	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999926616120762	WITHOUT_CLASSIFICATION	7.338387923777387E-6	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999916719674153	WITHOUT_CLASSIFICATION	8.32803258458238E-6	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9988698325527947	WITHOUT_CLASSIFICATION	0.00113016744720529	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999907551915114	WITHOUT_CLASSIFICATION	9.244808488668801E-6	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9980938952642465	WITHOUT_CLASSIFICATION	0.0019061047357534552	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999524836377981	WITHOUT_CLASSIFICATION	4.7516362201910145E-5	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999334643815	WITHOUT_CLASSIFICATION	6.653561851906981E-8	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999998163407	WITHOUT_CLASSIFICATION	1.836592999281392E-7	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9940410878643708	WITHOUT_CLASSIFICATION	0.0059589121356291306	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999996241601934	WITHOUT_CLASSIFICATION	3.7583980659892185E-7	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999998820973571	WITHOUT_CLASSIFICATION	1.179026428726391E-7	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999590131026056	WITHOUT_CLASSIFICATION	4.0986897394424847E-5	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9994473019147022	WITHOUT_CLASSIFICATION	5.526980852977998E-4	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999950510072027	WITHOUT_CLASSIFICATION	4.948992797397639E-6	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999915013537294	WITHOUT_CLASSIFICATION	8.498646270616762E-6	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9993846106250985	WITHOUT_CLASSIFICATION	6.153893749014362E-4	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9987812522345406	WITHOUT_CLASSIFICATION	0.0012187477654594628	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999955489565158	WITHOUT_CLASSIFICATION	4.451043484282199E-6	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.999987905237185	WITHOUT_CLASSIFICATION	1.20947628150397E-5	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999990234350546	WITHOUT_CLASSIFICATION	9.765649453763296E-7	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999934102322041	WITHOUT_CLASSIFICATION	6.58976779592397E-6	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999728608497627	WITHOUT_CLASSIFICATION	2.713915023744187E-5	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999728608497627	WITHOUT_CLASSIFICATION	2.713915023744187E-5	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9998851860223573	WITHOUT_CLASSIFICATION	1.1481397764279498E-4	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999997097297605	WITHOUT_CLASSIFICATION	2.9027023944831626E-7	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999962950461004	WITHOUT_CLASSIFICATION	3.7049538996919114E-6	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999942062480305	WITHOUT_CLASSIFICATION	5.793751969553639E-6	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999792080546267	WITHOUT_CLASSIFICATION	2.0791945373331608E-5	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999993064729457	WITHOUT_CLASSIFICATION	6.935270543977291E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999932248677899	WITHOUT_CLASSIFICATION	6.775132210056367E-6	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9998712702492513	WITHOUT_CLASSIFICATION	1.2872975074881474E-4	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999763617787881	WITHOUT_CLASSIFICATION	2.3638221211827284E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999608414697478	WITHOUT_CLASSIFICATION	3.915853025212493E-5	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994945301495581	WITHOUT_CLASSIFICATION	5.054698504419308E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999998623380141	WITHOUT_CLASSIFICATION	1.3766198594034705E-7	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9993797923721276	WITHOUT_CLASSIFICATION	6.20207627872495E-4	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9996414308631026	WITHOUT_CLASSIFICATION	3.5856913689736447E-4	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999964290358	WITHOUT_CLASSIFICATION	3.570964089017833E-9	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9954587158277521	DESIGN	0.004541284172247936	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.959200626666401	WITHOUT_CLASSIFICATION	0.040799373333599	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999998013957423	WITHOUT_CLASSIFICATION	1.9860425769561443E-6	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9914344715308268	WITHOUT_CLASSIFICATION	0.008565528469173307	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.999402689924184	DESIGN	5.973100758159952E-4	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999380393261493	WITHOUT_CLASSIFICATION	6.196067385067988E-5	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998133850004782	WITHOUT_CLASSIFICATION	1.866149995218413E-4	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999998097752	WITHOUT_CLASSIFICATION	1.902248281059365E-10	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999801699536588	WITHOUT_CLASSIFICATION	1.9830046341158414E-5	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9988425364172031	WITHOUT_CLASSIFICATION	0.0011574635827969095	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9998558698761665	WITHOUT_CLASSIFICATION	1.4413012383350263E-4	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.999999798835783	WITHOUT_CLASSIFICATION	2.011642169434076E-7	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999632309663586	WITHOUT_CLASSIFICATION	3.6769033641438905E-5	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999926710679	WITHOUT_CLASSIFICATION	7.328932023081585E-9	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999470167228074	WITHOUT_CLASSIFICATION	5.298327719254183E-5	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999964190921	WITHOUT_CLASSIFICATION	3.580907893783258E-9	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999979686499757	WITHOUT_CLASSIFICATION	2.031350024362767E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999470167228074	WITHOUT_CLASSIFICATION	5.298327719254183E-5	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999977910481506	WITHOUT_CLASSIFICATION	2.2089518493384944E-6	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999995163191681	WITHOUT_CLASSIFICATION	4.83680832000755E-7	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999986029557593	WITHOUT_CLASSIFICATION	1.3970442407369808E-6	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9997372075552863	DESIGN	2.627924447138082E-4	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9982324195938707	WITHOUT_CLASSIFICATION	0.0017675804061293959	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9966473808511843	WITHOUT_CLASSIFICATION	0.0033526191488157915	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9996988416771445	WITHOUT_CLASSIFICATION	3.0115832285550507E-4	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9413869776596786	WITHOUT_CLASSIFICATION	0.05861302234032141	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999258418092	WITHOUT_CLASSIFICATION	7.415819087647894E-8	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999957895466726	WITHOUT_CLASSIFICATION	4.210453327400792E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999980882133287	WITHOUT_CLASSIFICATION	1.9117866713223105E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9950955646727928	WITHOUT_CLASSIFICATION	0.004904435327207114	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999997969996813	WITHOUT_CLASSIFICATION	2.0300031873955746E-7	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.999448396603192	WITHOUT_CLASSIFICATION	5.516033968080425E-4	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999875547464745	WITHOUT_CLASSIFICATION	1.2445253525472612E-5	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999941566738202	WITHOUT_CLASSIFICATION	5.843326179761319E-6	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.8966590762624909	DESIGN	0.10334092373750911	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9002448391339561	WITHOUT_CLASSIFICATION	0.09975516086604387	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9983762784285153	WITHOUT_CLASSIFICATION	0.0016237215714846966	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9950175606195876	WITHOUT_CLASSIFICATION	0.00498243938041248	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999981216760858	WITHOUT_CLASSIFICATION	1.8783239142202756E-6	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999524949853619	WITHOUT_CLASSIFICATION	4.750501463814268E-5	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9999906094728188	WITHOUT_CLASSIFICATION	9.390527181228155E-6	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9992232137385941	WITHOUT_CLASSIFICATION	7.767862614059475E-4	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9997691332676494	WITHOUT_CLASSIFICATION	2.3086673235065552E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999959897556838	WITHOUT_CLASSIFICATION	4.010244316244123E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999938448403747	WITHOUT_CLASSIFICATION	6.155159625280743E-6	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.999975942417222	WITHOUT_CLASSIFICATION	2.405758277796235E-5	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999999866500079	WITHOUT_CLASSIFICATION	1.3349992097301456E-7	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9390551251140763	WITHOUT_CLASSIFICATION	0.06094487488592362	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9390551251140763	WITHOUT_CLASSIFICATION	0.06094487488592362	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999986371431691	WITHOUT_CLASSIFICATION	1.3628568308840773E-6	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999998710401101	WITHOUT_CLASSIFICATION	1.2895988981702115E-7	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999892395590613	WITHOUT_CLASSIFICATION	1.0760440938853098E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9997206452069781	DESIGN	2.7935479302180084E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9997206452069781	DESIGN	2.7935479302180084E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9997206452069781	DESIGN	2.7935479302180084E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9997206452069781	DESIGN	2.7935479302180084E-4	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999984387665262	WITHOUT_CLASSIFICATION	1.5612334737211024E-6	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999998365155125	WITHOUT_CLASSIFICATION	1.634844876035005E-7	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.999999653037899	WITHOUT_CLASSIFICATION	3.4696210101155557E-7	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9998790142360666	DESIGN	1.2098576393340209E-4	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999746713126625	WITHOUT_CLASSIFICATION	2.5328687337494702E-5	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999980637049178	WITHOUT_CLASSIFICATION	1.9362950821165498E-6	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998218787357828	WITHOUT_CLASSIFICATION	1.781212642171918E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998218787357828	WITHOUT_CLASSIFICATION	1.781212642171918E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999591055572499	WITHOUT_CLASSIFICATION	4.089444275011746E-5	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999972526243093	WITHOUT_CLASSIFICATION	2.7473756906723695E-6	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9934505214465472	WITHOUT_CLASSIFICATION	0.006549478553452666	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999970092004058	WITHOUT_CLASSIFICATION	2.9907995941945463E-6	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999914730519	WITHOUT_CLASSIFICATION	8.526948188044298E-9	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999994030680142	WITHOUT_CLASSIFICATION	5.969319857906059E-7	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.999999925856982	WITHOUT_CLASSIFICATION	7.41430179670987E-8	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999983063175906	WITHOUT_CLASSIFICATION	1.693682409441873E-6	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998789405020161	WITHOUT_CLASSIFICATION	1.2105949798398592E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998789405020161	WITHOUT_CLASSIFICATION	1.2105949798398592E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999979686499757	WITHOUT_CLASSIFICATION	2.031350024362767E-6	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999935624674557	WITHOUT_CLASSIFICATION	6.4375325442606355E-6	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999932166076293	WITHOUT_CLASSIFICATION	6.783392370738365E-6	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999634629975325	WITHOUT_CLASSIFICATION	3.653700246752149E-5	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999770647471	WITHOUT_CLASSIFICATION	2.293525293139209E-8	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999962063906838	WITHOUT_CLASSIFICATION	3.793609316260162E-6	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999998117938254	WITHOUT_CLASSIFICATION	1.8820617464334017E-7	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999777326003885	WITHOUT_CLASSIFICATION	2.2267399611565987E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999552174414243	WITHOUT_CLASSIFICATION	4.478255857567709E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999552174414243	WITHOUT_CLASSIFICATION	4.478255857567709E-5	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9822072199709077	WITHOUT_CLASSIFICATION	0.017792780029092393	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999934144861397	WITHOUT_CLASSIFICATION	6.5855138603351885E-6	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9749535891840884	WITHOUT_CLASSIFICATION	0.025046410815911666	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999951034584836	WITHOUT_CLASSIFICATION	4.896541516395296E-6	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999991702732511	WITHOUT_CLASSIFICATION	8.29726748800861E-7	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999971606586057	WITHOUT_CLASSIFICATION	2.8393413943753466E-6	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9996541732059239	WITHOUT_CLASSIFICATION	3.458267940762272E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999957488986162	WITHOUT_CLASSIFICATION	4.251101383878743E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999957488986162	WITHOUT_CLASSIFICATION	4.251101383878743E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999957488986162	WITHOUT_CLASSIFICATION	4.251101383878743E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999957488986162	WITHOUT_CLASSIFICATION	4.251101383878743E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999543985062016	WITHOUT_CLASSIFICATION	4.560149379840302E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.999033678589348	WITHOUT_CLASSIFICATION	9.663214106519677E-4	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999751564714638	WITHOUT_CLASSIFICATION	2.4843528536231717E-5	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999910407570948	WITHOUT_CLASSIFICATION	8.959242905289595E-6	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999997482865963	WITHOUT_CLASSIFICATION	2.5171340365461774E-7	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999969774022369	WITHOUT_CLASSIFICATION	3.0225977630307055E-6	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999972487315696	WITHOUT_CLASSIFICATION	2.751268430389689E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998808351576	WITHOUT_CLASSIFICATION	1.1916484239738691E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998808351576	WITHOUT_CLASSIFICATION	1.1916484239738691E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998808351576	WITHOUT_CLASSIFICATION	1.1916484239738691E-7	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999231699471	WITHOUT_CLASSIFICATION	7.683005284716877E-8	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999643142311095	WITHOUT_CLASSIFICATION	3.568576889044832E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999939779001386	WITHOUT_CLASSIFICATION	6.022099861506354E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999939779001386	WITHOUT_CLASSIFICATION	6.022099861506354E-6	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999958337750272	WITHOUT_CLASSIFICATION	4.166224972797961E-6	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999996715591	WITHOUT_CLASSIFICATION	3.284408611191342E-10	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999998209127777	WITHOUT_CLASSIFICATION	1.7908722233725965E-7	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999917319784264	WITHOUT_CLASSIFICATION	8.268021573535567E-6	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999946277439	WITHOUT_CLASSIFICATION	5.372256074571512E-9	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999973413478018	WITHOUT_CLASSIFICATION	2.6586521981309006E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9713989719008889	WITHOUT_CLASSIFICATION	0.028601028099111154	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9713989719008889	WITHOUT_CLASSIFICATION	0.028601028099111154	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999985907351074	WITHOUT_CLASSIFICATION	1.4092648925184023E-6	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9995790095587976	WITHOUT_CLASSIFICATION	4.209904412023193E-4	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999693594980411	WITHOUT_CLASSIFICATION	3.0640501958788084E-5	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999976696902191	WITHOUT_CLASSIFICATION	2.330309780866186E-6	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999823500749522	WITHOUT_CLASSIFICATION	1.7649925047874147E-5	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999997707990345	WITHOUT_CLASSIFICATION	2.292009655682573E-7	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999906205527074	WITHOUT_CLASSIFICATION	9.379447292697899E-6	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999580136955155	WITHOUT_CLASSIFICATION	4.198630448445873E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999973480691527	WITHOUT_CLASSIFICATION	2.6519308471992503E-6	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.999916365775668	WITHOUT_CLASSIFICATION	8.363422433201873E-5	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999955386099566	WITHOUT_CLASSIFICATION	4.46139004333219E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999995734570422	WITHOUT_CLASSIFICATION	4.2654295783616746E-7	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999985596122957	WITHOUT_CLASSIFICATION	1.4403877043772497E-6	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999836231373307	WITHOUT_CLASSIFICATION	1.6376862669260252E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999986746229699	WITHOUT_CLASSIFICATION	1.325377030171615E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9975546401127042	WITHOUT_CLASSIFICATION	0.0024453598872957406	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999105920046995	WITHOUT_CLASSIFICATION	8.94079953005893E-5	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999998761072331	WITHOUT_CLASSIFICATION	1.2389276693516282E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999998931582011	WITHOUT_CLASSIFICATION	1.0684179891491212E-7	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999959343412491	WITHOUT_CLASSIFICATION	4.065658750880005E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999976295565997	WITHOUT_CLASSIFICATION	2.370443400298308E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999995606561087	WITHOUT_CLASSIFICATION	4.3934389130999134E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999744974584025	WITHOUT_CLASSIFICATION	2.5502541597582297E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999744974584025	WITHOUT_CLASSIFICATION	2.5502541597582297E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999744974584025	WITHOUT_CLASSIFICATION	2.5502541597582297E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999744974584025	WITHOUT_CLASSIFICATION	2.5502541597582297E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999744974584025	WITHOUT_CLASSIFICATION	2.5502541597582297E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999744974584025	WITHOUT_CLASSIFICATION	2.5502541597582297E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999744974584025	WITHOUT_CLASSIFICATION	2.5502541597582297E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999744974584025	WITHOUT_CLASSIFICATION	2.5502541597582297E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9997756199708997	WITHOUT_CLASSIFICATION	2.2438002910034048E-4	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999809257807254	WITHOUT_CLASSIFICATION	1.907421927464636E-5	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9997251332326097	WITHOUT_CLASSIFICATION	2.7486676739030475E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9996412789774705	DESIGN	3.587210225295312E-4	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999932248677899	WITHOUT_CLASSIFICATION	6.775132210056367E-6	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999932248677899	WITHOUT_CLASSIFICATION	6.775132210056367E-6	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9990765507096336	WITHOUT_CLASSIFICATION	9.234492903664695E-4	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9961763377408517	WITHOUT_CLASSIFICATION	0.003823662259148357	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999996432250565	WITHOUT_CLASSIFICATION	3.5677494350555857E-7	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999483764456701	WITHOUT_CLASSIFICATION	5.162355432986179E-5	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999989749130607	WITHOUT_CLASSIFICATION	1.0250869393602633E-6	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999990090874656	WITHOUT_CLASSIFICATION	9.90912534411795E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999756875417721	WITHOUT_CLASSIFICATION	2.4312458227888302E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.8679488090897826	DESIGN	0.1320511909102175	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999756483875032	WITHOUT_CLASSIFICATION	2.4351612496763755E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994223119207086	WITHOUT_CLASSIFICATION	5.776880792914181E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994223119207086	WITHOUT_CLASSIFICATION	5.776880792914181E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994223119207086	WITHOUT_CLASSIFICATION	5.776880792914181E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9981628119508248	WITHOUT_CLASSIFICATION	0.0018371880491752086	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999897256146236	WITHOUT_CLASSIFICATION	1.0274385376381364E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999955647567862	WITHOUT_CLASSIFICATION	4.435243213808615E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999305402940372	WITHOUT_CLASSIFICATION	6.94597059628112E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997742341812491	WITHOUT_CLASSIFICATION	2.257658187508974E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999942241798945	WITHOUT_CLASSIFICATION	5.775820105498528E-6	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9998592879697855	WITHOUT_CLASSIFICATION	1.4071203021450194E-4	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.999999954880405	WITHOUT_CLASSIFICATION	4.5119594937992585E-8	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999155967221913	WITHOUT_CLASSIFICATION	8.440327780862209E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999155967221913	WITHOUT_CLASSIFICATION	8.440327780862209E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999990676061817	WITHOUT_CLASSIFICATION	9.323938181713161E-7	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999805704390331	WITHOUT_CLASSIFICATION	1.942956096690405E-5	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999956896265408	WITHOUT_CLASSIFICATION	4.310373459228053E-6	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999993515965027	WITHOUT_CLASSIFICATION	6.484034974409217E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999867507820664	WITHOUT_CLASSIFICATION	1.3249217933489102E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999867507820664	WITHOUT_CLASSIFICATION	1.3249217933489102E-5	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.949735427130354	WITHOUT_CLASSIFICATION	0.05026457286964604	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999823001595	WITHOUT_CLASSIFICATION	1.769984041606693E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999935548275778	WITHOUT_CLASSIFICATION	6.4451724221234795E-6	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999608433877556	WITHOUT_CLASSIFICATION	3.9156612244398485E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999681896291776	WITHOUT_CLASSIFICATION	3.181037082253874E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999988587438707	WITHOUT_CLASSIFICATION	1.1412561293507332E-6	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999988587438707	WITHOUT_CLASSIFICATION	1.1412561293507332E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999949374156462	WITHOUT_CLASSIFICATION	5.062584353805444E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999949374156462	WITHOUT_CLASSIFICATION	5.062584353805444E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999989795043213	WITHOUT_CLASSIFICATION	1.020495678733942E-6	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999812987699399	WITHOUT_CLASSIFICATION	1.870123006014212E-5	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999998211024014	WITHOUT_CLASSIFICATION	1.7889759872874119E-7	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999980206640591	WITHOUT_CLASSIFICATION	1.9793359409834605E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999965800242808	WITHOUT_CLASSIFICATION	3.419975719189406E-6	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999168562087	WITHOUT_CLASSIFICATION	8.314379140118452E-8	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999991679127432	WITHOUT_CLASSIFICATION	8.320872567903697E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999985077212251	WITHOUT_CLASSIFICATION	1.4922787748498705E-6	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9993938990074329	WITHOUT_CLASSIFICATION	6.0610099256711E-4	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999754985516	WITHOUT_CLASSIFICATION	2.4501448436699638E-8	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.5246465532058305	DESIGN	0.4753534467941696	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9955033421856412	WITHOUT_CLASSIFICATION	0.004496657814358797	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999988920802693	WITHOUT_CLASSIFICATION	1.1079197306580186E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999991730023138	WITHOUT_CLASSIFICATION	8.269976861964974E-7	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9997762418454403	WITHOUT_CLASSIFICATION	2.2375815455972093E-4	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999994128637479	WITHOUT_CLASSIFICATION	5.871362520183748E-7	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999374349421546	WITHOUT_CLASSIFICATION	6.256505784540252E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999900881276443	WITHOUT_CLASSIFICATION	9.911872355600097E-6	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999990035280441	WITHOUT_CLASSIFICATION	9.964719558956576E-6	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999844425251926	WITHOUT_CLASSIFICATION	1.555747480746474E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9950955646727928	WITHOUT_CLASSIFICATION	0.004904435327207114	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999538628920055	WITHOUT_CLASSIFICATION	4.613710799452951E-5	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.999946087742911	WITHOUT_CLASSIFICATION	5.3912257088848936E-5	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999977765592962	WITHOUT_CLASSIFICATION	2.223440703821567E-6	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999970825614408	WITHOUT_CLASSIFICATION	2.917438559249472E-6	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9998432539009512	WITHOUT_CLASSIFICATION	1.5674609904876895E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999984805220359	WITHOUT_CLASSIFICATION	1.5194779641629312E-6	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999755882113299	WITHOUT_CLASSIFICATION	2.4411788670140714E-5	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999955028116968	WITHOUT_CLASSIFICATION	4.497188303213995E-6	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999976923593	WITHOUT_CLASSIFICATION	2.307640850590939E-9	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.999953828995084	WITHOUT_CLASSIFICATION	4.617100491603754E-5	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999321086945814	WITHOUT_CLASSIFICATION	6.789130541863657E-5	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9998554955590707	WITHOUT_CLASSIFICATION	1.445044409292201E-4	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999985679724008	WITHOUT_CLASSIFICATION	1.432027599204484E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999988528515577	WITHOUT_CLASSIFICATION	1.1471484422869034E-6	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999927791594158	WITHOUT_CLASSIFICATION	7.220840584253497E-6	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999954948138217	WITHOUT_CLASSIFICATION	4.505186178334197E-6	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9969981879551738	WITHOUT_CLASSIFICATION	0.0030018120448261406	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999228214403657	WITHOUT_CLASSIFICATION	7.717855963430407E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9981345229396171	WITHOUT_CLASSIFICATION	0.0018654770603828508	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.6065761592456616	DESIGN	0.39342384075433856	WITHOUT_CLASSIFICATION
// finally	WITHOUT_CLASSIFICATION	0.9999963105748326	WITHOUT_CLASSIFICATION	3.689425167457433E-6	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999964946293595	WITHOUT_CLASSIFICATION	3.5053706405946224E-6	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999994942811016	WITHOUT_CLASSIFICATION	5.057188984112214E-7	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999998149126096	WITHOUT_CLASSIFICATION	1.8508739044546128E-7	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9987665144748139	WITHOUT_CLASSIFICATION	0.0012334855251860909	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999958633714917	WITHOUT_CLASSIFICATION	4.136628508308736E-6	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9991936661223189	WITHOUT_CLASSIFICATION	8.063338776810151E-4	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999994457038041	WITHOUT_CLASSIFICATION	5.542961959355985E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999845799478385	WITHOUT_CLASSIFICATION	1.5420052161520405E-5	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9952727194747056	WITHOUT_CLASSIFICATION	0.004727280525294339	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999800712917702	WITHOUT_CLASSIFICATION	1.992870822978117E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999800712917702	WITHOUT_CLASSIFICATION	1.992870822978117E-5	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999921347334635	WITHOUT_CLASSIFICATION	7.865266536430405E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999921347334635	WITHOUT_CLASSIFICATION	7.865266536430405E-6	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.5045766406434765	WITHOUT_CLASSIFICATION	0.49542335935652354	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.5045766406434765	WITHOUT_CLASSIFICATION	0.49542335935652354	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999798593544866	WITHOUT_CLASSIFICATION	2.0140645513386576E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999798593544866	WITHOUT_CLASSIFICATION	2.0140645513386576E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999956676049356	WITHOUT_CLASSIFICATION	4.332395064326902E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999956676049356	WITHOUT_CLASSIFICATION	4.332395064326902E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999956676049356	WITHOUT_CLASSIFICATION	4.332395064326902E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999956676049356	WITHOUT_CLASSIFICATION	4.332395064326902E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999956676049356	WITHOUT_CLASSIFICATION	4.332395064326902E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999956676049356	WITHOUT_CLASSIFICATION	4.332395064326902E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999956676049356	WITHOUT_CLASSIFICATION	4.332395064326902E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999956676049356	WITHOUT_CLASSIFICATION	4.332395064326902E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999956676049356	WITHOUT_CLASSIFICATION	4.332395064326902E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999988847758384	WITHOUT_CLASSIFICATION	1.1152241614808341E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999988847758384	WITHOUT_CLASSIFICATION	1.1152241614808341E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999988847758384	WITHOUT_CLASSIFICATION	1.1152241614808341E-6	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999664745529138	WITHOUT_CLASSIFICATION	3.352544708626286E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993956775324	WITHOUT_CLASSIFICATION	6.04322467594994E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993956775324	WITHOUT_CLASSIFICATION	6.04322467594994E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993956775324	WITHOUT_CLASSIFICATION	6.04322467594994E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999719768623531	WITHOUT_CLASSIFICATION	2.8023137646899496E-4	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999719768623531	WITHOUT_CLASSIFICATION	2.8023137646899496E-4	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999719768623531	WITHOUT_CLASSIFICATION	2.8023137646899496E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999938453642775	WITHOUT_CLASSIFICATION	6.154635722624621E-6	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999954977976772	WITHOUT_CLASSIFICATION	4.502202322814576E-6	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999272997665746	WITHOUT_CLASSIFICATION	7.270023342533522E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999348769525038	WITHOUT_CLASSIFICATION	6.512304749621134E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999348769525038	WITHOUT_CLASSIFICATION	6.512304749621134E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999348769525038	WITHOUT_CLASSIFICATION	6.512304749621134E-5	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999618339842953	WITHOUT_CLASSIFICATION	3.816601570459399E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999869756813837	WITHOUT_CLASSIFICATION	1.3024318616311153E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999869756813837	WITHOUT_CLASSIFICATION	1.3024318616311153E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999674674236733	WITHOUT_CLASSIFICATION	3.2532576326723297E-5	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999968581877534	WITHOUT_CLASSIFICATION	3.141812246638241E-6	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999968581877534	WITHOUT_CLASSIFICATION	3.141812246638241E-6	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.999891926397285	DESIGN	1.0807360271491039E-4	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999984425937737	WITHOUT_CLASSIFICATION	1.5574062262511839E-6	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9987505085618297	WITHOUT_CLASSIFICATION	0.0012494914381703723	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999910077471067	WITHOUT_CLASSIFICATION	8.992252893261994E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999910077471067	WITHOUT_CLASSIFICATION	8.992252893261994E-6	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.968240625659012	WITHOUT_CLASSIFICATION	0.03175937434098798	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.994519255914582	WITHOUT_CLASSIFICATION	0.005480744085418056	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9998875577048205	WITHOUT_CLASSIFICATION	1.1244229517941641E-4	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.989894067243283	WITHOUT_CLASSIFICATION	0.010105932756717078	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.999995434073387	WITHOUT_CLASSIFICATION	4.565926612996435E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999910077471067	WITHOUT_CLASSIFICATION	8.992252893261994E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999910077471067	WITHOUT_CLASSIFICATION	8.992252893261994E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999910077471067	WITHOUT_CLASSIFICATION	8.992252893261994E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999910077471067	WITHOUT_CLASSIFICATION	8.992252893261994E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999910077471067	WITHOUT_CLASSIFICATION	8.992252893261994E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999936605440346	WITHOUT_CLASSIFICATION	6.339455965487175E-6	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999864327195472	WITHOUT_CLASSIFICATION	1.3567280452750537E-5	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.999888890630434	WITHOUT_CLASSIFICATION	1.1110936956597038E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999999815195358	WITHOUT_CLASSIFICATION	1.848046419504424E-7	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999953209628	WITHOUT_CLASSIFICATION	4.67903713845063E-9	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997895155125361	WITHOUT_CLASSIFICATION	2.1048448746378406E-4	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9998928109364832	WITHOUT_CLASSIFICATION	1.0718906351679532E-4	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999166036635437	WITHOUT_CLASSIFICATION	8.339633645627724E-5	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999967943062832	WITHOUT_CLASSIFICATION	3.2056937167851552E-6	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999997341631556	WITHOUT_CLASSIFICATION	2.6583684447473776E-7	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999819259793964	WITHOUT_CLASSIFICATION	1.8074020603645096E-5	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998133850004782	WITHOUT_CLASSIFICATION	1.866149995218413E-4	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9996532648896331	WITHOUT_CLASSIFICATION	3.46735110366916E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999991442095644	WITHOUT_CLASSIFICATION	8.557904355423832E-7	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9986573445577134	WITHOUT_CLASSIFICATION	0.0013426554422865922	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999772750879407	WITHOUT_CLASSIFICATION	2.2724912059346492E-5	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999960558969748	WITHOUT_CLASSIFICATION	3.9441030251576366E-6	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9998796266398712	WITHOUT_CLASSIFICATION	1.203733601288505E-4	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999677338366647	WITHOUT_CLASSIFICATION	3.2266163335359106E-5	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999996514099174	WITHOUT_CLASSIFICATION	3.48590082585938E-7	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9968027104144654	WITHOUT_CLASSIFICATION	0.0031972895855344637	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999905548681809	WITHOUT_CLASSIFICATION	9.44513181907193E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999608414697478	WITHOUT_CLASSIFICATION	3.915853025212493E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999997233520208	WITHOUT_CLASSIFICATION	2.7664797919218604E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999997233520208	WITHOUT_CLASSIFICATION	2.7664797919218604E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999997233520208	WITHOUT_CLASSIFICATION	2.7664797919218604E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999997233520208	WITHOUT_CLASSIFICATION	2.7664797919218604E-6	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999997971874576	WITHOUT_CLASSIFICATION	2.0281254234722266E-7	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999811506668433	WITHOUT_CLASSIFICATION	1.8849333156747648E-5	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999995314319653	WITHOUT_CLASSIFICATION	4.685680347519014E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999995314319653	WITHOUT_CLASSIFICATION	4.685680347519014E-7	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999994669760804	WITHOUT_CLASSIFICATION	5.330239195736387E-7	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999537132234064	WITHOUT_CLASSIFICATION	4.6286776593558764E-5	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999988029320483	WITHOUT_CLASSIFICATION	1.1970679515553648E-6	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997722942937892	WITHOUT_CLASSIFICATION	2.2770570621077844E-4	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9997305666587276	WITHOUT_CLASSIFICATION	2.6943334127245834E-4	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999987703280587	WITHOUT_CLASSIFICATION	1.229671941210013E-6	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999994977075295	WITHOUT_CLASSIFICATION	5.022924705924444E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.999869373308904	WITHOUT_CLASSIFICATION	1.3062669109601435E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.999869373308904	WITHOUT_CLASSIFICATION	1.3062669109601435E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.999869373308904	WITHOUT_CLASSIFICATION	1.3062669109601435E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.999869373308904	WITHOUT_CLASSIFICATION	1.3062669109601435E-4	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999765977119875	WITHOUT_CLASSIFICATION	2.340228801238652E-5	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9974316882797364	WITHOUT_CLASSIFICATION	0.0025683117202636133	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9974316882797364	WITHOUT_CLASSIFICATION	0.0025683117202636133	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9974316882797364	WITHOUT_CLASSIFICATION	0.0025683117202636133	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999433319533221	WITHOUT_CLASSIFICATION	5.666804667790735E-4	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999816338426571	WITHOUT_CLASSIFICATION	1.836615734277812E-5	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9998811057971085	WITHOUT_CLASSIFICATION	1.1889420289142331E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9997206452069781	DESIGN	2.7935479302180084E-4	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9997206452069781	DESIGN	2.7935479302180084E-4	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999570816089982	WITHOUT_CLASSIFICATION	4.291839100177635E-5	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9474738862825635	DESIGN	0.052526113717436526	WITHOUT_CLASSIFICATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999854120324244	WITHOUT_CLASSIFICATION	1.4587967575586541E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999854120324244	WITHOUT_CLASSIFICATION	1.4587967575586541E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9995124492547562	WITHOUT_CLASSIFICATION	4.875507452437237E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9995124492547562	WITHOUT_CLASSIFICATION	4.875507452437237E-4	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999164708983	WITHOUT_CLASSIFICATION	8.352910180786159E-8	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999199445378338	WITHOUT_CLASSIFICATION	8.005546216618956E-5	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999961868621545	WITHOUT_CLASSIFICATION	3.81313784559687E-6	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999992282214056	WITHOUT_CLASSIFICATION	7.717785944023558E-6	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999965451305631	WITHOUT_CLASSIFICATION	3.454869436915995E-5	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999935214762704	WITHOUT_CLASSIFICATION	6.478523729642976E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999988849167607	WITHOUT_CLASSIFICATION	1.1150832392971142E-6	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.8085094476030377	WITHOUT_CLASSIFICATION	0.19149055239696233	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.999609686026256	WITHOUT_CLASSIFICATION	3.9031397374403163E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999942768073866	WITHOUT_CLASSIFICATION	5.7231926134191906E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999942768073866	WITHOUT_CLASSIFICATION	5.7231926134191906E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999922220671078	WITHOUT_CLASSIFICATION	7.777932892154894E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999922220671078	WITHOUT_CLASSIFICATION	7.777932892154894E-6	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9997664327696203	WITHOUT_CLASSIFICATION	2.3356723037962616E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999931004652768	WITHOUT_CLASSIFICATION	6.899534723238987E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999682158494934	WITHOUT_CLASSIFICATION	3.1784150506669545E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999907968954604	WITHOUT_CLASSIFICATION	9.203104539519773E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999907968954604	WITHOUT_CLASSIFICATION	9.203104539519773E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999907968954604	WITHOUT_CLASSIFICATION	9.203104539519773E-6	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999972065582292	WITHOUT_CLASSIFICATION	2.7934417708103174E-6	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999925819705862	WITHOUT_CLASSIFICATION	7.418029413743641E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999954572669789	WITHOUT_CLASSIFICATION	4.54273302108112E-6	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999962781265488	WITHOUT_CLASSIFICATION	3.7218734511661847E-6	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999930624035261	WITHOUT_CLASSIFICATION	6.937596473842728E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999938791529726	WITHOUT_CLASSIFICATION	6.1208470275325766E-6	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999952353775758	WITHOUT_CLASSIFICATION	4.764622424200532E-6	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999928316373708	WITHOUT_CLASSIFICATION	7.168362629163155E-6	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999403671074045	WITHOUT_CLASSIFICATION	5.963289259538762E-5	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999464734505207	WITHOUT_CLASSIFICATION	5.352654947929619E-4	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.7699721503513375	WITHOUT_CLASSIFICATION	0.23002784964866257	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999982004364085	WITHOUT_CLASSIFICATION	1.7995635914839155E-6	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999998835328249	WITHOUT_CLASSIFICATION	1.1646717512269048E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9997206452069781	DESIGN	2.7935479302180084E-4	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.8172794892193838	WITHOUT_CLASSIFICATION	0.18272051078061619	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998978682457745	WITHOUT_CLASSIFICATION	1.0213175422541337E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9390551251140763	WITHOUT_CLASSIFICATION	0.06094487488592362	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999530228218197	WITHOUT_CLASSIFICATION	4.6977178180292035E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999530228218197	WITHOUT_CLASSIFICATION	4.6977178180292035E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999530228218197	WITHOUT_CLASSIFICATION	4.6977178180292035E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999530228218197	WITHOUT_CLASSIFICATION	4.6977178180292035E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999530228218197	WITHOUT_CLASSIFICATION	4.6977178180292035E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999313009824119	WITHOUT_CLASSIFICATION	6.869901758819365E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999530228218197	WITHOUT_CLASSIFICATION	4.6977178180292035E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999530228218197	WITHOUT_CLASSIFICATION	4.6977178180292035E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999530228218197	WITHOUT_CLASSIFICATION	4.6977178180292035E-5	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999992362975738	WITHOUT_CLASSIFICATION	7.637024260561461E-7	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9988801767670473	WITHOUT_CLASSIFICATION	0.0011198232329526598	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999998414088389	WITHOUT_CLASSIFICATION	1.5859116103846786E-7	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9469592896640139	WITHOUT_CLASSIFICATION	0.05304071033598616	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999686589542385	WITHOUT_CLASSIFICATION	3.134104576152434E-5	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9979909443595957	WITHOUT_CLASSIFICATION	0.0020090556404042917	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9998108844733465	WITHOUT_CLASSIFICATION	1.8911552665350006E-4	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999954671724366	WITHOUT_CLASSIFICATION	4.5328275634269454E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999969340660251	WITHOUT_CLASSIFICATION	3.065933974916308E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999969340660251	WITHOUT_CLASSIFICATION	3.065933974916308E-6	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999959096619557	WITHOUT_CLASSIFICATION	4.090338044210476E-6	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999939218530528	WITHOUT_CLASSIFICATION	6.078146947291225E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999957393571097	WITHOUT_CLASSIFICATION	4.260642890217571E-6	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.999996528575356	WITHOUT_CLASSIFICATION	3.4714246438342873E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.99999686466422	WITHOUT_CLASSIFICATION	3.13533577993849E-6	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999943982788397	WITHOUT_CLASSIFICATION	5.601721160277207E-6	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999930804366703	WITHOUT_CLASSIFICATION	6.919563329623775E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999951825884885	WITHOUT_CLASSIFICATION	4.817411511555093E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999942796499008	WITHOUT_CLASSIFICATION	5.720350099243321E-6	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.999997267540203	WITHOUT_CLASSIFICATION	2.7324597970316137E-6	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999980345360798	WITHOUT_CLASSIFICATION	1.9654639201760745E-6	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999971013766669	WITHOUT_CLASSIFICATION	2.8986233331770675E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999955361764198	WITHOUT_CLASSIFICATION	4.463823580217338E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999952140213493	WITHOUT_CLASSIFICATION	4.7859786506673415E-6	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999952366094699	WITHOUT_CLASSIFICATION	4.763390530095674E-6	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999940572454942	WITHOUT_CLASSIFICATION	5.9427545058318055E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999935292027292	WITHOUT_CLASSIFICATION	6.470797270813615E-6	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999962317439817	WITHOUT_CLASSIFICATION	3.768256018209062E-6	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.999996184623341	WITHOUT_CLASSIFICATION	3.815376659095797E-6	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999958541608898	WITHOUT_CLASSIFICATION	4.145839110204839E-6	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999966421282342	WITHOUT_CLASSIFICATION	3.357871765793103E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999963344769941	WITHOUT_CLASSIFICATION	3.665523005866881E-6	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999961054819252	WITHOUT_CLASSIFICATION	3.894518074795012E-6	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999975964864826	WITHOUT_CLASSIFICATION	2.403513517404056E-6	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999980167258092	WITHOUT_CLASSIFICATION	1.983274190842528E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999981644181004	WITHOUT_CLASSIFICATION	1.8355818995667901E-6	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999970427275625	WITHOUT_CLASSIFICATION	2.957272437469603E-6	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999978650490116	WITHOUT_CLASSIFICATION	2.134950988520273E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.999997530407304	WITHOUT_CLASSIFICATION	2.469592695986497E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999975454259629	WITHOUT_CLASSIFICATION	2.454574037218413E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999979526818684	WITHOUT_CLASSIFICATION	2.0473181316571376E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999968471303178	WITHOUT_CLASSIFICATION	3.1528696822620176E-6	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999966013725735	WITHOUT_CLASSIFICATION	3.3986274265684613E-6	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999964357566654	WITHOUT_CLASSIFICATION	3.5642433346065946E-6	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999984354410542	WITHOUT_CLASSIFICATION	1.5645589458799991E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999987396764445	WITHOUT_CLASSIFICATION	1.260323555471157E-6	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999977644987069	WITHOUT_CLASSIFICATION	2.235501293016276E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999976113726173	WITHOUT_CLASSIFICATION	2.3886273827152904E-6	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999982766941853	WITHOUT_CLASSIFICATION	1.7233058147340479E-6	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999977556430653	WITHOUT_CLASSIFICATION	2.2443569346675707E-6	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999978503016356	WITHOUT_CLASSIFICATION	2.1496983644551527E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999989108902902	WITHOUT_CLASSIFICATION	1.0891097096466659E-6	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.999997855956155	WITHOUT_CLASSIFICATION	2.144043844978403E-6	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999965302046038	WITHOUT_CLASSIFICATION	3.469795396131394E-6	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999972208679634	WITHOUT_CLASSIFICATION	2.7791320365684184E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.999997184222804	WITHOUT_CLASSIFICATION	2.815777195893278E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.999995298414285	WITHOUT_CLASSIFICATION	4.701585714916687E-6	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.999996825019119	WITHOUT_CLASSIFICATION	3.1749808810322585E-6	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999976745478167	WITHOUT_CLASSIFICATION	2.3254521832888733E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999965415351458	WITHOUT_CLASSIFICATION	3.458464854114696E-6	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999975680827885	WITHOUT_CLASSIFICATION	2.43191721149495E-6	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999974268494658	WITHOUT_CLASSIFICATION	2.573150534239535E-6	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999980122686478	WITHOUT_CLASSIFICATION	1.9877313522016216E-6	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999972844020407	WITHOUT_CLASSIFICATION	2.715597959322004E-6	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999972844020407	WITHOUT_CLASSIFICATION	2.715597959322004E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999962195585543	WITHOUT_CLASSIFICATION	3.7804414456516306E-6	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999987685121681	WITHOUT_CLASSIFICATION	1.2314878319069412E-6	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999966901307649	WITHOUT_CLASSIFICATION	3.309869235045348E-6	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999975090274192	WITHOUT_CLASSIFICATION	2.4909725807907307E-6	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999970433761028	WITHOUT_CLASSIFICATION	2.9566238970920843E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999977980002458	WITHOUT_CLASSIFICATION	2.2019997541959827E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.999995685778018	WITHOUT_CLASSIFICATION	4.314221981914062E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999962601061781	WITHOUT_CLASSIFICATION	3.7398938217568793E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999976490087941	WITHOUT_CLASSIFICATION	2.350991205900618E-6	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999968188864266	WITHOUT_CLASSIFICATION	3.18111357351993E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999959177701868	WITHOUT_CLASSIFICATION	4.082229813114702E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999959177701868	WITHOUT_CLASSIFICATION	4.082229813114702E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999980899117031	WITHOUT_CLASSIFICATION	1.910088296757009E-6	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999975402596986	WITHOUT_CLASSIFICATION	2.459740301360484E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999930484721046	WITHOUT_CLASSIFICATION	6.95152789535554E-6	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999995397488953	WITHOUT_CLASSIFICATION	4.602511045690145E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999983071777032	WITHOUT_CLASSIFICATION	1.6928222967925635E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999983071777032	WITHOUT_CLASSIFICATION	1.6928222967925635E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999983071777032	WITHOUT_CLASSIFICATION	1.6928222967925635E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999983071777032	WITHOUT_CLASSIFICATION	1.6928222967925635E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9863296797979466	DESIGN	0.013670320202053483	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9957355107588677	WITHOUT_CLASSIFICATION	0.004264489241132243	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9999965891954549	WITHOUT_CLASSIFICATION	3.4108045450999434E-6	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999947183552156	WITHOUT_CLASSIFICATION	5.281644784410422E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999966856900714	WITHOUT_CLASSIFICATION	3.3143099285991727E-6	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999961613304816	WITHOUT_CLASSIFICATION	3.838669518388395E-6	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999958880665292	WITHOUT_CLASSIFICATION	4.111933470752204E-6	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999962562051151	WITHOUT_CLASSIFICATION	3.7437948849807724E-6	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999958814160376	WITHOUT_CLASSIFICATION	4.1185839623880824E-6	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999952761381153	WITHOUT_CLASSIFICATION	4.723861884597503E-6	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.999992591108501	WITHOUT_CLASSIFICATION	7.408891499072606E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999960317313147	WITHOUT_CLASSIFICATION	3.968268685374501E-6	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.999995976385856	WITHOUT_CLASSIFICATION	4.023614143975234E-6	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999938390110726	WITHOUT_CLASSIFICATION	6.1609889272685875E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999934799387602	WITHOUT_CLASSIFICATION	6.5200612398453196E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999959244378404	WITHOUT_CLASSIFICATION	4.075562159614026E-6	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999929638352446	WITHOUT_CLASSIFICATION	7.036164755417448E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999969696996543	WITHOUT_CLASSIFICATION	3.0303003457070806E-6	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999969566456889	WITHOUT_CLASSIFICATION	3.043354311174617E-6	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999951124293518	WITHOUT_CLASSIFICATION	4.8875706481402685E-6	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999971514517582	WITHOUT_CLASSIFICATION	2.8485482418364682E-6	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999947055469314	WITHOUT_CLASSIFICATION	5.294453068663095E-6	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999958833384369	WITHOUT_CLASSIFICATION	4.116661563171786E-6	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999946806968647	WITHOUT_CLASSIFICATION	5.319303135318192E-6	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.99999619458401	WITHOUT_CLASSIFICATION	3.805415989910033E-6	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999977332483887	WITHOUT_CLASSIFICATION	2.266751611352973E-6	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999985024596891	WITHOUT_CLASSIFICATION	1.497540310841719E-6	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999979521954544	WITHOUT_CLASSIFICATION	2.0478045456725374E-6	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999980057491409	WITHOUT_CLASSIFICATION	1.994250859011101E-6	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999964758584821	WITHOUT_CLASSIFICATION	3.5241415180217047E-6	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999972178963455	WITHOUT_CLASSIFICATION	2.7821036544725444E-6	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999978533032854	WITHOUT_CLASSIFICATION	2.1466967145317536E-6	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999977939980065	WITHOUT_CLASSIFICATION	2.206001993460381E-6	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999976779595593	WITHOUT_CLASSIFICATION	2.3220404407126555E-6	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999977290818802	WITHOUT_CLASSIFICATION	2.2709181197995334E-6	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999977122558408	WITHOUT_CLASSIFICATION	2.287744159242714E-6	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999971156655436	WITHOUT_CLASSIFICATION	2.884334456332407E-6	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999966712314935	WITHOUT_CLASSIFICATION	3.3287685066292465E-6	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999980799235324	WITHOUT_CLASSIFICATION	1.92007646758668E-6	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999965053662202	WITHOUT_CLASSIFICATION	3.494633779662458E-6	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999987813955497	WITHOUT_CLASSIFICATION	1.2186044502406557E-6	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999968227147418	WITHOUT_CLASSIFICATION	3.177285258327073E-6	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.999995832399443	WITHOUT_CLASSIFICATION	4.167600557006838E-6	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999968269154481	WITHOUT_CLASSIFICATION	3.1730845519381056E-6	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999968837222489	WITHOUT_CLASSIFICATION	3.1162777510307405E-6	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999972937382402	WITHOUT_CLASSIFICATION	2.7062617598009833E-6	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999971298928941	WITHOUT_CLASSIFICATION	2.870107105826398E-6	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999961406976401	WITHOUT_CLASSIFICATION	3.859302359876291E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999981570991384	WITHOUT_CLASSIFICATION	1.8429008615588217E-6	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999964311855886	WITHOUT_CLASSIFICATION	3.5688144113672035E-6	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999959971182488	WITHOUT_CLASSIFICATION	4.002881751180774E-6	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999962845495496	WITHOUT_CLASSIFICATION	3.7154504502964534E-6	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999983608843159	WITHOUT_CLASSIFICATION	1.639115684002644E-6	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999978506221249	WITHOUT_CLASSIFICATION	2.1493778751407926E-6	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999971413033663	WITHOUT_CLASSIFICATION	2.8586966337721296E-6	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999975877534198	WITHOUT_CLASSIFICATION	2.4122465802067285E-6	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999978312517065	WITHOUT_CLASSIFICATION	2.168748293516196E-6	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999977155311871	WITHOUT_CLASSIFICATION	2.2844688129264184E-6	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999987742047335	WITHOUT_CLASSIFICATION	1.2257952664542428E-6	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9832180302417709	WITHOUT_CLASSIFICATION	0.016781969758229067	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999870092363669	WITHOUT_CLASSIFICATION	1.2990763633155598E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998897425951181	WITHOUT_CLASSIFICATION	1.1025740488191182E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998897425951181	WITHOUT_CLASSIFICATION	1.1025740488191182E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998897425951181	WITHOUT_CLASSIFICATION	1.1025740488191182E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998897425951181	WITHOUT_CLASSIFICATION	1.1025740488191182E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998897425951181	WITHOUT_CLASSIFICATION	1.1025740488191182E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998897425951181	WITHOUT_CLASSIFICATION	1.1025740488191182E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998897425951181	WITHOUT_CLASSIFICATION	1.1025740488191182E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999989045937506	WITHOUT_CLASSIFICATION	1.0954062493474127E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999989045937506	WITHOUT_CLASSIFICATION	1.0954062493474127E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999989045937506	WITHOUT_CLASSIFICATION	1.0954062493474127E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999989045937506	WITHOUT_CLASSIFICATION	1.0954062493474127E-6	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9986921444318992	WITHOUT_CLASSIFICATION	0.0013078555681007246	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9986921444318992	WITHOUT_CLASSIFICATION	0.0013078555681007246	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999998802027706	WITHOUT_CLASSIFICATION	1.1979722934888494E-7	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999695106467	WITHOUT_CLASSIFICATION	3.048935328937351E-7	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999695106467	WITHOUT_CLASSIFICATION	3.048935328937351E-7	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999685259946107	WITHOUT_CLASSIFICATION	3.14740053892082E-5	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999348366988573	WITHOUT_CLASSIFICATION	6.516330114261063E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960739906537	WITHOUT_CLASSIFICATION	3.926009346266015E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960739906537	WITHOUT_CLASSIFICATION	3.926009346266015E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960739906537	WITHOUT_CLASSIFICATION	3.926009346266015E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960739906537	WITHOUT_CLASSIFICATION	3.926009346266015E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960739906537	WITHOUT_CLASSIFICATION	3.926009346266015E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960739906537	WITHOUT_CLASSIFICATION	3.926009346266015E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999960739906537	WITHOUT_CLASSIFICATION	3.926009346266015E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978943096042	WITHOUT_CLASSIFICATION	2.1056903957841357E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999970765692475	WITHOUT_CLASSIFICATION	2.9234307524461763E-6	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999997319606965	WITHOUT_CLASSIFICATION	2.68039303528635E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999997319606965	WITHOUT_CLASSIFICATION	2.68039303528635E-7	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999844040795619	WITHOUT_CLASSIFICATION	1.559592043808758E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.99986542333469	WITHOUT_CLASSIFICATION	1.345766653100195E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.99986542333469	WITHOUT_CLASSIFICATION	1.345766653100195E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.999999976880721	WITHOUT_CLASSIFICATION	2.3119279050666496E-8	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999454880043	DESIGN	5.4511995715718866E-8	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9962162039758309	WITHOUT_CLASSIFICATION	0.003783796024168992	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999854002532615	WITHOUT_CLASSIFICATION	1.4599746738443533E-5	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9996832583966198	WITHOUT_CLASSIFICATION	3.1674160338017844E-4	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999567113990381	WITHOUT_CLASSIFICATION	4.3288600961960394E-5	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999790872992825	WITHOUT_CLASSIFICATION	2.0912700717477002E-5	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999214799445	WITHOUT_CLASSIFICATION	7.85200554371725E-8	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9993449109892847	WITHOUT_CLASSIFICATION	6.550890107152934E-4	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999956140487055	WITHOUT_CLASSIFICATION	4.385951294507479E-6	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9550095586139924	WITHOUT_CLASSIFICATION	0.04499044138600757	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9976006645232026	WITHOUT_CLASSIFICATION	0.002399335476797362	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999995281700704	WITHOUT_CLASSIFICATION	4.7182992955654773E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9995698108203861	WITHOUT_CLASSIFICATION	4.301891796139078E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999998161647807	WITHOUT_CLASSIFICATION	1.8383521920042566E-7	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999989809889076	WITHOUT_CLASSIFICATION	1.0190110923077875E-6	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999905443498733	WITHOUT_CLASSIFICATION	9.455650126751132E-6	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999652497476395	WITHOUT_CLASSIFICATION	3.475025236057134E-5	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9998085232102838	WITHOUT_CLASSIFICATION	1.914767897162522E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9998085232102838	WITHOUT_CLASSIFICATION	1.914767897162522E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999773563901349	WITHOUT_CLASSIFICATION	2.2643609865113078E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999477966066	WITHOUT_CLASSIFICATION	5.220339351792584E-8	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999170123064	WITHOUT_CLASSIFICATION	8.298769364715321E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9998471069896704	WITHOUT_CLASSIFICATION	1.5289301032966237E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999700248630835	WITHOUT_CLASSIFICATION	2.997513691642725E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999700248630835	WITHOUT_CLASSIFICATION	2.997513691642725E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999700248630835	WITHOUT_CLASSIFICATION	2.997513691642725E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9991591729631264	WITHOUT_CLASSIFICATION	8.408270368737182E-4	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999931099402631	WITHOUT_CLASSIFICATION	6.890059736787145E-6	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9998029697468692	WITHOUT_CLASSIFICATION	1.9703025313069075E-4	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.999857424928934	WITHOUT_CLASSIFICATION	1.4257507106606645E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9929355406009834	WITHOUT_CLASSIFICATION	0.007064459399016558	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999967279351063	WITHOUT_CLASSIFICATION	3.272064893651067E-6	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999997785403306	WITHOUT_CLASSIFICATION	2.2145966951158237E-7	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9998118299247191	WITHOUT_CLASSIFICATION	1.881700752808487E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999854869453728	WITHOUT_CLASSIFICATION	1.451305462718375E-5	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999986592724022	WITHOUT_CLASSIFICATION	1.3407275978928434E-6	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999991083978953	WITHOUT_CLASSIFICATION	8.916021046773555E-7	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9997642148462313	WITHOUT_CLASSIFICATION	2.3578515376862578E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.996520121249316	DESIGN	0.0034798787506838767	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.7282850871013279	DESIGN	0.2717149128986721	WITHOUT_CLASSIFICATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999438061181046	WITHOUT_CLASSIFICATION	5.619388189543501E-5	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999999990100909	WITHOUT_CLASSIFICATION	9.899090895609364E-9	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999960191997871	WITHOUT_CLASSIFICATION	3.980800212886275E-6	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999998820973571	WITHOUT_CLASSIFICATION	1.179026428726391E-7	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999999792771387	WITHOUT_CLASSIFICATION	2.072286126497194E-8	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.5425639985457054	WITHOUT_CLASSIFICATION	0.4574360014542947	DESIGN
// FIXME: move out of this class!	DESIGN	0.9993493995042273	DESIGN	6.50600495772753E-4	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9985757261753418	DESIGN	0.0014242738246581464	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9999437423223227	DESIGN	5.625767767735839E-5	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9997072351197595	DESIGN	2.927648802405648E-4	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.9944544283968656	DESIGN	0.005545571603134493	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999989448914767	DESIGN	1.0551085232610794E-6	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.7572882682063824	WITHOUT_CLASSIFICATION	0.2427117317936176	DESIGN
// we might need to perform a DST correction	DESIGN	0.9997786072053142	WITHOUT_CLASSIFICATION	2.2139279468584393E-4	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9996755613022303	WITHOUT_CLASSIFICATION	3.2443869776958416E-4	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9999832976330606	DESIGN	1.6702366939404524E-5	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9998207082295423	WITHOUT_CLASSIFICATION	1.792917704577878E-4	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9999912843964358	DESIGN	8.715603564210345E-6	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9999912843964358	DESIGN	8.715603564210345E-6	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9999817078854877	DESIGN	1.829211451224069E-5	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9999782307609943	DESIGN	2.176923900564268E-5	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999999689028705	DESIGN	3.109712945845821E-8	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9995259783765011	DESIGN	4.740216234989306E-4	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999739818901016	DESIGN	2.6018109898499803E-5	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.8997901603196208	DESIGN	0.10020983968037914	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9999973101680975	DESIGN	2.6898319026627194E-6	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9995675400096828	DESIGN	4.324599903170736E-4	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9987908606573124	DESIGN	0.0012091393426876353	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.9543438930075407	DESIGN	0.04565610699245926	WITHOUT_CLASSIFICATION
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9999998974884092	DESIGN	1.0251159075573556E-7	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9994951960552128	DESIGN	5.048039447873209E-4	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9084571386786877	DESIGN	0.09154286132131226	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9980341278418766	DESIGN	0.001965872158123343	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9268419243346793	DESIGN	0.07315807566532069	WITHOUT_CLASSIFICATION
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9999998867693133	DESIGN	1.1323068671654834E-7	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9983270013455212	DESIGN	0.001672998654478775	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9999779321116867	DESIGN	2.206788831333776E-5	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9956635726407714	DESIGN	0.004336427359228506	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9993986156282851	WITHOUT_CLASSIFICATION	6.013843717149041E-4	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.999924269688367	DESIGN	7.57303116329255E-5	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9972189112959935	DESIGN	0.0027810887040064544	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9999724068805957	DESIGN	2.759311940417119E-5	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9995691538911705	DESIGN	4.308461088294605E-4	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999975718372125	DESIGN	2.4281627874690255E-6	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.7582459037944967	WITHOUT_CLASSIFICATION	0.2417540962055032	DESIGN
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999996003289714	DESIGN	3.996710285946034E-7	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999999999712805	DESIGN	2.8719432505358154E-11	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9999629446475835	DESIGN	3.7055352416509336E-5	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.5418848198272574	WITHOUT_CLASSIFICATION	0.4581151801727425	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.8004225469066454	WITHOUT_CLASSIFICATION	0.19957745309335462	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9999494845332946	DESIGN	5.051546670546195E-5	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9994231042036187	DESIGN	5.768957963813456E-4	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.999999868233238	DESIGN	1.317667619646398E-7	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9207373250875314	WITHOUT_CLASSIFICATION	0.07926267491246862	DESIGN
// TODO: handle writing into original buffer better	DESIGN	0.9999863516265121	DESIGN	1.3648373487971528E-5	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9999827021695099	DESIGN	1.7297830490144493E-5	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9988861188491988	DESIGN	0.0011138811508011862	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9999997980351644	DESIGN	2.0196483560927856E-7	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9833297745091722	DESIGN	0.016670225490827695	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999732149428671	DESIGN	2.6785057132848483E-5	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9088521827261239	DESIGN	0.09114781727387615	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.8610424186032863	WITHOUT_CLASSIFICATION	0.13895758139671363	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9999979978803998	DESIGN	2.002119600270178E-6	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999999955610922	DESIGN	4.438907735739347E-9	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9985978934771367	DESIGN	0.001402106522863258	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9999909230138928	DESIGN	9.076986107200344E-6	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9999893145576026	DESIGN	1.0685442397341681E-5	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9999219213791203	DESIGN	7.8078620879705E-5	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.9709556829323124	DESIGN	0.029044317067687682	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9965269758160817	DESIGN	0.0034730241839181176	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.7217242435474137	WITHOUT_CLASSIFICATION	0.2782757564525863	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.999871575062125	DESIGN	1.2842493787494516E-4	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9957174830138044	DESIGN	0.004282516986195717	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9999158119339938	DESIGN	8.418806600617912E-5	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9999978972396296	DESIGN	2.102760370423296E-6	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9756669097696271	DESIGN	0.02433309023037287	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9994688294202713	DESIGN	5.311705797287269E-4	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999985216150613	DESIGN	1.4783849387525599E-6	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999999204320772	DESIGN	7.956792284395317E-8	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9985246468674922	DESIGN	0.0014753531325077643	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.9630503890475703	WITHOUT_CLASSIFICATION	0.03694961095242968	DESIGN
// end hack	DESIGN	0.9909456599235239	WITHOUT_CLASSIFICATION	0.009054340076476113	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.9999774601205141	DESIGN	2.253987948595172E-5	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9999881756389258	DESIGN	1.1824361074184345E-5	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9996326761349067	DESIGN	3.673238650933099E-4	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9986028902363374	DESIGN	0.0013971097636625493	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9957853863563149	DESIGN	0.004214613643685138	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999980955275	WITHOUT_CLASSIFICATION	1.9044724670684787E-9	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9999808393259513	DESIGN	1.91606740487845E-5	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9135250898211612	DESIGN	0.08647491017883871	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9135250898211612	DESIGN	0.08647491017883871	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9135250898211612	DESIGN	0.08647491017883871	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9968607327988259	DESIGN	0.003139267201173951	WITHOUT_CLASSIFICATION
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9874870374784683	DESIGN	0.012512962521531598	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9958678071775292	DESIGN	0.004132192822470812	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9850993005696916	DESIGN	0.014900699430308409	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.9824281111363227	DESIGN	0.01757188886367736	WITHOUT_CLASSIFICATION
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9998495342360447	DESIGN	1.5046576395529506E-4	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.8812979006924839	DESIGN	0.11870209930751613	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9978091373878843	DESIGN	0.0021908626121157574	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9831568469977936	DESIGN	0.016843153002206426	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9745442058012245	WITHOUT_CLASSIFICATION	0.02545579419877545	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9999858217595851	DESIGN	1.4178240415050242E-5	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.999999947730054	DESIGN	5.226994608728567E-8	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9999858217595851	DESIGN	1.4178240415050242E-5	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.8015761744878214	DESIGN	0.1984238255121786	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.9839495728777449	DESIGN	0.01605042712225512	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.9839495728777449	DESIGN	0.01605042712225512	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.999086958579087	DESIGN	9.130414209130072E-4	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999999875336637	DESIGN	1.2466336438827216E-8	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.999086958579087	DESIGN	9.130414209130072E-4	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9999608963933351	DESIGN	3.91036066649448E-5	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9967701890262142	DESIGN	0.0032298109737858866	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.9999999269440999	DESIGN	7.305590010527656E-8	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9947528045137484	DESIGN	0.005247195486251624	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9996206884335919	DESIGN	3.7931156640818485E-4	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9996206884335919	DESIGN	3.7931156640818485E-4	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9975273912376648	WITHOUT_CLASSIFICATION	0.0024726087623351337	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9794659800865173	WITHOUT_CLASSIFICATION	0.020534019913482658	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.999986097335136	DESIGN	1.3902664863961593E-5	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.5262272018842437	WITHOUT_CLASSIFICATION	0.47377279811575634	DESIGN
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.999052600769061	DESIGN	9.473992309388978E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9885746079392165	DESIGN	0.01142539206078359	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9995832689798172	DESIGN	4.16731020182759E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9464212516162958	DESIGN	0.053578748383704154	WITHOUT_CLASSIFICATION
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9970327128967248	DESIGN	0.0029672871032751743	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9464212516162958	DESIGN	0.053578748383704154	WITHOUT_CLASSIFICATION
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.8061860396426856	DESIGN	0.19381396035731444	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9826780332856362	DESIGN	0.017321966714363788	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.99993218321661	DESIGN	6.781678338996439E-5	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.907646776141244	DESIGN	0.09235322385875602	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9999852924012849	DESIGN	1.4707598715164968E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9990725894671092	DESIGN	9.27410532890874E-4	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9999749821812125	DESIGN	2.5017818787405242E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.8922582216543912	DESIGN	0.10774177834560876	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.799402535779923	DESIGN	0.20059746422007693	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9990725894671092	DESIGN	9.27410532890874E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.7743651797302405	DESIGN	0.2256348202697595	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9998402047636044	DESIGN	1.597952363957222E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.999913902233572	DESIGN	8.60977664280526E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.5864243028472255	WITHOUT_CLASSIFICATION	0.4135756971527746	DESIGN
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999261861440274	DESIGN	7.381385597266538E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9971495394324932	DESIGN	0.002850460567506885	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9989672886492236	DESIGN	0.001032711350776492	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9947059501779852	DESIGN	0.005294049822014725	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9998830220944321	DESIGN	1.1697790556779439E-4	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9984125059470027	WITHOUT_CLASSIFICATION	0.0015874940529972373	DESIGN
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9796302573020244	DESIGN	0.020369742697975656	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9999852774826733	DESIGN	1.4722517326695165E-5	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9998076498019861	DESIGN	1.9235019801396136E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9710125537939329	WITHOUT_CLASSIFICATION	0.028987446206067	DESIGN
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9996351779703795	WITHOUT_CLASSIFICATION	3.648220296205784E-4	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9991159038478372	DESIGN	8.840961521629011E-4	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9997446897801747	DESIGN	2.5531021982530853E-4	WITHOUT_CLASSIFICATION
// we basically ignore protocol. let someone report it...	DESIGN	0.961677559743085	WITHOUT_CLASSIFICATION	0.03832244025691497	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.8954964040178643	WITHOUT_CLASSIFICATION	0.10450359598213564	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9998746099555295	WITHOUT_CLASSIFICATION	1.2539004447052014E-4	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.859344228549967	WITHOUT_CLASSIFICATION	0.1406557714500331	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9999856168223396	DESIGN	1.4383177660364331E-5	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9605488503247033	DESIGN	0.03945114967529676	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.9895876690536277	DESIGN	0.010412330946372275	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9999826756996988	DESIGN	1.7324300301155998E-5	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.6302431860081497	WITHOUT_CLASSIFICATION	0.3697568139918503	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.7584775760376663	DESIGN	0.2415224239623337	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9966173553596358	DESIGN	0.0033826446403640836	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999101422770922	WITHOUT_CLASSIFICATION	8.985772290778897E-5	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9998560698129383	WITHOUT_CLASSIFICATION	1.4393018706178E-4	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9988372907841798	WITHOUT_CLASSIFICATION	0.0011627092158202248	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9867339735405408	WITHOUT_CLASSIFICATION	0.013266026459459146	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.9938040439296559	DESIGN	0.006195956070344063	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9888114847838401	DESIGN	0.011188515216159912	WITHOUT_CLASSIFICATION
// TODO: public only?	DESIGN	0.9999259443867725	DESIGN	7.405561322752275E-5	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9998250088032057	WITHOUT_CLASSIFICATION	1.7499119679423536E-4	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9999804765723471	DESIGN	1.9523427652795523E-5	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9999799833993804	DESIGN	2.0016600619490886E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9998674720858699	DESIGN	1.325279141301625E-4	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.9792155213353818	DESIGN	0.02078447866461823	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.998843205966725	DESIGN	0.001156794033274923	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.998843205966725	DESIGN	0.001156794033274923	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9998751467734667	WITHOUT_CLASSIFICATION	1.248532265333891E-4	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9969354182210493	DESIGN	0.0030645817789508147	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9969354182210493	DESIGN	0.0030645817789508147	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9999585835251149	WITHOUT_CLASSIFICATION	4.1416474885088804E-5	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9999872772007995	DESIGN	1.2722799200480002E-5	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9826411795732239	DESIGN	0.017358820426776004	WITHOUT_CLASSIFICATION
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9993531445404604	DESIGN	6.468554595395658E-4	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9999997767750323	DESIGN	2.232249677061939E-7	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9990805471443766	DESIGN	9.194528556234146E-4	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.9984581862010474	DESIGN	0.0015418137989525547	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9996684951269021	DESIGN	3.315048730978878E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9996684951269021	DESIGN	3.315048730978878E-4	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9989784670998451	DESIGN	0.0010215329001549668	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.6157179520803151	DESIGN	0.38428204791968495	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9170740358094095	DESIGN	0.0829259641905905	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.999945133316579	DESIGN	5.486668342114932E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9999822283082229	DESIGN	1.7771691777073193E-5	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999855187817868	WITHOUT_CLASSIFICATION	1.4481218213209732E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9999906353323443	DESIGN	9.364667655606229E-6	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9861375060105992	WITHOUT_CLASSIFICATION	0.01386249398940073	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.8379498156648366	WITHOUT_CLASSIFICATION	0.16205018433516324	DESIGN
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.919112179934363	DESIGN	0.08088782006563698	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999944286675804	WITHOUT_CLASSIFICATION	5.5713324196316014E-6	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.998603006715784	DESIGN	0.0013969932842160487	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9997446897801747	DESIGN	2.5531021982530853E-4	WITHOUT_CLASSIFICATION
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9999442571331127	WITHOUT_CLASSIFICATION	5.574286688727164E-5	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9916279982462933	DESIGN	0.008372001753706651	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9950771035214213	DESIGN	0.004922896478578718	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9999951149808168	DESIGN	4.885019183169326E-6	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9361286176597693	WITHOUT_CLASSIFICATION	0.06387138234023074	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.6217197642875626	DESIGN	0.3782802357124375	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9210742190737533	DESIGN	0.07892578092624666	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9997009088541202	DESIGN	2.9909114587983574E-4	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9997009088541202	DESIGN	2.9909114587983574E-4	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.961674438295986	WITHOUT_CLASSIFICATION	0.0383255617040141	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9661042534141449	DESIGN	0.03389574658585505	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.60074295457409	DESIGN	0.39925704542590995	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9512923242869369	DESIGN	0.04870767571306305	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9569690972568162	WITHOUT_CLASSIFICATION	0.043030902743183726	DESIGN
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9999379721268563	WITHOUT_CLASSIFICATION	6.20278731436736E-5	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9582065103135425	WITHOUT_CLASSIFICATION	0.04179348968645756	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9859456886441383	DESIGN	0.014054311355861682	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.8658674086267277	WITHOUT_CLASSIFICATION	0.1341325913732723	DESIGN
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999999826073858	DESIGN	1.7392614244395682E-8	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.999614834563579	DESIGN	3.8516543642103877E-4	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9999998590706438	DESIGN	1.4092935620553628E-7	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.999614834563579	DESIGN	3.8516543642103877E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.999614834563579	DESIGN	3.8516543642103877E-4	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.7359690240764014	DESIGN	0.2640309759235985	WITHOUT_CLASSIFICATION
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9999338787436869	DESIGN	6.612125631303537E-5	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.999993419001317	DESIGN	6.580998683021359E-6	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.9976551285112325	DESIGN	0.002344871488767493	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9999943614506465	DESIGN	5.638549353539864E-6	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.7982171430212469	DESIGN	0.2017828569787531	WITHOUT_CLASSIFICATION
// TODO: This is probably BAD...	DESIGN	0.9997905449035637	DESIGN	2.094550964363782E-4	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9998439299907845	DESIGN	1.5607000921555284E-4	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9999837459032149	DESIGN	1.6254096785065755E-5	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999597110102364	DESIGN	4.028898976361715E-5	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9998157036943035	DESIGN	1.8429630569640338E-4	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9998439299907845	DESIGN	1.5607000921555284E-4	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9998439299907845	DESIGN	1.5607000921555284E-4	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9998439299907845	DESIGN	1.5607000921555284E-4	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9998439299907845	DESIGN	1.5607000921555284E-4	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9999828325847149	DESIGN	1.7167415285116537E-5	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9999635374926747	DESIGN	3.646250732512303E-5	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9857459785766427	DESIGN	0.014254021423357285	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.999834308102371	DESIGN	1.6569189762912574E-4	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.999834308102371	DESIGN	1.6569189762912574E-4	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9921088320740343	WITHOUT_CLASSIFICATION	0.007891167925965678	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9996576224813147	WITHOUT_CLASSIFICATION	3.423775186852782E-4	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9945599348007061	WITHOUT_CLASSIFICATION	0.005440065199293847	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9945599348007061	WITHOUT_CLASSIFICATION	0.005440065199293847	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9999696813363362	DESIGN	3.0318663663679144E-5	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9999972431470316	DESIGN	2.756852968269503E-6	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9995740698841458	DESIGN	4.259301158541502E-4	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999971572073	DESIGN	2.842792550119536E-9	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999971572073	DESIGN	2.842792550119536E-9	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9883409214686898	DESIGN	0.011659078531310187	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9720535532150464	DESIGN	0.027946446784953564	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9999422308153728	DESIGN	5.7769184627220205E-5	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9996788564380129	DESIGN	3.2114356198708363E-4	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9995444367530993	DESIGN	4.555632469007538E-4	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9998865724251675	WITHOUT_CLASSIFICATION	1.1342757483249769E-4	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.999985240577754	DESIGN	1.4759422245990475E-5	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9924491515487577	DESIGN	0.007550848451242366	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9994232431705659	DESIGN	5.767568294341438E-4	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9947528045137484	DESIGN	0.005247195486251624	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9947528045137484	DESIGN	0.005247195486251624	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.999956378743218	DESIGN	4.362125678192273E-5	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9975273912376648	WITHOUT_CLASSIFICATION	0.0024726087623351337	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9794659800865173	WITHOUT_CLASSIFICATION	0.020534019913482658	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999985404099326	DESIGN	1.4595900673794098E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999495921737218	DESIGN	5.040782627821926E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9996323765881072	DESIGN	3.67623411892872E-4	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.9916080699103441	DESIGN	0.008391930089655964	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9993384515707434	DESIGN	6.615484292565918E-4	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.999999597431508	DESIGN	4.025684919429171E-7	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.671447831827969	WITHOUT_CLASSIFICATION	0.32855216817203114	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9989784670998451	DESIGN	0.0010215329001549668	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.8658674086267277	WITHOUT_CLASSIFICATION	0.1341325913732723	DESIGN
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999971794492	DESIGN	2.8205507298415543E-9	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9992095525468507	DESIGN	7.904474531492195E-4	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9997009088541202	DESIGN	2.9909114587983574E-4	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9980960151162325	DESIGN	0.0019039848837676349	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999541819655037	DESIGN	4.581803449626579E-5	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999975382176863	DESIGN	2.4617823135444626E-6	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999972157183	DESIGN	2.784281793869626E-9	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.8947957782254762	DESIGN	0.1052042217745239	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9996932122408905	DESIGN	3.0678775910957483E-4	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9996932122408905	DESIGN	3.0678775910957483E-4	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.8433579970204914	WITHOUT_CLASSIFICATION	0.15664200297950862	DESIGN
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.5668125149665483	DESIGN	0.4331874850334517	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.9994178713427507	WITHOUT_CLASSIFICATION	5.821286572492297E-4	DESIGN
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9901703769944277	DESIGN	0.009829623005572413	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.5668125149665483	DESIGN	0.4331874850334517	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9920172620932424	WITHOUT_CLASSIFICATION	0.007982737906757631	DESIGN
// HACK: force clinit to be created	DESIGN	0.5451439707131405	WITHOUT_CLASSIFICATION	0.45485602928685953	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999999505217821	DESIGN	4.9478217958084976E-8	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9914888170592429	DESIGN	0.008511182940757235	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9551423965310054	DESIGN	0.04485760346899457	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9135250898211612	DESIGN	0.08647491017883871	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9997009088541202	DESIGN	2.9909114587983574E-4	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9968607327988259	DESIGN	0.003139267201173951	WITHOUT_CLASSIFICATION
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999969091909477	DESIGN	3.090809052216575E-6	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9989705378387941	DESIGN	0.0010294621612059482	WITHOUT_CLASSIFICATION
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9997273888390168	DESIGN	2.72611160983118E-4	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.999999998716047	DESIGN	1.2839530741584846E-9	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.999999868233238	DESIGN	1.317667619646398E-7	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9992593322122328	DESIGN	7.406677877671569E-4	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9994221925253188	DESIGN	5.77807474681157E-4	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9999985863276394	DESIGN	1.4136723606223865E-6	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9928870712347823	WITHOUT_CLASSIFICATION	0.007112928765217676	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9958678071775292	DESIGN	0.004132192822470812	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9996684951269021	DESIGN	3.315048730978878E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9995259783765011	DESIGN	4.740216234989306E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9995259783765011	DESIGN	4.740216234989306E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9995259783765011	DESIGN	4.740216234989306E-4	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999999249296	DESIGN	7.507038297881748E-11	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9943004690196833	DESIGN	0.00569953098031682	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9238694299720646	WITHOUT_CLASSIFICATION	0.07613057002793548	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9999129888539242	DESIGN	8.701114607587314E-5	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9965112505354601	DESIGN	0.003488749464539863	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.8909510415647467	DESIGN	0.10904895843525336	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9833297745091722	DESIGN	0.016670225490827695	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.8876482481873782	DESIGN	0.11235175181262183	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999732149428671	DESIGN	2.6785057132848483E-5	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9998460096511425	DESIGN	1.5399034885761183E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9973792702222869	DESIGN	0.002620729777713066	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9999118737379101	DESIGN	8.812626208986074E-5	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9999971639798919	DESIGN	2.8360201081286835E-6	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9999437423223227	DESIGN	5.625767767735839E-5	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9746634628767781	DESIGN	0.025336537123221946	WITHOUT_CLASSIFICATION
// end hack	DESIGN	0.9909456599235239	WITHOUT_CLASSIFICATION	0.009054340076476113	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9900039520951601	DESIGN	0.009996047904840002	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999972157183	DESIGN	2.784281793869626E-9	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999987919085019	DESIGN	1.2080914980553206E-6	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9999774601205141	DESIGN	2.253987948595172E-5	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.5154418498671157	DESIGN	0.4845581501328843	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.60074295457409	DESIGN	0.39925704542590995	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9512923242869369	DESIGN	0.04870767571306305	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9978417319969608	DESIGN	0.0021582680030392157	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9981521186701151	DESIGN	0.0018478813298848814	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9582065103135425	WITHOUT_CLASSIFICATION	0.04179348968645756	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9891871035833253	WITHOUT_CLASSIFICATION	0.01081289641667484	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.999614834563579	DESIGN	3.8516543642103877E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.999614834563579	DESIGN	3.8516543642103877E-4	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9522955784333476	WITHOUT_CLASSIFICATION	0.047704421566652444	DESIGN
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.999995738411734	DESIGN	4.261588265973424E-6	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.5051178091279628	WITHOUT_CLASSIFICATION	0.49488219087203716	DESIGN
