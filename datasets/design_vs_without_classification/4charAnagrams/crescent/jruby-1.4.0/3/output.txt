// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999972054944477	WITHOUT_CLASSIFICATION	2.794505552276514E-6	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999935636722664	WITHOUT_CLASSIFICATION	6.4363277335624504E-6	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999969146638745	WITHOUT_CLASSIFICATION	3.085336125491815E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999969146638745	WITHOUT_CLASSIFICATION	3.085336125491815E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999388410894491	WITHOUT_CLASSIFICATION	6.11589105509443E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999388410894491	WITHOUT_CLASSIFICATION	6.11589105509443E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999636173319001	WITHOUT_CLASSIFICATION	3.638266809981453E-5	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999170737740942	WITHOUT_CLASSIFICATION	8.292622590586E-5	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999955219163859	WITHOUT_CLASSIFICATION	4.478083614076086E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999957429908335	WITHOUT_CLASSIFICATION	4.2570091664455974E-6	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999328163588475	WITHOUT_CLASSIFICATION	6.71836411524798E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999328163588475	WITHOUT_CLASSIFICATION	6.71836411524798E-5	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.999994846650648	WITHOUT_CLASSIFICATION	5.153349352102449E-6	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999470411101452	WITHOUT_CLASSIFICATION	5.29588898548504E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999470411101452	WITHOUT_CLASSIFICATION	5.29588898548504E-5	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999650229695206	WITHOUT_CLASSIFICATION	3.4977030479407695E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999776090560357	WITHOUT_CLASSIFICATION	2.239094396429738E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999498246285345	WITHOUT_CLASSIFICATION	5.0175371465424365E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999498246285345	WITHOUT_CLASSIFICATION	5.0175371465424365E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999498246285345	WITHOUT_CLASSIFICATION	5.0175371465424365E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999498246285345	WITHOUT_CLASSIFICATION	5.0175371465424365E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999498246285345	WITHOUT_CLASSIFICATION	5.0175371465424365E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999498246285345	WITHOUT_CLASSIFICATION	5.0175371465424365E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999498246285345	WITHOUT_CLASSIFICATION	5.0175371465424365E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999447641065969	WITHOUT_CLASSIFICATION	5.5235893403031665E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999447641065969	WITHOUT_CLASSIFICATION	5.5235893403031665E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999447641065969	WITHOUT_CLASSIFICATION	5.5235893403031665E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999447641065969	WITHOUT_CLASSIFICATION	5.5235893403031665E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999447641065969	WITHOUT_CLASSIFICATION	5.5235893403031665E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999447641065969	WITHOUT_CLASSIFICATION	5.5235893403031665E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999447641065969	WITHOUT_CLASSIFICATION	5.5235893403031665E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999461086801965	WITHOUT_CLASSIFICATION	5.389131980353599E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999461086801965	WITHOUT_CLASSIFICATION	5.389131980353599E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999461086801965	WITHOUT_CLASSIFICATION	5.389131980353599E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999461086801965	WITHOUT_CLASSIFICATION	5.389131980353599E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999461086801965	WITHOUT_CLASSIFICATION	5.389131980353599E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999461086801965	WITHOUT_CLASSIFICATION	5.389131980353599E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999393228137475	WITHOUT_CLASSIFICATION	6.0677186252479926E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999393228137475	WITHOUT_CLASSIFICATION	6.0677186252479926E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999393228137475	WITHOUT_CLASSIFICATION	6.0677186252479926E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999393228137475	WITHOUT_CLASSIFICATION	6.0677186252479926E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999393228137475	WITHOUT_CLASSIFICATION	6.0677186252479926E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999393228137475	WITHOUT_CLASSIFICATION	6.0677186252479926E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999521700232196	WITHOUT_CLASSIFICATION	4.7829976780555344E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999521700232196	WITHOUT_CLASSIFICATION	4.7829976780555344E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999521700232196	WITHOUT_CLASSIFICATION	4.7829976780555344E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999521700232196	WITHOUT_CLASSIFICATION	4.7829976780555344E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999521700232196	WITHOUT_CLASSIFICATION	4.7829976780555344E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999521700232196	WITHOUT_CLASSIFICATION	4.7829976780555344E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999521700232196	WITHOUT_CLASSIFICATION	4.7829976780555344E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999517849596378	WITHOUT_CLASSIFICATION	4.821504036236393E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999517849596378	WITHOUT_CLASSIFICATION	4.821504036236393E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999517849596378	WITHOUT_CLASSIFICATION	4.821504036236393E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999517849596378	WITHOUT_CLASSIFICATION	4.821504036236393E-5	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9994502899082117	WITHOUT_CLASSIFICATION	5.497100917883287E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9994502899082117	WITHOUT_CLASSIFICATION	5.497100917883287E-4	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.999989612876789	WITHOUT_CLASSIFICATION	1.0387123210941564E-5	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999979455038734	WITHOUT_CLASSIFICATION	2.0544961266441407E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999845264082373	WITHOUT_CLASSIFICATION	1.5473591762575162E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999962252511462	WITHOUT_CLASSIFICATION	3.77474885372046E-6	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999958319657429	WITHOUT_CLASSIFICATION	4.168034257122467E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999956994715565	WITHOUT_CLASSIFICATION	4.300528443448445E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999956994715565	WITHOUT_CLASSIFICATION	4.300528443448445E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999956994715565	WITHOUT_CLASSIFICATION	4.300528443448445E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999956994715565	WITHOUT_CLASSIFICATION	4.300528443448445E-6	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.999925475112045	WITHOUT_CLASSIFICATION	7.452488795501984E-5	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999975225637189	WITHOUT_CLASSIFICATION	2.4774362811384056E-6	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.999993613222341	WITHOUT_CLASSIFICATION	6.38677765899391E-6	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999878481607593	WITHOUT_CLASSIFICATION	1.215183924076563E-5	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999972980578216	WITHOUT_CLASSIFICATION	2.7019421785177817E-6	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999935314076457	WITHOUT_CLASSIFICATION	6.468592354286424E-6	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999991684566542	WITHOUT_CLASSIFICATION	8.315433459066021E-7	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999786386917	WITHOUT_CLASSIFICATION	2.1361308167318204E-8	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999924008569736	WITHOUT_CLASSIFICATION	7.5991430264129995E-6	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9998844200224459	WITHOUT_CLASSIFICATION	1.1557997755402576E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999986595298176	WITHOUT_CLASSIFICATION	1.3404701824722236E-6	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999996360148193	WITHOUT_CLASSIFICATION	3.639851806573329E-7	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999710445227992	WITHOUT_CLASSIFICATION	2.8955477200873384E-5	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9994061254009894	WITHOUT_CLASSIFICATION	5.93874599010668E-4	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999900162784221	WITHOUT_CLASSIFICATION	9.983721577818246E-6	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999724218002584	WITHOUT_CLASSIFICATION	2.757819974166691E-5	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.6233047607949148	WITHOUT_CLASSIFICATION	0.3766952392050852	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999956994715565	WITHOUT_CLASSIFICATION	4.300528443448445E-6	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999988940859712	WITHOUT_CLASSIFICATION	1.1059140287936247E-5	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999947362696325	WITHOUT_CLASSIFICATION	5.2637303675181765E-6	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999990727658475	WITHOUT_CLASSIFICATION	9.272341525082978E-6	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9973705607145991	WITHOUT_CLASSIFICATION	0.002629439285400945	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999279599758794	WITHOUT_CLASSIFICATION	7.204002412067632E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999949278589451	WITHOUT_CLASSIFICATION	5.072141054935956E-6	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999996805772865	WITHOUT_CLASSIFICATION	3.194227135300353E-7	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999895057836511	WITHOUT_CLASSIFICATION	1.0494216348884669E-5	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9632151059001609	WITHOUT_CLASSIFICATION	0.03678489409983906	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9995149981575083	WITHOUT_CLASSIFICATION	4.8500184249163043E-4	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.7802327692603083	WITHOUT_CLASSIFICATION	0.21976723073969182	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999893405148115	WITHOUT_CLASSIFICATION	1.0659485188563646E-5	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9995330020474894	WITHOUT_CLASSIFICATION	4.669979525105959E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9987661509888329	WITHOUT_CLASSIFICATION	0.0012338490111671206	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999468841052341	WITHOUT_CLASSIFICATION	5.311589476584739E-5	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999822518418737	WITHOUT_CLASSIFICATION	1.7748158126289528E-5	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999843524718138	WITHOUT_CLASSIFICATION	1.5647528186238746E-5	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999998133631293	WITHOUT_CLASSIFICATION	1.866368708101371E-7	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999893761176611	WITHOUT_CLASSIFICATION	1.0623882338857668E-5	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999511787397335	WITHOUT_CLASSIFICATION	4.8821260266472144E-5	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9949396756342324	WITHOUT_CLASSIFICATION	0.005060324365767638	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999929657203224	WITHOUT_CLASSIFICATION	7.034279677666156E-6	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999929068264961	WITHOUT_CLASSIFICATION	7.09317350388819E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999891139417266	WITHOUT_CLASSIFICATION	1.0886058273374338E-5	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999891162889291	WITHOUT_CLASSIFICATION	1.088371107098759E-5	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9998240929261644	WITHOUT_CLASSIFICATION	1.75907073835653E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999986399487552	WITHOUT_CLASSIFICATION	1.3600512448530126E-6	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999220785816789	WITHOUT_CLASSIFICATION	7.792141832108972E-5	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999609815173433	WITHOUT_CLASSIFICATION	3.9018482656784E-5	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999710127976281	WITHOUT_CLASSIFICATION	2.8987202371923644E-5	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999892288771522	WITHOUT_CLASSIFICATION	1.0771122847686785E-5	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999541256589908	WITHOUT_CLASSIFICATION	4.58743410092521E-5	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9997554142903681	WITHOUT_CLASSIFICATION	2.4458570963201284E-4	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999917314309404	WITHOUT_CLASSIFICATION	8.268569059533181E-6	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9998741563515834	WITHOUT_CLASSIFICATION	1.2584364841665652E-4	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999997802815371	WITHOUT_CLASSIFICATION	2.197184629013371E-7	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999830249307644	WITHOUT_CLASSIFICATION	1.6975069235549137E-5	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9920470917593138	WITHOUT_CLASSIFICATION	0.007952908240686236	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999916199970822	WITHOUT_CLASSIFICATION	8.380002917861436E-6	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998937964042606	WITHOUT_CLASSIFICATION	1.0620359573931067E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999745731688577	WITHOUT_CLASSIFICATION	2.54268311421996E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999948293055428	WITHOUT_CLASSIFICATION	5.17069445713882E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999407012879087	WITHOUT_CLASSIFICATION	5.929871209129514E-5	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999633622311411	WITHOUT_CLASSIFICATION	3.663776885885624E-5	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999633622311411	WITHOUT_CLASSIFICATION	3.663776885885624E-5	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9998507618456682	WITHOUT_CLASSIFICATION	1.4923815433176804E-4	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999122286424069	WITHOUT_CLASSIFICATION	8.77713575930316E-5	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999780296251602	WITHOUT_CLASSIFICATION	2.1970374839724596E-5	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999981385269313	WITHOUT_CLASSIFICATION	1.861473068662085E-6	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9989037295645672	WITHOUT_CLASSIFICATION	0.0010962704354328858	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9997233391440775	WITHOUT_CLASSIFICATION	2.766608559225082E-4	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9995257266918841	WITHOUT_CLASSIFICATION	4.74273308115855E-4	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999636758475526	WITHOUT_CLASSIFICATION	3.6324152447395344E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999948293055428	WITHOUT_CLASSIFICATION	5.17069445713882E-6	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999347789131	WITHOUT_CLASSIFICATION	6.522108691322888E-8	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999913536095806	WITHOUT_CLASSIFICATION	8.646390419377676E-6	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9996314342573945	WITHOUT_CLASSIFICATION	3.6856574260539916E-4	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999959515833411	WITHOUT_CLASSIFICATION	4.048416658939648E-6	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999992974853386	WITHOUT_CLASSIFICATION	7.025146613775089E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999993257748152	WITHOUT_CLASSIFICATION	6.74225184704477E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999993257748152	WITHOUT_CLASSIFICATION	6.74225184704477E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999993257748152	WITHOUT_CLASSIFICATION	6.74225184704477E-7	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999450358733049	WITHOUT_CLASSIFICATION	5.4964126695177066E-5	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999997944715854	WITHOUT_CLASSIFICATION	2.0552841464722296E-7	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999998462509224	WITHOUT_CLASSIFICATION	1.5374907764561073E-7	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999514487256905	WITHOUT_CLASSIFICATION	4.855127430937841E-5	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.93442172078386	WITHOUT_CLASSIFICATION	0.06557827921613996	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999993315243593	WITHOUT_CLASSIFICATION	6.684756407982056E-7	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9981155601329736	WITHOUT_CLASSIFICATION	0.0018844398670263482	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999973164302516	WITHOUT_CLASSIFICATION	2.6835697484986872E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999860260741134	WITHOUT_CLASSIFICATION	1.3973925886709409E-5	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999860260741134	WITHOUT_CLASSIFICATION	1.3973925886709409E-5	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999370216247775	WITHOUT_CLASSIFICATION	6.297837522243441E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999999716548105	WITHOUT_CLASSIFICATION	2.8345189486334257E-7	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999811553871929	WITHOUT_CLASSIFICATION	1.8844612807120662E-5	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999811553871929	WITHOUT_CLASSIFICATION	1.8844612807120662E-5	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998047279332	WITHOUT_CLASSIFICATION	1.9527206692464608E-7	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999965537829418	WITHOUT_CLASSIFICATION	3.4462170583022688E-6	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999825725063736	WITHOUT_CLASSIFICATION	1.742749362640167E-5	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.999996161650567	WITHOUT_CLASSIFICATION	3.838349432949721E-6	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999569712765846	WITHOUT_CLASSIFICATION	4.302872341540037E-5	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.999999431462202	WITHOUT_CLASSIFICATION	5.68537797911591E-7	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999891322644167	WITHOUT_CLASSIFICATION	1.0867735583370883E-5	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999502825512272	WITHOUT_CLASSIFICATION	4.971744877286283E-5	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9998180877042327	WITHOUT_CLASSIFICATION	1.8191229576726333E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999947213791536	WITHOUT_CLASSIFICATION	5.278620846468168E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999948293055428	WITHOUT_CLASSIFICATION	5.17069445713882E-6	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999989581775159	WITHOUT_CLASSIFICATION	1.0418224840884613E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999997015103669	WITHOUT_CLASSIFICATION	2.984896330935875E-6	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999953775155053	WITHOUT_CLASSIFICATION	4.622484494670241E-6	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9731834917367569	WITHOUT_CLASSIFICATION	0.026816508263243135	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9993367643569827	WITHOUT_CLASSIFICATION	6.632356430173625E-4	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999340108330994	WITHOUT_CLASSIFICATION	6.598916690062485E-5	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9994693221135215	WITHOUT_CLASSIFICATION	5.306778864786117E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9990588688741814	WITHOUT_CLASSIFICATION	9.411311258184997E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999822780671079	WITHOUT_CLASSIFICATION	1.7721932892109653E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9998808255993011	WITHOUT_CLASSIFICATION	1.1917440069890244E-4	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9992859459581823	WITHOUT_CLASSIFICATION	7.140540418177371E-4	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9998861024682841	WITHOUT_CLASSIFICATION	1.138975317159321E-4	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.999995683214351	WITHOUT_CLASSIFICATION	4.3167856490467205E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999899356682698	WITHOUT_CLASSIFICATION	1.0064331730095896E-5	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9997408676568248	WITHOUT_CLASSIFICATION	2.591323431752431E-4	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999638060151207	WITHOUT_CLASSIFICATION	3.6193984879212836E-5	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999763653098483	WITHOUT_CLASSIFICATION	2.363469015164763E-5	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999918521893734	WITHOUT_CLASSIFICATION	8.147810626591546E-6	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999970494029969	WITHOUT_CLASSIFICATION	2.95059700297505E-6	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999861656760669	WITHOUT_CLASSIFICATION	1.383432393305647E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999967950377717	WITHOUT_CLASSIFICATION	3.20496222834134E-6	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999943256109104	WITHOUT_CLASSIFICATION	5.674389089616329E-6	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999995297985642	WITHOUT_CLASSIFICATION	4.7020143577061684E-7	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999916396741467	WITHOUT_CLASSIFICATION	8.3603258533353E-6	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999709989727761	WITHOUT_CLASSIFICATION	2.9001027224040004E-5	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999985820063289	WITHOUT_CLASSIFICATION	1.4179936711165164E-6	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999606562213255	WITHOUT_CLASSIFICATION	3.9343778674433315E-5	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999894483677919	WITHOUT_CLASSIFICATION	1.0551632208044905E-5	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999881164089	WITHOUT_CLASSIFICATION	1.188359122221915E-8	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999997869511121	WITHOUT_CLASSIFICATION	2.1304888781477828E-7	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9997820691655119	WITHOUT_CLASSIFICATION	2.1793083448813188E-4	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9999967682027315	WITHOUT_CLASSIFICATION	3.2317972684487135E-6	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9994725525815716	WITHOUT_CLASSIFICATION	5.27447418428439E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999542860343072	WITHOUT_CLASSIFICATION	4.5713965692702013E-5	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999434520341953	WITHOUT_CLASSIFICATION	5.6547965804707415E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999690095861248	WITHOUT_CLASSIFICATION	3.0990413875308557E-5	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999957521484262	WITHOUT_CLASSIFICATION	4.247851573801679E-5	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999945948041549	WITHOUT_CLASSIFICATION	5.405195845096386E-6	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999953078713725	WITHOUT_CLASSIFICATION	4.6921286275650854E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.999799042174813	WITHOUT_CLASSIFICATION	2.0095782518695081E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999981711433175	WITHOUT_CLASSIFICATION	1.8288566825283607E-6	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999999766181125	WITHOUT_CLASSIFICATION	2.3381887598875456E-8	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999861131486129	WITHOUT_CLASSIFICATION	1.3886851387093835E-5	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999880890355914	WITHOUT_CLASSIFICATION	1.191096440851227E-5	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.99999240112652	WITHOUT_CLASSIFICATION	7.598873479978296E-6	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999998097216064	WITHOUT_CLASSIFICATION	1.9027839348317843E-7	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999977387419104	WITHOUT_CLASSIFICATION	2.2612580895075665E-6	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9998632283574526	WITHOUT_CLASSIFICATION	1.3677164254744526E-4	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9995365659769008	WITHOUT_CLASSIFICATION	4.6343402309932295E-4	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999984730332339	WITHOUT_CLASSIFICATION	1.5269667661140056E-6	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999825186136853	WITHOUT_CLASSIFICATION	1.7481386314814537E-5	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9986926608143784	WITHOUT_CLASSIFICATION	0.0013073391856217116	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999996396080895	WITHOUT_CLASSIFICATION	3.603919105673803E-7	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999993299840992	WITHOUT_CLASSIFICATION	6.70015900834505E-7	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9997942511947505	WITHOUT_CLASSIFICATION	2.057488052494465E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9323936074988595	WITHOUT_CLASSIFICATION	0.06760639250114059	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.99999968620093	WITHOUT_CLASSIFICATION	3.137990700404647E-7	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.999997729966227	WITHOUT_CLASSIFICATION	2.270033772950322E-6	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.99999902500131	WITHOUT_CLASSIFICATION	9.749986900148331E-7	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999998720496307	WITHOUT_CLASSIFICATION	1.2795036941870378E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999930629660702	WITHOUT_CLASSIFICATION	6.93703392974596E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999930629660702	WITHOUT_CLASSIFICATION	6.93703392974596E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999988698874696	WITHOUT_CLASSIFICATION	1.1301125304007407E-5	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999988698874696	WITHOUT_CLASSIFICATION	1.1301125304007407E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999583162320494	WITHOUT_CLASSIFICATION	4.1683767950559596E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999583162320494	WITHOUT_CLASSIFICATION	4.1683767950559596E-5	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998795480415138	WITHOUT_CLASSIFICATION	1.2045195848621007E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9998795480415138	WITHOUT_CLASSIFICATION	1.2045195848621007E-4	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999995246812133	WITHOUT_CLASSIFICATION	4.7531878671542117E-7	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.999997757458677	WITHOUT_CLASSIFICATION	2.242541322881247E-6	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999014070238414	WITHOUT_CLASSIFICATION	9.859297615853768E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999985492534744	WITHOUT_CLASSIFICATION	1.4507465255042112E-6	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999655551319371	WITHOUT_CLASSIFICATION	3.4444868063027795E-5	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999941816072617	WITHOUT_CLASSIFICATION	5.818392738217211E-6	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999441424941676	WITHOUT_CLASSIFICATION	5.585750583234534E-5	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999979414227487	WITHOUT_CLASSIFICATION	2.0585772513546644E-6	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999851759610004	WITHOUT_CLASSIFICATION	1.482403899947818E-5	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.999998803760182	WITHOUT_CLASSIFICATION	1.1962398179704943E-6	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999790285304256	WITHOUT_CLASSIFICATION	2.0971469574328595E-5	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.999999908434817	WITHOUT_CLASSIFICATION	9.156518291667541E-8	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999924602996892	WITHOUT_CLASSIFICATION	7.5397003106862335E-6	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999938794209521	WITHOUT_CLASSIFICATION	6.120579047905269E-6	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999986720234522	WITHOUT_CLASSIFICATION	1.3279765478318704E-6	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999949333817615	WITHOUT_CLASSIFICATION	5.0666182384577826E-6	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999992580243247	WITHOUT_CLASSIFICATION	7.419756753799695E-7	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999789970222231	WITHOUT_CLASSIFICATION	2.1002977776900312E-5	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9989069326065007	WITHOUT_CLASSIFICATION	0.001093067393499271	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.8407861701716414	WITHOUT_CLASSIFICATION	0.15921382982835855	DESIGN
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999533473898093	WITHOUT_CLASSIFICATION	4.665261019063181E-5	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999854132030946	WITHOUT_CLASSIFICATION	1.458679690530553E-5	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999980228055585	WITHOUT_CLASSIFICATION	1.9771944414897167E-6	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999777850449283	WITHOUT_CLASSIFICATION	2.221495507166956E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999946648322562	WITHOUT_CLASSIFICATION	5.335167743897019E-6	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999993751353853	WITHOUT_CLASSIFICATION	6.248646146998382E-6	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999940336540553	WITHOUT_CLASSIFICATION	5.9663459446749495E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999960563134533	WITHOUT_CLASSIFICATION	3.943686546650298E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999960563134533	WITHOUT_CLASSIFICATION	3.943686546650298E-6	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999941471563852	WITHOUT_CLASSIFICATION	5.852843614745346E-6	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999966743754374	WITHOUT_CLASSIFICATION	3.325624562576596E-6	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999942891444632	WITHOUT_CLASSIFICATION	5.710855536839389E-6	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999678266634665	WITHOUT_CLASSIFICATION	3.217333653352134E-5	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999960165702657	WITHOUT_CLASSIFICATION	3.983429734239708E-6	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.999990485949074	WITHOUT_CLASSIFICATION	9.514050926058476E-6	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999221370306202	WITHOUT_CLASSIFICATION	7.786296937979953E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999221370306202	WITHOUT_CLASSIFICATION	7.786296937979953E-5	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999889060629078	WITHOUT_CLASSIFICATION	1.1093937092217887E-5	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9330046595833871	DESIGN	0.06699534041661288	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9997752482379115	WITHOUT_CLASSIFICATION	2.2475176208857625E-4	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9997752482379115	WITHOUT_CLASSIFICATION	2.2475176208857625E-4	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999651402591021	WITHOUT_CLASSIFICATION	3.485974089792012E-5	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999902565453997	WITHOUT_CLASSIFICATION	9.743454600311918E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999902565453997	WITHOUT_CLASSIFICATION	9.743454600311918E-6	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999871830556568	WITHOUT_CLASSIFICATION	1.2816944343065956E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999871830556568	WITHOUT_CLASSIFICATION	1.2816944343065956E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999919083396813	WITHOUT_CLASSIFICATION	8.091660318793472E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999919083396813	WITHOUT_CLASSIFICATION	8.091660318793472E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999515774440194	WITHOUT_CLASSIFICATION	4.842255598052689E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999590734828038	WITHOUT_CLASSIFICATION	4.092651719621393E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999932484404138	WITHOUT_CLASSIFICATION	6.751559586202048E-6	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999942698553795	WITHOUT_CLASSIFICATION	5.7301446203908295E-6	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999661342594183	WITHOUT_CLASSIFICATION	3.386574058164881E-5	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999990017802599	WITHOUT_CLASSIFICATION	9.982197401095499E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999350625940329	WITHOUT_CLASSIFICATION	6.493740596704094E-5	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999969289438584	WITHOUT_CLASSIFICATION	3.071056141583814E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999350625940329	WITHOUT_CLASSIFICATION	6.493740596704094E-5	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999873146084243	WITHOUT_CLASSIFICATION	1.2685391575744123E-5	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9998283962687832	WITHOUT_CLASSIFICATION	1.7160373121685987E-4	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999993833419368	WITHOUT_CLASSIFICATION	6.166580630839188E-7	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999897328731482	WITHOUT_CLASSIFICATION	1.0267126851898147E-5	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999830616605014	WITHOUT_CLASSIFICATION	1.6938339498479882E-5	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999960225020256	WITHOUT_CLASSIFICATION	3.977497974390732E-6	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.999998378064022	WITHOUT_CLASSIFICATION	1.6219359780441414E-6	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999923732990289	WITHOUT_CLASSIFICATION	7.626700971120441E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999989879903488	WITHOUT_CLASSIFICATION	1.0120096511368013E-6	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9996608186801142	WITHOUT_CLASSIFICATION	3.391813198858468E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999633498308224	WITHOUT_CLASSIFICATION	3.6650169177719864E-5	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999938311444	WITHOUT_CLASSIFICATION	6.168855668554002E-9	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999964954819485	WITHOUT_CLASSIFICATION	3.5045180515928875E-6	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999983061882312	WITHOUT_CLASSIFICATION	1.6938117687891847E-6	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999092729150968	WITHOUT_CLASSIFICATION	9.072708490315878E-5	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999962600940101	WITHOUT_CLASSIFICATION	3.73990598992467E-6	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999131455605179	WITHOUT_CLASSIFICATION	8.685443948200495E-5	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999987561219311	WITHOUT_CLASSIFICATION	1.2438780689594136E-6	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9997629048876704	WITHOUT_CLASSIFICATION	2.3709511232962102E-4	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999834679294645	WITHOUT_CLASSIFICATION	1.653207053549166E-5	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999857091644825	WITHOUT_CLASSIFICATION	1.4290835517428339E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999990487682211	WITHOUT_CLASSIFICATION	9.512317788343821E-7	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999986511690678	WITHOUT_CLASSIFICATION	1.3488309321780979E-6	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999852887820254	WITHOUT_CLASSIFICATION	1.4711217974542255E-5	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999982795731925	WITHOUT_CLASSIFICATION	1.7204268075655463E-6	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.999457801086359	WITHOUT_CLASSIFICATION	5.421989136410871E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9995301200641783	WITHOUT_CLASSIFICATION	4.6987993582179677E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999902416536258	WITHOUT_CLASSIFICATION	9.75834637412547E-6	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999698463532591	WITHOUT_CLASSIFICATION	3.0153646740876427E-5	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999948272666964	WITHOUT_CLASSIFICATION	5.172733303611315E-6	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999682478756303	WITHOUT_CLASSIFICATION	3.175212436957082E-5	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999965767057291	WITHOUT_CLASSIFICATION	3.4232942709238233E-6	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999398049614034	WITHOUT_CLASSIFICATION	6.019503859662652E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9998454823069548	WITHOUT_CLASSIFICATION	1.5451769304515513E-4	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999408281432014	WITHOUT_CLASSIFICATION	5.917185679870816E-5	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9996550683371344	WITHOUT_CLASSIFICATION	3.449316628656719E-4	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999907132704687	WITHOUT_CLASSIFICATION	9.286729531217737E-6	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9998342608660846	WITHOUT_CLASSIFICATION	1.6573913391531447E-4	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999929582217968	WITHOUT_CLASSIFICATION	7.041778203138306E-6	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999418949073569	WITHOUT_CLASSIFICATION	5.810509264318828E-5	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999758769476321	WITHOUT_CLASSIFICATION	2.4123052367951693E-5	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999999483845888	WITHOUT_CLASSIFICATION	5.161541119629329E-7	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999915754969908	WITHOUT_CLASSIFICATION	8.424503009281374E-6	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999526029298667	WITHOUT_CLASSIFICATION	4.739707013334639E-5	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999996843146813	WITHOUT_CLASSIFICATION	3.156853187685675E-7	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.999977877905059	WITHOUT_CLASSIFICATION	2.2122094941064616E-5	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.999981816306261	WITHOUT_CLASSIFICATION	1.8183693739032642E-5	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999953820338706	WITHOUT_CLASSIFICATION	4.617966129326833E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9983370131198709	WITHOUT_CLASSIFICATION	0.001662986880129045	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.992972543320448	WITHOUT_CLASSIFICATION	0.007027456679552065	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999743007344075	WITHOUT_CLASSIFICATION	2.5699265592467075E-5	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9997099083889801	WITHOUT_CLASSIFICATION	2.900916110198994E-4	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9994925744144926	WITHOUT_CLASSIFICATION	5.074255855074452E-4	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999834933773297	WITHOUT_CLASSIFICATION	1.6506622670293115E-5	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999849696778955	WITHOUT_CLASSIFICATION	1.5030322104402075E-5	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999849696778955	WITHOUT_CLASSIFICATION	1.5030322104402075E-5	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9993637103720387	WITHOUT_CLASSIFICATION	6.362896279613323E-4	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998422968292766	WITHOUT_CLASSIFICATION	1.577031707234289E-4	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9421123458555856	WITHOUT_CLASSIFICATION	0.05788765414441435	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.99998501447084	WITHOUT_CLASSIFICATION	1.4985529160082212E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999995334755873	WITHOUT_CLASSIFICATION	4.665244126346594E-7	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999723949292613	WITHOUT_CLASSIFICATION	2.7605070738747387E-5	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999874897360596	WITHOUT_CLASSIFICATION	1.2510263940522247E-5	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9989711855946266	WITHOUT_CLASSIFICATION	0.0010288144053733482	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.999948465948073	WITHOUT_CLASSIFICATION	5.153405192701306E-5	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999767731720905	WITHOUT_CLASSIFICATION	2.322682790946521E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.99950139793669	WITHOUT_CLASSIFICATION	4.98602063310005E-4	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.99950139793669	WITHOUT_CLASSIFICATION	4.98602063310005E-4	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.99749490515562	WITHOUT_CLASSIFICATION	0.0025050948443800236	DESIGN
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9997293390062998	WITHOUT_CLASSIFICATION	2.7066099370020436E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999734296867	WITHOUT_CLASSIFICATION	2.6570313387380423E-8	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999996356952883	WITHOUT_CLASSIFICATION	3.643047118174782E-7	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999998258491758	WITHOUT_CLASSIFICATION	1.7415082418111415E-7	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999994857710609	WITHOUT_CLASSIFICATION	5.142289391817662E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999999060090719	WITHOUT_CLASSIFICATION	9.399092810524618E-7	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999929968633727	WITHOUT_CLASSIFICATION	7.003136627201413E-6	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999985607792059	WITHOUT_CLASSIFICATION	1.439220794111468E-6	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999991686914163	WITHOUT_CLASSIFICATION	8.313085837715259E-7	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.999998273252658	WITHOUT_CLASSIFICATION	1.7267473419583958E-6	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999928102624427	WITHOUT_CLASSIFICATION	7.189737557421133E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999341961338344	WITHOUT_CLASSIFICATION	6.580386616559154E-5	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999341961338344	WITHOUT_CLASSIFICATION	6.580386616559154E-5	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.999163843953232	WITHOUT_CLASSIFICATION	8.361560467680261E-4	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.8151698572055303	WITHOUT_CLASSIFICATION	0.18483014279446974	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999685478850023	WITHOUT_CLASSIFICATION	3.145211499777125E-5	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999885919194419	WITHOUT_CLASSIFICATION	1.1408080558239424E-5	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9986186933819008	WITHOUT_CLASSIFICATION	0.0013813066180992607	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999150156920259	WITHOUT_CLASSIFICATION	8.498430797410099E-5	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999764715628664	WITHOUT_CLASSIFICATION	2.3528437133499905E-5	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999995330852924	WITHOUT_CLASSIFICATION	4.669147076005961E-7	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999970017198084	WITHOUT_CLASSIFICATION	2.9982801914919876E-6	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9997412000519709	WITHOUT_CLASSIFICATION	2.5879994802915435E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999734296867	WITHOUT_CLASSIFICATION	2.6570313387380423E-8	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999994197546095	WITHOUT_CLASSIFICATION	5.802453904760519E-7	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9997778401598596	WITHOUT_CLASSIFICATION	2.2215984014038878E-4	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999743661651812	WITHOUT_CLASSIFICATION	2.563383481871592E-5	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9383487589022522	WITHOUT_CLASSIFICATION	0.0616512410977478	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9996441653103719	WITHOUT_CLASSIFICATION	3.558346896281679E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9909609338694417	WITHOUT_CLASSIFICATION	0.009039066130558236	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9997718807122227	WITHOUT_CLASSIFICATION	2.2811928777721375E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.999520033694048	WITHOUT_CLASSIFICATION	4.799663059520879E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999853661225429	WITHOUT_CLASSIFICATION	1.4633877457277483E-5	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999985907738184	WITHOUT_CLASSIFICATION	1.409226181643638E-6	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999973151393621	WITHOUT_CLASSIFICATION	2.6848606379059197E-6	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9985815994343645	WITHOUT_CLASSIFICATION	0.0014184005656354916	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999978045689243	WITHOUT_CLASSIFICATION	2.195431075828432E-6	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9949772960176388	WITHOUT_CLASSIFICATION	0.0050227039823611255	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9980682239327643	WITHOUT_CLASSIFICATION	0.0019317760672357101	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999017117221587	WITHOUT_CLASSIFICATION	9.828827784139744E-5	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9778169032377466	WITHOUT_CLASSIFICATION	0.02218309676225347	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9996946704382974	WITHOUT_CLASSIFICATION	3.0532956170251557E-4	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.999098175090411	WITHOUT_CLASSIFICATION	9.018249095889322E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9999849165844357	WITHOUT_CLASSIFICATION	1.5083415564387473E-5	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9971037520629089	WITHOUT_CLASSIFICATION	0.002896247937091091	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999990712889256	WITHOUT_CLASSIFICATION	9.28711074271037E-7	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9983105620904573	WITHOUT_CLASSIFICATION	0.0016894379095425925	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999983203160884	WITHOUT_CLASSIFICATION	1.679683911712777E-6	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999792550573783	WITHOUT_CLASSIFICATION	2.0744942621687956E-5	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999960477025462	WITHOUT_CLASSIFICATION	3.952297453653115E-6	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9998686496620482	WITHOUT_CLASSIFICATION	1.3135033795171218E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999977121427386	WITHOUT_CLASSIFICATION	2.287857261423552E-6	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999805003302632	WITHOUT_CLASSIFICATION	1.949966973687493E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999860450379785	WITHOUT_CLASSIFICATION	1.3954962021404767E-5	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.999995630907237	WITHOUT_CLASSIFICATION	4.369092762957893E-6	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.999995630907237	WITHOUT_CLASSIFICATION	4.369092762957893E-6	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999927354792627	WITHOUT_CLASSIFICATION	7.264520737326811E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999984134072442	WITHOUT_CLASSIFICATION	1.586592755847579E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.999995944536034	WITHOUT_CLASSIFICATION	4.055463966009118E-6	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999966624671618	WITHOUT_CLASSIFICATION	3.3375328382484074E-6	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9998636368783318	WITHOUT_CLASSIFICATION	1.3636312166827015E-4	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999713085594581	WITHOUT_CLASSIFICATION	2.8691440541889583E-5	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999948293055428	WITHOUT_CLASSIFICATION	5.17069445713882E-6	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999797212791351	WITHOUT_CLASSIFICATION	2.0278720864908864E-5	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999924995335102	WITHOUT_CLASSIFICATION	7.500466489760261E-6	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999904950593541	WITHOUT_CLASSIFICATION	9.504940645974663E-6	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999995322132149	WITHOUT_CLASSIFICATION	4.6778678514977355E-7	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9998808293182535	WITHOUT_CLASSIFICATION	1.1917068174659636E-4	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999663644054514	WITHOUT_CLASSIFICATION	3.363559454873454E-5	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.999799042174813	WITHOUT_CLASSIFICATION	2.0095782518695081E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999997983011836	WITHOUT_CLASSIFICATION	2.01698816350111E-7	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9985068952938366	WITHOUT_CLASSIFICATION	0.001493104706163289	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999892362029585	WITHOUT_CLASSIFICATION	1.076379704133643E-5	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.999999629653415	WITHOUT_CLASSIFICATION	3.703465849906895E-7	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999992515539278	WITHOUT_CLASSIFICATION	7.484460722244967E-7	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998957456387997	WITHOUT_CLASSIFICATION	1.042543612003917E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999889392035398	WITHOUT_CLASSIFICATION	1.1060796460165997E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999889392035398	WITHOUT_CLASSIFICATION	1.1060796460165997E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999972344785577	WITHOUT_CLASSIFICATION	2.7655214421638476E-6	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.999999745716599	WITHOUT_CLASSIFICATION	2.542834009614248E-7	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9998444944953383	WITHOUT_CLASSIFICATION	1.5550550466168363E-4	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999992403294443	WITHOUT_CLASSIFICATION	7.596705557042523E-7	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999931694250245	WITHOUT_CLASSIFICATION	6.830574975507563E-6	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999421185547788	WITHOUT_CLASSIFICATION	5.788144522117722E-5	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999998937378156	WITHOUT_CLASSIFICATION	1.0626218439962328E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999973980314639	WITHOUT_CLASSIFICATION	2.6019685361199242E-6	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999968034294967	WITHOUT_CLASSIFICATION	3.196570503338923E-6	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999820329075659	WITHOUT_CLASSIFICATION	1.7967092434033896E-5	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999989178292363	WITHOUT_CLASSIFICATION	1.0821707637200266E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999476419511695	WITHOUT_CLASSIFICATION	5.235804883051113E-5	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999977743144702	WITHOUT_CLASSIFICATION	2.225685529727895E-6	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999973738979806	WITHOUT_CLASSIFICATION	2.6261020194194117E-6	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999982137275442	WITHOUT_CLASSIFICATION	1.7862724558695112E-6	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9998924296261045	WITHOUT_CLASSIFICATION	1.075703738954643E-4	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999871379635327	WITHOUT_CLASSIFICATION	1.2862036467352765E-5	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999826173136601	WITHOUT_CLASSIFICATION	1.738268633983371E-5	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9983093265531946	WITHOUT_CLASSIFICATION	0.0016906734468052941	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999721680164508	WITHOUT_CLASSIFICATION	2.7831983549173046E-5	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.999988660225817	WITHOUT_CLASSIFICATION	1.1339774183058596E-5	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999982445639565	WITHOUT_CLASSIFICATION	1.755436043594985E-6	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999920660816621	WITHOUT_CLASSIFICATION	7.933918337879408E-6	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9980734973014816	WITHOUT_CLASSIFICATION	0.0019265026985183238	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9996903209656267	WITHOUT_CLASSIFICATION	3.0967903437323526E-4	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9989862447244645	WITHOUT_CLASSIFICATION	0.0010137552755354435	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9987106090570418	WITHOUT_CLASSIFICATION	0.0012893909429582504	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999184774298959	WITHOUT_CLASSIFICATION	8.152257010408302E-5	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999765198330304	WITHOUT_CLASSIFICATION	2.3480166969627742E-5	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9998589290136763	WITHOUT_CLASSIFICATION	1.410709863237444E-4	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999988039007686	WITHOUT_CLASSIFICATION	1.1960992314000182E-6	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999961909801272	WITHOUT_CLASSIFICATION	3.809019872752119E-6	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9990658999045321	WITHOUT_CLASSIFICATION	9.341000954679215E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9999804875201841	WITHOUT_CLASSIFICATION	1.9512479815941254E-5	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999977611889718	WITHOUT_CLASSIFICATION	2.238811028288247E-6	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.6713888226372192	WITHOUT_CLASSIFICATION	0.3286111773627807	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9964300148853436	WITHOUT_CLASSIFICATION	0.0035699851146565116	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999973856647075	WITHOUT_CLASSIFICATION	2.6143352924261044E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999877429841244	WITHOUT_CLASSIFICATION	1.225701587554474E-5	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9998114062906268	WITHOUT_CLASSIFICATION	1.8859370937327082E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9998043655797767	WITHOUT_CLASSIFICATION	1.9563442022333844E-4	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.999990168484204	WITHOUT_CLASSIFICATION	9.831515795978321E-6	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999952270349061	WITHOUT_CLASSIFICATION	4.772965093921847E-6	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9966427914694034	WITHOUT_CLASSIFICATION	0.0033572085305965727	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.999654034817871	WITHOUT_CLASSIFICATION	3.459651821290606E-4	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9966427914694034	WITHOUT_CLASSIFICATION	0.0033572085305965727	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9975418660763453	DESIGN	0.0024581339236547243	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9602023115486572	DESIGN	0.039797688451342864	WITHOUT_CLASSIFICATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9998350931014942	WITHOUT_CLASSIFICATION	1.6490689850583897E-4	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.999084969555794	DESIGN	9.150304442060542E-4	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999324303312183	WITHOUT_CLASSIFICATION	6.756966878179245E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999938142930689	WITHOUT_CLASSIFICATION	6.185706931157072E-6	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999668854734877	WITHOUT_CLASSIFICATION	3.31145265123789E-5	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998570254174375	WITHOUT_CLASSIFICATION	1.4297458256260474E-4	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.999997700342999	WITHOUT_CLASSIFICATION	2.2996570010415025E-6	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9541716280768269	WITHOUT_CLASSIFICATION	0.04582837192317312	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.974408621755523	WITHOUT_CLASSIFICATION	0.025591378244476968	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.999973826967762	WITHOUT_CLASSIFICATION	2.617303223789374E-5	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9983238992028072	WITHOUT_CLASSIFICATION	0.0016761007971927975	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9998600101796509	WITHOUT_CLASSIFICATION	1.3998982034919515E-4	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9979986936217702	WITHOUT_CLASSIFICATION	0.0020013063782298463	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.8797733005436937	DESIGN	0.12022669945630628	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999463844040666	WITHOUT_CLASSIFICATION	5.3615595933323495E-5	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9994344086573604	WITHOUT_CLASSIFICATION	5.655913426394873E-4	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999829303771064	WITHOUT_CLASSIFICATION	1.7069622893604015E-5	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999428461096144	WITHOUT_CLASSIFICATION	5.715389038565733E-5	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.99999252759736	WITHOUT_CLASSIFICATION	7.4724026400568775E-6	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999975625878429	WITHOUT_CLASSIFICATION	2.437412157119435E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999909395955776	WITHOUT_CLASSIFICATION	9.060404422332255E-6	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999987737989217	WITHOUT_CLASSIFICATION	1.2262010783659975E-6	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999996031445763	WITHOUT_CLASSIFICATION	3.96855423726357E-7	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999598988742113	WITHOUT_CLASSIFICATION	4.010112578875743E-5	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999960515673756	WITHOUT_CLASSIFICATION	3.9484326244137704E-6	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999474882791966	WITHOUT_CLASSIFICATION	5.251172080339973E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999986595298176	WITHOUT_CLASSIFICATION	1.3404701824722236E-6	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9992151654908141	WITHOUT_CLASSIFICATION	7.848345091857635E-4	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998999759980296	WITHOUT_CLASSIFICATION	1.000240019704255E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999624168571204	WITHOUT_CLASSIFICATION	3.758314287954512E-5	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9998846051132871	WITHOUT_CLASSIFICATION	1.1539488671294688E-4	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9999964550518169	WITHOUT_CLASSIFICATION	3.544948183055764E-6	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999973045981	WITHOUT_CLASSIFICATION	2.695401778304188E-9	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999990289375681	WITHOUT_CLASSIFICATION	9.710624319641082E-7	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999997944918037	WITHOUT_CLASSIFICATION	2.0550819638012571E-7	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9967968451258279	WITHOUT_CLASSIFICATION	0.003203154874172056	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999987978376288	WITHOUT_CLASSIFICATION	1.2021623712296347E-6	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999629268352326	WITHOUT_CLASSIFICATION	3.707316476744261E-5	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999715187916135	WITHOUT_CLASSIFICATION	2.848120838654217E-5	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999804598132659	WITHOUT_CLASSIFICATION	1.9540186734055047E-5	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999995327983768	WITHOUT_CLASSIFICATION	4.6720162317723684E-7	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998993989531637	WITHOUT_CLASSIFICATION	1.0060104683639809E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998993989531637	WITHOUT_CLASSIFICATION	1.0060104683639809E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999835409347938	WITHOUT_CLASSIFICATION	1.6459065206253946E-5	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9997038081495656	WITHOUT_CLASSIFICATION	2.961918504343425E-4	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9998561648779485	WITHOUT_CLASSIFICATION	1.4383512205152674E-4	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999998479680837	WITHOUT_CLASSIFICATION	1.5203191630628617E-7	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9986227037166903	WITHOUT_CLASSIFICATION	0.0013772962833097594	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9998748586388438	WITHOUT_CLASSIFICATION	1.2514136115620949E-4	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999975764236896	WITHOUT_CLASSIFICATION	2.4235763104865533E-6	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999309391194967	WITHOUT_CLASSIFICATION	6.906088050326358E-5	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999431362127799	WITHOUT_CLASSIFICATION	5.686378722019571E-5	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9993940002914655	WITHOUT_CLASSIFICATION	6.059997085345124E-4	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.999684688688643	WITHOUT_CLASSIFICATION	3.153113113570182E-4	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9791415285682112	WITHOUT_CLASSIFICATION	0.020858471431788768	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9878455557381548	WITHOUT_CLASSIFICATION	0.01215444426184524	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999768750989243	WITHOUT_CLASSIFICATION	2.3124901075816214E-5	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999969396118779	WITHOUT_CLASSIFICATION	3.0603881222518837E-6	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999988786700019	WITHOUT_CLASSIFICATION	1.1213299980667614E-6	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999156977722771	WITHOUT_CLASSIFICATION	8.430222772303292E-5	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999807169538095	WITHOUT_CLASSIFICATION	1.9283046190481295E-5	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9998835163501253	WITHOUT_CLASSIFICATION	1.164836498747326E-4	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999425028585607	WITHOUT_CLASSIFICATION	5.749714143927342E-5	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9189710403815224	WITHOUT_CLASSIFICATION	0.08102895961847761	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.7565862220158944	WITHOUT_CLASSIFICATION	0.2434137779841055	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999735834267142	WITHOUT_CLASSIFICATION	2.641657328580871E-5	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9998373439297178	WITHOUT_CLASSIFICATION	1.626560702821337E-4	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999722552995018	WITHOUT_CLASSIFICATION	2.7744700498082124E-5	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9969882525640564	WITHOUT_CLASSIFICATION	0.00301174743594363	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9854824998177499	WITHOUT_CLASSIFICATION	0.014517500182250048	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999900967449438	WITHOUT_CLASSIFICATION	9.90325505614611E-6	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999724637912842	WITHOUT_CLASSIFICATION	2.7536208715810997E-5	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999223227729744	WITHOUT_CLASSIFICATION	7.767722702562061E-5	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9931306105590587	WITHOUT_CLASSIFICATION	0.006869389440941312	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999788187115459	WITHOUT_CLASSIFICATION	2.118128845403033E-5	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999985888032329	WITHOUT_CLASSIFICATION	1.4111967670978118E-5	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999990795423359	WITHOUT_CLASSIFICATION	9.204576640760564E-7	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999982677662228	WITHOUT_CLASSIFICATION	1.732233777178817E-6	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9987013641555459	WITHOUT_CLASSIFICATION	0.0012986358444540627	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9996363382431628	WITHOUT_CLASSIFICATION	3.6366175683715673E-4	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999950591485299	WITHOUT_CLASSIFICATION	4.9408514701079106E-5	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999658318627508	WITHOUT_CLASSIFICATION	3.4168137249262135E-5	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999331517624865	WITHOUT_CLASSIFICATION	6.684823751349261E-4	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999746009318484	WITHOUT_CLASSIFICATION	2.539906815161859E-5	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.999965851666178	WITHOUT_CLASSIFICATION	3.414833382202704E-5	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999958571779807	WITHOUT_CLASSIFICATION	4.14282201934025E-6	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999972992990156	WITHOUT_CLASSIFICATION	2.7007009844672628E-6	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9997954457652932	WITHOUT_CLASSIFICATION	2.0455423470667675E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999941163128987	WITHOUT_CLASSIFICATION	5.88368710122025E-6	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999767429390858	WITHOUT_CLASSIFICATION	2.3257060914194934E-5	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999790921070966	WITHOUT_CLASSIFICATION	2.0907892903456812E-5	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9998730291404296	WITHOUT_CLASSIFICATION	1.2697085957044402E-4	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999964907620349	WITHOUT_CLASSIFICATION	3.5092379651490606E-6	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999997330783509	WITHOUT_CLASSIFICATION	2.6692164911289526E-7	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999998568121484	WITHOUT_CLASSIFICATION	1.4318785165292943E-7	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999392909809	WITHOUT_CLASSIFICATION	6.070901914411969E-8	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999999157434033	WITHOUT_CLASSIFICATION	8.425659669919919E-7	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999525588446144	WITHOUT_CLASSIFICATION	4.7441155385651776E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999985935857401	WITHOUT_CLASSIFICATION	1.4064142599764498E-6	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999467251803211	WITHOUT_CLASSIFICATION	5.3274819678791684E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9973573211820704	WITHOUT_CLASSIFICATION	0.0026426788179296718	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9982519434903324	WITHOUT_CLASSIFICATION	0.0017480565096676668	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9992452782341924	WITHOUT_CLASSIFICATION	7.547217658076679E-4	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999993464287493	WITHOUT_CLASSIFICATION	6.535712507034573E-7	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999379860715923	WITHOUT_CLASSIFICATION	6.201392840766356E-5	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999980761500333	WITHOUT_CLASSIFICATION	1.923849966603542E-6	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999927970680654	WITHOUT_CLASSIFICATION	7.202931934599974E-6	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999961486585206	WITHOUT_CLASSIFICATION	3.8513414793562494E-6	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999680803971538	WITHOUT_CLASSIFICATION	3.191960284623548E-5	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999470228652738	WITHOUT_CLASSIFICATION	5.2977134726270516E-5	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999965951796996	WITHOUT_CLASSIFICATION	3.4048203004607613E-6	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999731001868103	WITHOUT_CLASSIFICATION	2.6899813189792004E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999875808074117	WITHOUT_CLASSIFICATION	1.2419192588242326E-5	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999732867075918	WITHOUT_CLASSIFICATION	2.6713292408233457E-5	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998757766604297	WITHOUT_CLASSIFICATION	1.2422333957027264E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999975615023712	WITHOUT_CLASSIFICATION	2.4384976288592348E-6	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999070167661516	WITHOUT_CLASSIFICATION	9.298323384850942E-5	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999793899535507	WITHOUT_CLASSIFICATION	2.0610046449208504E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999843892137942	WITHOUT_CLASSIFICATION	1.5610786205852955E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999872992146497	WITHOUT_CLASSIFICATION	1.2700785350364163E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999819641426253	WITHOUT_CLASSIFICATION	1.8035857374707583E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999776562576101	WITHOUT_CLASSIFICATION	2.2343742389805517E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.999972779837127	WITHOUT_CLASSIFICATION	2.7220162873089246E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999782401558045	WITHOUT_CLASSIFICATION	2.1759844195380945E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999792255312613	WITHOUT_CLASSIFICATION	2.0774468738745645E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999813657395568	WITHOUT_CLASSIFICATION	1.8634260443251243E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999775935502994	WITHOUT_CLASSIFICATION	2.2406449700664983E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999833273385261	WITHOUT_CLASSIFICATION	1.6672661473795462E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999883852358069	WITHOUT_CLASSIFICATION	1.1614764193161328E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999844685983216	WITHOUT_CLASSIFICATION	1.5531401678413944E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999822742689243	WITHOUT_CLASSIFICATION	1.7725731075726233E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999839553387624	WITHOUT_CLASSIFICATION	1.604466123762746E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999823579566296	WITHOUT_CLASSIFICATION	1.764204337032336E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999827001907111	WITHOUT_CLASSIFICATION	1.7299809288835292E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999884396125991	WITHOUT_CLASSIFICATION	1.1560387400917152E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999895113412448	WITHOUT_CLASSIFICATION	1.0488658755165966E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999990237294015	WITHOUT_CLASSIFICATION	9.76270598466472E-7	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999915315413224	WITHOUT_CLASSIFICATION	8.468458677544177E-6	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999301177865251	WITHOUT_CLASSIFICATION	6.988221347492839E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999995894643168	WITHOUT_CLASSIFICATION	4.1053568332584455E-7	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999376978552608	WITHOUT_CLASSIFICATION	6.230214473930787E-5	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999924939284284	WITHOUT_CLASSIFICATION	7.506071571663654E-6	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999997314415948	WITHOUT_CLASSIFICATION	2.68558405069971E-7	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9706931488052595	WITHOUT_CLASSIFICATION	0.02930685119474053	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999382504282925	WITHOUT_CLASSIFICATION	6.174957170740621E-5	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999298685455326	WITHOUT_CLASSIFICATION	7.013145446738974E-5	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9859676138954206	DESIGN	0.0140323861045793	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999992328279186	WITHOUT_CLASSIFICATION	7.671720815190393E-7	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.999995080911285	WITHOUT_CLASSIFICATION	4.919088715105153E-6	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999381686429777	WITHOUT_CLASSIFICATION	6.183135702228526E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999381686429777	WITHOUT_CLASSIFICATION	6.183135702228526E-5	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999982332716989	WITHOUT_CLASSIFICATION	1.7667283010017705E-6	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9995716926493419	WITHOUT_CLASSIFICATION	4.283073506581755E-4	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9998572351959595	WITHOUT_CLASSIFICATION	1.4276480404050662E-4	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9996123586156634	WITHOUT_CLASSIFICATION	3.8764138433657346E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9990248249062496	WITHOUT_CLASSIFICATION	9.751750937503301E-4	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9975124746336843	WITHOUT_CLASSIFICATION	0.002487525366315799	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999843899060539	WITHOUT_CLASSIFICATION	1.561009394618321E-5	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999968783992591	WITHOUT_CLASSIFICATION	3.121600740945761E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999492250652234	WITHOUT_CLASSIFICATION	5.0774934776539E-5	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999946153187905	WITHOUT_CLASSIFICATION	5.384681209439001E-6	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999977149610458	WITHOUT_CLASSIFICATION	2.2850389542628138E-6	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999680961938368	WITHOUT_CLASSIFICATION	3.190380616324936E-5	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9999242768929971	WITHOUT_CLASSIFICATION	7.572310700284144E-5	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999824088330127	WITHOUT_CLASSIFICATION	1.7591166987310665E-5	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999925297314157	WITHOUT_CLASSIFICATION	7.470268584236318E-6	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999885486156219	WITHOUT_CLASSIFICATION	1.145138437818881E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999949278589451	WITHOUT_CLASSIFICATION	5.072141054935956E-6	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999996413190334	WITHOUT_CLASSIFICATION	3.586809665323834E-7	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999995613095892	WITHOUT_CLASSIFICATION	4.386904107687338E-7	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9998007843656163	WITHOUT_CLASSIFICATION	1.9921563438380851E-4	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999984031739034	WITHOUT_CLASSIFICATION	1.5968260965106153E-6	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9018471638219484	WITHOUT_CLASSIFICATION	0.09815283617805168	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999919505765852	WITHOUT_CLASSIFICATION	8.049423414779186E-6	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999855597205431	WITHOUT_CLASSIFICATION	1.4440279456886994E-5	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999917303404359	WITHOUT_CLASSIFICATION	8.269659564156407E-6	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999979847263315	WITHOUT_CLASSIFICATION	2.0152736684768624E-6	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999980887743372	WITHOUT_CLASSIFICATION	1.9112256627942418E-6	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999977304490582	WITHOUT_CLASSIFICATION	2.2695509419014058E-6	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999978251755987	WITHOUT_CLASSIFICATION	2.1748244012959336E-6	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999230011158058	WITHOUT_CLASSIFICATION	7.699888419414895E-5	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999550806092766	WITHOUT_CLASSIFICATION	4.491939072330191E-5	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9997242758965788	WITHOUT_CLASSIFICATION	2.757241034212476E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999961369356032	WITHOUT_CLASSIFICATION	3.863064396809186E-6	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.999993465711333	WITHOUT_CLASSIFICATION	6.534288667058931E-6	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.999986584976739	WITHOUT_CLASSIFICATION	1.3415023261020962E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9998454342574085	WITHOUT_CLASSIFICATION	1.5456574259148294E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999986842890111	WITHOUT_CLASSIFICATION	1.3157109889049775E-5	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999977680708377	WITHOUT_CLASSIFICATION	2.2319291623208394E-6	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9988720339735178	WITHOUT_CLASSIFICATION	0.0011279660264821943	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9998906794951309	WITHOUT_CLASSIFICATION	1.0932050486913381E-4	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.8956837887661958	WITHOUT_CLASSIFICATION	0.10431621123380419	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.999989173523835	WITHOUT_CLASSIFICATION	1.0826476164887172E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999866821604799	WITHOUT_CLASSIFICATION	1.3317839520121459E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999281230862288	WITHOUT_CLASSIFICATION	7.18769137712674E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999281230862288	WITHOUT_CLASSIFICATION	7.18769137712674E-5	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9998764499062668	WITHOUT_CLASSIFICATION	1.235500937331928E-4	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999978018835856	WITHOUT_CLASSIFICATION	2.1981164144114414E-6	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999395908577086	WITHOUT_CLASSIFICATION	6.0409142291338384E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999848727014794	WITHOUT_CLASSIFICATION	1.5127298520555808E-5	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9991309689646066	WITHOUT_CLASSIFICATION	8.690310353933136E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999761380871728	WITHOUT_CLASSIFICATION	2.3861912827277027E-5	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9998330742493904	WITHOUT_CLASSIFICATION	1.669257506095465E-4	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9998487516608175	WITHOUT_CLASSIFICATION	1.5124833918254475E-4	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.999969006392807	WITHOUT_CLASSIFICATION	3.0993607193047354E-5	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9995990493994151	WITHOUT_CLASSIFICATION	4.0095060058485015E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9996115863836916	WITHOUT_CLASSIFICATION	3.884136163084571E-4	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999767937452726	WITHOUT_CLASSIFICATION	2.3206254727428703E-5	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999679552003422	WITHOUT_CLASSIFICATION	3.204479965783825E-5	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999664122688746	WITHOUT_CLASSIFICATION	3.3587731125418266E-5	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.7692716412994477	DESIGN	0.23072835870055222	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.847651610705646	WITHOUT_CLASSIFICATION	0.15234838929435407	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999166445834649	WITHOUT_CLASSIFICATION	8.335541653517743E-5	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.999983407995732	WITHOUT_CLASSIFICATION	1.659200426791004E-5	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.99999999471643	WITHOUT_CLASSIFICATION	5.283570080613181E-9	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999945948041549	WITHOUT_CLASSIFICATION	5.405195845096386E-6	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999400044837	WITHOUT_CLASSIFICATION	5.999551633264852E-8	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999400044837	WITHOUT_CLASSIFICATION	5.999551633264852E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999912176316176	WITHOUT_CLASSIFICATION	8.782368382395941E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999912176316176	WITHOUT_CLASSIFICATION	8.782368382395941E-6	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9991904950593298	WITHOUT_CLASSIFICATION	8.095049406701745E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999607738368969	WITHOUT_CLASSIFICATION	3.922616310314577E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999997240093786	WITHOUT_CLASSIFICATION	2.7599062140942396E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999993291656997	WITHOUT_CLASSIFICATION	6.708343003490909E-7	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999932484404138	WITHOUT_CLASSIFICATION	6.751559586202048E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999836549023359	WITHOUT_CLASSIFICATION	1.6345097664038464E-5	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.86031314035694	WITHOUT_CLASSIFICATION	0.13968685964306007	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9999923258411676	WITHOUT_CLASSIFICATION	7.67415883241838E-6	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999966756063463	WITHOUT_CLASSIFICATION	3.3243936538461093E-6	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999992212926623	WITHOUT_CLASSIFICATION	7.787073377555255E-7	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999831394659926	WITHOUT_CLASSIFICATION	1.6860534007435437E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999950099266619	WITHOUT_CLASSIFICATION	4.990073338074023E-6	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9978372459036311	WITHOUT_CLASSIFICATION	0.0021627540963687904	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9998307036377226	WITHOUT_CLASSIFICATION	1.692963622773851E-4	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999415529872782	WITHOUT_CLASSIFICATION	5.844701272188825E-5	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999991166762693	WITHOUT_CLASSIFICATION	8.833237307289721E-7	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9974424163817379	WITHOUT_CLASSIFICATION	0.0025575836182621845	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999977095597474	WITHOUT_CLASSIFICATION	2.2904402526149896E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9992249527162452	WITHOUT_CLASSIFICATION	7.750472837546596E-4	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999752593974263	WITHOUT_CLASSIFICATION	2.4740602573703435E-5	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999942422936973	WITHOUT_CLASSIFICATION	5.757706302652594E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999990338596567	WITHOUT_CLASSIFICATION	9.661403432741993E-7	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999975583744362	WITHOUT_CLASSIFICATION	2.441625563867117E-6	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999960515673756	WITHOUT_CLASSIFICATION	3.9484326244137704E-6	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9998748586388438	WITHOUT_CLASSIFICATION	1.2514136115620949E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999906016590745	WITHOUT_CLASSIFICATION	9.39834092554186E-6	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.8879454236594759	DESIGN	0.11205457634052415	WITHOUT_CLASSIFICATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999958295459199	WITHOUT_CLASSIFICATION	4.1704540800872186E-6	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9995756189638421	WITHOUT_CLASSIFICATION	4.2438103615785773E-4	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999961757355644	WITHOUT_CLASSIFICATION	3.8242644355613455E-6	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999961757355644	WITHOUT_CLASSIFICATION	3.8242644355613455E-6	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9967337607881183	WITHOUT_CLASSIFICATION	0.003266239211881676	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9991879800292462	WITHOUT_CLASSIFICATION	8.120199707537572E-4	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999918411530421	WITHOUT_CLASSIFICATION	8.15884695788638E-6	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999670435914513	WITHOUT_CLASSIFICATION	3.295640854884073E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999802468076627	WITHOUT_CLASSIFICATION	1.9753192337357408E-5	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9979677270883756	WITHOUT_CLASSIFICATION	0.002032272911624418	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999987830396675	WITHOUT_CLASSIFICATION	1.2169603325093468E-6	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999950736365806	WITHOUT_CLASSIFICATION	4.92636341939127E-6	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.999998418733228	WITHOUT_CLASSIFICATION	1.581266771889775E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999957079693512	WITHOUT_CLASSIFICATION	4.292030648742602E-6	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999888073042048	WITHOUT_CLASSIFICATION	1.1192695795178295E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999996963578359	WITHOUT_CLASSIFICATION	3.0364216414121056E-7	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9996060050836713	WITHOUT_CLASSIFICATION	3.939949163288361E-4	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9997741113443284	WITHOUT_CLASSIFICATION	2.258886556717656E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999602154799438	WITHOUT_CLASSIFICATION	3.9784520056234266E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999014070238414	WITHOUT_CLASSIFICATION	9.859297615853768E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9997019628351324	WITHOUT_CLASSIFICATION	2.9803716486765573E-4	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999959419826546	WITHOUT_CLASSIFICATION	4.058017345408042E-5	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.999925274053823	WITHOUT_CLASSIFICATION	7.472594617688726E-5	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9897647271242259	WITHOUT_CLASSIFICATION	0.0102352728757741	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999984946568103	WITHOUT_CLASSIFICATION	1.505343189687858E-5	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999941642447804	WITHOUT_CLASSIFICATION	5.835755219619478E-6	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999704902457452	WITHOUT_CLASSIFICATION	2.950975425467382E-5	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999990645860695	WITHOUT_CLASSIFICATION	9.354139305824786E-7	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999850486758358	WITHOUT_CLASSIFICATION	1.495132416413269E-5	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999886581742927	WITHOUT_CLASSIFICATION	1.1341825707227388E-5	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999208699050417	WITHOUT_CLASSIFICATION	7.913009495831002E-5	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999195989128064	WITHOUT_CLASSIFICATION	8.0401087193669E-5	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999510181067222	WITHOUT_CLASSIFICATION	4.898189327790124E-5	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999857945650672	WITHOUT_CLASSIFICATION	1.4205434932813792E-5	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999546723647831	WITHOUT_CLASSIFICATION	4.532763521700228E-5	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999864576981842	WITHOUT_CLASSIFICATION	1.3542301815780196E-5	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999912886978742	WITHOUT_CLASSIFICATION	8.711302125698417E-6	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9997074876124478	WITHOUT_CLASSIFICATION	2.925123875522517E-4	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9993482742644374	WITHOUT_CLASSIFICATION	6.517257355626136E-4	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9998135201223378	WITHOUT_CLASSIFICATION	1.8647987766224112E-4	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999076705358175	WITHOUT_CLASSIFICATION	9.232946418244104E-5	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9983465840890822	WITHOUT_CLASSIFICATION	0.0016534159109178207	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999930664604055	WITHOUT_CLASSIFICATION	6.933539594513213E-6	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999554536390123	WITHOUT_CLASSIFICATION	4.4546360987725196E-5	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999852368191092	WITHOUT_CLASSIFICATION	1.4763180890793442E-5	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999778348094952	WITHOUT_CLASSIFICATION	2.2165190504857737E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.999982853644299	WITHOUT_CLASSIFICATION	1.7146355701107743E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999630844055191	WITHOUT_CLASSIFICATION	3.6915594480934594E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.999951071887085	WITHOUT_CLASSIFICATION	4.892811291495965E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999958149741978	WITHOUT_CLASSIFICATION	4.185025802263445E-6	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.999999506440694	WITHOUT_CLASSIFICATION	4.93559305947704E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999979553875298	WITHOUT_CLASSIFICATION	2.0446124702422053E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999989722733704	WITHOUT_CLASSIFICATION	1.0277266295847673E-6	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.999855762465001	WITHOUT_CLASSIFICATION	1.4423753499896055E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999628845865938	WITHOUT_CLASSIFICATION	3.711541340614724E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9996755241745894	WITHOUT_CLASSIFICATION	3.244758254105777E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999040555071211	WITHOUT_CLASSIFICATION	9.594449287891982E-5	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998950117934653	WITHOUT_CLASSIFICATION	1.0498820653467066E-4	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999883269169533	WITHOUT_CLASSIFICATION	1.1673083046650918E-5	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999906308735728	WITHOUT_CLASSIFICATION	9.369126427189447E-6	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999916103294849	WITHOUT_CLASSIFICATION	8.389670514986865E-6	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999819007681234	WITHOUT_CLASSIFICATION	1.8099231876681617E-5	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999982642292938	WITHOUT_CLASSIFICATION	1.7357707061858714E-6	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9994141279447433	WITHOUT_CLASSIFICATION	5.85872055256603E-4	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999743399686303	WITHOUT_CLASSIFICATION	2.5660031369643345E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999628845865938	WITHOUT_CLASSIFICATION	3.711541340614724E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999040555071211	WITHOUT_CLASSIFICATION	9.594449287891982E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9996755241745894	WITHOUT_CLASSIFICATION	3.244758254105777E-4	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999061220673899	WITHOUT_CLASSIFICATION	9.387793261002761E-5	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999819305699753	WITHOUT_CLASSIFICATION	1.8069430024696064E-5	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999948669843803	WITHOUT_CLASSIFICATION	5.133015619741073E-6	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999965975061696	WITHOUT_CLASSIFICATION	3.4024938303084867E-6	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9999437286407289	WITHOUT_CLASSIFICATION	5.627135927098521E-5	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999975075184658	WITHOUT_CLASSIFICATION	2.4924815341066927E-6	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999965571091812	WITHOUT_CLASSIFICATION	3.442890818789138E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999969323511994	WITHOUT_CLASSIFICATION	3.067648800577757E-6	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999819147456115	WITHOUT_CLASSIFICATION	1.8085254388548438E-5	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999905221446178	WITHOUT_CLASSIFICATION	9.477855382203505E-6	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.999990249688878	WITHOUT_CLASSIFICATION	9.750311121924439E-6	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9986642432402314	WITHOUT_CLASSIFICATION	0.0013357567597686146	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999992271440142	WITHOUT_CLASSIFICATION	7.728559858120546E-7	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999989886727598	WITHOUT_CLASSIFICATION	1.0113272401686996E-6	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999889748210945	WITHOUT_CLASSIFICATION	1.1025178905490955E-5	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9999954038061326	WITHOUT_CLASSIFICATION	4.596193867397287E-6	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9999327831136926	WITHOUT_CLASSIFICATION	6.721688630739674E-5	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999975175774092	WITHOUT_CLASSIFICATION	2.4824225908368594E-6	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999975175774092	WITHOUT_CLASSIFICATION	2.4824225908368594E-6	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999948045853385	WITHOUT_CLASSIFICATION	5.195414661464506E-6	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999911429164465	WITHOUT_CLASSIFICATION	8.857083553480456E-6	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999936113717461	WITHOUT_CLASSIFICATION	6.388628253812446E-6	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999779997177636	WITHOUT_CLASSIFICATION	2.200028223640273E-5	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999912554150211	WITHOUT_CLASSIFICATION	8.74458497889909E-6	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.99995759216218	WITHOUT_CLASSIFICATION	4.240783781994468E-5	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9995775125876576	WITHOUT_CLASSIFICATION	4.224874123424326E-4	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9995882972721664	WITHOUT_CLASSIFICATION	4.1170272783368347E-4	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9997246754019872	WITHOUT_CLASSIFICATION	2.7532459801278975E-4	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999539327870903	WITHOUT_CLASSIFICATION	4.60672129096119E-5	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9986674181072343	WITHOUT_CLASSIFICATION	0.0013325818927656845	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999758191518293	WITHOUT_CLASSIFICATION	2.4180848170637276E-5	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999989347231777	WITHOUT_CLASSIFICATION	1.0652768223290977E-6	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9989878038491907	WITHOUT_CLASSIFICATION	0.0010121961508093124	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999495690492407	WITHOUT_CLASSIFICATION	5.043095075920262E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999978925518364	WITHOUT_CLASSIFICATION	2.107448163637673E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.999998770085751	WITHOUT_CLASSIFICATION	1.229914249055573E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9991517466997101	WITHOUT_CLASSIFICATION	8.482533002899907E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9991517466997101	WITHOUT_CLASSIFICATION	8.482533002899907E-4	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999782048167334	WITHOUT_CLASSIFICATION	2.1795183266729738E-5	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999871860685924	WITHOUT_CLASSIFICATION	1.2813931407719435E-5	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.999997286182543	WITHOUT_CLASSIFICATION	2.7138174568969575E-6	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999980261542777	WITHOUT_CLASSIFICATION	1.973845722258791E-6	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999828663950419	WITHOUT_CLASSIFICATION	1.7133604958243077E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9991517466997101	WITHOUT_CLASSIFICATION	8.482533002899907E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9991517466997101	WITHOUT_CLASSIFICATION	8.482533002899907E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999951538119223	WITHOUT_CLASSIFICATION	4.846188077681888E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999951538119223	WITHOUT_CLASSIFICATION	4.846188077681888E-6	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9998716698411795	WITHOUT_CLASSIFICATION	1.2833015882050963E-4	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999964358400264	WITHOUT_CLASSIFICATION	3.5641599736076153E-6	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999970151971826	WITHOUT_CLASSIFICATION	2.9848028174190566E-6	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.5867778298551302	WITHOUT_CLASSIFICATION	0.4132221701448699	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999989398522461	WITHOUT_CLASSIFICATION	1.0601477538410073E-6	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999989398522461	WITHOUT_CLASSIFICATION	1.0601477538410073E-6	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999990530813823	WITHOUT_CLASSIFICATION	9.469186176710201E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999618666712614	WITHOUT_CLASSIFICATION	3.813332873853571E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999985373363104	WITHOUT_CLASSIFICATION	1.4626636897051705E-6	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9998169416565948	WITHOUT_CLASSIFICATION	1.8305834340508035E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999947764390934	WITHOUT_CLASSIFICATION	5.2235609065388685E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999465038642211	WITHOUT_CLASSIFICATION	5.3496135778841306E-5	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999887456262746	WITHOUT_CLASSIFICATION	1.1254373725369564E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999721246015326	WITHOUT_CLASSIFICATION	2.7875398467385847E-5	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999491633645263	WITHOUT_CLASSIFICATION	5.083663547375289E-5	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999637919146668	WITHOUT_CLASSIFICATION	3.620808533314972E-5	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9966313898002949	WITHOUT_CLASSIFICATION	0.003368610199705147	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999908262976456	WITHOUT_CLASSIFICATION	9.173702354559273E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999638690689959	WITHOUT_CLASSIFICATION	3.613093100408663E-5	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.999982505165269	WITHOUT_CLASSIFICATION	1.7494834731007367E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999978925518364	WITHOUT_CLASSIFICATION	2.107448163637673E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9991517466997101	WITHOUT_CLASSIFICATION	8.482533002899907E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999951538119223	WITHOUT_CLASSIFICATION	4.846188077681888E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999465038642211	WITHOUT_CLASSIFICATION	5.3496135778841306E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9660192574439206	WITHOUT_CLASSIFICATION	0.03398074255607944	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9660192574439206	WITHOUT_CLASSIFICATION	0.03398074255607944	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999999551722074	WITHOUT_CLASSIFICATION	4.482779252095403E-8	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999998954313684	WITHOUT_CLASSIFICATION	1.0456863154591472E-7	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999802642313675	WITHOUT_CLASSIFICATION	1.9735768632405513E-5	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.999999845949941	WITHOUT_CLASSIFICATION	1.5405005906901236E-7	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999992743423626	WITHOUT_CLASSIFICATION	7.256576374228474E-7	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9962907676101926	WITHOUT_CLASSIFICATION	0.0037092323898074374	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9954386904021335	WITHOUT_CLASSIFICATION	0.004561309597866554	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9991224911704704	WITHOUT_CLASSIFICATION	8.775088295296136E-4	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999988000016716	WITHOUT_CLASSIFICATION	1.1999983283246351E-6	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999958748417034	WITHOUT_CLASSIFICATION	4.125158296632913E-6	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9998269098721788	WITHOUT_CLASSIFICATION	1.7309012782126771E-4	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999997759392407	WITHOUT_CLASSIFICATION	2.2406075935188624E-7	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999500436646046	WITHOUT_CLASSIFICATION	4.995633539553454E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.999998770085751	WITHOUT_CLASSIFICATION	1.229914249055573E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999951538119223	WITHOUT_CLASSIFICATION	4.846188077681888E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999618666712614	WITHOUT_CLASSIFICATION	3.813332873853571E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999985373363104	WITHOUT_CLASSIFICATION	1.4626636897051705E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999985373363104	WITHOUT_CLASSIFICATION	1.4626636897051705E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999947764390934	WITHOUT_CLASSIFICATION	5.2235609065388685E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999465038642211	WITHOUT_CLASSIFICATION	5.3496135778841306E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999465038642211	WITHOUT_CLASSIFICATION	5.3496135778841306E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9660192574439206	WITHOUT_CLASSIFICATION	0.03398074255607944	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999917456089785	WITHOUT_CLASSIFICATION	8.25439102142062E-6	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999964485250714	WITHOUT_CLASSIFICATION	3.5514749286876983E-6	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999880508165337	WITHOUT_CLASSIFICATION	1.1949183466215776E-5	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.998970216077366	WITHOUT_CLASSIFICATION	0.0010297839226340068	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9790093243157496	WITHOUT_CLASSIFICATION	0.02099067568425044	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999150535002572	WITHOUT_CLASSIFICATION	8.49464997428099E-5	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.99999958120046	WITHOUT_CLASSIFICATION	4.1879954004749E-7	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999985131960902	WITHOUT_CLASSIFICATION	1.4868039098270402E-6	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999995308411409	WITHOUT_CLASSIFICATION	4.691588591553289E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999618666712614	WITHOUT_CLASSIFICATION	3.813332873853571E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999985373363104	WITHOUT_CLASSIFICATION	1.4626636897051705E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999985373363104	WITHOUT_CLASSIFICATION	1.4626636897051705E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999947764390934	WITHOUT_CLASSIFICATION	5.2235609065388685E-6	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9991224911704704	WITHOUT_CLASSIFICATION	8.775088295296136E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999958748417034	WITHOUT_CLASSIFICATION	4.125158296632913E-6	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999977299962601	WITHOUT_CLASSIFICATION	2.270003739748391E-6	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999983835619406	WITHOUT_CLASSIFICATION	1.616438059462451E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999955982850711	WITHOUT_CLASSIFICATION	4.401714928827638E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999955982850711	WITHOUT_CLASSIFICATION	4.401714928827638E-6	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999468118955327	WITHOUT_CLASSIFICATION	5.31881044673158E-5	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999137082929107	WITHOUT_CLASSIFICATION	8.629170708920317E-5	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9972448970538548	WITHOUT_CLASSIFICATION	0.002755102946145195	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999780461909998	WITHOUT_CLASSIFICATION	2.1953809000138884E-5	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999931840198486	WITHOUT_CLASSIFICATION	6.815980151417143E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999931840198486	WITHOUT_CLASSIFICATION	6.815980151417143E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998076520394967	WITHOUT_CLASSIFICATION	1.9234796050327473E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998076520394967	WITHOUT_CLASSIFICATION	1.9234796050327473E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999530446975353	WITHOUT_CLASSIFICATION	4.695530246463836E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999530446975353	WITHOUT_CLASSIFICATION	4.695530246463836E-5	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999946854658868	WITHOUT_CLASSIFICATION	5.314534113220301E-6	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999997768373903	WITHOUT_CLASSIFICATION	2.231626098080072E-7	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998889011473534	WITHOUT_CLASSIFICATION	1.1109885264663789E-4	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999993911655588	WITHOUT_CLASSIFICATION	6.088344411801718E-7	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999731700518004	WITHOUT_CLASSIFICATION	2.682994819966394E-5	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999975471948157	WITHOUT_CLASSIFICATION	2.4528051843111103E-6	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9895811326821868	WITHOUT_CLASSIFICATION	0.010418867317813234	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999778488547643	WITHOUT_CLASSIFICATION	2.215114523568113E-5	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9982701052174527	WITHOUT_CLASSIFICATION	0.0017298947825473007	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.7747541162665561	WITHOUT_CLASSIFICATION	0.2252458837334439	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999983226842811	WITHOUT_CLASSIFICATION	1.6773157188446078E-6	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999919659852213	WITHOUT_CLASSIFICATION	8.03401477864671E-6	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9994432088342813	WITHOUT_CLASSIFICATION	5.567911657187555E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998942913295146	WITHOUT_CLASSIFICATION	1.0570867048548935E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998942913295146	WITHOUT_CLASSIFICATION	1.0570867048548935E-4	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9997145764592881	WITHOUT_CLASSIFICATION	2.854235407118637E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999836549023359	WITHOUT_CLASSIFICATION	1.6345097664038464E-5	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9989019960509345	WITHOUT_CLASSIFICATION	0.0010980039490654484	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999891293696738	WITHOUT_CLASSIFICATION	1.0870630326198832E-5	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999996596360265	WITHOUT_CLASSIFICATION	3.4036397345956103E-7	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999113664672367	WITHOUT_CLASSIFICATION	8.863353276325471E-5	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9996551724834536	WITHOUT_CLASSIFICATION	3.4482751654641125E-4	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999999388592471	WITHOUT_CLASSIFICATION	6.114075290507002E-7	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999958703035	WITHOUT_CLASSIFICATION	4.1296963922303E-9	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999697950938	WITHOUT_CLASSIFICATION	3.020490626580428E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999986516235593	WITHOUT_CLASSIFICATION	1.3483764408043636E-6	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9994827685585032	WITHOUT_CLASSIFICATION	5.172314414968848E-4	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999923296428738	WITHOUT_CLASSIFICATION	7.670357126208032E-6	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999999223013704	WITHOUT_CLASSIFICATION	7.76986297238466E-8	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9998437067933004	WITHOUT_CLASSIFICATION	1.5629320669950214E-4	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.999991418659661	WITHOUT_CLASSIFICATION	8.581340338911224E-6	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9996848092632784	WITHOUT_CLASSIFICATION	3.151907367215361E-4	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999989337023153	WITHOUT_CLASSIFICATION	1.0662976846440598E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999985677118155	WITHOUT_CLASSIFICATION	1.432288184459368E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999985677118155	WITHOUT_CLASSIFICATION	1.432288184459368E-6	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999998039147013	WITHOUT_CLASSIFICATION	1.96085298608157E-7	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999286246932527	WITHOUT_CLASSIFICATION	7.137530674730781E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9998250128964915	WITHOUT_CLASSIFICATION	1.7498710350848792E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9998250128964915	WITHOUT_CLASSIFICATION	1.7498710350848792E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999968946083798	WITHOUT_CLASSIFICATION	3.10539162020035E-6	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999344926620191	WITHOUT_CLASSIFICATION	6.550733798101066E-5	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998381620921825	WITHOUT_CLASSIFICATION	1.6183790781744656E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999810736023026	WITHOUT_CLASSIFICATION	1.892639769740495E-4	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999962540773087	WITHOUT_CLASSIFICATION	3.745922691108919E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999987365518502	WITHOUT_CLASSIFICATION	1.263448149699701E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999987365518502	WITHOUT_CLASSIFICATION	1.263448149699701E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.99999793953336	WITHOUT_CLASSIFICATION	2.0604666400019115E-6	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999991647273994	WITHOUT_CLASSIFICATION	8.352726006082379E-7	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999995144008268	WITHOUT_CLASSIFICATION	4.855991730799945E-7	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9992466931538334	WITHOUT_CLASSIFICATION	7.533068461666373E-4	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999286246932527	WITHOUT_CLASSIFICATION	7.137530674730781E-4	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999297826224353	WITHOUT_CLASSIFICATION	7.021737756473311E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999515189187134	WITHOUT_CLASSIFICATION	4.84810812865864E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999515189187134	WITHOUT_CLASSIFICATION	4.84810812865864E-5	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999926771636645	WITHOUT_CLASSIFICATION	7.3228363354289695E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996825724805	WITHOUT_CLASSIFICATION	3.1742751947588736E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996825724805	WITHOUT_CLASSIFICATION	3.1742751947588736E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999940157883	WITHOUT_CLASSIFICATION	5.984211768503606E-9	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999940157883	WITHOUT_CLASSIFICATION	5.984211768503606E-9	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999940157883	WITHOUT_CLASSIFICATION	5.984211768503606E-9	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996825724805	WITHOUT_CLASSIFICATION	3.1742751947588736E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996825724805	WITHOUT_CLASSIFICATION	3.1742751947588736E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999926771636645	WITHOUT_CLASSIFICATION	7.3228363354289695E-6	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999813646902618	WITHOUT_CLASSIFICATION	1.863530973825051E-5	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.999997438484582	WITHOUT_CLASSIFICATION	2.5615154179609448E-6	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999943369291809	WITHOUT_CLASSIFICATION	5.6630708191239634E-6	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.999978269623446	WITHOUT_CLASSIFICATION	2.1730376553964842E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999885024672	WITHOUT_CLASSIFICATION	1.1497532747509646E-8	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999980200186847	WITHOUT_CLASSIFICATION	1.979981315289028E-6	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999981070388545	WITHOUT_CLASSIFICATION	1.892961145471898E-6	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999995352053754	WITHOUT_CLASSIFICATION	4.6479462454841896E-7	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999986516235593	WITHOUT_CLASSIFICATION	1.3483764408043636E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996825724805	WITHOUT_CLASSIFICATION	3.1742751947588736E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996825724805	WITHOUT_CLASSIFICATION	3.1742751947588736E-7	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.999996381881733	WITHOUT_CLASSIFICATION	3.6181182670239422E-6	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999996235063905	WITHOUT_CLASSIFICATION	3.764936094206814E-7	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999960720927094	WITHOUT_CLASSIFICATION	3.927907290587617E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999997661756761	WITHOUT_CLASSIFICATION	2.3382432398953867E-7	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999834561156491	WITHOUT_CLASSIFICATION	1.654388435096388E-5	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999330805197	WITHOUT_CLASSIFICATION	6.691948037904396E-8	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999985919052636	WITHOUT_CLASSIFICATION	1.4080947363709213E-6	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999662051722	WITHOUT_CLASSIFICATION	3.379482791605959E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999996223495778	WITHOUT_CLASSIFICATION	3.7765042209496753E-7	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9963633207409118	WITHOUT_CLASSIFICATION	0.003636679259088222	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999670728580521	WITHOUT_CLASSIFICATION	3.2927141947856645E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999942476736398	WITHOUT_CLASSIFICATION	5.752326360184687E-6	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999899355627	WITHOUT_CLASSIFICATION	1.0064437319113681E-8	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999989709444106	WITHOUT_CLASSIFICATION	1.0290555894411089E-6	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999573903046	WITHOUT_CLASSIFICATION	4.2609695528749333E-8	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999878104905755	WITHOUT_CLASSIFICATION	1.218950942437785E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999878104905755	WITHOUT_CLASSIFICATION	1.218950942437785E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999878104905755	WITHOUT_CLASSIFICATION	1.218950942437785E-5	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9999898853770188	WITHOUT_CLASSIFICATION	1.0114622981153487E-5	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999834199875	WITHOUT_CLASSIFICATION	1.658001243343014E-8	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999895392746884	WITHOUT_CLASSIFICATION	1.0460725311589258E-5	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999992196196176	WITHOUT_CLASSIFICATION	7.8038038254861E-7	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999991104331866	WITHOUT_CLASSIFICATION	8.895668135123832E-7	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999833785794542	WITHOUT_CLASSIFICATION	1.6621420545830746E-5	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999966646847447	WITHOUT_CLASSIFICATION	3.3353152552310897E-6	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.999993844387635	WITHOUT_CLASSIFICATION	6.155612365143495E-6	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999879051301811	WITHOUT_CLASSIFICATION	1.2094869818911127E-5	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999717811087098	WITHOUT_CLASSIFICATION	2.8218891290212116E-5	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9998807058362855	WITHOUT_CLASSIFICATION	1.192941637143818E-4	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.999708269556255	WITHOUT_CLASSIFICATION	2.9173044374492484E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.99999793953336	WITHOUT_CLASSIFICATION	2.0604666400019115E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996825724805	WITHOUT_CLASSIFICATION	3.1742751947588736E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996825724805	WITHOUT_CLASSIFICATION	3.1742751947588736E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999926771636645	WITHOUT_CLASSIFICATION	7.3228363354289695E-6	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999980200186847	WITHOUT_CLASSIFICATION	1.979981315289028E-6	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999996235063905	WITHOUT_CLASSIFICATION	3.764936094206814E-7	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999997661756761	WITHOUT_CLASSIFICATION	2.3382432398953867E-7	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999330805197	WITHOUT_CLASSIFICATION	6.691948037904396E-8	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999960720927094	WITHOUT_CLASSIFICATION	3.927907290587617E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999985919052636	WITHOUT_CLASSIFICATION	1.4080947363709213E-6	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9963633207409118	WITHOUT_CLASSIFICATION	0.003636679259088222	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999996223495778	WITHOUT_CLASSIFICATION	3.7765042209496753E-7	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999942476736398	WITHOUT_CLASSIFICATION	5.752326360184687E-6	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999936268741222	WITHOUT_CLASSIFICATION	6.373125877924107E-6	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999913359590931	WITHOUT_CLASSIFICATION	8.66404090691123E-6	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9998867765572111	WITHOUT_CLASSIFICATION	1.1322344278879704E-4	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.999998341927642	WITHOUT_CLASSIFICATION	1.658072357940162E-6	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999263857574682	WITHOUT_CLASSIFICATION	7.361424253178779E-5	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999677197157683	WITHOUT_CLASSIFICATION	3.2280284231802946E-5	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9924577488295925	WITHOUT_CLASSIFICATION	0.007542251170407433	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999816552877085	WITHOUT_CLASSIFICATION	1.8344712291472318E-5	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9987970071833092	WITHOUT_CLASSIFICATION	0.001202992816690803	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999940006883	WITHOUT_CLASSIFICATION	5.999311701635045E-8	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9997888190900484	WITHOUT_CLASSIFICATION	2.1118090995167878E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999960919467435	WITHOUT_CLASSIFICATION	3.908053256440896E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996224508663	WITHOUT_CLASSIFICATION	3.7754913378373727E-7	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.8255448194143511	WITHOUT_CLASSIFICATION	0.174455180585649	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999985972173695	WITHOUT_CLASSIFICATION	1.4027826305446287E-6	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.999369986558674	WITHOUT_CLASSIFICATION	6.30013441326053E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999848852138973	WITHOUT_CLASSIFICATION	1.511478610269535E-4	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999982563844474	WITHOUT_CLASSIFICATION	1.7436155526492738E-6	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999990919022644	WITHOUT_CLASSIFICATION	9.080977356864611E-7	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998692163476194	WITHOUT_CLASSIFICATION	1.3078365238061924E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999915235742968	WITHOUT_CLASSIFICATION	8.47642570320151E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999897247491778	WITHOUT_CLASSIFICATION	1.027525082218341E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999897247491778	WITHOUT_CLASSIFICATION	1.027525082218341E-5	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.999858524968076	WITHOUT_CLASSIFICATION	1.4147503192392258E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9986394374637175	WITHOUT_CLASSIFICATION	0.001360562536282394	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998982061142819	WITHOUT_CLASSIFICATION	1.0179388571805519E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998982061142819	WITHOUT_CLASSIFICATION	1.0179388571805519E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998982061142819	WITHOUT_CLASSIFICATION	1.0179388571805519E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999191676442135	WITHOUT_CLASSIFICATION	8.08323557864839E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999191676442135	WITHOUT_CLASSIFICATION	8.08323557864839E-5	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.999922787825026	WITHOUT_CLASSIFICATION	7.721217497402097E-5	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9999126462898428	WITHOUT_CLASSIFICATION	8.735371015727159E-5	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9986394374637175	WITHOUT_CLASSIFICATION	0.001360562536282394	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999986663450586	WITHOUT_CLASSIFICATION	1.333654941353137E-6	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998982061142819	WITHOUT_CLASSIFICATION	1.0179388571805519E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998982061142819	WITHOUT_CLASSIFICATION	1.0179388571805519E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999191676442135	WITHOUT_CLASSIFICATION	8.08323557864839E-5	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9999126462898428	WITHOUT_CLASSIFICATION	8.735371015727159E-5	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999932637865546	WITHOUT_CLASSIFICATION	6.736213445298424E-6	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999932637865546	WITHOUT_CLASSIFICATION	6.736213445298424E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999972328467269	WITHOUT_CLASSIFICATION	2.767153273093797E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999972328467269	WITHOUT_CLASSIFICATION	2.767153273093797E-6	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999609078750985	WITHOUT_CLASSIFICATION	3.909212490153574E-5	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999609078750985	WITHOUT_CLASSIFICATION	3.909212490153574E-5	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999940010797772	WITHOUT_CLASSIFICATION	5.998920222826504E-6	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999992319231286	WITHOUT_CLASSIFICATION	7.680768713835122E-7	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999992319231286	WITHOUT_CLASSIFICATION	7.680768713835122E-7	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999920875890169	WITHOUT_CLASSIFICATION	7.9124109830656E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999920875890169	WITHOUT_CLASSIFICATION	7.9124109830656E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999994917190512	WITHOUT_CLASSIFICATION	5.082809487024783E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999499081868511	WITHOUT_CLASSIFICATION	5.00918131488792E-5	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999499081868511	WITHOUT_CLASSIFICATION	5.00918131488792E-5	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9980711691116007	WITHOUT_CLASSIFICATION	0.0019288308883993058	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999962704287695	WITHOUT_CLASSIFICATION	3.7295712304950457E-6	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999932382240342	WITHOUT_CLASSIFICATION	6.761775965770517E-6	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9980711691116007	WITHOUT_CLASSIFICATION	0.0019288308883993058	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999980578196382	WITHOUT_CLASSIFICATION	1.942180361643571E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999954681228658	WITHOUT_CLASSIFICATION	4.531877134178803E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999954681228658	WITHOUT_CLASSIFICATION	4.531877134178803E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999954681228658	WITHOUT_CLASSIFICATION	4.531877134178803E-6	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999993281726033	WITHOUT_CLASSIFICATION	6.718273966538831E-7	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999988361927257	WITHOUT_CLASSIFICATION	1.1638072742967113E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999929061859176	WITHOUT_CLASSIFICATION	7.09381408234435E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999929061859176	WITHOUT_CLASSIFICATION	7.09381408234435E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999963669258634	WITHOUT_CLASSIFICATION	3.633074136508329E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999806493698818	WITHOUT_CLASSIFICATION	1.9350630118118795E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999957751314568	WITHOUT_CLASSIFICATION	4.224868543222737E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999945159838901	WITHOUT_CLASSIFICATION	5.484016109844877E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999992108276112	WITHOUT_CLASSIFICATION	7.891723887064931E-7	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999975587505309	WITHOUT_CLASSIFICATION	2.4412494691005367E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999975587505309	WITHOUT_CLASSIFICATION	2.4412494691005367E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999996499858052	WITHOUT_CLASSIFICATION	3.500141947903261E-7	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998899950736589	WITHOUT_CLASSIFICATION	1.1000492634111432E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998899950736589	WITHOUT_CLASSIFICATION	1.1000492634111432E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999954681228658	WITHOUT_CLASSIFICATION	4.531877134178803E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999988361927257	WITHOUT_CLASSIFICATION	1.1638072742967113E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999929061859176	WITHOUT_CLASSIFICATION	7.09381408234435E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999963669258634	WITHOUT_CLASSIFICATION	3.633074136508329E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999806493698818	WITHOUT_CLASSIFICATION	1.9350630118118795E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999957751314568	WITHOUT_CLASSIFICATION	4.224868543222737E-6	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999945159838901	WITHOUT_CLASSIFICATION	5.484016109844877E-6	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998899950736589	WITHOUT_CLASSIFICATION	1.1000492634111432E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998288838514572	WITHOUT_CLASSIFICATION	1.711161485428409E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999713533078959	WITHOUT_CLASSIFICATION	2.864669210413791E-5	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999685097601231	WITHOUT_CLASSIFICATION	3.1490239876842204E-5	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999606518128152	WITHOUT_CLASSIFICATION	3.9348187184692866E-5	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999579351127232	WITHOUT_CLASSIFICATION	4.206488727673245E-5	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999871579818432	WITHOUT_CLASSIFICATION	1.2842018156721142E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999990134069249	WITHOUT_CLASSIFICATION	9.865930751947741E-7	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999990134069249	WITHOUT_CLASSIFICATION	9.865930751947741E-7	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999669028454498	WITHOUT_CLASSIFICATION	3.3097154550369544E-5	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999694322430471	WITHOUT_CLASSIFICATION	3.056775695282477E-5	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9997713621537504	WITHOUT_CLASSIFICATION	2.2863784624951893E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999957636800939	WITHOUT_CLASSIFICATION	4.236319906107576E-6	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999807959378735	WITHOUT_CLASSIFICATION	1.9204062126503612E-5	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999807959378735	WITHOUT_CLASSIFICATION	1.9204062126503612E-5	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9998111178740596	WITHOUT_CLASSIFICATION	1.888821259403129E-4	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9998419998368611	WITHOUT_CLASSIFICATION	1.5800016313901246E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999927944641461	WITHOUT_CLASSIFICATION	7.205535853934153E-6	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999927944641461	WITHOUT_CLASSIFICATION	7.205535853934153E-6	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999922786071319	WITHOUT_CLASSIFICATION	7.721392867988199E-6	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999878420466984	WITHOUT_CLASSIFICATION	1.215795330156555E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999992108276112	WITHOUT_CLASSIFICATION	7.891723887064931E-7	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.999995986196755	WITHOUT_CLASSIFICATION	4.013803245003449E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999929042428904	WITHOUT_CLASSIFICATION	7.095757109517476E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999985042704667	WITHOUT_CLASSIFICATION	1.495729533370204E-6	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999751331026879	WITHOUT_CLASSIFICATION	2.48668973120809E-5	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999969046801113	WITHOUT_CLASSIFICATION	3.0953198887506283E-6	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999991581547639	WITHOUT_CLASSIFICATION	8.418452360436587E-7	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999970321979577	WITHOUT_CLASSIFICATION	2.9678020423975157E-6	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9997412117705304	WITHOUT_CLASSIFICATION	2.5878822946956214E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999245080718623	WITHOUT_CLASSIFICATION	7.549192813771892E-5	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999245080718623	WITHOUT_CLASSIFICATION	7.549192813771892E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999748966135074	WITHOUT_CLASSIFICATION	2.5103386492685888E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999748966135074	WITHOUT_CLASSIFICATION	2.5103386492685888E-5	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999998055319715	WITHOUT_CLASSIFICATION	1.9446802839544473E-7	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998826675491093	WITHOUT_CLASSIFICATION	1.1733245089064732E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998826675491093	WITHOUT_CLASSIFICATION	1.1733245089064732E-4	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998826675491093	WITHOUT_CLASSIFICATION	1.1733245089064732E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999734718902653	WITHOUT_CLASSIFICATION	2.6528109734727128E-5	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999938467777241	WITHOUT_CLASSIFICATION	6.153222275864844E-6	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999938467777241	WITHOUT_CLASSIFICATION	6.153222275864844E-6	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999996725681661	WITHOUT_CLASSIFICATION	3.274318338792011E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999648681127848	WITHOUT_CLASSIFICATION	3.513188721517228E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999975846833694	WITHOUT_CLASSIFICATION	2.4153166305017586E-6	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999997155003695	WITHOUT_CLASSIFICATION	2.844996305065845E-7	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.999978209794475	WITHOUT_CLASSIFICATION	2.1790205525020732E-5	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9999934387864807	WITHOUT_CLASSIFICATION	6.561213519219828E-6	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999993264176827	WITHOUT_CLASSIFICATION	6.735823173385856E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996224508663	WITHOUT_CLASSIFICATION	3.7754913378373727E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996224508663	WITHOUT_CLASSIFICATION	3.7754913378373727E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999734718902653	WITHOUT_CLASSIFICATION	2.6528109734727128E-5	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999996725681661	WITHOUT_CLASSIFICATION	3.274318338792011E-7	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999937723017781	WITHOUT_CLASSIFICATION	6.227698221974481E-6	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999648681127848	WITHOUT_CLASSIFICATION	3.513188721517228E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999975846833694	WITHOUT_CLASSIFICATION	2.4153166305017586E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999973918340843	WITHOUT_CLASSIFICATION	2.608165915828565E-6	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999962218633647	WITHOUT_CLASSIFICATION	3.7781366354074676E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983802942087	WITHOUT_CLASSIFICATION	1.6197057913342897E-6	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9999529892209339	WITHOUT_CLASSIFICATION	4.701077906607771E-5	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999999832334815	WITHOUT_CLASSIFICATION	1.676651849779327E-8	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999914182395252	WITHOUT_CLASSIFICATION	8.581760474819159E-6	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.999995452872265	WITHOUT_CLASSIFICATION	4.547127735039325E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999973918340843	WITHOUT_CLASSIFICATION	2.608165915828565E-6	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9981056670378854	WITHOUT_CLASSIFICATION	0.0018943329621146077	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9981056670378854	WITHOUT_CLASSIFICATION	0.0018943329621146077	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999971313377717	WITHOUT_CLASSIFICATION	2.8686622283514873E-6	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999745828174135	WITHOUT_CLASSIFICATION	2.541718258647314E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999483522114619	WITHOUT_CLASSIFICATION	5.164778853813578E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999987145238836	WITHOUT_CLASSIFICATION	1.2854761163905872E-5	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999961204783976	WITHOUT_CLASSIFICATION	3.8795216024991905E-6	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9989208662479959	WITHOUT_CLASSIFICATION	0.0010791337520040963	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999834780064348	WITHOUT_CLASSIFICATION	1.6521993565134605E-5	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9975945588721006	WITHOUT_CLASSIFICATION	0.0024054411278993638	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999953401085928	WITHOUT_CLASSIFICATION	4.659891407194979E-6	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999975558038582	WITHOUT_CLASSIFICATION	2.4441961419432255E-6	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999965853109523	WITHOUT_CLASSIFICATION	3.4146890476953955E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999987145238836	WITHOUT_CLASSIFICATION	1.2854761163905872E-5	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999961204783976	WITHOUT_CLASSIFICATION	3.8795216024991905E-6	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999817594444306	WITHOUT_CLASSIFICATION	1.8240555569506647E-5	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999924382161054	WITHOUT_CLASSIFICATION	7.561783894622385E-6	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999903901506	WITHOUT_CLASSIFICATION	9.60984939110613E-9	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999470703758793	WITHOUT_CLASSIFICATION	5.292962412077873E-5	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999283835802745	WITHOUT_CLASSIFICATION	7.161641972557664E-5	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999920958026046	WITHOUT_CLASSIFICATION	7.904197395249537E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9998213266559668	WITHOUT_CLASSIFICATION	1.786733440332562E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.99999829177858	WITHOUT_CLASSIFICATION	1.7082214200112543E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999920713960206	WITHOUT_CLASSIFICATION	7.928603979313636E-6	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9993545602872653	WITHOUT_CLASSIFICATION	6.454397127346113E-4	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999526120147011	WITHOUT_CLASSIFICATION	4.738798529885618E-5	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.999893169990597	WITHOUT_CLASSIFICATION	1.0683000940301509E-4	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9998997109969097	WITHOUT_CLASSIFICATION	1.0028900309035207E-4	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9971315561322543	WITHOUT_CLASSIFICATION	0.0028684438677457	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.6067712494055503	WITHOUT_CLASSIFICATION	0.3932287505944497	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999984505970013	WITHOUT_CLASSIFICATION	1.5494029986995842E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999312722816895	WITHOUT_CLASSIFICATION	6.872771831050244E-5	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9999546861922209	WITHOUT_CLASSIFICATION	4.531380777903769E-5	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999831064416776	WITHOUT_CLASSIFICATION	1.6893558322319393E-5	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999974623190252	WITHOUT_CLASSIFICATION	2.5376809748509616E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999312722816895	WITHOUT_CLASSIFICATION	6.872771831050244E-5	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9999546861922209	WITHOUT_CLASSIFICATION	4.531380777903769E-5	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999831064416776	WITHOUT_CLASSIFICATION	1.6893558322319393E-5	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999065275037388	WITHOUT_CLASSIFICATION	9.347249626123614E-5	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999122346953784	WITHOUT_CLASSIFICATION	8.77653046216291E-5	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9967707579667887	WITHOUT_CLASSIFICATION	0.003229242033211302	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999340018578384	WITHOUT_CLASSIFICATION	6.59981421615859E-5	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9939562365132618	WITHOUT_CLASSIFICATION	0.006043763486738268	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999402744229549	WITHOUT_CLASSIFICATION	5.9725577045177674E-5	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9932695732501813	WITHOUT_CLASSIFICATION	0.006730426749818745	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9997799756143138	WITHOUT_CLASSIFICATION	2.2002438568623572E-4	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9999995172450378	WITHOUT_CLASSIFICATION	4.827549623181731E-7	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999981875776071	WITHOUT_CLASSIFICATION	1.8124223929989868E-6	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.996043045776958	DESIGN	0.003956954223041971	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999838232598643	WITHOUT_CLASSIFICATION	1.6176740135607383E-5	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.999904372009383	WITHOUT_CLASSIFICATION	9.562799061706093E-5	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999978949828313	WITHOUT_CLASSIFICATION	2.105017168594148E-6	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999992209524511	WITHOUT_CLASSIFICATION	7.79047548861961E-7	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9996889677087255	WITHOUT_CLASSIFICATION	3.11032291274532E-4	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.999965931330852	WITHOUT_CLASSIFICATION	3.406866914805492E-5	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9904453069956209	WITHOUT_CLASSIFICATION	0.009554693004379026	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998880758792501	WITHOUT_CLASSIFICATION	1.1192412074996354E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999995805202204	WITHOUT_CLASSIFICATION	4.194797795538761E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999409007237612	WITHOUT_CLASSIFICATION	5.909927623878033E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999838639185958	WITHOUT_CLASSIFICATION	1.613608140415557E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999838639185958	WITHOUT_CLASSIFICATION	1.613608140415557E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999689145612269	WITHOUT_CLASSIFICATION	3.10854387730033E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999689145612269	WITHOUT_CLASSIFICATION	3.10854387730033E-5	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999951316450595	WITHOUT_CLASSIFICATION	4.868354940455147E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999951316450595	WITHOUT_CLASSIFICATION	4.868354940455147E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999996625155357	WITHOUT_CLASSIFICATION	3.3748446429449464E-7	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999380257962	WITHOUT_CLASSIFICATION	6.197420373952537E-8	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999825494255132	WITHOUT_CLASSIFICATION	1.7450574486783557E-5	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999947724797789	WITHOUT_CLASSIFICATION	5.227520221242562E-6	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999618118361	WITHOUT_CLASSIFICATION	3.8188163798779796E-8	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999096334876069	WITHOUT_CLASSIFICATION	9.036651239310223E-5	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999995683139317	WITHOUT_CLASSIFICATION	4.3168606829269065E-7	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9999995466044511	WITHOUT_CLASSIFICATION	4.533955487978048E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996224508663	WITHOUT_CLASSIFICATION	3.7754913378373727E-7	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999996625155357	WITHOUT_CLASSIFICATION	3.3748446429449464E-7	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999380257962	WITHOUT_CLASSIFICATION	6.197420373952537E-8	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999825494255132	WITHOUT_CLASSIFICATION	1.7450574486783557E-5	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999618118361	WITHOUT_CLASSIFICATION	3.8188163798779796E-8	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999096334876069	WITHOUT_CLASSIFICATION	9.036651239310223E-5	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999951743165963	WITHOUT_CLASSIFICATION	4.82568340367092E-6	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999975108670761	WITHOUT_CLASSIFICATION	2.4891329238814815E-6	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997546631743632	WITHOUT_CLASSIFICATION	2.4533682563679886E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997546631743632	WITHOUT_CLASSIFICATION	2.4533682563679886E-4	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9995945444642877	WITHOUT_CLASSIFICATION	4.0545553571221047E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999995252522957	WITHOUT_CLASSIFICATION	4.747477042379614E-7	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999692635829656	WITHOUT_CLASSIFICATION	3.0736417034548264E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999981120654262	WITHOUT_CLASSIFICATION	1.8879345738505495E-6	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999981120654262	WITHOUT_CLASSIFICATION	1.8879345738505495E-6	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999905923011523	WITHOUT_CLASSIFICATION	9.407698847684913E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999447650266714	WITHOUT_CLASSIFICATION	5.523497332859125E-5	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999968489099272	WITHOUT_CLASSIFICATION	3.1510900727897987E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999989203842397	WITHOUT_CLASSIFICATION	1.0796157602528408E-6	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999486744190312	WITHOUT_CLASSIFICATION	5.132558096880125E-5	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.8255448194143511	WITHOUT_CLASSIFICATION	0.174455180585649	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999985972173695	WITHOUT_CLASSIFICATION	1.4027826305446287E-6	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.999369986558674	WITHOUT_CLASSIFICATION	6.30013441326053E-4	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999848852138973	WITHOUT_CLASSIFICATION	1.511478610269535E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998692163476194	WITHOUT_CLASSIFICATION	1.3078365238061924E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999915235742968	WITHOUT_CLASSIFICATION	8.47642570320151E-5	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999905923011523	WITHOUT_CLASSIFICATION	9.407698847684913E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999447650266714	WITHOUT_CLASSIFICATION	5.523497332859125E-5	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999989203842397	WITHOUT_CLASSIFICATION	1.0796157602528408E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999981534071499	WITHOUT_CLASSIFICATION	1.8465928500350317E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999692635829656	WITHOUT_CLASSIFICATION	3.0736417034548264E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999692635829656	WITHOUT_CLASSIFICATION	3.0736417034548264E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999965853109523	WITHOUT_CLASSIFICATION	3.4146890476953955E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999965853109523	WITHOUT_CLASSIFICATION	3.4146890476953955E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999978173093956	WITHOUT_CLASSIFICATION	2.182690604435028E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999978173093956	WITHOUT_CLASSIFICATION	2.182690604435028E-6	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999984401436967	WITHOUT_CLASSIFICATION	1.559856303327051E-6	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999989448290586	WITHOUT_CLASSIFICATION	1.05517094138364E-6	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999889914305883	WITHOUT_CLASSIFICATION	1.1008569411781669E-5	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999970149219677	WITHOUT_CLASSIFICATION	2.985078032278111E-6	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999767730384744	WITHOUT_CLASSIFICATION	2.32269615255764E-5	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999984302450949	WITHOUT_CLASSIFICATION	1.5697549050303308E-6	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999784193620498	WITHOUT_CLASSIFICATION	2.158063795020371E-4	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9957547116469464	WITHOUT_CLASSIFICATION	0.004245288353053619	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999541832312	WITHOUT_CLASSIFICATION	4.581676878466004E-8	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999958623280959	WITHOUT_CLASSIFICATION	4.1376719040986005E-6	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999655743473838	WITHOUT_CLASSIFICATION	3.442565261613198E-5	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999980216007416	WITHOUT_CLASSIFICATION	1.9783992584514263E-6	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999864469704929	WITHOUT_CLASSIFICATION	1.3553029507038962E-5	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999400797129	WITHOUT_CLASSIFICATION	5.992028711953806E-8	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999413707927	WITHOUT_CLASSIFICATION	5.862920736222389E-8	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999880752884143	WITHOUT_CLASSIFICATION	1.19247115857922E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.999988969382673	WITHOUT_CLASSIFICATION	1.1030617326932021E-5	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999998693050053	WITHOUT_CLASSIFICATION	1.306949947365836E-7	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999981687286738	WITHOUT_CLASSIFICATION	1.8312713262390042E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999985972173695	WITHOUT_CLASSIFICATION	1.4027826305446287E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999848852138973	WITHOUT_CLASSIFICATION	1.511478610269535E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999897247491778	WITHOUT_CLASSIFICATION	1.027525082218341E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999929061859176	WITHOUT_CLASSIFICATION	7.09381408234435E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999929061859176	WITHOUT_CLASSIFICATION	7.09381408234435E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999981534071499	WITHOUT_CLASSIFICATION	1.8465928500350317E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999692635829656	WITHOUT_CLASSIFICATION	3.0736417034548264E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999965853109523	WITHOUT_CLASSIFICATION	3.4146890476953955E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999978173093956	WITHOUT_CLASSIFICATION	2.182690604435028E-6	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999971434617615	WITHOUT_CLASSIFICATION	2.8565382383851676E-6	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999312664963694	WITHOUT_CLASSIFICATION	6.873350363060493E-5	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.999996344152157	WITHOUT_CLASSIFICATION	3.6558478430407006E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.593104938033138	WITHOUT_CLASSIFICATION	0.40689506196686204	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9994269739505507	WITHOUT_CLASSIFICATION	5.730260494491928E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9994269739505507	WITHOUT_CLASSIFICATION	5.730260494491928E-4	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999985087114901	WITHOUT_CLASSIFICATION	1.4912885099328348E-6	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999985554957386	WITHOUT_CLASSIFICATION	1.4445042613548323E-6	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999898859658903	WITHOUT_CLASSIFICATION	1.0114034109650676E-5	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999983677673256	WITHOUT_CLASSIFICATION	1.6322326743090744E-6	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999950033880973	WITHOUT_CLASSIFICATION	4.996611902695471E-6	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999950033880973	WITHOUT_CLASSIFICATION	4.996611902695471E-6	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9995057809856853	WITHOUT_CLASSIFICATION	4.942190143147707E-4	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999585045832365	WITHOUT_CLASSIFICATION	4.149541676344222E-5	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9990220024773137	WITHOUT_CLASSIFICATION	9.779975226864228E-4	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9953284415098229	WITHOUT_CLASSIFICATION	0.004671558490177045	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999649790949879	WITHOUT_CLASSIFICATION	3.502090501207328E-5	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9997583705342302	WITHOUT_CLASSIFICATION	2.4162946576985393E-4	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999784275309407	WITHOUT_CLASSIFICATION	2.1572469059307037E-5	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999829275856632	WITHOUT_CLASSIFICATION	1.7072414336823703E-5	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9956737899540917	WITHOUT_CLASSIFICATION	0.004326210045908337	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999860432188248	WITHOUT_CLASSIFICATION	1.3956781175258467E-5	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9996982188989079	WITHOUT_CLASSIFICATION	3.0178110109220523E-4	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9995471578370323	WITHOUT_CLASSIFICATION	4.528421629676683E-4	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999993236734761	WITHOUT_CLASSIFICATION	6.763265237597829E-7	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999995710705254	WITHOUT_CLASSIFICATION	4.289294746508915E-7	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999638124684878	WITHOUT_CLASSIFICATION	3.618753151227476E-5	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9992182620676137	WITHOUT_CLASSIFICATION	7.817379323864185E-4	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9998012519139933	WITHOUT_CLASSIFICATION	1.987480860067929E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999960526810223	WITHOUT_CLASSIFICATION	3.947318977633921E-6	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999935350653576	WITHOUT_CLASSIFICATION	6.4649346424187915E-6	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999997027687847	WITHOUT_CLASSIFICATION	2.9723121520268157E-7	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999490948947698	WITHOUT_CLASSIFICATION	5.090510523014234E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999914251741123	WITHOUT_CLASSIFICATION	8.574825887761144E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999914251741123	WITHOUT_CLASSIFICATION	8.574825887761144E-6	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9995889194264052	WITHOUT_CLASSIFICATION	4.110805735948495E-4	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999886446312194	WITHOUT_CLASSIFICATION	1.135536878056271E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999999388592471	WITHOUT_CLASSIFICATION	6.114075290507002E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999999388592471	WITHOUT_CLASSIFICATION	6.114075290507002E-7	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.8562879529406071	DESIGN	0.14371204705939294	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999852428813222	WITHOUT_CLASSIFICATION	1.4757118677693208E-5	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999579625703175	WITHOUT_CLASSIFICATION	4.203742968236401E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9993526742080497	WITHOUT_CLASSIFICATION	6.473257919502507E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9993526742080497	WITHOUT_CLASSIFICATION	6.473257919502507E-4	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9983365790867553	WITHOUT_CLASSIFICATION	0.0016634209132447516	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999478932584	WITHOUT_CLASSIFICATION	5.210674171767012E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999998561910611	WITHOUT_CLASSIFICATION	1.4380893888667361E-7	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999529014315	WITHOUT_CLASSIFICATION	4.709856841316961E-8	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9995746193654377	WITHOUT_CLASSIFICATION	4.253806345623587E-4	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999852142357339	WITHOUT_CLASSIFICATION	1.4785764265984957E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999419992926751	WITHOUT_CLASSIFICATION	5.800070732483716E-5	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999971303666756	WITHOUT_CLASSIFICATION	2.8696333243744603E-6	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999991328201275	WITHOUT_CLASSIFICATION	8.671798723636765E-7	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.998779555325022	WITHOUT_CLASSIFICATION	0.0012204446749779767	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999998452310604	WITHOUT_CLASSIFICATION	1.5476893961353685E-7	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999957076182592	WITHOUT_CLASSIFICATION	4.292381740802253E-6	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999767211598567	WITHOUT_CLASSIFICATION	2.3278840143332026E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999657504522158	WITHOUT_CLASSIFICATION	3.4249547784212216E-4	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.97683057621186	WITHOUT_CLASSIFICATION	0.02316942378814008	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999986128733659	WITHOUT_CLASSIFICATION	1.3871266340849956E-6	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999971402971625	WITHOUT_CLASSIFICATION	2.8597028374978647E-6	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999979701966678	WITHOUT_CLASSIFICATION	2.0298033321454083E-6	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999807506208807	WITHOUT_CLASSIFICATION	1.9249379119352568E-5	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999938298680346	WITHOUT_CLASSIFICATION	6.17013196546982E-6	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999908876678885	WITHOUT_CLASSIFICATION	9.112332111567153E-6	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999929380468293	WITHOUT_CLASSIFICATION	7.06195317072303E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.99999508615655	WITHOUT_CLASSIFICATION	4.913843449997587E-6	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999763576469619	WITHOUT_CLASSIFICATION	2.3642353038082222E-5	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999946374796966	WITHOUT_CLASSIFICATION	5.362520303442789E-6	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999624871212683	WITHOUT_CLASSIFICATION	3.7512878731644465E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999925842873295	WITHOUT_CLASSIFICATION	7.415712670476767E-6	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999993111653558	WITHOUT_CLASSIFICATION	6.888346441275304E-7	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999969657227824	WITHOUT_CLASSIFICATION	3.03427721748129E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999953363007718	WITHOUT_CLASSIFICATION	4.6636992282224225E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999898681398456	WITHOUT_CLASSIFICATION	1.0131860154369652E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999657504522158	WITHOUT_CLASSIFICATION	3.4249547784212216E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999993111653558	WITHOUT_CLASSIFICATION	6.888346441275304E-7	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999969657227824	WITHOUT_CLASSIFICATION	3.03427721748129E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999898681398456	WITHOUT_CLASSIFICATION	1.0131860154369652E-5	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.999750331050053	WITHOUT_CLASSIFICATION	2.4966894994698195E-4	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999680238910291	WITHOUT_CLASSIFICATION	3.1976108970879724E-5	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999749803195098	WITHOUT_CLASSIFICATION	2.5019680490219538E-5	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999995657559485	WITHOUT_CLASSIFICATION	4.3424405150049073E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999878057631164	WITHOUT_CLASSIFICATION	1.2194236883520309E-5	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999962237674433	WITHOUT_CLASSIFICATION	3.7762325566790666E-6	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999992091702943	WITHOUT_CLASSIFICATION	7.908297057440102E-7	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999698983498143	WITHOUT_CLASSIFICATION	3.0101650185707535E-5	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999991567785765	WITHOUT_CLASSIFICATION	8.432214234111807E-7	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9930901247571063	WITHOUT_CLASSIFICATION	0.0069098752428936655	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9998675667415582	WITHOUT_CLASSIFICATION	1.3243325844177918E-4	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9998675667415582	WITHOUT_CLASSIFICATION	1.3243325844177918E-4	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999970589125174	WITHOUT_CLASSIFICATION	2.941087482508426E-6	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999570257736	WITHOUT_CLASSIFICATION	4.2974226299947936E-8	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999282465636	WITHOUT_CLASSIFICATION	7.175343643131397E-8	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999635447409733	WITHOUT_CLASSIFICATION	3.645525902675951E-5	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999978984492243	WITHOUT_CLASSIFICATION	2.1015507757552237E-6	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999978106323474	WITHOUT_CLASSIFICATION	2.1893676525216627E-6	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9995884752076938	WITHOUT_CLASSIFICATION	4.115247923061628E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999482434280715	WITHOUT_CLASSIFICATION	5.17565719284885E-4	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999850817162531	WITHOUT_CLASSIFICATION	1.4918283746788591E-5	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999971419665128	WITHOUT_CLASSIFICATION	2.858033487188459E-6	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.999993668120977	WITHOUT_CLASSIFICATION	6.331879022887399E-6	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999962253799548	WITHOUT_CLASSIFICATION	3.7746200453059466E-6	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999040926535	WITHOUT_CLASSIFICATION	9.59073464848617E-8	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999997494695588	WITHOUT_CLASSIFICATION	2.5053044120082205E-7	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999996028265625	WITHOUT_CLASSIFICATION	3.9717343748566056E-7	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999427769655597	WITHOUT_CLASSIFICATION	5.72230344404118E-5	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999917070920984	WITHOUT_CLASSIFICATION	8.292907901588124E-6	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.999997854097962	WITHOUT_CLASSIFICATION	2.145902037941917E-6	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9999984604682004	WITHOUT_CLASSIFICATION	1.5395317995206702E-6	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999849162601254	WITHOUT_CLASSIFICATION	1.5083739874673664E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999947688804235	WITHOUT_CLASSIFICATION	5.2311195765008155E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.999998533088503	WITHOUT_CLASSIFICATION	1.4669114970065446E-6	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999996948367018	WITHOUT_CLASSIFICATION	3.051632982162344E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999959564220215	WITHOUT_CLASSIFICATION	4.043577978545045E-6	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999912533856014	WITHOUT_CLASSIFICATION	8.74661439863302E-6	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999990249507461	WITHOUT_CLASSIFICATION	9.750492538280552E-7	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9975233294663816	WITHOUT_CLASSIFICATION	0.0024766705336183538	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999933896137569	WITHOUT_CLASSIFICATION	6.610386243120592E-6	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9999982854625046	WITHOUT_CLASSIFICATION	1.714537495360715E-6	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999981710921859	WITHOUT_CLASSIFICATION	1.8289078140961447E-6	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999960691442942	WITHOUT_CLASSIFICATION	3.930855705763156E-6	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999988502780986	WITHOUT_CLASSIFICATION	1.1497219013463877E-6	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999883317702625	WITHOUT_CLASSIFICATION	1.1668229737493863E-5	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9997963551835735	WITHOUT_CLASSIFICATION	2.0364481642644116E-4	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999856527131218	WITHOUT_CLASSIFICATION	1.434728687826052E-5	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999796178434962	WITHOUT_CLASSIFICATION	2.0382156503710997E-5	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999906571453646	WITHOUT_CLASSIFICATION	9.342854635487623E-6	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9998845277973556	WITHOUT_CLASSIFICATION	1.1547220264441792E-4	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999994471652969	WITHOUT_CLASSIFICATION	5.528347031685135E-7	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999956822249739	WITHOUT_CLASSIFICATION	4.317775026093853E-6	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999853578613155	WITHOUT_CLASSIFICATION	1.4642138684423738E-5	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9776622586056973	WITHOUT_CLASSIFICATION	0.022337741394302633	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9999823933262214	WITHOUT_CLASSIFICATION	1.7606673778681906E-5	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999383809966076	WITHOUT_CLASSIFICATION	6.161900339244856E-5	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999883085944361	WITHOUT_CLASSIFICATION	1.1691405563904929E-5	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9998691708173567	WITHOUT_CLASSIFICATION	1.3082918264331863E-4	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.999935382741794	WITHOUT_CLASSIFICATION	6.461725820594909E-5	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999605863686782	WITHOUT_CLASSIFICATION	3.941363132174053E-5	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9996623350008039	WITHOUT_CLASSIFICATION	3.376649991961458E-4	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999813639532034	WITHOUT_CLASSIFICATION	1.8636046796658727E-5	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999983423250207	WITHOUT_CLASSIFICATION	1.657674979199197E-6	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999988587778892	WITHOUT_CLASSIFICATION	1.1412221108560781E-6	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999529269128679	WITHOUT_CLASSIFICATION	4.70730871322557E-5	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999955829705798	WITHOUT_CLASSIFICATION	4.417029420197102E-6	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999799291034964	WITHOUT_CLASSIFICATION	2.007089650353116E-5	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999731653859812	WITHOUT_CLASSIFICATION	2.6834614018806592E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999814098351	WITHOUT_CLASSIFICATION	1.8590164868980642E-8	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999998573553478	WITHOUT_CLASSIFICATION	1.4264465218066572E-7	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9987369936760514	WITHOUT_CLASSIFICATION	0.0012630063239486317	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999199283522123	WITHOUT_CLASSIFICATION	8.007164778763744E-5	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999199283522123	WITHOUT_CLASSIFICATION	8.007164778763744E-5	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999996430587069	WITHOUT_CLASSIFICATION	3.5694129309901936E-6	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.999949568620114	WITHOUT_CLASSIFICATION	5.0431379886056015E-5	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999972499847348	WITHOUT_CLASSIFICATION	2.7500152652847976E-6	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999965121651531	WITHOUT_CLASSIFICATION	3.4878348468369417E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999996129391995	WITHOUT_CLASSIFICATION	3.870608005200131E-7	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.999407736737456	WITHOUT_CLASSIFICATION	5.922632625439505E-4	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9998876556724907	WITHOUT_CLASSIFICATION	1.1234432750924702E-4	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9982651265994746	WITHOUT_CLASSIFICATION	0.0017348734005253304	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999978914843013	WITHOUT_CLASSIFICATION	2.108515698698574E-6	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999998355397309	WITHOUT_CLASSIFICATION	1.6446026904836227E-7	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999900864027174	WITHOUT_CLASSIFICATION	9.913597282582515E-6	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999933902553878	WITHOUT_CLASSIFICATION	6.609744612146158E-6	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999646128169387	WITHOUT_CLASSIFICATION	3.538718306121324E-5	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.999996230742542	WITHOUT_CLASSIFICATION	3.76925745799189E-6	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999879197538397	WITHOUT_CLASSIFICATION	1.2080246160270144E-5	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999978478218758	WITHOUT_CLASSIFICATION	2.1521781241636855E-6	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999984325322238	WITHOUT_CLASSIFICATION	1.5674677761785832E-6	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999930576652949	WITHOUT_CLASSIFICATION	6.942334705067959E-6	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999966513844126	WITHOUT_CLASSIFICATION	3.3486155873862745E-6	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.999202618401021	WITHOUT_CLASSIFICATION	7.97381598978911E-4	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999943029046601	WITHOUT_CLASSIFICATION	5.697095339830352E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999979133285587	WITHOUT_CLASSIFICATION	2.0866714413066614E-6	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999822272663258	WITHOUT_CLASSIFICATION	1.777273367418589E-5	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9988285150118907	WITHOUT_CLASSIFICATION	0.0011714849881092491	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999995147073399	WITHOUT_CLASSIFICATION	4.8529266001363E-7	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9993604217980647	WITHOUT_CLASSIFICATION	6.395782019352695E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.999931526954778	WITHOUT_CLASSIFICATION	6.847304522202402E-5	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999990612217466	WITHOUT_CLASSIFICATION	9.387782533894525E-7	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999978055003139	WITHOUT_CLASSIFICATION	2.194499686194868E-6	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9490934280458573	DESIGN	0.05090657195414263	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999940897868905	WITHOUT_CLASSIFICATION	5.910213109488238E-6	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999954707602143	WITHOUT_CLASSIFICATION	4.529239785624462E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999979484892868	WITHOUT_CLASSIFICATION	2.0515107132380967E-6	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999943341932057	WITHOUT_CLASSIFICATION	5.665806794303552E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999979484892868	WITHOUT_CLASSIFICATION	2.0515107132380967E-6	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999913928686146	WITHOUT_CLASSIFICATION	8.607131385311336E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999286127117656	WITHOUT_CLASSIFICATION	7.138728823435819E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999286127117656	WITHOUT_CLASSIFICATION	7.138728823435819E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999286127117656	WITHOUT_CLASSIFICATION	7.138728823435819E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999992342799524	WITHOUT_CLASSIFICATION	7.65720047603065E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999992342799524	WITHOUT_CLASSIFICATION	7.65720047603065E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.985948985899303	WITHOUT_CLASSIFICATION	0.014051014100696911	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999991210283645	WITHOUT_CLASSIFICATION	8.789716354502466E-7	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9993476343155653	WITHOUT_CLASSIFICATION	6.523656844346732E-4	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9997976456184461	WITHOUT_CLASSIFICATION	2.023543815538185E-4	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999783953861707	WITHOUT_CLASSIFICATION	2.1604613829205647E-5	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999742327056353	WITHOUT_CLASSIFICATION	2.576729436458394E-5	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999997078016577	WITHOUT_CLASSIFICATION	2.9219834225013E-7	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.99999222328687	WITHOUT_CLASSIFICATION	7.776713129990503E-6	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999298138616682	WITHOUT_CLASSIFICATION	7.018613833173159E-5	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999993223377721	WITHOUT_CLASSIFICATION	6.77662227846359E-7	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.999998441109855	WITHOUT_CLASSIFICATION	1.5588901450304527E-6	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999915222272923	WITHOUT_CLASSIFICATION	8.477772707845624E-6	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999921629760117	WITHOUT_CLASSIFICATION	7.837023988219502E-6	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999966343782475	WITHOUT_CLASSIFICATION	3.365621752546843E-6	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999830620433197	WITHOUT_CLASSIFICATION	1.693795668026425E-5	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999910653917943	WITHOUT_CLASSIFICATION	8.934608205707392E-6	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9997912927044582	WITHOUT_CLASSIFICATION	2.087072955418172E-4	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999950058610833	WITHOUT_CLASSIFICATION	4.994138916714373E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999950058610833	WITHOUT_CLASSIFICATION	4.994138916714373E-6	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999955997195261	WITHOUT_CLASSIFICATION	4.400280473830207E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999968293143209	WITHOUT_CLASSIFICATION	3.1706856791522082E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999968293143209	WITHOUT_CLASSIFICATION	3.1706856791522082E-6	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.998577906010937	WITHOUT_CLASSIFICATION	0.0014220939890630675	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999998336820677	WITHOUT_CLASSIFICATION	1.663179322677112E-7	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999481580874028	WITHOUT_CLASSIFICATION	5.18419125973037E-5	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999974525062398	WITHOUT_CLASSIFICATION	2.547493760267267E-6	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999897444192476	WITHOUT_CLASSIFICATION	1.0255580752510026E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999993332611548	WITHOUT_CLASSIFICATION	6.667388452291634E-7	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999995785497441	WITHOUT_CLASSIFICATION	4.214502558880595E-7	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999978605497625	WITHOUT_CLASSIFICATION	2.1394502374859693E-6	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999977319096555	WITHOUT_CLASSIFICATION	2.2680903444747116E-6	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9995783087988008	WITHOUT_CLASSIFICATION	4.2169120119918554E-4	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9987215772544893	WITHOUT_CLASSIFICATION	0.0012784227455106515	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999809230195569	WITHOUT_CLASSIFICATION	1.9076980443145197E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999906016590745	WITHOUT_CLASSIFICATION	9.39834092554186E-6	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999238649640735	WITHOUT_CLASSIFICATION	7.613503592649488E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.99999222328687	WITHOUT_CLASSIFICATION	7.776713129990503E-6	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998742832532236	WITHOUT_CLASSIFICATION	1.2571674677638362E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999960530025677	WITHOUT_CLASSIFICATION	3.9469974323713186E-6	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999810022085178	WITHOUT_CLASSIFICATION	1.899779148215735E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999810022085178	WITHOUT_CLASSIFICATION	1.899779148215735E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9993338054537892	WITHOUT_CLASSIFICATION	6.661945462107187E-4	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999277115205805	WITHOUT_CLASSIFICATION	7.228847941947367E-5	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999793000306835	WITHOUT_CLASSIFICATION	2.069996931651007E-5	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999902439261401	WITHOUT_CLASSIFICATION	9.756073859932296E-6	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999924112745616	WITHOUT_CLASSIFICATION	7.588725438326419E-6	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999998427752193	WITHOUT_CLASSIFICATION	1.5722478069269756E-6	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999937122277818	WITHOUT_CLASSIFICATION	6.287772218268682E-6	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999825162222961	WITHOUT_CLASSIFICATION	1.748377770403672E-5	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9381531744119026	WITHOUT_CLASSIFICATION	0.06184682558809734	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9991834976061735	WITHOUT_CLASSIFICATION	8.165023938264254E-4	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999902350433929	WITHOUT_CLASSIFICATION	9.764956607045198E-6	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9962767049380277	WITHOUT_CLASSIFICATION	0.0037232950619723788	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.7827938852613298	WITHOUT_CLASSIFICATION	0.2172061147386703	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999996488809855	WITHOUT_CLASSIFICATION	3.511190145048226E-7	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998914927276583	WITHOUT_CLASSIFICATION	1.085072723417561E-4	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.8349742969724623	WITHOUT_CLASSIFICATION	0.16502570302753766	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9995751354844374	WITHOUT_CLASSIFICATION	4.2486451556260455E-4	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999793971747406	WITHOUT_CLASSIFICATION	2.0602825259415096E-5	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999901045331294	WITHOUT_CLASSIFICATION	9.895466870565473E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999930174926134	WITHOUT_CLASSIFICATION	6.982507386604537E-6	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.999998658747631	WITHOUT_CLASSIFICATION	1.341252368912452E-6	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999990040536928	WITHOUT_CLASSIFICATION	9.95946307151315E-7	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999899161961638	WITHOUT_CLASSIFICATION	1.0083803836103362E-5	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9967296769578887	WITHOUT_CLASSIFICATION	0.0032703230421113837	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999761559624861	WITHOUT_CLASSIFICATION	2.3844037513911442E-5	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999954730529527	WITHOUT_CLASSIFICATION	4.5269470472900104E-6	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999978437646793	WITHOUT_CLASSIFICATION	2.1562353206901493E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999998223909293	WITHOUT_CLASSIFICATION	1.7760907070093133E-7	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999984580919886	WITHOUT_CLASSIFICATION	1.5419080114429353E-6	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999894141957165	WITHOUT_CLASSIFICATION	1.0585804283419354E-5	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9911127887667703	WITHOUT_CLASSIFICATION	0.00888721123322978	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9998550537031009	WITHOUT_CLASSIFICATION	1.4494629689906335E-4	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999697674289327	WITHOUT_CLASSIFICATION	3.0232571067205664E-5	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999812154630641	WITHOUT_CLASSIFICATION	1.878453693592613E-5	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999875200327221	WITHOUT_CLASSIFICATION	1.2479967277901236E-4	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.999985299451954	WITHOUT_CLASSIFICATION	1.4700548045979131E-5	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999998223909293	WITHOUT_CLASSIFICATION	1.7760907070093133E-7	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999974303643114	WITHOUT_CLASSIFICATION	2.569635688693695E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999875200327221	WITHOUT_CLASSIFICATION	1.2479967277901236E-4	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9985070849048749	WITHOUT_CLASSIFICATION	0.0014929150951250275	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999985832544962	WITHOUT_CLASSIFICATION	1.4167455038191587E-6	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999526474737	WITHOUT_CLASSIFICATION	4.735252636778905E-8	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999811964179727	WITHOUT_CLASSIFICATION	1.8803582027397194E-5	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9983890982697456	WITHOUT_CLASSIFICATION	0.0016109017302544108	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9989750133315306	WITHOUT_CLASSIFICATION	0.001024986668469453	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9989750133315306	WITHOUT_CLASSIFICATION	0.001024986668469453	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998059077972773	WITHOUT_CLASSIFICATION	1.94092202722667E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999951583285367	WITHOUT_CLASSIFICATION	4.841671463386132E-6	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999921493247572	WITHOUT_CLASSIFICATION	7.850675242683744E-6	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999921493247572	WITHOUT_CLASSIFICATION	7.850675242683744E-6	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999391183032321	WITHOUT_CLASSIFICATION	6.0881696767920815E-5	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997948351434637	WITHOUT_CLASSIFICATION	2.051648565364464E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9997154003545187	WITHOUT_CLASSIFICATION	2.845996454813276E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9997154003545187	WITHOUT_CLASSIFICATION	2.845996454813276E-4	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999808993080597	WITHOUT_CLASSIFICATION	1.910069194026474E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.999996391439057	WITHOUT_CLASSIFICATION	3.608560942987709E-6	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999985848548991	WITHOUT_CLASSIFICATION	1.4151451008645753E-6	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999854708942618	WITHOUT_CLASSIFICATION	1.452910573833126E-5	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9881370589055554	WITHOUT_CLASSIFICATION	0.011862941094444723	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999987127328301	WITHOUT_CLASSIFICATION	1.2872671698577972E-6	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999993908459364	WITHOUT_CLASSIFICATION	6.091540636982735E-7	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9985628574593827	WITHOUT_CLASSIFICATION	0.0014371425406173727	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999898054017639	WITHOUT_CLASSIFICATION	1.019459823612963E-5	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9997979412424425	WITHOUT_CLASSIFICATION	2.0205875755764492E-4	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9999637372093119	WITHOUT_CLASSIFICATION	3.6262790688188405E-5	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999819578637102	WITHOUT_CLASSIFICATION	1.80421362897224E-5	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999178111054	WITHOUT_CLASSIFICATION	8.218889466514736E-8	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999922659199301	WITHOUT_CLASSIFICATION	7.734080069873541E-6	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.999902712548414	WITHOUT_CLASSIFICATION	9.728745158597266E-5	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999920769579752	WITHOUT_CLASSIFICATION	7.923042024746954E-6	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999892882087454	WITHOUT_CLASSIFICATION	1.0711791254488386E-5	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999932167348372	WITHOUT_CLASSIFICATION	6.78326516276664E-6	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9998896968817925	WITHOUT_CLASSIFICATION	1.1030311820745818E-4	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999816271164941	WITHOUT_CLASSIFICATION	1.837288350592458E-5	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999757106512028	WITHOUT_CLASSIFICATION	2.4289348797059893E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999990771126969	WITHOUT_CLASSIFICATION	9.228873032457382E-7	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9994491252828898	WITHOUT_CLASSIFICATION	5.508747171103024E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999838105946887	WITHOUT_CLASSIFICATION	1.6189405311359792E-5	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999954816880581	WITHOUT_CLASSIFICATION	4.518311941893071E-6	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999897211480236	WITHOUT_CLASSIFICATION	1.0278851976299879E-5	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9998765284694223	WITHOUT_CLASSIFICATION	1.2347153057765492E-4	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999943752785537	WITHOUT_CLASSIFICATION	5.6247214462173815E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9992452782341924	WITHOUT_CLASSIFICATION	7.547217658076679E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9992452782341924	WITHOUT_CLASSIFICATION	7.547217658076679E-4	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9792451498206349	WITHOUT_CLASSIFICATION	0.020754850179365108	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999907412078622	WITHOUT_CLASSIFICATION	9.258792137748211E-6	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.999991706962239	WITHOUT_CLASSIFICATION	8.293037760868786E-6	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999615193221619	WITHOUT_CLASSIFICATION	3.8480677838039E-5	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9995974659729683	WITHOUT_CLASSIFICATION	4.025340270317386E-4	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9999897886168211	WITHOUT_CLASSIFICATION	1.021138317889819E-5	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9980460700887072	WITHOUT_CLASSIFICATION	0.0019539299112928798	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999868689958005	WITHOUT_CLASSIFICATION	1.3131004199579102E-5	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999849498873254	WITHOUT_CLASSIFICATION	1.5050112674550381E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999998943569766	WITHOUT_CLASSIFICATION	1.0564302337670702E-7	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999997674234572	WITHOUT_CLASSIFICATION	2.3257654283142275E-7	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999048533841048	WITHOUT_CLASSIFICATION	9.514661589522389E-5	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9995181094613467	WITHOUT_CLASSIFICATION	4.8189053865329727E-4	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9990986121100192	WITHOUT_CLASSIFICATION	9.013878899809386E-4	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999615124798865	WITHOUT_CLASSIFICATION	3.84875201134864E-5	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9998738716310193	WITHOUT_CLASSIFICATION	1.2612836898073107E-4	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9989318124852582	WITHOUT_CLASSIFICATION	0.00106818751474179	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9988800449259668	WITHOUT_CLASSIFICATION	0.0011199550740332053	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9998814336288184	WITHOUT_CLASSIFICATION	1.1856637118155183E-4	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999967666967786	WITHOUT_CLASSIFICATION	3.233303221432834E-6	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999081131519697	WITHOUT_CLASSIFICATION	9.188684803031148E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999726449774573	WITHOUT_CLASSIFICATION	2.7355022542803156E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999290831391573	WITHOUT_CLASSIFICATION	7.091686084259996E-5	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999942804496786	WITHOUT_CLASSIFICATION	5.7195503212776616E-6	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999996188473467	WITHOUT_CLASSIFICATION	3.811526533686505E-7	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998902227132187	WITHOUT_CLASSIFICATION	1.0977728678127259E-4	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999966639369228	WITHOUT_CLASSIFICATION	3.336063077346682E-6	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9992850016130231	WITHOUT_CLASSIFICATION	7.149983869767992E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.999988814440218	WITHOUT_CLASSIFICATION	1.1185559782018433E-5	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999793034015277	WITHOUT_CLASSIFICATION	2.0696598472168012E-5	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999802545819331	WITHOUT_CLASSIFICATION	1.9745418066930793E-5	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999924185748512	WITHOUT_CLASSIFICATION	7.58142514876856E-6	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999686851628283	WITHOUT_CLASSIFICATION	3.131483717160373E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.999979751522086	WITHOUT_CLASSIFICATION	2.0248477914101265E-5	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999888319808791	WITHOUT_CLASSIFICATION	1.1168019120920766E-5	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999791577009339	WITHOUT_CLASSIFICATION	2.0842299066170576E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999683865951	WITHOUT_CLASSIFICATION	3.16134049000489E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9953110724716658	WITHOUT_CLASSIFICATION	0.0046889275283341116	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999542022548	WITHOUT_CLASSIFICATION	4.579774507444562E-8	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999999267855892	WITHOUT_CLASSIFICATION	7.321441074715254E-8	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999958327915849	WITHOUT_CLASSIFICATION	4.167208415159162E-6	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9990445872476946	WITHOUT_CLASSIFICATION	9.554127523052647E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999936150930463	WITHOUT_CLASSIFICATION	6.384906953658352E-6	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999936150930463	WITHOUT_CLASSIFICATION	6.384906953658352E-6	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9998609553846318	WITHOUT_CLASSIFICATION	1.3904461536820692E-4	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999455406951216	WITHOUT_CLASSIFICATION	5.4459304878252684E-5	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999981698923338	WITHOUT_CLASSIFICATION	1.830107666135422E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999872131718476	WITHOUT_CLASSIFICATION	1.2786828152497817E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998880758792501	WITHOUT_CLASSIFICATION	1.1192412074996354E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999995805202204	WITHOUT_CLASSIFICATION	4.194797795538761E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998619320942227	WITHOUT_CLASSIFICATION	1.3806790577735543E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999982786979119	WITHOUT_CLASSIFICATION	1.7213020880610447E-6	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999998076001407	WITHOUT_CLASSIFICATION	1.9239985925181426E-7	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999903033950241	WITHOUT_CLASSIFICATION	9.696604975779315E-6	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999967228638903	WITHOUT_CLASSIFICATION	3.2771361096017398E-6	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999939735556781	WITHOUT_CLASSIFICATION	6.0264443218968E-6	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999981791908245	WITHOUT_CLASSIFICATION	1.8208091754726253E-6	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999939407813889	WITHOUT_CLASSIFICATION	6.059218611133025E-6	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999815052748049	WITHOUT_CLASSIFICATION	1.8494725195157366E-5	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999994441736247	WITHOUT_CLASSIFICATION	5.558263753448885E-7	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999978731233409	WITHOUT_CLASSIFICATION	2.1268766592366204E-6	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999977403888014	WITHOUT_CLASSIFICATION	2.2596111986332877E-6	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999889156598822	WITHOUT_CLASSIFICATION	1.1084340117784239E-5	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999993540996807	WITHOUT_CLASSIFICATION	6.459003193598658E-7	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999994684495137	WITHOUT_CLASSIFICATION	5.315504863037978E-6	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999978618101536	WITHOUT_CLASSIFICATION	2.1381898464037594E-6	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999991830550141	WITHOUT_CLASSIFICATION	8.169449858560106E-7	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.999998667433833	WITHOUT_CLASSIFICATION	1.332566166988915E-6	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.999988381185583	WITHOUT_CLASSIFICATION	1.1618814416962652E-5	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999210658430907	WITHOUT_CLASSIFICATION	7.893415690930701E-5	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999718725654823	WITHOUT_CLASSIFICATION	2.812743451782989E-5	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999949809948121	WITHOUT_CLASSIFICATION	5.019005187918735E-6	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.999996599988582	WITHOUT_CLASSIFICATION	3.400011417930182E-6	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999874172277062	WITHOUT_CLASSIFICATION	1.2582772293744698E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999758570932291	WITHOUT_CLASSIFICATION	2.414290677084073E-5	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999133359152798	WITHOUT_CLASSIFICATION	8.666408472025855E-5	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.999975462405836	WITHOUT_CLASSIFICATION	2.4537594164013602E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999997470478188	WITHOUT_CLASSIFICATION	2.529521811484315E-7	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9953110724716658	WITHOUT_CLASSIFICATION	0.0046889275283341116	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999948036460341	WITHOUT_CLASSIFICATION	5.196353965876049E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999920854407606	WITHOUT_CLASSIFICATION	7.91455923944972E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999920854407606	WITHOUT_CLASSIFICATION	7.91455923944972E-6	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9217706758148593	WITHOUT_CLASSIFICATION	0.07822932418514075	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9010782720384642	WITHOUT_CLASSIFICATION	0.09892172796153578	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.99991029033255	WITHOUT_CLASSIFICATION	8.970966745003654E-5	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.999983921528059	WITHOUT_CLASSIFICATION	1.607847194097428E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999990983482683	WITHOUT_CLASSIFICATION	9.016517317023135E-7	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999992564902911	WITHOUT_CLASSIFICATION	7.43509708855021E-7	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999998972343377	WITHOUT_CLASSIFICATION	1.0276566233053085E-7	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999990783438029	WITHOUT_CLASSIFICATION	9.216561972621923E-7	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999986691877808	WITHOUT_CLASSIFICATION	1.330812219202816E-6	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999998088380267	WITHOUT_CLASSIFICATION	1.911619732025998E-7	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999983503226091	WITHOUT_CLASSIFICATION	1.6496773909116743E-6	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999980967755916	WITHOUT_CLASSIFICATION	1.903224408340013E-6	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999965891354334	WITHOUT_CLASSIFICATION	3.4108645665825124E-6	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999548824808816	WITHOUT_CLASSIFICATION	4.5117519118491664E-5	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9996378424693875	WITHOUT_CLASSIFICATION	3.6215753061252337E-4	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.986395813714309	WITHOUT_CLASSIFICATION	0.013604186285691168	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999969156713161	WITHOUT_CLASSIFICATION	3.0843286838481733E-6	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999974744302531	WITHOUT_CLASSIFICATION	2.5255697468471458E-6	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999937734796916	WITHOUT_CLASSIFICATION	6.226520308349831E-6	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999991055996621	WITHOUT_CLASSIFICATION	8.944003379098536E-7	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999895063128362	WITHOUT_CLASSIFICATION	1.0493687163824504E-5	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.999986314775914	WITHOUT_CLASSIFICATION	1.3685224086046326E-5	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999999490250064	WITHOUT_CLASSIFICATION	5.097499345822926E-8	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.999995060298194	WITHOUT_CLASSIFICATION	4.93970180608721E-6	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999529751581	WITHOUT_CLASSIFICATION	4.702484191413877E-8	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999983001085524	WITHOUT_CLASSIFICATION	1.6998914474940294E-6	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999776661447	WITHOUT_CLASSIFICATION	2.2333855406329795E-8	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999855339824084	WITHOUT_CLASSIFICATION	1.4466017591609808E-5	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999996520758001	WITHOUT_CLASSIFICATION	3.4792419983887993E-7	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999907364532066	WITHOUT_CLASSIFICATION	9.263546793424923E-6	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9999427806025325	WITHOUT_CLASSIFICATION	5.721939746743918E-5	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999976502058259	WITHOUT_CLASSIFICATION	2.3497941740523176E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999906846373394	WITHOUT_CLASSIFICATION	9.315362660596725E-6	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999997387354472	WITHOUT_CLASSIFICATION	2.6126455274323657E-7	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999993081817187	WITHOUT_CLASSIFICATION	6.918182813817404E-7	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999984960662642	WITHOUT_CLASSIFICATION	1.5039337358461308E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999925241484319	WITHOUT_CLASSIFICATION	7.4758515681476314E-6	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999983001085524	WITHOUT_CLASSIFICATION	1.6998914474940294E-6	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999776661447	WITHOUT_CLASSIFICATION	2.2333855406329795E-8	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999855339824084	WITHOUT_CLASSIFICATION	1.4466017591609808E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999907364532066	WITHOUT_CLASSIFICATION	9.263546793424923E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999996786320415	WITHOUT_CLASSIFICATION	3.21367958443941E-7	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999997034055205	WITHOUT_CLASSIFICATION	2.9659447949417367E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999735721990686	WITHOUT_CLASSIFICATION	2.642780093141044E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999957932494554	WITHOUT_CLASSIFICATION	4.20675054462275E-6	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998555417037746	WITHOUT_CLASSIFICATION	1.4445829622555662E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999945059286895	WITHOUT_CLASSIFICATION	5.494071310437449E-6	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999769194339434	WITHOUT_CLASSIFICATION	2.308056605653788E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999905405973827	WITHOUT_CLASSIFICATION	9.459402617329106E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999878264829724	WITHOUT_CLASSIFICATION	1.2173517027764203E-5	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999985729209998	WITHOUT_CLASSIFICATION	1.4270790001760985E-6	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999999250814851	WITHOUT_CLASSIFICATION	7.491851490418078E-7	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999993252261641	WITHOUT_CLASSIFICATION	6.747738360236184E-7	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999995163957903	WITHOUT_CLASSIFICATION	4.836042096913074E-7	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999998375891349	WITHOUT_CLASSIFICATION	1.6241086511148168E-7	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999964686978391	WITHOUT_CLASSIFICATION	3.5313021609127773E-6	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999978011426064	WITHOUT_CLASSIFICATION	2.1988573935452005E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.999994230987603	WITHOUT_CLASSIFICATION	5.769012396993344E-6	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9998886341373951	WITHOUT_CLASSIFICATION	1.1136586260476472E-4	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999819674190445	WITHOUT_CLASSIFICATION	1.8032580955453723E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999925241484319	WITHOUT_CLASSIFICATION	7.4758515681476314E-6	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999997034055205	WITHOUT_CLASSIFICATION	2.9659447949417367E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999735721990686	WITHOUT_CLASSIFICATION	2.642780093141044E-5	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9998555417037746	WITHOUT_CLASSIFICATION	1.4445829622555662E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999945059286895	WITHOUT_CLASSIFICATION	5.494071310437449E-6	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999769194339434	WITHOUT_CLASSIFICATION	2.308056605653788E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999905405973827	WITHOUT_CLASSIFICATION	9.459402617329106E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.999999252404225	WITHOUT_CLASSIFICATION	7.475957748213552E-7	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999777103110385	WITHOUT_CLASSIFICATION	2.2289688961456336E-5	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999993031596277	WITHOUT_CLASSIFICATION	6.968403723557213E-7	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999488530134	WITHOUT_CLASSIFICATION	5.114698668733575E-8	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999882167993561	WITHOUT_CLASSIFICATION	1.1783200643893673E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999882167993561	WITHOUT_CLASSIFICATION	1.1783200643893673E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999994795804865	WITHOUT_CLASSIFICATION	5.204195134586264E-7	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999920653075791	WITHOUT_CLASSIFICATION	7.934692420972283E-6	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9996858492839686	WITHOUT_CLASSIFICATION	3.141507160313775E-4	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999580477308695	WITHOUT_CLASSIFICATION	4.195226913057236E-5	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999969326915773	WITHOUT_CLASSIFICATION	3.067308422702415E-6	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999976981157676	WITHOUT_CLASSIFICATION	2.3018842325183807E-6	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999989268778146	WITHOUT_CLASSIFICATION	1.0731221854487566E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999997564108863	WITHOUT_CLASSIFICATION	2.435891136820986E-7	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999997026174937	WITHOUT_CLASSIFICATION	2.9738250633818433E-7	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999666033218619	WITHOUT_CLASSIFICATION	3.3396678138109506E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9997512839617086	WITHOUT_CLASSIFICATION	2.48716038291365E-4	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999910073154531	WITHOUT_CLASSIFICATION	8.99268454686328E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999733577286672	WITHOUT_CLASSIFICATION	2.6642271332780747E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999499646484912	WITHOUT_CLASSIFICATION	5.003535150882187E-5	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999996246245988	WITHOUT_CLASSIFICATION	3.753754011877296E-7	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999973523438451	WITHOUT_CLASSIFICATION	2.6476561548848814E-6	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999734173977688	WITHOUT_CLASSIFICATION	2.6582602231190047E-5	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999911857490769	WITHOUT_CLASSIFICATION	8.814250923120399E-6	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999988809769124	WITHOUT_CLASSIFICATION	1.1190230876549536E-6	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9725438748690863	WITHOUT_CLASSIFICATION	0.027456125130913698	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.7737720741532813	DESIGN	0.22622792584671866	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9858445445352244	WITHOUT_CLASSIFICATION	0.01415545546477553	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.993187098941492	WITHOUT_CLASSIFICATION	0.006812901058507993	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9722154445004357	DESIGN	0.027784555499564358	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999835394648882	WITHOUT_CLASSIFICATION	1.6460535111864153E-5	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999792792605797	WITHOUT_CLASSIFICATION	2.0720739420301367E-5	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999995599848389	WITHOUT_CLASSIFICATION	4.400151611402953E-7	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999480971120168	WITHOUT_CLASSIFICATION	5.1902887983205743E-5	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.999994164894638	WITHOUT_CLASSIFICATION	5.8351053619388154E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999835394648882	WITHOUT_CLASSIFICATION	1.6460535111864153E-5	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999792792605797	WITHOUT_CLASSIFICATION	2.0720739420301367E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999499646484912	WITHOUT_CLASSIFICATION	5.003535150882187E-5	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999742966307239	WITHOUT_CLASSIFICATION	2.5703369276131183E-5	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999949823392081	WITHOUT_CLASSIFICATION	5.017660791924489E-6	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999988488193617	WITHOUT_CLASSIFICATION	1.1511806382589318E-6	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9998640436341926	WITHOUT_CLASSIFICATION	1.3595636580754873E-4	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9980825393788411	WITHOUT_CLASSIFICATION	0.001917460621159051	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999999190464819	WITHOUT_CLASSIFICATION	8.095351812903121E-8	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998341858519845	WITHOUT_CLASSIFICATION	1.6581414801546777E-4	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999946067073036	WITHOUT_CLASSIFICATION	5.393292696423486E-6	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999178493773392	WITHOUT_CLASSIFICATION	8.215062266088529E-5	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9986075812735706	WITHOUT_CLASSIFICATION	0.0013924187264293807	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9998384919952275	WITHOUT_CLASSIFICATION	1.6150800477265174E-4	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999995377571679	WITHOUT_CLASSIFICATION	4.6224283212232087E-7	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999991398406828	WITHOUT_CLASSIFICATION	8.601593171733169E-7	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999972585055129	WITHOUT_CLASSIFICATION	2.7414944871129357E-6	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999817579009936	WITHOUT_CLASSIFICATION	1.824209900631925E-5	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999999553480015	WITHOUT_CLASSIFICATION	4.465199851342932E-8	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999999847974832	WITHOUT_CLASSIFICATION	1.5202516797745518E-8	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999807202141837	WITHOUT_CLASSIFICATION	1.9279785816388414E-5	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999953083478	WITHOUT_CLASSIFICATION	4.69165216407157E-9	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999907221651598	WITHOUT_CLASSIFICATION	9.277834840195525E-6	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999378210488	WITHOUT_CLASSIFICATION	6.217895120602626E-8	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999942312804957	WITHOUT_CLASSIFICATION	5.768719504370848E-6	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999938437582699	WITHOUT_CLASSIFICATION	6.1562417301033905E-6	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999924364237013	WITHOUT_CLASSIFICATION	7.563576298753935E-6	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999979367624037	WITHOUT_CLASSIFICATION	2.0632375964354664E-6	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999982834215168	WITHOUT_CLASSIFICATION	1.7165784832822515E-6	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9816759769378869	WITHOUT_CLASSIFICATION	0.018324023062113084	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9776227973053878	WITHOUT_CLASSIFICATION	0.022377202694612172	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.997691834530804	WITHOUT_CLASSIFICATION	0.0023081654691959295	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999183393734266	WITHOUT_CLASSIFICATION	8.166062657343412E-5	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999980166219977	WITHOUT_CLASSIFICATION	1.983378002205485E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999682032671533	WITHOUT_CLASSIFICATION	3.179673284664437E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999682032671533	WITHOUT_CLASSIFICATION	3.179673284664437E-5	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999733577286672	WITHOUT_CLASSIFICATION	2.6642271332780747E-5	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999601846836423	WITHOUT_CLASSIFICATION	3.981531635771372E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999981873002076	WITHOUT_CLASSIFICATION	1.812699792411395E-5	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.999898100159207	WITHOUT_CLASSIFICATION	1.0189984079306831E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9997290002445801	WITHOUT_CLASSIFICATION	2.709997554198792E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9997290002445801	WITHOUT_CLASSIFICATION	2.709997554198792E-4	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999981016176778	WITHOUT_CLASSIFICATION	1.8983823222712654E-6	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9996694425047551	WITHOUT_CLASSIFICATION	3.3055749524482246E-4	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999996184633283	WITHOUT_CLASSIFICATION	3.8153667165773967E-7	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999711864054617	WITHOUT_CLASSIFICATION	2.8813594538344856E-5	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9938904944534102	WITHOUT_CLASSIFICATION	0.00610950554658978	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999029360239807	WITHOUT_CLASSIFICATION	9.706397601935388E-5	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999969813798952	WITHOUT_CLASSIFICATION	3.0186201047036327E-6	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999997186244892	WITHOUT_CLASSIFICATION	2.8137551079596185E-7	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9937860508995605	WITHOUT_CLASSIFICATION	0.006213949100439416	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999542315182733	WITHOUT_CLASSIFICATION	4.576848172668667E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999977243438085	WITHOUT_CLASSIFICATION	2.2756561914912898E-6	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999980680566292	WITHOUT_CLASSIFICATION	1.931943370804648E-6	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999921751969435	WITHOUT_CLASSIFICATION	7.824803056570544E-6	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999283241538979	WITHOUT_CLASSIFICATION	7.167584610220132E-5	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9852448886878746	WITHOUT_CLASSIFICATION	0.014755111312125367	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9861432201128598	WITHOUT_CLASSIFICATION	0.013856779887140186	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999768766495309	WITHOUT_CLASSIFICATION	2.31233504690871E-5	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999768766495309	WITHOUT_CLASSIFICATION	2.31233504690871E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999997980166085	WITHOUT_CLASSIFICATION	2.0198339144472338E-7	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999997980166085	WITHOUT_CLASSIFICATION	2.0198339144472338E-7	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9998332383957911	WITHOUT_CLASSIFICATION	1.6676160420894392E-4	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999940409712458	WITHOUT_CLASSIFICATION	5.959028754265799E-6	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999211995833212	WITHOUT_CLASSIFICATION	7.880041667880927E-4	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999994769432062	WITHOUT_CLASSIFICATION	5.23056793777694E-7	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999614250702521	WITHOUT_CLASSIFICATION	3.857492974788313E-5	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999635959049139	WITHOUT_CLASSIFICATION	3.6404095086070554E-5	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999993392114536	WITHOUT_CLASSIFICATION	6.607885463985761E-7	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999980680566292	WITHOUT_CLASSIFICATION	1.931943370804648E-6	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999921751969435	WITHOUT_CLASSIFICATION	7.824803056570544E-6	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9852448886878746	WITHOUT_CLASSIFICATION	0.014755111312125367	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999846743981102	WITHOUT_CLASSIFICATION	1.5325601889771876E-5	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.999684109016609	WITHOUT_CLASSIFICATION	3.1589098339111045E-4	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9868069555512391	WITHOUT_CLASSIFICATION	0.013193044448760924	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9998650075301432	WITHOUT_CLASSIFICATION	1.3499246985690012E-4	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9963280032214918	WITHOUT_CLASSIFICATION	0.003671996778508241	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.7828856888982245	WITHOUT_CLASSIFICATION	0.21711431110177554	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999986492429819	WITHOUT_CLASSIFICATION	1.3507570181289671E-6	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999935787799414	WITHOUT_CLASSIFICATION	6.421220058552303E-6	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999291654165	WITHOUT_CLASSIFICATION	7.083458348184379E-8	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999899020516787	WITHOUT_CLASSIFICATION	1.0097948321181688E-5	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999959414282039	WITHOUT_CLASSIFICATION	4.05857179611329E-6	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999863666061982	WITHOUT_CLASSIFICATION	1.3633393801648295E-5	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999965587926137	WITHOUT_CLASSIFICATION	3.4412073863458695E-6	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9974971603809893	WITHOUT_CLASSIFICATION	0.0025028396190106537	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999951735412881	WITHOUT_CLASSIFICATION	4.8264587118955914E-5	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999988343806425	WITHOUT_CLASSIFICATION	1.1656193573855952E-6	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999787567626329	WITHOUT_CLASSIFICATION	2.1243237367081763E-5	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9997083973173653	WITHOUT_CLASSIFICATION	2.916026826346599E-4	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999971770294391	WITHOUT_CLASSIFICATION	2.8229705609131E-6	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999789460361632	WITHOUT_CLASSIFICATION	2.105396383674277E-5	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999934542971338	WITHOUT_CLASSIFICATION	6.545702866212183E-6	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999909325631323	WITHOUT_CLASSIFICATION	9.067436867739438E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999938024454649	WITHOUT_CLASSIFICATION	6.197554535104432E-6	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999977395297255	WITHOUT_CLASSIFICATION	2.2604702745758885E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999820211903412	WITHOUT_CLASSIFICATION	1.7978809658790828E-5	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999999740174608	WITHOUT_CLASSIFICATION	2.5982539254411203E-8	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999997753346718	WITHOUT_CLASSIFICATION	2.2466532815811014E-7	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9997920312757003	WITHOUT_CLASSIFICATION	2.0796872429960686E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999994340061443	WITHOUT_CLASSIFICATION	5.659938555880835E-7	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999222080216791	WITHOUT_CLASSIFICATION	7.779197832087563E-5	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999990217478724	WITHOUT_CLASSIFICATION	9.782521277011947E-7	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999844406976631	WITHOUT_CLASSIFICATION	1.5559302336893075E-5	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9998471107951717	WITHOUT_CLASSIFICATION	1.5288920482827055E-4	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999976953520965	WITHOUT_CLASSIFICATION	2.3046479035805675E-6	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999854033982357	WITHOUT_CLASSIFICATION	1.4596601764255957E-5	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999850913390437	WITHOUT_CLASSIFICATION	1.4908660956275365E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999972435495752	WITHOUT_CLASSIFICATION	2.75645042481899E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.999979787378573	WITHOUT_CLASSIFICATION	2.0212621426976604E-5	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999980466540117	WITHOUT_CLASSIFICATION	1.9533459882234773E-6	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998200149420816	WITHOUT_CLASSIFICATION	1.7998505791840474E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999845221163932	WITHOUT_CLASSIFICATION	1.5477883606835552E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999981873002076	WITHOUT_CLASSIFICATION	1.812699792411395E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999972435495752	WITHOUT_CLASSIFICATION	2.75645042481899E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9621696670524202	WITHOUT_CLASSIFICATION	0.03783033294757976	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9948846634881255	WITHOUT_CLASSIFICATION	0.005115336511874525	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999947955419629	WITHOUT_CLASSIFICATION	5.204458037042153E-6	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999867395892535	WITHOUT_CLASSIFICATION	1.3260410746445249E-5	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999867395892535	WITHOUT_CLASSIFICATION	1.3260410746445249E-5	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9998626872208927	WITHOUT_CLASSIFICATION	1.373127791072441E-4	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999984504271888	WITHOUT_CLASSIFICATION	1.5495728111877342E-6	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999762222565374	WITHOUT_CLASSIFICATION	2.3777743462671668E-5	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.996467997280191	WITHOUT_CLASSIFICATION	0.0035320027198090104	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.999998007906469	WITHOUT_CLASSIFICATION	1.992093531126979E-6	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999694190015296	WITHOUT_CLASSIFICATION	3.058099847048843E-5	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999969428733056	WITHOUT_CLASSIFICATION	3.0571266943237283E-6	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999999191409767	WITHOUT_CLASSIFICATION	8.085902322553866E-8	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999964101649218	WITHOUT_CLASSIFICATION	3.5898350781484903E-6	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999964101649218	WITHOUT_CLASSIFICATION	3.5898350781484903E-6	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9997080500089127	WITHOUT_CLASSIFICATION	2.919499910872356E-4	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999996075998365	WITHOUT_CLASSIFICATION	3.924001634984841E-7	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9978520834964831	WITHOUT_CLASSIFICATION	0.0021479165035169574	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9996318756028254	WITHOUT_CLASSIFICATION	3.6812439717450374E-4	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9998891610570358	WITHOUT_CLASSIFICATION	1.1083894296415401E-4	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9991953080950697	WITHOUT_CLASSIFICATION	8.046919049301743E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999993854186354	WITHOUT_CLASSIFICATION	6.145813646695564E-7	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9998463286876994	WITHOUT_CLASSIFICATION	1.5367131230063392E-4	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9998772923266038	WITHOUT_CLASSIFICATION	1.2270767339609678E-4	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9964507573787661	WITHOUT_CLASSIFICATION	0.0035492426212338957	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999934439917624	WITHOUT_CLASSIFICATION	6.5560082376213585E-6	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999861237825657	WITHOUT_CLASSIFICATION	1.3876217434388847E-5	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999974797360992	WITHOUT_CLASSIFICATION	2.5202639008811046E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999252024763889	WITHOUT_CLASSIFICATION	7.479752361105264E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999252024763889	WITHOUT_CLASSIFICATION	7.479752361105264E-5	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999137082929107	WITHOUT_CLASSIFICATION	8.629170708920317E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999905405973827	WITHOUT_CLASSIFICATION	9.459402617329106E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9969212155816148	WITHOUT_CLASSIFICATION	0.0030787844183851995	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9998554952432692	WITHOUT_CLASSIFICATION	1.445047567308326E-4	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999715947152417	WITHOUT_CLASSIFICATION	2.840528475839547E-5	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.999975063345673	WITHOUT_CLASSIFICATION	2.49366543269777E-5	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999940078362494	WITHOUT_CLASSIFICATION	5.9921637506325185E-6	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999999324883637	WITHOUT_CLASSIFICATION	6.751163623738031E-8	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999996202269146	WITHOUT_CLASSIFICATION	3.7977308547304793E-7	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9998307930261231	WITHOUT_CLASSIFICATION	1.692069738769357E-4	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.99997995080784	WITHOUT_CLASSIFICATION	2.004919215999475E-5	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999575573560118	WITHOUT_CLASSIFICATION	4.244264398820381E-5	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999997700941446	WITHOUT_CLASSIFICATION	2.299058552490488E-7	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999979441710256	WITHOUT_CLASSIFICATION	2.0558289743637165E-6	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9887899098074815	WITHOUT_CLASSIFICATION	0.01121009019251852	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999841209145	WITHOUT_CLASSIFICATION	1.587908553291868E-8	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999989088338445	WITHOUT_CLASSIFICATION	1.0911661555581604E-6	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9995358636226043	WITHOUT_CLASSIFICATION	4.6413637739566754E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999179702475425	WITHOUT_CLASSIFICATION	8.20297524574777E-5	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999918441584932	WITHOUT_CLASSIFICATION	8.1558415068873E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9996603393933214	WITHOUT_CLASSIFICATION	3.3966060667851557E-4	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999910774449788	WITHOUT_CLASSIFICATION	8.92255502113191E-6	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998268256583356	WITHOUT_CLASSIFICATION	1.7317434166440522E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999341675331701	WITHOUT_CLASSIFICATION	6.58324668299122E-5	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.966058097491767	WITHOUT_CLASSIFICATION	0.0339419025082331	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999929315390651	WITHOUT_CLASSIFICATION	7.068460934977781E-6	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9999836618537139	WITHOUT_CLASSIFICATION	1.6338146286173237E-5	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999749359535485	WITHOUT_CLASSIFICATION	2.5064046451552067E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999970864062043	WITHOUT_CLASSIFICATION	2.9135937956527104E-6	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.994795800280302	WITHOUT_CLASSIFICATION	0.005204199719697997	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.999935890433128	WITHOUT_CLASSIFICATION	6.410956687195893E-5	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9999195384197279	WITHOUT_CLASSIFICATION	8.046158027215063E-5	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999379356267791	WITHOUT_CLASSIFICATION	6.206437322087872E-5	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9998838453319306	WITHOUT_CLASSIFICATION	1.1615466806942653E-4	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999241002447851	WITHOUT_CLASSIFICATION	7.589975521488471E-5	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999992579322284	WITHOUT_CLASSIFICATION	7.420677716651008E-7	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999883712187049	WITHOUT_CLASSIFICATION	1.162878129510371E-5	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999975946748862	WITHOUT_CLASSIFICATION	2.4053251138419736E-6	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999997082410026	WITHOUT_CLASSIFICATION	2.9175899742594203E-7	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999996161524604	WITHOUT_CLASSIFICATION	3.838475396791471E-7	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999756964225344	WITHOUT_CLASSIFICATION	2.430357746564861E-5	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999965418262959	WITHOUT_CLASSIFICATION	3.4581737040896755E-6	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999959454576027	WITHOUT_CLASSIFICATION	4.05454239726684E-6	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9971405745041598	WITHOUT_CLASSIFICATION	0.0028594254958401915	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999914604368566	WITHOUT_CLASSIFICATION	8.539563143371882E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999997240093786	WITHOUT_CLASSIFICATION	2.7599062140942396E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999993291656997	WITHOUT_CLASSIFICATION	6.708343003490909E-7	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999988000016716	WITHOUT_CLASSIFICATION	1.1999983283246351E-6	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.998970216077366	WITHOUT_CLASSIFICATION	0.0010297839226340068	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999835394648882	WITHOUT_CLASSIFICATION	1.6460535111864153E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999835394648882	WITHOUT_CLASSIFICATION	1.6460535111864153E-5	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999999788337683	WITHOUT_CLASSIFICATION	2.1166231631361736E-8	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999941488590892	WITHOUT_CLASSIFICATION	5.851140910696143E-6	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999654998183282	WITHOUT_CLASSIFICATION	3.4500181671916936E-5	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9993457515128706	WITHOUT_CLASSIFICATION	6.542484871293348E-4	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999983412670975	WITHOUT_CLASSIFICATION	1.6587329024464626E-6	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.999979510615619	WITHOUT_CLASSIFICATION	2.0489384381033126E-5	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999077552379847	WITHOUT_CLASSIFICATION	9.224476201525117E-5	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9996000343701409	WITHOUT_CLASSIFICATION	3.9996562985919763E-4	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999992384489949	WITHOUT_CLASSIFICATION	7.615510051045223E-7	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9984223900016992	WITHOUT_CLASSIFICATION	0.0015776099983007528	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999924650785456	WITHOUT_CLASSIFICATION	7.534921454381762E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999924650785456	WITHOUT_CLASSIFICATION	7.534921454381762E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999924650785456	WITHOUT_CLASSIFICATION	7.534921454381762E-6	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999983865959678	WITHOUT_CLASSIFICATION	1.6134040321468428E-6	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999977851898115	WITHOUT_CLASSIFICATION	2.214810188359773E-6	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9995698957882506	WITHOUT_CLASSIFICATION	4.301042117494774E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998554876860986	WITHOUT_CLASSIFICATION	1.4451231390135298E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998554876860986	WITHOUT_CLASSIFICATION	1.4451231390135298E-4	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999864099345755	WITHOUT_CLASSIFICATION	1.3590065424457029E-5	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999474932623986	WITHOUT_CLASSIFICATION	5.2506737601298726E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999988911900297	WITHOUT_CLASSIFICATION	1.1088099702739328E-6	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999827595669495	WITHOUT_CLASSIFICATION	1.724043305046101E-5	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9986514778871856	WITHOUT_CLASSIFICATION	0.001348522112814493	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999979192695914	WITHOUT_CLASSIFICATION	2.080730408673274E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999712107350223	WITHOUT_CLASSIFICATION	2.8789264977808106E-5	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999423740784388	WITHOUT_CLASSIFICATION	5.762592156127624E-5	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999876939691382	WITHOUT_CLASSIFICATION	1.2306030861730027E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999843943092748	WITHOUT_CLASSIFICATION	1.5605690725264637E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999843943092748	WITHOUT_CLASSIFICATION	1.5605690725264637E-5	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999717754949867	WITHOUT_CLASSIFICATION	2.8224505013323087E-5	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999766389047461	WITHOUT_CLASSIFICATION	2.3361095253924616E-5	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999706969960293	WITHOUT_CLASSIFICATION	2.930300397076017E-5	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999966215441259	WITHOUT_CLASSIFICATION	3.378455874062688E-6	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999933552966387	WITHOUT_CLASSIFICATION	6.6447033612618E-6	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999952415074158	WITHOUT_CLASSIFICATION	4.758492584248147E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999969531364736	WITHOUT_CLASSIFICATION	3.0468635262679564E-6	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999887270979683	WITHOUT_CLASSIFICATION	1.1272902031719323E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999605074740973	WITHOUT_CLASSIFICATION	3.949252590274278E-5	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999813938962193	WITHOUT_CLASSIFICATION	1.8606103780745016E-5	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9996622842539485	WITHOUT_CLASSIFICATION	3.3771574605149287E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999703836829208	WITHOUT_CLASSIFICATION	2.9616317079262365E-5	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999252021046965	WITHOUT_CLASSIFICATION	7.47978953034689E-5	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999754894294053	WITHOUT_CLASSIFICATION	2.451057059467085E-5	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9989196615676759	WITHOUT_CLASSIFICATION	0.001080338432324132	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999998681663137	WITHOUT_CLASSIFICATION	1.3183368633805309E-7	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999961868377194	WITHOUT_CLASSIFICATION	3.8131622805504276E-6	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999990639832514	WITHOUT_CLASSIFICATION	9.36016748562037E-7	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999949166957457	WITHOUT_CLASSIFICATION	5.083304254279988E-6	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999996886928411	WITHOUT_CLASSIFICATION	3.113071589360323E-7	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.8187449060085981	WITHOUT_CLASSIFICATION	0.1812550939914019	DESIGN
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999999864145267	WITHOUT_CLASSIFICATION	1.3585473359552723E-8	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999971238478176	WITHOUT_CLASSIFICATION	2.8761521824729274E-6	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999961481280764	WITHOUT_CLASSIFICATION	3.851871923672945E-6	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999976775287938	WITHOUT_CLASSIFICATION	2.3224712062063086E-6	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999203729018605	WITHOUT_CLASSIFICATION	7.96270981394169E-5	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.999989639657395	WITHOUT_CLASSIFICATION	1.0360342605099136E-5	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9998892452924486	WITHOUT_CLASSIFICATION	1.1075470755134654E-4	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999973804980469	WITHOUT_CLASSIFICATION	2.6195019531990903E-6	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999937795420228	WITHOUT_CLASSIFICATION	6.2204579771558815E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999784793028054	WITHOUT_CLASSIFICATION	2.152069719463807E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999851496211151	WITHOUT_CLASSIFICATION	1.48503788849894E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999636433712054	WITHOUT_CLASSIFICATION	3.6356628794567754E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999784793028054	WITHOUT_CLASSIFICATION	2.152069719463807E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999475923391017	WITHOUT_CLASSIFICATION	5.240766089819305E-5	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999859597764098	WITHOUT_CLASSIFICATION	1.4040223590151345E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9993833813198727	WITHOUT_CLASSIFICATION	6.16618680127271E-4	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9987779379198661	WITHOUT_CLASSIFICATION	0.0012220620801338968	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.999998724032781	WITHOUT_CLASSIFICATION	1.2759672190233818E-6	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999968780703966	WITHOUT_CLASSIFICATION	3.121929603485928E-6	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999997393470399	WITHOUT_CLASSIFICATION	2.606529601585958E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.999723659987299	WITHOUT_CLASSIFICATION	2.763400127010982E-4	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999315717005105	WITHOUT_CLASSIFICATION	6.842829948951702E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999567535426142	WITHOUT_CLASSIFICATION	4.324645738578566E-5	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9992245594051256	WITHOUT_CLASSIFICATION	7.754405948743406E-4	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9996841267487834	WITHOUT_CLASSIFICATION	3.1587325121662995E-4	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9998136262498342	WITHOUT_CLASSIFICATION	1.863737501658469E-4	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9998648706929266	WITHOUT_CLASSIFICATION	1.351293070732853E-4	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9994480041028256	WITHOUT_CLASSIFICATION	5.519958971743495E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9998685637900259	WITHOUT_CLASSIFICATION	1.314362099741469E-4	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9998864463821	WITHOUT_CLASSIFICATION	1.1355361790007796E-4	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9987181985231368	WITHOUT_CLASSIFICATION	0.0012818014768630846	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9998865288992989	WITHOUT_CLASSIFICATION	1.1347110070113096E-4	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999524448123301	WITHOUT_CLASSIFICATION	4.7555187669941824E-5	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9857562239100203	WITHOUT_CLASSIFICATION	0.014243776089979659	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999805053684273	WITHOUT_CLASSIFICATION	1.949463157270179E-5	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.999992237873948	WITHOUT_CLASSIFICATION	7.762126051935397E-6	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999943963292716	WITHOUT_CLASSIFICATION	5.60367072841523E-6	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.999998908953209	WITHOUT_CLASSIFICATION	1.0910467910273655E-6	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.998415881921814	WITHOUT_CLASSIFICATION	0.0015841180781860432	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999517448885535	WITHOUT_CLASSIFICATION	4.825511144633485E-5	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999930691450878	WITHOUT_CLASSIFICATION	6.9308549120956266E-6	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999939461160591	WITHOUT_CLASSIFICATION	6.053883940929671E-6	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999971881630487	WITHOUT_CLASSIFICATION	2.8118369512051232E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9999860934048093	WITHOUT_CLASSIFICATION	1.3906595190792894E-5	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9598375116866408	WITHOUT_CLASSIFICATION	0.04016248831335909	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.5935368430593442	DESIGN	0.4064631569406557	WITHOUT_CLASSIFICATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9997414086410472	WITHOUT_CLASSIFICATION	2.585913589527538E-4	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.999959173963061	WITHOUT_CLASSIFICATION	4.082603693891839E-5	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999480587479402	WITHOUT_CLASSIFICATION	5.194125205974812E-5	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999901154264664	WITHOUT_CLASSIFICATION	9.884573533618927E-6	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999338558727076	WITHOUT_CLASSIFICATION	6.614412729237667E-5	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999081256935246	WITHOUT_CLASSIFICATION	9.187430647536763E-5	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999849223151367	WITHOUT_CLASSIFICATION	1.5077684863375375E-5	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999700745117873	WITHOUT_CLASSIFICATION	2.992548821273721E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999593917675218	WITHOUT_CLASSIFICATION	4.0608232478165775E-5	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999959267964648	WITHOUT_CLASSIFICATION	4.073203535239672E-6	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999913211542312	WITHOUT_CLASSIFICATION	8.67884576884719E-6	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999975396085504	WITHOUT_CLASSIFICATION	2.460391449643201E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999873810868779	WITHOUT_CLASSIFICATION	1.2618913122016061E-5	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.99999360283024	WITHOUT_CLASSIFICATION	6.397169760051545E-6	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999786004772855	WITHOUT_CLASSIFICATION	2.1399522714488975E-5	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999998340985532	WITHOUT_CLASSIFICATION	1.659014467416423E-7	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999876795311364	WITHOUT_CLASSIFICATION	1.2320468863501281E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998981302425524	WITHOUT_CLASSIFICATION	1.0186975744759572E-4	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.7451791529136019	WITHOUT_CLASSIFICATION	0.254820847086398	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.999999547246661	WITHOUT_CLASSIFICATION	4.527533391637198E-7	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999998340985532	WITHOUT_CLASSIFICATION	1.659014467416423E-7	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.7687985727481995	DESIGN	0.23120142725180046	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.7687985727481995	DESIGN	0.23120142725180046	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999730481508821	WITHOUT_CLASSIFICATION	2.6951849117928974E-5	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9998106683182596	WITHOUT_CLASSIFICATION	1.893316817403918E-4	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999964150531483	WITHOUT_CLASSIFICATION	3.5849468516912814E-6	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999665785092233	WITHOUT_CLASSIFICATION	3.34214907767264E-5	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9950140569059347	WITHOUT_CLASSIFICATION	0.004985943094065315	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999921865964458	WITHOUT_CLASSIFICATION	7.813403554076033E-6	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999955416517666	WITHOUT_CLASSIFICATION	4.458348233358349E-6	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9995273060665302	DESIGN	4.7269393346986455E-4	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9962799543776617	WITHOUT_CLASSIFICATION	0.0037200456223383	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999994216395554	WITHOUT_CLASSIFICATION	5.783604447102047E-7	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999915637752671	WITHOUT_CLASSIFICATION	8.436224732979219E-6	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9858931868564438	WITHOUT_CLASSIFICATION	0.01410681314355618	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999780761043678	WITHOUT_CLASSIFICATION	2.1923895632165647E-5	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999938884970756	WITHOUT_CLASSIFICATION	6.111502924414265E-6	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9997896905985999	WITHOUT_CLASSIFICATION	2.1030940140019379E-4	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9997476778136202	WITHOUT_CLASSIFICATION	2.5232218637986036E-4	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999605041153061	WITHOUT_CLASSIFICATION	3.949588469387154E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999194059714044	WITHOUT_CLASSIFICATION	8.059402859560769E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999194059714044	WITHOUT_CLASSIFICATION	8.059402859560769E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999194059714044	WITHOUT_CLASSIFICATION	8.059402859560769E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999194059714044	WITHOUT_CLASSIFICATION	8.059402859560769E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999194059714044	WITHOUT_CLASSIFICATION	8.059402859560769E-5	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999951726386933	WITHOUT_CLASSIFICATION	4.827361306603486E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999937086637207	WITHOUT_CLASSIFICATION	6.291336279298042E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999674438641164	WITHOUT_CLASSIFICATION	3.255613588356557E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999566975368354	WITHOUT_CLASSIFICATION	4.3302463164565674E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999972013626581	WITHOUT_CLASSIFICATION	2.7986373418946235E-6	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999992577603827	WITHOUT_CLASSIFICATION	7.4223961734911E-7	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999961998772188	WITHOUT_CLASSIFICATION	3.800122781110823E-6	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999973975739856	WITHOUT_CLASSIFICATION	2.6024260144004845E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999731627848796	WITHOUT_CLASSIFICATION	2.6837215120455287E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999970564693414	WITHOUT_CLASSIFICATION	2.9435306586213337E-6	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999961945998418	WITHOUT_CLASSIFICATION	3.805400158214695E-6	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999933142248812	WITHOUT_CLASSIFICATION	6.685775118795964E-6	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999954143919424	WITHOUT_CLASSIFICATION	4.585608057559379E-6	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.999995450626847	WITHOUT_CLASSIFICATION	4.549373153011735E-6	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.999995371559272	WITHOUT_CLASSIFICATION	4.628440727911242E-6	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999953873948914	WITHOUT_CLASSIFICATION	4.6126051086943874E-6	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999945146947922	WITHOUT_CLASSIFICATION	5.485305207769029E-6	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.999995353745921	WITHOUT_CLASSIFICATION	4.646254079002886E-6	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999936381265162	WITHOUT_CLASSIFICATION	6.36187348373987E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999950748738358	WITHOUT_CLASSIFICATION	4.925126164196482E-6	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999941896553841	WITHOUT_CLASSIFICATION	5.810344615861833E-6	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999937048288565	WITHOUT_CLASSIFICATION	6.295171143432128E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999957429908335	WITHOUT_CLASSIFICATION	4.2570091664455974E-6	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999944665111102	WITHOUT_CLASSIFICATION	5.533488889703117E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999961525614132	WITHOUT_CLASSIFICATION	3.847438586827046E-6	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999930706517417	WITHOUT_CLASSIFICATION	6.929348258217106E-6	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999943732872891	WITHOUT_CLASSIFICATION	5.626712710829661E-6	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.999994073114492	WITHOUT_CLASSIFICATION	5.926885508068525E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999943103638896	WITHOUT_CLASSIFICATION	5.689636110356459E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999953880766356	WITHOUT_CLASSIFICATION	4.611923364467325E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999933832948967	WITHOUT_CLASSIFICATION	6.6167051032903494E-6	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.99999309688848	WITHOUT_CLASSIFICATION	6.9031115200319606E-6	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999924573302602	WITHOUT_CLASSIFICATION	7.542669739723492E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.99999062937797	WITHOUT_CLASSIFICATION	9.370622030031014E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999944090765394	WITHOUT_CLASSIFICATION	5.590923460640186E-6	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999923828729272	WITHOUT_CLASSIFICATION	7.617127072729194E-6	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.999992443860404	WITHOUT_CLASSIFICATION	7.556139596128624E-6	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.99999256716736	WITHOUT_CLASSIFICATION	7.432832640021808E-6	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999931835895204	WITHOUT_CLASSIFICATION	6.816410479640514E-6	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999924363152843	WITHOUT_CLASSIFICATION	7.563684715747426E-6	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999934160176318	WITHOUT_CLASSIFICATION	6.583982368291369E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999922227010162	WITHOUT_CLASSIFICATION	7.777298983828135E-6	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999943641673926	WITHOUT_CLASSIFICATION	5.635832607348615E-6	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999930551465512	WITHOUT_CLASSIFICATION	6.944853448840259E-6	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999933845962029	WITHOUT_CLASSIFICATION	6.615403797145679E-6	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999919768422353	WITHOUT_CLASSIFICATION	8.023157764726424E-6	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999918865776493	WITHOUT_CLASSIFICATION	8.113422350697394E-6	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.99999385430316	WITHOUT_CLASSIFICATION	6.145696839980082E-6	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999932539373909	WITHOUT_CLASSIFICATION	6.746062609078292E-6	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999934495514313	WITHOUT_CLASSIFICATION	6.5504485686529235E-6	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999674438641164	WITHOUT_CLASSIFICATION	3.255613588356557E-5	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999919485373636	WITHOUT_CLASSIFICATION	8.051462636363036E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999916067991235	WITHOUT_CLASSIFICATION	8.39320087660099E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999912399826565	WITHOUT_CLASSIFICATION	8.760017343514428E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999891170115996	WITHOUT_CLASSIFICATION	1.0882988400339309E-5	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999883875582554	WITHOUT_CLASSIFICATION	1.1612441744554735E-5	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.999988580505092	WITHOUT_CLASSIFICATION	1.1419494908063047E-5	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999904794106451	WITHOUT_CLASSIFICATION	9.52058935492765E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999883960583857	WITHOUT_CLASSIFICATION	1.1603941614248828E-5	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999902748462172	WITHOUT_CLASSIFICATION	9.725153782895166E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999908965625642	WITHOUT_CLASSIFICATION	9.103437435869832E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999917901034309	WITHOUT_CLASSIFICATION	8.209896569087578E-6	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999922207968096	WITHOUT_CLASSIFICATION	7.779203190347104E-6	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999835258533618	WITHOUT_CLASSIFICATION	1.647414663825286E-5	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999932472019242	WITHOUT_CLASSIFICATION	6.752798075857175E-6	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999932688270586	WITHOUT_CLASSIFICATION	6.73117294142798E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999949369982354	WITHOUT_CLASSIFICATION	5.063001764578261E-6	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999943821715761	WITHOUT_CLASSIFICATION	5.617828423857766E-6	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999936003526985	WITHOUT_CLASSIFICATION	6.399647301454787E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.999993403925123	WITHOUT_CLASSIFICATION	6.596074876859409E-6	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.999994160417142	WITHOUT_CLASSIFICATION	5.839582858023908E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999936085064471	WITHOUT_CLASSIFICATION	6.391493552903023E-6	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999915897399917	WITHOUT_CLASSIFICATION	8.410260008290633E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999922184780291	WITHOUT_CLASSIFICATION	7.781521970855135E-6	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999927039713229	WITHOUT_CLASSIFICATION	7.296028677201921E-6	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999925200429884	WITHOUT_CLASSIFICATION	7.479957011476407E-6	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999933364562904	WITHOUT_CLASSIFICATION	6.663543709686445E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999949513632507	WITHOUT_CLASSIFICATION	5.048636749352585E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999901884317157	WITHOUT_CLASSIFICATION	9.811568284328969E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999948534003198	WITHOUT_CLASSIFICATION	5.146599680274604E-6	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999942831926365	WITHOUT_CLASSIFICATION	5.7168073634723816E-6	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999957978226415	WITHOUT_CLASSIFICATION	4.202177358570698E-6	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999939800500641	WITHOUT_CLASSIFICATION	6.019949935873359E-6	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999950197172951	WITHOUT_CLASSIFICATION	4.9802827049864964E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999953221841347	WITHOUT_CLASSIFICATION	4.677815865274213E-6	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999934669490221	WITHOUT_CLASSIFICATION	6.533050977884125E-6	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999944326363884	WITHOUT_CLASSIFICATION	5.567363611652847E-6	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999945028860187	WITHOUT_CLASSIFICATION	5.497113981256848E-6	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.999992793584288	WITHOUT_CLASSIFICATION	7.206415711989175E-6	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999923187496793	WITHOUT_CLASSIFICATION	7.68125032062094E-6	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999931096745927	WITHOUT_CLASSIFICATION	6.890325407256345E-6	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999927103756779	WITHOUT_CLASSIFICATION	7.289624322083071E-6	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999925537465899	WITHOUT_CLASSIFICATION	7.446253410081452E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999947424115917	WITHOUT_CLASSIFICATION	5.2575884083496575E-6	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999923498325481	WITHOUT_CLASSIFICATION	7.650167451870886E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.999995428073967	WITHOUT_CLASSIFICATION	4.571926032945471E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999933030069492	WITHOUT_CLASSIFICATION	6.696993050783156E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999943973499261	WITHOUT_CLASSIFICATION	5.602650073825576E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999927582655281	WITHOUT_CLASSIFICATION	7.2417344718524165E-6	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999922992067964	WITHOUT_CLASSIFICATION	7.700793203584684E-6	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999938264447521	WITHOUT_CLASSIFICATION	6.1735552479339525E-6	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.999990184846255	WITHOUT_CLASSIFICATION	9.81515374495751E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999940083080966	WITHOUT_CLASSIFICATION	5.991691903429551E-6	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999951695043787	WITHOUT_CLASSIFICATION	4.830495621322548E-6	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999955000651524	WITHOUT_CLASSIFICATION	4.499934847661753E-6	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999965902959073	WITHOUT_CLASSIFICATION	3.4097040926727273E-6	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999956198248595	WITHOUT_CLASSIFICATION	4.380175140400191E-6	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999947591674477	WITHOUT_CLASSIFICATION	5.2408325523227714E-6	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999936132344783	WITHOUT_CLASSIFICATION	6.386765521681697E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999930725367026	WITHOUT_CLASSIFICATION	6.9274632975155935E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999939597264885	WITHOUT_CLASSIFICATION	6.040273511487464E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.999995638991706	WITHOUT_CLASSIFICATION	4.361008293965812E-6	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999937235489711	WITHOUT_CLASSIFICATION	6.276451028951113E-6	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999953380980825	WITHOUT_CLASSIFICATION	4.661901917500322E-6	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999931752520718	WITHOUT_CLASSIFICATION	6.824747928267904E-6	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999950779107333	WITHOUT_CLASSIFICATION	4.92208926667687E-6	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999932023688253	WITHOUT_CLASSIFICATION	6.797631174743907E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999954037051257	WITHOUT_CLASSIFICATION	4.596294874227645E-6	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999926274034132	WITHOUT_CLASSIFICATION	7.372596586851611E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999937460196796	WITHOUT_CLASSIFICATION	6.25398032049331E-6	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999934423539716	WITHOUT_CLASSIFICATION	6.557646028511863E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999933513417019	WITHOUT_CLASSIFICATION	6.648658298179717E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999917496789692	WITHOUT_CLASSIFICATION	8.250321030805345E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999933559958601	WITHOUT_CLASSIFICATION	6.644004139851629E-6	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999914621896271	WITHOUT_CLASSIFICATION	8.537810372867524E-6	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999920889059741	WITHOUT_CLASSIFICATION	7.911094025873282E-6	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999941861053608	WITHOUT_CLASSIFICATION	5.813894639163235E-6	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999953794513226	WITHOUT_CLASSIFICATION	4.620548677440025E-6	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999944095766342	WITHOUT_CLASSIFICATION	5.590423365801733E-6	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999933802188173	WITHOUT_CLASSIFICATION	6.6197811826294804E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999949437700074	WITHOUT_CLASSIFICATION	5.056229992469405E-6	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999915920057411	WITHOUT_CLASSIFICATION	8.40799425897822E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.999993099272068	WITHOUT_CLASSIFICATION	6.900727931900319E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.999992304948775	WITHOUT_CLASSIFICATION	7.695051224963826E-6	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999935432294691	WITHOUT_CLASSIFICATION	6.456770530906612E-6	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999905754508129	WITHOUT_CLASSIFICATION	9.424549187038661E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.999992349310618	WITHOUT_CLASSIFICATION	7.650689381928666E-6	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999924913178637	WITHOUT_CLASSIFICATION	7.508682136254097E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9999921564415787	WITHOUT_CLASSIFICATION	7.843558421329615E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999948192709412	WITHOUT_CLASSIFICATION	5.180729058786425E-6	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999932658123047	WITHOUT_CLASSIFICATION	6.734187695187156E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999937361358919	WITHOUT_CLASSIFICATION	6.263864107982032E-6	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999936470178941	WITHOUT_CLASSIFICATION	6.352982105929952E-6	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999920308350251	WITHOUT_CLASSIFICATION	7.969164974892238E-6	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999903753354965	WITHOUT_CLASSIFICATION	9.624664503508752E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.999995376025668	WITHOUT_CLASSIFICATION	4.623974332050696E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999960393311577	WITHOUT_CLASSIFICATION	3.960668842340745E-6	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999961458550035	WITHOUT_CLASSIFICATION	3.854144996507257E-6	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999954350551903	WITHOUT_CLASSIFICATION	4.564944809781689E-6	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999970154297209	WITHOUT_CLASSIFICATION	2.984570279075684E-6	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999970388526118	WITHOUT_CLASSIFICATION	2.961147388220015E-6	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999960244279438	WITHOUT_CLASSIFICATION	3.975572056172172E-6	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999958718344315	WITHOUT_CLASSIFICATION	4.128165568486214E-6	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999964367443105	WITHOUT_CLASSIFICATION	3.5632556895013926E-6	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999954770263184	WITHOUT_CLASSIFICATION	4.522973681661133E-6	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999960588679693	WITHOUT_CLASSIFICATION	3.941132030695093E-6	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999958035250531	WITHOUT_CLASSIFICATION	4.196474946860903E-6	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999958263441183	WITHOUT_CLASSIFICATION	4.1736558816993865E-6	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999949626547754	WITHOUT_CLASSIFICATION	5.037345224588647E-6	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999957273625859	WITHOUT_CLASSIFICATION	4.272637414062815E-6	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999972633284998	WITHOUT_CLASSIFICATION	2.7366715002373153E-6	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999960632773198	WITHOUT_CLASSIFICATION	3.936722680170775E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999956923348823	WITHOUT_CLASSIFICATION	4.307665117732336E-6	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.999995726968851	WITHOUT_CLASSIFICATION	4.273031149030871E-6	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999955655546247	WITHOUT_CLASSIFICATION	4.4344453753717655E-6	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999958856739865	WITHOUT_CLASSIFICATION	4.1143260136068914E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999948683588378	WITHOUT_CLASSIFICATION	5.131641162146528E-6	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999950655642563	WITHOUT_CLASSIFICATION	4.934435743655973E-6	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999950330290026	WITHOUT_CLASSIFICATION	4.966970997421122E-6	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.999995191500354	WITHOUT_CLASSIFICATION	4.808499645980286E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999960465588246	WITHOUT_CLASSIFICATION	3.9534411753909075E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999951788196031	WITHOUT_CLASSIFICATION	4.821180396820941E-6	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999956117340306	WITHOUT_CLASSIFICATION	4.3882659694714785E-6	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999958312549526	WITHOUT_CLASSIFICATION	4.168745047428286E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999956949805178	WITHOUT_CLASSIFICATION	4.305019482304231E-6	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999949374421266	WITHOUT_CLASSIFICATION	5.062557873399974E-6	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999951682462733	WITHOUT_CLASSIFICATION	4.8317537267138575E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999956511817341	WITHOUT_CLASSIFICATION	4.348818265955799E-6	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999962783838214	WITHOUT_CLASSIFICATION	3.7216161784704295E-6	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999952047825676	WITHOUT_CLASSIFICATION	4.795217432381175E-6	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999956826700758	WITHOUT_CLASSIFICATION	4.317329924167486E-6	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999964064602476	WITHOUT_CLASSIFICATION	3.5935397523498837E-6	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999961518978661	WITHOUT_CLASSIFICATION	3.848102133876262E-6	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.999995161296616	WITHOUT_CLASSIFICATION	4.8387033840141035E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999973333498825	WITHOUT_CLASSIFICATION	2.666650117525771E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999973052081917	WITHOUT_CLASSIFICATION	2.694791808332966E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999969266325259	WITHOUT_CLASSIFICATION	3.073367474202986E-6	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999966669443848	WITHOUT_CLASSIFICATION	3.3330556152787585E-6	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999969848311826	WITHOUT_CLASSIFICATION	3.015168817323919E-6	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.999996634999194	WITHOUT_CLASSIFICATION	3.3650008059970004E-6	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999969112630637	WITHOUT_CLASSIFICATION	3.088736936344755E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999968825715774	WITHOUT_CLASSIFICATION	3.117428422575043E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999965561193546	WITHOUT_CLASSIFICATION	3.443880645388266E-6	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999965699279227	WITHOUT_CLASSIFICATION	3.430072077283435E-6	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.999996496227118	WITHOUT_CLASSIFICATION	3.5037728820993687E-6	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999972739471316	WITHOUT_CLASSIFICATION	2.726052868478069E-6	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999971386319789	WITHOUT_CLASSIFICATION	2.8613680210265627E-6	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999963221390795	WITHOUT_CLASSIFICATION	3.6778609204448055E-6	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.999995764520644	WITHOUT_CLASSIFICATION	4.2354793560728664E-6	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999965891605583	WITHOUT_CLASSIFICATION	3.410839441747634E-6	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999972446699369	WITHOUT_CLASSIFICATION	2.7553300630854898E-6	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999959409806434	WITHOUT_CLASSIFICATION	4.059019356619337E-6	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.999994832995941	WITHOUT_CLASSIFICATION	5.167004058906196E-6	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999954619502471	WITHOUT_CLASSIFICATION	4.538049752873361E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999972516827856	WITHOUT_CLASSIFICATION	2.748317214268217E-6	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999971754725252	WITHOUT_CLASSIFICATION	2.82452747474465E-6	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999954085767251	WITHOUT_CLASSIFICATION	4.5914232749277875E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999962538546089	WITHOUT_CLASSIFICATION	3.7461453911794452E-6	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999966924981911	WITHOUT_CLASSIFICATION	3.3075018089570904E-6	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.99999592246395	WITHOUT_CLASSIFICATION	4.077536050095958E-6	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.999995831776569	WITHOUT_CLASSIFICATION	4.1682234310305924E-6	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999960332648805	WITHOUT_CLASSIFICATION	3.966735119452285E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999963488964433	WITHOUT_CLASSIFICATION	3.6511035566844783E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999966061275384	WITHOUT_CLASSIFICATION	3.3938724616647233E-6	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999950136290765	WITHOUT_CLASSIFICATION	4.986370923526399E-6	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999957424774722	WITHOUT_CLASSIFICATION	4.257522527731525E-6	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999956535735232	WITHOUT_CLASSIFICATION	4.346426476867024E-6	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999954408314728	WITHOUT_CLASSIFICATION	4.559168527129375E-6	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999952372671763	WITHOUT_CLASSIFICATION	4.76273282371723E-6	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.999995136043138	WITHOUT_CLASSIFICATION	4.863956861860567E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999940415207409	WITHOUT_CLASSIFICATION	5.958479259086373E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999966338247417	WITHOUT_CLASSIFICATION	3.3661752582861822E-6	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999950842914177	WITHOUT_CLASSIFICATION	4.915708582315876E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999956973349792	WITHOUT_CLASSIFICATION	4.30266502085007E-6	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999950211173133	WITHOUT_CLASSIFICATION	4.9788826867751E-6	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999960804602434	WITHOUT_CLASSIFICATION	3.919539756686277E-6	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.999995879289658	WITHOUT_CLASSIFICATION	4.120710341859526E-6	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999957002129255	WITHOUT_CLASSIFICATION	4.299787074524964E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999937628164854	WITHOUT_CLASSIFICATION	6.237183514554219E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999968588005641	WITHOUT_CLASSIFICATION	3.141199435822081E-6	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999953887635805	WITHOUT_CLASSIFICATION	4.611236419386197E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.999994804612336	WITHOUT_CLASSIFICATION	5.195387663902729E-6	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999941731187749	WITHOUT_CLASSIFICATION	5.826881225074822E-6	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999949115587244	WITHOUT_CLASSIFICATION	5.0884412755559265E-6	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999952000777557	WITHOUT_CLASSIFICATION	4.799922244345438E-6	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999947775877925	WITHOUT_CLASSIFICATION	5.222412207471995E-6	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999936533428774	WITHOUT_CLASSIFICATION	6.346657122695272E-6	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999947700209698	WITHOUT_CLASSIFICATION	5.2299790301317105E-6	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999954356090194	WITHOUT_CLASSIFICATION	4.56439098072493E-6	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999948925616652	WITHOUT_CLASSIFICATION	5.1074383347934225E-6	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.999995192144163	WITHOUT_CLASSIFICATION	4.807855837010777E-6	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999947308106093	WITHOUT_CLASSIFICATION	5.269189390675604E-6	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999957503090146	WITHOUT_CLASSIFICATION	4.249690985433129E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999939204373073	WITHOUT_CLASSIFICATION	6.079562692632648E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999946514789092	WITHOUT_CLASSIFICATION	5.348521090774849E-6	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999956275433717	WITHOUT_CLASSIFICATION	4.372456628278999E-6	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999956542704813	WITHOUT_CLASSIFICATION	4.3457295186943E-6	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999967452661183	WITHOUT_CLASSIFICATION	3.25473388170623E-6	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999960720916583	WITHOUT_CLASSIFICATION	3.927908341715442E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999968776368953	WITHOUT_CLASSIFICATION	3.122363104832819E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999969692095335	WITHOUT_CLASSIFICATION	3.030790466527337E-6	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999963958595972	WITHOUT_CLASSIFICATION	3.60414040289544E-6	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999957737647646	WITHOUT_CLASSIFICATION	4.226235235410303E-6	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999958113842069	WITHOUT_CLASSIFICATION	4.1886157930859036E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999958095069351	WITHOUT_CLASSIFICATION	4.190493064855575E-6	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999951989850784	WITHOUT_CLASSIFICATION	4.801014921643732E-6	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999958086503935	WITHOUT_CLASSIFICATION	4.1913496064744085E-6	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999950812859345	WITHOUT_CLASSIFICATION	4.918714065476305E-6	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999968871209596	WITHOUT_CLASSIFICATION	3.112879040381331E-6	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999952456843558	WITHOUT_CLASSIFICATION	4.754315644258476E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999961630669247	WITHOUT_CLASSIFICATION	3.83693307521478E-6	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999953269924579	WITHOUT_CLASSIFICATION	4.673007542207727E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999952997348537	WITHOUT_CLASSIFICATION	4.700265146297038E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999958358014517	WITHOUT_CLASSIFICATION	4.164198548274417E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999965046428597	WITHOUT_CLASSIFICATION	3.4953571401960445E-6	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999948848840358	WITHOUT_CLASSIFICATION	5.115115964166037E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999964856299227	WITHOUT_CLASSIFICATION	3.514370077302779E-6	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.999995062908629	WITHOUT_CLASSIFICATION	4.93709137096432E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999949518912541	WITHOUT_CLASSIFICATION	5.048108745882892E-6	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999945234562907	WITHOUT_CLASSIFICATION	5.476543709250601E-6	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.999994693759317	WITHOUT_CLASSIFICATION	5.3062406829838805E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999960458772972	WITHOUT_CLASSIFICATION	3.954122702887503E-6	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.999994197365075	WITHOUT_CLASSIFICATION	5.802634924964685E-6	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999955944578129	WITHOUT_CLASSIFICATION	4.4055421869935975E-6	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999961894324528	WITHOUT_CLASSIFICATION	3.810567547184858E-6	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999961290949796	WITHOUT_CLASSIFICATION	3.870905020428983E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999958588469406	WITHOUT_CLASSIFICATION	4.141153059341908E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.999997316523973	WITHOUT_CLASSIFICATION	2.6834760270769697E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999987105381913	WITHOUT_CLASSIFICATION	1.2894618087347793E-6	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9886211621136833	WITHOUT_CLASSIFICATION	0.011378837886316542	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999774396594612	WITHOUT_CLASSIFICATION	2.2560340538850324E-5	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999505739170645	WITHOUT_CLASSIFICATION	4.942608293550297E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.999989828260253	WITHOUT_CLASSIFICATION	1.0171739747074141E-5	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999977020627526	WITHOUT_CLASSIFICATION	2.297937247317694E-6	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9985500375971513	WITHOUT_CLASSIFICATION	0.0014499624028486279	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9982345778638768	WITHOUT_CLASSIFICATION	0.001765422136123121	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999391435124176	WITHOUT_CLASSIFICATION	6.085648758236859E-5	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9994988458384829	WITHOUT_CLASSIFICATION	5.011541615170492E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999856273738829	WITHOUT_CLASSIFICATION	1.4372626117149617E-5	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999933026333393	WITHOUT_CLASSIFICATION	6.697366660660557E-6	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999985932359791	WITHOUT_CLASSIFICATION	1.4067640209895214E-6	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9964287803264308	WITHOUT_CLASSIFICATION	0.003571219673569244	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999685878533136	WITHOUT_CLASSIFICATION	3.141214668646328E-5	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999992886115026	WITHOUT_CLASSIFICATION	7.113884974370086E-7	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999804263917703	WITHOUT_CLASSIFICATION	1.957360822973086E-5	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999984757433807	WITHOUT_CLASSIFICATION	1.5242566193568017E-6	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999390853991	WITHOUT_CLASSIFICATION	6.091460087000516E-8	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999950286099766	WITHOUT_CLASSIFICATION	4.971390023426871E-6	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999970057263537	WITHOUT_CLASSIFICATION	2.9942736463587737E-6	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999991695402355	WITHOUT_CLASSIFICATION	8.304597645609525E-7	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999950626912557	WITHOUT_CLASSIFICATION	4.937308744286685E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999927478947958	WITHOUT_CLASSIFICATION	7.252105204297577E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999927478947958	WITHOUT_CLASSIFICATION	7.252105204297577E-6	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9917458772945414	WITHOUT_CLASSIFICATION	0.00825412270545862	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9965005684154499	WITHOUT_CLASSIFICATION	0.003499431584550022	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9988890116430936	WITHOUT_CLASSIFICATION	0.0011109883569063918	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.8797719042738881	DESIGN	0.12022809572611186	WITHOUT_CLASSIFICATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9996846037879509	WITHOUT_CLASSIFICATION	3.1539621204918785E-4	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999996262063089	WITHOUT_CLASSIFICATION	3.737936911250717E-7	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999936160289452	WITHOUT_CLASSIFICATION	6.383971054718867E-6	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999999997529846	WITHOUT_CLASSIFICATION	2.470153829122773E-9	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9746632624310347	WITHOUT_CLASSIFICATION	0.0253367375689652	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999999719020025	WITHOUT_CLASSIFICATION	2.809799753147066E-8	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999990579445032	WITHOUT_CLASSIFICATION	9.420554967819566E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999847672723334	WITHOUT_CLASSIFICATION	1.523272766652142E-5	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.999999866534436	WITHOUT_CLASSIFICATION	1.3346556405803345E-7	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999994649965752	WITHOUT_CLASSIFICATION	5.3500342478639125E-6	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999972113932312	WITHOUT_CLASSIFICATION	2.7886067687946065E-6	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999972222017837	WITHOUT_CLASSIFICATION	2.7777982161980577E-6	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999966076461696	WITHOUT_CLASSIFICATION	3.3923538305119894E-6	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9998176992052571	WITHOUT_CLASSIFICATION	1.8230079474288195E-4	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9997747096403315	WITHOUT_CLASSIFICATION	2.2529035966839306E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.999964622810696	WITHOUT_CLASSIFICATION	3.537718930392596E-5	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999971301914917	WITHOUT_CLASSIFICATION	2.86980850826559E-6	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999908670781247	WITHOUT_CLASSIFICATION	9.132921875340332E-6	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.995157051309643	DESIGN	0.004842948690357006	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9991580489217394	WITHOUT_CLASSIFICATION	8.419510782604969E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.995157051309643	DESIGN	0.004842948690357006	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9983551691912057	WITHOUT_CLASSIFICATION	0.0016448308087942977	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9996501324561109	WITHOUT_CLASSIFICATION	3.498675438891035E-4	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.7070154471384043	DESIGN	0.29298455286159586	WITHOUT_CLASSIFICATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.999936765958693	WITHOUT_CLASSIFICATION	6.323404130700404E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999991723866448	WITHOUT_CLASSIFICATION	8.27613355126841E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999948607858272	WITHOUT_CLASSIFICATION	5.139214172795677E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999948607858272	WITHOUT_CLASSIFICATION	5.139214172795677E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999948607858272	WITHOUT_CLASSIFICATION	5.139214172795677E-6	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999992594481942	WITHOUT_CLASSIFICATION	7.405518058157515E-7	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9996991163264278	WITHOUT_CLASSIFICATION	3.008836735722062E-4	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9994181061063407	WITHOUT_CLASSIFICATION	5.818938936592221E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999472447230173	WITHOUT_CLASSIFICATION	5.2755276982767186E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999472447230173	WITHOUT_CLASSIFICATION	5.2755276982767186E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999472447230173	WITHOUT_CLASSIFICATION	5.2755276982767186E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999472447230173	WITHOUT_CLASSIFICATION	5.2755276982767186E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999472447230173	WITHOUT_CLASSIFICATION	5.2755276982767186E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999472447230173	WITHOUT_CLASSIFICATION	5.2755276982767186E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999969146638745	WITHOUT_CLASSIFICATION	3.085336125491815E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999969146638745	WITHOUT_CLASSIFICATION	3.085336125491815E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999969146638745	WITHOUT_CLASSIFICATION	3.085336125491815E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999969146638745	WITHOUT_CLASSIFICATION	3.085336125491815E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999969146638745	WITHOUT_CLASSIFICATION	3.085336125491815E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999388410894491	WITHOUT_CLASSIFICATION	6.11589105509443E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999388410894491	WITHOUT_CLASSIFICATION	6.11589105509443E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999388410894491	WITHOUT_CLASSIFICATION	6.11589105509443E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999388410894491	WITHOUT_CLASSIFICATION	6.11589105509443E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999388410894491	WITHOUT_CLASSIFICATION	6.11589105509443E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999636173319001	WITHOUT_CLASSIFICATION	3.638266809981453E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999636173319001	WITHOUT_CLASSIFICATION	3.638266809981453E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999636173319001	WITHOUT_CLASSIFICATION	3.638266809981453E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999636173319001	WITHOUT_CLASSIFICATION	3.638266809981453E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999636173319001	WITHOUT_CLASSIFICATION	3.638266809981453E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999636173319001	WITHOUT_CLASSIFICATION	3.638266809981453E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999328163588475	WITHOUT_CLASSIFICATION	6.71836411524798E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999328163588475	WITHOUT_CLASSIFICATION	6.71836411524798E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999328163588475	WITHOUT_CLASSIFICATION	6.71836411524798E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999328163588475	WITHOUT_CLASSIFICATION	6.71836411524798E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999328163588475	WITHOUT_CLASSIFICATION	6.71836411524798E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999470411101452	WITHOUT_CLASSIFICATION	5.29588898548504E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999470411101452	WITHOUT_CLASSIFICATION	5.29588898548504E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999470411101452	WITHOUT_CLASSIFICATION	5.29588898548504E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999470411101452	WITHOUT_CLASSIFICATION	5.29588898548504E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999470411101452	WITHOUT_CLASSIFICATION	5.29588898548504E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999674438641164	WITHOUT_CLASSIFICATION	3.255613588356557E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999674438641164	WITHOUT_CLASSIFICATION	3.255613588356557E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999674438641164	WITHOUT_CLASSIFICATION	3.255613588356557E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999674438641164	WITHOUT_CLASSIFICATION	3.255613588356557E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999674438641164	WITHOUT_CLASSIFICATION	3.255613588356557E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999566975368354	WITHOUT_CLASSIFICATION	4.3302463164565674E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999992577603827	WITHOUT_CLASSIFICATION	7.4223961734911E-7	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999961998772188	WITHOUT_CLASSIFICATION	3.800122781110823E-6	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999973975739856	WITHOUT_CLASSIFICATION	2.6024260144004845E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999731627848796	WITHOUT_CLASSIFICATION	2.6837215120455287E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.999996391439057	WITHOUT_CLASSIFICATION	3.608560942987709E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999950748738358	WITHOUT_CLASSIFICATION	4.925126164196482E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999961525614132	WITHOUT_CLASSIFICATION	3.847438586827046E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999943103638896	WITHOUT_CLASSIFICATION	5.689636110356459E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999953880766356	WITHOUT_CLASSIFICATION	4.611923364467325E-6	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.999994411767006	WITHOUT_CLASSIFICATION	5.588232994030698E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999933832948967	WITHOUT_CLASSIFICATION	6.6167051032903494E-6	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999966429728389	WITHOUT_CLASSIFICATION	3.357027161251851E-6	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999964763376472	WITHOUT_CLASSIFICATION	3.523662352679876E-6	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999947461103497	WITHOUT_CLASSIFICATION	5.253889650348434E-6	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999953643695726	WITHOUT_CLASSIFICATION	4.635630427417745E-6	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999953943135605	WITHOUT_CLASSIFICATION	4.605686439429442E-6	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999953071982997	WITHOUT_CLASSIFICATION	4.692801700423003E-6	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999927831988004	WITHOUT_CLASSIFICATION	7.216801199708653E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999923295498412	WITHOUT_CLASSIFICATION	7.670450158846791E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999955952973398	WITHOUT_CLASSIFICATION	4.4047026600564194E-6	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999938127529499	WITHOUT_CLASSIFICATION	6.187247050180627E-6	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999946618745974	WITHOUT_CLASSIFICATION	5.33812540264903E-6	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999935434278774	WITHOUT_CLASSIFICATION	6.456572122541895E-6	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999942987369289	WITHOUT_CLASSIFICATION	5.70126307116222E-6	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999934982526449	WITHOUT_CLASSIFICATION	6.5017473550383146E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999943651304273	WITHOUT_CLASSIFICATION	5.634869572691469E-6	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999951657922225	WITHOUT_CLASSIFICATION	4.834207777564116E-6	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999933919729177	WITHOUT_CLASSIFICATION	6.608027082322374E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999945260233495	WITHOUT_CLASSIFICATION	5.473976650497556E-6	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999951605006671	WITHOUT_CLASSIFICATION	4.839499332890531E-6	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999919522413109	WITHOUT_CLASSIFICATION	8.047758689144792E-6	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.999992161744435	WITHOUT_CLASSIFICATION	7.838255564984965E-6	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999932381088176	WITHOUT_CLASSIFICATION	6.761891182423208E-6	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999918654523243	WITHOUT_CLASSIFICATION	8.13454767565721E-6	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.999990713271672	WITHOUT_CLASSIFICATION	9.286728327920373E-6	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999906513464237	WITHOUT_CLASSIFICATION	9.348653576383231E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999921649846649	WITHOUT_CLASSIFICATION	7.835015335024366E-6	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999932869641923	WITHOUT_CLASSIFICATION	6.713035807762176E-6	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999951300728424	WITHOUT_CLASSIFICATION	4.869927157603941E-6	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999932883445726	WITHOUT_CLASSIFICATION	6.7116554275078384E-6	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999917535618534	WITHOUT_CLASSIFICATION	8.246438146544357E-6	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.999992296209584	WITHOUT_CLASSIFICATION	7.703790416141065E-6	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999912438330061	WITHOUT_CLASSIFICATION	8.756166993891895E-6	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999861030591763	WITHOUT_CLASSIFICATION	1.3896940823646036E-5	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999915883385588	WITHOUT_CLASSIFICATION	8.411661441172184E-6	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999952774864216	WITHOUT_CLASSIFICATION	4.722513578405104E-6	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999949961104653	WITHOUT_CLASSIFICATION	5.003889534724727E-6	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999919039735676	WITHOUT_CLASSIFICATION	8.096026432413702E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999916067991235	WITHOUT_CLASSIFICATION	8.39320087660099E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999912399826565	WITHOUT_CLASSIFICATION	8.760017343514428E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999891170115996	WITHOUT_CLASSIFICATION	1.0882988400339309E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999883960583857	WITHOUT_CLASSIFICATION	1.1603941614248828E-5	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999949369982354	WITHOUT_CLASSIFICATION	5.063001764578261E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999949513632507	WITHOUT_CLASSIFICATION	5.048636749352585E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999941360178707	WITHOUT_CLASSIFICATION	5.863982129334513E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999901884317157	WITHOUT_CLASSIFICATION	9.811568284328969E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999947424115917	WITHOUT_CLASSIFICATION	5.2575884083496575E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.999995428073967	WITHOUT_CLASSIFICATION	4.571926032945471E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999935819214298	WITHOUT_CLASSIFICATION	6.418078570079297E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999933030069492	WITHOUT_CLASSIFICATION	6.696993050783156E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999943973499261	WITHOUT_CLASSIFICATION	5.602650073825576E-6	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999918455187681	WITHOUT_CLASSIFICATION	8.154481231937592E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999906919915507	WITHOUT_CLASSIFICATION	9.308008449408834E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999931237055203	WITHOUT_CLASSIFICATION	6.8762944796320565E-6	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999915233800568	WITHOUT_CLASSIFICATION	8.47661994317103E-6	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999928150831189	WITHOUT_CLASSIFICATION	7.184916881171828E-6	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999931916002425	WITHOUT_CLASSIFICATION	6.8083997575438635E-6	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999911981021433	WITHOUT_CLASSIFICATION	8.801897856691765E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999907497800999	WITHOUT_CLASSIFICATION	9.250219900102664E-6	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999901717566705	WITHOUT_CLASSIFICATION	9.828243329562811E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999916697291296	WITHOUT_CLASSIFICATION	8.330270870391033E-6	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999906170060578	WITHOUT_CLASSIFICATION	9.382993942172863E-6	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999868176838766	WITHOUT_CLASSIFICATION	1.3182316123475912E-5	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999884397256846	WITHOUT_CLASSIFICATION	1.1560274315276272E-5	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999947213083001	WITHOUT_CLASSIFICATION	5.278691699911346E-6	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999950596653997	WITHOUT_CLASSIFICATION	4.9403346002547215E-6	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999938220309806	WITHOUT_CLASSIFICATION	6.177969019460429E-6	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999924713438505	WITHOUT_CLASSIFICATION	7.528656149487601E-6	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999928797847707	WITHOUT_CLASSIFICATION	7.120215229389983E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999940249756878	WITHOUT_CLASSIFICATION	5.9750243121380914E-6	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999924934837215	WITHOUT_CLASSIFICATION	7.506516278431103E-6	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999941748158455	WITHOUT_CLASSIFICATION	5.82518415457194E-6	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999905871082867	WITHOUT_CLASSIFICATION	9.412891713244327E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999934375126676	WITHOUT_CLASSIFICATION	6.562487332536328E-6	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999953699491643	WITHOUT_CLASSIFICATION	4.630050835776115E-6	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999932186631001	WITHOUT_CLASSIFICATION	6.7813368998640955E-6	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999922209200472	WITHOUT_CLASSIFICATION	7.779079952705228E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999892109513764	WITHOUT_CLASSIFICATION	1.0789048623667328E-5	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999941568170233	WITHOUT_CLASSIFICATION	5.843182976741396E-6	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999949066058093	WITHOUT_CLASSIFICATION	5.093394190692299E-6	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999933453875945	WITHOUT_CLASSIFICATION	6.654612405460713E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999926874027931	WITHOUT_CLASSIFICATION	7.312597206892434E-6	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999922342064375	WITHOUT_CLASSIFICATION	7.765793562591523E-6	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999953276719455	WITHOUT_CLASSIFICATION	4.672328054537864E-6	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999937003342879	WITHOUT_CLASSIFICATION	6.2996657120785345E-6	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999952710914661	WITHOUT_CLASSIFICATION	4.72890853395238E-6	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999952181125188	WITHOUT_CLASSIFICATION	4.781887481266812E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.999995638991706	WITHOUT_CLASSIFICATION	4.361008293965812E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999938735282387	WITHOUT_CLASSIFICATION	6.126471761283775E-6	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999937235489711	WITHOUT_CLASSIFICATION	6.276451028951113E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999933513417019	WITHOUT_CLASSIFICATION	6.648658298179717E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999933559958601	WITHOUT_CLASSIFICATION	6.644004139851629E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999949437700074	WITHOUT_CLASSIFICATION	5.056229992469405E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.999992304948775	WITHOUT_CLASSIFICATION	7.695051224963826E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.999992349310618	WITHOUT_CLASSIFICATION	7.650689381928666E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999937361358919	WITHOUT_CLASSIFICATION	6.263864107982032E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999960393311577	WITHOUT_CLASSIFICATION	3.960668842340745E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999964743305922	WITHOUT_CLASSIFICATION	3.5256694077359014E-6	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.999996151310857	WITHOUT_CLASSIFICATION	3.848689143044122E-6	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999944864489226	WITHOUT_CLASSIFICATION	5.513551077376303E-6	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999954386596293	WITHOUT_CLASSIFICATION	4.5613403707211244E-6	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999958342743415	WITHOUT_CLASSIFICATION	4.165725658564872E-6	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999951286754561	WITHOUT_CLASSIFICATION	4.8713245437640195E-6	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999936498419497	WITHOUT_CLASSIFICATION	6.350158050277092E-6	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999938350940198	WITHOUT_CLASSIFICATION	6.164905980217623E-6	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999934778333663	WITHOUT_CLASSIFICATION	6.5221666336166395E-6	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999920506086701	WITHOUT_CLASSIFICATION	7.949391329877673E-6	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999933376942086	WITHOUT_CLASSIFICATION	6.662305791317602E-6	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999938391363059	WITHOUT_CLASSIFICATION	6.160863694083865E-6	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999936553189712	WITHOUT_CLASSIFICATION	6.344681028860796E-6	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999937005298057	WITHOUT_CLASSIFICATION	6.299470194303532E-6	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999928358641872	WITHOUT_CLASSIFICATION	7.164135812771975E-6	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999943922311657	WITHOUT_CLASSIFICATION	5.607768834343778E-6	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999917632434846	WITHOUT_CLASSIFICATION	8.236756515337783E-6	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999960599875395	WITHOUT_CLASSIFICATION	3.940012460546607E-6	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999935221451958	WITHOUT_CLASSIFICATION	6.477854804213983E-6	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999946296852678	WITHOUT_CLASSIFICATION	5.37031473230777E-6	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999952847711057	WITHOUT_CLASSIFICATION	4.715228894279707E-6	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999943800869213	WITHOUT_CLASSIFICATION	5.619913078685977E-6	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999927361401002	WITHOUT_CLASSIFICATION	7.263859899835564E-6	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999941686894792	WITHOUT_CLASSIFICATION	5.831310520864699E-6	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999921197773096	WITHOUT_CLASSIFICATION	7.88022269040825E-6	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999918721066885	WITHOUT_CLASSIFICATION	8.127893311598952E-6	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999917703825308	WITHOUT_CLASSIFICATION	8.229617469115386E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999920874553633	WITHOUT_CLASSIFICATION	7.912544636697197E-6	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999934337742631	WITHOUT_CLASSIFICATION	6.566225736966742E-6	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999953298934414	WITHOUT_CLASSIFICATION	4.670106558635456E-6	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.999996951641255	WITHOUT_CLASSIFICATION	3.048358745052982E-6	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.999995862783943	WITHOUT_CLASSIFICATION	4.137216056956269E-6	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999957407250847	WITHOUT_CLASSIFICATION	4.259274915299636E-6	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999960253026756	WITHOUT_CLASSIFICATION	3.974697324402629E-6	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999956156168939	WITHOUT_CLASSIFICATION	4.384383106103522E-6	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999956402528051	WITHOUT_CLASSIFICATION	4.359747194895746E-6	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999946155130068	WITHOUT_CLASSIFICATION	5.384486993253704E-6	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999947257026053	WITHOUT_CLASSIFICATION	5.274297394792545E-6	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999957905759481	WITHOUT_CLASSIFICATION	4.209424051844003E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.999995702523533	WITHOUT_CLASSIFICATION	4.29747646712351E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999948683588378	WITHOUT_CLASSIFICATION	5.131641162146528E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999967765415487	WITHOUT_CLASSIFICATION	3.223458451199395E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999960465588246	WITHOUT_CLASSIFICATION	3.9534411753909075E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999956949805178	WITHOUT_CLASSIFICATION	4.305019482304231E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999956511817341	WITHOUT_CLASSIFICATION	4.348818265955799E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999973333498825	WITHOUT_CLASSIFICATION	2.666650117525771E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999973052081917	WITHOUT_CLASSIFICATION	2.694791808332966E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999968825715774	WITHOUT_CLASSIFICATION	3.117428422575043E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999965561193546	WITHOUT_CLASSIFICATION	3.443880645388266E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999964449635331	WITHOUT_CLASSIFICATION	3.5550364669894397E-6	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.999996212076308	WITHOUT_CLASSIFICATION	3.7879236920783825E-6	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999962973175799	WITHOUT_CLASSIFICATION	3.702682419990259E-6	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999963244040007	WITHOUT_CLASSIFICATION	3.675595999368853E-6	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999947885830499	WITHOUT_CLASSIFICATION	5.211416950147091E-6	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999955357840342	WITHOUT_CLASSIFICATION	4.464215965752901E-6	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999951766781574	WITHOUT_CLASSIFICATION	4.823321842545131E-6	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999946928492685	WITHOUT_CLASSIFICATION	5.3071507315337806E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999961037124974	WITHOUT_CLASSIFICATION	3.896287502599991E-6	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999968435115489	WITHOUT_CLASSIFICATION	3.1564884510336064E-6	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999960268459382	WITHOUT_CLASSIFICATION	3.973154061682371E-6	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.99999626038973	WITHOUT_CLASSIFICATION	3.739610269978624E-6	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999951962471464	WITHOUT_CLASSIFICATION	4.8037528535063585E-6	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999952225817883	WITHOUT_CLASSIFICATION	4.7774182117676595E-6	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999950186114573	WITHOUT_CLASSIFICATION	4.981388542699454E-6	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999969940031954	WITHOUT_CLASSIFICATION	3.005996804590295E-6	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.999995245528297	WITHOUT_CLASSIFICATION	4.754471702972656E-6	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999951323065137	WITHOUT_CLASSIFICATION	4.867693486287845E-6	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999973249344668	WITHOUT_CLASSIFICATION	2.6750655331486406E-6	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999947952056929	WITHOUT_CLASSIFICATION	5.204794307124924E-6	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.999994010113758	WITHOUT_CLASSIFICATION	5.98988624198558E-6	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999965888572504	WITHOUT_CLASSIFICATION	3.4111427496442437E-6	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999965997868145	WITHOUT_CLASSIFICATION	3.400213185488275E-6	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999968676128959	WITHOUT_CLASSIFICATION	3.1323871041159276E-6	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999962700300021	WITHOUT_CLASSIFICATION	3.7299699978708847E-6	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999967005721341	WITHOUT_CLASSIFICATION	3.2994278660296485E-6	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999967124874465	WITHOUT_CLASSIFICATION	3.28751255356338E-6	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999970443143262	WITHOUT_CLASSIFICATION	2.955685673696587E-6	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999968179950259	WITHOUT_CLASSIFICATION	3.1820049740010192E-6	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999970906972834	WITHOUT_CLASSIFICATION	2.909302716550841E-6	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999968466960273	WITHOUT_CLASSIFICATION	3.1533039727825402E-6	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999961911480489	WITHOUT_CLASSIFICATION	3.8088519510591474E-6	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999967689865965	WITHOUT_CLASSIFICATION	3.2310134035328257E-6	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.999997050766772	WITHOUT_CLASSIFICATION	2.949233228014959E-6	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999970565078754	WITHOUT_CLASSIFICATION	2.943492124671466E-6	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999965240465724	WITHOUT_CLASSIFICATION	3.4759534277204604E-6	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999965966438777	WITHOUT_CLASSIFICATION	3.4033561223063953E-6	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999970278809857	WITHOUT_CLASSIFICATION	2.97211901436227E-6	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.999995944779427	WITHOUT_CLASSIFICATION	4.055220572999664E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999962538546089	WITHOUT_CLASSIFICATION	3.7461453911794452E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999963488964433	WITHOUT_CLASSIFICATION	3.6511035566844783E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999966061275384	WITHOUT_CLASSIFICATION	3.3938724616647233E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999957302821244	WITHOUT_CLASSIFICATION	4.269717875590637E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999966338247417	WITHOUT_CLASSIFICATION	3.3661752582861822E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999956973349792	WITHOUT_CLASSIFICATION	4.30266502085007E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999937628164854	WITHOUT_CLASSIFICATION	6.237183514554219E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999968588005641	WITHOUT_CLASSIFICATION	3.141199435822081E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999939204373073	WITHOUT_CLASSIFICATION	6.079562692632648E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999946514789092	WITHOUT_CLASSIFICATION	5.348521090774849E-6	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999964093247294	WITHOUT_CLASSIFICATION	3.5906752705197526E-6	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999955572982777	WITHOUT_CLASSIFICATION	4.442701722301777E-6	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9999955117098803	WITHOUT_CLASSIFICATION	4.4882901195931095E-6	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999962024375252	WITHOUT_CLASSIFICATION	3.797562474848936E-6	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999960603953661	WITHOUT_CLASSIFICATION	3.939604633861886E-6	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999967407805743	WITHOUT_CLASSIFICATION	3.2592194257775785E-6	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999956360146748	WITHOUT_CLASSIFICATION	4.363985325235395E-6	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999969089051434	WITHOUT_CLASSIFICATION	3.091094856620666E-6	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999956579639588	WITHOUT_CLASSIFICATION	4.342036041182123E-6	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999954689588305	WITHOUT_CLASSIFICATION	4.5310411695161785E-6	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.999994505849203	WITHOUT_CLASSIFICATION	5.494150796903502E-6	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999944399936398	WITHOUT_CLASSIFICATION	5.560006360191464E-6	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999953402157844	WITHOUT_CLASSIFICATION	4.659784215615959E-6	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999951161358043	WITHOUT_CLASSIFICATION	4.8838641956799944E-6	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999954318180967	WITHOUT_CLASSIFICATION	4.568181903393027E-6	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.999995684564976	WITHOUT_CLASSIFICATION	4.315435023986705E-6	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999952005027527	WITHOUT_CLASSIFICATION	4.79949724737242E-6	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999950952720396	WITHOUT_CLASSIFICATION	4.904727960453162E-6	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999929092644176	WITHOUT_CLASSIFICATION	7.090735582384218E-6	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999950655766839	WITHOUT_CLASSIFICATION	4.934423315994344E-6	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999964822742705	WITHOUT_CLASSIFICATION	3.5177257295562845E-6	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.999996703883692	WITHOUT_CLASSIFICATION	3.296116307965809E-6	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999961664838735	WITHOUT_CLASSIFICATION	3.833516126499028E-6	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999953286743991	WITHOUT_CLASSIFICATION	4.671325600836912E-6	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999949328638001	WITHOUT_CLASSIFICATION	5.067136199888842E-6	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999964768841584	WITHOUT_CLASSIFICATION	3.5231158416462937E-6	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999950506223373	WITHOUT_CLASSIFICATION	4.94937766271471E-6	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.999995649615259	WITHOUT_CLASSIFICATION	4.350384741041171E-6	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999951891766727	WITHOUT_CLASSIFICATION	4.8108233271922995E-6	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.999995776921431	WITHOUT_CLASSIFICATION	4.223078568885385E-6	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.999994973663986	WITHOUT_CLASSIFICATION	5.026336014027242E-6	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999955688912879	WITHOUT_CLASSIFICATION	4.431108712000563E-6	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.999994937752549	WITHOUT_CLASSIFICATION	5.062247450981634E-6	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999966810315286	WITHOUT_CLASSIFICATION	3.3189684712798144E-6	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999960864827092	WITHOUT_CLASSIFICATION	3.913517290787684E-6	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999964615141187	WITHOUT_CLASSIFICATION	3.538485881295049E-6	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.999994880865184	WITHOUT_CLASSIFICATION	5.119134815941458E-6	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.999995064782429	WITHOUT_CLASSIFICATION	4.935217570897122E-6	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999936455775273	WITHOUT_CLASSIFICATION	6.3544224725783065E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999952065948611	WITHOUT_CLASSIFICATION	4.793405138990553E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999968776368953	WITHOUT_CLASSIFICATION	3.122363104832819E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999969692095335	WITHOUT_CLASSIFICATION	3.030790466527337E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999952997348537	WITHOUT_CLASSIFICATION	4.700265146297038E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999941245343225	WITHOUT_CLASSIFICATION	5.875465677497156E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999965046428597	WITHOUT_CLASSIFICATION	3.4953571401960445E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999964856299227	WITHOUT_CLASSIFICATION	3.514370077302779E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999949518912541	WITHOUT_CLASSIFICATION	5.048108745882892E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999958588469406	WITHOUT_CLASSIFICATION	4.141153059341908E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.999997316523973	WITHOUT_CLASSIFICATION	2.6834760270769697E-6	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999958417759224	WITHOUT_CLASSIFICATION	4.1582240775766865E-6	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999957082977738	WITHOUT_CLASSIFICATION	4.291702226069612E-6	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999968625307004	WITHOUT_CLASSIFICATION	3.1374692995566812E-6	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999968679947999	WITHOUT_CLASSIFICATION	3.132005200141345E-6	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999948808207436	WITHOUT_CLASSIFICATION	5.119179256422841E-6	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999956054621383	WITHOUT_CLASSIFICATION	4.394537861717799E-6	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999960224353747	WITHOUT_CLASSIFICATION	3.977564625249336E-6	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999951207548347	WITHOUT_CLASSIFICATION	4.879245165273411E-6	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.999995368657571	WITHOUT_CLASSIFICATION	4.63134242904539E-6	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999955141441997	WITHOUT_CLASSIFICATION	4.485855800237417E-6	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999952542820777	WITHOUT_CLASSIFICATION	4.745717922306698E-6	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.999995953711439	WITHOUT_CLASSIFICATION	4.046288561033397E-6	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999968111552652	WITHOUT_CLASSIFICATION	3.1888447348528535E-6	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999948375468376	WITHOUT_CLASSIFICATION	5.162453162296998E-6	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999948955888059	WITHOUT_CLASSIFICATION	5.104411194061965E-6	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999965024875305	WITHOUT_CLASSIFICATION	3.4975124694446006E-6	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999953383120129	WITHOUT_CLASSIFICATION	4.661687987077441E-6	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999955184992984	WITHOUT_CLASSIFICATION	4.481500701638014E-6	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999960323945842	WITHOUT_CLASSIFICATION	3.967605415822095E-6	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999940977117905	WITHOUT_CLASSIFICATION	5.902288209559912E-6	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.999993665750362	WITHOUT_CLASSIFICATION	6.334249638000774E-6	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999953762566516	WITHOUT_CLASSIFICATION	4.623743348468571E-6	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999946161240275	WITHOUT_CLASSIFICATION	5.383875972534735E-6	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.999994604132863	WITHOUT_CLASSIFICATION	5.395867136941358E-6	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999930560889542	WITHOUT_CLASSIFICATION	6.94391104575749E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999967442236087	WITHOUT_CLASSIFICATION	3.2557763912116734E-6	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999954295324026	WITHOUT_CLASSIFICATION	4.570467597301856E-6	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999952309103323	WITHOUT_CLASSIFICATION	4.769089667786827E-6	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999945169056171	WITHOUT_CLASSIFICATION	5.483094382851711E-6	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999945123724742	WITHOUT_CLASSIFICATION	5.487627525812856E-6	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999963671638085	WITHOUT_CLASSIFICATION	3.6328361914899114E-6	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999962657148519	WITHOUT_CLASSIFICATION	3.7342851480548758E-6	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999940629614343	WITHOUT_CLASSIFICATION	5.937038565588164E-6	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.99999637572135	WITHOUT_CLASSIFICATION	3.624278649874486E-6	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999960138107837	WITHOUT_CLASSIFICATION	3.986189216323538E-6	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999973149670652	WITHOUT_CLASSIFICATION	2.6850329347685273E-6	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.999997177281893	WITHOUT_CLASSIFICATION	2.8227181070548456E-6	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999965107983768	WITHOUT_CLASSIFICATION	3.4892016231920965E-6	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999964052571262	WITHOUT_CLASSIFICATION	3.594742873782477E-6	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9985500375971513	WITHOUT_CLASSIFICATION	0.0014499624028486279	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9982345778638768	WITHOUT_CLASSIFICATION	0.001765422136123121	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999985932359791	WITHOUT_CLASSIFICATION	1.4067640209895214E-6	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999685878533136	WITHOUT_CLASSIFICATION	3.141214668646328E-5	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999992886115026	WITHOUT_CLASSIFICATION	7.113884974370086E-7	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999804263917703	WITHOUT_CLASSIFICATION	1.957360822973086E-5	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999984757433807	WITHOUT_CLASSIFICATION	1.5242566193568017E-6	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999438096934965	WITHOUT_CLASSIFICATION	5.6190306503477E-5	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9999961638673321	WITHOUT_CLASSIFICATION	3.836132667857955E-6	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999959979131412	WITHOUT_CLASSIFICATION	4.002086858753263E-6	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.999997434871829	WITHOUT_CLASSIFICATION	2.5651281709743544E-6	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.999996082265852	WITHOUT_CLASSIFICATION	3.917734148043454E-6	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999952201767056	WITHOUT_CLASSIFICATION	4.779823294374559E-6	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999958696676373	WITHOUT_CLASSIFICATION	4.130332362698878E-6	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.999996365998033	WITHOUT_CLASSIFICATION	3.634001966971448E-6	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999946432171772	WITHOUT_CLASSIFICATION	5.356782822724321E-6	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999949320605808	WITHOUT_CLASSIFICATION	5.067939419301453E-6	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999959454221528	WITHOUT_CLASSIFICATION	4.054577847276838E-6	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999954248155105	WITHOUT_CLASSIFICATION	4.575184489464411E-6	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999961011006407	WITHOUT_CLASSIFICATION	3.898899359246397E-6	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999965454084181	WITHOUT_CLASSIFICATION	3.4545915819532972E-6	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999958133276601	WITHOUT_CLASSIFICATION	4.186672339911145E-6	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999950511200084	WITHOUT_CLASSIFICATION	4.948879991516579E-6	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999947643285506	WITHOUT_CLASSIFICATION	5.235671449427842E-6	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.999995405026542	WITHOUT_CLASSIFICATION	4.594973457947783E-6	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999966409239416	WITHOUT_CLASSIFICATION	3.3590760584802604E-6	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999969316345868	WITHOUT_CLASSIFICATION	3.0683654133043816E-6	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999949240464325	WITHOUT_CLASSIFICATION	5.075953567443074E-6	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999966122601146	WITHOUT_CLASSIFICATION	3.3877398854540773E-6	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.999995102416885	WITHOUT_CLASSIFICATION	4.897583115008063E-6	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999975113262016	WITHOUT_CLASSIFICATION	2.4886737983139773E-6	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999516005213809	WITHOUT_CLASSIFICATION	4.839947861912838E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999407657139461	WITHOUT_CLASSIFICATION	5.923428605394769E-5	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999992555519424	WITHOUT_CLASSIFICATION	7.444480575986881E-7	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999970768318047	WITHOUT_CLASSIFICATION	2.9231681953438036E-6	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.999999918712728	WITHOUT_CLASSIFICATION	8.128727203417611E-8	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9998887490739307	WITHOUT_CLASSIFICATION	1.1125092606928044E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999950286099766	WITHOUT_CLASSIFICATION	4.971390023426871E-6	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999970057263537	WITHOUT_CLASSIFICATION	2.9942736463587737E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999927478947958	WITHOUT_CLASSIFICATION	7.252105204297577E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999927478947958	WITHOUT_CLASSIFICATION	7.252105204297577E-6	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9852861273221655	WITHOUT_CLASSIFICATION	0.014713872677834474	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999858165296138	WITHOUT_CLASSIFICATION	1.4183470386081E-5	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999995362781174	WITHOUT_CLASSIFICATION	4.637218825958851E-7	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999993693899284	WITHOUT_CLASSIFICATION	6.306100716069828E-7	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999983660355385	WITHOUT_CLASSIFICATION	1.633964461579009E-6	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9971066672167012	WITHOUT_CLASSIFICATION	0.002893332783298708	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9996123840650122	WITHOUT_CLASSIFICATION	3.876159349878428E-4	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9997937727517664	WITHOUT_CLASSIFICATION	2.0622724823354975E-4	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999992275907519	WITHOUT_CLASSIFICATION	7.7240924808862E-6	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999736776325099	WITHOUT_CLASSIFICATION	2.6322367490111912E-5	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9941484651924358	WITHOUT_CLASSIFICATION	0.00585153480756407	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9946222008777509	WITHOUT_CLASSIFICATION	0.00537779912224912	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999997729152231	WITHOUT_CLASSIFICATION	2.2708477694501098E-7	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999998353009387	WITHOUT_CLASSIFICATION	1.6469906136457939E-7	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999780835670556	WITHOUT_CLASSIFICATION	2.1916432944263558E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999780835670556	WITHOUT_CLASSIFICATION	2.1916432944263558E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9998489257215515	WITHOUT_CLASSIFICATION	1.510742784485363E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999684497124132	WITHOUT_CLASSIFICATION	3.155028758688001E-5	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999924954672308	WITHOUT_CLASSIFICATION	7.504532769123431E-6	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999996034001711	WITHOUT_CLASSIFICATION	3.9659982890200305E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9969902274810833	WITHOUT_CLASSIFICATION	0.003009772518916709	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999993214176864	WITHOUT_CLASSIFICATION	6.785823135622866E-7	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999996248302983	WITHOUT_CLASSIFICATION	3.7516970178345277E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999993214176864	WITHOUT_CLASSIFICATION	6.785823135622866E-7	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999933057218526	WITHOUT_CLASSIFICATION	6.694278147478306E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999984149430927	WITHOUT_CLASSIFICATION	1.58505690730338E-5	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9894848226677702	WITHOUT_CLASSIFICATION	0.010515177332229831	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9993744786276066	WITHOUT_CLASSIFICATION	6.255213723933069E-4	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999080470555335	WITHOUT_CLASSIFICATION	9.195294446645627E-5	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9995490858895578	WITHOUT_CLASSIFICATION	4.509141104421296E-4	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999970056306877	WITHOUT_CLASSIFICATION	2.994369312294194E-6	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999702338582973	WITHOUT_CLASSIFICATION	2.976614170276677E-5	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999883921191036	WITHOUT_CLASSIFICATION	1.1607880896305887E-5	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9196111762508155	WITHOUT_CLASSIFICATION	0.08038882374918463	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999076146972555	WITHOUT_CLASSIFICATION	9.238530274458127E-5	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999504757426674	WITHOUT_CLASSIFICATION	4.9524257332722E-5	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999788861852905	WITHOUT_CLASSIFICATION	2.111381470950236E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9994601714585273	WITHOUT_CLASSIFICATION	5.398285414726977E-4	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999993176525315	WITHOUT_CLASSIFICATION	6.823474686028575E-7	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999993176525315	WITHOUT_CLASSIFICATION	6.823474686028575E-7	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999955770978664	WITHOUT_CLASSIFICATION	4.42290213358931E-6	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999879809500293	WITHOUT_CLASSIFICATION	1.2019049970755527E-5	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999995448878624	WITHOUT_CLASSIFICATION	4.5511213759180633E-7	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999950669246774	WITHOUT_CLASSIFICATION	4.9330753225025915E-6	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999995171555425	WITHOUT_CLASSIFICATION	4.828444575878491E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999993214176864	WITHOUT_CLASSIFICATION	6.785823135622866E-7	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999874311715327	WITHOUT_CLASSIFICATION	1.2568828467232302E-5	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999690336405	WITHOUT_CLASSIFICATION	3.0966359408025266E-8	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999981600203227	WITHOUT_CLASSIFICATION	1.8399796772662845E-6	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999875595950531	WITHOUT_CLASSIFICATION	1.244040494686738E-5	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999963822469125	WITHOUT_CLASSIFICATION	3.6177530874644617E-6	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999884948171	WITHOUT_CLASSIFICATION	1.150518286726004E-8	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999999932882107	WITHOUT_CLASSIFICATION	6.711789317776382E-9	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999647808060851	WITHOUT_CLASSIFICATION	3.521919391485233E-5	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9997184735303527	WITHOUT_CLASSIFICATION	2.815264696472369E-4	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9924669130646385	WITHOUT_CLASSIFICATION	0.007533086935361439	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.999997063971799	WITHOUT_CLASSIFICATION	2.9360282010468325E-6	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999615269603949	WITHOUT_CLASSIFICATION	3.8473039605112635E-5	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9558495537963027	WITHOUT_CLASSIFICATION	0.04415044620369744	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999977854339199	WITHOUT_CLASSIFICATION	2.2145660801508508E-6	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.6738066511966637	DESIGN	0.32619334880333617	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9993500331303399	WITHOUT_CLASSIFICATION	6.49966869660099E-4	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999288262527165	WITHOUT_CLASSIFICATION	7.117374728347093E-5	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.99991064426911	WITHOUT_CLASSIFICATION	8.93557308898655E-5	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.999999805976619	WITHOUT_CLASSIFICATION	1.9402338110486934E-7	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999909948813551	WITHOUT_CLASSIFICATION	9.00511864489856E-6	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999956338153678	WITHOUT_CLASSIFICATION	4.366184632154669E-6	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9998366788334452	WITHOUT_CLASSIFICATION	1.633211665547832E-4	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9998988988562788	WITHOUT_CLASSIFICATION	1.0110114372120858E-4	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999651562207139	WITHOUT_CLASSIFICATION	3.484377928597656E-5	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9998499844599427	WITHOUT_CLASSIFICATION	1.5001554005744015E-4	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999498926716146	WITHOUT_CLASSIFICATION	5.010732838547258E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9997554082258353	WITHOUT_CLASSIFICATION	2.4459177416468484E-4	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999305890486014	WITHOUT_CLASSIFICATION	6.941095139854237E-5	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9967060634299887	WITHOUT_CLASSIFICATION	0.003293936570011362	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999894580755863	WITHOUT_CLASSIFICATION	1.054192441374254E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999752300100092	WITHOUT_CLASSIFICATION	2.4769989990719407E-5	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999955930253366	WITHOUT_CLASSIFICATION	4.406974663420196E-6	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9994389779078088	WITHOUT_CLASSIFICATION	5.610220921911922E-4	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.999998920701113	WITHOUT_CLASSIFICATION	1.0792988869720552E-6	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9997754704670235	WITHOUT_CLASSIFICATION	2.2452953297650714E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999990974029336	WITHOUT_CLASSIFICATION	9.025970664268683E-7	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9995974587811968	WITHOUT_CLASSIFICATION	4.025412188032191E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9999707352285483	WITHOUT_CLASSIFICATION	2.9264771451733193E-5	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.999990697826946	WITHOUT_CLASSIFICATION	9.302173054024298E-6	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9979967268904382	WITHOUT_CLASSIFICATION	0.0020032731095617888	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999438096934965	WITHOUT_CLASSIFICATION	5.6190306503477E-5	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999787603807204	WITHOUT_CLASSIFICATION	2.1239619279548138E-5	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999607738368969	WITHOUT_CLASSIFICATION	3.922616310314577E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999997240093786	WITHOUT_CLASSIFICATION	2.7599062140942396E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999993291656997	WITHOUT_CLASSIFICATION	6.708343003490909E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999984149430927	WITHOUT_CLASSIFICATION	1.58505690730338E-5	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9998780026357362	WITHOUT_CLASSIFICATION	1.2199736426372841E-4	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9983439961154438	WITHOUT_CLASSIFICATION	0.0016560038845562625	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9997221583874127	WITHOUT_CLASSIFICATION	2.77841612587215E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988838208895	WITHOUT_CLASSIFICATION	1.1161791104600105E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988838208895	WITHOUT_CLASSIFICATION	1.1161791104600105E-6	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999960783829078	WITHOUT_CLASSIFICATION	3.921617092152675E-6	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999960783829078	WITHOUT_CLASSIFICATION	3.921617092152675E-6	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999960783829078	WITHOUT_CLASSIFICATION	3.921617092152675E-6	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999877871066463	WITHOUT_CLASSIFICATION	1.2212893353685402E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999877871066463	WITHOUT_CLASSIFICATION	1.2212893353685402E-5	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999962307688643	WITHOUT_CLASSIFICATION	3.7692311356798556E-6	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999962307688643	WITHOUT_CLASSIFICATION	3.7692311356798556E-6	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999831340254768	WITHOUT_CLASSIFICATION	1.6865974523230764E-5	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999923924555714	WITHOUT_CLASSIFICATION	7.607544428592514E-6	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.999967043008138	WITHOUT_CLASSIFICATION	3.295699186188568E-5	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.999967043008138	WITHOUT_CLASSIFICATION	3.295699186188568E-5	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999894911685989	WITHOUT_CLASSIFICATION	1.0508831401005047E-5	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999670749335045	WITHOUT_CLASSIFICATION	3.2925066495602286E-5	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9988304866865406	WITHOUT_CLASSIFICATION	0.0011695133134592788	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999988256074864	WITHOUT_CLASSIFICATION	1.1743925135243295E-6	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999942905219947	WITHOUT_CLASSIFICATION	5.709478005171457E-6	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999975404967997	WITHOUT_CLASSIFICATION	2.459503200338398E-6	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999708435504959	WITHOUT_CLASSIFICATION	2.9156449504180463E-5	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9990993922194437	WITHOUT_CLASSIFICATION	9.006077805563486E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999788535623867	WITHOUT_CLASSIFICATION	2.1146437613205466E-5	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999474536045916	WITHOUT_CLASSIFICATION	5.254639540843368E-5	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999329151730404	WITHOUT_CLASSIFICATION	6.708482695955325E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999714177850723	WITHOUT_CLASSIFICATION	2.8582214927848006E-5	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999960654362696	WITHOUT_CLASSIFICATION	3.934563730406536E-6	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9999753873556224	WITHOUT_CLASSIFICATION	2.4612644377630543E-5	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999751750749981	WITHOUT_CLASSIFICATION	2.4824925001893378E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9992371213073229	WITHOUT_CLASSIFICATION	7.628786926770925E-4	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998097283177507	WITHOUT_CLASSIFICATION	1.9027168224918488E-4	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9998417810135123	WITHOUT_CLASSIFICATION	1.5821898648770113E-4	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999681134644678	WITHOUT_CLASSIFICATION	3.188653553212569E-5	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9972726189697745	WITHOUT_CLASSIFICATION	0.002727381030225534	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998468906507504	WITHOUT_CLASSIFICATION	1.5310934924962508E-4	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9997210436354869	WITHOUT_CLASSIFICATION	2.7895636451318864E-4	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999897215705537	WITHOUT_CLASSIFICATION	1.0278429446382615E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999984834022746	WITHOUT_CLASSIFICATION	1.5165977254169049E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999992481030264	WITHOUT_CLASSIFICATION	7.518969735945029E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999993395924387	WITHOUT_CLASSIFICATION	6.604075613468642E-7	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999966436172489	WITHOUT_CLASSIFICATION	3.3563827510088023E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999930424461324	WITHOUT_CLASSIFICATION	6.957553867634998E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999948131551827	WITHOUT_CLASSIFICATION	5.186844817366495E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999974284676335	WITHOUT_CLASSIFICATION	2.571532366625758E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999977413663643	WITHOUT_CLASSIFICATION	2.258633635750463E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984998525301	WITHOUT_CLASSIFICATION	1.5001474699670825E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999992562587202	WITHOUT_CLASSIFICATION	7.437412798095201E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993354579723	WITHOUT_CLASSIFICATION	6.645420276684073E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999992562587202	WITHOUT_CLASSIFICATION	7.437412798095201E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999992562587202	WITHOUT_CLASSIFICATION	7.437412798095201E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999992562587202	WITHOUT_CLASSIFICATION	7.437412798095201E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999992562587202	WITHOUT_CLASSIFICATION	7.437412798095201E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999992562587202	WITHOUT_CLASSIFICATION	7.437412798095201E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999992562587202	WITHOUT_CLASSIFICATION	7.437412798095201E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993354579723	WITHOUT_CLASSIFICATION	6.645420276684073E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993354579723	WITHOUT_CLASSIFICATION	6.645420276684073E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993354579723	WITHOUT_CLASSIFICATION	6.645420276684073E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993354579723	WITHOUT_CLASSIFICATION	6.645420276684073E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993354579723	WITHOUT_CLASSIFICATION	6.645420276684073E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993354579723	WITHOUT_CLASSIFICATION	6.645420276684073E-7	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999953510525861	WITHOUT_CLASSIFICATION	4.6489474139918786E-6	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999646632034694	WITHOUT_CLASSIFICATION	3.533679653053766E-5	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999789099069204	WITHOUT_CLASSIFICATION	2.1090093079625892E-5	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999992265213655	WITHOUT_CLASSIFICATION	7.734786344945524E-6	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9998744656557501	WITHOUT_CLASSIFICATION	1.2553434424987837E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999945051304272	WITHOUT_CLASSIFICATION	5.494869572824432E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999795850043953	WITHOUT_CLASSIFICATION	2.041499560471543E-5	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999998716532423	WITHOUT_CLASSIFICATION	1.2834675769060226E-6	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999996418956181	WITHOUT_CLASSIFICATION	3.581043819674362E-7	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999948777780473	WITHOUT_CLASSIFICATION	5.122221952658423E-6	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9998439263674197	WITHOUT_CLASSIFICATION	1.5607363258035472E-4	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999944315333068	WITHOUT_CLASSIFICATION	5.56846669312262E-6	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999974605851973	WITHOUT_CLASSIFICATION	2.5394148026310754E-6	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999677628502	WITHOUT_CLASSIFICATION	3.223714977070993E-8	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999827951411813	WITHOUT_CLASSIFICATION	1.7204858818662572E-5	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.994753112750126	WITHOUT_CLASSIFICATION	0.005246887249873988	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999894681180214	WITHOUT_CLASSIFICATION	1.0531881978724867E-5	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999843280254275	WITHOUT_CLASSIFICATION	1.5671974572536756E-5	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999867605055834	WITHOUT_CLASSIFICATION	1.3239494416509075E-5	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999996099630934	WITHOUT_CLASSIFICATION	3.9003690652288923E-7	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.999999999442754	WITHOUT_CLASSIFICATION	5.572460791646426E-10	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999529048607281	WITHOUT_CLASSIFICATION	4.7095139271922495E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999996248302983	WITHOUT_CLASSIFICATION	3.7516970178345277E-7	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9996713861512723	WITHOUT_CLASSIFICATION	3.2861384872766004E-4	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999991067280998	WITHOUT_CLASSIFICATION	8.932719002863256E-7	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999999979416853	WITHOUT_CLASSIFICATION	2.0583147029079343E-8	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9997288965707644	WITHOUT_CLASSIFICATION	2.711034292356767E-4	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.99999987115097	WITHOUT_CLASSIFICATION	1.288490300373917E-7	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999993599951179	WITHOUT_CLASSIFICATION	6.400048821049213E-7	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999997270782401	WITHOUT_CLASSIFICATION	2.729217598475333E-7	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999999605034536	WITHOUT_CLASSIFICATION	3.949654647083385E-8	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999892491997	WITHOUT_CLASSIFICATION	1.0750800290905289E-8	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999964740636518	WITHOUT_CLASSIFICATION	3.52593634818232E-6	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999997407337501	WITHOUT_CLASSIFICATION	2.592662499024136E-7	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999979578440139	WITHOUT_CLASSIFICATION	2.0421559860560896E-6	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9997773820390694	WITHOUT_CLASSIFICATION	2.2261796093062187E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999988344753499	WITHOUT_CLASSIFICATION	1.1655246501322315E-6	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999711497824931	WITHOUT_CLASSIFICATION	2.885021750682187E-5	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999983839215028	WITHOUT_CLASSIFICATION	1.6160784973451923E-6	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.99999705687593	WITHOUT_CLASSIFICATION	2.9431240700843748E-6	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997029489973468	WITHOUT_CLASSIFICATION	2.970510026531721E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999990916889684	WITHOUT_CLASSIFICATION	9.083110317093915E-7	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999770012997	WITHOUT_CLASSIFICATION	2.2998700298271482E-8	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999324115266081	WITHOUT_CLASSIFICATION	6.758847339190532E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999324115266081	WITHOUT_CLASSIFICATION	6.758847339190532E-5	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999977760469317	WITHOUT_CLASSIFICATION	2.223953068318432E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999977760469317	WITHOUT_CLASSIFICATION	2.223953068318432E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999776935036663	WITHOUT_CLASSIFICATION	2.2306496333722195E-5	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999776935036663	WITHOUT_CLASSIFICATION	2.2306496333722195E-5	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999997463605732	WITHOUT_CLASSIFICATION	2.5363942680945546E-7	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999494003675049	WITHOUT_CLASSIFICATION	5.0599632495118754E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999986726957829	WITHOUT_CLASSIFICATION	1.327304217096853E-6	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999952555630113	WITHOUT_CLASSIFICATION	4.744436988750006E-6	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999966845715493	WITHOUT_CLASSIFICATION	3.315428450731128E-6	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9956302090978244	WITHOUT_CLASSIFICATION	0.004369790902175606	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9999277789752887	WITHOUT_CLASSIFICATION	7.22210247112466E-5	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.999995505717942	WITHOUT_CLASSIFICATION	4.494282058033261E-6	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999545857612067	WITHOUT_CLASSIFICATION	4.5414238793370544E-5	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999639710464805	WITHOUT_CLASSIFICATION	3.602895351955933E-5	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999984638983254	WITHOUT_CLASSIFICATION	1.536101674644977E-6	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999998123311126	WITHOUT_CLASSIFICATION	1.8766888728809433E-7	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9996597496874999	WITHOUT_CLASSIFICATION	3.4025031250009715E-4	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9995914215294045	WITHOUT_CLASSIFICATION	4.0857847059548623E-4	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9995595902158564	WITHOUT_CLASSIFICATION	4.4040978414368337E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999168985653603	WITHOUT_CLASSIFICATION	8.310143463965314E-5	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999998134076183	WITHOUT_CLASSIFICATION	1.865923815726185E-7	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999991301884292	WITHOUT_CLASSIFICATION	8.698115708086067E-7	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999128975543565	WITHOUT_CLASSIFICATION	8.710244564351053E-5	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999756357578129	WITHOUT_CLASSIFICATION	2.4364242187158246E-5	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999831014898156	WITHOUT_CLASSIFICATION	1.6898510184291643E-5	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9987030845038812	WITHOUT_CLASSIFICATION	0.001296915496118752	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999910202738613	WITHOUT_CLASSIFICATION	8.979726138656223E-6	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999906067534422	WITHOUT_CLASSIFICATION	9.393246557852636E-6	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999992182361384	WITHOUT_CLASSIFICATION	7.81763861742768E-7	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999772544562952	WITHOUT_CLASSIFICATION	2.2745543704860292E-5	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9999733561380163	WITHOUT_CLASSIFICATION	2.6643861983716022E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999912124833191	WITHOUT_CLASSIFICATION	8.787516680945762E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999912124833191	WITHOUT_CLASSIFICATION	8.787516680945762E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999912124833191	WITHOUT_CLASSIFICATION	8.787516680945762E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9980835489876027	WITHOUT_CLASSIFICATION	0.0019164510123973492	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9980835489876027	WITHOUT_CLASSIFICATION	0.0019164510123973492	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999977854339199	WITHOUT_CLASSIFICATION	2.2145660801508508E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999977854339199	WITHOUT_CLASSIFICATION	2.2145660801508508E-6	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.999998512291547	WITHOUT_CLASSIFICATION	1.4877084529861447E-6	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.6492065362796852	DESIGN	0.3507934637203148	WITHOUT_CLASSIFICATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999549052682468	WITHOUT_CLASSIFICATION	4.509473175328103E-5	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999968391199175	WITHOUT_CLASSIFICATION	3.160880082496869E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999912124833191	WITHOUT_CLASSIFICATION	8.787516680945762E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999912124833191	WITHOUT_CLASSIFICATION	8.787516680945762E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999912124833191	WITHOUT_CLASSIFICATION	8.787516680945762E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9980835489876027	WITHOUT_CLASSIFICATION	0.0019164510123973492	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9980835489876027	WITHOUT_CLASSIFICATION	0.0019164510123973492	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9980835489876027	WITHOUT_CLASSIFICATION	0.0019164510123973492	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999977854339199	WITHOUT_CLASSIFICATION	2.2145660801508508E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999977854339199	WITHOUT_CLASSIFICATION	2.2145660801508508E-6	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999246281088329	WITHOUT_CLASSIFICATION	7.537189116715355E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999454544904726	WITHOUT_CLASSIFICATION	5.454550952740837E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999924313947766	WITHOUT_CLASSIFICATION	7.5686052234402605E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999924313947766	WITHOUT_CLASSIFICATION	7.5686052234402605E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999924313947766	WITHOUT_CLASSIFICATION	7.5686052234402605E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999924313947766	WITHOUT_CLASSIFICATION	7.5686052234402605E-6	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999924313947766	WITHOUT_CLASSIFICATION	7.5686052234402605E-6	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999760826931583	WITHOUT_CLASSIFICATION	2.3917306841612836E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9998791006543333	WITHOUT_CLASSIFICATION	1.2089934566665321E-4	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999972039465987	WITHOUT_CLASSIFICATION	2.7960534012985847E-6	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999954534929403	WITHOUT_CLASSIFICATION	4.5465070598111136E-6	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999844667851986	WITHOUT_CLASSIFICATION	1.5533214801350987E-5	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999000054023459	WITHOUT_CLASSIFICATION	9.999459765403732E-5	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999985092349105	WITHOUT_CLASSIFICATION	1.4907650895505997E-6	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.99998821051665	WITHOUT_CLASSIFICATION	1.1789483349998218E-5	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.999998800255512	WITHOUT_CLASSIFICATION	1.199744487979512E-6	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999629809494222	WITHOUT_CLASSIFICATION	3.7019050577927736E-5	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999981682496422	WITHOUT_CLASSIFICATION	1.8317503578303544E-6	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999976200320111	WITHOUT_CLASSIFICATION	2.379967988892862E-5	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.999999384217323	WITHOUT_CLASSIFICATION	6.157826769538589E-7	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.99999557087617	WITHOUT_CLASSIFICATION	4.429123830056591E-6	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9983087277703657	WITHOUT_CLASSIFICATION	0.0016912722296341747	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998936955734156	WITHOUT_CLASSIFICATION	1.0630442658445307E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998936955734156	WITHOUT_CLASSIFICATION	1.0630442658445307E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998936955734156	WITHOUT_CLASSIFICATION	1.0630442658445307E-4	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9992961863441193	WITHOUT_CLASSIFICATION	7.038136558807328E-4	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9992960879921651	WITHOUT_CLASSIFICATION	7.03912007834925E-4	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999989656523951	WITHOUT_CLASSIFICATION	1.0343476048731638E-6	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999846220623202	WITHOUT_CLASSIFICATION	1.537793767979977E-5	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999818915794072	WITHOUT_CLASSIFICATION	1.810842059279097E-5	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9990854289474655	WITHOUT_CLASSIFICATION	9.145710525345316E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9996666752466018	WITHOUT_CLASSIFICATION	3.3332475339820154E-4	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9997482459563823	WITHOUT_CLASSIFICATION	2.517540436176213E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9997230311231164	WITHOUT_CLASSIFICATION	2.769688768836136E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9998021096385578	WITHOUT_CLASSIFICATION	1.9789036144209383E-4	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999582298819187	WITHOUT_CLASSIFICATION	4.177011808132568E-5	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9998995208225939	WITHOUT_CLASSIFICATION	1.0047917740615579E-4	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9998428194138925	WITHOUT_CLASSIFICATION	1.5718058610745332E-4	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999917333755031	WITHOUT_CLASSIFICATION	8.266624496822451E-6	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999954081991713	WITHOUT_CLASSIFICATION	4.591800828746185E-6	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.999839763062252	WITHOUT_CLASSIFICATION	1.602369377480975E-4	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999843817358507	WITHOUT_CLASSIFICATION	1.5618264149285265E-5	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999889028963928	WITHOUT_CLASSIFICATION	1.1097103607310286E-5	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999883001705338	WITHOUT_CLASSIFICATION	1.1699829466309886E-5	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9987025460720064	WITHOUT_CLASSIFICATION	0.0012974539279935816	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999805320019582	WITHOUT_CLASSIFICATION	1.946799804176862E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9647355199416535	WITHOUT_CLASSIFICATION	0.03526448005834648	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9932631763123786	WITHOUT_CLASSIFICATION	0.006736823687621489	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999159744004653	WITHOUT_CLASSIFICATION	8.402559953468029E-5	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999986185549816	WITHOUT_CLASSIFICATION	1.3814450183006508E-6	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999968567308202	WITHOUT_CLASSIFICATION	3.1432691798825797E-6	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999943086404268	WITHOUT_CLASSIFICATION	5.691359573161864E-6	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999900689623148	WITHOUT_CLASSIFICATION	9.931037685176006E-6	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9988219979507891	WITHOUT_CLASSIFICATION	0.0011780020492108945	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999848955819584	WITHOUT_CLASSIFICATION	1.5104418041742656E-5	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999888555350234	WITHOUT_CLASSIFICATION	1.1144464976663706E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999831800068874	WITHOUT_CLASSIFICATION	1.6819993112709818E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999714774747895	WITHOUT_CLASSIFICATION	2.8522525210394397E-5	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999718336682502	WITHOUT_CLASSIFICATION	2.8166331749784498E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999775904533521	WITHOUT_CLASSIFICATION	2.2409546647923157E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999776359452601	WITHOUT_CLASSIFICATION	2.236405473980149E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999161715557573	WITHOUT_CLASSIFICATION	8.382844424269863E-5	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999789169721255	WITHOUT_CLASSIFICATION	2.1083027874608056E-5	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999372715732163	WITHOUT_CLASSIFICATION	6.272842678369591E-5	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999903502275382	WITHOUT_CLASSIFICATION	9.64977246182216E-6	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999006061618413	WITHOUT_CLASSIFICATION	9.939383815863621E-5	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999669078261738	WITHOUT_CLASSIFICATION	3.309217382619538E-5	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999845110244083	WITHOUT_CLASSIFICATION	1.54889755916507E-5	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999984004151534	WITHOUT_CLASSIFICATION	1.5995848465506478E-6	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999855441392681	WITHOUT_CLASSIFICATION	1.4455860731840048E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999471460639525	WITHOUT_CLASSIFICATION	5.285393604755176E-5	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999231799741928	WITHOUT_CLASSIFICATION	7.682002580715052E-5	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999231799741928	WITHOUT_CLASSIFICATION	7.682002580715052E-5	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9997697653310752	WITHOUT_CLASSIFICATION	2.3023466892467133E-4	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.999994888497634	WITHOUT_CLASSIFICATION	5.11150236596293E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999766431642246	WITHOUT_CLASSIFICATION	2.335683577531665E-5	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.978376023939403	WITHOUT_CLASSIFICATION	0.02162397606059703	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9981355240621855	WITHOUT_CLASSIFICATION	0.0018644759378144595	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.999935206250401	WITHOUT_CLASSIFICATION	6.47937495989966E-5	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.999410259447931	WITHOUT_CLASSIFICATION	5.897405520689429E-4	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997897220657	WITHOUT_CLASSIFICATION	2.1027793421172618E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999961817686447	WITHOUT_CLASSIFICATION	3.818231355319485E-6	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999999304680434	WITHOUT_CLASSIFICATION	6.953195666379828E-8	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999973598466297	WITHOUT_CLASSIFICATION	2.6401533702968376E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999973598466297	WITHOUT_CLASSIFICATION	2.6401533702968376E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999973598466297	WITHOUT_CLASSIFICATION	2.6401533702968376E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999973598466297	WITHOUT_CLASSIFICATION	2.6401533702968376E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999989225403543	WITHOUT_CLASSIFICATION	1.0774596457394558E-6	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999883279680699	WITHOUT_CLASSIFICATION	1.1672031930000566E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.999999102146987	WITHOUT_CLASSIFICATION	8.978530130434913E-7	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9999850588791563	WITHOUT_CLASSIFICATION	1.4941120843636455E-5	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9336274501771539	WITHOUT_CLASSIFICATION	0.06637254982284611	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999125370563	WITHOUT_CLASSIFICATION	8.74629437323002E-8	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.999997769374234	WITHOUT_CLASSIFICATION	2.23062576594524E-6	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999074958706138	WITHOUT_CLASSIFICATION	9.250412938623074E-5	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999074958706138	WITHOUT_CLASSIFICATION	9.250412938623074E-5	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9998809415248556	WITHOUT_CLASSIFICATION	1.190584751444668E-4	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999930562390293	WITHOUT_CLASSIFICATION	6.9437609706495066E-6	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999905467089474	WITHOUT_CLASSIFICATION	9.453291052610692E-6	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9966382235865532	WITHOUT_CLASSIFICATION	0.003361776413446742	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9966382235865532	WITHOUT_CLASSIFICATION	0.003361776413446742	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9981568072478659	WITHOUT_CLASSIFICATION	0.001843192752134103	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9998223381725598	WITHOUT_CLASSIFICATION	1.7766182744019662E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9998223381725598	WITHOUT_CLASSIFICATION	1.7766182744019662E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999797612091	WITHOUT_CLASSIFICATION	2.0238790907674686E-8	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999618326125235	WITHOUT_CLASSIFICATION	3.816738747659347E-5	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999952285995312	WITHOUT_CLASSIFICATION	4.771400468881329E-6	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9992979088921858	WITHOUT_CLASSIFICATION	7.02091107814149E-4	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9998377400641604	WITHOUT_CLASSIFICATION	1.6225993583966387E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999998350113664	WITHOUT_CLASSIFICATION	1.6498863363491728E-7	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999939181739707	WITHOUT_CLASSIFICATION	6.081826029347244E-6	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999745323610165	WITHOUT_CLASSIFICATION	2.5467638983501492E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999997349727198	WITHOUT_CLASSIFICATION	2.650272802943448E-7	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999977966636268	WITHOUT_CLASSIFICATION	2.2033363731907576E-6	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999996454518345	WITHOUT_CLASSIFICATION	3.5454816540109516E-7	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999656620031436	WITHOUT_CLASSIFICATION	3.4337996856376986E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9998176503001713	WITHOUT_CLASSIFICATION	1.823496998286038E-4	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999340642068942	WITHOUT_CLASSIFICATION	6.59357931058231E-5	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999605496644046	WITHOUT_CLASSIFICATION	3.945033559537558E-5	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9893697029813463	WITHOUT_CLASSIFICATION	0.0106302970186536	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999975001994326	WITHOUT_CLASSIFICATION	2.4998005673995978E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999923810497479	WITHOUT_CLASSIFICATION	7.618950252174022E-6	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999978979671404	WITHOUT_CLASSIFICATION	2.1020328595982312E-6	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999995570321422	WITHOUT_CLASSIFICATION	4.429678578744101E-7	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999960536263774	WITHOUT_CLASSIFICATION	3.94637362257118E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999840592911643	WITHOUT_CLASSIFICATION	1.5940708835719528E-5	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999997564422647	WITHOUT_CLASSIFICATION	2.435577353057702E-7	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9961115059392824	WITHOUT_CLASSIFICATION	0.0038884940607174633	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999982677628222	WITHOUT_CLASSIFICATION	1.732237177784544E-6	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9994498113098019	WITHOUT_CLASSIFICATION	5.501886901980776E-4	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999968640305466	WITHOUT_CLASSIFICATION	3.1359694534201793E-6	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999901963243271	WITHOUT_CLASSIFICATION	9.803675673023498E-6	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9943840797803073	WITHOUT_CLASSIFICATION	0.005615920219692679	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999858307172711	WITHOUT_CLASSIFICATION	1.416928272899458E-5	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999336398162715	WITHOUT_CLASSIFICATION	6.636018372856377E-5	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999948024906985	WITHOUT_CLASSIFICATION	5.197509301501053E-6	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999876963593103	DESIGN	1.230364068966205E-5	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999351202802049	WITHOUT_CLASSIFICATION	6.487971979502107E-5	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9998673717816278	WITHOUT_CLASSIFICATION	1.3262821837221647E-4	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9360313721732612	WITHOUT_CLASSIFICATION	0.06396862782673887	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999838403566995	WITHOUT_CLASSIFICATION	1.6159643300469567E-5	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999886458929076	WITHOUT_CLASSIFICATION	1.1354107092437665E-5	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999952889630519	WITHOUT_CLASSIFICATION	4.7110369481082E-6	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9360313721732612	WITHOUT_CLASSIFICATION	0.06396862782673887	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999838403566995	WITHOUT_CLASSIFICATION	1.6159643300469567E-5	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999993582061548	WITHOUT_CLASSIFICATION	6.417938452836393E-7	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999473516796641	WITHOUT_CLASSIFICATION	5.2648320335941754E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999473516796641	WITHOUT_CLASSIFICATION	5.2648320335941754E-5	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999962327656836	WITHOUT_CLASSIFICATION	3.767234316493264E-6	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999995914858119	WITHOUT_CLASSIFICATION	4.085141880960988E-7	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.999987641824357	WITHOUT_CLASSIFICATION	1.2358175642924222E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999962379241484	WITHOUT_CLASSIFICATION	3.7620758517112664E-6	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999964670269215	WITHOUT_CLASSIFICATION	3.532973078505283E-5	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9997429868632545	WITHOUT_CLASSIFICATION	2.570131367455496E-4	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999969940572921	WITHOUT_CLASSIFICATION	3.0059427077978825E-6	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999996299015168	WITHOUT_CLASSIFICATION	3.700984832450177E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9989265422109402	WITHOUT_CLASSIFICATION	0.001073457789059747	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.999993208703995	WITHOUT_CLASSIFICATION	6.791296004879036E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.99999199261409	WITHOUT_CLASSIFICATION	8.007385909988516E-6	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999902520277497	WITHOUT_CLASSIFICATION	9.747972250283071E-6	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999968646792048	WITHOUT_CLASSIFICATION	3.135320795144867E-6	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998530769125	WITHOUT_CLASSIFICATION	1.469230875061344E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998530769125	WITHOUT_CLASSIFICATION	1.469230875061344E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999940667367442	WITHOUT_CLASSIFICATION	5.933263255768471E-6	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999940667367442	WITHOUT_CLASSIFICATION	5.933263255768471E-6	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999984243300138	WITHOUT_CLASSIFICATION	1.5756699861253748E-6	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.999991166866811	WITHOUT_CLASSIFICATION	8.833133189019008E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999790414112272	WITHOUT_CLASSIFICATION	2.0958588772782364E-5	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999926843545457	WITHOUT_CLASSIFICATION	7.3156454543416395E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999967944019621	WITHOUT_CLASSIFICATION	3.2055980378332333E-6	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999987214661474	WITHOUT_CLASSIFICATION	1.2785338525294677E-6	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.999987641824357	WITHOUT_CLASSIFICATION	1.2358175642924222E-5	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999962379241484	WITHOUT_CLASSIFICATION	3.7620758517112664E-6	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9989265422109402	WITHOUT_CLASSIFICATION	0.001073457789059747	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.999993208703995	WITHOUT_CLASSIFICATION	6.791296004879036E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999397438910689	WITHOUT_CLASSIFICATION	6.0256108931054776E-5	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999717417146	WITHOUT_CLASSIFICATION	2.825828545393034E-8	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999833703349492	WITHOUT_CLASSIFICATION	1.6629665050853458E-5	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999871133724688	WITHOUT_CLASSIFICATION	1.288662753119835E-5	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999986442510134	WITHOUT_CLASSIFICATION	1.3557489865374462E-6	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999208870135576	WITHOUT_CLASSIFICATION	7.911298644231317E-5	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9989798192797908	WITHOUT_CLASSIFICATION	0.001020180720209171	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999988777957899	WITHOUT_CLASSIFICATION	1.1222042100508896E-6	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999503271175365	WITHOUT_CLASSIFICATION	4.9672882463550314E-5	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.999994627657096	WITHOUT_CLASSIFICATION	5.3723429040454755E-6	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999975901269539	WITHOUT_CLASSIFICATION	2.4098730461147855E-6	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999948320057735	WITHOUT_CLASSIFICATION	5.167994226377462E-6	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9997764434785764	WITHOUT_CLASSIFICATION	2.2355652142349675E-4	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998661442393088	WITHOUT_CLASSIFICATION	1.338557606912478E-4	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999970636333183	WITHOUT_CLASSIFICATION	2.9363666816605473E-6	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9326828717805336	WITHOUT_CLASSIFICATION	0.06731712821946643	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999796674656494	WITHOUT_CLASSIFICATION	2.0332534350590307E-5	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999831236577755	WITHOUT_CLASSIFICATION	1.6876342224387916E-5	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999917879621399	WITHOUT_CLASSIFICATION	8.212037859968477E-6	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999962006606479	WITHOUT_CLASSIFICATION	3.7993393521470066E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999950256249602	WITHOUT_CLASSIFICATION	4.974375039825155E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999950256249602	WITHOUT_CLASSIFICATION	4.974375039825155E-6	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9998958860172033	WITHOUT_CLASSIFICATION	1.041139827968421E-4	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998276317521643	WITHOUT_CLASSIFICATION	1.7236824783571067E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999968773221456	WITHOUT_CLASSIFICATION	3.1226778544508325E-6	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999986755111712	WITHOUT_CLASSIFICATION	1.3244888288345033E-6	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999986755111712	WITHOUT_CLASSIFICATION	1.3244888288345033E-6	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999833703349492	WITHOUT_CLASSIFICATION	1.6629665050853458E-5	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999945035028435	WITHOUT_CLASSIFICATION	5.496497156510696E-6	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999983592751949	WITHOUT_CLASSIFICATION	1.6407248050393139E-6	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999995288285405	WITHOUT_CLASSIFICATION	4.7117145949998465E-7	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.999998923014911	WITHOUT_CLASSIFICATION	1.0769850890017428E-6	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999994083929197	WITHOUT_CLASSIFICATION	5.916070803456871E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999754998356672	WITHOUT_CLASSIFICATION	2.4500164332798616E-4	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.999998689530967	WITHOUT_CLASSIFICATION	1.3104690330250006E-6	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999725004338301	WITHOUT_CLASSIFICATION	2.749956616983396E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999996265295339	WITHOUT_CLASSIFICATION	3.7347046614965136E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9998952157000259	WITHOUT_CLASSIFICATION	1.047842999741021E-4	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999454034900728	WITHOUT_CLASSIFICATION	5.459650992715631E-5	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999826866650235	WITHOUT_CLASSIFICATION	1.7313334976461352E-5	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999789459879256	WITHOUT_CLASSIFICATION	2.1054012074398246E-5	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999984461561064	WITHOUT_CLASSIFICATION	1.5538438935148596E-6	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999482919344044	WITHOUT_CLASSIFICATION	5.1708065595659615E-5	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.999991003535733	WITHOUT_CLASSIFICATION	8.996464266905326E-6	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999986242622704	WITHOUT_CLASSIFICATION	1.3757377296159337E-6	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9995290120238952	WITHOUT_CLASSIFICATION	4.7098797610488547E-4	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999993704429557	WITHOUT_CLASSIFICATION	6.295570442645254E-7	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999963091101064	WITHOUT_CLASSIFICATION	3.6908898936158948E-6	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999921533513569	WITHOUT_CLASSIFICATION	7.846648643115623E-6	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9937038806026086	WITHOUT_CLASSIFICATION	0.0062961193973913735	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999989821177371	WITHOUT_CLASSIFICATION	1.0178822629214093E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999995446459512	WITHOUT_CLASSIFICATION	4.553540488023005E-7	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999937628839537	WITHOUT_CLASSIFICATION	6.237116046290848E-6	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9996390439166793	WITHOUT_CLASSIFICATION	3.6095608332059197E-4	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999821097534363	WITHOUT_CLASSIFICATION	1.7890246563745268E-5	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999952441830938	WITHOUT_CLASSIFICATION	4.755816906252642E-6	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999986170318897	WITHOUT_CLASSIFICATION	1.382968110256657E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997167780894	WITHOUT_CLASSIFICATION	2.832219104822244E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997167780894	WITHOUT_CLASSIFICATION	2.832219104822244E-7	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9996325676361055	WITHOUT_CLASSIFICATION	3.674323638944605E-4	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999975191326139	WITHOUT_CLASSIFICATION	2.4808673861309173E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999975191326139	WITHOUT_CLASSIFICATION	2.4808673861309173E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999921933918904	WITHOUT_CLASSIFICATION	7.806608109566867E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999921933918904	WITHOUT_CLASSIFICATION	7.806608109566867E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999969640768315	WITHOUT_CLASSIFICATION	3.0359231684383474E-6	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999977145642354	WITHOUT_CLASSIFICATION	2.285435764712876E-6	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999720900033312	WITHOUT_CLASSIFICATION	2.790999666871886E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999925897507129	WITHOUT_CLASSIFICATION	7.410249286973996E-6	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999880915221923	WITHOUT_CLASSIFICATION	1.1908477807793412E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999929061859176	WITHOUT_CLASSIFICATION	7.09381408234435E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999929061859176	WITHOUT_CLASSIFICATION	7.09381408234435E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999995446459512	WITHOUT_CLASSIFICATION	4.553540488023005E-7	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999995446459512	WITHOUT_CLASSIFICATION	4.553540488023005E-7	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999995446459512	WITHOUT_CLASSIFICATION	4.553540488023005E-7	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999937628839537	WITHOUT_CLASSIFICATION	6.237116046290848E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997167780894	WITHOUT_CLASSIFICATION	2.832219104822244E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997167780894	WITHOUT_CLASSIFICATION	2.832219104822244E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997167780894	WITHOUT_CLASSIFICATION	2.832219104822244E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999969640768315	WITHOUT_CLASSIFICATION	3.0359231684383474E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999969640768315	WITHOUT_CLASSIFICATION	3.0359231684383474E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999969640768315	WITHOUT_CLASSIFICATION	3.0359231684383474E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999925897507129	WITHOUT_CLASSIFICATION	7.410249286973996E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999925897507129	WITHOUT_CLASSIFICATION	7.410249286973996E-6	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999968101612293	WITHOUT_CLASSIFICATION	3.1898387707333003E-6	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999942698025609	WITHOUT_CLASSIFICATION	5.730197439139782E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999880992768221	WITHOUT_CLASSIFICATION	1.1900723177842056E-5	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999840837485675	DESIGN	1.591625143242117E-5	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999716591554703	WITHOUT_CLASSIFICATION	2.8340844529733635E-5	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9999904894396192	WITHOUT_CLASSIFICATION	9.510560380691119E-6	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9999904894396192	WITHOUT_CLASSIFICATION	9.510560380691119E-6	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999998567216087	WITHOUT_CLASSIFICATION	1.4327839120037156E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999754998356672	WITHOUT_CLASSIFICATION	2.4500164332798616E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999754998356672	WITHOUT_CLASSIFICATION	2.4500164332798616E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999754998356672	WITHOUT_CLASSIFICATION	2.4500164332798616E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999754998356672	WITHOUT_CLASSIFICATION	2.4500164332798616E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999754998356672	WITHOUT_CLASSIFICATION	2.4500164332798616E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999912753028245	WITHOUT_CLASSIFICATION	8.724697175452073E-6	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999912753028245	WITHOUT_CLASSIFICATION	8.724697175452073E-6	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999912753028245	WITHOUT_CLASSIFICATION	8.724697175452073E-6	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.999992572438345	WITHOUT_CLASSIFICATION	7.427561654907327E-6	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999823966409952	WITHOUT_CLASSIFICATION	1.760335900472169E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999937628839537	WITHOUT_CLASSIFICATION	6.237116046290848E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999969640768315	WITHOUT_CLASSIFICATION	3.0359231684383474E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999969640768315	WITHOUT_CLASSIFICATION	3.0359231684383474E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999754998356672	WITHOUT_CLASSIFICATION	2.4500164332798616E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999754998356672	WITHOUT_CLASSIFICATION	2.4500164332798616E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999912753028245	WITHOUT_CLASSIFICATION	8.724697175452073E-6	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999998567216087	WITHOUT_CLASSIFICATION	1.4327839120037156E-7	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.999999864450142	WITHOUT_CLASSIFICATION	1.3554985810483203E-7	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999943389134602	WITHOUT_CLASSIFICATION	5.661086539687409E-6	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9990721969891966	WITHOUT_CLASSIFICATION	9.278030108035557E-4	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999770513952521	WITHOUT_CLASSIFICATION	2.2948604747885772E-5	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999880451479197	WITHOUT_CLASSIFICATION	1.1954852080362923E-5	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999634341558707	WITHOUT_CLASSIFICATION	3.6565844129238005E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999663359571922	WITHOUT_CLASSIFICATION	3.366404280777686E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999641957382778	WITHOUT_CLASSIFICATION	3.5804261722144714E-5	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999820000724876	WITHOUT_CLASSIFICATION	1.799992751247787E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9996147543460079	WITHOUT_CLASSIFICATION	3.852456539921248E-4	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999495657001083	WITHOUT_CLASSIFICATION	5.043429989170134E-4	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999569584491	WITHOUT_CLASSIFICATION	4.304155094801762E-8	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999943578578531	WITHOUT_CLASSIFICATION	5.642142147016354E-6	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999992730371892	WITHOUT_CLASSIFICATION	7.269628108481975E-7	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999996405371098	WITHOUT_CLASSIFICATION	3.5946289025246804E-7	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999972068550089	WITHOUT_CLASSIFICATION	2.793144991114035E-6	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999681690840657	WITHOUT_CLASSIFICATION	3.183091593425756E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9998008467925642	WITHOUT_CLASSIFICATION	1.9915320743580753E-4	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.999340514592231	WITHOUT_CLASSIFICATION	6.594854077689094E-4	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999882711392118	WITHOUT_CLASSIFICATION	1.172886078813176E-5	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998856551326308	WITHOUT_CLASSIFICATION	1.143448673691392E-4	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999271913889354	WITHOUT_CLASSIFICATION	7.28086110646275E-5	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9996767259764692	WITHOUT_CLASSIFICATION	3.2327402353085415E-4	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999800137117411	WITHOUT_CLASSIFICATION	1.9986288258941254E-5	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9507954928863815	WITHOUT_CLASSIFICATION	0.04920450711361834	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9784304583453698	WITHOUT_CLASSIFICATION	0.021569541654630254	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9999629757427574	WITHOUT_CLASSIFICATION	3.702425724251251E-5	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999570692343498	WITHOUT_CLASSIFICATION	4.293076565010777E-5	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999624196408908	WITHOUT_CLASSIFICATION	3.758035910922127E-5	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999994897950266	WITHOUT_CLASSIFICATION	5.102049734238304E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999903464240536	WITHOUT_CLASSIFICATION	9.653575946330113E-6	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999975791040736	WITHOUT_CLASSIFICATION	2.4208959263870185E-6	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999993601390201	WITHOUT_CLASSIFICATION	6.398609798906055E-7	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999898092071143	WITHOUT_CLASSIFICATION	1.0190792885568737E-5	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.999999864450142	WITHOUT_CLASSIFICATION	1.3554985810483203E-7	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999941802944119	WITHOUT_CLASSIFICATION	5.81970558816367E-6	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.998449752806688	WITHOUT_CLASSIFICATION	0.00155024719331204	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9837946012974744	WITHOUT_CLASSIFICATION	0.01620539870252555	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999728446171746	WITHOUT_CLASSIFICATION	2.7155382825283206E-5	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999728446171746	WITHOUT_CLASSIFICATION	2.7155382825283206E-5	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999980822408452	WITHOUT_CLASSIFICATION	1.9177591547312494E-6	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999980822408452	WITHOUT_CLASSIFICATION	1.9177591547312494E-6	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999955321789709	WITHOUT_CLASSIFICATION	4.467821029092099E-6	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9511786329334141	WITHOUT_CLASSIFICATION	0.048821367066585915	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999994230617215	WITHOUT_CLASSIFICATION	5.769382784950366E-6	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999891023922838	WITHOUT_CLASSIFICATION	1.0897607716153084E-5	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999861259177601	WITHOUT_CLASSIFICATION	1.38740822397992E-5	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9925061882204335	WITHOUT_CLASSIFICATION	0.007493811779566533	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999892943423648	WITHOUT_CLASSIFICATION	1.0705657635236686E-5	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999998039778653	WITHOUT_CLASSIFICATION	1.9602213470951188E-6	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999916873429867	WITHOUT_CLASSIFICATION	8.312657013352453E-6	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9943561773963835	WITHOUT_CLASSIFICATION	0.005643822603616528	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999498625537908	WITHOUT_CLASSIFICATION	5.0137446209128706E-5	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999952637780128	WITHOUT_CLASSIFICATION	4.736221987212281E-6	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999952637780128	WITHOUT_CLASSIFICATION	4.736221987212281E-6	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999017836527155	WITHOUT_CLASSIFICATION	9.821634728445787E-5	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9900337864033532	WITHOUT_CLASSIFICATION	0.009966213596646784	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999979403219765	WITHOUT_CLASSIFICATION	2.0596780234041994E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999979403219765	WITHOUT_CLASSIFICATION	2.0596780234041994E-6	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999917699478791	WITHOUT_CLASSIFICATION	8.230052120818985E-6	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999817798034342	WITHOUT_CLASSIFICATION	1.8220196565843407E-5	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9990280881843097	WITHOUT_CLASSIFICATION	9.719118156902144E-4	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9993800464144075	WITHOUT_CLASSIFICATION	6.19953585592493E-4	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9994453983712012	WITHOUT_CLASSIFICATION	5.546016287989282E-4	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9993576958352538	WITHOUT_CLASSIFICATION	6.423041647462719E-4	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999941461078619	WITHOUT_CLASSIFICATION	5.853892138174113E-6	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999881823570678	WITHOUT_CLASSIFICATION	1.1817642932152178E-5	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9996160687918748	WITHOUT_CLASSIFICATION	3.8393120812524377E-4	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999920919285725	WITHOUT_CLASSIFICATION	7.908071427451845E-6	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999994342043198	WITHOUT_CLASSIFICATION	5.65795680271938E-7	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999991493447297	WITHOUT_CLASSIFICATION	8.506552703469204E-7	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.999999841147979	WITHOUT_CLASSIFICATION	1.5885202099459066E-7	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999968568845499	WITHOUT_CLASSIFICATION	3.1431154500414758E-6	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999753169454	WITHOUT_CLASSIFICATION	2.4683054558753923E-8	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999984881035366	WITHOUT_CLASSIFICATION	1.5118964633650249E-6	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999320252733378	WITHOUT_CLASSIFICATION	6.797472666214839E-5	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9991295566955994	WITHOUT_CLASSIFICATION	8.704433044004733E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999998445587062	WITHOUT_CLASSIFICATION	1.5544129373298573E-7	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999984473257747	WITHOUT_CLASSIFICATION	1.552674225293612E-6	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9891876105438847	DESIGN	0.010812389456115293	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.999996122040097	WITHOUT_CLASSIFICATION	3.87795990299971E-6	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999989117910371	WITHOUT_CLASSIFICATION	1.088208962970528E-6	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999976877498089	WITHOUT_CLASSIFICATION	2.3122501912194033E-6	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999950668336198	WITHOUT_CLASSIFICATION	4.933166380192062E-6	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9995496791425275	WITHOUT_CLASSIFICATION	4.5032085747249756E-4	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999926081224215	WITHOUT_CLASSIFICATION	7.391877578482517E-6	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.999978781491681	WITHOUT_CLASSIFICATION	2.1218508319075785E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9996298014902261	WITHOUT_CLASSIFICATION	3.701985097740147E-4	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999792930645117	WITHOUT_CLASSIFICATION	2.070693548837923E-5	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999976439585323	WITHOUT_CLASSIFICATION	2.3560414677068123E-6	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999978105777683	WITHOUT_CLASSIFICATION	2.189422231807939E-6	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999998478053759	WITHOUT_CLASSIFICATION	1.521946240848591E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999655891635734	WITHOUT_CLASSIFICATION	3.4410836426647756E-5	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999655891635734	WITHOUT_CLASSIFICATION	3.4410836426647756E-5	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999996446572186	WITHOUT_CLASSIFICATION	3.5534278134737613E-7	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9969563140102756	WITHOUT_CLASSIFICATION	0.003043685989724418	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999562229719	WITHOUT_CLASSIFICATION	4.377702806019549E-8	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999934828602263	WITHOUT_CLASSIFICATION	6.5171397736597125E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.999985129465632	WITHOUT_CLASSIFICATION	1.4870534368067709E-5	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999927950037074	WITHOUT_CLASSIFICATION	7.204996292505758E-6	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9997701032864132	WITHOUT_CLASSIFICATION	2.298967135866665E-4	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9998387598628912	WITHOUT_CLASSIFICATION	1.6124013710878987E-4	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999721002511306	WITHOUT_CLASSIFICATION	2.789974886939043E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999876607824351	WITHOUT_CLASSIFICATION	1.2339217564852168E-5	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9978401330174839	DESIGN	0.0021598669825161477	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9831376929620069	WITHOUT_CLASSIFICATION	0.01686230703799305	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9997962322690301	WITHOUT_CLASSIFICATION	2.0376773096979065E-4	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9980750239506113	WITHOUT_CLASSIFICATION	0.0019249760493886968	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999918553078577	WITHOUT_CLASSIFICATION	8.144692142297706E-6	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999904337192559	WITHOUT_CLASSIFICATION	9.566280744193075E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999697277701598	WITHOUT_CLASSIFICATION	3.0272229840135687E-5	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9900324276485771	WITHOUT_CLASSIFICATION	0.00996757235142283	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9991504473297617	WITHOUT_CLASSIFICATION	8.495526702383664E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9997028271930828	WITHOUT_CLASSIFICATION	2.971728069172646E-4	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999760112460425	WITHOUT_CLASSIFICATION	2.3988753957471523E-5	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999993751353853	WITHOUT_CLASSIFICATION	6.248646146998382E-6	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999155038112454	WITHOUT_CLASSIFICATION	8.449618875463883E-5	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999757469002527	WITHOUT_CLASSIFICATION	2.4253099747243258E-5	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999770070166677	WITHOUT_CLASSIFICATION	2.2992983332223786E-5	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999714267198828	WITHOUT_CLASSIFICATION	2.8573280117273475E-5	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.999996724086616	WITHOUT_CLASSIFICATION	3.2759133840195386E-6	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999997133936975	WITHOUT_CLASSIFICATION	2.8660630247836294E-7	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9957395675847781	WITHOUT_CLASSIFICATION	0.00426043241522182	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999998628074561	WITHOUT_CLASSIFICATION	1.3719254389311258E-6	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999998999692432	WITHOUT_CLASSIFICATION	1.0003075679855872E-6	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999310446742685	WITHOUT_CLASSIFICATION	6.895532573144916E-5	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9997147269249419	WITHOUT_CLASSIFICATION	2.8527307505808833E-4	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.999999631121296	WITHOUT_CLASSIFICATION	3.6887870405493614E-7	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999686151265466	WITHOUT_CLASSIFICATION	3.138487345354104E-5	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9992878297903447	WITHOUT_CLASSIFICATION	7.121702096552727E-4	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9993087494182183	WITHOUT_CLASSIFICATION	6.912505817816202E-4	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.999994767279168	WITHOUT_CLASSIFICATION	5.232720831953664E-6	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999816045746132	WITHOUT_CLASSIFICATION	1.8395425386926865E-5	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999966776869167	WITHOUT_CLASSIFICATION	3.322313083315605E-6	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999955946807434	WITHOUT_CLASSIFICATION	4.4053192566581475E-6	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998926978390438	WITHOUT_CLASSIFICATION	1.073021609561627E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998926978390438	WITHOUT_CLASSIFICATION	1.073021609561627E-4	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9996693052191306	WITHOUT_CLASSIFICATION	3.3069478086947333E-4	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.999998259289405	WITHOUT_CLASSIFICATION	1.7407105949549068E-6	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999911001842384	WITHOUT_CLASSIFICATION	8.899815761638179E-6	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999960937662637	WITHOUT_CLASSIFICATION	3.906233736279812E-6	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999987382031116	WITHOUT_CLASSIFICATION	1.2617968883545884E-6	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999952800843719	WITHOUT_CLASSIFICATION	4.719915628189649E-6	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999897247491778	WITHOUT_CLASSIFICATION	1.027525082218341E-5	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999882054137816	WITHOUT_CLASSIFICATION	1.1794586218392897E-5	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999937233468147	WITHOUT_CLASSIFICATION	6.276653185363153E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999327565700952	WITHOUT_CLASSIFICATION	6.72434299047868E-5	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9992466931538334	WITHOUT_CLASSIFICATION	7.533068461666373E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999986663450586	WITHOUT_CLASSIFICATION	1.333654941353137E-6	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9965622040359066	WITHOUT_CLASSIFICATION	0.0034377959640934266	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999961859999984	WITHOUT_CLASSIFICATION	3.8140000014804584E-6	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999842023224	WITHOUT_CLASSIFICATION	1.5797677644860605E-8	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9488580153740552	DESIGN	0.05114198462594466	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9948846634881255	WITHOUT_CLASSIFICATION	0.005115336511874525	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9998798442009164	WITHOUT_CLASSIFICATION	1.2015579908371192E-4	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9971791521358564	WITHOUT_CLASSIFICATION	0.002820847864143612	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9994451257615683	DESIGN	5.548742384316767E-4	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9996125538052187	WITHOUT_CLASSIFICATION	3.8744619478124956E-4	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999893937656169	WITHOUT_CLASSIFICATION	1.0606234383109924E-4	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999994583467	WITHOUT_CLASSIFICATION	5.416533933585054E-10	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999883144408639	WITHOUT_CLASSIFICATION	1.1685559136018697E-5	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9937860508995605	WITHOUT_CLASSIFICATION	0.006213949100439416	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999973488638775	WITHOUT_CLASSIFICATION	2.6511361225111745E-6	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999995996037221	WITHOUT_CLASSIFICATION	4.003962779581302E-7	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999579731514979	WITHOUT_CLASSIFICATION	4.2026848502103635E-5	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999327423188	WITHOUT_CLASSIFICATION	6.72576811623656E-8	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.999857220675434	WITHOUT_CLASSIFICATION	1.4277932456598864E-4	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999626409056	WITHOUT_CLASSIFICATION	3.735909437821993E-8	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999987539278692	WITHOUT_CLASSIFICATION	1.246072130778335E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.999857220675434	WITHOUT_CLASSIFICATION	1.4277932456598864E-4	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999885244780544	WITHOUT_CLASSIFICATION	1.1475521945575937E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999982677628222	WITHOUT_CLASSIFICATION	1.732237177784544E-6	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999991373894868	WITHOUT_CLASSIFICATION	8.626105131939431E-7	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9716430045632408	DESIGN	0.02835699543675922	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.990758417391523	WITHOUT_CLASSIFICATION	0.009241582608476974	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999924313947766	WITHOUT_CLASSIFICATION	7.5686052234402605E-6	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999903091314165	WITHOUT_CLASSIFICATION	9.6908685835207E-6	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.8793006782725518	WITHOUT_CLASSIFICATION	0.12069932172744818	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999995914858119	WITHOUT_CLASSIFICATION	4.085141880960988E-7	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999984473257747	WITHOUT_CLASSIFICATION	1.552674225293612E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999880992768221	WITHOUT_CLASSIFICATION	1.1900723177842056E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9660192574439206	WITHOUT_CLASSIFICATION	0.03398074255607944	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999934884380776	WITHOUT_CLASSIFICATION	6.511561922470402E-6	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999554908470941	WITHOUT_CLASSIFICATION	4.4509152905925575E-5	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999372397525955	WITHOUT_CLASSIFICATION	6.276024740452891E-5	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999933336428188	WITHOUT_CLASSIFICATION	6.666357181110243E-6	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9732358798350954	DESIGN	0.026764120164904693	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.989911411737237	WITHOUT_CLASSIFICATION	0.010088588262763005	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9989135376646532	WITHOUT_CLASSIFICATION	0.0010864623353468103	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9852582036457932	WITHOUT_CLASSIFICATION	0.014741796354206691	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999983364416665	WITHOUT_CLASSIFICATION	1.6635583335138375E-6	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999751866284421	WITHOUT_CLASSIFICATION	2.4813371557880974E-5	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9999945775213862	WITHOUT_CLASSIFICATION	5.422478613801738E-6	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9986788356500519	WITHOUT_CLASSIFICATION	0.0013211643499480511	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9989967032441116	WITHOUT_CLASSIFICATION	0.001003296755888342	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.999994411767006	WITHOUT_CLASSIFICATION	5.588232994030698E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999922227010162	WITHOUT_CLASSIFICATION	7.777298983828135E-6	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999098082753981	WITHOUT_CLASSIFICATION	9.019172460184005E-5	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999973980314639	WITHOUT_CLASSIFICATION	2.6019685361199242E-6	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9973573211820704	WITHOUT_CLASSIFICATION	0.0026426788179296718	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9973573211820704	WITHOUT_CLASSIFICATION	0.0026426788179296718	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999985677118155	WITHOUT_CLASSIFICATION	1.432288184459368E-6	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999989847598785	WITHOUT_CLASSIFICATION	1.0152401215592546E-6	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999951583285367	WITHOUT_CLASSIFICATION	4.841671463386132E-6	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9722154445004357	DESIGN	0.027784555499564358	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9722154445004357	DESIGN	0.027784555499564358	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9722154445004357	DESIGN	0.027784555499564358	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9722154445004357	DESIGN	0.027784555499564358	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999889451788506	WITHOUT_CLASSIFICATION	1.1054821149379163E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999989709444106	WITHOUT_CLASSIFICATION	1.0290555894411089E-6	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999994277868339	WITHOUT_CLASSIFICATION	5.722131660590306E-7	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.938058335673916	DESIGN	0.06194166432608398	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999835394648882	WITHOUT_CLASSIFICATION	1.6460535111864153E-5	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999991960673096	WITHOUT_CLASSIFICATION	8.039326904474429E-7	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9994725525815716	WITHOUT_CLASSIFICATION	5.27447418428439E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9994725525815716	WITHOUT_CLASSIFICATION	5.27447418428439E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999904017083115	WITHOUT_CLASSIFICATION	9.598291688474706E-6	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999846638377216	WITHOUT_CLASSIFICATION	1.5336162278404036E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9985455223045646	WITHOUT_CLASSIFICATION	0.0014544776954353751	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999255605665957	WITHOUT_CLASSIFICATION	7.443943340438632E-5	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999899355627	WITHOUT_CLASSIFICATION	1.0064437319113681E-8	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999993199011598	WITHOUT_CLASSIFICATION	6.800988402847574E-7	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.999999828980037	WITHOUT_CLASSIFICATION	1.7101996294485766E-7	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999877862358403	WITHOUT_CLASSIFICATION	1.2213764159644953E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999194059714044	WITHOUT_CLASSIFICATION	8.059402859560769E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999194059714044	WITHOUT_CLASSIFICATION	8.059402859560769E-5	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999987539278692	WITHOUT_CLASSIFICATION	1.246072130778335E-6	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999919854908659	WITHOUT_CLASSIFICATION	8.014509134153299E-6	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999920474934667	WITHOUT_CLASSIFICATION	7.952506533290204E-6	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999858408236612	WITHOUT_CLASSIFICATION	1.4159176338843653E-5	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999453548474	WITHOUT_CLASSIFICATION	5.4645152609761694E-8	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999832152247649	WITHOUT_CLASSIFICATION	1.67847752351042E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999999334512625	WITHOUT_CLASSIFICATION	6.654873750816234E-8	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999901664387958	WITHOUT_CLASSIFICATION	9.833561204234714E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999409007237612	WITHOUT_CLASSIFICATION	5.909927623878033E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999409007237612	WITHOUT_CLASSIFICATION	5.909927623878033E-5	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9963092227210805	WITHOUT_CLASSIFICATION	0.003690777278919477	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999874787253745	WITHOUT_CLASSIFICATION	1.252127462542293E-5	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9907807626795117	WITHOUT_CLASSIFICATION	0.00921923732048829	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999838639185958	WITHOUT_CLASSIFICATION	1.613608140415557E-5	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999977980224605	WITHOUT_CLASSIFICATION	2.2019775395344437E-6	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.999986683982757	WITHOUT_CLASSIFICATION	1.3316017242893087E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999495690492407	WITHOUT_CLASSIFICATION	5.043095075920262E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999960919467435	WITHOUT_CLASSIFICATION	3.908053256440896E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999960919467435	WITHOUT_CLASSIFICATION	3.908053256440896E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999960919467435	WITHOUT_CLASSIFICATION	3.908053256440896E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999960919467435	WITHOUT_CLASSIFICATION	3.908053256440896E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9993526742080497	WITHOUT_CLASSIFICATION	6.473257919502507E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999737552149057	WITHOUT_CLASSIFICATION	2.6244785094192184E-5	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999892882087454	WITHOUT_CLASSIFICATION	1.0711791254488386E-5	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999916850866681	WITHOUT_CLASSIFICATION	8.314913331777621E-6	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999929954279437	WITHOUT_CLASSIFICATION	7.004572056222854E-6	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999860824767086	WITHOUT_CLASSIFICATION	1.39175232912606E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999978925518364	WITHOUT_CLASSIFICATION	2.107448163637673E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996224508663	WITHOUT_CLASSIFICATION	3.7754913378373727E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996224508663	WITHOUT_CLASSIFICATION	3.7754913378373727E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996224508663	WITHOUT_CLASSIFICATION	3.7754913378373727E-7	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999995252522957	WITHOUT_CLASSIFICATION	4.747477042379614E-7	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9996126101638526	WITHOUT_CLASSIFICATION	3.873898361472851E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999979484892868	WITHOUT_CLASSIFICATION	2.0515107132380967E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999979484892868	WITHOUT_CLASSIFICATION	2.0515107132380967E-6	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999838105946887	WITHOUT_CLASSIFICATION	1.6189405311359792E-5	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999997325849	WITHOUT_CLASSIFICATION	2.674150836224794E-10	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.999999988118556	WITHOUT_CLASSIFICATION	1.188144394619755E-8	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999417081754522	WITHOUT_CLASSIFICATION	5.829182454779434E-5	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999805284023	WITHOUT_CLASSIFICATION	1.9471597630031826E-8	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.999998770085751	WITHOUT_CLASSIFICATION	1.229914249055573E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.8255448194143511	WITHOUT_CLASSIFICATION	0.174455180585649	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.8255448194143511	WITHOUT_CLASSIFICATION	0.174455180585649	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999981120654262	WITHOUT_CLASSIFICATION	1.8879345738505495E-6	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9998515780957371	WITHOUT_CLASSIFICATION	1.48421904262924E-4	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999967151387594	WITHOUT_CLASSIFICATION	3.2848612406470863E-6	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999963216685633	WITHOUT_CLASSIFICATION	3.678331436704768E-6	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999992376040605	WITHOUT_CLASSIFICATION	7.623959394713749E-7	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999974571374171	WITHOUT_CLASSIFICATION	2.542862582952511E-6	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999664982644011	WITHOUT_CLASSIFICATION	3.350173559881507E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999461086801965	WITHOUT_CLASSIFICATION	5.389131980353599E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999972013626581	WITHOUT_CLASSIFICATION	2.7986373418946235E-6	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999998755109061	WITHOUT_CLASSIFICATION	1.2448909388435747E-7	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999973478641782	WITHOUT_CLASSIFICATION	2.652135821888561E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999985972173695	WITHOUT_CLASSIFICATION	1.4027826305446287E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999978173093956	WITHOUT_CLASSIFICATION	2.182690604435028E-6	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9998793827965311	WITHOUT_CLASSIFICATION	1.2061720346882279E-4	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999998943569766	WITHOUT_CLASSIFICATION	1.0564302337670702E-7	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999424440840714	WITHOUT_CLASSIFICATION	5.755591592852887E-5	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999994878632412	WITHOUT_CLASSIFICATION	5.121367587815773E-7	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999991171914242	WITHOUT_CLASSIFICATION	8.828085757469062E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999990919022644	WITHOUT_CLASSIFICATION	9.080977356864611E-7	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999873308017919	WITHOUT_CLASSIFICATION	1.2669198207984978E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999953363007718	WITHOUT_CLASSIFICATION	4.6636992282224225E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999996786320415	WITHOUT_CLASSIFICATION	3.21367958443941E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999682032671533	WITHOUT_CLASSIFICATION	3.179673284664437E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999682032671533	WITHOUT_CLASSIFICATION	3.179673284664437E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999682032671533	WITHOUT_CLASSIFICATION	3.179673284664437E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999682032671533	WITHOUT_CLASSIFICATION	3.179673284664437E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999682032671533	WITHOUT_CLASSIFICATION	3.179673284664437E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999682032671533	WITHOUT_CLASSIFICATION	3.179673284664437E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999682032671533	WITHOUT_CLASSIFICATION	3.179673284664437E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999682032671533	WITHOUT_CLASSIFICATION	3.179673284664437E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999211995833212	WITHOUT_CLASSIFICATION	7.880041667880927E-4	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999786217353634	WITHOUT_CLASSIFICATION	2.1378264636592907E-5	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999769974781438	WITHOUT_CLASSIFICATION	2.3002521856130975E-5	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9975418660763453	DESIGN	0.0024581339236547243	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999897247491778	WITHOUT_CLASSIFICATION	1.027525082218341E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999897247491778	WITHOUT_CLASSIFICATION	1.027525082218341E-5	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9997516445901968	WITHOUT_CLASSIFICATION	2.483554098031554E-4	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9986631912049152	WITHOUT_CLASSIFICATION	0.001336808795084799	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.999999777903733	WITHOUT_CLASSIFICATION	2.220962671537537E-7	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999083611077315	WITHOUT_CLASSIFICATION	9.163889226844296E-5	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999984960662642	WITHOUT_CLASSIFICATION	1.5039337358461308E-6	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999982368304193	WITHOUT_CLASSIFICATION	1.763169580568428E-6	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999632349896722	WITHOUT_CLASSIFICATION	3.676501032772255E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.8407861701716414	WITHOUT_CLASSIFICATION	0.15921382982835855	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999298685455326	WITHOUT_CLASSIFICATION	7.013145446738974E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9991517466997101	WITHOUT_CLASSIFICATION	8.482533002899907E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9991517466997101	WITHOUT_CLASSIFICATION	8.482533002899907E-4	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9991517466997101	WITHOUT_CLASSIFICATION	8.482533002899907E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9994269739505507	WITHOUT_CLASSIFICATION	5.730260494491928E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999809230195569	WITHOUT_CLASSIFICATION	1.9076980443145197E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999946648322562	WITHOUT_CLASSIFICATION	5.335167743897019E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999938142930689	WITHOUT_CLASSIFICATION	6.185706931157072E-6	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998748108178591	WITHOUT_CLASSIFICATION	1.2518918214090904E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999898859658903	WITHOUT_CLASSIFICATION	1.0114034109650676E-5	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999878057631164	WITHOUT_CLASSIFICATION	1.2194236883520309E-5	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999502667795	WITHOUT_CLASSIFICATION	4.973322048452147E-8	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998902227132187	WITHOUT_CLASSIFICATION	1.0977728678127259E-4	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998902227132187	WITHOUT_CLASSIFICATION	1.0977728678127259E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999957932494554	WITHOUT_CLASSIFICATION	4.20675054462275E-6	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999981873002076	WITHOUT_CLASSIFICATION	1.812699792411395E-5	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999984256040289	WITHOUT_CLASSIFICATION	1.574395971124279E-6	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999616726606448	WITHOUT_CLASSIFICATION	3.832733935527255E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999960563134533	WITHOUT_CLASSIFICATION	3.943686546650298E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999960563134533	WITHOUT_CLASSIFICATION	3.943686546650298E-6	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9580337511713737	WITHOUT_CLASSIFICATION	0.041966248828626374	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999242370032	WITHOUT_CLASSIFICATION	7.57629968519921E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999618666712614	WITHOUT_CLASSIFICATION	3.813332873853571E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.999912519885134	WITHOUT_CLASSIFICATION	8.748011486600367E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999950033880973	WITHOUT_CLASSIFICATION	4.996611902695471E-6	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999960530025677	WITHOUT_CLASSIFICATION	3.9469974323713186E-6	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999960530025677	WITHOUT_CLASSIFICATION	3.9469974323713186E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999962406062679	WITHOUT_CLASSIFICATION	3.7593937320373483E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999962406062679	WITHOUT_CLASSIFICATION	3.7593937320373483E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.999999252404225	WITHOUT_CLASSIFICATION	7.475957748213552E-7	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9997290002445801	WITHOUT_CLASSIFICATION	2.709997554198792E-4	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999992888959883	WITHOUT_CLASSIFICATION	7.111040115875716E-7	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999919083396813	WITHOUT_CLASSIFICATION	8.091660318793472E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999909395955776	WITHOUT_CLASSIFICATION	9.060404422332255E-6	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999996714416045	WITHOUT_CLASSIFICATION	3.2855839551235093E-7	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999947764390934	WITHOUT_CLASSIFICATION	5.2235609065388685E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999929061859176	WITHOUT_CLASSIFICATION	7.09381408234435E-6	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9986762468743712	WITHOUT_CLASSIFICATION	0.0013237531256288441	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9997587853817096	WITHOUT_CLASSIFICATION	2.412146182903561E-4	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.7827938852613298	WITHOUT_CLASSIFICATION	0.2172061147386703	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9992850016130231	WITHOUT_CLASSIFICATION	7.149983869767992E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999962365653274	WITHOUT_CLASSIFICATION	3.7634346725530437E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999969813798952	WITHOUT_CLASSIFICATION	3.0186201047036327E-6	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999984773965764	WITHOUT_CLASSIFICATION	1.5226034236018564E-6	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999999672293078	WITHOUT_CLASSIFICATION	3.277069222884929E-8	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999442823636459	WITHOUT_CLASSIFICATION	5.571763635407289E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999989879903488	WITHOUT_CLASSIFICATION	1.0120096511368013E-6	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999998926472999	WITHOUT_CLASSIFICATION	1.073527000977189E-6	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999755042970326	WITHOUT_CLASSIFICATION	2.449570296741545E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9660192574439206	WITHOUT_CLASSIFICATION	0.03398074255607944	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998899950736589	WITHOUT_CLASSIFICATION	1.1000492634111432E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9994414904248242	WITHOUT_CLASSIFICATION	5.585095751756623E-4	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999914473510801	WITHOUT_CLASSIFICATION	8.55264891988066E-6	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999965082601274	WITHOUT_CLASSIFICATION	3.4917398725930257E-6	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9997751012746596	WITHOUT_CLASSIFICATION	2.248987253404414E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999980466540117	WITHOUT_CLASSIFICATION	1.9533459882234773E-6	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9998269835766955	WITHOUT_CLASSIFICATION	1.7301642330436247E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999458842000414	WITHOUT_CLASSIFICATION	5.4115799958598176E-5	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999981911213	WITHOUT_CLASSIFICATION	1.8088786893723405E-9	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999223420254765	WITHOUT_CLASSIFICATION	7.765797452350247E-5	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999872105850995	WITHOUT_CLASSIFICATION	1.2789414900314598E-5	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999713533078959	WITHOUT_CLASSIFICATION	2.864669210413791E-5	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999983072774962	WITHOUT_CLASSIFICATION	1.6927225038344667E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999990487682211	WITHOUT_CLASSIFICATION	9.512317788343821E-7	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.999778174920309	WITHOUT_CLASSIFICATION	2.2182507969110784E-4	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999971394296506	WITHOUT_CLASSIFICATION	2.860570349464704E-6	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9998852119317931	WITHOUT_CLASSIFICATION	1.1478806820678721E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999871579818432	WITHOUT_CLASSIFICATION	1.2842018156721142E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999482434280715	WITHOUT_CLASSIFICATION	5.17565719284885E-4	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.7700694555377199	WITHOUT_CLASSIFICATION	0.22993054446228015	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999802545819331	WITHOUT_CLASSIFICATION	1.9745418066930793E-5	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999832211498541	WITHOUT_CLASSIFICATION	1.6778850145905005E-4	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.999926201871128	WITHOUT_CLASSIFICATION	7.379812887203266E-5	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999989239028502	WITHOUT_CLASSIFICATION	1.0760971497802985E-6	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.998970216077366	WITHOUT_CLASSIFICATION	0.0010297839226340068	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999991660148985	WITHOUT_CLASSIFICATION	8.339851014109789E-7	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9981828694907274	WITHOUT_CLASSIFICATION	0.0018171305092725533	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999425178462246	WITHOUT_CLASSIFICATION	5.74821537753897E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998999759980296	WITHOUT_CLASSIFICATION	1.000240019704255E-4	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.997945451090741	WITHOUT_CLASSIFICATION	0.0020545489092590025	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999780461909998	WITHOUT_CLASSIFICATION	2.1953809000138884E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999780461909998	WITHOUT_CLASSIFICATION	2.1953809000138884E-5	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999929042428904	WITHOUT_CLASSIFICATION	7.095757109517476E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999929042428904	WITHOUT_CLASSIFICATION	7.095757109517476E-6	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9776622586056973	WITHOUT_CLASSIFICATION	0.022337741394302633	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9776622586056973	WITHOUT_CLASSIFICATION	0.022337741394302633	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998937964042606	WITHOUT_CLASSIFICATION	1.0620359573931067E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998937964042606	WITHOUT_CLASSIFICATION	1.0620359573931067E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999912176316176	WITHOUT_CLASSIFICATION	8.782368382395941E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999912176316176	WITHOUT_CLASSIFICATION	8.782368382395941E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999912176316176	WITHOUT_CLASSIFICATION	8.782368382395941E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999912176316176	WITHOUT_CLASSIFICATION	8.782368382395941E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999912176316176	WITHOUT_CLASSIFICATION	8.782368382395941E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999912176316176	WITHOUT_CLASSIFICATION	8.782368382395941E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999912176316176	WITHOUT_CLASSIFICATION	8.782368382395941E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999912176316176	WITHOUT_CLASSIFICATION	8.782368382395941E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999912176316176	WITHOUT_CLASSIFICATION	8.782368382395941E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999985042704667	WITHOUT_CLASSIFICATION	1.495729533370204E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999985042704667	WITHOUT_CLASSIFICATION	1.495729533370204E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999985042704667	WITHOUT_CLASSIFICATION	1.495729533370204E-6	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999542315182733	WITHOUT_CLASSIFICATION	4.576848172668667E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999948293055428	WITHOUT_CLASSIFICATION	5.17069445713882E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999948293055428	WITHOUT_CLASSIFICATION	5.17069445713882E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999948293055428	WITHOUT_CLASSIFICATION	5.17069445713882E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9983370131198709	WITHOUT_CLASSIFICATION	0.001662986880129045	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9983370131198709	WITHOUT_CLASSIFICATION	0.001662986880129045	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9983370131198709	WITHOUT_CLASSIFICATION	0.001662986880129045	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999624168571204	WITHOUT_CLASSIFICATION	3.758314287954512E-5	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999828183785205	WITHOUT_CLASSIFICATION	1.7181621479431547E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999393228137475	WITHOUT_CLASSIFICATION	6.0677186252479926E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999517849596378	WITHOUT_CLASSIFICATION	4.821504036236393E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999517849596378	WITHOUT_CLASSIFICATION	4.821504036236393E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999517849596378	WITHOUT_CLASSIFICATION	4.821504036236393E-5	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999384559674473	WITHOUT_CLASSIFICATION	6.154403255260202E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999869911538072	WITHOUT_CLASSIFICATION	1.3008846192778833E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999869911538072	WITHOUT_CLASSIFICATION	1.3008846192778833E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999407012879087	WITHOUT_CLASSIFICATION	5.929871209129514E-5	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999075621865	WITHOUT_CLASSIFICATION	9.243781350695283E-8	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999075621865	WITHOUT_CLASSIFICATION	9.243781350695283E-8	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9994543219456917	DESIGN	5.456780543082392E-4	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999787603807204	WITHOUT_CLASSIFICATION	2.1239619279548138E-5	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9988237583593135	WITHOUT_CLASSIFICATION	0.0011762416406865047	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999734718902653	WITHOUT_CLASSIFICATION	2.6528109734727128E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999734718902653	WITHOUT_CLASSIFICATION	2.6528109734727128E-5	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9989037295645672	WITHOUT_CLASSIFICATION	0.0010962704354328858	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.990318107128665	WITHOUT_CLASSIFICATION	0.009681892871335121	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9998667225211091	WITHOUT_CLASSIFICATION	1.3327747889099625E-4	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.8559967695222441	WITHOUT_CLASSIFICATION	0.14400323047775584	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999371178453617	WITHOUT_CLASSIFICATION	6.288215463828808E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999734718902653	WITHOUT_CLASSIFICATION	2.6528109734727128E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999734718902653	WITHOUT_CLASSIFICATION	2.6528109734727128E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999734718902653	WITHOUT_CLASSIFICATION	2.6528109734727128E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999734718902653	WITHOUT_CLASSIFICATION	2.6528109734727128E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999734718902653	WITHOUT_CLASSIFICATION	2.6528109734727128E-5	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999901045331294	WITHOUT_CLASSIFICATION	9.895466870565473E-6	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999683865951	WITHOUT_CLASSIFICATION	3.16134049000489E-5	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9998379809374471	WITHOUT_CLASSIFICATION	1.6201906255275506E-4	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999977243438085	WITHOUT_CLASSIFICATION	2.2756561914912898E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999998818070195	WITHOUT_CLASSIFICATION	1.1819298056893145E-7	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999103860175279	WITHOUT_CLASSIFICATION	8.961398247207315E-5	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9997308974945889	WITHOUT_CLASSIFICATION	2.6910250541106967E-4	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9995756189638421	WITHOUT_CLASSIFICATION	4.2438103615785773E-4	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999937723017781	WITHOUT_CLASSIFICATION	6.227698221974481E-6	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999997027687847	WITHOUT_CLASSIFICATION	2.9723121520268157E-7	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999930174926134	WITHOUT_CLASSIFICATION	6.982507386604537E-6	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999893937656169	WITHOUT_CLASSIFICATION	1.0606234383109924E-4	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9997194242212583	WITHOUT_CLASSIFICATION	2.805757787418093E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999999716548105	WITHOUT_CLASSIFICATION	2.8345189486334257E-7	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9990035038345	WITHOUT_CLASSIFICATION	9.96496165500029E-4	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999974671018903	WITHOUT_CLASSIFICATION	2.532898109653436E-6	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999975271138669	WITHOUT_CLASSIFICATION	2.472886133076384E-6	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999245286157358	WITHOUT_CLASSIFICATION	7.547138426423276E-5	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999733596791335	WITHOUT_CLASSIFICATION	2.6640320866491843E-5	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999999060090719	WITHOUT_CLASSIFICATION	9.399092810524618E-7	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9979812693222121	WITHOUT_CLASSIFICATION	0.0020187306777878955	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999957079693512	WITHOUT_CLASSIFICATION	4.292030648742602E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999327565700952	WITHOUT_CLASSIFICATION	6.72434299047868E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983802942087	WITHOUT_CLASSIFICATION	1.6197057913342897E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983802942087	WITHOUT_CLASSIFICATION	1.6197057913342897E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983802942087	WITHOUT_CLASSIFICATION	1.6197057913342897E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983802942087	WITHOUT_CLASSIFICATION	1.6197057913342897E-6	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999980002841232	WITHOUT_CLASSIFICATION	1.9997158768844E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999922442467919	WITHOUT_CLASSIFICATION	7.755753208012978E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999997217861223	WITHOUT_CLASSIFICATION	2.78213877732698E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999997217861223	WITHOUT_CLASSIFICATION	2.78213877732698E-7	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999984505970013	WITHOUT_CLASSIFICATION	1.5494029986995842E-6	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999283711413132	WITHOUT_CLASSIFICATION	7.162885868676546E-5	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999974303643114	WITHOUT_CLASSIFICATION	2.569635688693695E-6	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998989734157757	WITHOUT_CLASSIFICATION	1.0102658422432842E-4	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999940409712458	WITHOUT_CLASSIFICATION	5.959028754265799E-6	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999934151378099	WITHOUT_CLASSIFICATION	6.58486219011492E-6	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999976659771441	WITHOUT_CLASSIFICATION	2.3340228558345685E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999677392523034	WITHOUT_CLASSIFICATION	3.226074769654517E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999677392523034	WITHOUT_CLASSIFICATION	3.226074769654517E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999677392523034	WITHOUT_CLASSIFICATION	3.226074769654517E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999677392523034	WITHOUT_CLASSIFICATION	3.226074769654517E-5	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9987708845812893	WITHOUT_CLASSIFICATION	0.0012291154187108106	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9854824998177499	WITHOUT_CLASSIFICATION	0.014517500182250048	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9854824998177499	WITHOUT_CLASSIFICATION	0.014517500182250048	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9854824998177499	WITHOUT_CLASSIFICATION	0.014517500182250048	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9996551724834536	WITHOUT_CLASSIFICATION	3.4482751654641125E-4	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999389371301755	WITHOUT_CLASSIFICATION	6.106286982447345E-5	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999867959132077	WITHOUT_CLASSIFICATION	1.320408679220854E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9722154445004357	DESIGN	0.027784555499564358	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9722154445004357	DESIGN	0.027784555499564358	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9972243090530801	WITHOUT_CLASSIFICATION	0.002775690946919883	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.6780029466082194	WITHOUT_CLASSIFICATION	0.32199705339178053	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999655970433113	WITHOUT_CLASSIFICATION	3.440295668874953E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999655970433113	WITHOUT_CLASSIFICATION	3.440295668874953E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9997019628351324	WITHOUT_CLASSIFICATION	2.9803716486765573E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9997019628351324	WITHOUT_CLASSIFICATION	2.9803716486765573E-4	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999990017695711	WITHOUT_CLASSIFICATION	9.98230428921687E-7	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9985612185292184	WITHOUT_CLASSIFICATION	0.0014387814707816147	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999963499717637	WITHOUT_CLASSIFICATION	3.650028236373843E-6	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999843711947072	WITHOUT_CLASSIFICATION	1.5628805292765868E-5	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998987172535193	WITHOUT_CLASSIFICATION	1.0128274648076193E-4	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999852358746713	WITHOUT_CLASSIFICATION	1.4764125328859915E-5	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999997015103669	WITHOUT_CLASSIFICATION	2.984896330935875E-6	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9639821089676139	WITHOUT_CLASSIFICATION	0.03601789103238597	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9997505489237217	WITHOUT_CLASSIFICATION	2.494510762782973E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999979553875298	WITHOUT_CLASSIFICATION	2.0446124702422053E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999979553875298	WITHOUT_CLASSIFICATION	2.0446124702422053E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999899356682698	WITHOUT_CLASSIFICATION	1.0064331730095896E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999899356682698	WITHOUT_CLASSIFICATION	1.0064331730095896E-5	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999822700532423	WITHOUT_CLASSIFICATION	1.7729946757679615E-5	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999941163128987	WITHOUT_CLASSIFICATION	5.88368710122025E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998950117934653	WITHOUT_CLASSIFICATION	1.0498820653467066E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999937086637207	WITHOUT_CLASSIFICATION	6.291336279298042E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999937086637207	WITHOUT_CLASSIFICATION	6.291336279298042E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999937086637207	WITHOUT_CLASSIFICATION	6.291336279298042E-5	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999957233807975	WITHOUT_CLASSIFICATION	4.276619202607357E-6	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999910834412328	WITHOUT_CLASSIFICATION	8.916558767104862E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.999993075767877	WITHOUT_CLASSIFICATION	6.924232123009699E-6	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999923690008372	WITHOUT_CLASSIFICATION	7.630999162867377E-6	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999906926053916	WITHOUT_CLASSIFICATION	9.30739460844862E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999919485373636	WITHOUT_CLASSIFICATION	8.051462636363036E-6	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999928148083487	WITHOUT_CLASSIFICATION	7.1851916512728816E-6	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999961319524335	WITHOUT_CLASSIFICATION	3.868047566441112E-6	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9995531446508105	WITHOUT_CLASSIFICATION	4.468553491895255E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999122346953784	WITHOUT_CLASSIFICATION	8.77653046216291E-5	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9968539276868479	WITHOUT_CLASSIFICATION	0.003146072313152112	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999960240544884	WITHOUT_CLASSIFICATION	3.97594551157166E-6	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999999226492031	WITHOUT_CLASSIFICATION	7.73507968260439E-8	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9722154445004357	DESIGN	0.027784555499564358	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9973948692861097	WITHOUT_CLASSIFICATION	0.0026051307138902765	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998957456387997	WITHOUT_CLASSIFICATION	1.042543612003917E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9973573211820704	WITHOUT_CLASSIFICATION	0.0026426788179296718	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998763804503825	WITHOUT_CLASSIFICATION	1.2361954961741942E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998763804503825	WITHOUT_CLASSIFICATION	1.2361954961741942E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998763804503825	WITHOUT_CLASSIFICATION	1.2361954961741942E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998763804503825	WITHOUT_CLASSIFICATION	1.2361954961741942E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998763804503825	WITHOUT_CLASSIFICATION	1.2361954961741942E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999472447230173	WITHOUT_CLASSIFICATION	5.2755276982767186E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998763804503825	WITHOUT_CLASSIFICATION	1.2361954961741942E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998763804503825	WITHOUT_CLASSIFICATION	1.2361954961741942E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998763804503825	WITHOUT_CLASSIFICATION	1.2361954961741942E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999968878443721	WITHOUT_CLASSIFICATION	3.112155627937097E-6	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9976253886621996	WITHOUT_CLASSIFICATION	0.002374611337800401	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999986492322773	WITHOUT_CLASSIFICATION	1.3507677226363243E-6	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9380444315533459	WITHOUT_CLASSIFICATION	0.06195556844665405	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999127484344856	WITHOUT_CLASSIFICATION	8.725156551436534E-5	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.7451791529136019	WITHOUT_CLASSIFICATION	0.254820847086398	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9994550482533302	WITHOUT_CLASSIFICATION	5.44951746669736E-4	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999936839799943	WITHOUT_CLASSIFICATION	6.316020005616357E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999945038110647	WITHOUT_CLASSIFICATION	5.496188935289572E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999945038110647	WITHOUT_CLASSIFICATION	5.496188935289572E-6	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999949203554832	WITHOUT_CLASSIFICATION	5.079644516796636E-6	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999929181211862	WITHOUT_CLASSIFICATION	7.081878813896169E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999941360178707	WITHOUT_CLASSIFICATION	5.863982129334513E-6	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.999994915765595	WITHOUT_CLASSIFICATION	5.084234404958167E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999953221841347	WITHOUT_CLASSIFICATION	4.677815865274213E-6	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999930658444021	WITHOUT_CLASSIFICATION	6.934155597901472E-6	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999911153934973	WITHOUT_CLASSIFICATION	8.884606502799634E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999935819214298	WITHOUT_CLASSIFICATION	6.418078570079297E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999927582655281	WITHOUT_CLASSIFICATION	7.2417344718524165E-6	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999939870569775	WITHOUT_CLASSIFICATION	6.012943022568855E-6	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999967264940821	WITHOUT_CLASSIFICATION	3.273505917831711E-6	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999956480299214	WITHOUT_CLASSIFICATION	4.35197007860167E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999939597264885	WITHOUT_CLASSIFICATION	6.040273511487464E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999938735282387	WITHOUT_CLASSIFICATION	6.126471761283775E-6	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999939495232628	WITHOUT_CLASSIFICATION	6.050476737178003E-6	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999920412478588	WITHOUT_CLASSIFICATION	7.958752141241124E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999917496789692	WITHOUT_CLASSIFICATION	8.250321030805345E-6	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999943082597534	WITHOUT_CLASSIFICATION	5.691740246509307E-6	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999945471365134	WITHOUT_CLASSIFICATION	5.452863486585421E-6	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999944192686478	WITHOUT_CLASSIFICATION	5.580731352131118E-6	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999931624971604	WITHOUT_CLASSIFICATION	6.837502839585376E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999948192709412	WITHOUT_CLASSIFICATION	5.180729058786425E-6	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999941531650539	WITHOUT_CLASSIFICATION	5.846834946078735E-6	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999953978706427	WITHOUT_CLASSIFICATION	4.602129357230493E-6	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999963906121461	WITHOUT_CLASSIFICATION	3.6093878539166624E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999964743305922	WITHOUT_CLASSIFICATION	3.5256694077359014E-6	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.999994996440594	WITHOUT_CLASSIFICATION	5.00355940605007E-6	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999961587042523	WITHOUT_CLASSIFICATION	3.84129574764009E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999956923348823	WITHOUT_CLASSIFICATION	4.307665117732336E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.999995702523533	WITHOUT_CLASSIFICATION	4.29747646712351E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999967765415487	WITHOUT_CLASSIFICATION	3.223458451199395E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999951788196031	WITHOUT_CLASSIFICATION	4.821180396820941E-6	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999953280127705	WITHOUT_CLASSIFICATION	4.671987229593896E-6	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999955471138812	WITHOUT_CLASSIFICATION	4.452886118815771E-6	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999969800384961	WITHOUT_CLASSIFICATION	3.0199615038752956E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999969266325259	WITHOUT_CLASSIFICATION	3.073367474202986E-6	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999966935412307	WITHOUT_CLASSIFICATION	3.3064587693052045E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999964449635331	WITHOUT_CLASSIFICATION	3.5550364669894397E-6	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999972512280185	WITHOUT_CLASSIFICATION	2.748771981551333E-6	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999965867712403	WITHOUT_CLASSIFICATION	3.4132287596681006E-6	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999961134718292	WITHOUT_CLASSIFICATION	3.886528170836761E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999972516827856	WITHOUT_CLASSIFICATION	2.748317214268217E-6	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999968093205448	WITHOUT_CLASSIFICATION	3.190679455250827E-6	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999947934171649	WITHOUT_CLASSIFICATION	5.206582835120108E-6	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999958178390335	WITHOUT_CLASSIFICATION	4.1821609664814176E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999957302821244	WITHOUT_CLASSIFICATION	4.269717875590637E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999940415207409	WITHOUT_CLASSIFICATION	5.958479259086373E-6	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999953367841623	WITHOUT_CLASSIFICATION	4.6632158376364625E-6	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999964482106714	WITHOUT_CLASSIFICATION	3.5517893286438766E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.999994804612336	WITHOUT_CLASSIFICATION	5.195387663902729E-6	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999962640209779	WITHOUT_CLASSIFICATION	3.735979022046444E-6	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999964148055703	WITHOUT_CLASSIFICATION	3.5851944296792984E-6	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999968364886515	WITHOUT_CLASSIFICATION	3.163511348595217E-6	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.999995506392284	WITHOUT_CLASSIFICATION	4.4936077160163106E-6	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.999995506392284	WITHOUT_CLASSIFICATION	4.4936077160163106E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999952065948611	WITHOUT_CLASSIFICATION	4.793405138990553E-6	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.999997300563221	WITHOUT_CLASSIFICATION	2.6994367790363407E-6	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999957706154711	WITHOUT_CLASSIFICATION	4.229384528962815E-6	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999965999500937	WITHOUT_CLASSIFICATION	3.400049906363238E-6	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999958312857169	WITHOUT_CLASSIFICATION	4.168714283055276E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999958358014517	WITHOUT_CLASSIFICATION	4.164198548274417E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999941245343225	WITHOUT_CLASSIFICATION	5.875465677497156E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999947036965422	WITHOUT_CLASSIFICATION	5.296303457808632E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999960458772972	WITHOUT_CLASSIFICATION	3.954122702887503E-6	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999953159911902	WITHOUT_CLASSIFICATION	4.684008809894617E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999924746787652	WITHOUT_CLASSIFICATION	7.52532123485339E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999924746787652	WITHOUT_CLASSIFICATION	7.52532123485339E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999987105381913	WITHOUT_CLASSIFICATION	1.2894618087347793E-6	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.999989828260253	WITHOUT_CLASSIFICATION	1.0171739747074141E-5	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999977020627526	WITHOUT_CLASSIFICATION	2.297937247317694E-6	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999948605293583	WITHOUT_CLASSIFICATION	5.139470641742635E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999950286099766	WITHOUT_CLASSIFICATION	4.971390023426871E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999950286099766	WITHOUT_CLASSIFICATION	4.971390023426871E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999950286099766	WITHOUT_CLASSIFICATION	4.971390023426871E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999950286099766	WITHOUT_CLASSIFICATION	4.971390023426871E-6	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.995157051309643	DESIGN	0.004842948690357006	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9994597237490759	WITHOUT_CLASSIFICATION	5.402762509241995E-4	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9999946926416966	WITHOUT_CLASSIFICATION	5.307358303327306E-6	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999933118921985	WITHOUT_CLASSIFICATION	6.688107801439523E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999950974956772	WITHOUT_CLASSIFICATION	4.902504322831292E-6	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.999994290176243	WITHOUT_CLASSIFICATION	5.7098237570043136E-6	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999941567581914	WITHOUT_CLASSIFICATION	5.843241808590127E-6	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999948355434854	WITHOUT_CLASSIFICATION	5.1644565144961985E-6	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999914825385441	WITHOUT_CLASSIFICATION	8.517461455801855E-6	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999930377254931	WITHOUT_CLASSIFICATION	6.962274506985598E-6	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999902572226631	WITHOUT_CLASSIFICATION	9.742777336877415E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999942090801753	WITHOUT_CLASSIFICATION	5.790919824688293E-6	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999945298328445	WITHOUT_CLASSIFICATION	5.470167155457781E-6	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999917056940074	WITHOUT_CLASSIFICATION	8.294305992583926E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999921153104638	WITHOUT_CLASSIFICATION	7.884689536159424E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999931879430111	WITHOUT_CLASSIFICATION	6.812056988925201E-6	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.999990845182636	WITHOUT_CLASSIFICATION	9.154817363908154E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999953092065647	WITHOUT_CLASSIFICATION	4.690793435431621E-6	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999953434523254	WITHOUT_CLASSIFICATION	4.65654767451609E-6	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999936139587643	WITHOUT_CLASSIFICATION	6.386041235641728E-6	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999957298066745	WITHOUT_CLASSIFICATION	4.270193325511677E-6	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999917337492026	WITHOUT_CLASSIFICATION	8.266250797398831E-6	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999946390379865	WITHOUT_CLASSIFICATION	5.360962013482264E-6	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999931204585434	WITHOUT_CLASSIFICATION	6.87954145662084E-6	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999945152532357	WITHOUT_CLASSIFICATION	5.484746764320745E-6	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999959932212636	WITHOUT_CLASSIFICATION	4.006778736430418E-6	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999970870626956	WITHOUT_CLASSIFICATION	2.9129373042838233E-6	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999960058111025	WITHOUT_CLASSIFICATION	3.9941888975301584E-6	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999961907250885	WITHOUT_CLASSIFICATION	3.8092749114600785E-6	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999947706621508	WITHOUT_CLASSIFICATION	5.229337849182736E-6	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.999996174224595	WITHOUT_CLASSIFICATION	3.825775405100031E-6	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999966041227583	WITHOUT_CLASSIFICATION	3.3958772417468432E-6	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.999996687675049	WITHOUT_CLASSIFICATION	3.312324950850624E-6	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999966760815981	WITHOUT_CLASSIFICATION	3.323918401885672E-6	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999965271975769	WITHOUT_CLASSIFICATION	3.4728024230136737E-6	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.999995647539427	WITHOUT_CLASSIFICATION	4.352460572965725E-6	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999955924039591	WITHOUT_CLASSIFICATION	4.407596040864529E-6	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999948514337657	WITHOUT_CLASSIFICATION	5.148566234241134E-6	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999968554054283	WITHOUT_CLASSIFICATION	3.14459457167263E-6	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999952110327474	WITHOUT_CLASSIFICATION	4.788967252657977E-6	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999970893624122	WITHOUT_CLASSIFICATION	2.9106375878532055E-6	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999955818053505	WITHOUT_CLASSIFICATION	4.418194649424732E-6	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999943716718144	WITHOUT_CLASSIFICATION	5.628328185582977E-6	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999953722434989	WITHOUT_CLASSIFICATION	4.627756501064744E-6	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999953666057629	WITHOUT_CLASSIFICATION	4.633394237008987E-6	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999962398645272	WITHOUT_CLASSIFICATION	3.7601354726813475E-6	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999963731922002	WITHOUT_CLASSIFICATION	3.6268077996628903E-6	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999951522136393	WITHOUT_CLASSIFICATION	4.847786360657672E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999969023043981	WITHOUT_CLASSIFICATION	3.0976956019904492E-6	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999947862975007	WITHOUT_CLASSIFICATION	5.213702499265641E-6	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999941096627638	WITHOUT_CLASSIFICATION	5.890337236168669E-6	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999948395009282	WITHOUT_CLASSIFICATION	5.160499071822631E-6	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.999997298660125	WITHOUT_CLASSIFICATION	2.701339875042603E-6	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999966983888	WITHOUT_CLASSIFICATION	3.301611200107357E-6	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999960173607665	WITHOUT_CLASSIFICATION	3.9826392334510214E-6	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.999996547342498	WITHOUT_CLASSIFICATION	3.4526575020612818E-6	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999953431588845	WITHOUT_CLASSIFICATION	4.656841115609996E-6	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.999996402744149	WITHOUT_CLASSIFICATION	3.5972558509193806E-6	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999975266850397	WITHOUT_CLASSIFICATION	2.4733149603496397E-6	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9990607941372144	WITHOUT_CLASSIFICATION	9.392058627855742E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999684497124132	WITHOUT_CLASSIFICATION	3.155028758688001E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9969902274810833	WITHOUT_CLASSIFICATION	0.003009772518916709	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9969902274810833	WITHOUT_CLASSIFICATION	0.003009772518916709	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9969902274810833	WITHOUT_CLASSIFICATION	0.003009772518916709	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9969902274810833	WITHOUT_CLASSIFICATION	0.003009772518916709	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9969902274810833	WITHOUT_CLASSIFICATION	0.003009772518916709	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9969902274810833	WITHOUT_CLASSIFICATION	0.003009772518916709	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9969902274810833	WITHOUT_CLASSIFICATION	0.003009772518916709	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999984149430927	WITHOUT_CLASSIFICATION	1.58505690730338E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999984149430927	WITHOUT_CLASSIFICATION	1.58505690730338E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999984149430927	WITHOUT_CLASSIFICATION	1.58505690730338E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999984149430927	WITHOUT_CLASSIFICATION	1.58505690730338E-5	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9994601714585273	WITHOUT_CLASSIFICATION	5.398285414726977E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9994601714585273	WITHOUT_CLASSIFICATION	5.398285414726977E-4	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.999999542979366	WITHOUT_CLASSIFICATION	4.570206339246348E-7	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988838208895	WITHOUT_CLASSIFICATION	1.1161791104600105E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988838208895	WITHOUT_CLASSIFICATION	1.1161791104600105E-6	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999989041445925	WITHOUT_CLASSIFICATION	1.0958554074711471E-6	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999736340544355	WITHOUT_CLASSIFICATION	2.6365945564442337E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984998525301	WITHOUT_CLASSIFICATION	1.5001474699670825E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984998525301	WITHOUT_CLASSIFICATION	1.5001474699670825E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984998525301	WITHOUT_CLASSIFICATION	1.5001474699670825E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984998525301	WITHOUT_CLASSIFICATION	1.5001474699670825E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984998525301	WITHOUT_CLASSIFICATION	1.5001474699670825E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984998525301	WITHOUT_CLASSIFICATION	1.5001474699670825E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999984998525301	WITHOUT_CLASSIFICATION	1.5001474699670825E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999992562587202	WITHOUT_CLASSIFICATION	7.437412798095201E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993354579723	WITHOUT_CLASSIFICATION	6.645420276684073E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.99999987115097	WITHOUT_CLASSIFICATION	1.288490300373917E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.99999987115097	WITHOUT_CLASSIFICATION	1.288490300373917E-7	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.999927281951791	WITHOUT_CLASSIFICATION	7.271804820896214E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997029489973468	WITHOUT_CLASSIFICATION	2.970510026531721E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997029489973468	WITHOUT_CLASSIFICATION	2.970510026531721E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999993421828957	WITHOUT_CLASSIFICATION	6.57817104301657E-7	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999979396881913	DESIGN	2.0603118087586845E-6	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9764135288080599	WITHOUT_CLASSIFICATION	0.023586471191940125	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9998160239444814	WITHOUT_CLASSIFICATION	1.839760555184944E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.999889455492828	WITHOUT_CLASSIFICATION	1.1054450717198112E-4	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999879655497744	WITHOUT_CLASSIFICATION	1.2034450225590002E-4	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999825636754576	WITHOUT_CLASSIFICATION	1.743632454242154E-5	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999942745886723	WITHOUT_CLASSIFICATION	5.725411327819726E-6	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999905467089474	WITHOUT_CLASSIFICATION	9.453291052610692E-6	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999824469788245	WITHOUT_CLASSIFICATION	1.7553021175455245E-5	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.978376023939403	WITHOUT_CLASSIFICATION	0.02162397606059703	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9993774657508173	WITHOUT_CLASSIFICATION	6.225342491828176E-4	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997897220657	WITHOUT_CLASSIFICATION	2.1027793421172618E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9998011956750512	WITHOUT_CLASSIFICATION	1.98804324948813E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999962327656836	WITHOUT_CLASSIFICATION	3.767234316493264E-6	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999991211985326	WITHOUT_CLASSIFICATION	8.788014672333075E-7	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999551002376987	WITHOUT_CLASSIFICATION	4.489976230129126E-5	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999964670269215	WITHOUT_CLASSIFICATION	3.532973078505283E-5	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9989265422109402	WITHOUT_CLASSIFICATION	0.001073457789059747	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9989265422109402	WITHOUT_CLASSIFICATION	0.001073457789059747	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999874943037217	WITHOUT_CLASSIFICATION	1.2505696278335327E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997167780894	WITHOUT_CLASSIFICATION	2.832219104822244E-7	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999953680941615	WITHOUT_CLASSIFICATION	4.631905838640325E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999754998356672	WITHOUT_CLASSIFICATION	2.4500164332798616E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999663359571922	WITHOUT_CLASSIFICATION	3.366404280777686E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999663359571922	WITHOUT_CLASSIFICATION	3.366404280777686E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999663359571922	WITHOUT_CLASSIFICATION	3.366404280777686E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999495657001083	WITHOUT_CLASSIFICATION	5.043429989170134E-4	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998856551326308	WITHOUT_CLASSIFICATION	1.143448673691392E-4	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9984861283471826	WITHOUT_CLASSIFICATION	0.0015138716528173728	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9996222697198829	WITHOUT_CLASSIFICATION	3.7773028011712156E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.762113875139185	WITHOUT_CLASSIFICATION	0.23788612486081498	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999979627387582	WITHOUT_CLASSIFICATION	2.037261241768699E-6	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999983501811958	WITHOUT_CLASSIFICATION	1.6498188042041344E-6	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9943561773963835	WITHOUT_CLASSIFICATION	0.005643822603616528	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999916873429867	WITHOUT_CLASSIFICATION	8.312657013352453E-6	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999890454793979	WITHOUT_CLASSIFICATION	1.0954520602010014E-5	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.999999339838179	WITHOUT_CLASSIFICATION	6.601618210032759E-7	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999598916791343	WITHOUT_CLASSIFICATION	4.010832086565054E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9891876105438847	DESIGN	0.010812389456115293	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9727291974537559	WITHOUT_CLASSIFICATION	0.027270802546244113	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999869168086964	WITHOUT_CLASSIFICATION	1.3083191303545714E-5	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999780724894	WITHOUT_CLASSIFICATION	2.1927510666045954E-8	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999437042705672	WITHOUT_CLASSIFICATION	5.629572943280242E-5	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999998999692432	WITHOUT_CLASSIFICATION	1.0003075679855872E-6	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999999868626525	WITHOUT_CLASSIFICATION	1.3137347505693093E-7	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.9166265840184762	DESIGN	0.08337341598152385	WITHOUT_CLASSIFICATION
// FIXME: move out of this class!	DESIGN	0.9961443838403415	DESIGN	0.0038556161596585673	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9973402629573663	DESIGN	0.0026597370426336506	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9997372421914128	DESIGN	2.6275780858713694E-4	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9986422990165326	DESIGN	0.0013577009834673994	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.9562256338231337	DESIGN	0.043774366176866274	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999948917421008	DESIGN	5.108257899279068E-6	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9950069220519563	WITHOUT_CLASSIFICATION	0.004993077948043658	DESIGN
// we might need to perform a DST correction	DESIGN	0.9992629990259089	WITHOUT_CLASSIFICATION	7.370009740911323E-4	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9973593843252018	WITHOUT_CLASSIFICATION	0.0026406156747982024	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9999317749283065	DESIGN	6.822507169338152E-5	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9974576215481714	WITHOUT_CLASSIFICATION	0.0025423784518284805	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9998780539539662	DESIGN	1.2194604603381649E-4	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9998780539539662	DESIGN	1.2194604603381649E-4	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9998707567259543	DESIGN	1.29243274045735E-4	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9956648900887871	DESIGN	0.004335109911212872	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999995671349519	DESIGN	4.328650480602687E-7	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9440410396122753	DESIGN	0.055958960387724785	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999950313740211	DESIGN	4.968625978874493E-6	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.8279274678342273	DESIGN	0.17207253216577262	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9999808593676689	DESIGN	1.9140632331148925E-5	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9917954973181962	DESIGN	0.008204502681803935	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9984436040941549	DESIGN	0.0015563959058450285	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.8626522008642765	DESIGN	0.13734779913572348	WITHOUT_CLASSIFICATION
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9999965271953233	DESIGN	3.472804676724765E-6	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9842518529631018	DESIGN	0.015748147036898287	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.8126868525229778	DESIGN	0.18731314747702218	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9883756933586663	DESIGN	0.011624306641333754	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.8327036978801329	DESIGN	0.16729630211986704	WITHOUT_CLASSIFICATION
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9999929233208349	DESIGN	7.076679165154871E-6	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9208180116116902	DESIGN	0.07918198838830978	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9997909794202336	DESIGN	2.0902057976637404E-4	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9242217320593095	DESIGN	0.07577826794069054	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9999266152312632	WITHOUT_CLASSIFICATION	7.33847687368024E-5	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.9989826469768732	DESIGN	0.001017353023126784	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9866278366032559	DESIGN	0.013372163396744038	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9334816781212916	DESIGN	0.0665183218787084	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9991153671201142	DESIGN	8.846328798858487E-4	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999829982719737	DESIGN	1.700172802623423E-5	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.7479580943308363	WITHOUT_CLASSIFICATION	0.25204190566916385	DESIGN
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999972572285536	DESIGN	2.7427714464694254E-6	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999999805716471	DESIGN	1.9428352939347865E-8	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9987997020168032	DESIGN	0.0012002979831967106	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9842698473965874	WITHOUT_CLASSIFICATION	0.01573015260341264	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9883712251904517	WITHOUT_CLASSIFICATION	0.011628774809548272	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9071382822982302	DESIGN	0.09286171770176979	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9993569671324755	DESIGN	6.430328675245374E-4	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9998804488942206	DESIGN	1.1955110577944191E-4	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.636381767382952	DESIGN	0.36361823261704795	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.9999505848312451	DESIGN	4.9415168754928455E-5	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9999744184702838	DESIGN	2.558152971616723E-5	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9944612694905549	DESIGN	0.005538730509445086	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.999580640342854	DESIGN	4.1935965714600196E-4	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9770155816637844	DESIGN	0.022984418336215517	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9998501146078855	DESIGN	1.4988539211443805E-4	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.96629435943141	DESIGN	0.03370564056858998	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9272526152693301	WITHOUT_CLASSIFICATION	0.07274738473066991	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9959464674335397	DESIGN	0.004053532566460358	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.999999962030408	DESIGN	3.796959201602778E-8	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9127393855359381	DESIGN	0.08726061446406187	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9999152944013261	DESIGN	8.470559867383541E-5	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9999652094916057	DESIGN	3.479050839425667E-5	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9999381462450649	DESIGN	6.185375493501907E-5	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.8733918040331274	DESIGN	0.12660819596687248	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9925323649384645	DESIGN	0.0074676350615354575	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.9264821023275646	WITHOUT_CLASSIFICATION	0.07351789767243541	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9999180644496821	DESIGN	8.193555031795826E-5	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.7985112362837159	DESIGN	0.20148876371628419	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9986893448666543	DESIGN	0.0013106551333457474	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9999832367101364	DESIGN	1.6763289863508337E-5	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.5990173936441869	DESIGN	0.4009826063558132	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9271317651053245	DESIGN	0.07286823489467545	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9996502672831372	DESIGN	3.497327168628325E-4	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999795203780663	DESIGN	2.0479621933792442E-5	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9987141372526664	DESIGN	0.0012858627473335306	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.5257112456042498	WITHOUT_CLASSIFICATION	0.47428875439575036	DESIGN
// end hack	DESIGN	0.9954709971245879	WITHOUT_CLASSIFICATION	0.004529002875412118	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.9999381636139276	DESIGN	6.183638607238297E-5	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9973928254453147	DESIGN	0.0026071745546852433	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9571574244027864	DESIGN	0.04284257559721368	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9847958078320062	DESIGN	0.015204192167993985	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9816494628250464	DESIGN	0.01835053717495358	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999882856567	WITHOUT_CLASSIFICATION	1.1714343340436177E-8	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.995308204982579	DESIGN	0.004691795017420943	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5819365256575695	DESIGN	0.41806347434243046	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5819365256575695	DESIGN	0.41806347434243046	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5819365256575695	DESIGN	0.41806347434243046	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9803427191580615	DESIGN	0.019657280841938535	WITHOUT_CLASSIFICATION
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.8735660925185377	DESIGN	0.12643390748146233	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9433702790721518	DESIGN	0.05662972092784835	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.8341919638857013	DESIGN	0.1658080361142987	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.9566009749037037	DESIGN	0.043399025096296256	WITHOUT_CLASSIFICATION
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9994709192909883	DESIGN	5.290807090116435E-4	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.8019026445723932	WITHOUT_CLASSIFICATION	0.19809735542760679	DESIGN
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.997841745481416	DESIGN	0.002158254518583964	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.5935741986925565	DESIGN	0.4064258013074437	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9960385834479932	WITHOUT_CLASSIFICATION	0.003961416552006779	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9999681931161128	DESIGN	3.1806883887144323E-5	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9999999907973532	DESIGN	9.202646752918176E-9	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9999681931161128	DESIGN	3.1806883887144323E-5	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.5248511679387607	WITHOUT_CLASSIFICATION	0.4751488320612392	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.9643296068495628	DESIGN	0.03567039315043717	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.9643296068495628	DESIGN	0.03567039315043717	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9979820295900398	DESIGN	0.0020179704099601873	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999994687931089	DESIGN	5.31206891032739E-7	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9979820295900398	DESIGN	0.0020179704099601873	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9948145739714934	DESIGN	0.005185426028506622	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9939762058060511	DESIGN	0.0060237941939489635	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.9999999116426299	DESIGN	8.835737010142756E-8	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9807397623691478	DESIGN	0.01926023763085226	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9955229369652929	DESIGN	0.004477063034706995	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9955229369652929	DESIGN	0.004477063034706995	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9992389538730203	WITHOUT_CLASSIFICATION	7.6104612697975E-4	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9837645392880363	WITHOUT_CLASSIFICATION	0.01623546071196365	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9998625563221809	DESIGN	1.3744367781906596E-4	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9653079411542778	WITHOUT_CLASSIFICATION	0.03469205884572219	DESIGN
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9915176036740415	DESIGN	0.008482396325958543	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9566762728967114	DESIGN	0.04332372710328867	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.998720780800273	DESIGN	0.0012792191997268757	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9225372290862668	DESIGN	0.07746277091373324	WITHOUT_CLASSIFICATION
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9940690562315468	DESIGN	0.005930943768453206	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9225372290862668	DESIGN	0.07746277091373324	WITHOUT_CLASSIFICATION
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.5839036795190558	DESIGN	0.4160963204809443	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.7542368193748	DESIGN	0.2457631806252001	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9997528729551914	DESIGN	2.4712704480856325E-4	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.5332878552528181	WITHOUT_CLASSIFICATION	0.46671214474718203	DESIGN
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9997335985856456	DESIGN	2.66401414354405E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9924314576613084	DESIGN	0.007568542338691662	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9999773543150423	DESIGN	2.2645684957760078E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.8447901097320709	DESIGN	0.15520989026792906	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.6520035531417385	DESIGN	0.3479964468582615	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9924314576613084	DESIGN	0.007568542338691662	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.5524412474812124	WITHOUT_CLASSIFICATION	0.44755875251878774	DESIGN
// add a "self" recv here // TODO: is this right?	DESIGN	0.999164355149211	DESIGN	8.356448507889636E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.998076287533985	DESIGN	0.0019237124660150102	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.864552571744765	WITHOUT_CLASSIFICATION	0.13544742825523506	DESIGN
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999851579999417	DESIGN	1.4842000058351088E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9914490207474156	DESIGN	0.008550979252584343	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9905696050644771	DESIGN	0.00943039493552281	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9912596083577493	DESIGN	0.008740391642250761	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9979791058470948	DESIGN	0.002020894152905246	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9947538590977792	WITHOUT_CLASSIFICATION	0.005246140902220848	DESIGN
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9148552293950872	DESIGN	0.08514477060491275	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9998439378874522	DESIGN	1.5606211254780603E-4	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9982175714225698	DESIGN	0.0017824285774302184	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9513734230390176	WITHOUT_CLASSIFICATION	0.048626576960982354	DESIGN
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9994207520000419	WITHOUT_CLASSIFICATION	5.792479999580055E-4	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9953629821908117	DESIGN	0.004637017809188408	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9524931762405856	DESIGN	0.04750682375941434	WITHOUT_CLASSIFICATION
// we basically ignore protocol. let someone report it...	DESIGN	0.9747462884940178	WITHOUT_CLASSIFICATION	0.025253711505982122	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.8108096121258183	WITHOUT_CLASSIFICATION	0.18919038787418166	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9987081844436513	WITHOUT_CLASSIFICATION	0.0012918155563487914	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9146636800342589	WITHOUT_CLASSIFICATION	0.08533631996574115	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9960395080571518	DESIGN	0.003960491942848136	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.6368041906112163	DESIGN	0.36319580938878376	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.945368719734856	DESIGN	0.05463128026514394	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9982149175145278	DESIGN	0.0017850824854721771	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.6843722792318792	WITHOUT_CLASSIFICATION	0.3156277207681209	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.5978425449883591	WITHOUT_CLASSIFICATION	0.4021574550116408	DESIGN
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.8586314314701836	WITHOUT_CLASSIFICATION	0.14136856852981644	DESIGN
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999849092629003	WITHOUT_CLASSIFICATION	1.509073709969611E-5	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999769047968714	WITHOUT_CLASSIFICATION	2.309520312866815E-5	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9998856753361216	WITHOUT_CLASSIFICATION	1.1432466387832526E-4	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9947554183311608	WITHOUT_CLASSIFICATION	0.0052445816688392625	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.5498931460555977	DESIGN	0.45010685394440236	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.7469957314493103	DESIGN	0.2530042685506897	WITHOUT_CLASSIFICATION
// TODO: public only?	DESIGN	0.9995554413005373	DESIGN	4.445586994627773E-4	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9999110220928504	WITHOUT_CLASSIFICATION	8.897790714959006E-5	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9999398864634748	DESIGN	6.0113536525276225E-5	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9999248110676139	DESIGN	7.51889323861771E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.998694855923442	DESIGN	0.0013051440765580278	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.948157651942595	DESIGN	0.05184234805740489	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9953368223049951	DESIGN	0.004663177695004956	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9953368223049951	DESIGN	0.004663177695004956	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9999725749492884	WITHOUT_CLASSIFICATION	2.7425050711737526E-5	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9948797115669479	DESIGN	0.005120288433052106	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9948797115669479	DESIGN	0.005120288433052106	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.999849964822976	WITHOUT_CLASSIFICATION	1.5003517702413138E-4	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9996608098533878	DESIGN	3.3919014661219424E-4	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.7758970925394344	DESIGN	0.22410290746056555	WITHOUT_CLASSIFICATION
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9950959479989466	DESIGN	0.004904052001053297	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.999966720182848	DESIGN	3.327981715193642E-5	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9435787763488608	DESIGN	0.056421223651139205	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.9708317929940116	DESIGN	0.029168207005988413	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9216932082216883	DESIGN	0.07830679177831161	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9216932082216883	DESIGN	0.07830679177831161	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9901227983821145	DESIGN	0.009877201617885571	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.8571847102134068	WITHOUT_CLASSIFICATION	0.14281528978659316	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.781473355257482	WITHOUT_CLASSIFICATION	0.2185266447425179	DESIGN
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9981718737742316	DESIGN	0.0018281262257684489	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9992769376608174	DESIGN	7.230623391825652E-4	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999740098023605	WITHOUT_CLASSIFICATION	2.5990197639418025E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.999955742577738	DESIGN	4.425742226193101E-5	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9975154290363893	WITHOUT_CLASSIFICATION	0.002484570963610592	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.976614307763018	WITHOUT_CLASSIFICATION	0.023385692236982	DESIGN
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.7890726745985621	DESIGN	0.21092732540143788	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999748900209862	WITHOUT_CLASSIFICATION	2.5109979013768003E-5	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.6428499426729652	WITHOUT_CLASSIFICATION	0.35715005732703464	DESIGN
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9524931762405856	DESIGN	0.04750682375941434	WITHOUT_CLASSIFICATION
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9998724266659449	WITHOUT_CLASSIFICATION	1.2757333405506802E-4	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.7632890280541542	WITHOUT_CLASSIFICATION	0.2367109719458458	DESIGN
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9983473975132823	DESIGN	0.001652602486717806	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9979090108710066	DESIGN	0.0020909891289934875	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9966783880080872	WITHOUT_CLASSIFICATION	0.003321611991912837	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.8099042555616685	DESIGN	0.19009574443833155	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9794184759458276	WITHOUT_CLASSIFICATION	0.02058152405417238	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9986334688737497	DESIGN	0.0013665311262502453	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9986334688737497	DESIGN	0.0013665311262502453	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9854364260130098	WITHOUT_CLASSIFICATION	0.014563573986990005	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9448198295750173	DESIGN	0.055180170424982744	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.835240576506403	DESIGN	0.16475942349359696	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.8688842283661835	DESIGN	0.1311157716338165	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9456015047459109	WITHOUT_CLASSIFICATION	0.054398495254089206	DESIGN
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9999676741871246	WITHOUT_CLASSIFICATION	3.2325812875420966E-5	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.971930505348975	WITHOUT_CLASSIFICATION	0.02806949465102511	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9947347799775571	DESIGN	0.005265220022442877	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9887650694571947	WITHOUT_CLASSIFICATION	0.01123493054280541	DESIGN
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999998572320434	DESIGN	1.4276795669479386E-7	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9996389907717593	DESIGN	3.6100922824059285E-4	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9999352887685512	DESIGN	6.471123144878136E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9996389907717593	DESIGN	3.6100922824059285E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9996389907717593	DESIGN	3.6100922824059285E-4	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.7742131219631064	DESIGN	0.22578687803689362	WITHOUT_CLASSIFICATION
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9997579677827261	DESIGN	2.420322172738663E-4	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.99995444957115	DESIGN	4.555042884987576E-5	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.9983826727853922	DESIGN	0.001617327214607859	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9999945406846583	DESIGN	5.459315341652541E-6	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.7116005673076686	DESIGN	0.2883994326923313	WITHOUT_CLASSIFICATION
// TODO: This is probably BAD...	DESIGN	0.9998620301782043	DESIGN	1.3796982179572066E-4	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9882511537237533	DESIGN	0.011748846276246705	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9999952092663253	DESIGN	4.790733674624292E-6	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9996182995837818	DESIGN	3.817004162181827E-4	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9995392762748061	DESIGN	4.607237251939327E-4	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9882511537237533	DESIGN	0.011748846276246705	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9882511537237533	DESIGN	0.011748846276246705	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9882511537237533	DESIGN	0.011748846276246705	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9882511537237533	DESIGN	0.011748846276246705	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9986434827112457	DESIGN	0.0013565172887542857	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9996225781110265	DESIGN	3.774218889734085E-4	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9898555924003962	DESIGN	0.010144407599603816	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9980106040672642	DESIGN	0.0019893959327358956	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9980106040672642	DESIGN	0.0019893959327358956	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9841465319729358	WITHOUT_CLASSIFICATION	0.01585346802706419	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9989720451896867	WITHOUT_CLASSIFICATION	0.0010279548103132358	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9943193968991154	WITHOUT_CLASSIFICATION	0.0056806031008845	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9943193968991154	WITHOUT_CLASSIFICATION	0.0056806031008845	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9997532684310859	DESIGN	2.467315689140288E-4	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9997981062427052	DESIGN	2.0189375729476154E-4	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9896272153299781	DESIGN	0.010372784670021866	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999986251229684	DESIGN	1.374877031576139E-6	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999986251229684	DESIGN	1.374877031576139E-6	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9466561307399112	DESIGN	0.05334386926008886	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.5531405793880699	DESIGN	0.4468594206119302	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9999086262705629	DESIGN	9.137372943717508E-5	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9982617742734776	DESIGN	0.0017382257265223886	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9894352910933679	DESIGN	0.010564708906632072	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999488443508747	WITHOUT_CLASSIFICATION	5.1155649125285886E-5	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9999030865175104	DESIGN	9.69134824896516E-5	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9013775713089688	DESIGN	0.09862242869103122	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9988609151961754	DESIGN	0.0011390848038245539	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9807397623691478	DESIGN	0.01926023763085226	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9807397623691478	DESIGN	0.01926023763085226	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9995696195312549	DESIGN	4.303804687450588E-4	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9992389538730203	WITHOUT_CLASSIFICATION	7.6104612697975E-4	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9837645392880363	WITHOUT_CLASSIFICATION	0.01623546071196365	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999845788631367	DESIGN	1.542113686325985E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999416017048809	DESIGN	5.8398295119239626E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.8741824692334412	DESIGN	0.1258175307665588	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.9575187953944565	DESIGN	0.042481204605543554	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9801696230508968	DESIGN	0.019830376949103105	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9999918371415073	DESIGN	8.162858492691968E-6	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.7862304734333957	WITHOUT_CLASSIFICATION	0.21376952656660445	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9901227983821145	DESIGN	0.009877201617885571	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9887650694571947	WITHOUT_CLASSIFICATION	0.01123493054280541	DESIGN
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999963436628	DESIGN	3.6563372886056373E-9	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9896376716092515	DESIGN	0.010362328390748505	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9986334688737497	DESIGN	0.0013665311262502453	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9955125082846749	DESIGN	0.004487491715325119	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999430631690837	DESIGN	5.693683091626131E-5	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9998437498387498	DESIGN	1.562501612501899E-4	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999998347404236	DESIGN	1.652595763829928E-7	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9221751255286538	DESIGN	0.07782487447134621	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9659345190513747	DESIGN	0.0340654809486253	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9659345190513747	DESIGN	0.0340654809486253	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9650153708977234	WITHOUT_CLASSIFICATION	0.0349846291022766	DESIGN
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.703700503274837	WITHOUT_CLASSIFICATION	0.2962994967251629	DESIGN
// small hack to save a cast later on	DESIGN	0.9974925887780891	WITHOUT_CLASSIFICATION	0.002507411221910944	DESIGN
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.8427547210167675	DESIGN	0.15724527898323254	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.703700503274837	WITHOUT_CLASSIFICATION	0.2962994967251629	DESIGN
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9183057903534115	WITHOUT_CLASSIFICATION	0.08169420964658845	DESIGN
// HACK: force clinit to be created	DESIGN	0.7812152904947013	WITHOUT_CLASSIFICATION	0.21878470950529877	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999998764140864	DESIGN	1.2358591352541518E-7	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9546185219453904	DESIGN	0.04538147805460961	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.7191641263487808	WITHOUT_CLASSIFICATION	0.2808358736512192	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.5819365256575695	DESIGN	0.41806347434243046	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9986334688737497	DESIGN	0.0013665311262502453	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9803427191580615	DESIGN	0.019657280841938535	WITHOUT_CLASSIFICATION
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9994907240862367	DESIGN	5.092759137632005E-4	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9922444443661704	DESIGN	0.007755555633829511	WITHOUT_CLASSIFICATION
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.999497449630818	DESIGN	5.025503691820161E-4	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999992782034008	DESIGN	7.21796599117528E-7	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9998804488942206	DESIGN	1.1955110577944191E-4	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9575912037772356	DESIGN	0.04240879622276438	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9983908493319493	DESIGN	0.0016091506680506345	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9999996108653829	DESIGN	3.891346172054438E-7	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9545843682003187	WITHOUT_CLASSIFICATION	0.04541563179968137	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9433702790721518	DESIGN	0.05662972092784835	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9216932082216883	DESIGN	0.07830679177831161	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9440410396122753	DESIGN	0.055958960387724785	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9440410396122753	DESIGN	0.055958960387724785	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9440410396122753	DESIGN	0.055958960387724785	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999998550949158	DESIGN	1.4490508410524278E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.8770360349628752	WITHOUT_CLASSIFICATION	0.12296396503712477	DESIGN
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.5956014074816331	WITHOUT_CLASSIFICATION	0.4043985925183669	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.996888942392576	DESIGN	0.003111057607424093	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.8954036008946603	DESIGN	0.10459639910533966	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.8473146866228203	DESIGN	0.15268531337717967	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9770155816637844	DESIGN	0.022984418336215517	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.5935018000962885	DESIGN	0.4064981999037114	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9998501146078855	DESIGN	1.4988539211443805E-4	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9629925167542581	DESIGN	0.03700748324574185	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9990418283821167	DESIGN	9.581716178831512E-4	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9999992047735389	DESIGN	7.952264611746254E-7	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9983522955776103	DESIGN	0.001647704422389799	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9997372421914128	DESIGN	2.6275780858713694E-4	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9781306316208623	DESIGN	0.021869368379137666	WITHOUT_CLASSIFICATION
// end hack	DESIGN	0.9954709971245879	WITHOUT_CLASSIFICATION	0.004529002875412118	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.8493247198754654	DESIGN	0.1506752801245346	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999998347404236	DESIGN	1.652595763829928E-7	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9992601989146754	DESIGN	7.398010853245956E-4	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9999381636139276	DESIGN	6.183638607238297E-5	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9963544515541984	WITHOUT_CLASSIFICATION	0.0036455484458015556	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.835240576506403	DESIGN	0.16475942349359696	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.8688842283661835	DESIGN	0.1311157716338165	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9985226587878201	DESIGN	0.0014773412121798744	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9947647575170291	DESIGN	0.005235242482970883	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.971930505348975	WITHOUT_CLASSIFICATION	0.02806949465102511	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9982538420005469	WITHOUT_CLASSIFICATION	0.001746157999453135	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9996389907717593	DESIGN	3.6100922824059285E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9996389907717593	DESIGN	3.6100922824059285E-4	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.8924392793487178	WITHOUT_CLASSIFICATION	0.10756072065128222	DESIGN
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9999946433428532	DESIGN	5.356657146903021E-6	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9899696018100026	DESIGN	0.010030398189997423	WITHOUT_CLASSIFICATION
