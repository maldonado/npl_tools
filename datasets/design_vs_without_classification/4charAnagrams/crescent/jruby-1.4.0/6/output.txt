// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999998767712491	WITHOUT_CLASSIFICATION	1.2322875086648894E-7	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999982177208868	WITHOUT_CLASSIFICATION	1.782279113097893E-6	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999072508488779	WITHOUT_CLASSIFICATION	9.27491511221341E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999072508488779	WITHOUT_CLASSIFICATION	9.27491511221341E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992939748371343	WITHOUT_CLASSIFICATION	7.060251628656408E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992939748371343	WITHOUT_CLASSIFICATION	7.060251628656408E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999258280088145	WITHOUT_CLASSIFICATION	7.417199118552675E-5	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999996216419075	WITHOUT_CLASSIFICATION	3.783580925265468E-7	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999987641441771	WITHOUT_CLASSIFICATION	1.2358558229233628E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999987992821967	WITHOUT_CLASSIFICATION	1.2007178033777857E-6	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999389615538913	WITHOUT_CLASSIFICATION	6.103844610866202E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999389615538913	WITHOUT_CLASSIFICATION	6.103844610866202E-5	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999987015451136	WITHOUT_CLASSIFICATION	1.2984548863250372E-6	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999242501586099	WITHOUT_CLASSIFICATION	7.574984139011421E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999242501586099	WITHOUT_CLASSIFICATION	7.574984139011421E-5	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999086786881008	WITHOUT_CLASSIFICATION	9.132131189922752E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999086278563248	WITHOUT_CLASSIFICATION	9.13721436751648E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998060929428596	WITHOUT_CLASSIFICATION	1.939070571404809E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998060929428596	WITHOUT_CLASSIFICATION	1.939070571404809E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998060929428596	WITHOUT_CLASSIFICATION	1.939070571404809E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998060929428596	WITHOUT_CLASSIFICATION	1.939070571404809E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998060929428596	WITHOUT_CLASSIFICATION	1.939070571404809E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998060929428596	WITHOUT_CLASSIFICATION	1.939070571404809E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998060929428596	WITHOUT_CLASSIFICATION	1.939070571404809E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993657489153208	WITHOUT_CLASSIFICATION	6.342510846790997E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993657489153208	WITHOUT_CLASSIFICATION	6.342510846790997E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993657489153208	WITHOUT_CLASSIFICATION	6.342510846790997E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993657489153208	WITHOUT_CLASSIFICATION	6.342510846790997E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993657489153208	WITHOUT_CLASSIFICATION	6.342510846790997E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993657489153208	WITHOUT_CLASSIFICATION	6.342510846790997E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993657489153208	WITHOUT_CLASSIFICATION	6.342510846790997E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998142269380255	WITHOUT_CLASSIFICATION	1.857730619745787E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998142269380255	WITHOUT_CLASSIFICATION	1.857730619745787E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998142269380255	WITHOUT_CLASSIFICATION	1.857730619745787E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998142269380255	WITHOUT_CLASSIFICATION	1.857730619745787E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998142269380255	WITHOUT_CLASSIFICATION	1.857730619745787E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998142269380255	WITHOUT_CLASSIFICATION	1.857730619745787E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999426799027608	WITHOUT_CLASSIFICATION	5.732009723930703E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999426799027608	WITHOUT_CLASSIFICATION	5.732009723930703E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999426799027608	WITHOUT_CLASSIFICATION	5.732009723930703E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999426799027608	WITHOUT_CLASSIFICATION	5.732009723930703E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999426799027608	WITHOUT_CLASSIFICATION	5.732009723930703E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999426799027608	WITHOUT_CLASSIFICATION	5.732009723930703E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999288646346255	WITHOUT_CLASSIFICATION	7.113536537455616E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999288646346255	WITHOUT_CLASSIFICATION	7.113536537455616E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999288646346255	WITHOUT_CLASSIFICATION	7.113536537455616E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999288646346255	WITHOUT_CLASSIFICATION	7.113536537455616E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999288646346255	WITHOUT_CLASSIFICATION	7.113536537455616E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999288646346255	WITHOUT_CLASSIFICATION	7.113536537455616E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999288646346255	WITHOUT_CLASSIFICATION	7.113536537455616E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999014046758723	WITHOUT_CLASSIFICATION	9.859532412763734E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999014046758723	WITHOUT_CLASSIFICATION	9.859532412763734E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999014046758723	WITHOUT_CLASSIFICATION	9.859532412763734E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999014046758723	WITHOUT_CLASSIFICATION	9.859532412763734E-5	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9986957775659093	WITHOUT_CLASSIFICATION	0.0013042224340906277	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9986957775659093	WITHOUT_CLASSIFICATION	0.0013042224340906277	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999189986929086	WITHOUT_CLASSIFICATION	8.100130709143649E-5	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999956628147401	WITHOUT_CLASSIFICATION	4.337185259954986E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999458082230857	WITHOUT_CLASSIFICATION	5.4191776914279116E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999999429191665	WITHOUT_CLASSIFICATION	5.7080833396459955E-8	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999954586621395	WITHOUT_CLASSIFICATION	4.541337860547891E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999961989987605	WITHOUT_CLASSIFICATION	3.801001239530269E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999961989987605	WITHOUT_CLASSIFICATION	3.801001239530269E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999961989987605	WITHOUT_CLASSIFICATION	3.801001239530269E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999961989987605	WITHOUT_CLASSIFICATION	3.801001239530269E-6	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999345921510527	WITHOUT_CLASSIFICATION	6.540784894718553E-5	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999991612428804	WITHOUT_CLASSIFICATION	8.387571196522596E-7	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999966319300848	WITHOUT_CLASSIFICATION	3.3680699151187115E-6	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9997775373035063	WITHOUT_CLASSIFICATION	2.2246269649371994E-4	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999985352130312	WITHOUT_CLASSIFICATION	1.464786968902536E-6	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999979541694661	WITHOUT_CLASSIFICATION	2.0458305338115737E-6	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999943834629812	WITHOUT_CLASSIFICATION	5.6165370188660545E-6	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.99999999900874	WITHOUT_CLASSIFICATION	9.912599741452852E-10	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9987892269880132	WITHOUT_CLASSIFICATION	0.001210773011986893	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9998427665217395	WITHOUT_CLASSIFICATION	1.572334782605694E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999962015358419	WITHOUT_CLASSIFICATION	3.798464158242721E-6	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999999994626585	WITHOUT_CLASSIFICATION	5.373415330243855E-10	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999979034299994	WITHOUT_CLASSIFICATION	2.0965700005857855E-6	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9987403388278504	WITHOUT_CLASSIFICATION	0.0012596611721495737	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990875411597	WITHOUT_CLASSIFICATION	9.124588403497926E-7	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999933496698	WITHOUT_CLASSIFICATION	6.650330224855458E-9	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9872678962080285	DESIGN	0.012732103791971533	WITHOUT_CLASSIFICATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999961989987605	WITHOUT_CLASSIFICATION	3.801001239530269E-6	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989810783672	WITHOUT_CLASSIFICATION	1.0189216327797199E-6	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.999999964748225	WITHOUT_CLASSIFICATION	3.525177494512083E-8	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996467561502	WITHOUT_CLASSIFICATION	3.5324384986492307E-7	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9963956008640783	WITHOUT_CLASSIFICATION	0.0036043991359216015	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.999211470614805	WITHOUT_CLASSIFICATION	7.885293851950651E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999970106102255	WITHOUT_CLASSIFICATION	2.9893897745722284E-6	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999985442101557	WITHOUT_CLASSIFICATION	1.4557898443930414E-6	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999980845627401	WITHOUT_CLASSIFICATION	1.915437259890253E-6	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.550857602730725	WITHOUT_CLASSIFICATION	0.44914239726927513	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999997965960931	WITHOUT_CLASSIFICATION	2.0340390680873744E-7	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9133578673373021	WITHOUT_CLASSIFICATION	0.08664213266269792	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999959753501011	WITHOUT_CLASSIFICATION	4.0246498989116556E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9995094007280878	WITHOUT_CLASSIFICATION	4.90599271912175E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999972105945907	WITHOUT_CLASSIFICATION	2.7894054093686706E-6	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999563179040328	WITHOUT_CLASSIFICATION	4.3682095967312947E-5	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999977970717528	WITHOUT_CLASSIFICATION	2.202928247075852E-6	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999493918792763	WITHOUT_CLASSIFICATION	5.060812072377411E-5	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.999999870221464	WITHOUT_CLASSIFICATION	1.2977853601319577E-7	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999999484167383	WITHOUT_CLASSIFICATION	5.158326166152121E-8	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.999999748092462	WITHOUT_CLASSIFICATION	2.5190753799924693E-7	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9985308474820936	WITHOUT_CLASSIFICATION	0.0014691525179063919	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999811471089345	WITHOUT_CLASSIFICATION	1.8852891065502785E-5	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999921842994818	WITHOUT_CLASSIFICATION	7.81570051821421E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999866497958942	WITHOUT_CLASSIFICATION	1.3350204105775796E-5	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9998777607847984	WITHOUT_CLASSIFICATION	1.2223921520166818E-4	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9994104486029342	WITHOUT_CLASSIFICATION	5.895513970658624E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.999997847174748	WITHOUT_CLASSIFICATION	2.1528252519637907E-6	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999903249553278	WITHOUT_CLASSIFICATION	9.67504467229331E-6	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999998234630514	WITHOUT_CLASSIFICATION	1.7653694849588793E-7	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999889331424296	WITHOUT_CLASSIFICATION	1.1066857570392027E-5	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999997449881646	WITHOUT_CLASSIFICATION	2.5501183541157415E-7	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.999777982150648	WITHOUT_CLASSIFICATION	2.220178493520083E-4	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9998078486754528	WITHOUT_CLASSIFICATION	1.9215132454727937E-4	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.999999527330342	WITHOUT_CLASSIFICATION	4.7266965793069745E-7	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999901937684348	WITHOUT_CLASSIFICATION	9.80623156511269E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999909661282721	WITHOUT_CLASSIFICATION	9.033871727979296E-6	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999971045116459	WITHOUT_CLASSIFICATION	2.895488354178402E-6	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.999190049782308	WITHOUT_CLASSIFICATION	8.099502176920344E-4	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999839075006534	WITHOUT_CLASSIFICATION	1.609249934662184E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999141502034539	WITHOUT_CLASSIFICATION	8.584979654616308E-5	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.999956671014092	WITHOUT_CLASSIFICATION	4.332898590803273E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998454390877	WITHOUT_CLASSIFICATION	1.545609122809436E-7	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998997207769131	WITHOUT_CLASSIFICATION	1.0027922308682838E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997450882004395	WITHOUT_CLASSIFICATION	2.549117995605259E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9997450882004395	WITHOUT_CLASSIFICATION	2.549117995605259E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.99994297567639	WITHOUT_CLASSIFICATION	5.702432361004889E-5	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999997763436091	WITHOUT_CLASSIFICATION	2.2365639090934197E-7	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9997293205770592	WITHOUT_CLASSIFICATION	2.706794229408425E-4	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999995822595042	WITHOUT_CLASSIFICATION	4.1774049574435427E-7	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9674334598910124	DESIGN	0.032566540108987616	WITHOUT_CLASSIFICATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9983528261953336	WITHOUT_CLASSIFICATION	0.001647173804666478	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9976784306035756	WITHOUT_CLASSIFICATION	0.0023215693964243386	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999509381042776	WITHOUT_CLASSIFICATION	4.906189572244625E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998454390877	WITHOUT_CLASSIFICATION	1.545609122809436E-7	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.99999913610772	WITHOUT_CLASSIFICATION	8.638922800866857E-7	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999632477740872	WITHOUT_CLASSIFICATION	3.675222591279447E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999955201774341	WITHOUT_CLASSIFICATION	4.479822565840958E-6	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999990897258604	WITHOUT_CLASSIFICATION	9.102741396449426E-7	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999900598614	WITHOUT_CLASSIFICATION	9.940138535112513E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999954082885	WITHOUT_CLASSIFICATION	4.591711379274295E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999954082885	WITHOUT_CLASSIFICATION	4.591711379274295E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999954082885	WITHOUT_CLASSIFICATION	4.591711379274295E-9	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.999882968810063	WITHOUT_CLASSIFICATION	1.1703118993693446E-4	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999946150677	WITHOUT_CLASSIFICATION	5.3849323584385E-9	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999828891174	WITHOUT_CLASSIFICATION	1.7110882588325632E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9987120678063357	WITHOUT_CLASSIFICATION	0.001287932193664221	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9023748804968919	DESIGN	0.09762511950310811	WITHOUT_CLASSIFICATION
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.999999962670427	WITHOUT_CLASSIFICATION	3.732957304433019E-8	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9846692711745361	WITHOUT_CLASSIFICATION	0.015330728825463937	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999929717961	WITHOUT_CLASSIFICATION	7.028203896233784E-9	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999918286693382	WITHOUT_CLASSIFICATION	8.1713306618E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999918286693382	WITHOUT_CLASSIFICATION	8.1713306618E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.999983563272365	WITHOUT_CLASSIFICATION	1.6436727634992908E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999925262806	WITHOUT_CLASSIFICATION	7.47371948389585E-9	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999993622597362	WITHOUT_CLASSIFICATION	6.377402638646869E-7	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999993622597362	WITHOUT_CLASSIFICATION	6.377402638646869E-7	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999917088718	WITHOUT_CLASSIFICATION	8.291128238936729E-9	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999989418448828	WITHOUT_CLASSIFICATION	1.0581551171432369E-6	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.999513801321154	WITHOUT_CLASSIFICATION	4.861986788460431E-4	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999939587828	WITHOUT_CLASSIFICATION	6.041217204963058E-9	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999996894210978	WITHOUT_CLASSIFICATION	3.105789021632514E-7	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999997964640818	WITHOUT_CLASSIFICATION	2.0353591817563548E-7	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999934564878304	WITHOUT_CLASSIFICATION	6.543512169523082E-6	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999776740195384	WITHOUT_CLASSIFICATION	2.2325980461609668E-5	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9991285528102747	WITHOUT_CLASSIFICATION	8.714471897254124E-4	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999999350957144	WITHOUT_CLASSIFICATION	6.490428562049975E-8	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998454390877	WITHOUT_CLASSIFICATION	1.545609122809436E-7	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999990211677952	WITHOUT_CLASSIFICATION	9.78832204828641E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999972920316194	WITHOUT_CLASSIFICATION	2.707968380659486E-6	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999976425198385	WITHOUT_CLASSIFICATION	2.3574801614956136E-6	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9969946888083434	WITHOUT_CLASSIFICATION	0.0030053111916567006	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9997924106152642	WITHOUT_CLASSIFICATION	2.0758938473571125E-4	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.998512392656227	WITHOUT_CLASSIFICATION	0.0014876073437729942	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9988197282403684	WITHOUT_CLASSIFICATION	0.0011802717596316658	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996581148596578	WITHOUT_CLASSIFICATION	3.4188514034216464E-4	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999899782491783	WITHOUT_CLASSIFICATION	1.002175082168951E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.906182067502027	WITHOUT_CLASSIFICATION	0.09381793249797309	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9998128637659747	WITHOUT_CLASSIFICATION	1.8713623402539663E-4	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999692494266378	WITHOUT_CLASSIFICATION	3.0750573362276286E-5	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999988802918104	WITHOUT_CLASSIFICATION	1.1197081896417291E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999963810507772	WITHOUT_CLASSIFICATION	3.6189492229404385E-6	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.999961755052522	WITHOUT_CLASSIFICATION	3.8244947477904045E-5	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.999848566449718	WITHOUT_CLASSIFICATION	1.5143355028203115E-4	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999966639569089	WITHOUT_CLASSIFICATION	3.3360430911212227E-6	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999837339211216	WITHOUT_CLASSIFICATION	1.626607887836569E-5	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999986195436084	WITHOUT_CLASSIFICATION	1.380456391749703E-6	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999993915985067	WITHOUT_CLASSIFICATION	6.084014933398879E-7	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999999343620056	WITHOUT_CLASSIFICATION	6.563799443352707E-8	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999970840039181	WITHOUT_CLASSIFICATION	2.9159960819993674E-6	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999998581056386	WITHOUT_CLASSIFICATION	1.418943613833328E-7	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999208131630468	WITHOUT_CLASSIFICATION	7.918683695328794E-5	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999986480367419	WITHOUT_CLASSIFICATION	1.3519632581180743E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999986369250866	WITHOUT_CLASSIFICATION	1.3630749134566493E-6	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.996763643860815	WITHOUT_CLASSIFICATION	0.0032363561391850564	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999968000845609	WITHOUT_CLASSIFICATION	3.1999154390363337E-6	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999995017723081	WITHOUT_CLASSIFICATION	4.982276919622333E-7	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999993965078331	WITHOUT_CLASSIFICATION	6.034921668971582E-7	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9981524317279894	WITHOUT_CLASSIFICATION	0.0018475682720106386	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9998031770789999	WITHOUT_CLASSIFICATION	1.9682292100004482E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.998531391014964	WITHOUT_CLASSIFICATION	0.001468608985036037	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999328984480895	WITHOUT_CLASSIFICATION	6.710155191037929E-5	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999825134335033	WITHOUT_CLASSIFICATION	1.7486566496702726E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9997669708102935	WITHOUT_CLASSIFICATION	2.3302918970649053E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999392977735108	WITHOUT_CLASSIFICATION	6.07022264892559E-5	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999999256346662	WITHOUT_CLASSIFICATION	7.43653337972764E-7	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999982184085581	WITHOUT_CLASSIFICATION	1.781591441975908E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9988533184318076	WITHOUT_CLASSIFICATION	0.0011466815681923704	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999835378561	WITHOUT_CLASSIFICATION	1.646214394674771E-8	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999998985308067	WITHOUT_CLASSIFICATION	1.0146919336142348E-7	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999940142178678	WITHOUT_CLASSIFICATION	5.985782132104033E-6	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999986024246234	WITHOUT_CLASSIFICATION	1.3975753766447202E-6	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999959973948196	WITHOUT_CLASSIFICATION	4.002605180427486E-6	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999985255888517	WITHOUT_CLASSIFICATION	1.4744111482995812E-6	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999988653986647	WITHOUT_CLASSIFICATION	1.1346013353504397E-6	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999999088350741	WITHOUT_CLASSIFICATION	9.116492598715521E-8	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999898170217371	WITHOUT_CLASSIFICATION	1.018297826289304E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999999490533819	WITHOUT_CLASSIFICATION	5.0946618106297483E-8	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999991807262446	WITHOUT_CLASSIFICATION	8.192737552949262E-7	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9993337624289262	WITHOUT_CLASSIFICATION	6.662375710736531E-4	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999993864117714	WITHOUT_CLASSIFICATION	6.135882285237085E-7	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999062876187	WITHOUT_CLASSIFICATION	9.371238129826577E-8	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9963517443838245	WITHOUT_CLASSIFICATION	0.003648255616175535	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.6484642856066746	DESIGN	0.3515357143933255	WITHOUT_CLASSIFICATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9995956166496109	WITHOUT_CLASSIFICATION	4.0438335038913776E-4	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999998791202296	WITHOUT_CLASSIFICATION	1.2087977041621634E-7	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999999373646485	WITHOUT_CLASSIFICATION	6.263535141451314E-8	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999994840245586	WITHOUT_CLASSIFICATION	5.159754413372369E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999828602137311	WITHOUT_CLASSIFICATION	1.713978626899613E-5	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999828602137311	WITHOUT_CLASSIFICATION	1.713978626899613E-5	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999437574310558	WITHOUT_CLASSIFICATION	5.624256894411086E-5	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999437574310558	WITHOUT_CLASSIFICATION	5.624256894411086E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999745468722077	WITHOUT_CLASSIFICATION	2.5453127792320507E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999745468722077	WITHOUT_CLASSIFICATION	2.5453127792320507E-5	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999772447955286	WITHOUT_CLASSIFICATION	2.2755204471403782E-5	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999772447955286	WITHOUT_CLASSIFICATION	2.2755204471403782E-5	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.999999896315741	WITHOUT_CLASSIFICATION	1.036842589382267E-7	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999981758243149	WITHOUT_CLASSIFICATION	1.8241756851173982E-6	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999831620385882	WITHOUT_CLASSIFICATION	1.683796141182896E-5	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999966014917837	WITHOUT_CLASSIFICATION	3.3985082163461556E-6	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999816933146993	WITHOUT_CLASSIFICATION	1.830668530060003E-5	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999953047253023	WITHOUT_CLASSIFICATION	4.695274697798428E-6	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999754654664496	WITHOUT_CLASSIFICATION	2.4534533550512703E-5	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.999999712200696	WITHOUT_CLASSIFICATION	2.877993041001436E-7	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.999988752678752	WITHOUT_CLASSIFICATION	1.124732124795205E-5	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999994172995152	WITHOUT_CLASSIFICATION	5.827004847355558E-7	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999969302545847	WITHOUT_CLASSIFICATION	3.0697454152825805E-6	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999663499673405	WITHOUT_CLASSIFICATION	3.3650032659559544E-5	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999447356971426	WITHOUT_CLASSIFICATION	5.526430285730289E-5	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999986687375972	WITHOUT_CLASSIFICATION	1.3312624027735912E-6	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.999997801265697	WITHOUT_CLASSIFICATION	2.1987343030047754E-6	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999835447443479	WITHOUT_CLASSIFICATION	1.6455255652080036E-5	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999774609684	WITHOUT_CLASSIFICATION	2.2539031724387636E-8	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999865761406	WITHOUT_CLASSIFICATION	1.342385932140689E-8	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9997840031468443	WITHOUT_CLASSIFICATION	2.1599685315575043E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.5488996619816969	DESIGN	0.451100338018303	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999982566389781	WITHOUT_CLASSIFICATION	1.7433610217864634E-6	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999996120064036	WITHOUT_CLASSIFICATION	3.8799359630483757E-7	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999788652621827	WITHOUT_CLASSIFICATION	2.1134737817364467E-5	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999815204645582	WITHOUT_CLASSIFICATION	1.8479535441834294E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999923887473983	WITHOUT_CLASSIFICATION	7.611252601749934E-6	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999985284568412	WITHOUT_CLASSIFICATION	1.4715431588082326E-6	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999842929427051	WITHOUT_CLASSIFICATION	1.5707057294943103E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999929614228201	WITHOUT_CLASSIFICATION	7.038577179799156E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999929614228201	WITHOUT_CLASSIFICATION	7.038577179799156E-6	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999706047125344	WITHOUT_CLASSIFICATION	2.93952874655937E-5	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999782828830626	WITHOUT_CLASSIFICATION	2.1717116937385694E-5	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999182611776398	WITHOUT_CLASSIFICATION	8.173882236015077E-5	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999380964726071	WITHOUT_CLASSIFICATION	6.190352739285719E-5	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999945015797601	WITHOUT_CLASSIFICATION	5.49842023979606E-6	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9998579874957841	WITHOUT_CLASSIFICATION	1.4201250421586942E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9994091361783125	WITHOUT_CLASSIFICATION	5.908638216875523E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9994091361783125	WITHOUT_CLASSIFICATION	5.908638216875523E-4	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999399351158291	WITHOUT_CLASSIFICATION	6.006488417078173E-5	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9928823574704091	DESIGN	0.007117642529590922	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9996084852110859	WITHOUT_CLASSIFICATION	3.915147889140363E-4	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9996084852110859	WITHOUT_CLASSIFICATION	3.915147889140363E-4	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999934312800852	WITHOUT_CLASSIFICATION	6.568719914789206E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999993717249183	WITHOUT_CLASSIFICATION	6.282750816620448E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999993717249183	WITHOUT_CLASSIFICATION	6.282750816620448E-7	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999300715514652	WITHOUT_CLASSIFICATION	6.992844853478027E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999300715514652	WITHOUT_CLASSIFICATION	6.992844853478027E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999949645589232	WITHOUT_CLASSIFICATION	5.035441076816473E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999949645589232	WITHOUT_CLASSIFICATION	5.035441076816473E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999381608570531	WITHOUT_CLASSIFICATION	6.183914294693971E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.999540211943528	WITHOUT_CLASSIFICATION	4.597880564719167E-4	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999981306144767	WITHOUT_CLASSIFICATION	1.8693855232472404E-6	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999966962457196	WITHOUT_CLASSIFICATION	3.3037542803071797E-6	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999978575979754	WITHOUT_CLASSIFICATION	2.1424020245813193E-6	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999997728718208	WITHOUT_CLASSIFICATION	2.271281792016689E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999965190022234	WITHOUT_CLASSIFICATION	3.48099777660182E-5	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999826574506806	WITHOUT_CLASSIFICATION	1.734254931945097E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999965190022234	WITHOUT_CLASSIFICATION	3.48099777660182E-5	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.99968024472763	WITHOUT_CLASSIFICATION	3.1975527237013607E-4	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999949837860654	WITHOUT_CLASSIFICATION	5.016213934620029E-6	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999998046431905	WITHOUT_CLASSIFICATION	1.95356809493413E-7	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999999924238194	WITHOUT_CLASSIFICATION	7.576180597448144E-9	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.999997377452948	WITHOUT_CLASSIFICATION	2.6225470519229267E-6	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998790432871627	WITHOUT_CLASSIFICATION	1.2095671283725237E-4	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999986486945169	WITHOUT_CLASSIFICATION	1.3513054830579933E-6	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999959633142298	WITHOUT_CLASSIFICATION	4.0366857702892665E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999998761472563	WITHOUT_CLASSIFICATION	1.238527437416639E-7	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9998700282563505	WITHOUT_CLASSIFICATION	1.2997174364939957E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999816288361989	WITHOUT_CLASSIFICATION	1.837116380110125E-5	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999228149121	WITHOUT_CLASSIFICATION	7.71850878617381E-8	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999891118625999	WITHOUT_CLASSIFICATION	1.0888137400043376E-5	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999244013416088	WITHOUT_CLASSIFICATION	7.559865839119774E-5	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999975260618288	WITHOUT_CLASSIFICATION	2.4739381712495975E-6	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.999999915048349	WITHOUT_CLASSIFICATION	8.495165115826377E-8	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999986078027184	WITHOUT_CLASSIFICATION	1.3921972815673069E-6	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999998980113269	WITHOUT_CLASSIFICATION	1.0198867301020876E-7	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999993512210553	WITHOUT_CLASSIFICATION	6.487789446438464E-7	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999945670548188	WITHOUT_CLASSIFICATION	5.432945181137723E-6	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999403575676811	WITHOUT_CLASSIFICATION	5.964243231895861E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999161314351	WITHOUT_CLASSIFICATION	8.386856489388001E-8	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999444743849	WITHOUT_CLASSIFICATION	5.5525615068097184E-8	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999877437853114	WITHOUT_CLASSIFICATION	1.2256214688528905E-5	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999999629102273	WITHOUT_CLASSIFICATION	3.7089772556791003E-8	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999327368633695	WITHOUT_CLASSIFICATION	6.72631366305084E-5	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999967084281135	WITHOUT_CLASSIFICATION	3.291571886512571E-6	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999376933429	WITHOUT_CLASSIFICATION	6.230665708026822E-8	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999997540901566	WITHOUT_CLASSIFICATION	2.459098433834202E-7	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999997313625238	WITHOUT_CLASSIFICATION	2.686374762023261E-7	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999953546524003	WITHOUT_CLASSIFICATION	4.645347599640607E-6	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999995381955	WITHOUT_CLASSIFICATION	4.618045394741645E-10	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999849916086906	WITHOUT_CLASSIFICATION	1.5008391309389718E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999994291001654	WITHOUT_CLASSIFICATION	5.708998345820611E-7	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999998959805478	WITHOUT_CLASSIFICATION	1.0401945208186569E-7	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999995096074588	WITHOUT_CLASSIFICATION	4.903925411900372E-7	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999998658585297	WITHOUT_CLASSIFICATION	1.3414147025733932E-7	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999994589900508	WITHOUT_CLASSIFICATION	5.410099491257096E-7	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999902956899966	WITHOUT_CLASSIFICATION	9.704310003333173E-6	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999966662496996	WITHOUT_CLASSIFICATION	3.3337503004157923E-6	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999985047937154	WITHOUT_CLASSIFICATION	1.4952062846189602E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999926875428	WITHOUT_CLASSIFICATION	7.312457138844983E-9	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999399226197	WITHOUT_CLASSIFICATION	6.007738027706414E-8	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999998858496397	WITHOUT_CLASSIFICATION	1.1415036025911595E-7	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999991605791	WITHOUT_CLASSIFICATION	8.394208425780584E-10	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999626393286	WITHOUT_CLASSIFICATION	3.7360671468736814E-8	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999933233896	WITHOUT_CLASSIFICATION	6.6766103648976766E-9	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.999999131727249	WITHOUT_CLASSIFICATION	8.682727510528106E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999698042587746	WITHOUT_CLASSIFICATION	3.0195741225421395E-5	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9973261100198694	WITHOUT_CLASSIFICATION	0.0026738899801306464	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9997372376659498	WITHOUT_CLASSIFICATION	2.6276233405022324E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999997318826072	WITHOUT_CLASSIFICATION	2.681173928035172E-7	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999897825984961	WITHOUT_CLASSIFICATION	1.0217401503886315E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9996920819945617	WITHOUT_CLASSIFICATION	3.0791800543830385E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999962379206665	WITHOUT_CLASSIFICATION	3.7620793336450302E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999962379206665	WITHOUT_CLASSIFICATION	3.7620793336450302E-6	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999996146289618	WITHOUT_CLASSIFICATION	3.8537103823126935E-7	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999989609689298	WITHOUT_CLASSIFICATION	1.039031070131228E-6	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999014904740593	WITHOUT_CLASSIFICATION	9.850952594069926E-5	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999992668500148	WITHOUT_CLASSIFICATION	7.331499852885757E-7	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999981423817899	WITHOUT_CLASSIFICATION	1.8576182100916943E-6	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999998640557213	WITHOUT_CLASSIFICATION	1.359442787781324E-7	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.999998950072633	WITHOUT_CLASSIFICATION	1.0499273671201628E-6	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999988685032345	WITHOUT_CLASSIFICATION	1.1314967655743719E-6	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9997327754836404	WITHOUT_CLASSIFICATION	2.6722451635962215E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999999346099536	WITHOUT_CLASSIFICATION	6.53900463406542E-8	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999927040741418	WITHOUT_CLASSIFICATION	7.295925858324516E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999927040741418	WITHOUT_CLASSIFICATION	7.295925858324516E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9992212746203541	DESIGN	7.78725379645795E-4	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.999867575218968	WITHOUT_CLASSIFICATION	1.324247810320605E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999999857732	WITHOUT_CLASSIFICATION	1.4226761826125258E-11	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999620701835	WITHOUT_CLASSIFICATION	3.79298166276811E-8	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999984894985	WITHOUT_CLASSIFICATION	1.5105014843931968E-9	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999998754067457	WITHOUT_CLASSIFICATION	1.245932542515708E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999756040233	WITHOUT_CLASSIFICATION	2.439597662907958E-8	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999998809574322	WITHOUT_CLASSIFICATION	1.1904256785645598E-7	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999998210458674	WITHOUT_CLASSIFICATION	1.789541326604052E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999769186533091	WITHOUT_CLASSIFICATION	2.30813466908911E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999994453258338	WITHOUT_CLASSIFICATION	5.546741661542019E-7	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999485965669	WITHOUT_CLASSIFICATION	5.140343319337281E-8	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999632995971822	WITHOUT_CLASSIFICATION	3.6700402817884643E-5	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999632995971822	WITHOUT_CLASSIFICATION	3.6700402817884643E-5	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999985645022734	WITHOUT_CLASSIFICATION	1.4354977266180588E-6	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.5022386083422016	DESIGN	0.49776139165779854	WITHOUT_CLASSIFICATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9998598120067929	WITHOUT_CLASSIFICATION	1.4018799320716439E-4	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999977903833884	WITHOUT_CLASSIFICATION	2.209616611508223E-6	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999791619033072	WITHOUT_CLASSIFICATION	2.083809669287283E-5	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9998725893940535	WITHOUT_CLASSIFICATION	1.274106059464263E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999999790869315	WITHOUT_CLASSIFICATION	2.0913068485186608E-7	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999996948287805	WITHOUT_CLASSIFICATION	3.0517121946079604E-7	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999998254450799	WITHOUT_CLASSIFICATION	1.745549200353423E-7	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9967181706923589	WITHOUT_CLASSIFICATION	0.0032818293076410823	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999999857732	WITHOUT_CLASSIFICATION	1.4226761826125258E-11	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999998625805978	WITHOUT_CLASSIFICATION	1.3741940214587604E-7	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9995485087189543	WITHOUT_CLASSIFICATION	4.514912810456453E-4	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999912573856193	WITHOUT_CLASSIFICATION	8.742614380674392E-6	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9960592876479152	WITHOUT_CLASSIFICATION	0.0039407123520848256	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9987521398226544	WITHOUT_CLASSIFICATION	0.0012478601773455375	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9192376033286569	WITHOUT_CLASSIFICATION	0.08076239667134309	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999958548527347	WITHOUT_CLASSIFICATION	4.145147265348197E-6	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999389887112669	WITHOUT_CLASSIFICATION	6.101128873323688E-5	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999548366874	WITHOUT_CLASSIFICATION	4.5163312550395675E-8	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999995981274257	WITHOUT_CLASSIFICATION	4.018725742559267E-7	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999980894872162	WITHOUT_CLASSIFICATION	1.9105127837498936E-6	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9489644933208078	WITHOUT_CLASSIFICATION	0.05103550667919226	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999999812920985	WITHOUT_CLASSIFICATION	1.870790149599782E-8	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.999993174312114	WITHOUT_CLASSIFICATION	6.825687886053155E-6	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9986756382014262	WITHOUT_CLASSIFICATION	0.0013243617985737694	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999993493198479	WITHOUT_CLASSIFICATION	6.506801520995757E-7	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.995482057785691	WITHOUT_CLASSIFICATION	0.00451794221430903	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999689711257949	WITHOUT_CLASSIFICATION	3.102887420521094E-5	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9985536600118703	WITHOUT_CLASSIFICATION	0.0014463399881297727	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9997043808933603	WITHOUT_CLASSIFICATION	2.9561910663963403E-4	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.625177021938835	DESIGN	0.3748229780611651	WITHOUT_CLASSIFICATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999939669292444	WITHOUT_CLASSIFICATION	6.0330707556960965E-6	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999462210996359	WITHOUT_CLASSIFICATION	5.377890036409841E-4	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999998987311626	WITHOUT_CLASSIFICATION	1.0126883737468203E-7	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999601639545336	WITHOUT_CLASSIFICATION	3.983604546636418E-5	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999974049762593	WITHOUT_CLASSIFICATION	2.595023740634842E-6	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.999671947866134	WITHOUT_CLASSIFICATION	3.280521338660229E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999969821202456	WITHOUT_CLASSIFICATION	3.0178797544774026E-6	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999371165254624	WITHOUT_CLASSIFICATION	6.288347453763445E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999671472646	WITHOUT_CLASSIFICATION	3.285273548965899E-8	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999997442643921	WITHOUT_CLASSIFICATION	2.5573560790585026E-7	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999997442643921	WITHOUT_CLASSIFICATION	2.5573560790585026E-7	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999934248380153	WITHOUT_CLASSIFICATION	6.575161984634975E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999989068390429	WITHOUT_CLASSIFICATION	1.0931609571176488E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999921947074294	WITHOUT_CLASSIFICATION	7.80529257052387E-6	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999629732659528	WITHOUT_CLASSIFICATION	3.7026734047177054E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9995404550080697	WITHOUT_CLASSIFICATION	4.595449919303374E-4	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998213072071	WITHOUT_CLASSIFICATION	1.786927929031281E-7	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999998454390877	WITHOUT_CLASSIFICATION	1.545609122809436E-7	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999928530475576	WITHOUT_CLASSIFICATION	7.1469524423811085E-6	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999887448940716	WITHOUT_CLASSIFICATION	1.1255105928324433E-5	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999702285273482	WITHOUT_CLASSIFICATION	2.977147265169226E-5	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999900774599	WITHOUT_CLASSIFICATION	9.922540118586222E-9	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9999852749662845	WITHOUT_CLASSIFICATION	1.4725033715353545E-5	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999999625852938	WITHOUT_CLASSIFICATION	3.7414706322533034E-8	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9988533184318076	WITHOUT_CLASSIFICATION	0.0011466815681923704	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.999999782195998	WITHOUT_CLASSIFICATION	2.1780400189639852E-7	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9997191360952488	WITHOUT_CLASSIFICATION	2.8086390475126486E-4	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999947099906	WITHOUT_CLASSIFICATION	5.290009438057483E-9	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999996688977703	WITHOUT_CLASSIFICATION	3.3110222972511476E-7	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999685222522009	WITHOUT_CLASSIFICATION	3.147774779906044E-5	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9830076945685541	WITHOUT_CLASSIFICATION	0.016992305431445885	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9997077626197741	WITHOUT_CLASSIFICATION	2.922373802258838E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9997077626197741	WITHOUT_CLASSIFICATION	2.922373802258838E-4	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.999961462827768	WITHOUT_CLASSIFICATION	3.853717223205529E-5	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999994355258758	WITHOUT_CLASSIFICATION	5.64474124213335E-7	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999843873715938	WITHOUT_CLASSIFICATION	1.561262840618098E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999976893944124	WITHOUT_CLASSIFICATION	2.3106055876386946E-6	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999992662164188	WITHOUT_CLASSIFICATION	7.337835812101167E-7	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999998193551319	WITHOUT_CLASSIFICATION	1.8064486798382097E-7	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999988802291095	WITHOUT_CLASSIFICATION	1.1197708903620508E-6	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999943355706	WITHOUT_CLASSIFICATION	5.6644293457972416E-9	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.999991493128814	WITHOUT_CLASSIFICATION	8.506871186058622E-6	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999999712324893	WITHOUT_CLASSIFICATION	2.8767510673465132E-8	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999968975035847	WITHOUT_CLASSIFICATION	3.1024964153863383E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999999072141609	WITHOUT_CLASSIFICATION	9.278583912131206E-8	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999999237310797	WITHOUT_CLASSIFICATION	7.626892031503468E-8	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999992263174178	WITHOUT_CLASSIFICATION	7.736825821878211E-7	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999999861171376	WITHOUT_CLASSIFICATION	1.3882862277780083E-8	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.999742047141037	WITHOUT_CLASSIFICATION	2.5795285896301154E-4	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999833532979413	WITHOUT_CLASSIFICATION	1.6646702058685417E-5	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999859222797605	WITHOUT_CLASSIFICATION	1.407772023953469E-5	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999338761109	WITHOUT_CLASSIFICATION	6.612388906125178E-8	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.996997265518827	WITHOUT_CLASSIFICATION	0.0030027344811729795	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999999388189605	WITHOUT_CLASSIFICATION	6.118103940563375E-8	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999982995086824	WITHOUT_CLASSIFICATION	1.7004913176989021E-6	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999869690647699	WITHOUT_CLASSIFICATION	1.3030935230008798E-5	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9990223844444265	WITHOUT_CLASSIFICATION	9.776155555734243E-4	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.999992479597447	WITHOUT_CLASSIFICATION	7.520402553022088E-6	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999306200229602	WITHOUT_CLASSIFICATION	6.937997703979303E-5	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9994017019083462	WITHOUT_CLASSIFICATION	5.982980916538765E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999767008657131	WITHOUT_CLASSIFICATION	2.3299134286860303E-5	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999996737712623	WITHOUT_CLASSIFICATION	3.2622873772120075E-7	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9248147816361252	WITHOUT_CLASSIFICATION	0.07518521836387486	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999999270809493	WITHOUT_CLASSIFICATION	7.291905060255959E-8	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999822800312296	WITHOUT_CLASSIFICATION	1.7719968770463946E-5	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9993785839130678	WITHOUT_CLASSIFICATION	6.214160869321981E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9997161489144117	WITHOUT_CLASSIFICATION	2.8385108558832506E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999988645860656	WITHOUT_CLASSIFICATION	1.1354139344693625E-6	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9766336375391766	WITHOUT_CLASSIFICATION	0.023366362460823256	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999953780619034	WITHOUT_CLASSIFICATION	4.621938096615875E-6	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999985194657955	WITHOUT_CLASSIFICATION	1.4805342044593125E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999821669580254	WITHOUT_CLASSIFICATION	1.7833041974555674E-5	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999947691986003	WITHOUT_CLASSIFICATION	5.230801399678564E-6	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9994762784831769	WITHOUT_CLASSIFICATION	5.237215168230775E-4	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999999495471508	WITHOUT_CLASSIFICATION	5.045284914247098E-8	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999610661178	WITHOUT_CLASSIFICATION	3.893388214287224E-8	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9990348240023588	WITHOUT_CLASSIFICATION	9.651759976411975E-4	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9985707608670568	WITHOUT_CLASSIFICATION	0.001429239132943131	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9990348240023588	WITHOUT_CLASSIFICATION	9.651759976411975E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999978025806949	DESIGN	2.197419305015998E-6	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.8663786093559944	WITHOUT_CLASSIFICATION	0.13362139064400555	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999595023791884	WITHOUT_CLASSIFICATION	4.049762081167145E-5	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9998648660740728	DESIGN	1.3513392592719774E-4	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9997474522305271	WITHOUT_CLASSIFICATION	2.5254776947284134E-4	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999128238078137	WITHOUT_CLASSIFICATION	8.717619218626656E-5	DESIGN
// write	WITHOUT_CLASSIFICATION	0.999933823919264	WITHOUT_CLASSIFICATION	6.617608073600364E-5	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999822770223635	WITHOUT_CLASSIFICATION	1.7722977636560605E-5	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999984867413271	WITHOUT_CLASSIFICATION	1.5132586729696363E-6	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.7040586931556061	WITHOUT_CLASSIFICATION	0.29594130684439396	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9990430752789892	WITHOUT_CLASSIFICATION	9.569247210109055E-4	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9990432665861207	WITHOUT_CLASSIFICATION	9.567334138792946E-4	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9995990858565585	WITHOUT_CLASSIFICATION	4.0091414344142783E-4	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999962929481521	WITHOUT_CLASSIFICATION	3.7070518479161178E-6	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999751167268428	WITHOUT_CLASSIFICATION	2.4883273157201755E-5	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9776573868633711	DESIGN	0.0223426131366289	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999973380729971	WITHOUT_CLASSIFICATION	2.6619270029614533E-6	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9973507604431483	WITHOUT_CLASSIFICATION	0.002649239556851688	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999931672222799	WITHOUT_CLASSIFICATION	6.832777720039716E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999779196254469	WITHOUT_CLASSIFICATION	2.2080374553144036E-5	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.999964002739135	WITHOUT_CLASSIFICATION	3.59972608649564E-5	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999987862539873	WITHOUT_CLASSIFICATION	1.213746012654077E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999807881657959	WITHOUT_CLASSIFICATION	1.9211834203994232E-5	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999996215244386	WITHOUT_CLASSIFICATION	3.784755615293413E-7	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999919113462998	WITHOUT_CLASSIFICATION	8.088653700205145E-6	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9988644008903437	WITHOUT_CLASSIFICATION	0.0011355991096563358	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999950265433025	WITHOUT_CLASSIFICATION	4.9734566974736395E-6	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9997396261279081	WITHOUT_CLASSIFICATION	2.603738720918648E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999962015358419	WITHOUT_CLASSIFICATION	3.798464158242721E-6	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9970404648373378	WITHOUT_CLASSIFICATION	0.002959535162662242	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999999933012582	WITHOUT_CLASSIFICATION	6.698741790906814E-8	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999773774839	WITHOUT_CLASSIFICATION	2.2622516108014156E-8	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999998687240534	WITHOUT_CLASSIFICATION	1.3127594662352653E-7	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9999443650927983	WITHOUT_CLASSIFICATION	5.563490720179645E-5	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999999894695	WITHOUT_CLASSIFICATION	1.0530341591561806E-11	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999946773518257	WITHOUT_CLASSIFICATION	5.322648174346683E-6	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999976389408514	WITHOUT_CLASSIFICATION	2.361059148583725E-6	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.6296056823293639	WITHOUT_CLASSIFICATION	0.37039431767063613	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999922456512329	WITHOUT_CLASSIFICATION	7.754348767133535E-6	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999979030131455	WITHOUT_CLASSIFICATION	2.0969868544789446E-6	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999932147681	WITHOUT_CLASSIFICATION	6.785231901073924E-9	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999998050748435	WITHOUT_CLASSIFICATION	1.9492515651708668E-7	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999920301875	WITHOUT_CLASSIFICATION	7.969812464325177E-9	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9997177915376497	WITHOUT_CLASSIFICATION	2.8220846235029357E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9997177915376497	WITHOUT_CLASSIFICATION	2.8220846235029357E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9990129060938073	WITHOUT_CLASSIFICATION	9.870939061926388E-4	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9971966285437011	WITHOUT_CLASSIFICATION	0.0028033714562989867	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9981775254455637	WITHOUT_CLASSIFICATION	0.001822474554436326	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999990622572	WITHOUT_CLASSIFICATION	9.377427974070077E-10	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999985365915637	WITHOUT_CLASSIFICATION	1.4634084364145887E-6	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999595642155871	WITHOUT_CLASSIFICATION	4.0435784412928406E-5	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999996002969855	WITHOUT_CLASSIFICATION	3.9970301443131536E-7	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999995782899962	WITHOUT_CLASSIFICATION	4.217100037568764E-7	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9995271960108254	WITHOUT_CLASSIFICATION	4.7280398917460306E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9986230770703268	WITHOUT_CLASSIFICATION	0.0013769229296730688	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999988158902214	WITHOUT_CLASSIFICATION	1.1841097785921922E-6	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9998407007648819	WITHOUT_CLASSIFICATION	1.5929923511806638E-4	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.946479386452419	WITHOUT_CLASSIFICATION	0.053520613547580954	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999623136111131	WITHOUT_CLASSIFICATION	3.768638888688316E-5	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9906280439026836	WITHOUT_CLASSIFICATION	0.009371956097316388	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999993213369068	WITHOUT_CLASSIFICATION	6.786630930738103E-7	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999950213301624	WITHOUT_CLASSIFICATION	4.978669837659583E-6	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.999999392269488	WITHOUT_CLASSIFICATION	6.077305121226626E-7	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.999898565990261	WITHOUT_CLASSIFICATION	1.0143400973898977E-4	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999992696923836	WITHOUT_CLASSIFICATION	7.303076163266886E-7	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.7532280139840769	DESIGN	0.24677198601592304	WITHOUT_CLASSIFICATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.6747967285999276	DESIGN	0.3252032714000725	WITHOUT_CLASSIFICATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9947158224090101	WITHOUT_CLASSIFICATION	0.0052841775909898735	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9997483303179441	WITHOUT_CLASSIFICATION	2.5166968205595847E-4	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9873014874631699	WITHOUT_CLASSIFICATION	0.012698512536829994	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9976418333863161	WITHOUT_CLASSIFICATION	0.002358166613683991	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9918700046692195	WITHOUT_CLASSIFICATION	0.008129995330780517	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999127531786668	WITHOUT_CLASSIFICATION	8.724682133330937E-5	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999912654883888	WITHOUT_CLASSIFICATION	8.734511611243245E-6	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.999912084233883	WITHOUT_CLASSIFICATION	8.79157661169781E-5	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.8710528809767903	DESIGN	0.12894711902320957	WITHOUT_CLASSIFICATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9994870419425315	WITHOUT_CLASSIFICATION	5.129580574685081E-4	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999999992796829	WITHOUT_CLASSIFICATION	7.203170872882243E-9	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999995878782398	WITHOUT_CLASSIFICATION	4.1212176018015977E-7	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999169294792	WITHOUT_CLASSIFICATION	8.307052086286632E-8	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999982891749325	WITHOUT_CLASSIFICATION	1.710825067560554E-6	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998785557634	WITHOUT_CLASSIFICATION	1.2144423657177582E-7	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998602769489	WITHOUT_CLASSIFICATION	1.397230510803537E-7	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.995726697196698	WITHOUT_CLASSIFICATION	0.004273302803301875	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999996647278209	WITHOUT_CLASSIFICATION	3.3527217913390895E-7	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999308792854843	WITHOUT_CLASSIFICATION	6.912071451573609E-5	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999265574436382	WITHOUT_CLASSIFICATION	7.344255636177179E-5	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9993792105471943	WITHOUT_CLASSIFICATION	6.207894528058014E-4	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999742307662145	WITHOUT_CLASSIFICATION	2.5769233785549364E-5	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9993587454738383	WITHOUT_CLASSIFICATION	6.412545261617307E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999981833145472	WITHOUT_CLASSIFICATION	1.8166854528518908E-6	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999916613095785	WITHOUT_CLASSIFICATION	8.338690421426416E-6	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999972778511494	WITHOUT_CLASSIFICATION	2.7221488505527937E-6	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9999728359370084	WITHOUT_CLASSIFICATION	2.7164062991574104E-5	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999893314220315	WITHOUT_CLASSIFICATION	1.0668577968515131E-5	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999981654147	WITHOUT_CLASSIFICATION	1.8345852838115232E-9	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999966178461737	WITHOUT_CLASSIFICATION	3.382153826241015E-6	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999109435205	WITHOUT_CLASSIFICATION	8.905647956706492E-8	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999998635437288	WITHOUT_CLASSIFICATION	1.364562711593841E-7	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999989057902635	WITHOUT_CLASSIFICATION	1.0942097364886615E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999858639189791	WITHOUT_CLASSIFICATION	1.413608102076932E-5	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9998864265451993	WITHOUT_CLASSIFICATION	1.1357345480068205E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9961811183908271	DESIGN	0.0038188816091729153	WITHOUT_CLASSIFICATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9994827773869419	WITHOUT_CLASSIFICATION	5.172226130580736E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999308968906518	WITHOUT_CLASSIFICATION	6.910310934819636E-5	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999993204113008	WITHOUT_CLASSIFICATION	6.795886992101148E-7	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999287731785346	WITHOUT_CLASSIFICATION	7.122682146549526E-5	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999975730012415	WITHOUT_CLASSIFICATION	2.4269987583942627E-6	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999983516294008	WITHOUT_CLASSIFICATION	1.6483705991918828E-6	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999851112758933	WITHOUT_CLASSIFICATION	1.4888724106650553E-5	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999999967672456	WITHOUT_CLASSIFICATION	3.2327544015360066E-8	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999006515692	WITHOUT_CLASSIFICATION	9.93484308008766E-8	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999946651558	WITHOUT_CLASSIFICATION	5.3348442796013905E-9	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999697521277007	WITHOUT_CLASSIFICATION	3.0247872299362808E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9998605110578258	WITHOUT_CLASSIFICATION	1.3948894217413017E-4	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999999977453224	WITHOUT_CLASSIFICATION	2.2546775451249064E-9	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998353544054649	WITHOUT_CLASSIFICATION	1.6464559453512842E-4	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999958254758	WITHOUT_CLASSIFICATION	4.174524176361621E-9	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999980692801239	WITHOUT_CLASSIFICATION	1.9307198760296962E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999785569763955	WITHOUT_CLASSIFICATION	2.1443023604523905E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999799154511271	WITHOUT_CLASSIFICATION	2.0084548872822246E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999854990395565	WITHOUT_CLASSIFICATION	1.450096044352196E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999656006448813	WITHOUT_CLASSIFICATION	3.439935511874071E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999682464193799	WITHOUT_CLASSIFICATION	3.175358062000471E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999607876116514	WITHOUT_CLASSIFICATION	3.921238834863994E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999580536671434	WITHOUT_CLASSIFICATION	4.194633285662676E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999611328246731	WITHOUT_CLASSIFICATION	3.886717532687278E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999756607964102	WITHOUT_CLASSIFICATION	2.4339203589823875E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999620853719432	WITHOUT_CLASSIFICATION	3.791462805691352E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999364159920128	WITHOUT_CLASSIFICATION	6.358400798728689E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999648692512402	WITHOUT_CLASSIFICATION	3.513074875984626E-5	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999436605245983	WITHOUT_CLASSIFICATION	5.6339475401735594E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999447180909178	WITHOUT_CLASSIFICATION	5.52819090822065E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999167256141297	WITHOUT_CLASSIFICATION	8.327438587029798E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999308927078935	WITHOUT_CLASSIFICATION	6.91072921065842E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999407053283488	WITHOUT_CLASSIFICATION	5.9294671651108955E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999624914278858	WITHOUT_CLASSIFICATION	3.75085721140828E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999719818055588	WITHOUT_CLASSIFICATION	2.801819444128141E-5	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999912182198368	WITHOUT_CLASSIFICATION	8.781780163223825E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9372513610274132	WITHOUT_CLASSIFICATION	0.06274863897258681	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.999904337433798	WITHOUT_CLASSIFICATION	9.566256620203328E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999998924942601	WITHOUT_CLASSIFICATION	1.0750573975505011E-7	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999960771187156	WITHOUT_CLASSIFICATION	3.922881284435583E-6	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999985404891462	WITHOUT_CLASSIFICATION	1.4595108538756714E-6	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999984493708293	WITHOUT_CLASSIFICATION	1.5506291708339283E-6	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9977619321339442	WITHOUT_CLASSIFICATION	0.0022380678660557634	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999439265983	WITHOUT_CLASSIFICATION	5.6073401812660324E-8	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999952549146168	WITHOUT_CLASSIFICATION	4.7450853831821965E-6	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9997312342204845	DESIGN	2.68765779515498E-4	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999996533616602	WITHOUT_CLASSIFICATION	3.466383398566007E-7	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999916806348	WITHOUT_CLASSIFICATION	8.319365210646095E-9	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999656402298861	WITHOUT_CLASSIFICATION	3.4359770113780507E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999656402298861	WITHOUT_CLASSIFICATION	3.4359770113780507E-5	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999997301468667	WITHOUT_CLASSIFICATION	2.6985313335763407E-7	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.999954483859012	WITHOUT_CLASSIFICATION	4.551614098806851E-5	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9998097112187122	WITHOUT_CLASSIFICATION	1.9028878128779557E-4	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9998792853237238	WITHOUT_CLASSIFICATION	1.2071467627617105E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9965352477926906	WITHOUT_CLASSIFICATION	0.003464752207309428	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9998344782105668	WITHOUT_CLASSIFICATION	1.6552178943311747E-4	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999569966692616	WITHOUT_CLASSIFICATION	4.3003330738355765E-5	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999995514985983	WITHOUT_CLASSIFICATION	4.485014016899772E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999866662109954	WITHOUT_CLASSIFICATION	1.3333789004568863E-5	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999959863747754	WITHOUT_CLASSIFICATION	4.013625224570096E-6	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.999999606509942	WITHOUT_CLASSIFICATION	3.9349005791973543E-7	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999829552275645	WITHOUT_CLASSIFICATION	1.7044772435516288E-5	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.999107284219176	WITHOUT_CLASSIFICATION	8.927157808239117E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999966506089071	WITHOUT_CLASSIFICATION	3.3493910929138744E-6	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9974178640950483	WITHOUT_CLASSIFICATION	0.0025821359049517587	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999538172724176	WITHOUT_CLASSIFICATION	4.6182727582438857E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999970106102255	WITHOUT_CLASSIFICATION	2.9893897745722284E-6	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999763892632	WITHOUT_CLASSIFICATION	2.3610736835198432E-8	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999995827475606	WITHOUT_CLASSIFICATION	4.172524393875198E-7	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999969477394081	WITHOUT_CLASSIFICATION	3.05226059190736E-6	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.999999964356708	WITHOUT_CLASSIFICATION	3.5643291999450624E-8	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.8464294332264927	DESIGN	0.15357056677350736	WITHOUT_CLASSIFICATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999970987424738	WITHOUT_CLASSIFICATION	2.901257526316714E-6	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999908769590252	WITHOUT_CLASSIFICATION	9.12304097481156E-6	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999977576223	WITHOUT_CLASSIFICATION	2.2423776730864413E-9	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999993137773584	WITHOUT_CLASSIFICATION	6.862226416533632E-7	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999993493347007	WITHOUT_CLASSIFICATION	6.506652992603071E-7	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999991896213566	WITHOUT_CLASSIFICATION	8.103786434488616E-7	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999996042199607	WITHOUT_CLASSIFICATION	3.9578003925458787E-7	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999893944023507	WITHOUT_CLASSIFICATION	1.0605597649251238E-5	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999962373493936	WITHOUT_CLASSIFICATION	3.7626506064623523E-6	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9995653079437506	WITHOUT_CLASSIFICATION	4.346920562493E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999989093587566	WITHOUT_CLASSIFICATION	1.0906412434582817E-6	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.99999940648725	WITHOUT_CLASSIFICATION	5.935127499587154E-7	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999795130595214	WITHOUT_CLASSIFICATION	2.0486940478660146E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9998823647871753	WITHOUT_CLASSIFICATION	1.1763521282473866E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992675936243	WITHOUT_CLASSIFICATION	7.324063755699021E-7	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999995326166597	WITHOUT_CLASSIFICATION	4.673833403281045E-7	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9894781734540745	WITHOUT_CLASSIFICATION	0.010521826545925607	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999830986045817	WITHOUT_CLASSIFICATION	1.6901395418295027E-5	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9925421571220615	WITHOUT_CLASSIFICATION	0.007457842877938474	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999888478027847	WITHOUT_CLASSIFICATION	1.1152197215226708E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999996915001361	WITHOUT_CLASSIFICATION	3.084998638382348E-7	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9991359109409201	WITHOUT_CLASSIFICATION	8.640890590799874E-4	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9991359109409201	WITHOUT_CLASSIFICATION	8.640890590799874E-4	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999882518051536	WITHOUT_CLASSIFICATION	1.1748194846423064E-5	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999947529827204	WITHOUT_CLASSIFICATION	5.247017279499184E-6	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999949467205508	WITHOUT_CLASSIFICATION	5.053279449182138E-6	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999215399738799	WITHOUT_CLASSIFICATION	7.846002612017459E-5	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9995949526125424	WITHOUT_CLASSIFICATION	4.050473874575706E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999147570293372	WITHOUT_CLASSIFICATION	8.524297066277272E-5	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999594150128526	WITHOUT_CLASSIFICATION	4.058498714745803E-5	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999998771217222	WITHOUT_CLASSIFICATION	1.2287827780095816E-7	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999987692738247	WITHOUT_CLASSIFICATION	1.2307261753140837E-6	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999601084431925	WITHOUT_CLASSIFICATION	3.9891556807401776E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999396239029117	WITHOUT_CLASSIFICATION	6.037609708839464E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999861836065724	WITHOUT_CLASSIFICATION	1.3816393427524033E-5	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999996990468463	WITHOUT_CLASSIFICATION	3.009531537131507E-7	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999969833685484	WITHOUT_CLASSIFICATION	3.0166314515328294E-6	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9526030325950183	DESIGN	0.047396967404981644	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.8529917446812938	DESIGN	0.14700825531870615	WITHOUT_CLASSIFICATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999903112821058	WITHOUT_CLASSIFICATION	9.688717894114304E-6	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9998862096347219	WITHOUT_CLASSIFICATION	1.137903652781521E-4	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999984862267	WITHOUT_CLASSIFICATION	1.5137733562369216E-9	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999999256346662	WITHOUT_CLASSIFICATION	7.43653337972764E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999998906112292	WITHOUT_CLASSIFICATION	1.0938877090684384E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999998906112292	WITHOUT_CLASSIFICATION	1.0938877090684384E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999983378114418	WITHOUT_CLASSIFICATION	1.6621885581713744E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999983378114418	WITHOUT_CLASSIFICATION	1.6621885581713744E-6	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999985437532317	WITHOUT_CLASSIFICATION	1.4562467682826659E-6	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999509937161486	WITHOUT_CLASSIFICATION	4.900628385150088E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999996138173308	WITHOUT_CLASSIFICATION	3.861826692372126E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997555223846	WITHOUT_CLASSIFICATION	2.444776153635174E-7	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999981306144767	WITHOUT_CLASSIFICATION	1.8693855232472404E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999985036906384	WITHOUT_CLASSIFICATION	1.4963093615654404E-6	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.6217476989259966	WITHOUT_CLASSIFICATION	0.3782523010740035	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9999966494224947	WITHOUT_CLASSIFICATION	3.3505775053830518E-6	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999958887570727	WITHOUT_CLASSIFICATION	4.1112429273418855E-6	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999999899773634	WITHOUT_CLASSIFICATION	1.0022636548778331E-8	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999892730337686	WITHOUT_CLASSIFICATION	1.0726966231371144E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999966096751707	WITHOUT_CLASSIFICATION	3.3903248294199E-6	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999968968867773	WITHOUT_CLASSIFICATION	3.103113222752168E-6	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.99512265272857	WITHOUT_CLASSIFICATION	0.004877347271429882	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999977436350815	WITHOUT_CLASSIFICATION	2.2563649184046443E-6	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999926137655489	WITHOUT_CLASSIFICATION	7.386234451002351E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9968033440635228	WITHOUT_CLASSIFICATION	0.0031966559364771563	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999967297873837	WITHOUT_CLASSIFICATION	3.270212616289243E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9987580878680511	WITHOUT_CLASSIFICATION	0.0012419121319489444	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999992099873767	WITHOUT_CLASSIFICATION	7.900126232135464E-7	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999936513156258	WITHOUT_CLASSIFICATION	6.3486843742343174E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999995713279837	WITHOUT_CLASSIFICATION	4.2867201629260107E-7	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.999996739633596	WITHOUT_CLASSIFICATION	3.260366404083555E-6	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999950265433025	WITHOUT_CLASSIFICATION	4.9734566974736395E-6	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999595642155871	WITHOUT_CLASSIFICATION	4.0435784412928406E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999868356437128	WITHOUT_CLASSIFICATION	1.3164356287164535E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9810155727847871	WITHOUT_CLASSIFICATION	0.018984427215212957	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999987801432378	WITHOUT_CLASSIFICATION	1.2198567622017762E-6	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9998811667719709	WITHOUT_CLASSIFICATION	1.1883322802897021E-4	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9993476444820741	WITHOUT_CLASSIFICATION	6.523555179258672E-4	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9993476444820741	WITHOUT_CLASSIFICATION	6.523555179258672E-4	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9882812587439314	WITHOUT_CLASSIFICATION	0.011718741256068596	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9998318633828275	WITHOUT_CLASSIFICATION	1.6813661717248596E-4	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999954868012328	WITHOUT_CLASSIFICATION	4.513198767117756E-6	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999640501536898	WITHOUT_CLASSIFICATION	3.594984631020785E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9998109446082082	WITHOUT_CLASSIFICATION	1.890553917919031E-4	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9969635724456986	WITHOUT_CLASSIFICATION	0.003036427554301475	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999996153136153	WITHOUT_CLASSIFICATION	3.846863847323988E-7	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9993302187355229	WITHOUT_CLASSIFICATION	6.697812644772045E-4	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999972719888502	WITHOUT_CLASSIFICATION	2.728011149741171E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999872489519076	WITHOUT_CLASSIFICATION	1.2751048092536576E-5	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999104462643286	WITHOUT_CLASSIFICATION	8.955373567135576E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999981234780079	WITHOUT_CLASSIFICATION	1.876521992112163E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999573531893362	WITHOUT_CLASSIFICATION	4.264681066372822E-5	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9998212573545301	WITHOUT_CLASSIFICATION	1.787426454698958E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999998485517435	WITHOUT_CLASSIFICATION	1.514482564044779E-7	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999831620385882	WITHOUT_CLASSIFICATION	1.683796141182896E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9994983788668311	WITHOUT_CLASSIFICATION	5.01621133168806E-4	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9997930274203555	WITHOUT_CLASSIFICATION	2.06972579644604E-4	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999860905374858	WITHOUT_CLASSIFICATION	1.3909462514268533E-5	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.999999803414293	WITHOUT_CLASSIFICATION	1.9658570701754346E-7	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999969102339198	WITHOUT_CLASSIFICATION	3.0897660801230686E-6	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999937032682235	WITHOUT_CLASSIFICATION	6.296731776505677E-6	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.99999695291882	WITHOUT_CLASSIFICATION	3.0470811800425E-6	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999982199143125	WITHOUT_CLASSIFICATION	1.7800856874879458E-6	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999993948944348	WITHOUT_CLASSIFICATION	6.051055652513321E-7	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999999353669057	WITHOUT_CLASSIFICATION	6.463309436118743E-8	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9998089012605295	WITHOUT_CLASSIFICATION	1.9109873947062038E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9998740282134647	WITHOUT_CLASSIFICATION	1.2597178653529084E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999123889811	WITHOUT_CLASSIFICATION	8.761101884980019E-8	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999972628752363	WITHOUT_CLASSIFICATION	2.737124763864611E-6	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999973096936277	WITHOUT_CLASSIFICATION	2.69030637227141E-6	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999990749218053	WITHOUT_CLASSIFICATION	9.250781947038567E-7	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999998919840023	WITHOUT_CLASSIFICATION	1.080159976825855E-7	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9998597273067088	WITHOUT_CLASSIFICATION	1.4027269329122043E-4	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9994203077771904	WITHOUT_CLASSIFICATION	5.796922228095655E-4	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999532807613533	WITHOUT_CLASSIFICATION	4.671923864678987E-5	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.999186691776383	WITHOUT_CLASSIFICATION	8.133082236170436E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.8691038406785089	DESIGN	0.13089615932149112	WITHOUT_CLASSIFICATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999998538300128	WITHOUT_CLASSIFICATION	1.4616998725302335E-7	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999958738452661	WITHOUT_CLASSIFICATION	4.126154733850259E-6	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999998353636425	WITHOUT_CLASSIFICATION	1.6463635753329328E-7	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999399231663754	WITHOUT_CLASSIFICATION	6.00768336245126E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999770466852169	WITHOUT_CLASSIFICATION	2.2953314783146752E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999585133140402	WITHOUT_CLASSIFICATION	4.1486685959840114E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999170563633429	WITHOUT_CLASSIFICATION	8.294363665712132E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9994811966432754	WITHOUT_CLASSIFICATION	5.188033567245273E-4	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999997410717992	WITHOUT_CLASSIFICATION	2.5892820079862034E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999963658115443	WITHOUT_CLASSIFICATION	3.634188455717197E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999999911722278	WITHOUT_CLASSIFICATION	8.827772177683977E-9	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9981119002551575	WITHOUT_CLASSIFICATION	0.001888099744842471	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9998821750914159	WITHOUT_CLASSIFICATION	1.1782490858415456E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999061190094322	WITHOUT_CLASSIFICATION	9.388099056789285E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999424466891091	WITHOUT_CLASSIFICATION	5.755331089075147E-5	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999239983258672	WITHOUT_CLASSIFICATION	7.600167413274509E-5	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999961141019237	WITHOUT_CLASSIFICATION	3.885898076283757E-6	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999986332331003	WITHOUT_CLASSIFICATION	1.3667668995883716E-6	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999989283833386	WITHOUT_CLASSIFICATION	1.071616661377845E-6	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999998880155965	WITHOUT_CLASSIFICATION	1.119844034901726E-6	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999969485597324	WITHOUT_CLASSIFICATION	3.0514402675214227E-6	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9097519379580373	WITHOUT_CLASSIFICATION	0.09024806204196266	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999618853360883	WITHOUT_CLASSIFICATION	3.811466391171138E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9998821750914159	WITHOUT_CLASSIFICATION	1.1782490858415456E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999424466891091	WITHOUT_CLASSIFICATION	5.755331089075147E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999061190094322	WITHOUT_CLASSIFICATION	9.388099056789285E-5	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999779511001468	WITHOUT_CLASSIFICATION	2.2048899853267244E-5	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999159274779569	WITHOUT_CLASSIFICATION	8.407252204310986E-5	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.999985724823802	WITHOUT_CLASSIFICATION	1.427517619809468E-5	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999667225683472	WITHOUT_CLASSIFICATION	3.327743165278453E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9999029622101272	WITHOUT_CLASSIFICATION	9.703778987280636E-5	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999861375703876	WITHOUT_CLASSIFICATION	1.3862429612416184E-5	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999891634541407	WITHOUT_CLASSIFICATION	1.0836545859312411E-5	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999873300936488	WITHOUT_CLASSIFICATION	1.2669906351207599E-5	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999839138219193	WITHOUT_CLASSIFICATION	1.6086178080685128E-5	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999951195946087	WITHOUT_CLASSIFICATION	4.880405391279672E-6	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999937759457244	WITHOUT_CLASSIFICATION	6.224054275593782E-6	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9998211276025148	WITHOUT_CLASSIFICATION	1.788723974852279E-4	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999974823400902	WITHOUT_CLASSIFICATION	2.517659909810212E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999982346540186	WITHOUT_CLASSIFICATION	1.7653459814189335E-6	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9996922447795787	WITHOUT_CLASSIFICATION	3.077552204212371E-4	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9998136672605149	WITHOUT_CLASSIFICATION	1.86332739485143E-4	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9989320498538932	WITHOUT_CLASSIFICATION	0.0010679501461068727	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999846663696226	WITHOUT_CLASSIFICATION	1.5333630377407758E-5	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999846663696226	WITHOUT_CLASSIFICATION	1.5333630377407758E-5	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999982249530138	WITHOUT_CLASSIFICATION	1.775046986165356E-6	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999763175026656	WITHOUT_CLASSIFICATION	2.368249733440944E-5	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999994445049192	WITHOUT_CLASSIFICATION	5.554950808026388E-7	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999658534136562	WITHOUT_CLASSIFICATION	3.4146586343880656E-5	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9997755773249623	WITHOUT_CLASSIFICATION	2.24422675037694E-4	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999928639254985	WITHOUT_CLASSIFICATION	7.136074501592014E-6	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999366734389139	WITHOUT_CLASSIFICATION	6.33265610861056E-5	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.99981798547893	WITHOUT_CLASSIFICATION	1.820145210699233E-4	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9792552761379215	WITHOUT_CLASSIFICATION	0.02074472386207846	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999955820149599	WITHOUT_CLASSIFICATION	4.417985040189577E-6	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999827753195188	WITHOUT_CLASSIFICATION	1.7224680481137265E-5	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999916113585051	WITHOUT_CLASSIFICATION	8.38864149477634E-6	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9997413226299865	WITHOUT_CLASSIFICATION	2.586773700135814E-4	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999809332925643	WITHOUT_CLASSIFICATION	1.9066707435782064E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9979917908306064	WITHOUT_CLASSIFICATION	0.002008209169393666	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999876396568117	WITHOUT_CLASSIFICATION	1.236034318824544E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999836700916136	WITHOUT_CLASSIFICATION	1.632990838638892E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999471734883834	WITHOUT_CLASSIFICATION	5.2826511616697736E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999471734883834	WITHOUT_CLASSIFICATION	5.2826511616697736E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999984796991042	WITHOUT_CLASSIFICATION	1.520300895850736E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.999997039193769	WITHOUT_CLASSIFICATION	2.9608062308947133E-6	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9997838073106807	WITHOUT_CLASSIFICATION	2.1619268931935087E-4	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999982292805322	WITHOUT_CLASSIFICATION	1.770719467841771E-6	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999986764430441	WITHOUT_CLASSIFICATION	1.3235569559603498E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999471734883834	WITHOUT_CLASSIFICATION	5.2826511616697736E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999471734883834	WITHOUT_CLASSIFICATION	5.2826511616697736E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996589405774	WITHOUT_CLASSIFICATION	3.410594226194118E-7	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996589405774	WITHOUT_CLASSIFICATION	3.410594226194118E-7	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.999999325880313	WITHOUT_CLASSIFICATION	6.741196868562865E-7	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999975195699341	WITHOUT_CLASSIFICATION	2.4804300660208713E-6	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999998171961116	WITHOUT_CLASSIFICATION	1.828038883614931E-7	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.8790363212508333	DESIGN	0.12096367874916669	WITHOUT_CLASSIFICATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999932626941538	WITHOUT_CLASSIFICATION	6.737305846302966E-6	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999932626941538	WITHOUT_CLASSIFICATION	6.737305846302966E-6	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.999999731378871	WITHOUT_CLASSIFICATION	2.6862112906719994E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999988186938981	WITHOUT_CLASSIFICATION	1.181306101944413E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999520817375	WITHOUT_CLASSIFICATION	4.7918262462364174E-8	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9994065965181893	WITHOUT_CLASSIFICATION	5.934034818107383E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996443866758	WITHOUT_CLASSIFICATION	3.5561332422490957E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999964524139452	WITHOUT_CLASSIFICATION	3.5475860548167928E-6	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9998989238743643	WITHOUT_CLASSIFICATION	1.0107612563573248E-4	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.999996329820449	WITHOUT_CLASSIFICATION	3.6701795509817685E-6	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9987780805375569	WITHOUT_CLASSIFICATION	0.0012219194624431585	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9996115202034791	WITHOUT_CLASSIFICATION	3.884797965208702E-4	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9980792493637418	WITHOUT_CLASSIFICATION	0.0019207506362582886	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999986676510718	WITHOUT_CLASSIFICATION	1.332348928159122E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999181853723675	WITHOUT_CLASSIFICATION	8.181462763246687E-5	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9997205039985314	WITHOUT_CLASSIFICATION	2.794960014686659E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999876396568117	WITHOUT_CLASSIFICATION	1.236034318824544E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999471734883834	WITHOUT_CLASSIFICATION	5.2826511616697736E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996589405774	WITHOUT_CLASSIFICATION	3.410594226194118E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999964524139452	WITHOUT_CLASSIFICATION	3.5475860548167928E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9988499960039556	WITHOUT_CLASSIFICATION	0.0011500039960444222	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9988499960039556	WITHOUT_CLASSIFICATION	0.0011500039960444222	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.999878410532898	WITHOUT_CLASSIFICATION	1.2158946710194976E-4	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999995600672512	WITHOUT_CLASSIFICATION	4.399327487779247E-7	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999924112121547	WITHOUT_CLASSIFICATION	7.588787845397316E-6	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999790277311	WITHOUT_CLASSIFICATION	2.0972268955050612E-8	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999999960983063	WITHOUT_CLASSIFICATION	3.90169379092836E-9	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999830071078625	WITHOUT_CLASSIFICATION	1.6992892137484014E-5	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.93763958254615	WITHOUT_CLASSIFICATION	0.06236041745385004	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9849300530150246	WITHOUT_CLASSIFICATION	0.015069946984975541	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.999971120735631	WITHOUT_CLASSIFICATION	2.8879264369104064E-5	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9994123528405139	WITHOUT_CLASSIFICATION	5.876471594861832E-4	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9989883332800699	WITHOUT_CLASSIFICATION	0.001011666719930214	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9975465343597684	WITHOUT_CLASSIFICATION	0.002453465640231535	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999919751922656	WITHOUT_CLASSIFICATION	8.024807734355336E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999836700916136	WITHOUT_CLASSIFICATION	1.632990838638892E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996589405774	WITHOUT_CLASSIFICATION	3.410594226194118E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999988186938981	WITHOUT_CLASSIFICATION	1.181306101944413E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999520817375	WITHOUT_CLASSIFICATION	4.7918262462364174E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999520817375	WITHOUT_CLASSIFICATION	4.7918262462364174E-8	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996443866758	WITHOUT_CLASSIFICATION	3.5561332422490957E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999964524139452	WITHOUT_CLASSIFICATION	3.5475860548167928E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999964524139452	WITHOUT_CLASSIFICATION	3.5475860548167928E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9988499960039556	WITHOUT_CLASSIFICATION	0.0011500039960444222	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999705041090015	WITHOUT_CLASSIFICATION	2.949589099851543E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999106418940806	WITHOUT_CLASSIFICATION	8.935810591948688E-5	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.999999988717076	WITHOUT_CLASSIFICATION	1.1282923980470985E-8	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999034929271915	WITHOUT_CLASSIFICATION	9.650707280859314E-5	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.90058709921336	DESIGN	0.09941290078663997	WITHOUT_CLASSIFICATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999303343282155	WITHOUT_CLASSIFICATION	6.96656717844956E-5	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999996179604538	WITHOUT_CLASSIFICATION	3.82039546269872E-7	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999969753849659	WITHOUT_CLASSIFICATION	3.0246150341419584E-6	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999128287941	WITHOUT_CLASSIFICATION	8.717120596583956E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999988186938981	WITHOUT_CLASSIFICATION	1.181306101944413E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999520817375	WITHOUT_CLASSIFICATION	4.7918262462364174E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999520817375	WITHOUT_CLASSIFICATION	4.7918262462364174E-8	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996443866758	WITHOUT_CLASSIFICATION	3.5561332422490957E-7	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9849300530150246	WITHOUT_CLASSIFICATION	0.015069946984975541	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9994123528405139	WITHOUT_CLASSIFICATION	5.876471594861832E-4	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999999354997213	WITHOUT_CLASSIFICATION	6.450027871732035E-8	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999969303256806	WITHOUT_CLASSIFICATION	3.069674319495361E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999949480622069	WITHOUT_CLASSIFICATION	5.051937793044383E-6	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999949480622069	WITHOUT_CLASSIFICATION	5.051937793044383E-6	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9986878069410394	WITHOUT_CLASSIFICATION	0.0013121930589606078	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999699154456909	WITHOUT_CLASSIFICATION	3.0084554309091773E-5	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999982120909771	WITHOUT_CLASSIFICATION	1.7879090229429168E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999993225427246	WITHOUT_CLASSIFICATION	6.774572753920906E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999984478781709	WITHOUT_CLASSIFICATION	1.5521218290648326E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999984478781709	WITHOUT_CLASSIFICATION	1.5521218290648326E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999843067519933	WITHOUT_CLASSIFICATION	1.569324800664763E-5	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999843067519933	WITHOUT_CLASSIFICATION	1.569324800664763E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999289566352626	WITHOUT_CLASSIFICATION	7.10433647374106E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999289566352626	WITHOUT_CLASSIFICATION	7.10433647374106E-5	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999982968670966	WITHOUT_CLASSIFICATION	1.7031329034351497E-6	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999999115481927	WITHOUT_CLASSIFICATION	8.845180741827207E-8	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999664854784517	WITHOUT_CLASSIFICATION	3.3514521548342584E-5	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999972431225315	WITHOUT_CLASSIFICATION	2.756877468529896E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999977998366212	WITHOUT_CLASSIFICATION	2.2001633787718715E-6	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999965570269457	WITHOUT_CLASSIFICATION	3.4429730542535184E-6	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999032142631872	WITHOUT_CLASSIFICATION	9.678573681279185E-5	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999995680481467	WITHOUT_CLASSIFICATION	4.319518532990801E-7	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9996727458044425	WITHOUT_CLASSIFICATION	3.272541955574472E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9129334762098492	WITHOUT_CLASSIFICATION	0.0870665237901509	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999994224942786	WITHOUT_CLASSIFICATION	5.7750572132584E-7	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999202885415508	WITHOUT_CLASSIFICATION	7.971145844924072E-5	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9998250842337879	WITHOUT_CLASSIFICATION	1.7491576621203394E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999441721222753	WITHOUT_CLASSIFICATION	5.582787772462454E-5	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999441721222753	WITHOUT_CLASSIFICATION	5.582787772462454E-5	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999939157459274	WITHOUT_CLASSIFICATION	6.084254072493997E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999985036906384	WITHOUT_CLASSIFICATION	1.4963093615654404E-6	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9977343112483235	WITHOUT_CLASSIFICATION	0.0022656887516765457	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999412749166	WITHOUT_CLASSIFICATION	5.872508339396241E-8	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.999998096836201	WITHOUT_CLASSIFICATION	1.9031637989513178E-6	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9998375323728163	WITHOUT_CLASSIFICATION	1.6246762718377414E-4	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999916554232453	WITHOUT_CLASSIFICATION	8.344576754708925E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999992771655738	WITHOUT_CLASSIFICATION	7.228344261631155E-7	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999995526155	WITHOUT_CLASSIFICATION	4.4738455082589875E-10	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.99999997569297	WITHOUT_CLASSIFICATION	2.4307029987899254E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999185249061	WITHOUT_CLASSIFICATION	8.147509380425769E-8	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999950781652054	WITHOUT_CLASSIFICATION	4.92183479461511E-6	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999996980169632	WITHOUT_CLASSIFICATION	3.019830368127103E-7	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.8812646387432197	WITHOUT_CLASSIFICATION	0.11873536125678029	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.999806702627006	WITHOUT_CLASSIFICATION	1.93297372994132E-4	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9997281341176565	WITHOUT_CLASSIFICATION	2.7186588234349665E-4	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999909730267539	WITHOUT_CLASSIFICATION	9.026973246043479E-6	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999973885497213	WITHOUT_CLASSIFICATION	2.611450278803316E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998246110952	WITHOUT_CLASSIFICATION	1.753889048208368E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998246110952	WITHOUT_CLASSIFICATION	1.753889048208368E-7	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999965706883467	WITHOUT_CLASSIFICATION	3.429311653350403E-6	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9998533997576192	WITHOUT_CLASSIFICATION	1.4660024238074545E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.999605041266025	WITHOUT_CLASSIFICATION	3.9495873397496663E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.999605041266025	WITHOUT_CLASSIFICATION	3.9495873397496663E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999999785995886	WITHOUT_CLASSIFICATION	2.140041143095673E-8	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999680747671494	WITHOUT_CLASSIFICATION	3.1925232850555145E-5	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998756236821049	WITHOUT_CLASSIFICATION	1.24376317894973E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999906473273963	WITHOUT_CLASSIFICATION	9.352672603680501E-6	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999932786827342	WITHOUT_CLASSIFICATION	6.721317265787129E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999958472452826	WITHOUT_CLASSIFICATION	4.15275471741876E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999958472452826	WITHOUT_CLASSIFICATION	4.15275471741876E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999997799848003	WITHOUT_CLASSIFICATION	2.2001519980946728E-7	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999994023333784	WITHOUT_CLASSIFICATION	5.976666216690923E-7	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999986470031214	WITHOUT_CLASSIFICATION	1.352996878652834E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9997244246040672	WITHOUT_CLASSIFICATION	2.7557539593279975E-4	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9998533997576192	WITHOUT_CLASSIFICATION	1.4660024238074545E-4	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999758023474677	WITHOUT_CLASSIFICATION	2.4197652532314304E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999982977825896	WITHOUT_CLASSIFICATION	1.702217410397564E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999982977825896	WITHOUT_CLASSIFICATION	1.702217410397564E-5	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999531772617477	WITHOUT_CLASSIFICATION	4.6822738252352994E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999838010746	WITHOUT_CLASSIFICATION	1.6198925434594898E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999838010746	WITHOUT_CLASSIFICATION	1.6198925434594898E-8	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999999991686414	WITHOUT_CLASSIFICATION	8.313586069525417E-9	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999999991686414	WITHOUT_CLASSIFICATION	8.313586069525417E-9	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999999991686414	WITHOUT_CLASSIFICATION	8.313586069525417E-9	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999838010746	WITHOUT_CLASSIFICATION	1.6198925434594898E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999838010746	WITHOUT_CLASSIFICATION	1.6198925434594898E-8	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999531772617477	WITHOUT_CLASSIFICATION	4.6822738252352994E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9993864665906965	WITHOUT_CLASSIFICATION	6.135334093034734E-4	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999966531989711	WITHOUT_CLASSIFICATION	3.3468010287639752E-6	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999994957717383	WITHOUT_CLASSIFICATION	5.042282615956902E-7	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999858816120991	WITHOUT_CLASSIFICATION	1.4118387900909328E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999980882216	WITHOUT_CLASSIFICATION	1.911778473786003E-9	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999948619747385	WITHOUT_CLASSIFICATION	5.138025261410382E-6	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999996828604695	WITHOUT_CLASSIFICATION	3.171395305671682E-7	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999681547794	WITHOUT_CLASSIFICATION	3.184522046241916E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999185249061	WITHOUT_CLASSIFICATION	8.147509380425769E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999838010746	WITHOUT_CLASSIFICATION	1.6198925434594898E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999838010746	WITHOUT_CLASSIFICATION	1.6198925434594898E-8	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999993553611649	WITHOUT_CLASSIFICATION	6.446388351750987E-7	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999969092354926	WITHOUT_CLASSIFICATION	3.0907645073924293E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999915449644362	WITHOUT_CLASSIFICATION	8.455035563879198E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999737165527	WITHOUT_CLASSIFICATION	2.6283447268713E-8	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999977109300097	WITHOUT_CLASSIFICATION	2.2890699903971767E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999926508547704	WITHOUT_CLASSIFICATION	7.349145229618473E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999874734906	WITHOUT_CLASSIFICATION	1.2526509422120175E-8	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999521886619	WITHOUT_CLASSIFICATION	4.781133809684265E-7	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999640902815	WITHOUT_CLASSIFICATION	3.590971858410937E-8	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9984844340415008	WITHOUT_CLASSIFICATION	0.0015155659584991969	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.999981478380117	WITHOUT_CLASSIFICATION	1.8521619882994843E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999731526752071	WITHOUT_CLASSIFICATION	2.6847324792762396E-5	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999954188314	WITHOUT_CLASSIFICATION	4.581168580400057E-9	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999999942040662	WITHOUT_CLASSIFICATION	5.7959338595247025E-9	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999949235	WITHOUT_CLASSIFICATION	5.076499976387653E-9	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999947044844478	WITHOUT_CLASSIFICATION	5.295515552168099E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999947044844478	WITHOUT_CLASSIFICATION	5.295515552168099E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999947044844478	WITHOUT_CLASSIFICATION	5.295515552168099E-6	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9999981337915943	WITHOUT_CLASSIFICATION	1.8662084056687127E-6	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999997263378	WITHOUT_CLASSIFICATION	2.7366223817567023E-10	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999993425934255	WITHOUT_CLASSIFICATION	6.574065744406387E-7	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999999803572508	WITHOUT_CLASSIFICATION	1.96427492615712E-8	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999876388479075	WITHOUT_CLASSIFICATION	1.2361152092485212E-5	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999805879777443	WITHOUT_CLASSIFICATION	1.9412022255780247E-5	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999326217724345	WITHOUT_CLASSIFICATION	6.737822756545131E-5	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999997999169806	WITHOUT_CLASSIFICATION	2.0008301933413162E-7	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.999999052212525	WITHOUT_CLASSIFICATION	9.477874749042945E-7	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999998787016363	WITHOUT_CLASSIFICATION	1.212983636717446E-7	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999978582937634	WITHOUT_CLASSIFICATION	2.1417062365869586E-6	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999793187019982	WITHOUT_CLASSIFICATION	2.0681298001790335E-5	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999997799848003	WITHOUT_CLASSIFICATION	2.2001519980946728E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999838010746	WITHOUT_CLASSIFICATION	1.6198925434594898E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999838010746	WITHOUT_CLASSIFICATION	1.6198925434594898E-8	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999531772617477	WITHOUT_CLASSIFICATION	4.6822738252352994E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999948619747385	WITHOUT_CLASSIFICATION	5.138025261410382E-6	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999969092354926	WITHOUT_CLASSIFICATION	3.0907645073924293E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999737165527	WITHOUT_CLASSIFICATION	2.6283447268713E-8	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999926508547704	WITHOUT_CLASSIFICATION	7.349145229618473E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999915449644362	WITHOUT_CLASSIFICATION	8.455035563879198E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999874734906	WITHOUT_CLASSIFICATION	1.2526509422120175E-8	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9984844340415008	WITHOUT_CLASSIFICATION	0.0015155659584991969	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999640902815	WITHOUT_CLASSIFICATION	3.590971858410937E-8	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999731526752071	WITHOUT_CLASSIFICATION	2.6847324792762396E-5	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999385033342922	WITHOUT_CLASSIFICATION	6.149666570768769E-5	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9997378957964486	WITHOUT_CLASSIFICATION	2.6210420355146516E-4	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9930729542727607	WITHOUT_CLASSIFICATION	0.006927045727239275	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999962787334559	WITHOUT_CLASSIFICATION	3.7212665442151214E-6	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999001064556524	WITHOUT_CLASSIFICATION	9.989354434762325E-5	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999952824443485	WITHOUT_CLASSIFICATION	4.71755565150978E-6	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999764541084457	WITHOUT_CLASSIFICATION	2.3545891554209734E-5	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999498598373149	WITHOUT_CLASSIFICATION	5.0140162685104724E-5	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.999998199647387	WITHOUT_CLASSIFICATION	1.800352612969222E-6	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999971692109514	WITHOUT_CLASSIFICATION	2.8307890486807648E-6	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999242906344971	WITHOUT_CLASSIFICATION	7.570936550292372E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999975406993945	WITHOUT_CLASSIFICATION	2.4593006055780304E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999579994743	WITHOUT_CLASSIFICATION	4.200052580382731E-8	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9919091855305731	WITHOUT_CLASSIFICATION	0.008090814469426978	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999998485489282	WITHOUT_CLASSIFICATION	1.5145107180071736E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999500942689258	WITHOUT_CLASSIFICATION	4.990573107420471E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999899331347731	WITHOUT_CLASSIFICATION	1.0066865226876092E-5	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999998174252633	WITHOUT_CLASSIFICATION	1.8257473658910819E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999993074524939	WITHOUT_CLASSIFICATION	6.925475061050178E-7	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999916602761036	WITHOUT_CLASSIFICATION	8.339723896404423E-5	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999967094026291	WITHOUT_CLASSIFICATION	3.290597370890781E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999961359054577	WITHOUT_CLASSIFICATION	3.864094542275026E-6	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999961359054577	WITHOUT_CLASSIFICATION	3.864094542275026E-6	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999916176737443	WITHOUT_CLASSIFICATION	8.382326255635843E-6	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9994781520797406	WITHOUT_CLASSIFICATION	5.218479202594494E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9994391573576444	WITHOUT_CLASSIFICATION	5.608426423556201E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9994391573576444	WITHOUT_CLASSIFICATION	5.608426423556201E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9994391573576444	WITHOUT_CLASSIFICATION	5.608426423556201E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9995011382633867	WITHOUT_CLASSIFICATION	4.988617366132263E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9995011382633867	WITHOUT_CLASSIFICATION	4.988617366132263E-4	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9995239700582361	WITHOUT_CLASSIFICATION	4.7602994176389825E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9989223156085307	WITHOUT_CLASSIFICATION	0.001077684391469245	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9994781520797406	WITHOUT_CLASSIFICATION	5.218479202594494E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999164728823	WITHOUT_CLASSIFICATION	8.352711762696621E-8	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9994391573576444	WITHOUT_CLASSIFICATION	5.608426423556201E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9994391573576444	WITHOUT_CLASSIFICATION	5.608426423556201E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9995011382633867	WITHOUT_CLASSIFICATION	4.988617366132263E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9989223156085307	WITHOUT_CLASSIFICATION	0.001077684391469245	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999999944592806	WITHOUT_CLASSIFICATION	5.5407194062980007E-8	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999999944592806	WITHOUT_CLASSIFICATION	5.5407194062980007E-8	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999994912647501	WITHOUT_CLASSIFICATION	5.087352498684429E-7	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999994912647501	WITHOUT_CLASSIFICATION	5.087352498684429E-7	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999705913837225	WITHOUT_CLASSIFICATION	2.9408616277541694E-5	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999705913837225	WITHOUT_CLASSIFICATION	2.9408616277541694E-5	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999960227051581	WITHOUT_CLASSIFICATION	3.977294841847291E-6	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999991609345756	WITHOUT_CLASSIFICATION	8.390654244748472E-7	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999991609345756	WITHOUT_CLASSIFICATION	8.390654244748472E-7	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999975239472845	WITHOUT_CLASSIFICATION	2.476052715625509E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999975239472845	WITHOUT_CLASSIFICATION	2.476052715625509E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999997850815363	WITHOUT_CLASSIFICATION	2.149184638197268E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999881740534354	WITHOUT_CLASSIFICATION	1.1825946564532769E-5	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999881740534354	WITHOUT_CLASSIFICATION	1.1825946564532769E-5	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9995339219807524	WITHOUT_CLASSIFICATION	4.6607801924759205E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.999991629910343	WITHOUT_CLASSIFICATION	8.370089657039986E-6	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999996911715548	WITHOUT_CLASSIFICATION	3.088284452149533E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9995339219807524	WITHOUT_CLASSIFICATION	4.6607801924759205E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999983764235704	WITHOUT_CLASSIFICATION	1.6235764296445152E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993025192497	WITHOUT_CLASSIFICATION	6.974807503956079E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993025192497	WITHOUT_CLASSIFICATION	6.974807503956079E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993025192497	WITHOUT_CLASSIFICATION	6.974807503956079E-7	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999720116897549	WITHOUT_CLASSIFICATION	2.798831024502086E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999878569689948	WITHOUT_CLASSIFICATION	1.2143031005095647E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999976608575739	WITHOUT_CLASSIFICATION	2.3391424261411167E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999976608575739	WITHOUT_CLASSIFICATION	2.3391424261411167E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999897806912058	WITHOUT_CLASSIFICATION	1.021930879414316E-5	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.999593320537299	WITHOUT_CLASSIFICATION	4.0667946270100247E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999634697582894	WITHOUT_CLASSIFICATION	3.6530241710579216E-5	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999238961849134	WITHOUT_CLASSIFICATION	7.610381508668777E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999812261173	WITHOUT_CLASSIFICATION	1.8773882747269687E-8	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999962018043559	WITHOUT_CLASSIFICATION	3.798195644031084E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999962018043559	WITHOUT_CLASSIFICATION	3.798195644031084E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999964785265409	WITHOUT_CLASSIFICATION	3.521473458924011E-6	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9991644861839085	WITHOUT_CLASSIFICATION	8.355138160915622E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9991644861839085	WITHOUT_CLASSIFICATION	8.355138160915622E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993025192497	WITHOUT_CLASSIFICATION	6.974807503956079E-7	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999878569689948	WITHOUT_CLASSIFICATION	1.2143031005095647E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999976608575739	WITHOUT_CLASSIFICATION	2.3391424261411167E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999897806912058	WITHOUT_CLASSIFICATION	1.021930879414316E-5	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.999593320537299	WITHOUT_CLASSIFICATION	4.0667946270100247E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999634697582894	WITHOUT_CLASSIFICATION	3.6530241710579216E-5	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999238961849134	WITHOUT_CLASSIFICATION	7.610381508668777E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9991644861839085	WITHOUT_CLASSIFICATION	8.355138160915622E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.999352251849256	WITHOUT_CLASSIFICATION	6.477481507438919E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9994521723050075	WITHOUT_CLASSIFICATION	5.478276949924953E-4	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999800669096468	WITHOUT_CLASSIFICATION	1.993309035317349E-5	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999883818580977	WITHOUT_CLASSIFICATION	1.1618141902263485E-5	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999713772328922	WITHOUT_CLASSIFICATION	2.8622767107775774E-5	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999290387260098	WITHOUT_CLASSIFICATION	7.09612739901718E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999915686004921	WITHOUT_CLASSIFICATION	8.431399507935205E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999915686004921	WITHOUT_CLASSIFICATION	8.431399507935205E-6	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999847651209007	WITHOUT_CLASSIFICATION	1.5234879099224106E-5	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999955777984972	WITHOUT_CLASSIFICATION	4.422201502796164E-6	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9998933690550701	WITHOUT_CLASSIFICATION	1.0663094492984798E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999995684279862	WITHOUT_CLASSIFICATION	4.3157201386050023E-7	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999995929295327	WITHOUT_CLASSIFICATION	4.0707046730676815E-6	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999995929295327	WITHOUT_CLASSIFICATION	4.0707046730676815E-6	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999917475923078	WITHOUT_CLASSIFICATION	8.252407692180898E-6	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999940670671652	WITHOUT_CLASSIFICATION	5.932932834712142E-6	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999995806932352	WITHOUT_CLASSIFICATION	4.193067648034459E-6	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999995806932352	WITHOUT_CLASSIFICATION	4.193067648034459E-6	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999945756123255	WITHOUT_CLASSIFICATION	5.4243876745523435E-6	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.999973800342345	WITHOUT_CLASSIFICATION	2.619965765508103E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999812261173	WITHOUT_CLASSIFICATION	1.8773882747269687E-8	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999080443680596	WITHOUT_CLASSIFICATION	9.195563194034789E-5	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999977930335124	WITHOUT_CLASSIFICATION	2.206966487599731E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999999521048649	WITHOUT_CLASSIFICATION	4.789513510719585E-7	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999937011529477	WITHOUT_CLASSIFICATION	6.2988470522195625E-6	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999767191656331	WITHOUT_CLASSIFICATION	2.3280834366833194E-5	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999855878966527	WITHOUT_CLASSIFICATION	1.441210334726222E-5	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999913456494444	WITHOUT_CLASSIFICATION	8.654350555558766E-6	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.997372503312601	WITHOUT_CLASSIFICATION	0.0026274966873989854	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999926238074054	WITHOUT_CLASSIFICATION	7.37619259463319E-6	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999926238074054	WITHOUT_CLASSIFICATION	7.37619259463319E-6	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999991533567596	WITHOUT_CLASSIFICATION	8.4664324033368E-7	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999991533567596	WITHOUT_CLASSIFICATION	8.4664324033368E-7	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999616181179	WITHOUT_CLASSIFICATION	3.838188209387209E-8	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999893376205178	WITHOUT_CLASSIFICATION	1.066237948217516E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999893376205178	WITHOUT_CLASSIFICATION	1.066237948217516E-5	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999893376205178	WITHOUT_CLASSIFICATION	1.066237948217516E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990191704968	WITHOUT_CLASSIFICATION	9.808295032311387E-7	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999988207232843	WITHOUT_CLASSIFICATION	1.179276715702519E-6	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999988207232843	WITHOUT_CLASSIFICATION	1.179276715702519E-6	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999937889135	WITHOUT_CLASSIFICATION	6.211086503245364E-9	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999306340227824	WITHOUT_CLASSIFICATION	6.936597721765067E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999987766551598	WITHOUT_CLASSIFICATION	1.2233448401897356E-6	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999997518886169	WITHOUT_CLASSIFICATION	2.481113830427628E-7	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999995018404104	WITHOUT_CLASSIFICATION	4.98159589675172E-7	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9999048254075369	WITHOUT_CLASSIFICATION	9.517459246300893E-5	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999692032163167	WITHOUT_CLASSIFICATION	3.079678368327802E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999579994743	WITHOUT_CLASSIFICATION	4.200052580382731E-8	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999579994743	WITHOUT_CLASSIFICATION	4.200052580382731E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990191704968	WITHOUT_CLASSIFICATION	9.808295032311387E-7	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999937889135	WITHOUT_CLASSIFICATION	6.211086503245364E-9	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999853706690959	WITHOUT_CLASSIFICATION	1.4629330904021157E-5	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999306340227824	WITHOUT_CLASSIFICATION	6.936597721765067E-5	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999987766551598	WITHOUT_CLASSIFICATION	1.2233448401897356E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999970760545527	WITHOUT_CLASSIFICATION	2.9239454471892236E-6	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999789945189854	WITHOUT_CLASSIFICATION	2.10054810145555E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999999481320149	WITHOUT_CLASSIFICATION	5.186798508580123E-7	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9998976779260769	WITHOUT_CLASSIFICATION	1.0232207392310119E-4	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999999399891356	WITHOUT_CLASSIFICATION	6.001086445365641E-8	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999071325342	WITHOUT_CLASSIFICATION	9.286746573280199E-8	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999992164609448	WITHOUT_CLASSIFICATION	7.835390552602848E-7	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999970760545527	WITHOUT_CLASSIFICATION	2.9239454471892236E-6	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999145131648891	WITHOUT_CLASSIFICATION	8.548683511094382E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999145131648891	WITHOUT_CLASSIFICATION	8.548683511094382E-5	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999945986916688	WITHOUT_CLASSIFICATION	5.401308331135192E-6	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.999976193396708	WITHOUT_CLASSIFICATION	2.380660329212886E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9997701444092144	WITHOUT_CLASSIFICATION	2.2985559078570736E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999367521043969	WITHOUT_CLASSIFICATION	6.324789560312797E-5	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999998465468731	WITHOUT_CLASSIFICATION	1.534531268159593E-7	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999902041556701	WITHOUT_CLASSIFICATION	9.79584432990197E-6	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999987072707349	WITHOUT_CLASSIFICATION	1.2927292651339408E-6	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9940676838644453	WITHOUT_CLASSIFICATION	0.005932316135554754	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999556123387	WITHOUT_CLASSIFICATION	4.438766134294774E-8	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999997766068223	WITHOUT_CLASSIFICATION	2.2339317784021603E-7	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999655282050322	WITHOUT_CLASSIFICATION	3.447179496795296E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999367521043969	WITHOUT_CLASSIFICATION	6.324789560312797E-5	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999998465468731	WITHOUT_CLASSIFICATION	1.534531268159593E-7	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999402098954415	WITHOUT_CLASSIFICATION	5.979010455857121E-5	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999980987357514	WITHOUT_CLASSIFICATION	1.9012642485884383E-6	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999998310087009	WITHOUT_CLASSIFICATION	1.6899129904824573E-7	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999991100679049	WITHOUT_CLASSIFICATION	8.899320951323039E-7	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999998370497108	WITHOUT_CLASSIFICATION	1.6295028925644674E-7	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999972259058751	WITHOUT_CLASSIFICATION	2.7740941247957613E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9996938594645215	WITHOUT_CLASSIFICATION	3.0614053547855987E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999973471603995	WITHOUT_CLASSIFICATION	2.6528396004624236E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999934543610953	WITHOUT_CLASSIFICATION	6.545638904630628E-6	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999911716904696	WITHOUT_CLASSIFICATION	8.82830953032884E-6	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999798430534242	WITHOUT_CLASSIFICATION	2.015694657576504E-5	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9999895197223478	WITHOUT_CLASSIFICATION	1.048027765220203E-5	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999696316488438	WITHOUT_CLASSIFICATION	3.036835115631423E-5	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9965219676177622	WITHOUT_CLASSIFICATION	0.0034780323822377495	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9981784268472059	WITHOUT_CLASSIFICATION	0.0018215731527940551	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.999997102296542	WITHOUT_CLASSIFICATION	2.897703458010653E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999806010285249	WITHOUT_CLASSIFICATION	1.9398971475040657E-5	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9994344678187146	WITHOUT_CLASSIFICATION	5.65532181285413E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999964451318245	WITHOUT_CLASSIFICATION	3.5548681754684E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999992097927086	WITHOUT_CLASSIFICATION	7.902072914401462E-7	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999806010285249	WITHOUT_CLASSIFICATION	1.9398971475040657E-5	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9994344678187146	WITHOUT_CLASSIFICATION	5.65532181285413E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999964451318245	WITHOUT_CLASSIFICATION	3.5548681754684E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9984767294825597	WITHOUT_CLASSIFICATION	0.0015232705174402928	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999921358401849	WITHOUT_CLASSIFICATION	7.864159815105509E-6	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.980328164434255	WITHOUT_CLASSIFICATION	0.019671835565745054	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999954958889629	WITHOUT_CLASSIFICATION	4.504111037164467E-6	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9809424249237338	WITHOUT_CLASSIFICATION	0.01905757507626614	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999953862839394	WITHOUT_CLASSIFICATION	4.613716060651422E-6	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9998393171739015	WITHOUT_CLASSIFICATION	1.6068282609855612E-4	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9998301447473182	WITHOUT_CLASSIFICATION	1.6985525268166726E-4	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9999906682243537	WITHOUT_CLASSIFICATION	9.33177564638783E-6	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999796665413058	WITHOUT_CLASSIFICATION	2.0333458694154667E-5	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.991499115884395	DESIGN	0.00850088411560501	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999990152198264	WITHOUT_CLASSIFICATION	9.847801736748943E-7	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999482513547482	WITHOUT_CLASSIFICATION	5.174864525181615E-5	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999952879638433	WITHOUT_CLASSIFICATION	4.7120361567403375E-6	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999079439901	WITHOUT_CLASSIFICATION	9.205600994603868E-8	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.99999833734069	WITHOUT_CLASSIFICATION	1.6626593100137513E-6	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999933484689117	WITHOUT_CLASSIFICATION	6.651531088171026E-6	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9917362475795282	WITHOUT_CLASSIFICATION	0.008263752420471872	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9995090440118439	WITHOUT_CLASSIFICATION	4.909559881560828E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999993145348097	WITHOUT_CLASSIFICATION	6.854651903781954E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999864733629072	WITHOUT_CLASSIFICATION	1.3526637092764338E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999996876254493	WITHOUT_CLASSIFICATION	3.1237455067756815E-7	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999996876254493	WITHOUT_CLASSIFICATION	3.1237455067756815E-7	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999991053659854	WITHOUT_CLASSIFICATION	8.946340147020401E-7	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999991053659854	WITHOUT_CLASSIFICATION	8.946340147020401E-7	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999561587441759	WITHOUT_CLASSIFICATION	4.38412558240273E-5	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999561587441759	WITHOUT_CLASSIFICATION	4.38412558240273E-5	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999999974504102	WITHOUT_CLASSIFICATION	2.549589797018908E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998950907913	WITHOUT_CLASSIFICATION	1.0490920860705216E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999996064227528	WITHOUT_CLASSIFICATION	3.9357724729949955E-7	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999974240630708	WITHOUT_CLASSIFICATION	2.575936929302671E-6	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999999998693091	WITHOUT_CLASSIFICATION	1.3069090453304305E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9964204629196997	WITHOUT_CLASSIFICATION	0.0035795370803002225	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999654920756	WITHOUT_CLASSIFICATION	3.450792442110156E-8	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9999972334284569	WITHOUT_CLASSIFICATION	2.766571543106849E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999579994743	WITHOUT_CLASSIFICATION	4.200052580382731E-8	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999999974504102	WITHOUT_CLASSIFICATION	2.549589797018908E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998950907913	WITHOUT_CLASSIFICATION	1.0490920860705216E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999996064227528	WITHOUT_CLASSIFICATION	3.9357724729949955E-7	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999999998693091	WITHOUT_CLASSIFICATION	1.3069090453304305E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9964204629196997	WITHOUT_CLASSIFICATION	0.0035795370803002225	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999998790010075	WITHOUT_CLASSIFICATION	1.209989924731842E-7	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999910776007559	WITHOUT_CLASSIFICATION	8.922399244170502E-6	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9996620946457324	WITHOUT_CLASSIFICATION	3.37905354267634E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9996620946457324	WITHOUT_CLASSIFICATION	3.37905354267634E-4	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9997406073573958	WITHOUT_CLASSIFICATION	2.593926426043183E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999082401397	WITHOUT_CLASSIFICATION	9.17598602380878E-8	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999154983306349	WITHOUT_CLASSIFICATION	8.45016693650608E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999838378153	WITHOUT_CLASSIFICATION	1.6162184779331167E-8	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999838378153	WITHOUT_CLASSIFICATION	1.6162184779331167E-8	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999972079307611	WITHOUT_CLASSIFICATION	2.7920692389239227E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999999943354023	WITHOUT_CLASSIFICATION	5.664597707330991E-8	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999591903721	WITHOUT_CLASSIFICATION	4.08096279173397E-8	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999234846410985	WITHOUT_CLASSIFICATION	7.651535890152027E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9996280086885657	WITHOUT_CLASSIFICATION	3.719913114342585E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9919091855305731	WITHOUT_CLASSIFICATION	0.008090814469426978	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999998485489282	WITHOUT_CLASSIFICATION	1.5145107180071736E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999500942689258	WITHOUT_CLASSIFICATION	4.990573107420471E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999899331347731	WITHOUT_CLASSIFICATION	1.0066865226876092E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999916602761036	WITHOUT_CLASSIFICATION	8.339723896404423E-5	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999967094026291	WITHOUT_CLASSIFICATION	3.290597370890781E-5	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999972079307611	WITHOUT_CLASSIFICATION	2.7920692389239227E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999999943354023	WITHOUT_CLASSIFICATION	5.664597707330991E-8	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999234846410985	WITHOUT_CLASSIFICATION	7.651535890152027E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999994896711184	WITHOUT_CLASSIFICATION	5.103288816281023E-7	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999154983306349	WITHOUT_CLASSIFICATION	8.45016693650608E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999154983306349	WITHOUT_CLASSIFICATION	8.45016693650608E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999655282050322	WITHOUT_CLASSIFICATION	3.447179496795296E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999655282050322	WITHOUT_CLASSIFICATION	3.447179496795296E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998542034502	WITHOUT_CLASSIFICATION	1.4579654979270176E-7	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998542034502	WITHOUT_CLASSIFICATION	1.4579654979270176E-7	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999903844684	WITHOUT_CLASSIFICATION	9.61553153994765E-9	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999996365644443	WITHOUT_CLASSIFICATION	3.6343555564579465E-7	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9970230977032719	WITHOUT_CLASSIFICATION	0.0029769022967279786	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999997679855901	WITHOUT_CLASSIFICATION	2.3201440991104106E-7	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999452125399	WITHOUT_CLASSIFICATION	5.478746011240691E-8	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999760560745	WITHOUT_CLASSIFICATION	2.3943925450863457E-8	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999055970854822	WITHOUT_CLASSIFICATION	9.440291451777961E-5	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9997163746436473	WITHOUT_CLASSIFICATION	2.8362535635272204E-4	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999998352662967	WITHOUT_CLASSIFICATION	1.6473370327824056E-7	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999980295793479	WITHOUT_CLASSIFICATION	1.9704206520411783E-6	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999176802258196	WITHOUT_CLASSIFICATION	8.231977418040322E-5	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999966100417045	WITHOUT_CLASSIFICATION	3.389958295589789E-6	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999777695134154	WITHOUT_CLASSIFICATION	2.2230486584502385E-5	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999977191384	WITHOUT_CLASSIFICATION	2.2808615240188695E-9	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.999999999057451	WITHOUT_CLASSIFICATION	9.425489978877181E-10	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.999989451534872	WITHOUT_CLASSIFICATION	1.0548465128144459E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999956226740064	WITHOUT_CLASSIFICATION	4.3773259936424425E-6	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999926156306898	WITHOUT_CLASSIFICATION	7.3843693102753414E-6	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999998679792599	WITHOUT_CLASSIFICATION	1.3202074014400084E-7	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999998485489282	WITHOUT_CLASSIFICATION	1.5145107180071736E-7	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999899331347731	WITHOUT_CLASSIFICATION	1.0066865226876092E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999961359054577	WITHOUT_CLASSIFICATION	3.864094542275026E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999976608575739	WITHOUT_CLASSIFICATION	2.3391424261411167E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999976608575739	WITHOUT_CLASSIFICATION	2.3391424261411167E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999994896711184	WITHOUT_CLASSIFICATION	5.103288816281023E-7	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999154983306349	WITHOUT_CLASSIFICATION	8.45016693650608E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999655282050322	WITHOUT_CLASSIFICATION	3.447179496795296E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998542034502	WITHOUT_CLASSIFICATION	1.4579654979270176E-7	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9997617300735618	WITHOUT_CLASSIFICATION	2.3826992643815632E-4	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999513763787073	WITHOUT_CLASSIFICATION	4.862362129261429E-5	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999965230747612	WITHOUT_CLASSIFICATION	3.476925238927965E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9967305534910652	WITHOUT_CLASSIFICATION	0.003269446508934851	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9992758542752597	WITHOUT_CLASSIFICATION	7.241457247403081E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9992758542752597	WITHOUT_CLASSIFICATION	7.241457247403081E-4	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999996079894057	WITHOUT_CLASSIFICATION	3.9201059427748605E-7	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999990765476331	WITHOUT_CLASSIFICATION	9.234523670404866E-7	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999870954181957	WITHOUT_CLASSIFICATION	1.2904581804256563E-5	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999981439558643	WITHOUT_CLASSIFICATION	1.8560441357720407E-6	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999564006828778	WITHOUT_CLASSIFICATION	4.359931712206716E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999564006828778	WITHOUT_CLASSIFICATION	4.359931712206716E-5	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9943050922500587	WITHOUT_CLASSIFICATION	0.0056949077499414014	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999943497310947	WITHOUT_CLASSIFICATION	5.65026890534628E-6	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999648294328923	WITHOUT_CLASSIFICATION	3.517056710760385E-5	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9948138787133897	WITHOUT_CLASSIFICATION	0.005186121286610323	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9995173024790094	WITHOUT_CLASSIFICATION	4.826975209906282E-4	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999441955158233	WITHOUT_CLASSIFICATION	5.580448417662851E-5	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9996378501614045	WITHOUT_CLASSIFICATION	3.621498385954593E-4	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999926258834857	WITHOUT_CLASSIFICATION	7.374116514364774E-6	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9992417202654071	WITHOUT_CLASSIFICATION	7.582797345928546E-4	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9956413887826433	WITHOUT_CLASSIFICATION	0.004358611217356612	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.999321734409469	WITHOUT_CLASSIFICATION	6.782655905308746E-4	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9998668693846012	WITHOUT_CLASSIFICATION	1.331306153987908E-4	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999624486863	WITHOUT_CLASSIFICATION	3.7551313711741E-8	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999507188627765	WITHOUT_CLASSIFICATION	4.9281137223438095E-5	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999983131780472	WITHOUT_CLASSIFICATION	1.6868219528237748E-6	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9998449758592727	WITHOUT_CLASSIFICATION	1.5502414072733752E-4	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.999470836270745	WITHOUT_CLASSIFICATION	5.291637292551608E-4	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999080968515375	WITHOUT_CLASSIFICATION	9.190314846249167E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999643325260431	WITHOUT_CLASSIFICATION	3.566747395696319E-5	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999973908560154	WITHOUT_CLASSIFICATION	2.609143984552622E-6	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999992851477427	WITHOUT_CLASSIFICATION	7.14852257191521E-7	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999964128176098	WITHOUT_CLASSIFICATION	3.5871823902285583E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999964128176098	WITHOUT_CLASSIFICATION	3.5871823902285583E-6	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9890486839309586	WITHOUT_CLASSIFICATION	0.010951316069041506	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.999994955149578	WITHOUT_CLASSIFICATION	5.044850421950509E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999992771655738	WITHOUT_CLASSIFICATION	7.228344261631155E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999992771655738	WITHOUT_CLASSIFICATION	7.228344261631155E-7	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9995356344433761	DESIGN	4.643655566238051E-4	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9982509566542335	WITHOUT_CLASSIFICATION	0.0017490433457664786	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999903712543167	WITHOUT_CLASSIFICATION	9.628745683282149E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999998964418431	WITHOUT_CLASSIFICATION	1.0355815690819522E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999998964418431	WITHOUT_CLASSIFICATION	1.0355815690819522E-6	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.5081530060184904	WITHOUT_CLASSIFICATION	0.4918469939815096	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999865451318	WITHOUT_CLASSIFICATION	1.3454868238612402E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999855834281	WITHOUT_CLASSIFICATION	1.441657188507707E-8	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999382239295	WITHOUT_CLASSIFICATION	6.177607053029563E-8	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999685237867411	WITHOUT_CLASSIFICATION	3.147621325891159E-5	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999997389873903	WITHOUT_CLASSIFICATION	2.610126097404625E-7	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999780532400956	WITHOUT_CLASSIFICATION	2.194675990432433E-5	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999995409477687	WITHOUT_CLASSIFICATION	4.590522313219529E-7	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999995644994019	WITHOUT_CLASSIFICATION	4.355005980826037E-7	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9986308465267051	WITHOUT_CLASSIFICATION	0.0013691534732950261	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999981132104412	WITHOUT_CLASSIFICATION	1.8867895589088415E-6	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999777904934001	WITHOUT_CLASSIFICATION	2.2209506599868297E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999967687510146	WITHOUT_CLASSIFICATION	3.231248985434018E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999850853822858	WITHOUT_CLASSIFICATION	1.4914617714216334E-5	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9996664499848077	WITHOUT_CLASSIFICATION	3.335500151923065E-4	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999987881091629	WITHOUT_CLASSIFICATION	1.2118908371247685E-6	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999941344144	WITHOUT_CLASSIFICATION	5.865585499346265E-9	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999088361067762	WITHOUT_CLASSIFICATION	9.116389322381472E-5	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.999981867742593	WITHOUT_CLASSIFICATION	1.8132257407023334E-5	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999855718101224	WITHOUT_CLASSIFICATION	1.4428189877615028E-5	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999965219747491	WITHOUT_CLASSIFICATION	3.478025250986899E-6	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999924483284451	WITHOUT_CLASSIFICATION	7.551671554768112E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999790526859925	WITHOUT_CLASSIFICATION	2.0947314007471468E-5	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999900855908578	WITHOUT_CLASSIFICATION	9.914409142347208E-6	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999886100727207	WITHOUT_CLASSIFICATION	1.1389927279404703E-5	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999600261674348	WITHOUT_CLASSIFICATION	3.9973832565183135E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999950976681455	WITHOUT_CLASSIFICATION	4.902331854564483E-6	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999963395666	WITHOUT_CLASSIFICATION	3.660433472364189E-9	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999607064924153	WITHOUT_CLASSIFICATION	3.9293507584687075E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999984498545089	WITHOUT_CLASSIFICATION	1.550145491064385E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999939673679714	WITHOUT_CLASSIFICATION	6.0326320285114895E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999850853822858	WITHOUT_CLASSIFICATION	1.4914617714216334E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999963395666	WITHOUT_CLASSIFICATION	3.660433472364189E-9	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999607064924153	WITHOUT_CLASSIFICATION	3.9293507584687075E-5	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999939673679714	WITHOUT_CLASSIFICATION	6.0326320285114895E-6	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999937982771469	WITHOUT_CLASSIFICATION	6.201722853127446E-6	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999980489026362	WITHOUT_CLASSIFICATION	1.951097363718083E-6	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999983934210258	WITHOUT_CLASSIFICATION	1.6065789742236338E-6	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999998985802961	WITHOUT_CLASSIFICATION	1.014197038808572E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999782564733913	WITHOUT_CLASSIFICATION	2.1743526608627027E-5	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999694433559912	WITHOUT_CLASSIFICATION	3.055664400884067E-5	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999979569586069	WITHOUT_CLASSIFICATION	2.0430413930338147E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999716724202994	WITHOUT_CLASSIFICATION	2.8327579700599093E-5	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999920008425917	WITHOUT_CLASSIFICATION	7.999157408373668E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9348761475351113	WITHOUT_CLASSIFICATION	0.06512385246488873	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9997436932215892	WITHOUT_CLASSIFICATION	2.563067784108152E-4	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9997436932215892	WITHOUT_CLASSIFICATION	2.563067784108152E-4	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999995860262787	WITHOUT_CLASSIFICATION	4.139737213615237E-7	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999802806104	WITHOUT_CLASSIFICATION	1.9719389569384588E-8	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999991829932	WITHOUT_CLASSIFICATION	8.17006735838496E-10	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9998839276992827	WITHOUT_CLASSIFICATION	1.1607230071743061E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999998070129626	WITHOUT_CLASSIFICATION	1.929870372652549E-7	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999980503342241	WITHOUT_CLASSIFICATION	1.949665775974637E-6	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.998251886195496	WITHOUT_CLASSIFICATION	0.0017481138045039532	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999705211057456	WITHOUT_CLASSIFICATION	2.9478894254431598E-5	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999992350632616	WITHOUT_CLASSIFICATION	7.649367383715232E-7	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999998013184657	WITHOUT_CLASSIFICATION	1.98681534317373E-7	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.999997634457565	WITHOUT_CLASSIFICATION	2.365542435045953E-6	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999962573577206	WITHOUT_CLASSIFICATION	3.742642279361379E-6	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999996852741	WITHOUT_CLASSIFICATION	3.1472601525637454E-10	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999996853298998	WITHOUT_CLASSIFICATION	3.146701001610698E-7	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999996901993178	WITHOUT_CLASSIFICATION	3.098006822322257E-7	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.999988158406807	WITHOUT_CLASSIFICATION	1.1841593192942438E-5	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999990350875674	WITHOUT_CLASSIFICATION	9.64912432644246E-7	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999983413798849	WITHOUT_CLASSIFICATION	1.6586201150610708E-6	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9999001394801584	WITHOUT_CLASSIFICATION	9.986051984165961E-5	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999667259844037	WITHOUT_CLASSIFICATION	3.327401559634316E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999952194783966	WITHOUT_CLASSIFICATION	4.780521603302478E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999884606574637	WITHOUT_CLASSIFICATION	1.1539342536301179E-5	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999998332708016	WITHOUT_CLASSIFICATION	1.6672919842780705E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999925533160892	WITHOUT_CLASSIFICATION	7.4466839108793494E-6	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999978788330057	WITHOUT_CLASSIFICATION	2.1211669942257098E-6	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999992165247744	WITHOUT_CLASSIFICATION	7.834752257170944E-7	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.7982450440338921	DESIGN	0.2017549559661079	WITHOUT_CLASSIFICATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999755325885448	WITHOUT_CLASSIFICATION	2.446741145534036E-5	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9999849904418789	WITHOUT_CLASSIFICATION	1.500955812099057E-5	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999985645349678	WITHOUT_CLASSIFICATION	1.4354650321793879E-6	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999994932504896	WITHOUT_CLASSIFICATION	5.067495103481684E-7	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.999994829254086	WITHOUT_CLASSIFICATION	5.17074591399365E-6	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999990809816662	WITHOUT_CLASSIFICATION	9.190183337509462E-7	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999983113175896	WITHOUT_CLASSIFICATION	1.6886824103950853E-6	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999987513323066	WITHOUT_CLASSIFICATION	1.248667693344442E-6	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999938819472983	WITHOUT_CLASSIFICATION	6.11805270174423E-6	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999997881309793	WITHOUT_CLASSIFICATION	2.1186902054947329E-7	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999963948670847	WITHOUT_CLASSIFICATION	3.6051329154191666E-6	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999999267047293	WITHOUT_CLASSIFICATION	7.3295270747672E-8	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999999912578184	WITHOUT_CLASSIFICATION	8.742181624762452E-9	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9984734480823657	WITHOUT_CLASSIFICATION	0.001526551917634344	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9667572029427406	DESIGN	0.033242797057259396	WITHOUT_CLASSIFICATION
// Readline	WITHOUT_CLASSIFICATION	0.9999681071982937	WITHOUT_CLASSIFICATION	3.1892801706266836E-5	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9965456577966834	WITHOUT_CLASSIFICATION	0.0034543422033166357	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9998422630321079	WITHOUT_CLASSIFICATION	1.5773696789212014E-4	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9842930656077055	WITHOUT_CLASSIFICATION	0.015706934392294654	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9990379626563928	WITHOUT_CLASSIFICATION	9.620373436072314E-4	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9663863154694601	WITHOUT_CLASSIFICATION	0.03361368453053994	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999992896392526	WITHOUT_CLASSIFICATION	7.103607475161659E-7	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999913480599814	WITHOUT_CLASSIFICATION	8.651940018596939E-6	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999766548364347	WITHOUT_CLASSIFICATION	2.334516356525027E-5	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999801842247987	WITHOUT_CLASSIFICATION	1.9815775201294797E-5	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999998964955842	WITHOUT_CLASSIFICATION	1.0350441579102163E-7	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999998650536599	WITHOUT_CLASSIFICATION	1.3494634006698827E-7	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9996046262143684	WITHOUT_CLASSIFICATION	3.953737856316101E-4	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999943966955512	WITHOUT_CLASSIFICATION	5.603304448798861E-6	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999917724512	WITHOUT_CLASSIFICATION	8.22754880319256E-9	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999999918496492	WITHOUT_CLASSIFICATION	8.150350741688046E-9	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.999944652493694	WITHOUT_CLASSIFICATION	5.534750630599202E-5	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997666179088167	WITHOUT_CLASSIFICATION	2.333820911832278E-4	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997666179088167	WITHOUT_CLASSIFICATION	2.333820911832278E-4	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999997405634946	WITHOUT_CLASSIFICATION	2.594365054377877E-7	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999993221000488	WITHOUT_CLASSIFICATION	6.778999511436124E-7	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998926263394	WITHOUT_CLASSIFICATION	1.0737366060267054E-7	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999999581008604	WITHOUT_CLASSIFICATION	4.1899139603374214E-7	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999942328547	WITHOUT_CLASSIFICATION	5.76714539710738E-9	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.992897401108842	WITHOUT_CLASSIFICATION	0.00710259889115797	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999865345326469	WITHOUT_CLASSIFICATION	1.3465467353177407E-5	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999704557348693	WITHOUT_CLASSIFICATION	2.9544265130599923E-5	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999086769936835	WITHOUT_CLASSIFICATION	9.132300631656302E-5	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999976996852913	WITHOUT_CLASSIFICATION	2.3003147086421943E-6	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999940142910564	WITHOUT_CLASSIFICATION	5.985708943590652E-6	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999994479863434	WITHOUT_CLASSIFICATION	5.520136565798994E-7	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999585951261997	WITHOUT_CLASSIFICATION	4.1404873800230935E-5	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999937411381209	WITHOUT_CLASSIFICATION	6.258861879173365E-6	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999994972826195	WITHOUT_CLASSIFICATION	5.027173803695654E-7	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999692779255399	WITHOUT_CLASSIFICATION	3.072207446015288E-5	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.999998626737022	WITHOUT_CLASSIFICATION	1.3732629779924508E-6	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999965085405803	WITHOUT_CLASSIFICATION	3.491459419826856E-6	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.999998984798998	WITHOUT_CLASSIFICATION	1.0152010021246996E-6	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9460133550013872	WITHOUT_CLASSIFICATION	0.053986644998612915	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999985113704607	WITHOUT_CLASSIFICATION	1.4886295392961214E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999965990972626	WITHOUT_CLASSIFICATION	3.4009027374664517E-6	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999925077343179	WITHOUT_CLASSIFICATION	7.49226568212248E-6	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.854100193254165	WITHOUT_CLASSIFICATION	0.1458998067458351	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999997686876794	WITHOUT_CLASSIFICATION	2.3131232070446833E-7	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9994348520261405	WITHOUT_CLASSIFICATION	5.651479738594308E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.99972456025797	WITHOUT_CLASSIFICATION	2.754397420300571E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999831982418299	WITHOUT_CLASSIFICATION	1.680175817003653E-5	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999822860608277	WITHOUT_CLASSIFICATION	1.7713939172177102E-5	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999749614021819	DESIGN	2.503859781814707E-5	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999934271413577	WITHOUT_CLASSIFICATION	6.57285864220048E-6	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999998593845654	WITHOUT_CLASSIFICATION	1.4061543457589302E-7	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999768893614	WITHOUT_CLASSIFICATION	2.3110638597253944E-8	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999995473333315	WITHOUT_CLASSIFICATION	4.526666685177907E-7	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999768893614	WITHOUT_CLASSIFICATION	2.3110638597253944E-8	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999874078648122	WITHOUT_CLASSIFICATION	1.259213518778791E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999928772660065	WITHOUT_CLASSIFICATION	7.122733993501136E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999928772660065	WITHOUT_CLASSIFICATION	7.122733993501136E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999928772660065	WITHOUT_CLASSIFICATION	7.122733993501136E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999834715969837	WITHOUT_CLASSIFICATION	1.6528403016292644E-4	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999834715969837	WITHOUT_CLASSIFICATION	1.6528403016292644E-4	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999128687648396	WITHOUT_CLASSIFICATION	8.713123516039494E-5	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999995954713014	WITHOUT_CLASSIFICATION	4.0452869867288623E-7	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9987617958201266	WITHOUT_CLASSIFICATION	0.0012382041798734017	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9650150314066359	WITHOUT_CLASSIFICATION	0.034984968593364044	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999937429956908	WITHOUT_CLASSIFICATION	6.25700430924096E-6	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999998543382389	WITHOUT_CLASSIFICATION	1.4566176098973981E-7	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.99999999776474	WITHOUT_CLASSIFICATION	2.2352600097543206E-9	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999972509027046	WITHOUT_CLASSIFICATION	2.7490972954077436E-6	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999994833890874	WITHOUT_CLASSIFICATION	5.166109126894388E-7	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999999851216219	WITHOUT_CLASSIFICATION	1.4878378100632502E-7	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999994349164519	WITHOUT_CLASSIFICATION	5.650835481609451E-7	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.999998247778672	WITHOUT_CLASSIFICATION	1.752221327960584E-6	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999999734905465	WITHOUT_CLASSIFICATION	2.6509453558161342E-8	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999918790835363	WITHOUT_CLASSIFICATION	8.120916463693732E-6	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999905776377523	WITHOUT_CLASSIFICATION	9.422362247674822E-6	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999951933404226	WITHOUT_CLASSIFICATION	4.80665957737284E-6	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999972124924272	WITHOUT_CLASSIFICATION	2.7875075727183334E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.99999919563079	WITHOUT_CLASSIFICATION	8.043692099140346E-7	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.99999919563079	WITHOUT_CLASSIFICATION	8.043692099140346E-7	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999877340596968	WITHOUT_CLASSIFICATION	1.2265940303275339E-5	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999958742488956	WITHOUT_CLASSIFICATION	4.125751104410341E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999958742488956	WITHOUT_CLASSIFICATION	4.125751104410341E-6	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999716657204297	WITHOUT_CLASSIFICATION	2.8334279570285647E-5	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999947581932982	WITHOUT_CLASSIFICATION	5.241806701772763E-6	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999995333586782	WITHOUT_CLASSIFICATION	4.666413218829079E-7	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999543163842189	WITHOUT_CLASSIFICATION	4.56836157810567E-5	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9997840316642387	WITHOUT_CLASSIFICATION	2.1596833576134706E-4	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999955716996438	WITHOUT_CLASSIFICATION	4.428300356248017E-6	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999948380049912	WITHOUT_CLASSIFICATION	5.161995008765134E-6	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999999665412398	WITHOUT_CLASSIFICATION	3.345876018456636E-8	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999938300566363	WITHOUT_CLASSIFICATION	6.169943363661742E-6	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9704680445237244	WITHOUT_CLASSIFICATION	0.029531955476275604	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9972809912076953	WITHOUT_CLASSIFICATION	0.002719008792304802	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999709161856056	WITHOUT_CLASSIFICATION	2.9083814394371157E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999868356437128	WITHOUT_CLASSIFICATION	1.3164356287164535E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9995121900756806	WITHOUT_CLASSIFICATION	4.8780992431941643E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999972509027046	WITHOUT_CLASSIFICATION	2.7490972954077436E-6	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999272303203112	WITHOUT_CLASSIFICATION	7.276967968879458E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999976577493627	WITHOUT_CLASSIFICATION	2.342250637264807E-6	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999505025429772	WITHOUT_CLASSIFICATION	4.9497457022745776E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999505025429772	WITHOUT_CLASSIFICATION	4.9497457022745776E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999432655966315	WITHOUT_CLASSIFICATION	5.673440336845136E-5	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999672221261227	WITHOUT_CLASSIFICATION	3.277787387740142E-5	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999969112369611	WITHOUT_CLASSIFICATION	3.0887630389620523E-6	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999907244578987	WITHOUT_CLASSIFICATION	9.275542101215768E-6	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999995007260492	WITHOUT_CLASSIFICATION	4.992739508760561E-7	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999864741084162	WITHOUT_CLASSIFICATION	1.3525891583683911E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999249232946	WITHOUT_CLASSIFICATION	7.507670533077304E-8	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999962419632287	WITHOUT_CLASSIFICATION	3.7580367711759117E-6	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9998163714094659	WITHOUT_CLASSIFICATION	1.8362859053408086E-4	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999779276606	WITHOUT_CLASSIFICATION	2.2072339469484134E-8	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999892806491801	WITHOUT_CLASSIFICATION	1.0719350819930682E-5	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9991702828495905	WITHOUT_CLASSIFICATION	8.297171504093871E-4	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.7186418307034838	DESIGN	0.2813581692965164	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999998518520141	WITHOUT_CLASSIFICATION	1.4814798584621507E-7	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9997721262849618	WITHOUT_CLASSIFICATION	2.2787371503804992E-4	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.999948326952726	WITHOUT_CLASSIFICATION	5.16730472740264E-5	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9998955163561147	WITHOUT_CLASSIFICATION	1.0448364388526864E-4	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999866497379717	WITHOUT_CLASSIFICATION	1.3350262028292407E-5	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999670233351222	WITHOUT_CLASSIFICATION	3.2976664877761257E-5	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999994970966888	WITHOUT_CLASSIFICATION	5.02903311122624E-7	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999600295267	WITHOUT_CLASSIFICATION	3.997047331783804E-8	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999987979401426	WITHOUT_CLASSIFICATION	1.2020598574227332E-6	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.99987710391084	WITHOUT_CLASSIFICATION	1.228960891600683E-4	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999986545875611	WITHOUT_CLASSIFICATION	1.3454124388162093E-6	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999999925582513	WITHOUT_CLASSIFICATION	7.441748649526591E-9	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999992518200118	WITHOUT_CLASSIFICATION	7.481799881889188E-7	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999990283991733	WITHOUT_CLASSIFICATION	9.716008266829105E-7	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9992624389967463	WITHOUT_CLASSIFICATION	7.375610032538169E-4	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999966614947304	WITHOUT_CLASSIFICATION	3.338505269598578E-6	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999989069747455	WITHOUT_CLASSIFICATION	1.0930252545558856E-6	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9998701075191713	WITHOUT_CLASSIFICATION	1.2989248082875325E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999680228452454	WITHOUT_CLASSIFICATION	3.1977154754588046E-5	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9995146219247425	WITHOUT_CLASSIFICATION	4.85378075257491E-4	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999975928028167	WITHOUT_CLASSIFICATION	2.4071971832168354E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999770642968022	WITHOUT_CLASSIFICATION	2.293570319787174E-5	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999945008527715	WITHOUT_CLASSIFICATION	5.499147228438685E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9992624389967463	WITHOUT_CLASSIFICATION	7.375610032538169E-4	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999253212073	WITHOUT_CLASSIFICATION	7.467879270445793E-8	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999770642968022	WITHOUT_CLASSIFICATION	2.293570319787174E-5	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999413687408704	WITHOUT_CLASSIFICATION	5.863125912977272E-5	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999998475405985	WITHOUT_CLASSIFICATION	1.5245940148186926E-7	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999803908289	WITHOUT_CLASSIFICATION	1.9609170986328305E-8	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999986619862031	WITHOUT_CLASSIFICATION	1.3380137968647141E-6	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999817811033759	WITHOUT_CLASSIFICATION	1.8218896624124662E-5	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9994209588231024	WITHOUT_CLASSIFICATION	5.790411768974974E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9994209588231024	WITHOUT_CLASSIFICATION	5.790411768974974E-4	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999160953080654	WITHOUT_CLASSIFICATION	8.390469193454513E-5	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999601080983563	WITHOUT_CLASSIFICATION	3.9891901643736705E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999365662093	WITHOUT_CLASSIFICATION	6.343379066123645E-8	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999365662093	WITHOUT_CLASSIFICATION	6.343379066123645E-8	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9875933334985291	WITHOUT_CLASSIFICATION	0.012406666501470957	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999332638072563	WITHOUT_CLASSIFICATION	6.673619274366065E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9996626715555137	WITHOUT_CLASSIFICATION	3.3732844448632233E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9996626715555137	WITHOUT_CLASSIFICATION	3.3732844448632233E-4	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9998708995444382	WITHOUT_CLASSIFICATION	1.2910045556178078E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999992624260582	WITHOUT_CLASSIFICATION	7.375739418407398E-7	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999987334021	WITHOUT_CLASSIFICATION	1.2665979741198032E-9	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999998676410751	WITHOUT_CLASSIFICATION	1.3235892482491328E-7	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9886079629187474	WITHOUT_CLASSIFICATION	0.011392037081252557	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9994473473025212	WITHOUT_CLASSIFICATION	5.526526974788553E-4	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999998837643349	WITHOUT_CLASSIFICATION	1.1623566513703311E-7	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999317577312489	WITHOUT_CLASSIFICATION	6.824226875116112E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9998892673767427	WITHOUT_CLASSIFICATION	1.107326232572708E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9967175876127102	WITHOUT_CLASSIFICATION	0.003282412387289871	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9982237066755921	WITHOUT_CLASSIFICATION	0.0017762933244078202	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9998135362566739	WITHOUT_CLASSIFICATION	1.8646374332606207E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999947893922	WITHOUT_CLASSIFICATION	5.210607884042179E-9	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999965385571523	WITHOUT_CLASSIFICATION	3.46144284770239E-6	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999994218414365	WITHOUT_CLASSIFICATION	5.781585634030339E-7	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999554049839404	WITHOUT_CLASSIFICATION	4.459501605955012E-5	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999890049887375	WITHOUT_CLASSIFICATION	1.0995011262501908E-4	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999567438354237	WITHOUT_CLASSIFICATION	4.325616457624226E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9993473910009795	WITHOUT_CLASSIFICATION	6.5260899902046E-4	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999905980765588	WITHOUT_CLASSIFICATION	9.401923441227797E-6	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.999979499783178	WITHOUT_CLASSIFICATION	2.050021682194272E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999999823676564	WITHOUT_CLASSIFICATION	1.763234360024229E-8	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9995639657991081	WITHOUT_CLASSIFICATION	4.360342008919081E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999920461057842	WITHOUT_CLASSIFICATION	7.953894215898192E-6	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999997185378755	WITHOUT_CLASSIFICATION	2.814621245068959E-6	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999958149055145	WITHOUT_CLASSIFICATION	4.18509448554058E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9993232736060453	WITHOUT_CLASSIFICATION	6.767263939546696E-4	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999986251979184	WITHOUT_CLASSIFICATION	1.3748020815756643E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999308968906518	WITHOUT_CLASSIFICATION	6.910310934819636E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999308968906518	WITHOUT_CLASSIFICATION	6.910310934819636E-5	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9987616413620851	WITHOUT_CLASSIFICATION	0.0012383586379148654	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999678853304	WITHOUT_CLASSIFICATION	3.2114669500965914E-8	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.999938557725423	WITHOUT_CLASSIFICATION	6.144227457698167E-5	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9989975299992961	WITHOUT_CLASSIFICATION	0.00100247000070385	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999984266365158	WITHOUT_CLASSIFICATION	1.5733634841019202E-6	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9998933431454289	WITHOUT_CLASSIFICATION	1.0665685457111829E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9981860603574467	WITHOUT_CLASSIFICATION	0.0018139396425533028	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998509622223	WITHOUT_CLASSIFICATION	1.4903777773750047E-7	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999637557570749	WITHOUT_CLASSIFICATION	3.62442429252167E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999998651401983	WITHOUT_CLASSIFICATION	1.34859801699991E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999928157902	WITHOUT_CLASSIFICATION	7.184209790474269E-9	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999759434244302	WITHOUT_CLASSIFICATION	2.4056575569861525E-5	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999743426499568	WITHOUT_CLASSIFICATION	2.5657350043119672E-5	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9995636916404305	WITHOUT_CLASSIFICATION	4.363083595695463E-4	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.999994527857123	WITHOUT_CLASSIFICATION	5.472142877039495E-6	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999807880784155	WITHOUT_CLASSIFICATION	1.9211921584487915E-5	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9997828162370024	WITHOUT_CLASSIFICATION	2.1718376299760466E-4	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999400972709135	WITHOUT_CLASSIFICATION	5.990272908641223E-5	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9951195717710218	WITHOUT_CLASSIFICATION	0.004880428228978161	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999696527793402	WITHOUT_CLASSIFICATION	3.0347220659778358E-5	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999869833194018	WITHOUT_CLASSIFICATION	1.3016680598237804E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999832784214937	WITHOUT_CLASSIFICATION	1.6721578506281688E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.999999289537395	WITHOUT_CLASSIFICATION	7.104626049044941E-7	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999988897803151	WITHOUT_CLASSIFICATION	1.1102196847753962E-6	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999998912720968	WITHOUT_CLASSIFICATION	1.0872790320171965E-7	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999948677909402	WITHOUT_CLASSIFICATION	5.132209059816732E-6	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9992754501527529	WITHOUT_CLASSIFICATION	7.245498472472065E-4	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9984441141487679	WITHOUT_CLASSIFICATION	0.0015558858512320713	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999970243246352	WITHOUT_CLASSIFICATION	2.975675364753446E-6	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999625536703916	WITHOUT_CLASSIFICATION	3.744632960845935E-5	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999509551680287	WITHOUT_CLASSIFICATION	4.9044831971263956E-5	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999992769395968	WITHOUT_CLASSIFICATION	7.230604031172504E-7	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999260039201486	WITHOUT_CLASSIFICATION	7.399607985139107E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999309481290192	WITHOUT_CLASSIFICATION	6.905187098076773E-5	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999996979414075	WITHOUT_CLASSIFICATION	3.020585924865691E-7	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999379862786988	WITHOUT_CLASSIFICATION	6.201372130122273E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999981752665706	WITHOUT_CLASSIFICATION	1.824733429390274E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9987877185423817	WITHOUT_CLASSIFICATION	0.0012122814576183522	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999999921041611	WITHOUT_CLASSIFICATION	7.895838901677045E-8	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999988287724085	WITHOUT_CLASSIFICATION	1.1712275914770698E-6	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999988290262132	WITHOUT_CLASSIFICATION	1.17097378689202E-6	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.994606334089118	WITHOUT_CLASSIFICATION	0.005393665910881987	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999996879720747	WITHOUT_CLASSIFICATION	3.1202792529730037E-7	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999996879720747	WITHOUT_CLASSIFICATION	3.1202792529730037E-7	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999888090611602	WITHOUT_CLASSIFICATION	1.1190938839814799E-5	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999982521242373	WITHOUT_CLASSIFICATION	1.747875762607484E-6	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999967219420651	WITHOUT_CLASSIFICATION	3.278057935005487E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999735954486124	WITHOUT_CLASSIFICATION	2.64045513875881E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9995090440118439	WITHOUT_CLASSIFICATION	4.909559881560828E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999993145348097	WITHOUT_CLASSIFICATION	6.854651903781954E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9990858680127899	WITHOUT_CLASSIFICATION	9.141319872101911E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999960136255668	WITHOUT_CLASSIFICATION	3.986374433238537E-6	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.999958750271742	WITHOUT_CLASSIFICATION	4.1249728258065944E-5	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999500433966021	WITHOUT_CLASSIFICATION	4.995660339801363E-5	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999541786217175	WITHOUT_CLASSIFICATION	4.582137828243547E-5	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999027757789863	WITHOUT_CLASSIFICATION	9.72242210137052E-5	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999960646447001	WITHOUT_CLASSIFICATION	3.935355299794485E-6	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999542452189	WITHOUT_CLASSIFICATION	4.575478114304416E-8	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999948787463668	WITHOUT_CLASSIFICATION	5.1212536331705054E-6	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999967697044811	WITHOUT_CLASSIFICATION	3.230295518956801E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999976742709139	WITHOUT_CLASSIFICATION	2.3257290860889663E-6	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999496167303266	WITHOUT_CLASSIFICATION	5.038326967334992E-5	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999889345647669	WITHOUT_CLASSIFICATION	1.1065435233158832E-5	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999855899605845	WITHOUT_CLASSIFICATION	1.4410039415478711E-5	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999920874154543	WITHOUT_CLASSIFICATION	7.912584545684046E-6	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999995240413192	WITHOUT_CLASSIFICATION	4.759586808848883E-7	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999216466449997	WITHOUT_CLASSIFICATION	7.835335500029582E-5	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999683881268769	WITHOUT_CLASSIFICATION	3.161187312298993E-5	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999935167041206	WITHOUT_CLASSIFICATION	6.4832958793637086E-6	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999705845782506	WITHOUT_CLASSIFICATION	2.9415421749433542E-5	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999983739174993	WITHOUT_CLASSIFICATION	1.6260825007027646E-5	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999976451553766	WITHOUT_CLASSIFICATION	2.354844623442496E-6	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999553835451	WITHOUT_CLASSIFICATION	4.4616454823073786E-8	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9998621191462156	WITHOUT_CLASSIFICATION	1.3788085378435328E-4	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999993251727956	WITHOUT_CLASSIFICATION	6.748272043384673E-7	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999967229172421	WITHOUT_CLASSIFICATION	3.2770827579119262E-6	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999033340287294	WITHOUT_CLASSIFICATION	9.66659712705923E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999919379023079	WITHOUT_CLASSIFICATION	8.062097692028788E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9987877185423817	WITHOUT_CLASSIFICATION	0.0012122814576183522	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999997117393998	WITHOUT_CLASSIFICATION	2.882606001624387E-7	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999852231852899	WITHOUT_CLASSIFICATION	1.4776814709949425E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999852231852899	WITHOUT_CLASSIFICATION	1.4776814709949425E-5	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9153125616267668	WITHOUT_CLASSIFICATION	0.08468743837323324	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9787635813053243	WITHOUT_CLASSIFICATION	0.02123641869467573	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999739179652135	WITHOUT_CLASSIFICATION	2.6082034786525106E-5	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9999595588537432	WITHOUT_CLASSIFICATION	4.044114625685812E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999742700597144	WITHOUT_CLASSIFICATION	2.572994028566032E-5	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999923873392437	WITHOUT_CLASSIFICATION	7.612660756357971E-6	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999812774430221	WITHOUT_CLASSIFICATION	1.872255697782094E-5	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999693868185999	WITHOUT_CLASSIFICATION	3.061318140002254E-5	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.999995973376691	WITHOUT_CLASSIFICATION	4.026623308991691E-6	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999909311653915	WITHOUT_CLASSIFICATION	9.06883460842185E-6	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999838073586459	WITHOUT_CLASSIFICATION	1.6192641354179553E-5	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999711520344046	WITHOUT_CLASSIFICATION	2.884796559543616E-5	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999537121198457	WITHOUT_CLASSIFICATION	4.628788015419775E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.999944508906948	WITHOUT_CLASSIFICATION	5.5491093052041856E-5	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9961243507646911	WITHOUT_CLASSIFICATION	0.003875649235309012	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.996215868739761	WITHOUT_CLASSIFICATION	0.0037841312602389225	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999899086401358	WITHOUT_CLASSIFICATION	1.0091359864115299E-5	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.999979637615699	WITHOUT_CLASSIFICATION	2.036238430107638E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999942532181793	WITHOUT_CLASSIFICATION	5.746781820710022E-6	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999870570208327	WITHOUT_CLASSIFICATION	1.294297916723497E-5	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999823088709857	WITHOUT_CLASSIFICATION	1.7691129014358327E-5	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9998280125925006	WITHOUT_CLASSIFICATION	1.7198740749927745E-4	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999996087012775	WITHOUT_CLASSIFICATION	3.9129872263661973E-7	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999987931894548	WITHOUT_CLASSIFICATION	1.2068105450813792E-6	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999999778753414	WITHOUT_CLASSIFICATION	2.2124658611219523E-7	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.999988961400005	WITHOUT_CLASSIFICATION	1.1038599994936196E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999815905564	WITHOUT_CLASSIFICATION	1.8409443665169797E-8	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998930511238411	WITHOUT_CLASSIFICATION	1.0694887615886347E-4	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999999962673574	WITHOUT_CLASSIFICATION	3.7326425923893815E-8	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9997722721734481	WITHOUT_CLASSIFICATION	2.2772782655194903E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9997828489216588	WITHOUT_CLASSIFICATION	2.1715107834131958E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999943939100536	WITHOUT_CLASSIFICATION	5.6060899464188495E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.999903785583897	WITHOUT_CLASSIFICATION	9.62144161029911E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999994035460998	WITHOUT_CLASSIFICATION	5.964539001539414E-7	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9998366874571802	WITHOUT_CLASSIFICATION	1.6331254281970784E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999993370822131	WITHOUT_CLASSIFICATION	6.629177869454992E-7	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999995732044549	WITHOUT_CLASSIFICATION	4.267955451141654E-7	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.999988961400005	WITHOUT_CLASSIFICATION	1.1038599994936196E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999815905564	WITHOUT_CLASSIFICATION	1.8409443665169797E-8	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9998930511238411	WITHOUT_CLASSIFICATION	1.0694887615886347E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9997722721734481	WITHOUT_CLASSIFICATION	2.2772782655194903E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999925421999778	WITHOUT_CLASSIFICATION	7.457800022215199E-6	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999991654552561	WITHOUT_CLASSIFICATION	8.345447438888654E-7	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998890739332708	WITHOUT_CLASSIFICATION	1.1092606672924348E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999999236434656	WITHOUT_CLASSIFICATION	7.635653432814161E-8	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9995430728078214	WITHOUT_CLASSIFICATION	4.569271921786196E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999894173537	WITHOUT_CLASSIFICATION	1.0582646355699232E-8	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999581364227271	WITHOUT_CLASSIFICATION	4.1863577272883076E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999927509991854	WITHOUT_CLASSIFICATION	7.2490008145613645E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999715020893322	WITHOUT_CLASSIFICATION	2.8497910667815007E-5	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999998733333381	WITHOUT_CLASSIFICATION	1.26666661995227E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999999573209416	WITHOUT_CLASSIFICATION	4.267905848024723E-8	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999940265237712	WITHOUT_CLASSIFICATION	5.9734762287880915E-6	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999824209119733	WITHOUT_CLASSIFICATION	1.757908802670943E-5	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998465526543475	WITHOUT_CLASSIFICATION	1.5344734565250935E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999963733419032	WITHOUT_CLASSIFICATION	3.6266580969384993E-6	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999945053628473	WITHOUT_CLASSIFICATION	5.494637152689611E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999092599671067	WITHOUT_CLASSIFICATION	9.074003289335745E-5	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999989692971878	WITHOUT_CLASSIFICATION	1.0307028122516562E-6	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999963746241931	WITHOUT_CLASSIFICATION	3.6253758070044313E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999995732044549	WITHOUT_CLASSIFICATION	4.267955451141654E-7	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999991654552561	WITHOUT_CLASSIFICATION	8.345447438888654E-7	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998890739332708	WITHOUT_CLASSIFICATION	1.1092606672924348E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9995430728078214	WITHOUT_CLASSIFICATION	4.569271921786196E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999894173537	WITHOUT_CLASSIFICATION	1.0582646355699232E-8	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999581364227271	WITHOUT_CLASSIFICATION	4.1863577272883076E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999927509991854	WITHOUT_CLASSIFICATION	7.2490008145613645E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999994352861801	WITHOUT_CLASSIFICATION	5.647138198760982E-7	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999829709907135	WITHOUT_CLASSIFICATION	1.7029009286459164E-5	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999212812817	WITHOUT_CLASSIFICATION	7.87187183277644E-8	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999996337369	WITHOUT_CLASSIFICATION	3.6626318637867574E-10	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999938370460137	WITHOUT_CLASSIFICATION	6.1629539863075906E-6	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999938370460137	WITHOUT_CLASSIFICATION	6.1629539863075906E-6	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999977553599795	WITHOUT_CLASSIFICATION	2.244640020511489E-6	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999997056022041	WITHOUT_CLASSIFICATION	2.943977959193888E-7	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9996429602102179	WITHOUT_CLASSIFICATION	3.570397897820436E-4	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9982583772785059	WITHOUT_CLASSIFICATION	0.001741622721494109	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999985271831778	WITHOUT_CLASSIFICATION	1.4728168222024472E-6	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9978932796195711	WITHOUT_CLASSIFICATION	0.002106720380428982	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999942220232343	WITHOUT_CLASSIFICATION	5.777976765756647E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999991798306973	WITHOUT_CLASSIFICATION	8.201693027410784E-7	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999992239998367	WITHOUT_CLASSIFICATION	7.760001633414731E-7	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999952742985154	WITHOUT_CLASSIFICATION	4.7257014845972465E-6	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9978893095338943	WITHOUT_CLASSIFICATION	0.0021106904661056833	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999944926643481	WITHOUT_CLASSIFICATION	5.5073356518137586E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999947129158353	WITHOUT_CLASSIFICATION	5.2870841645985765E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9992362993968756	WITHOUT_CLASSIFICATION	7.637006031243231E-4	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.999995319401076	WITHOUT_CLASSIFICATION	4.680598923928698E-6	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999995349237842	WITHOUT_CLASSIFICATION	4.6507621583838745E-7	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999635947138334	WITHOUT_CLASSIFICATION	3.640528616644232E-5	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999935453051821	WITHOUT_CLASSIFICATION	6.454694817886833E-6	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999917210820745	WITHOUT_CLASSIFICATION	8.278917925559105E-6	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.8979752593233132	WITHOUT_CLASSIFICATION	0.10202474067668671	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.6801852274132704	WITHOUT_CLASSIFICATION	0.31981477258672975	DESIGN
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.999998294252751	WITHOUT_CLASSIFICATION	1.7057472490195622E-6	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999938615401828	WITHOUT_CLASSIFICATION	6.138459817201291E-6	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999926516120493	DESIGN	7.3483879508063435E-6	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999979751213437	WITHOUT_CLASSIFICATION	2.0248786563657395E-6	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999464876863304	WITHOUT_CLASSIFICATION	5.351231366953394E-5	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999997733846053	WITHOUT_CLASSIFICATION	2.26615394683814E-7	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999937987238875	WITHOUT_CLASSIFICATION	6.201276112402229E-6	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999978507135545	WITHOUT_CLASSIFICATION	2.149286445476414E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999979751213437	WITHOUT_CLASSIFICATION	2.0248786563657395E-6	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999464876863304	WITHOUT_CLASSIFICATION	5.351231366953394E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9992362993968756	WITHOUT_CLASSIFICATION	7.637006031243231E-4	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999973147422749	WITHOUT_CLASSIFICATION	2.6852577249444272E-6	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999966795369787	WITHOUT_CLASSIFICATION	3.3204630212867637E-6	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999850307641047	WITHOUT_CLASSIFICATION	1.4969235895156199E-5	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999613284648808	WITHOUT_CLASSIFICATION	3.867153511922023E-5	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9987168379857561	WITHOUT_CLASSIFICATION	0.0012831620142438964	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999996591320611	WITHOUT_CLASSIFICATION	3.408679387995532E-7	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998518815781906	WITHOUT_CLASSIFICATION	1.481184218092894E-4	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999912850624271	WITHOUT_CLASSIFICATION	8.714937572951933E-6	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9858656708191275	WITHOUT_CLASSIFICATION	0.014134329180872571	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9974226917296612	WITHOUT_CLASSIFICATION	0.002577308270338661	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999997717205468	WITHOUT_CLASSIFICATION	2.28279453210529E-7	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999551518132395	WITHOUT_CLASSIFICATION	4.484818676063219E-5	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999999946063866	WITHOUT_CLASSIFICATION	5.393613429260045E-9	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999893871426453	WITHOUT_CLASSIFICATION	1.0612857354628999E-5	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9992028848582488	WITHOUT_CLASSIFICATION	7.971151417511675E-4	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999981873923348	WITHOUT_CLASSIFICATION	1.8126076651255762E-6	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.999999691382212	WITHOUT_CLASSIFICATION	3.0861778808300223E-7	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9984945199463688	WITHOUT_CLASSIFICATION	0.0015054800536310807	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.99999986216673	WITHOUT_CLASSIFICATION	1.378332699434999E-7	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9990881721426643	WITHOUT_CLASSIFICATION	9.118278573357424E-4	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999818525621058	WITHOUT_CLASSIFICATION	1.814743789423361E-5	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999840836129028	WITHOUT_CLASSIFICATION	1.591638709718467E-5	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999984695333124	WITHOUT_CLASSIFICATION	1.5304666876825457E-6	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999995784703213	WITHOUT_CLASSIFICATION	4.215296787037877E-7	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999587155542	WITHOUT_CLASSIFICATION	4.128444582137002E-8	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.999989700576851	WITHOUT_CLASSIFICATION	1.0299423148985526E-5	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.8539323985273042	WITHOUT_CLASSIFICATION	0.1460676014726958	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.73577710499146	WITHOUT_CLASSIFICATION	0.26422289500854	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9952180367802538	WITHOUT_CLASSIFICATION	0.004781963219746168	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9998647950141789	WITHOUT_CLASSIFICATION	1.3520498582106916E-4	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999990581763887	WITHOUT_CLASSIFICATION	9.418236114193256E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996085886147165	WITHOUT_CLASSIFICATION	3.9141138528352756E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996085886147165	WITHOUT_CLASSIFICATION	3.9141138528352756E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999947129158353	WITHOUT_CLASSIFICATION	5.2870841645985765E-6	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999625970570835	WITHOUT_CLASSIFICATION	3.740294291651527E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999982371628364	WITHOUT_CLASSIFICATION	1.7628371636087633E-6	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9992750532721995	WITHOUT_CLASSIFICATION	7.249467278005149E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999973507565986	WITHOUT_CLASSIFICATION	2.6492434015197565E-6	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999973507565986	WITHOUT_CLASSIFICATION	2.6492434015197565E-6	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999996221537399	WITHOUT_CLASSIFICATION	3.778462600110296E-7	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9998737199962939	WITHOUT_CLASSIFICATION	1.2628000370603363E-4	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999662026392	WITHOUT_CLASSIFICATION	3.3797360892139686E-8	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999143765573696	WITHOUT_CLASSIFICATION	8.562344263044762E-5	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9707069586946295	WITHOUT_CLASSIFICATION	0.029293041305370533	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999937688758155	WITHOUT_CLASSIFICATION	6.2311241845466505E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998038563371	WITHOUT_CLASSIFICATION	1.9614366282703636E-7	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.99999911860948	WITHOUT_CLASSIFICATION	8.813905200305128E-7	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999843705187583	WITHOUT_CLASSIFICATION	1.5629481241656113E-5	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999473698150895	WITHOUT_CLASSIFICATION	5.263018491064302E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999738915012	WITHOUT_CLASSIFICATION	2.610849872513415E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999986921501594	WITHOUT_CLASSIFICATION	1.3078498405577076E-6	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999993060296394	WITHOUT_CLASSIFICATION	6.939703607334188E-7	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.99947823360239	WITHOUT_CLASSIFICATION	5.217663976099626E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9972849438225593	WITHOUT_CLASSIFICATION	0.002715056177440695	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9053871455738373	WITHOUT_CLASSIFICATION	0.09461285442616284	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999411706487629	WITHOUT_CLASSIFICATION	5.8829351237102495E-5	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999411706487629	WITHOUT_CLASSIFICATION	5.8829351237102495E-5	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999382034047	WITHOUT_CLASSIFICATION	6.17965952785852E-8	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999382034047	WITHOUT_CLASSIFICATION	6.17965952785852E-8	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999994108144917	WITHOUT_CLASSIFICATION	5.891855082165735E-7	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999951344952925	WITHOUT_CLASSIFICATION	4.865504707427051E-6	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9998738099597478	WITHOUT_CLASSIFICATION	1.2619004025214985E-4	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999997988436947	WITHOUT_CLASSIFICATION	2.0115630516711404E-7	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999973340304356	WITHOUT_CLASSIFICATION	2.6659695644638544E-6	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999959046869213	WITHOUT_CLASSIFICATION	4.095313078631149E-6	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999312070974	WITHOUT_CLASSIFICATION	6.879290266548013E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999986921501594	WITHOUT_CLASSIFICATION	1.3078498405577076E-6	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999993060296394	WITHOUT_CLASSIFICATION	6.939703607334188E-7	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9972849438225593	WITHOUT_CLASSIFICATION	0.002715056177440695	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999931812752997	WITHOUT_CLASSIFICATION	6.818724700311202E-6	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9984068104777309	WITHOUT_CLASSIFICATION	0.001593189522269067	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.99993867627778	WITHOUT_CLASSIFICATION	6.132372221999402E-5	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9998922200168804	WITHOUT_CLASSIFICATION	1.0777998311957273E-4	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9975231769684484	WITHOUT_CLASSIFICATION	0.0024768230315515708	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9876634613875742	WITHOUT_CLASSIFICATION	0.012336538612425825	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999998359688014	WITHOUT_CLASSIFICATION	1.6403119866173726E-7	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999987636538827	WITHOUT_CLASSIFICATION	1.2363461173436358E-6	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999710798815	WITHOUT_CLASSIFICATION	2.8920118431394156E-8	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999997265178227	WITHOUT_CLASSIFICATION	2.73482177417519E-7	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9739232643527976	WITHOUT_CLASSIFICATION	0.02607673564720228	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999780309923446	WITHOUT_CLASSIFICATION	2.196900765537168E-5	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999997475360827	WITHOUT_CLASSIFICATION	2.524639173230129E-7	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999164185646459	WITHOUT_CLASSIFICATION	8.358143535415458E-5	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.8880405226357794	WITHOUT_CLASSIFICATION	0.11195947736422061	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999827460404	WITHOUT_CLASSIFICATION	1.7253959686069182E-8	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.999987925537403	WITHOUT_CLASSIFICATION	1.2074462596877227E-5	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999865728054805	WITHOUT_CLASSIFICATION	1.3427194519530643E-5	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999993570526143	WITHOUT_CLASSIFICATION	6.429473857482391E-7	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999984597684317	WITHOUT_CLASSIFICATION	1.5402315682744694E-6	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9998644295248243	WITHOUT_CLASSIFICATION	1.3557047517561333E-4	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999923545142758	WITHOUT_CLASSIFICATION	7.645485724227282E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999855546124756	WITHOUT_CLASSIFICATION	1.4445387524297552E-5	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999990562691022	WITHOUT_CLASSIFICATION	9.437308978292535E-7	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999990450163994	WITHOUT_CLASSIFICATION	9.549836006896453E-7	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999999886060836	WITHOUT_CLASSIFICATION	1.1393916301442007E-8	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999998433744183	WITHOUT_CLASSIFICATION	1.566255816884189E-7	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999981574300247	WITHOUT_CLASSIFICATION	1.8425699752975555E-5	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999995188721614	WITHOUT_CLASSIFICATION	4.811278385733477E-7	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999670517498248	WITHOUT_CLASSIFICATION	3.294825017520609E-5	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.999988395014155	WITHOUT_CLASSIFICATION	1.1604985845005852E-5	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999949925539324	WITHOUT_CLASSIFICATION	5.007446067591917E-5	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9979261309604393	WITHOUT_CLASSIFICATION	0.0020738690395607573	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999980038541041	WITHOUT_CLASSIFICATION	1.99614589598569E-6	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999963912418964	WITHOUT_CLASSIFICATION	3.6087581036415964E-6	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999977587971934	WITHOUT_CLASSIFICATION	2.2412028064881214E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999979805827588	WITHOUT_CLASSIFICATION	2.01941724121827E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999970435921809	WITHOUT_CLASSIFICATION	2.9564078191082744E-6	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999959014997131	WITHOUT_CLASSIFICATION	4.09850028698083E-6	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999323213469153	WITHOUT_CLASSIFICATION	6.767865308462868E-5	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999879036696493	WITHOUT_CLASSIFICATION	1.2096330350660588E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999982371628364	WITHOUT_CLASSIFICATION	1.7628371636087633E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999979805827588	WITHOUT_CLASSIFICATION	2.01941724121827E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9923554520602684	WITHOUT_CLASSIFICATION	0.007644547939731578	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9456497241084647	WITHOUT_CLASSIFICATION	0.05435027589153533	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999582000254815	WITHOUT_CLASSIFICATION	4.179997451843734E-5	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999997520208767	WITHOUT_CLASSIFICATION	2.479791233362479E-7	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999997520208767	WITHOUT_CLASSIFICATION	2.479791233362479E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9983718343840329	WITHOUT_CLASSIFICATION	0.0016281656159671605	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999929007914529	WITHOUT_CLASSIFICATION	7.099208547166959E-6	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9883888450740215	WITHOUT_CLASSIFICATION	0.011611154925978575	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999985327905071	WITHOUT_CLASSIFICATION	1.4672094928995363E-6	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999500691793318	WITHOUT_CLASSIFICATION	4.9930820668171316E-5	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999989375853144	WITHOUT_CLASSIFICATION	1.0624146855648996E-6	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9934998465551662	WITHOUT_CLASSIFICATION	0.006500153444833814	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999998385071974	WITHOUT_CLASSIFICATION	1.6149280260745248E-7	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999956937775624	WITHOUT_CLASSIFICATION	4.306222437670092E-6	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999956937775624	WITHOUT_CLASSIFICATION	4.306222437670092E-6	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9995132522268488	WITHOUT_CLASSIFICATION	4.867477731512072E-4	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.999998057749463	WITHOUT_CLASSIFICATION	1.9422505369917356E-6	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9995145023257084	WITHOUT_CLASSIFICATION	4.8549767429168747E-4	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9990738366097583	WITHOUT_CLASSIFICATION	9.26163390241522E-4	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9998759696184352	WITHOUT_CLASSIFICATION	1.2403038156483023E-4	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9982312020443825	WITHOUT_CLASSIFICATION	0.001768797955617429	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.999991243552615	WITHOUT_CLASSIFICATION	8.756447384888398E-6	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999687548442351	WITHOUT_CLASSIFICATION	3.124515576490521E-5	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9986059327310706	WITHOUT_CLASSIFICATION	0.0013940672689295509	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999990525970284	WITHOUT_CLASSIFICATION	9.474029717474702E-7	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.999999601406579	WITHOUT_CLASSIFICATION	3.985934210239258E-7	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999989182323398	WITHOUT_CLASSIFICATION	1.0817676601984596E-6	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999995453463455	WITHOUT_CLASSIFICATION	4.5465365452779685E-7	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999910344636861	WITHOUT_CLASSIFICATION	8.965536313912529E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999910344636861	WITHOUT_CLASSIFICATION	8.965536313912529E-6	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999699154456909	WITHOUT_CLASSIFICATION	3.0084554309091773E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999927509991854	WITHOUT_CLASSIFICATION	7.2490008145613645E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999910653103	WITHOUT_CLASSIFICATION	8.934689669620724E-9	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.999986656162148	WITHOUT_CLASSIFICATION	1.3343837852145952E-5	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999942210921	WITHOUT_CLASSIFICATION	5.7789080283726636E-9	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999979803564234	WITHOUT_CLASSIFICATION	2.0196435765474296E-6	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999993682865651	WITHOUT_CLASSIFICATION	6.317134348941364E-6	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999999964902445	WITHOUT_CLASSIFICATION	3.509755390211989E-9	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999993112363522	WITHOUT_CLASSIFICATION	6.88763647795708E-7	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9987908275048306	WITHOUT_CLASSIFICATION	0.0012091724951694297	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999992279522123	WITHOUT_CLASSIFICATION	7.720477877344251E-7	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999982915482978	WITHOUT_CLASSIFICATION	1.708451702276176E-6	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.999999808275816	WITHOUT_CLASSIFICATION	1.9172418391912004E-7	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.999992706340633	WITHOUT_CLASSIFICATION	7.293659367022559E-6	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999937605507835	WITHOUT_CLASSIFICATION	6.23944921650833E-6	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999993305218303	WITHOUT_CLASSIFICATION	6.694781696381451E-7	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999997840736266	WITHOUT_CLASSIFICATION	2.159263735609951E-7	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.999840458539877	WITHOUT_CLASSIFICATION	1.595414601230254E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999736495032264	WITHOUT_CLASSIFICATION	2.6350496773653843E-5	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.999997032060059	WITHOUT_CLASSIFICATION	2.967939940943267E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9979619602889773	WITHOUT_CLASSIFICATION	0.00203803971102276	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999816524422502	WITHOUT_CLASSIFICATION	1.8347557749655952E-5	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998892307306824	WITHOUT_CLASSIFICATION	1.1076926931772847E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9998436547690046	WITHOUT_CLASSIFICATION	1.5634523099536117E-4	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9909429284801266	WITHOUT_CLASSIFICATION	0.009057071519873486	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9998448712766506	WITHOUT_CLASSIFICATION	1.5512872334952024E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9999112317742314	WITHOUT_CLASSIFICATION	8.876822576873327E-5	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999770792087213	WITHOUT_CLASSIFICATION	2.2920791278802546E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999834061313752	WITHOUT_CLASSIFICATION	1.6593868624889968E-5	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9932848089146784	WITHOUT_CLASSIFICATION	0.006715191085321586	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999981419692637	WITHOUT_CLASSIFICATION	1.8580307362821248E-6	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9998991485682935	WITHOUT_CLASSIFICATION	1.0085143170644918E-4	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.999993793016081	WITHOUT_CLASSIFICATION	6.20698391898832E-6	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9989415937298157	WITHOUT_CLASSIFICATION	0.001058406270184219	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999635358890528	WITHOUT_CLASSIFICATION	3.646411094715675E-5	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999991763013498	WITHOUT_CLASSIFICATION	8.236986500773753E-7	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999974778372613	WITHOUT_CLASSIFICATION	2.5221627386610473E-6	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999987738212475	WITHOUT_CLASSIFICATION	1.2261787526070941E-6	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999955332	WITHOUT_CLASSIFICATION	4.466800007221697E-9	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999998122710009	WITHOUT_CLASSIFICATION	1.8772899921829542E-7	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9998681729149914	WITHOUT_CLASSIFICATION	1.3182708500852504E-4	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.999946508425019	WITHOUT_CLASSIFICATION	5.349157498100774E-5	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9994912250070899	WITHOUT_CLASSIFICATION	5.08774992910169E-4	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.838301522709297	WITHOUT_CLASSIFICATION	0.16169847729070297	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999461930830345	WITHOUT_CLASSIFICATION	5.380691696560397E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999996138173308	WITHOUT_CLASSIFICATION	3.861826692372126E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997555223846	WITHOUT_CLASSIFICATION	2.444776153635174E-7	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.999971120735631	WITHOUT_CLASSIFICATION	2.8879264369104064E-5	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999034929271915	WITHOUT_CLASSIFICATION	9.650707280859314E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999979751213437	WITHOUT_CLASSIFICATION	2.0248786563657395E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999979751213437	WITHOUT_CLASSIFICATION	2.0248786563657395E-6	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999967213632415	WITHOUT_CLASSIFICATION	3.2786367586435087E-6	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999981522985496	WITHOUT_CLASSIFICATION	1.8477014503340038E-6	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999747651096613	WITHOUT_CLASSIFICATION	2.5234890338697275E-5	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.99417651808113	WITHOUT_CLASSIFICATION	0.005823481918869997	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999999984300496	WITHOUT_CLASSIFICATION	1.5699504261062905E-9	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999999965631027	WITHOUT_CLASSIFICATION	3.4368973066969357E-9	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999821238157488	WITHOUT_CLASSIFICATION	1.787618425118777E-5	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999753711323	WITHOUT_CLASSIFICATION	2.462886773492562E-8	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999992988863343	WITHOUT_CLASSIFICATION	7.011136656960997E-6	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9994262592193247	WITHOUT_CLASSIFICATION	5.737407806753552E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999938804430043	WITHOUT_CLASSIFICATION	6.119556995696435E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999938804430043	WITHOUT_CLASSIFICATION	6.119556995696435E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999938804430043	WITHOUT_CLASSIFICATION	6.119556995696435E-6	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999156870145	WITHOUT_CLASSIFICATION	8.431298554159175E-8	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999967459802733	WITHOUT_CLASSIFICATION	3.2540197267422455E-6	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9995681099051665	WITHOUT_CLASSIFICATION	4.318900948334499E-4	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999522542934	WITHOUT_CLASSIFICATION	4.7745706633166176E-8	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999522542934	WITHOUT_CLASSIFICATION	4.7745706633166176E-8	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999966265215506	WITHOUT_CLASSIFICATION	3.373478449244481E-6	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999908967539397	WITHOUT_CLASSIFICATION	9.103246060219867E-6	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999957261705897	WITHOUT_CLASSIFICATION	4.273829410171143E-6	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999990885876751	WITHOUT_CLASSIFICATION	9.114123249433022E-7	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9997994349940509	WITHOUT_CLASSIFICATION	2.005650059490358E-4	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999981347851088	WITHOUT_CLASSIFICATION	1.8652148912606812E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999994457370278	WITHOUT_CLASSIFICATION	5.542629722149075E-7	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999541824015257	WITHOUT_CLASSIFICATION	4.581759847432005E-5	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999906766803	WITHOUT_CLASSIFICATION	9.323319687143608E-9	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999988539730311	WITHOUT_CLASSIFICATION	1.1460269688490378E-6	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999988539730311	WITHOUT_CLASSIFICATION	1.1460269688490378E-6	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999855574600137	WITHOUT_CLASSIFICATION	1.4442539986268328E-5	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999240834536598	WITHOUT_CLASSIFICATION	7.591654634016309E-5	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.999995324181094	WITHOUT_CLASSIFICATION	4.6758189060035E-6	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999880750894298	WITHOUT_CLASSIFICATION	1.1924910570233809E-5	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999990148416463	WITHOUT_CLASSIFICATION	9.851583537414386E-7	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999973610470134	WITHOUT_CLASSIFICATION	2.638952986578885E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999996515087806	WITHOUT_CLASSIFICATION	3.4849121942241734E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999920846091155	WITHOUT_CLASSIFICATION	7.915390884594208E-6	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999575530535636	WITHOUT_CLASSIFICATION	4.244694643637672E-5	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999812462597192	WITHOUT_CLASSIFICATION	1.8753740280800904E-5	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998926925127816	WITHOUT_CLASSIFICATION	1.0730748721847712E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999903810724144	WITHOUT_CLASSIFICATION	9.618927585625323E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999676363166021	WITHOUT_CLASSIFICATION	3.236368339777955E-5	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999953796355413	WITHOUT_CLASSIFICATION	4.620364458794433E-6	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9992728790272293	WITHOUT_CLASSIFICATION	7.271209727707824E-4	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999989107462138	WITHOUT_CLASSIFICATION	1.089253786116805E-6	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999999851558116	WITHOUT_CLASSIFICATION	1.4844188399116796E-7	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999750504339107	WITHOUT_CLASSIFICATION	2.494956608931723E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.999999937272212	WITHOUT_CLASSIFICATION	6.272778794326981E-8	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999998417556317	WITHOUT_CLASSIFICATION	1.5824436824785315E-7	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9864480422729245	DESIGN	0.013551957727075547	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999999154549112	WITHOUT_CLASSIFICATION	8.454508885245475E-8	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999999939787697	WITHOUT_CLASSIFICATION	6.021230359026844E-9	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9996873522723264	WITHOUT_CLASSIFICATION	3.1264772767353405E-4	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.999999751216142	WITHOUT_CLASSIFICATION	2.487838579715978E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999599678695439	WITHOUT_CLASSIFICATION	4.003213045616098E-5	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.999999183508552	WITHOUT_CLASSIFICATION	8.164914481045131E-7	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9996618749600811	WITHOUT_CLASSIFICATION	3.3812503991891864E-4	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999872534328647	WITHOUT_CLASSIFICATION	1.2746567135371565E-5	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999766348058803	WITHOUT_CLASSIFICATION	2.3365194119706733E-5	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.999852878874377	WITHOUT_CLASSIFICATION	1.471211256229233E-4	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999801628858841	WITHOUT_CLASSIFICATION	1.9837114115922976E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9998404680899209	WITHOUT_CLASSIFICATION	1.595319100792209E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.999852878874377	WITHOUT_CLASSIFICATION	1.471211256229233E-4	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.999724019049653	WITHOUT_CLASSIFICATION	2.7598095034693515E-4	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999520802307788	WITHOUT_CLASSIFICATION	4.791976922124853E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9986499864395734	WITHOUT_CLASSIFICATION	0.0013500135604266376	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9988022927916791	WITHOUT_CLASSIFICATION	0.00119770720832087	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999940999464106	WITHOUT_CLASSIFICATION	5.9000535893416835E-6	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.999999918834743	WITHOUT_CLASSIFICATION	8.116525702109212E-8	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999997363446392	WITHOUT_CLASSIFICATION	2.63655360789095E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999124433031391	WITHOUT_CLASSIFICATION	8.755669686091064E-5	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9998951283369157	WITHOUT_CLASSIFICATION	1.0487166308414944E-4	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9986435339532264	WITHOUT_CLASSIFICATION	0.0013564660467736125	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.872965391379818	WITHOUT_CLASSIFICATION	0.12703460862018195	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9977795773291201	WITHOUT_CLASSIFICATION	0.0022204226708797846	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9912567804327973	WITHOUT_CLASSIFICATION	0.008743219567202701	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9985643295101152	WITHOUT_CLASSIFICATION	0.0014356704898848447	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9974785702001192	WITHOUT_CLASSIFICATION	0.002521429799880806	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9787499560740838	WITHOUT_CLASSIFICATION	0.021250043925916128	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9978643327622313	WITHOUT_CLASSIFICATION	0.0021356672377686754	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9982643224289381	WITHOUT_CLASSIFICATION	0.0017356775710617688	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999245475237611	WITHOUT_CLASSIFICATION	7.545247623876668E-5	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9995328798880033	WITHOUT_CLASSIFICATION	4.671201119967731E-4	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9951766339095052	WITHOUT_CLASSIFICATION	0.004823366090494844	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999024089340153	WITHOUT_CLASSIFICATION	9.759106598474913E-5	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999837259968655	WITHOUT_CLASSIFICATION	1.6274003134513442E-5	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999983854641473	WITHOUT_CLASSIFICATION	1.6145358525777053E-6	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999120583097	WITHOUT_CLASSIFICATION	8.794169017313006E-8	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999801292168563	WITHOUT_CLASSIFICATION	1.987078314362422E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999972855510262	WITHOUT_CLASSIFICATION	2.7144489739054633E-6	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999989562096182	WITHOUT_CLASSIFICATION	1.0437903817695667E-6	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.999982972914648	WITHOUT_CLASSIFICATION	1.702708535200665E-5	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.999998153477196	WITHOUT_CLASSIFICATION	1.8465228040071868E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9997576616564813	WITHOUT_CLASSIFICATION	2.423383435186807E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.8220925326750835	WITHOUT_CLASSIFICATION	0.1779074673249164	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.5442132037063359	DESIGN	0.45578679629366414	WITHOUT_CLASSIFICATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9935458570866625	WITHOUT_CLASSIFICATION	0.006454142913337494	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999890262421487	WITHOUT_CLASSIFICATION	1.0973757851278936E-5	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999338757058877	WITHOUT_CLASSIFICATION	6.612429411239872E-5	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999792945752473	WITHOUT_CLASSIFICATION	2.070542475281138E-5	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999266680128228	WITHOUT_CLASSIFICATION	7.333198717711926E-5	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9998614827659859	WITHOUT_CLASSIFICATION	1.3851723401407895E-4	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999971936499303	WITHOUT_CLASSIFICATION	2.8063500696156964E-6	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.999963221680387	WITHOUT_CLASSIFICATION	3.677831961307233E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9997701394652573	WITHOUT_CLASSIFICATION	2.2986053474273045E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999785377078584	WITHOUT_CLASSIFICATION	2.1462292141527528E-5	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999686201971117	WITHOUT_CLASSIFICATION	3.13798028882278E-5	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999994085851057	WITHOUT_CLASSIFICATION	5.91414894236893E-7	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.999986941291057	WITHOUT_CLASSIFICATION	1.3058708943002791E-5	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9999504064229205	WITHOUT_CLASSIFICATION	4.9593577079518324E-5	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999979750191278	WITHOUT_CLASSIFICATION	2.0249808721462853E-6	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999999786588059	WITHOUT_CLASSIFICATION	2.1341194158094608E-8	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999465066762667	WITHOUT_CLASSIFICATION	5.349332373322889E-5	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9988783531627342	WITHOUT_CLASSIFICATION	0.0011216468372658216	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9994295967051581	WITHOUT_CLASSIFICATION	5.704032948419478E-4	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999872875816798	WITHOUT_CLASSIFICATION	1.2712418320228464E-5	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999999786588059	WITHOUT_CLASSIFICATION	2.1341194158094608E-8	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9962818978296719	DESIGN	0.00371810217032813	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9962818978296719	DESIGN	0.00371810217032813	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999901721240161	WITHOUT_CLASSIFICATION	9.827875983860243E-6	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999908602819964	WITHOUT_CLASSIFICATION	9.139718003666413E-6	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999933147715299	WITHOUT_CLASSIFICATION	6.685228470177016E-6	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999948174664993	WITHOUT_CLASSIFICATION	5.18253350073994E-6	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999130037603828	WITHOUT_CLASSIFICATION	8.699623961721369E-5	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999980732602232	WITHOUT_CLASSIFICATION	1.9267397767523224E-6	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999982211974018	WITHOUT_CLASSIFICATION	1.7788025981547518E-6	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9978424675286208	DESIGN	0.0021575324713790736	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.974301925302276	WITHOUT_CLASSIFICATION	0.025698074697724043	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999836540106841	WITHOUT_CLASSIFICATION	1.6345989315832615E-5	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999828991024602	WITHOUT_CLASSIFICATION	1.7100897539850922E-5	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999998361180513	WITHOUT_CLASSIFICATION	1.638819486851555E-7	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999822395584432	WITHOUT_CLASSIFICATION	1.776044155680321E-5	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999471168155	WITHOUT_CLASSIFICATION	5.2883184500062724E-5	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999332189233321	WITHOUT_CLASSIFICATION	6.67810766679599E-5	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9998517999515487	WITHOUT_CLASSIFICATION	1.4820004845123076E-4	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999934283455548	WITHOUT_CLASSIFICATION	6.57165444519854E-6	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993336725236663	WITHOUT_CLASSIFICATION	6.663274763337269E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993336725236663	WITHOUT_CLASSIFICATION	6.663274763337269E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993336725236663	WITHOUT_CLASSIFICATION	6.663274763337269E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993336725236663	WITHOUT_CLASSIFICATION	6.663274763337269E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993336725236663	WITHOUT_CLASSIFICATION	6.663274763337269E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999987231913164	WITHOUT_CLASSIFICATION	1.2768086835645151E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995906274818	WITHOUT_CLASSIFICATION	4.093725181802814E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999606278372575	WITHOUT_CLASSIFICATION	3.937216274248443E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999715499388158	WITHOUT_CLASSIFICATION	2.845006118429521E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999990366163232	WITHOUT_CLASSIFICATION	9.63383676891186E-7	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999954931166617	WITHOUT_CLASSIFICATION	4.5068833383984734E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9998452935764286	WITHOUT_CLASSIFICATION	1.5470642357140552E-4	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9987615560533293	WITHOUT_CLASSIFICATION	0.0012384439466707467	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999426567644871	WITHOUT_CLASSIFICATION	5.7343235512793725E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999996279151911	WITHOUT_CLASSIFICATION	3.720848088494972E-7	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999993778320352	WITHOUT_CLASSIFICATION	6.221679647594041E-7	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999985887766664	WITHOUT_CLASSIFICATION	1.4112233335967275E-6	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999987828343987	WITHOUT_CLASSIFICATION	1.2171656012251606E-6	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999988613996451	WITHOUT_CLASSIFICATION	1.1386003549429677E-6	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999986688438847	WITHOUT_CLASSIFICATION	1.3311561153263243E-6	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999987520044081	WITHOUT_CLASSIFICATION	1.2479955918163567E-6	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.999998598288519	WITHOUT_CLASSIFICATION	1.4017114810162492E-6	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999990221682173	WITHOUT_CLASSIFICATION	9.778317826744026E-7	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999979989802479	WITHOUT_CLASSIFICATION	2.0010197521397656E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999989617841731	WITHOUT_CLASSIFICATION	1.038215826873148E-6	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999986802445354	WITHOUT_CLASSIFICATION	1.319755464561275E-6	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999975165127151	WITHOUT_CLASSIFICATION	2.483487284830153E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999987992821967	WITHOUT_CLASSIFICATION	1.2007178033777857E-6	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999984365687926	WITHOUT_CLASSIFICATION	1.563431207414756E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999993121279752	WITHOUT_CLASSIFICATION	6.878720247488281E-7	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999983450340804	WITHOUT_CLASSIFICATION	1.6549659196566714E-6	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999989099712754	WITHOUT_CLASSIFICATION	1.0900287245915896E-6	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999988635423748	WITHOUT_CLASSIFICATION	1.1364576252734917E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.999998807750416	WITHOUT_CLASSIFICATION	1.192249583886989E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999993590825211	WITHOUT_CLASSIFICATION	6.40917478738941E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999981649014003	WITHOUT_CLASSIFICATION	1.8350985997244255E-6	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999981355279469	WITHOUT_CLASSIFICATION	1.8644720530453E-6	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999982654026897	WITHOUT_CLASSIFICATION	1.7345973103703745E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.999997324725028	WITHOUT_CLASSIFICATION	2.6752749719242065E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.999999050279039	WITHOUT_CLASSIFICATION	9.497209610603818E-7	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999982457591432	WITHOUT_CLASSIFICATION	1.7542408567193076E-6	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999979138243495	WITHOUT_CLASSIFICATION	2.0861756503935963E-6	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999978048537811	WITHOUT_CLASSIFICATION	2.1951462188623046E-6	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999987845404154	WITHOUT_CLASSIFICATION	1.2154595846562068E-6	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.999997859227583	WITHOUT_CLASSIFICATION	2.1407724170308317E-6	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999985808416809	WITHOUT_CLASSIFICATION	1.4191583191254752E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999981834078897	WITHOUT_CLASSIFICATION	1.8165921102666437E-6	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999989011935448	WITHOUT_CLASSIFICATION	1.0988064551515782E-6	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.99999860919484	WITHOUT_CLASSIFICATION	1.3908051600231862E-6	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999991827147242	WITHOUT_CLASSIFICATION	8.172852757415259E-7	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999984780374971	WITHOUT_CLASSIFICATION	1.5219625029622446E-6	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.999998347813093	WITHOUT_CLASSIFICATION	1.65218690689378E-6	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999993932379605	WITHOUT_CLASSIFICATION	6.067620395840598E-7	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999987494869423	WITHOUT_CLASSIFICATION	1.2505130576852107E-6	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999988694111314	WITHOUT_CLASSIFICATION	1.1305888686349858E-6	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999606278372575	WITHOUT_CLASSIFICATION	3.937216274248443E-5	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999979902298715	WITHOUT_CLASSIFICATION	2.009770128533246E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999988878493671	WITHOUT_CLASSIFICATION	1.1121506329494403E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999982447155872	WITHOUT_CLASSIFICATION	1.7552844128368638E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999972928192743	WITHOUT_CLASSIFICATION	2.707180725759873E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999968367718008	WITHOUT_CLASSIFICATION	3.1632281991855853E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9999973622209618	WITHOUT_CLASSIFICATION	2.6377790380778812E-6	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999976260017218	WITHOUT_CLASSIFICATION	2.3739982781409666E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999968293595775	WITHOUT_CLASSIFICATION	3.170640422578987E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999973141194269	WITHOUT_CLASSIFICATION	2.6858805729650583E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999978385331189	WITHOUT_CLASSIFICATION	2.161466881057054E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999983104033324	WITHOUT_CLASSIFICATION	1.6895966675729741E-6	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999983896922509	WITHOUT_CLASSIFICATION	1.6103077491645255E-6	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999954453673678	WITHOUT_CLASSIFICATION	4.554632632141769E-6	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999983062024843	WITHOUT_CLASSIFICATION	1.6937975157220877E-6	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999981751940054	WITHOUT_CLASSIFICATION	1.824805994657556E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999993359317145	WITHOUT_CLASSIFICATION	6.640682854264448E-7	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999987318129684	WITHOUT_CLASSIFICATION	1.2681870315338667E-6	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999980993883151	WITHOUT_CLASSIFICATION	1.9006116848893421E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999978844213685	WITHOUT_CLASSIFICATION	2.11557863142971E-6	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999984896462768	WITHOUT_CLASSIFICATION	1.5103537231863076E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999982890906414	WITHOUT_CLASSIFICATION	1.7109093586299857E-6	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999975888266133	WITHOUT_CLASSIFICATION	2.411173386726774E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999980980037727	WITHOUT_CLASSIFICATION	1.901996227272293E-6	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999987204535232	WITHOUT_CLASSIFICATION	1.279546476825763E-6	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999974533258256	WITHOUT_CLASSIFICATION	2.5466741745032784E-6	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999985024079718	WITHOUT_CLASSIFICATION	1.497592028270571E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999985678337	WITHOUT_CLASSIFICATION	1.4321662998884044E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999967940276068	WITHOUT_CLASSIFICATION	3.205972393204167E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999990821080674	WITHOUT_CLASSIFICATION	9.178919325631003E-7	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999985995796808	WITHOUT_CLASSIFICATION	1.400420319189406E-6	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999992617607053	WITHOUT_CLASSIFICATION	7.382392946623486E-7	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.999997573700484	WITHOUT_CLASSIFICATION	2.4262995158812277E-6	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999987484150452	WITHOUT_CLASSIFICATION	1.2515849547394077E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999988435681506	WITHOUT_CLASSIFICATION	1.1564318494187137E-6	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999983416958155	WITHOUT_CLASSIFICATION	1.6583041845496786E-6	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999986953735316	WITHOUT_CLASSIFICATION	1.3046264684033015E-6	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999988923678319	WITHOUT_CLASSIFICATION	1.1076321681425889E-6	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.999998050502414	WITHOUT_CLASSIFICATION	1.949497585970984E-6	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.999997932126359	WITHOUT_CLASSIFICATION	2.0678736410084607E-6	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.999998583687908	WITHOUT_CLASSIFICATION	1.41631209211365E-6	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999975884198797	WITHOUT_CLASSIFICATION	2.411580120252674E-6	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999972716003113	WITHOUT_CLASSIFICATION	2.7283996887426663E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999987515062208	WITHOUT_CLASSIFICATION	1.2484937793578574E-6	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999980636371132	WITHOUT_CLASSIFICATION	1.9363628868588313E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999991442981452	WITHOUT_CLASSIFICATION	8.557018549490257E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999984187318438	WITHOUT_CLASSIFICATION	1.5812681561896199E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999987213487177	WITHOUT_CLASSIFICATION	1.2786512823202352E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999977628770206	WITHOUT_CLASSIFICATION	2.237122979439092E-6	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999976822226326	WITHOUT_CLASSIFICATION	2.317777367382652E-6	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999990829218303	WITHOUT_CLASSIFICATION	9.170781697061076E-7	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999982181490645	WITHOUT_CLASSIFICATION	1.7818509353806774E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999990285397762	WITHOUT_CLASSIFICATION	9.714602238953712E-7	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999993601107537	WITHOUT_CLASSIFICATION	6.398892461451116E-7	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999994056408235	WITHOUT_CLASSIFICATION	5.943591764471159E-7	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999995802154998	WITHOUT_CLASSIFICATION	4.19784500162154E-7	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999992870654708	WITHOUT_CLASSIFICATION	7.129345291146863E-7	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999993332701762	WITHOUT_CLASSIFICATION	6.667298238543213E-7	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999987692754708	WITHOUT_CLASSIFICATION	1.2307245292266292E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999982625929601	WITHOUT_CLASSIFICATION	1.7374070399462418E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999986048951196	WITHOUT_CLASSIFICATION	1.3951048803615678E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999993053172043	WITHOUT_CLASSIFICATION	6.946827957667835E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999987626929908	WITHOUT_CLASSIFICATION	1.2373070091956567E-6	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999993323160477	WITHOUT_CLASSIFICATION	6.676839522542193E-7	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999988050594556	WITHOUT_CLASSIFICATION	1.194940544297606E-6	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999991305277139	WITHOUT_CLASSIFICATION	8.694722860218889E-7	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999984338871226	WITHOUT_CLASSIFICATION	1.5661128773470994E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.999999214323193	WITHOUT_CLASSIFICATION	7.856768069580752E-7	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999979353163155	WITHOUT_CLASSIFICATION	2.06468368441926E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999985286854667	WITHOUT_CLASSIFICATION	1.4713145332045342E-6	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999987877491976	WITHOUT_CLASSIFICATION	1.212250802402295E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999987101676461	WITHOUT_CLASSIFICATION	1.2898323538806376E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999979443685787	WITHOUT_CLASSIFICATION	2.0556314212537315E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999985699235605	WITHOUT_CLASSIFICATION	1.4300764394764997E-6	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999984779726192	WITHOUT_CLASSIFICATION	1.5220273809162142E-6	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999981375213981	WITHOUT_CLASSIFICATION	1.8624786018409825E-6	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999989950932535	WITHOUT_CLASSIFICATION	1.0049067464203886E-6	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999993194602516	WITHOUT_CLASSIFICATION	6.805397484643345E-7	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.999998846973749	WITHOUT_CLASSIFICATION	1.153026251092414E-6	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999980607259602	WITHOUT_CLASSIFICATION	1.939274039753644E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999988794456061	WITHOUT_CLASSIFICATION	1.1205543939367083E-6	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999972964288673	WITHOUT_CLASSIFICATION	2.703571132775404E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999989564678271	WITHOUT_CLASSIFICATION	1.0435321728577357E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.999997955931834	WITHOUT_CLASSIFICATION	2.0440681660273706E-6	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999987273192872	WITHOUT_CLASSIFICATION	1.2726807127780119E-6	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999973383683489	WITHOUT_CLASSIFICATION	2.661631651077638E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999986812664107	WITHOUT_CLASSIFICATION	1.3187335893316817E-6	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999978110271392	WITHOUT_CLASSIFICATION	2.1889728606873875E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.999997380978694	WITHOUT_CLASSIFICATION	2.619021306152368E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999988240334783	WITHOUT_CLASSIFICATION	1.175966521627336E-6	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999984482369485	WITHOUT_CLASSIFICATION	1.5517630514321556E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999991591015567	WITHOUT_CLASSIFICATION	8.408984432866837E-7	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999985752874623	WITHOUT_CLASSIFICATION	1.4247125377316738E-6	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999979302927899	WITHOUT_CLASSIFICATION	2.0697072101373968E-6	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999969631267526	WITHOUT_CLASSIFICATION	3.036873247353896E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999994553402155	WITHOUT_CLASSIFICATION	5.446597845435491E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999993291871784	WITHOUT_CLASSIFICATION	6.708128216877319E-7	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999996052093248	WITHOUT_CLASSIFICATION	3.94790675175452E-7	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999994868999219	WITHOUT_CLASSIFICATION	5.131000780945813E-7	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999996944353646	WITHOUT_CLASSIFICATION	3.0556463528048275E-7	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999996917948074	WITHOUT_CLASSIFICATION	3.082051926136613E-7	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999994988807248	WITHOUT_CLASSIFICATION	5.011192752421154E-7	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999996037998276	WITHOUT_CLASSIFICATION	3.962001724284557E-7	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999996561535928	WITHOUT_CLASSIFICATION	3.43846407273635E-7	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999995283857632	WITHOUT_CLASSIFICATION	4.7161423677777507E-7	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.999999647341159	WITHOUT_CLASSIFICATION	3.5265884103904945E-7	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999994141051466	WITHOUT_CLASSIFICATION	5.858948533863001E-7	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999994347327789	WITHOUT_CLASSIFICATION	5.65267221216568E-7	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999990692068492	WITHOUT_CLASSIFICATION	9.307931506790954E-7	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999993372113111	WITHOUT_CLASSIFICATION	6.627886888416404E-7	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999997948945637	WITHOUT_CLASSIFICATION	2.0510543640983734E-7	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.999999596116089	WITHOUT_CLASSIFICATION	4.038839108775559E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999994316538234	WITHOUT_CLASSIFICATION	5.683461766548104E-7	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999994664736497	WITHOUT_CLASSIFICATION	5.335263503701171E-7	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999994180632255	WITHOUT_CLASSIFICATION	5.819367745769757E-7	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999992862290291	WITHOUT_CLASSIFICATION	7.137709708548825E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.999998780527251	WITHOUT_CLASSIFICATION	1.219472749074232E-6	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999989216435525	WITHOUT_CLASSIFICATION	1.0783564474754506E-6	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.999999022299833	WITHOUT_CLASSIFICATION	9.777001670640658E-7	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999988409744032	WITHOUT_CLASSIFICATION	1.1590255968713965E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.999999458840548	WITHOUT_CLASSIFICATION	5.411594520524203E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999990077317946	WITHOUT_CLASSIFICATION	9.922682053689222E-7	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999991713958667	WITHOUT_CLASSIFICATION	8.286041332679547E-7	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999989670917946	WITHOUT_CLASSIFICATION	1.0329082054795554E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999994870533098	WITHOUT_CLASSIFICATION	5.129466901769221E-7	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999990867128257	WITHOUT_CLASSIFICATION	9.132871743575021E-7	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999990581949983	WITHOUT_CLASSIFICATION	9.418050015912617E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999993183764917	WITHOUT_CLASSIFICATION	6.816235082429906E-7	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999988997333049	WITHOUT_CLASSIFICATION	1.1002666950825462E-6	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999990315032865	WITHOUT_CLASSIFICATION	9.684967134454379E-7	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999991485921593	WITHOUT_CLASSIFICATION	8.514078406112219E-7	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999994090470399	WITHOUT_CLASSIFICATION	5.909529601610297E-7	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999994060842041	WITHOUT_CLASSIFICATION	5.939157958262809E-7	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999990292374388	WITHOUT_CLASSIFICATION	9.707625612446641E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.999999541868299	WITHOUT_CLASSIFICATION	4.581317009874064E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999995015325838	WITHOUT_CLASSIFICATION	4.984674161862159E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999997028251667	WITHOUT_CLASSIFICATION	2.971748332998086E-7	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999994210333306	WITHOUT_CLASSIFICATION	5.789666694239152E-7	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999994358009875	WITHOUT_CLASSIFICATION	5.641990125585603E-7	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999992699438223	WITHOUT_CLASSIFICATION	7.300561777483053E-7	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999995247161628	WITHOUT_CLASSIFICATION	4.752838371505878E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999994304652118	WITHOUT_CLASSIFICATION	5.69534788247577E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999995145329029	WITHOUT_CLASSIFICATION	4.854670970787497E-7	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999993035319023	WITHOUT_CLASSIFICATION	6.964680978050951E-7	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999992120337395	WITHOUT_CLASSIFICATION	7.879662605771047E-7	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999997615078391	WITHOUT_CLASSIFICATION	2.384921608688338E-7	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999996319816004	WITHOUT_CLASSIFICATION	3.6801839962141196E-7	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999996282655392	WITHOUT_CLASSIFICATION	3.717344607984881E-7	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999991297356826	WITHOUT_CLASSIFICATION	8.702643175296396E-7	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999993945684841	WITHOUT_CLASSIFICATION	6.054315159871159E-7	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999996484874103	WITHOUT_CLASSIFICATION	3.5151258970059797E-7	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999993572977508	WITHOUT_CLASSIFICATION	6.427022491770729E-7	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999990251908357	WITHOUT_CLASSIFICATION	9.748091643339988E-7	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999992034570997	WITHOUT_CLASSIFICATION	7.965429002808433E-7	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999996651393683	WITHOUT_CLASSIFICATION	3.3486063168965055E-7	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999996148074097	WITHOUT_CLASSIFICATION	3.851925902735378E-7	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999991881554018	WITHOUT_CLASSIFICATION	8.118445982850573E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999994217261327	WITHOUT_CLASSIFICATION	5.782738673548597E-7	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999995020428264	WITHOUT_CLASSIFICATION	4.979571736212914E-7	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999993874358218	WITHOUT_CLASSIFICATION	6.125641781937314E-7	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999990695195636	WITHOUT_CLASSIFICATION	9.304804364591857E-7	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.999999406448857	WITHOUT_CLASSIFICATION	5.935511430425693E-7	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999993459727665	WITHOUT_CLASSIFICATION	6.540272335376945E-7	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999993926344627	WITHOUT_CLASSIFICATION	6.073655373129269E-7	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999992967225979	WITHOUT_CLASSIFICATION	7.032774021398279E-7	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999992455878695	WITHOUT_CLASSIFICATION	7.544121305643232E-7	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999991426748064	WITHOUT_CLASSIFICATION	8.573251936925576E-7	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999994848971492	WITHOUT_CLASSIFICATION	5.151028508481523E-7	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999991862004041	WITHOUT_CLASSIFICATION	8.137995958611762E-7	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999993628620438	WITHOUT_CLASSIFICATION	6.371379561540833E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.999998893523084	WITHOUT_CLASSIFICATION	1.1064769160114686E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999994728763143	WITHOUT_CLASSIFICATION	5.271236857254301E-7	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999992120843345	WITHOUT_CLASSIFICATION	7.879156654990743E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999994286813955	WITHOUT_CLASSIFICATION	5.713186046092009E-7	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999989998927794	WITHOUT_CLASSIFICATION	1.0001072205607482E-6	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999996377913514	WITHOUT_CLASSIFICATION	3.6220864863260193E-7	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9999995201861366	WITHOUT_CLASSIFICATION	4.798138633986473E-7	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.999999396904084	WITHOUT_CLASSIFICATION	6.03095915971592E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999986631002938	WITHOUT_CLASSIFICATION	1.3368997060667202E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999996683659863	WITHOUT_CLASSIFICATION	3.3163401375925266E-7	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999995573642858	WITHOUT_CLASSIFICATION	4.4263571422679256E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999991510612816	WITHOUT_CLASSIFICATION	8.489387183591119E-7	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999985681394998	WITHOUT_CLASSIFICATION	1.431860500150478E-6	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999991784948653	WITHOUT_CLASSIFICATION	8.215051347540556E-7	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999995115409832	WITHOUT_CLASSIFICATION	4.884590167699076E-7	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999991957029121	WITHOUT_CLASSIFICATION	8.042970879069865E-7	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999986540264645	WITHOUT_CLASSIFICATION	1.3459735355517602E-6	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999990091849934	WITHOUT_CLASSIFICATION	9.908150066077734E-7	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999992478559513	WITHOUT_CLASSIFICATION	7.521440486575754E-7	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.999999059562952	WITHOUT_CLASSIFICATION	9.404370479393455E-7	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.999999076734289	WITHOUT_CLASSIFICATION	9.23265711060789E-7	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999989601148376	WITHOUT_CLASSIFICATION	1.0398851624282607E-6	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999993150761003	WITHOUT_CLASSIFICATION	6.849238997996413E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999989796793624	WITHOUT_CLASSIFICATION	1.0203206375583713E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999992148649199	WITHOUT_CLASSIFICATION	7.851350801828917E-7	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999990756241074	WITHOUT_CLASSIFICATION	9.243758925799066E-7	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999989637307186	WITHOUT_CLASSIFICATION	1.0362692814308704E-6	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999991662930197	WITHOUT_CLASSIFICATION	8.337069803426357E-7	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.999998726733843	WITHOUT_CLASSIFICATION	1.2732661569230192E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999991734671453	WITHOUT_CLASSIFICATION	8.265328547223604E-7	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999990886108603	WITHOUT_CLASSIFICATION	9.113891396151077E-7	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999989024017994	WITHOUT_CLASSIFICATION	1.0975982005831762E-6	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.999998849784298	WITHOUT_CLASSIFICATION	1.1502157020507638E-6	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999986214141111	WITHOUT_CLASSIFICATION	1.3785858889002898E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999986918741675	WITHOUT_CLASSIFICATION	1.3081258325834182E-6	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999987589366178	WITHOUT_CLASSIFICATION	1.2410633821211213E-6	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999990378691276	WITHOUT_CLASSIFICATION	9.62130872395682E-7	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999985697977233	WITHOUT_CLASSIFICATION	1.4302022768047652E-6	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999990665592663	WITHOUT_CLASSIFICATION	9.334407337788883E-7	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999982406935962	WITHOUT_CLASSIFICATION	1.759306403713833E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999988910637614	WITHOUT_CLASSIFICATION	1.108936238626417E-6	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999984112932946	WITHOUT_CLASSIFICATION	1.5887067053579866E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999992762549745	WITHOUT_CLASSIFICATION	7.237450254555644E-7	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999993935805365	WITHOUT_CLASSIFICATION	6.06419463563562E-7	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999994633451608	WITHOUT_CLASSIFICATION	5.36654839316978E-7	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999989269685068	WITHOUT_CLASSIFICATION	1.0730314932304452E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999994217039958	WITHOUT_CLASSIFICATION	5.782960041924092E-7	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999991798166213	WITHOUT_CLASSIFICATION	8.201833787865691E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999989233234917	WITHOUT_CLASSIFICATION	1.0766765082990726E-6	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999988958746012	WITHOUT_CLASSIFICATION	1.1041253988074824E-6	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999985258856254	WITHOUT_CLASSIFICATION	1.4741143745913705E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999992740756739	WITHOUT_CLASSIFICATION	7.259243260398171E-7	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999988285555731	WITHOUT_CLASSIFICATION	1.171444426906275E-6	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.999999136272099	WITHOUT_CLASSIFICATION	8.637279009411775E-7	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999996146637729	WITHOUT_CLASSIFICATION	3.8533622715158285E-7	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999995198954084	WITHOUT_CLASSIFICATION	4.801045917302248E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999994625022923	WITHOUT_CLASSIFICATION	5.374977077034228E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999997379997779	WITHOUT_CLASSIFICATION	2.6200022203276133E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999747663519661	WITHOUT_CLASSIFICATION	2.523364803385875E-5	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9813144083102993	WITHOUT_CLASSIFICATION	0.018685591689700715	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.999997743808684	WITHOUT_CLASSIFICATION	2.2561913160181527E-6	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999696127436101	WITHOUT_CLASSIFICATION	3.0387256389969018E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999881754335511	WITHOUT_CLASSIFICATION	1.1824566448834213E-5	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998608816354766	WITHOUT_CLASSIFICATION	1.3911836452331684E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9960061559583979	WITHOUT_CLASSIFICATION	0.003993844041602049	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9938446478455057	WITHOUT_CLASSIFICATION	0.00615535215449423	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999995053555188	WITHOUT_CLASSIFICATION	4.946444811918585E-6	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9993804885573112	WITHOUT_CLASSIFICATION	6.195114426887677E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9989120768506015	WITHOUT_CLASSIFICATION	0.0010879231493985135	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999987260210929	WITHOUT_CLASSIFICATION	1.2739789070709539E-6	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999979426979702	WITHOUT_CLASSIFICATION	2.0573020298704668E-6	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9805856085196668	WITHOUT_CLASSIFICATION	0.019414391480333183	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999956417850276	WITHOUT_CLASSIFICATION	4.358214972341754E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999977149934879	WITHOUT_CLASSIFICATION	2.2850065120983745E-6	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9996388530965872	WITHOUT_CLASSIFICATION	3.611469034128426E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999997325703376	WITHOUT_CLASSIFICATION	2.674296624037609E-6	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999995198944	WITHOUT_CLASSIFICATION	4.801056471992726E-10	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999046731814057	WITHOUT_CLASSIFICATION	9.532681859432317E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999018835399	WITHOUT_CLASSIFICATION	9.811646004581579E-8	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999998147115786	WITHOUT_CLASSIFICATION	1.8528842133588372E-7	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999985229789908	WITHOUT_CLASSIFICATION	1.4770210092046543E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999982066272675	WITHOUT_CLASSIFICATION	1.7933727326042193E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999982066272675	WITHOUT_CLASSIFICATION	1.7933727326042193E-6	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.5984629637703929	DESIGN	0.4015370362296072	WITHOUT_CLASSIFICATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9706532471910954	WITHOUT_CLASSIFICATION	0.029346752808904596	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9998371265967954	WITHOUT_CLASSIFICATION	1.628734032046903E-4	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9007729338963134	WITHOUT_CLASSIFICATION	0.09922706610368662	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999927358942688	WITHOUT_CLASSIFICATION	7.264105731186673E-6	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999997811568093	WITHOUT_CLASSIFICATION	2.1884319071265334E-7	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999137250696545	WITHOUT_CLASSIFICATION	8.627493034563151E-5	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999999924144033	WITHOUT_CLASSIFICATION	7.585596661850238E-9	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.7190182240225341	WITHOUT_CLASSIFICATION	0.28098177597746593	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999999682565266	WITHOUT_CLASSIFICATION	3.17434733407551E-8	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999990292263717	WITHOUT_CLASSIFICATION	9.707736282209453E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999977566005835	WITHOUT_CLASSIFICATION	2.2433994165475517E-6	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999998841003565	WITHOUT_CLASSIFICATION	1.1589964352170848E-7	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999940536795066	WITHOUT_CLASSIFICATION	5.94632049348239E-6	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999960003969534	WITHOUT_CLASSIFICATION	3.999603046618099E-6	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.999999744664142	WITHOUT_CLASSIFICATION	2.5533585799143164E-7	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999998490632774	WITHOUT_CLASSIFICATION	1.5093672253941779E-7	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9998735843943032	WITHOUT_CLASSIFICATION	1.26415605696865E-4	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9994451593173204	WITHOUT_CLASSIFICATION	5.548406826795987E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.999954267808986	WITHOUT_CLASSIFICATION	4.573219101394955E-5	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999986811357153	WITHOUT_CLASSIFICATION	1.3188642847466543E-6	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999683616047437	WITHOUT_CLASSIFICATION	3.163839525642032E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8124424906213019	DESIGN	0.1875575093786981	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999113634367801	WITHOUT_CLASSIFICATION	8.863656321989096E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8124424906213019	DESIGN	0.1875575093786981	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999454933331715	WITHOUT_CLASSIFICATION	5.4506666828558045E-5	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9997618818213794	WITHOUT_CLASSIFICATION	2.3811817862073759E-4	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.7497428752007445	DESIGN	0.25025712479925555	WITHOUT_CLASSIFICATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.999892711944302	WITHOUT_CLASSIFICATION	1.072880556979882E-4	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999963714949789	WITHOUT_CLASSIFICATION	3.628505021022421E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999969100951058	WITHOUT_CLASSIFICATION	3.0899048941828084E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999969100951058	WITHOUT_CLASSIFICATION	3.0899048941828084E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999969100951058	WITHOUT_CLASSIFICATION	3.0899048941828084E-6	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999984884926979	WITHOUT_CLASSIFICATION	1.5115073021190882E-6	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.99988600715126	WITHOUT_CLASSIFICATION	1.139928487400714E-4	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.999845928263851	WITHOUT_CLASSIFICATION	1.540717361489495E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997256530864196	WITHOUT_CLASSIFICATION	2.7434691358042254E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997256530864196	WITHOUT_CLASSIFICATION	2.7434691358042254E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997256530864196	WITHOUT_CLASSIFICATION	2.7434691358042254E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997256530864196	WITHOUT_CLASSIFICATION	2.7434691358042254E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997256530864196	WITHOUT_CLASSIFICATION	2.7434691358042254E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997256530864196	WITHOUT_CLASSIFICATION	2.7434691358042254E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999072508488779	WITHOUT_CLASSIFICATION	9.27491511221341E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999072508488779	WITHOUT_CLASSIFICATION	9.27491511221341E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999072508488779	WITHOUT_CLASSIFICATION	9.27491511221341E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999072508488779	WITHOUT_CLASSIFICATION	9.27491511221341E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999072508488779	WITHOUT_CLASSIFICATION	9.27491511221341E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992939748371343	WITHOUT_CLASSIFICATION	7.060251628656408E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992939748371343	WITHOUT_CLASSIFICATION	7.060251628656408E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992939748371343	WITHOUT_CLASSIFICATION	7.060251628656408E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992939748371343	WITHOUT_CLASSIFICATION	7.060251628656408E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992939748371343	WITHOUT_CLASSIFICATION	7.060251628656408E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999258280088145	WITHOUT_CLASSIFICATION	7.417199118552675E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999258280088145	WITHOUT_CLASSIFICATION	7.417199118552675E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999258280088145	WITHOUT_CLASSIFICATION	7.417199118552675E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999258280088145	WITHOUT_CLASSIFICATION	7.417199118552675E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999258280088145	WITHOUT_CLASSIFICATION	7.417199118552675E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999258280088145	WITHOUT_CLASSIFICATION	7.417199118552675E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999389615538913	WITHOUT_CLASSIFICATION	6.103844610866202E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999389615538913	WITHOUT_CLASSIFICATION	6.103844610866202E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999389615538913	WITHOUT_CLASSIFICATION	6.103844610866202E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999389615538913	WITHOUT_CLASSIFICATION	6.103844610866202E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999389615538913	WITHOUT_CLASSIFICATION	6.103844610866202E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999242501586099	WITHOUT_CLASSIFICATION	7.574984139011421E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999242501586099	WITHOUT_CLASSIFICATION	7.574984139011421E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999242501586099	WITHOUT_CLASSIFICATION	7.574984139011421E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999242501586099	WITHOUT_CLASSIFICATION	7.574984139011421E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999242501586099	WITHOUT_CLASSIFICATION	7.574984139011421E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999606278372575	WITHOUT_CLASSIFICATION	3.937216274248443E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999606278372575	WITHOUT_CLASSIFICATION	3.937216274248443E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999606278372575	WITHOUT_CLASSIFICATION	3.937216274248443E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999606278372575	WITHOUT_CLASSIFICATION	3.937216274248443E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999606278372575	WITHOUT_CLASSIFICATION	3.937216274248443E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999715499388158	WITHOUT_CLASSIFICATION	2.845006118429521E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999954931166617	WITHOUT_CLASSIFICATION	4.5068833383984734E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9998452935764286	WITHOUT_CLASSIFICATION	1.5470642357140552E-4	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9987615560533293	WITHOUT_CLASSIFICATION	0.0012384439466707467	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999426567644871	WITHOUT_CLASSIFICATION	5.7343235512793725E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999992624260582	WITHOUT_CLASSIFICATION	7.375739418407398E-7	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999989617841731	WITHOUT_CLASSIFICATION	1.038215826873148E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999993121279752	WITHOUT_CLASSIFICATION	6.878720247488281E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.999998807750416	WITHOUT_CLASSIFICATION	1.192249583886989E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999993590825211	WITHOUT_CLASSIFICATION	6.40917478738941E-7	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999989315424461	WITHOUT_CLASSIFICATION	1.0684575538857007E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999981649014003	WITHOUT_CLASSIFICATION	1.8350985997244255E-6	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.999999734400782	WITHOUT_CLASSIFICATION	2.655992178762389E-7	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999995893675908	WITHOUT_CLASSIFICATION	4.106324092854953E-7	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999989821744838	WITHOUT_CLASSIFICATION	1.0178255161588778E-6	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999987442449466	WITHOUT_CLASSIFICATION	1.255755053361549E-6	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.999998647146643	WITHOUT_CLASSIFICATION	1.3528533570476474E-6	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999988065334827	WITHOUT_CLASSIFICATION	1.1934665173289627E-6	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999978588375689	WITHOUT_CLASSIFICATION	2.1411624311140654E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999969830569718	WITHOUT_CLASSIFICATION	3.0169430281073196E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999989826493445	WITHOUT_CLASSIFICATION	1.017350655510555E-6	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999985600595996	WITHOUT_CLASSIFICATION	1.4399404003623755E-6	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.999998754122174	WITHOUT_CLASSIFICATION	1.2458778260871654E-6	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999981761723443	WITHOUT_CLASSIFICATION	1.8238276556756573E-6	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999984170382078	WITHOUT_CLASSIFICATION	1.5829617922148163E-6	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999977369425347	WITHOUT_CLASSIFICATION	2.2630574653063953E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999987097951837	WITHOUT_CLASSIFICATION	1.2902048164074384E-6	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999986930649344	WITHOUT_CLASSIFICATION	1.306935065612015E-6	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999975930270216	WITHOUT_CLASSIFICATION	2.406972978273802E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999989098384101	WITHOUT_CLASSIFICATION	1.0901615898703751E-6	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999989913532746	WITHOUT_CLASSIFICATION	1.008646725415579E-6	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999975649522682	WITHOUT_CLASSIFICATION	2.4350477318238158E-6	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999984476786176	WITHOUT_CLASSIFICATION	1.5523213824084232E-6	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999986332644152	WITHOUT_CLASSIFICATION	1.3667355847156544E-6	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999981674149867	WITHOUT_CLASSIFICATION	1.8325850133550923E-6	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999979898083228	WITHOUT_CLASSIFICATION	2.010191677329748E-6	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999974968760907	WITHOUT_CLASSIFICATION	2.5031239091815404E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999978640487861	WITHOUT_CLASSIFICATION	2.135951213939177E-6	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999985303338864	WITHOUT_CLASSIFICATION	1.4696661135979912E-6	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999993021349183	WITHOUT_CLASSIFICATION	6.978650816494673E-7	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999987457945952	WITHOUT_CLASSIFICATION	1.2542054046930133E-6	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999977957431181	WITHOUT_CLASSIFICATION	2.20425688185855E-6	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999979386056436	WITHOUT_CLASSIFICATION	2.061394356366574E-6	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999986485463168	WITHOUT_CLASSIFICATION	1.3514536832707608E-6	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999973796544223	WITHOUT_CLASSIFICATION	2.6203455777411832E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999986239985972	WITHOUT_CLASSIFICATION	1.376001402852594E-6	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999992743206908	WITHOUT_CLASSIFICATION	7.256793092897778E-7	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999992623805745	WITHOUT_CLASSIFICATION	7.376194255918206E-7	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999978551958457	WITHOUT_CLASSIFICATION	2.144804154282657E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999988878493671	WITHOUT_CLASSIFICATION	1.1121506329494403E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999982447155872	WITHOUT_CLASSIFICATION	1.7552844128368638E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999972928192743	WITHOUT_CLASSIFICATION	2.707180725759873E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999968293595775	WITHOUT_CLASSIFICATION	3.170640422578987E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999993359317145	WITHOUT_CLASSIFICATION	6.640682854264448E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999985678337	WITHOUT_CLASSIFICATION	1.4321662998884044E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999986215253502	WITHOUT_CLASSIFICATION	1.378474649804026E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999967940276068	WITHOUT_CLASSIFICATION	3.205972393204167E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999987515062208	WITHOUT_CLASSIFICATION	1.2484937793578574E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999991442981452	WITHOUT_CLASSIFICATION	8.557018549490257E-7	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999987237775597	WITHOUT_CLASSIFICATION	1.2762224403166517E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999984187318438	WITHOUT_CLASSIFICATION	1.5812681561896199E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999987213487177	WITHOUT_CLASSIFICATION	1.2786512823202352E-6	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999981637449389	WITHOUT_CLASSIFICATION	1.836255061083778E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.999997938424127	WITHOUT_CLASSIFICATION	2.061575873049372E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999987534286704	WITHOUT_CLASSIFICATION	1.2465713295219918E-6	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999984681920715	WITHOUT_CLASSIFICATION	1.5318079285074372E-6	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999985745707936	WITHOUT_CLASSIFICATION	1.4254292063485591E-6	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999987013988504	WITHOUT_CLASSIFICATION	1.2986011496866788E-6	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999978285930734	WITHOUT_CLASSIFICATION	2.171406926567384E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999975749621306	WITHOUT_CLASSIFICATION	2.425037869511323E-6	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999977663930041	WITHOUT_CLASSIFICATION	2.233606995886187E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999983827873987	WITHOUT_CLASSIFICATION	1.6172126013201063E-6	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999982832590778	WITHOUT_CLASSIFICATION	1.7167409222495556E-6	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999971631728235	WITHOUT_CLASSIFICATION	2.836827176410995E-6	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999978240725335	WITHOUT_CLASSIFICATION	2.175927466506958E-6	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999987213123138	WITHOUT_CLASSIFICATION	1.278687686172338E-6	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999986659007286	WITHOUT_CLASSIFICATION	1.3340992714363525E-6	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999987980380561	WITHOUT_CLASSIFICATION	1.2019619438897823E-6	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999977813784421	WITHOUT_CLASSIFICATION	2.2186215578854497E-6	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999974850510563	WITHOUT_CLASSIFICATION	2.514948943628455E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999986385263082	WITHOUT_CLASSIFICATION	1.3614736917992361E-6	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999977856860796	WITHOUT_CLASSIFICATION	2.214313920508076E-6	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999986915908824	WITHOUT_CLASSIFICATION	1.3084091176935614E-6	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999970149221188	WITHOUT_CLASSIFICATION	2.9850778811650737E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999981367525385	WITHOUT_CLASSIFICATION	1.863247461557042E-6	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999991364490886	WITHOUT_CLASSIFICATION	8.635509113371373E-7	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999983864171267	WITHOUT_CLASSIFICATION	1.6135828733190076E-6	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999974899170615	WITHOUT_CLASSIFICATION	2.5100829385228667E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999970675740403	WITHOUT_CLASSIFICATION	2.9324259597014885E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999988776998464	WITHOUT_CLASSIFICATION	1.122300153564729E-6	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999987442803637	WITHOUT_CLASSIFICATION	1.255719636237607E-6	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999979695451158	WITHOUT_CLASSIFICATION	2.0304548843054703E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999982601424939	WITHOUT_CLASSIFICATION	1.739857506113463E-6	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999975676810069	WITHOUT_CLASSIFICATION	2.4323189931463658E-6	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999994434787708	WITHOUT_CLASSIFICATION	5.565212292584375E-7	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999990100257959	WITHOUT_CLASSIFICATION	9.899742041068387E-7	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999992260593095	WITHOUT_CLASSIFICATION	7.739406905510886E-7	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999991550354971	WITHOUT_CLASSIFICATION	8.449645028958215E-7	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999993053172043	WITHOUT_CLASSIFICATION	6.946827957667835E-7	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999990150816189	WITHOUT_CLASSIFICATION	9.849183810771664E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999987626929908	WITHOUT_CLASSIFICATION	1.2373070091956567E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999987101676461	WITHOUT_CLASSIFICATION	1.2898323538806376E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999985699235605	WITHOUT_CLASSIFICATION	1.4300764394764997E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999988794456061	WITHOUT_CLASSIFICATION	1.1205543939367083E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.999997955931834	WITHOUT_CLASSIFICATION	2.0440681660273706E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999986812664107	WITHOUT_CLASSIFICATION	1.3187335893316817E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999991591015567	WITHOUT_CLASSIFICATION	8.408984432866837E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999993291871784	WITHOUT_CLASSIFICATION	6.708128216877319E-7	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999996537246191	WITHOUT_CLASSIFICATION	3.462753809551663E-7	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999995724299502	WITHOUT_CLASSIFICATION	4.2757004987468887E-7	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.999998779777069	WITHOUT_CLASSIFICATION	1.2202229309597378E-6	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999992755181298	WITHOUT_CLASSIFICATION	7.244818702649797E-7	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999992791051148	WITHOUT_CLASSIFICATION	7.208948853126462E-7	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999993539476321	WITHOUT_CLASSIFICATION	6.460523678954773E-7	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999987670535478	WITHOUT_CLASSIFICATION	1.2329464521815347E-6	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999991513742961	WITHOUT_CLASSIFICATION	8.486257039145639E-7	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999985522615785	WITHOUT_CLASSIFICATION	1.4477384215430604E-6	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999980664436744	WITHOUT_CLASSIFICATION	1.933556325504037E-6	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999983461075359	WITHOUT_CLASSIFICATION	1.653892464073464E-6	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999988286905185	WITHOUT_CLASSIFICATION	1.171309481509117E-6	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999986630121531	WITHOUT_CLASSIFICATION	1.3369878469624446E-6	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999985997317887	WITHOUT_CLASSIFICATION	1.4002682112405687E-6	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999991233497546	WITHOUT_CLASSIFICATION	8.766502453642869E-7	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.999999121348288	WITHOUT_CLASSIFICATION	8.786517119286007E-7	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999984196847324	WITHOUT_CLASSIFICATION	1.58031526760936E-6	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999993095729796	WITHOUT_CLASSIFICATION	6.904270204407375E-7	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999981305807928	WITHOUT_CLASSIFICATION	1.8694192072982868E-6	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999989023910949	WITHOUT_CLASSIFICATION	1.097608905093234E-6	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999992202941431	WITHOUT_CLASSIFICATION	7.797058569059439E-7	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999990011318677	WITHOUT_CLASSIFICATION	9.988681323880238E-7	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999980322306378	WITHOUT_CLASSIFICATION	1.9677693622774525E-6	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999989930898968	WITHOUT_CLASSIFICATION	1.0069101031817207E-6	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999983325827904	WITHOUT_CLASSIFICATION	1.6674172097668017E-6	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999980371633642	WITHOUT_CLASSIFICATION	1.9628366358529784E-6	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999975164011445	WITHOUT_CLASSIFICATION	2.483598855401466E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.99999775383211	WITHOUT_CLASSIFICATION	2.2461678899664134E-6	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999987082089526	WITHOUT_CLASSIFICATION	1.2917910474034485E-6	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999994923540126	WITHOUT_CLASSIFICATION	5.076459873350449E-7	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999997010107017	WITHOUT_CLASSIFICATION	2.989892982283412E-7	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999995598509793	WITHOUT_CLASSIFICATION	4.401490206885378E-7	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.99999954037505	WITHOUT_CLASSIFICATION	4.5962495004745575E-7	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.999999555025739	WITHOUT_CLASSIFICATION	4.4497426093358943E-7	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999995119556304	WITHOUT_CLASSIFICATION	4.880443695028265E-7	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999994698002201	WITHOUT_CLASSIFICATION	5.301997798320921E-7	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999994371773515	WITHOUT_CLASSIFICATION	5.628226484704174E-7	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999992624463775	WITHOUT_CLASSIFICATION	7.375536225232574E-7	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999994701459733	WITHOUT_CLASSIFICATION	5.298540267507169E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999994845128363	WITHOUT_CLASSIFICATION	5.154871638078494E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.999998780527251	WITHOUT_CLASSIFICATION	1.219472749074232E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999993724748926	WITHOUT_CLASSIFICATION	6.27525107311173E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.999999458840548	WITHOUT_CLASSIFICATION	5.411594520524203E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999994870533098	WITHOUT_CLASSIFICATION	5.129466901769221E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999993183764917	WITHOUT_CLASSIFICATION	6.816235082429906E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.999999541868299	WITHOUT_CLASSIFICATION	4.581317009874064E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999995015325838	WITHOUT_CLASSIFICATION	4.984674161862159E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999994304652118	WITHOUT_CLASSIFICATION	5.69534788247577E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999995145329029	WITHOUT_CLASSIFICATION	4.854670970787497E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999992875810572	WITHOUT_CLASSIFICATION	7.124189427167737E-7	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999995396632445	WITHOUT_CLASSIFICATION	4.603367553911065E-7	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999996163818832	WITHOUT_CLASSIFICATION	3.836181168545114E-7	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999995983446416	WITHOUT_CLASSIFICATION	4.0165535844212315E-7	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999995165471255	WITHOUT_CLASSIFICATION	4.834528744538453E-7	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999994923921065	WITHOUT_CLASSIFICATION	5.076078935011809E-7	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999989135712644	WITHOUT_CLASSIFICATION	1.0864287356935074E-6	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999982338234364	WITHOUT_CLASSIFICATION	1.7661765636505348E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999993770601651	WITHOUT_CLASSIFICATION	6.229398348981343E-7	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999993886515699	WITHOUT_CLASSIFICATION	6.113484301138004E-7	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999989383862357	WITHOUT_CLASSIFICATION	1.0616137643031555E-6	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999993481179733	WITHOUT_CLASSIFICATION	6.518820267528573E-7	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999989743644424	WITHOUT_CLASSIFICATION	1.0256355576537626E-6	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999990479788011	WITHOUT_CLASSIFICATION	9.520211988781871E-7	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999991190487626	WITHOUT_CLASSIFICATION	8.809512372823912E-7	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999993001477034	WITHOUT_CLASSIFICATION	6.998522965370909E-7	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999989612480699	WITHOUT_CLASSIFICATION	1.0387519301620063E-6	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999987531833332	WITHOUT_CLASSIFICATION	1.2468166668487276E-6	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999996987700466	WITHOUT_CLASSIFICATION	3.012299533350332E-7	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999993406469387	WITHOUT_CLASSIFICATION	6.593530611945574E-7	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999984507341478	WITHOUT_CLASSIFICATION	1.549265852074138E-6	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999994323115823	WITHOUT_CLASSIFICATION	5.676884177324063E-7	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.99999930184143	WITHOUT_CLASSIFICATION	6.981585699178555E-7	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999994242854156	WITHOUT_CLASSIFICATION	5.757145844385267E-7	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.999999161495631	WITHOUT_CLASSIFICATION	8.385043691400076E-7	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999994101349063	WITHOUT_CLASSIFICATION	5.898650936664316E-7	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999994981551206	WITHOUT_CLASSIFICATION	5.018448795175029E-7	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999996371179206	WITHOUT_CLASSIFICATION	3.6288207934822843E-7	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999993182767394	WITHOUT_CLASSIFICATION	6.817232605490524E-7	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999996377583176	WITHOUT_CLASSIFICATION	3.6224168236366603E-7	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999994597812302	WITHOUT_CLASSIFICATION	5.40218769762307E-7	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999990571886522	WITHOUT_CLASSIFICATION	9.42811347838346E-7	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999993506514717	WITHOUT_CLASSIFICATION	6.493485282531234E-7	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999996120676594	WITHOUT_CLASSIFICATION	3.879323405927206E-7	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.999999573325514	WITHOUT_CLASSIFICATION	4.2667448590456015E-7	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999994132545321	WITHOUT_CLASSIFICATION	5.867454677976502E-7	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999995181184662	WITHOUT_CLASSIFICATION	4.818815337818185E-7	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.999999584241246	WITHOUT_CLASSIFICATION	4.157587539625802E-7	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999994670961264	WITHOUT_CLASSIFICATION	5.329038735797528E-7	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999994217261327	WITHOUT_CLASSIFICATION	5.782738673548597E-7	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999993459727665	WITHOUT_CLASSIFICATION	6.540272335376945E-7	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999993926344627	WITHOUT_CLASSIFICATION	6.073655373129269E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.999999346178301	WITHOUT_CLASSIFICATION	6.538216990697234E-7	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999994728763143	WITHOUT_CLASSIFICATION	5.271236857254301E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999994286813955	WITHOUT_CLASSIFICATION	5.713186046092009E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999986631002938	WITHOUT_CLASSIFICATION	1.3368997060667202E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999996683659863	WITHOUT_CLASSIFICATION	3.3163401375925266E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999989796793624	WITHOUT_CLASSIFICATION	1.0203206375583713E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999992148649199	WITHOUT_CLASSIFICATION	7.851350801828917E-7	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999995501929965	WITHOUT_CLASSIFICATION	4.498070035376058E-7	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999990365158522	WITHOUT_CLASSIFICATION	9.634841478202175E-7	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9999989462226476	WITHOUT_CLASSIFICATION	1.0537773523864516E-6	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999993879834069	WITHOUT_CLASSIFICATION	6.120165930025436E-7	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999990432080729	WITHOUT_CLASSIFICATION	9.567919270821996E-7	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999994316068702	WITHOUT_CLASSIFICATION	5.683931297582477E-7	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999989850621086	WITHOUT_CLASSIFICATION	1.0149378914326061E-6	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999995277970171	WITHOUT_CLASSIFICATION	4.7220298303542247E-7	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.99999933165197	WITHOUT_CLASSIFICATION	6.68348029984951E-7	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999991534706082	WITHOUT_CLASSIFICATION	8.465293918708667E-7	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999989476118946	WITHOUT_CLASSIFICATION	1.052388105440477E-6	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.999998668678577	WITHOUT_CLASSIFICATION	1.3313214230660037E-6	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999988743808038	WITHOUT_CLASSIFICATION	1.1256191961574224E-6	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999990310628315	WITHOUT_CLASSIFICATION	9.689371685409098E-7	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999989519888074	WITHOUT_CLASSIFICATION	1.048011192585268E-6	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.999999381688338	WITHOUT_CLASSIFICATION	6.183116620047158E-7	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999989016578514	WITHOUT_CLASSIFICATION	1.0983421485338905E-6	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999993755418419	WITHOUT_CLASSIFICATION	6.244581581360682E-7	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999989123687298	WITHOUT_CLASSIFICATION	1.0876312700985109E-6	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999990670022606	WITHOUT_CLASSIFICATION	9.329977394455244E-7	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999994417156278	WITHOUT_CLASSIFICATION	5.582843721240111E-7	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999994863515604	WITHOUT_CLASSIFICATION	5.136484396657912E-7	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999995708078961	WITHOUT_CLASSIFICATION	4.2919210391828043E-7	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999992080649268	WITHOUT_CLASSIFICATION	7.919350731313034E-7	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999988803112343	WITHOUT_CLASSIFICATION	1.119688765707674E-6	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999994863270849	WITHOUT_CLASSIFICATION	5.136729151370229E-7	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999992717166204	WITHOUT_CLASSIFICATION	7.282833795851704E-7	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999994624956863	WITHOUT_CLASSIFICATION	5.375043137140538E-7	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999990015387824	WITHOUT_CLASSIFICATION	9.984612176161873E-7	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999993669312434	WITHOUT_CLASSIFICATION	6.330687566012079E-7	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999991599224008	WITHOUT_CLASSIFICATION	8.400775992318543E-7	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999992990331261	WITHOUT_CLASSIFICATION	7.009668737555438E-7	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999990876495375	WITHOUT_CLASSIFICATION	9.123504625147631E-7	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999995187845495	WITHOUT_CLASSIFICATION	4.812154505010609E-7	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999994812951252	WITHOUT_CLASSIFICATION	5.187048747104793E-7	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999995290724876	WITHOUT_CLASSIFICATION	4.7092751233713195E-7	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999990205190791	WITHOUT_CLASSIFICATION	9.794809208219075E-7	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999991242750448	WITHOUT_CLASSIFICATION	8.757249551022194E-7	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999989305831335	WITHOUT_CLASSIFICATION	1.0694168664486666E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999987217964454	WITHOUT_CLASSIFICATION	1.2782035545289355E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999991734671453	WITHOUT_CLASSIFICATION	8.265328547223604E-7	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999990886108603	WITHOUT_CLASSIFICATION	9.113891396151077E-7	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999992762549745	WITHOUT_CLASSIFICATION	7.237450254555644E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999981502646186	WITHOUT_CLASSIFICATION	1.8497353813713921E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999994633451608	WITHOUT_CLASSIFICATION	5.36654839316978E-7	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999994217039958	WITHOUT_CLASSIFICATION	5.782960041924092E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999989233234917	WITHOUT_CLASSIFICATION	1.0766765082990726E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999994625022923	WITHOUT_CLASSIFICATION	5.374977077034228E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999997379997779	WITHOUT_CLASSIFICATION	2.6200022203276133E-7	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999988160106836	WITHOUT_CLASSIFICATION	1.1839893163357956E-6	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999992617794704	WITHOUT_CLASSIFICATION	7.382205296964731E-7	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999991837598207	WITHOUT_CLASSIFICATION	8.162401793024732E-7	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999993253377744	WITHOUT_CLASSIFICATION	6.746622256552332E-7	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999980460522356	WITHOUT_CLASSIFICATION	1.9539477643021867E-6	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999982363174459	WITHOUT_CLASSIFICATION	1.7636825541828373E-6	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999986685829865	WITHOUT_CLASSIFICATION	1.3314170135306825E-6	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999987108694295	WITHOUT_CLASSIFICATION	1.2891305704893957E-6	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999985555425861	WITHOUT_CLASSIFICATION	1.444457413905954E-6	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.999999178814305	WITHOUT_CLASSIFICATION	8.211856949076491E-7	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999986018105443	WITHOUT_CLASSIFICATION	1.3981894556209266E-6	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999987855940061	WITHOUT_CLASSIFICATION	1.2144059938779117E-6	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999995263572714	WITHOUT_CLASSIFICATION	4.736427285233388E-7	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999987972813493	WITHOUT_CLASSIFICATION	1.2027186507485646E-6	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999988215047562	WITHOUT_CLASSIFICATION	1.1784952437839688E-6	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999993520346265	WITHOUT_CLASSIFICATION	6.47965373397476E-7	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999989781747765	WITHOUT_CLASSIFICATION	1.021825223502364E-6	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999989918106998	WITHOUT_CLASSIFICATION	1.0081893001578322E-6	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999992950595816	WITHOUT_CLASSIFICATION	7.049404184990183E-7	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999985891950728	WITHOUT_CLASSIFICATION	1.4108049272430683E-6	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999984407241564	WITHOUT_CLASSIFICATION	1.5592758434692736E-6	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999992441914526	WITHOUT_CLASSIFICATION	7.558085474081909E-7	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999986672182226	WITHOUT_CLASSIFICATION	1.3327817773667418E-6	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999984537515714	WITHOUT_CLASSIFICATION	1.5462484286607808E-6	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999979350784456	WITHOUT_CLASSIFICATION	2.0649215543547962E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.999999538076144	WITHOUT_CLASSIFICATION	4.6192385601498333E-7	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999993110711384	WITHOUT_CLASSIFICATION	6.88928861653661E-7	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999991464016073	WITHOUT_CLASSIFICATION	8.535983926643188E-7	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.999998796913496	WITHOUT_CLASSIFICATION	1.2030865039653974E-6	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999987171406616	WITHOUT_CLASSIFICATION	1.2828593384702667E-6	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.999999661048563	WITHOUT_CLASSIFICATION	3.389514369174648E-7	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999996430377431	WITHOUT_CLASSIFICATION	3.5696225691362744E-7	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.999999306434404	WITHOUT_CLASSIFICATION	6.935655959684727E-7	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999996218701339	WITHOUT_CLASSIFICATION	3.7812986612971235E-7	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999995679437632	WITHOUT_CLASSIFICATION	4.3205623676733786E-7	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999997773080928	WITHOUT_CLASSIFICATION	2.2269190728301184E-7	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999997227914627	WITHOUT_CLASSIFICATION	2.77208537305445E-7	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999995479153141	WITHOUT_CLASSIFICATION	4.520846858321946E-7	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999994878746743	WITHOUT_CLASSIFICATION	5.121253258009139E-7	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9960061559583979	WITHOUT_CLASSIFICATION	0.003993844041602049	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9938446478455057	WITHOUT_CLASSIFICATION	0.00615535215449423	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999979426979702	WITHOUT_CLASSIFICATION	2.0573020298704668E-6	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999956417850276	WITHOUT_CLASSIFICATION	4.358214972341754E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999977149934879	WITHOUT_CLASSIFICATION	2.2850065120983745E-6	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9996388530965872	WITHOUT_CLASSIFICATION	3.611469034128426E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999997325703376	WITHOUT_CLASSIFICATION	2.674296624037609E-6	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999840337014	WITHOUT_CLASSIFICATION	1.5966298618540878E-8	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.999999559438005	WITHOUT_CLASSIFICATION	4.405619949863975E-7	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999993602157653	WITHOUT_CLASSIFICATION	6.397842347208518E-7	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999996943847846	WITHOUT_CLASSIFICATION	3.0561521540535425E-7	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999994239900996	WITHOUT_CLASSIFICATION	5.760099005102282E-7	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999992472591116	WITHOUT_CLASSIFICATION	7.527408884169021E-7	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999994453856922	WITHOUT_CLASSIFICATION	5.546143078268767E-7	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999995740025197	WITHOUT_CLASSIFICATION	4.259974803428439E-7	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999993477469878	WITHOUT_CLASSIFICATION	6.522530121798391E-7	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999989846800483	WITHOUT_CLASSIFICATION	1.015319951712456E-6	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999994658227319	WITHOUT_CLASSIFICATION	5.341772681777497E-7	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999992118970213	WITHOUT_CLASSIFICATION	7.881029786278852E-7	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999993799811732	WITHOUT_CLASSIFICATION	6.200188267634608E-7	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999994871943757	WITHOUT_CLASSIFICATION	5.12805624265924E-7	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.999999371197804	WITHOUT_CLASSIFICATION	6.288021959740176E-7	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999993472550144	WITHOUT_CLASSIFICATION	6.52744985580392E-7	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999988933358813	WITHOUT_CLASSIFICATION	1.106664118699123E-6	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999991754846278	WITHOUT_CLASSIFICATION	8.245153722789605E-7	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999994352680328	WITHOUT_CLASSIFICATION	5.647319671103411E-7	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999996227172839	WITHOUT_CLASSIFICATION	3.772827160894931E-7	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999991664668507	WITHOUT_CLASSIFICATION	8.335331494293791E-7	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999992631579633	WITHOUT_CLASSIFICATION	7.368420367325897E-7	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999985257728806	WITHOUT_CLASSIFICATION	1.4742271193604348E-6	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999997625208185	WITHOUT_CLASSIFICATION	2.3747918151350605E-7	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9996908309535081	WITHOUT_CLASSIFICATION	3.0916904649188606E-4	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9970977823163205	WITHOUT_CLASSIFICATION	0.0029022176836794975	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999991606978479	WITHOUT_CLASSIFICATION	8.39302152078817E-7	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999858142964902	WITHOUT_CLASSIFICATION	1.4185703509800874E-5	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999887252702	WITHOUT_CLASSIFICATION	1.127472976334592E-8	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9993974901148346	WITHOUT_CLASSIFICATION	6.025098851654175E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999046731814057	WITHOUT_CLASSIFICATION	9.532681859432317E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999018835399	WITHOUT_CLASSIFICATION	9.811646004581579E-8	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999982066272675	WITHOUT_CLASSIFICATION	1.7933727326042193E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999982066272675	WITHOUT_CLASSIFICATION	1.7933727326042193E-6	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9979804510224604	DESIGN	0.002019548977539601	WITHOUT_CLASSIFICATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999880454485307	WITHOUT_CLASSIFICATION	1.195455146937779E-5	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999808994477	WITHOUT_CLASSIFICATION	1.9100552184598423E-8	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999999156485196	WITHOUT_CLASSIFICATION	8.435148038209736E-8	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999988693960684	WITHOUT_CLASSIFICATION	1.1306039315658752E-6	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999461601486637	WITHOUT_CLASSIFICATION	5.383985133625745E-5	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9963342734172743	WITHOUT_CLASSIFICATION	0.0036657265827256765	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999710687264344	WITHOUT_CLASSIFICATION	2.8931273565603697E-5	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999987971467321	WITHOUT_CLASSIFICATION	1.2028532679028727E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999788207423229	WITHOUT_CLASSIFICATION	2.1179257677146424E-5	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.692134668337573	DESIGN	0.307865331662427	WITHOUT_CLASSIFICATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9016514341191839	WITHOUT_CLASSIFICATION	0.09834856588081599	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999998887542553	WITHOUT_CLASSIFICATION	1.1124574465947087E-7	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999994615709258	WITHOUT_CLASSIFICATION	5.3842907418846E-7	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999152100534446	WITHOUT_CLASSIFICATION	8.478994655542168E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999152100534446	WITHOUT_CLASSIFICATION	8.478994655542168E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9943485810970214	WITHOUT_CLASSIFICATION	0.005651418902978486	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999920313470603	WITHOUT_CLASSIFICATION	7.968652939663934E-6	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999997544937465	WITHOUT_CLASSIFICATION	2.455062535536317E-7	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999802354227001	WITHOUT_CLASSIFICATION	1.9764577299861167E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974313759092964	WITHOUT_CLASSIFICATION	0.0025686240907035595	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999797435443	WITHOUT_CLASSIFICATION	2.025645569173388E-7	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999993847279198	WITHOUT_CLASSIFICATION	6.152720801995411E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999797435443	WITHOUT_CLASSIFICATION	2.025645569173388E-7	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9802225603572013	DESIGN	0.01977743964279864	WITHOUT_CLASSIFICATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999647143337	WITHOUT_CLASSIFICATION	3.5285666299786904E-7	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9884242893531268	WITHOUT_CLASSIFICATION	0.011575710646873306	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9881416421815081	WITHOUT_CLASSIFICATION	0.011858357818491885	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9998805006148636	WITHOUT_CLASSIFICATION	1.1949938513644372E-4	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999708050114785	WITHOUT_CLASSIFICATION	2.919498852140262E-5	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9994430765131522	WITHOUT_CLASSIFICATION	5.569234868477394E-4	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999997759735644	WITHOUT_CLASSIFICATION	2.2402643560753955E-6	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999996868925142	WITHOUT_CLASSIFICATION	3.131074858479775E-7	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9989362065204462	WITHOUT_CLASSIFICATION	0.0010637934795538176	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.5142656186379957	WITHOUT_CLASSIFICATION	0.48573438136200436	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999792855852493	WITHOUT_CLASSIFICATION	2.071441475077114E-5	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999134652602107	WITHOUT_CLASSIFICATION	8.653473978922434E-5	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9961770401511085	WITHOUT_CLASSIFICATION	0.003822959848891433	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999999833700387	WITHOUT_CLASSIFICATION	1.6629961305055516E-7	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999999833700387	WITHOUT_CLASSIFICATION	1.6629961305055516E-7	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999985046186702	WITHOUT_CLASSIFICATION	1.4953813298007126E-6	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998698475186679	WITHOUT_CLASSIFICATION	1.3015248133195202E-4	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999998437496725	WITHOUT_CLASSIFICATION	1.5625032747034764E-7	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999998565116562	WITHOUT_CLASSIFICATION	1.4348834381530703E-7	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999036223646	WITHOUT_CLASSIFICATION	9.637763539289023E-8	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999797435443	WITHOUT_CLASSIFICATION	2.025645569173388E-7	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999968368510588	WITHOUT_CLASSIFICATION	3.1631489413130056E-6	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999986920151	WITHOUT_CLASSIFICATION	1.3079849466893943E-9	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9998966330598933	WITHOUT_CLASSIFICATION	1.0336694010670651E-4	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999982937442786	WITHOUT_CLASSIFICATION	1.7062557213474145E-6	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.999965778964074	WITHOUT_CLASSIFICATION	3.422103592607245E-5	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999993151302	WITHOUT_CLASSIFICATION	6.848698573781338E-10	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999999731533038	WITHOUT_CLASSIFICATION	2.6846696229951305E-8	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999971410106626	WITHOUT_CLASSIFICATION	2.8589893374688177E-6	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.5657476445439371	DESIGN	0.43425235545606305	WITHOUT_CLASSIFICATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.5893283505123297	DESIGN	0.4106716494876703	WITHOUT_CLASSIFICATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.999915406197621	WITHOUT_CLASSIFICATION	8.459380237909152E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999763798275548	WITHOUT_CLASSIFICATION	2.3620172445249277E-5	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9964367232114734	WITHOUT_CLASSIFICATION	0.00356327678852657	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999868345832658	WITHOUT_CLASSIFICATION	1.3165416734333555E-5	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9939031644311255	DESIGN	0.006096835568874556	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9949381536585987	WITHOUT_CLASSIFICATION	0.005061846341401269	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999562009970483	WITHOUT_CLASSIFICATION	4.379900295176964E-5	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9999825422308131	WITHOUT_CLASSIFICATION	1.7457769186889193E-5	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999676244268382	WITHOUT_CLASSIFICATION	3.237557316188331E-5	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999858094025036	WITHOUT_CLASSIFICATION	1.4190597496347063E-5	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999909891674525	WITHOUT_CLASSIFICATION	9.01083254740885E-6	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999887249244479	WITHOUT_CLASSIFICATION	1.1275075552061321E-5	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999698413262621	WITHOUT_CLASSIFICATION	3.015867373781236E-5	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999967465887821	WITHOUT_CLASSIFICATION	3.2534112178708655E-6	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999985593459844	WITHOUT_CLASSIFICATION	1.4406540156195934E-5	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999817317774755	WITHOUT_CLASSIFICATION	1.8268222524473673E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9998012804251066	WITHOUT_CLASSIFICATION	1.9871957489331677E-4	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999919502690945	WITHOUT_CLASSIFICATION	8.049730905544305E-6	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9798904490620554	WITHOUT_CLASSIFICATION	0.02010955093794465	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999575425449928	WITHOUT_CLASSIFICATION	4.245745500712665E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999748334635935	WITHOUT_CLASSIFICATION	2.5166536406476985E-5	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999958127262283	WITHOUT_CLASSIFICATION	4.187273771752741E-6	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9985264778378076	WITHOUT_CLASSIFICATION	0.0014735221621923632	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999998941206513	WITHOUT_CLASSIFICATION	1.0587934884349634E-7	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9996105552309935	WITHOUT_CLASSIFICATION	3.8944476900648145E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999650574103751	WITHOUT_CLASSIFICATION	3.4942589624908406E-5	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999899214859352	WITHOUT_CLASSIFICATION	1.0078514064812696E-5	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.999794116921521	WITHOUT_CLASSIFICATION	2.058830784790163E-4	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9998964798920414	WITHOUT_CLASSIFICATION	1.0352010795851456E-4	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9946176715693729	WITHOUT_CLASSIFICATION	0.005382328430627193	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999840337014	WITHOUT_CLASSIFICATION	1.5966298618540878E-8	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999999988231688	WITHOUT_CLASSIFICATION	1.1768311952667142E-8	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999509937161486	WITHOUT_CLASSIFICATION	4.900628385150088E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999996138173308	WITHOUT_CLASSIFICATION	3.861826692372126E-7	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997555223846	WITHOUT_CLASSIFICATION	2.444776153635174E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999647143337	WITHOUT_CLASSIFICATION	3.5285666299786904E-7	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999816590529782	WITHOUT_CLASSIFICATION	1.8340947021758583E-5	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9923535489931211	DESIGN	0.007646451006878883	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999142736335053	WITHOUT_CLASSIFICATION	8.572636649468384E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999998783447191	WITHOUT_CLASSIFICATION	1.216552808997221E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999998783447191	WITHOUT_CLASSIFICATION	1.216552808997221E-6	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9991164837053916	WITHOUT_CLASSIFICATION	8.835162946084279E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9991164837053916	WITHOUT_CLASSIFICATION	8.835162946084279E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9991164837053916	WITHOUT_CLASSIFICATION	8.835162946084279E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9998212375931702	WITHOUT_CLASSIFICATION	1.7876240682986302E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9998212375931702	WITHOUT_CLASSIFICATION	1.7876240682986302E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999924544005705	WITHOUT_CLASSIFICATION	7.545599429496388E-6	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999924544005705	WITHOUT_CLASSIFICATION	7.545599429496388E-6	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999999886291	WITHOUT_CLASSIFICATION	1.1370795432360587E-11	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999999888276034	WITHOUT_CLASSIFICATION	1.1172396532161382E-8	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999805528463104	WITHOUT_CLASSIFICATION	1.9447153689665136E-5	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999805528463104	WITHOUT_CLASSIFICATION	1.9447153689665136E-5	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999869787257083	WITHOUT_CLASSIFICATION	1.302127429168368E-5	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9994915844772329	WITHOUT_CLASSIFICATION	5.084155227671598E-4	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9997778946243683	WITHOUT_CLASSIFICATION	2.2210537563179046E-4	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999998257810525	WITHOUT_CLASSIFICATION	1.742189474247267E-7	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999450916711	WITHOUT_CLASSIFICATION	5.49083289545583E-8	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9940014678874702	WITHOUT_CLASSIFICATION	0.005998532112529777	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999851925958922	WITHOUT_CLASSIFICATION	1.4807404107707282E-5	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9991822386768988	WITHOUT_CLASSIFICATION	8.177613231011702E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999963103459302	WITHOUT_CLASSIFICATION	3.6896540698517773E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999935429701425	WITHOUT_CLASSIFICATION	6.457029857565942E-6	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999590067381858	WITHOUT_CLASSIFICATION	4.099326181427524E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999980039481684	WITHOUT_CLASSIFICATION	1.996051831572269E-6	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999968681234673	WITHOUT_CLASSIFICATION	3.1318765327220605E-6	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9998963337157634	WITHOUT_CLASSIFICATION	1.0366628423655398E-4	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999833667360315	WITHOUT_CLASSIFICATION	1.6633263968445834E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.997408339347238	WITHOUT_CLASSIFICATION	0.002591660652761884	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9946828377450861	WITHOUT_CLASSIFICATION	0.005317162254913857	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999443881949771	WITHOUT_CLASSIFICATION	5.561180502294608E-5	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999961466846855	WITHOUT_CLASSIFICATION	3.853315314538801E-6	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.996327929923305	WITHOUT_CLASSIFICATION	0.0036720700766950344	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999848390155053	WITHOUT_CLASSIFICATION	1.5160984494666191E-5	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999809532585263	WITHOUT_CLASSIFICATION	1.9046741473676386E-5	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999979143792924	WITHOUT_CLASSIFICATION	2.0856207076003548E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999997004280768	WITHOUT_CLASSIFICATION	2.9957192319036607E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999995861082823	WITHOUT_CLASSIFICATION	4.1389171770173317E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999986075452816	WITHOUT_CLASSIFICATION	1.3924547184530134E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997541716689	WITHOUT_CLASSIFICATION	2.4582833112777683E-7	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.99999979429926	WITHOUT_CLASSIFICATION	2.0570073998819827E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999489184484	WITHOUT_CLASSIFICATION	5.108155160216443E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999992942519711	WITHOUT_CLASSIFICATION	7.057480289205923E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999976256555694	WITHOUT_CLASSIFICATION	2.374344430600646E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993001369243	WITHOUT_CLASSIFICATION	6.998630757671814E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990330619665	WITHOUT_CLASSIFICATION	9.669380336186017E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999957892974749	WITHOUT_CLASSIFICATION	4.2107025251836375E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990330619665	WITHOUT_CLASSIFICATION	9.669380336186017E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990330619665	WITHOUT_CLASSIFICATION	9.669380336186017E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990330619665	WITHOUT_CLASSIFICATION	9.669380336186017E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990330619665	WITHOUT_CLASSIFICATION	9.669380336186017E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990330619665	WITHOUT_CLASSIFICATION	9.669380336186017E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990330619665	WITHOUT_CLASSIFICATION	9.669380336186017E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999957892974749	WITHOUT_CLASSIFICATION	4.2107025251836375E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999957892974749	WITHOUT_CLASSIFICATION	4.2107025251836375E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999957892974749	WITHOUT_CLASSIFICATION	4.2107025251836375E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999957892974749	WITHOUT_CLASSIFICATION	4.2107025251836375E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999957892974749	WITHOUT_CLASSIFICATION	4.2107025251836375E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999957892974749	WITHOUT_CLASSIFICATION	4.2107025251836375E-6	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999996984621025	WITHOUT_CLASSIFICATION	3.0153789754000027E-7	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999996428565178	WITHOUT_CLASSIFICATION	3.571434822342967E-7	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.999998628803854	WITHOUT_CLASSIFICATION	1.3711961459029045E-6	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999999325649974	WITHOUT_CLASSIFICATION	6.743500259898513E-7	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999772551378824	WITHOUT_CLASSIFICATION	2.2744862117644676E-5	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999989848983869	WITHOUT_CLASSIFICATION	1.0151016130965337E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999987654246543	WITHOUT_CLASSIFICATION	1.2345753458099884E-6	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999804712558	WITHOUT_CLASSIFICATION	1.9528744191858707E-8	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999815994043366	WITHOUT_CLASSIFICATION	1.8400595663356307E-5	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999758246797937	WITHOUT_CLASSIFICATION	2.417532020626778E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.999065983412271	WITHOUT_CLASSIFICATION	9.340165877290189E-4	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999865014535	WITHOUT_CLASSIFICATION	1.3498546600650242E-8	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999998175465174	WITHOUT_CLASSIFICATION	1.8245348260257796E-6	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.999999401547241	WITHOUT_CLASSIFICATION	5.984527590428266E-7	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999923960223698	WITHOUT_CLASSIFICATION	7.603977630336746E-6	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.6371902657490247	WITHOUT_CLASSIFICATION	0.36280973425097535	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999994203548506	WITHOUT_CLASSIFICATION	5.796451493868273E-7	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.999997564224156	WITHOUT_CLASSIFICATION	2.4357758439875504E-6	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9995840204694425	WITHOUT_CLASSIFICATION	4.1597953055760655E-4	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999843959657	WITHOUT_CLASSIFICATION	1.5604034277705346E-8	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999833384373	WITHOUT_CLASSIFICATION	1.6661562693314318E-8	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999916752178827	WITHOUT_CLASSIFICATION	8.324782117304791E-6	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999993847279198	WITHOUT_CLASSIFICATION	6.152720801995411E-7	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9994828457333402	WITHOUT_CLASSIFICATION	5.171542666596983E-4	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999780116269285	WITHOUT_CLASSIFICATION	2.1988373071499387E-5	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999990806212621	WITHOUT_CLASSIFICATION	9.193787379174407E-7	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999988191511747	WITHOUT_CLASSIFICATION	1.1808488253690569E-6	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999322753839	WITHOUT_CLASSIFICATION	6.772461613689587E-8	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.999999471037219	WITHOUT_CLASSIFICATION	5.289627809261758E-7	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999259158582672	WITHOUT_CLASSIFICATION	7.408414173276878E-5	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.999999923395077	WITHOUT_CLASSIFICATION	7.660492299994493E-8	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999973263546	WITHOUT_CLASSIFICATION	2.6736454856300095E-9	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999439593816802	WITHOUT_CLASSIFICATION	5.604061831966107E-5	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999998161452837	WITHOUT_CLASSIFICATION	1.838547164082035E-7	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999995369110003	WITHOUT_CLASSIFICATION	4.630889996580134E-7	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9997798646770433	WITHOUT_CLASSIFICATION	2.2013532295677777E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999999475590909	WITHOUT_CLASSIFICATION	5.244090901149761E-8	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999975427287489	WITHOUT_CLASSIFICATION	2.457271251124012E-6	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999796487982	WITHOUT_CLASSIFICATION	2.0351201843154727E-8	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999983398847047	WITHOUT_CLASSIFICATION	1.6601152953130612E-6	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999553540104769	WITHOUT_CLASSIFICATION	4.4645989523058555E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999994585830458	WITHOUT_CLASSIFICATION	5.414169541857388E-7	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999581788562	WITHOUT_CLASSIFICATION	4.182114370885618E-8	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9994886310404086	WITHOUT_CLASSIFICATION	5.113689595912968E-4	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9994886310404086	WITHOUT_CLASSIFICATION	5.113689595912968E-4	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999979767899612	WITHOUT_CLASSIFICATION	2.02321003878457E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999979767899612	WITHOUT_CLASSIFICATION	2.02321003878457E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999986862153788	WITHOUT_CLASSIFICATION	1.3137846212281916E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999986862153788	WITHOUT_CLASSIFICATION	1.3137846212281916E-6	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999980210559	WITHOUT_CLASSIFICATION	1.9789441796515897E-9	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999508654366412	WITHOUT_CLASSIFICATION	4.9134563358831374E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999816465565606	WITHOUT_CLASSIFICATION	1.835344343932488E-5	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999942826061824	WITHOUT_CLASSIFICATION	5.7173938175910964E-6	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9998351659643946	WITHOUT_CLASSIFICATION	1.6483403560536337E-4	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9995396617108022	WITHOUT_CLASSIFICATION	4.603382891977555E-4	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9998249137634725	WITHOUT_CLASSIFICATION	1.7508623652750938E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999818411761	WITHOUT_CLASSIFICATION	1.815882393639894E-8	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999118780643961	WITHOUT_CLASSIFICATION	8.812193560397885E-5	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999957007726973	WITHOUT_CLASSIFICATION	4.299227302739304E-6	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999924932030201	WITHOUT_CLASSIFICATION	7.506796979904725E-6	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.999999825058728	WITHOUT_CLASSIFICATION	1.749412720640063E-7	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999909578235018	WITHOUT_CLASSIFICATION	9.042176498202591E-6	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9990841159776613	WITHOUT_CLASSIFICATION	9.158840223387188E-4	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999960872126461	WITHOUT_CLASSIFICATION	3.912787353985853E-6	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999912946727615	WITHOUT_CLASSIFICATION	8.70532723858845E-6	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9995896878864599	WITHOUT_CLASSIFICATION	4.1031211354013283E-4	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.999999137079159	WITHOUT_CLASSIFICATION	8.629208410569791E-7	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9998147695177436	WITHOUT_CLASSIFICATION	1.8523048225643088E-4	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999878131627108	WITHOUT_CLASSIFICATION	1.218683728913635E-5	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999728465812204	WITHOUT_CLASSIFICATION	2.7153418779497146E-5	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999954223216013	WITHOUT_CLASSIFICATION	4.577678398712855E-6	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999822984181034	WITHOUT_CLASSIFICATION	1.770158189669289E-5	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999973259698495	WITHOUT_CLASSIFICATION	2.6740301505681135E-6	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999972395972454	WITHOUT_CLASSIFICATION	2.760402754598934E-6	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999967864566773	WITHOUT_CLASSIFICATION	3.213543322651115E-6	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9995563799146504	WITHOUT_CLASSIFICATION	4.436200853495052E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997651921208274	WITHOUT_CLASSIFICATION	2.3480787917268023E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997651921208274	WITHOUT_CLASSIFICATION	2.3480787917268023E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997651921208274	WITHOUT_CLASSIFICATION	2.3480787917268023E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9965337587605804	WITHOUT_CLASSIFICATION	0.003466241239419629	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9965337587605804	WITHOUT_CLASSIFICATION	0.003466241239419629	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999868345832658	WITHOUT_CLASSIFICATION	1.3165416734333555E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999868345832658	WITHOUT_CLASSIFICATION	1.3165416734333555E-5	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999998466133351	WITHOUT_CLASSIFICATION	1.5338666491756628E-7	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.6005722709851437	WITHOUT_CLASSIFICATION	0.3994277290148563	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9996538751865929	WITHOUT_CLASSIFICATION	3.461248134071871E-4	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999946418452659	WITHOUT_CLASSIFICATION	5.358154734130623E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997651921208274	WITHOUT_CLASSIFICATION	2.3480787917268023E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997651921208274	WITHOUT_CLASSIFICATION	2.3480787917268023E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9997651921208274	WITHOUT_CLASSIFICATION	2.3480787917268023E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9965337587605804	WITHOUT_CLASSIFICATION	0.003466241239419629	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9965337587605804	WITHOUT_CLASSIFICATION	0.003466241239419629	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9965337587605804	WITHOUT_CLASSIFICATION	0.003466241239419629	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999868345832658	WITHOUT_CLASSIFICATION	1.3165416734333555E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999868345832658	WITHOUT_CLASSIFICATION	1.3165416734333555E-5	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999898602325535	WITHOUT_CLASSIFICATION	1.0139767446451541E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9989573474772772	WITHOUT_CLASSIFICATION	0.001042652522722775	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9879189816855272	WITHOUT_CLASSIFICATION	0.01208101831447287	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9879189816855272	WITHOUT_CLASSIFICATION	0.01208101831447287	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9879189816855272	WITHOUT_CLASSIFICATION	0.01208101831447287	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9879189816855272	WITHOUT_CLASSIFICATION	0.01208101831447287	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9879189816855272	WITHOUT_CLASSIFICATION	0.01208101831447287	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999450052031221	WITHOUT_CLASSIFICATION	5.499479687801434E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999987032248558	WITHOUT_CLASSIFICATION	1.2967751442047107E-5	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998880469060902	WITHOUT_CLASSIFICATION	1.1195309390979596E-4	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999999039012152	WITHOUT_CLASSIFICATION	9.609878487891392E-8	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999981756924284	WITHOUT_CLASSIFICATION	1.8243075716183945E-6	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9995269523306209	WITHOUT_CLASSIFICATION	4.7304766937896045E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999835589666825	WITHOUT_CLASSIFICATION	1.644103331759919E-5	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999999233018436	WITHOUT_CLASSIFICATION	7.669815636652133E-8	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9998331284477558	WITHOUT_CLASSIFICATION	1.6687155224409122E-4	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999988328581375	WITHOUT_CLASSIFICATION	1.1671418624876594E-6	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999999527549832	WITHOUT_CLASSIFICATION	4.724501674408519E-8	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999669546001715	WITHOUT_CLASSIFICATION	3.3045399828616416E-5	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999987863813968	WITHOUT_CLASSIFICATION	1.2136186031479705E-6	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999997140881322	WITHOUT_CLASSIFICATION	2.859118678184957E-7	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.5460084826484101	DESIGN	0.45399151735159	WITHOUT_CLASSIFICATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9992158615011817	WITHOUT_CLASSIFICATION	7.841384988183812E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9992158615011817	WITHOUT_CLASSIFICATION	7.841384988183812E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9992158615011817	WITHOUT_CLASSIFICATION	7.841384988183812E-4	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.998473057330957	WITHOUT_CLASSIFICATION	0.0015269426690430272	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9984722837819396	WITHOUT_CLASSIFICATION	0.00152771621806044	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999956365974918	WITHOUT_CLASSIFICATION	4.363402508189769E-6	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999245761924	WITHOUT_CLASSIFICATION	7.542380762469315E-8	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999998848067385	WITHOUT_CLASSIFICATION	1.1519326148740478E-7	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9996233707142429	WITHOUT_CLASSIFICATION	3.766292857570563E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999809132535078	WITHOUT_CLASSIFICATION	1.9086746492234143E-5	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9992989329957263	WITHOUT_CLASSIFICATION	7.010670042737534E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9998722716845915	WITHOUT_CLASSIFICATION	1.2772831540850896E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999319738416504	WITHOUT_CLASSIFICATION	6.802615834955023E-5	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999973666675996	WITHOUT_CLASSIFICATION	2.633332400375024E-6	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9997774239502506	WITHOUT_CLASSIFICATION	2.225760497493759E-4	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999442123038053	WITHOUT_CLASSIFICATION	5.578769619480377E-5	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999795770466995	WITHOUT_CLASSIFICATION	2.0422953300602322E-5	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999718786904986	WITHOUT_CLASSIFICATION	2.8121309501378123E-5	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.999972003152267	WITHOUT_CLASSIFICATION	2.799684773304297E-5	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999990602904306	WITHOUT_CLASSIFICATION	9.39709569426432E-7	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9997265450091019	WITHOUT_CLASSIFICATION	2.734549908981396E-4	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999387364325267	WITHOUT_CLASSIFICATION	6.126356747329496E-5	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998423951947641	WITHOUT_CLASSIFICATION	1.576048052358906E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999179024364819	WITHOUT_CLASSIFICATION	8.20975635180585E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.999986373845973	WITHOUT_CLASSIFICATION	1.3626154026984783E-5	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.5473201963419427	WITHOUT_CLASSIFICATION	0.45267980365805727	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999992373945643	WITHOUT_CLASSIFICATION	7.626054356192031E-7	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999984988875162	WITHOUT_CLASSIFICATION	1.5011124836849233E-6	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999918203808333	WITHOUT_CLASSIFICATION	8.17961916665147E-6	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999910936711409	WITHOUT_CLASSIFICATION	8.906328859140041E-6	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999836324027784	WITHOUT_CLASSIFICATION	1.6367597221593147E-5	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9998722557522709	WITHOUT_CLASSIFICATION	1.2774424772908565E-4	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.999953992178881	WITHOUT_CLASSIFICATION	4.600782111903221E-5	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999725996125707	WITHOUT_CLASSIFICATION	2.740038742939209E-5	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999357896437717	WITHOUT_CLASSIFICATION	6.421035622827815E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9998875071896532	WITHOUT_CLASSIFICATION	1.1249281034678922E-4	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999116763004285	WITHOUT_CLASSIFICATION	8.83236995714107E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999102912122816	WITHOUT_CLASSIFICATION	8.970878771847944E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999147591132469	WITHOUT_CLASSIFICATION	8.524088675310626E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9943060432742293	WITHOUT_CLASSIFICATION	0.005693956725770605	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.8394197305631208	WITHOUT_CLASSIFICATION	0.16058026943687914	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999997863869327	WITHOUT_CLASSIFICATION	2.1361306731033697E-6	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999997273350213	WITHOUT_CLASSIFICATION	2.7266497874704236E-7	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999950931314094	WITHOUT_CLASSIFICATION	4.9068685905667194E-6	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999990089560814	WITHOUT_CLASSIFICATION	9.910439186040704E-7	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999996352309023	WITHOUT_CLASSIFICATION	3.647690977605303E-7	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.999999799233624	WITHOUT_CLASSIFICATION	2.007663760791402E-7	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999945955399281	WITHOUT_CLASSIFICATION	5.404460071894911E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999971353490015	WITHOUT_CLASSIFICATION	2.8646509985533537E-6	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999590413452157	WITHOUT_CLASSIFICATION	4.095865478421824E-5	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999590413452157	WITHOUT_CLASSIFICATION	4.095865478421824E-5	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9996379022749707	WITHOUT_CLASSIFICATION	3.620977250293215E-4	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999978195277478	WITHOUT_CLASSIFICATION	2.18047225211292E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999991218270711	WITHOUT_CLASSIFICATION	8.781729289994757E-7	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.980666944261113	WITHOUT_CLASSIFICATION	0.01933305573888699	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.989836938150189	WITHOUT_CLASSIFICATION	0.010163061849811089	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999953844832995	WITHOUT_CLASSIFICATION	4.6155167004174595E-6	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.997739877536887	WITHOUT_CLASSIFICATION	0.0022601224631129727	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999990709026955	WITHOUT_CLASSIFICATION	9.290973044173939E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999502308214511	WITHOUT_CLASSIFICATION	4.976917854893379E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999998612853279	WITHOUT_CLASSIFICATION	1.387146720409775E-7	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999926053505065	WITHOUT_CLASSIFICATION	7.394649493497092E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999926053505065	WITHOUT_CLASSIFICATION	7.394649493497092E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999926053505065	WITHOUT_CLASSIFICATION	7.394649493497092E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999926053505065	WITHOUT_CLASSIFICATION	7.394649493497092E-6	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999923356050798	WITHOUT_CLASSIFICATION	7.664394920117094E-6	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999568856166283	WITHOUT_CLASSIFICATION	4.311438337168859E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999939686964328	WITHOUT_CLASSIFICATION	6.031303567209876E-6	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9996950788043604	WITHOUT_CLASSIFICATION	3.0492119563952855E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.7570439024135869	WITHOUT_CLASSIFICATION	0.2429560975864131	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999981301403	WITHOUT_CLASSIFICATION	1.8698596933318823E-9	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999993105753411	WITHOUT_CLASSIFICATION	6.894246588106891E-7	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999965613880153	WITHOUT_CLASSIFICATION	3.4386119847719175E-6	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999965613880153	WITHOUT_CLASSIFICATION	3.4386119847719175E-6	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9992783168649795	WITHOUT_CLASSIFICATION	7.216831350204767E-4	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.999999813320111	WITHOUT_CLASSIFICATION	1.8667988908438123E-7	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9995315260779499	WITHOUT_CLASSIFICATION	4.684739220500808E-4	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999958196208144	WITHOUT_CLASSIFICATION	4.1803791855843985E-6	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999958196208144	WITHOUT_CLASSIFICATION	4.1803791855843985E-6	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999916151990419	WITHOUT_CLASSIFICATION	8.384800958028942E-6	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9800505802210793	WITHOUT_CLASSIFICATION	0.019949419778920698	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9800505802210793	WITHOUT_CLASSIFICATION	0.019949419778920698	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999948165876	WITHOUT_CLASSIFICATION	5.183412364994748E-9	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999909783877609	WITHOUT_CLASSIFICATION	9.021612239179464E-6	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999948744583	WITHOUT_CLASSIFICATION	5.125541631760748E-9	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999734330903747	WITHOUT_CLASSIFICATION	2.6566909625247906E-5	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9996435496521014	WITHOUT_CLASSIFICATION	3.564503478985938E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999996354125	WITHOUT_CLASSIFICATION	3.645875099054266E-10	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.980774677791872	WITHOUT_CLASSIFICATION	0.019225322208127973	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999017474465152	WITHOUT_CLASSIFICATION	9.825255348476034E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.999999971185556	WITHOUT_CLASSIFICATION	2.8814444102174873E-8	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999934196245863	WITHOUT_CLASSIFICATION	6.580375413572628E-6	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999997721271596	WITHOUT_CLASSIFICATION	2.278728404377669E-7	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999440989668485	WITHOUT_CLASSIFICATION	5.590103315155999E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.999760048574527	WITHOUT_CLASSIFICATION	2.3995142547297529E-4	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999314814018635	WITHOUT_CLASSIFICATION	6.851859813654905E-5	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999998708526026	WITHOUT_CLASSIFICATION	1.2914739752819307E-7	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.569105938671791	WITHOUT_CLASSIFICATION	0.4308940613282089	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999920147142708	WITHOUT_CLASSIFICATION	7.985285729259635E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9998798350459959	WITHOUT_CLASSIFICATION	1.2016495400407564E-4	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999999984012716	WITHOUT_CLASSIFICATION	1.5987284004676132E-8	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999983810425833	WITHOUT_CLASSIFICATION	1.6189574167029416E-6	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999995196116724	WITHOUT_CLASSIFICATION	4.803883275958074E-7	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999972103118676	WITHOUT_CLASSIFICATION	2.789688132449192E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999999266191942	WITHOUT_CLASSIFICATION	7.33808058140006E-8	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9928080335204962	WITHOUT_CLASSIFICATION	0.007191966479503832	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999951094894024	WITHOUT_CLASSIFICATION	4.89051059761334E-6	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.8753743507109114	WITHOUT_CLASSIFICATION	0.12462564928908859	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999997008532375	WITHOUT_CLASSIFICATION	2.991467625081255E-6	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999983878831081	WITHOUT_CLASSIFICATION	1.6121168918426673E-6	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.7042396029440265	DESIGN	0.29576039705597346	WITHOUT_CLASSIFICATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999993917181476	WITHOUT_CLASSIFICATION	6.082818524848371E-7	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999796002002928	WITHOUT_CLASSIFICATION	2.0399799707205343E-5	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999996123300661	WITHOUT_CLASSIFICATION	3.876699339482899E-7	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999977620830741	DESIGN	2.2379169259304505E-6	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999999204612823	WITHOUT_CLASSIFICATION	7.953871777165779E-8	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999609964879	WITHOUT_CLASSIFICATION	3.900351201865552E-8	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.7144275458084454	WITHOUT_CLASSIFICATION	0.2855724541915547	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999412808194671	WITHOUT_CLASSIFICATION	5.8719180533057624E-5	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999994566562	WITHOUT_CLASSIFICATION	5.433437613904888E-10	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.999999171713028	WITHOUT_CLASSIFICATION	8.282869719254346E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.7144275458084454	WITHOUT_CLASSIFICATION	0.2855724541915547	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999412808194671	WITHOUT_CLASSIFICATION	5.8719180533057624E-5	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999999956745551	WITHOUT_CLASSIFICATION	4.325444901398675E-8	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9990668784018896	WITHOUT_CLASSIFICATION	9.33121598110365E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9990668784018896	WITHOUT_CLASSIFICATION	9.33121598110365E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999999409319786	WITHOUT_CLASSIFICATION	5.906802138537873E-8	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999957343705	WITHOUT_CLASSIFICATION	4.265629521079913E-9	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999987966711383	WITHOUT_CLASSIFICATION	1.2033288616355961E-6	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999990141738685	WITHOUT_CLASSIFICATION	9.858261315643471E-7	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999886355849573	WITHOUT_CLASSIFICATION	1.1364415042739131E-5	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9998643649721447	WITHOUT_CLASSIFICATION	1.3563502785533837E-4	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999920422119423	WITHOUT_CLASSIFICATION	7.957788057640581E-6	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999999678937527	WITHOUT_CLASSIFICATION	3.2106247289219895E-8	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9989386487702703	WITHOUT_CLASSIFICATION	0.0010613512297297637	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999951621373276	WITHOUT_CLASSIFICATION	4.837862672326954E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.999998561952053	WITHOUT_CLASSIFICATION	1.4380479469546497E-6	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999976284612346	WITHOUT_CLASSIFICATION	2.3715387653755558E-6	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999999458078592	WITHOUT_CLASSIFICATION	5.4192140811596786E-8	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999996210715869	WITHOUT_CLASSIFICATION	3.7892841306221047E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999996210715869	WITHOUT_CLASSIFICATION	3.7892841306221047E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999992872293003	WITHOUT_CLASSIFICATION	7.12770699693515E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999992872293003	WITHOUT_CLASSIFICATION	7.12770699693515E-7	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999993709808616	WITHOUT_CLASSIFICATION	6.290191384998773E-7	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999975911899472	WITHOUT_CLASSIFICATION	2.408810052819722E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999863304485989	WITHOUT_CLASSIFICATION	1.366955140114804E-5	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999986230312461	WITHOUT_CLASSIFICATION	1.3769687538800994E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999981652799036	WITHOUT_CLASSIFICATION	1.8347200963434075E-6	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.999999988212169	WITHOUT_CLASSIFICATION	1.178783099609652E-8	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999987966711383	WITHOUT_CLASSIFICATION	1.2033288616355961E-6	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999990141738685	WITHOUT_CLASSIFICATION	9.858261315643471E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9989386487702703	WITHOUT_CLASSIFICATION	0.0010613512297297637	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999951621373276	WITHOUT_CLASSIFICATION	4.837862672326954E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999951704667426	WITHOUT_CLASSIFICATION	4.82953325744656E-6	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999989899543	WITHOUT_CLASSIFICATION	1.0100457291325266E-9	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999750766899023	WITHOUT_CLASSIFICATION	2.4923310097711122E-5	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.999991644854507	WITHOUT_CLASSIFICATION	8.355145492953318E-6	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999997987096663	WITHOUT_CLASSIFICATION	2.0129033383377976E-7	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999720169691916	WITHOUT_CLASSIFICATION	2.7983030808463907E-5	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9996979686241216	WITHOUT_CLASSIFICATION	3.020313758783848E-4	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999982672577745	WITHOUT_CLASSIFICATION	1.7327422255975956E-6	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999967545688279	WITHOUT_CLASSIFICATION	3.2454311720906654E-6	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9996620354108253	WITHOUT_CLASSIFICATION	3.3796458917471884E-4	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999909900292239	WITHOUT_CLASSIFICATION	9.009970776142434E-6	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999998073303964	WITHOUT_CLASSIFICATION	1.92669603645495E-7	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9916590048811728	WITHOUT_CLASSIFICATION	0.008340995118827268	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999223900606845	WITHOUT_CLASSIFICATION	7.760993931540285E-5	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999175815676778	WITHOUT_CLASSIFICATION	8.24184323221594E-5	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999033232696317	WITHOUT_CLASSIFICATION	9.66767303682836E-5	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999879154826341	WITHOUT_CLASSIFICATION	1.2084517365911524E-5	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999765136151227	WITHOUT_CLASSIFICATION	2.348638487727702E-5	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999497611824126	WITHOUT_CLASSIFICATION	5.0238817587435764E-5	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999970611559468	WITHOUT_CLASSIFICATION	2.938844053196144E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999956950370786	WITHOUT_CLASSIFICATION	4.304962921333469E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999956950370786	WITHOUT_CLASSIFICATION	4.304962921333469E-6	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999994103844281	WITHOUT_CLASSIFICATION	5.896155719535042E-7	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999163221519191	WITHOUT_CLASSIFICATION	8.367784808099117E-5	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999705363947	WITHOUT_CLASSIFICATION	2.9463605238024194E-8	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999891142921	WITHOUT_CLASSIFICATION	1.088570800316407E-8	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999891142921	WITHOUT_CLASSIFICATION	1.088570800316407E-8	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999750766899023	WITHOUT_CLASSIFICATION	2.4923310097711122E-5	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999999204354397	WITHOUT_CLASSIFICATION	7.956456034701015E-8	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999641355106	WITHOUT_CLASSIFICATION	3.586448944839323E-8	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999971120276	WITHOUT_CLASSIFICATION	2.887972304144745E-9	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999934536422	WITHOUT_CLASSIFICATION	6.546357787974985E-9	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999881486118	WITHOUT_CLASSIFICATION	1.1851388301130075E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.998895587983546	WITHOUT_CLASSIFICATION	0.0011044120164539683	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999605395032	WITHOUT_CLASSIFICATION	3.9460496618647636E-8	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999218835176289	WITHOUT_CLASSIFICATION	7.811648237103139E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999994109469782	WITHOUT_CLASSIFICATION	5.890530218261013E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999921820893848	WITHOUT_CLASSIFICATION	7.817910615180815E-6	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9998159356225652	WITHOUT_CLASSIFICATION	1.8406437743484356E-4	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999969800403463	WITHOUT_CLASSIFICATION	3.0199596537700194E-6	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999963769215363	WITHOUT_CLASSIFICATION	3.62307846369662E-6	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999159745381071	WITHOUT_CLASSIFICATION	8.402546189288579E-5	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999559437589174	WITHOUT_CLASSIFICATION	4.405624108247023E-5	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999414515056989	WITHOUT_CLASSIFICATION	5.8548494301126305E-5	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999907091865687	WITHOUT_CLASSIFICATION	9.29081343133329E-6	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999992524639695	WITHOUT_CLASSIFICATION	7.475360305747753E-7	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999999972865	WITHOUT_CLASSIFICATION	2.7134721209358914E-12	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999998053613	WITHOUT_CLASSIFICATION	1.9463876517500884E-10	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999389186259047	WITHOUT_CLASSIFICATION	6.108137409527695E-5	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.8492931880557493	WITHOUT_CLASSIFICATION	0.15070681194425078	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999894444227568	WITHOUT_CLASSIFICATION	1.0555577243161106E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999880047573	WITHOUT_CLASSIFICATION	1.1995242774506694E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999623185273	WITHOUT_CLASSIFICATION	3.7681472703575454E-8	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999994532806327	WITHOUT_CLASSIFICATION	5.467193672971741E-7	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999998216731967	WITHOUT_CLASSIFICATION	1.7832680331373415E-7	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999957383903	WITHOUT_CLASSIFICATION	4.261609749245491E-9	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999976628075783	WITHOUT_CLASSIFICATION	2.337192421649575E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999922640197	WITHOUT_CLASSIFICATION	7.735980252911108E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999922640197	WITHOUT_CLASSIFICATION	7.735980252911108E-9	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999947075835971	WITHOUT_CLASSIFICATION	5.292416402899061E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999989726093105	WITHOUT_CLASSIFICATION	1.0273906895138029E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999989726093105	WITHOUT_CLASSIFICATION	1.0273906895138029E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999987920527998	WITHOUT_CLASSIFICATION	1.2079472001277197E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999987920527998	WITHOUT_CLASSIFICATION	1.2079472001277197E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999628394200535	WITHOUT_CLASSIFICATION	3.7160579946457885E-5	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999980685464043	WITHOUT_CLASSIFICATION	1.9314535956750336E-6	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999986915351529	WITHOUT_CLASSIFICATION	1.3084648470973292E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999521008880382	WITHOUT_CLASSIFICATION	4.7899111961731366E-5	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999518650585707	WITHOUT_CLASSIFICATION	4.813494142925845E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999976608575739	WITHOUT_CLASSIFICATION	2.3391424261411167E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999976608575739	WITHOUT_CLASSIFICATION	2.3391424261411167E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999880047573	WITHOUT_CLASSIFICATION	1.1995242774506694E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999880047573	WITHOUT_CLASSIFICATION	1.1995242774506694E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999880047573	WITHOUT_CLASSIFICATION	1.1995242774506694E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999623185273	WITHOUT_CLASSIFICATION	3.7681472703575454E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999922640197	WITHOUT_CLASSIFICATION	7.735980252911108E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999922640197	WITHOUT_CLASSIFICATION	7.735980252911108E-9	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999922640197	WITHOUT_CLASSIFICATION	7.735980252911108E-9	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999628394200535	WITHOUT_CLASSIFICATION	3.7160579946457885E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999628394200535	WITHOUT_CLASSIFICATION	3.7160579946457885E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999628394200535	WITHOUT_CLASSIFICATION	3.7160579946457885E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999521008880382	WITHOUT_CLASSIFICATION	4.7899111961731366E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999521008880382	WITHOUT_CLASSIFICATION	4.7899111961731366E-5	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.999999796990188	WITHOUT_CLASSIFICATION	2.0300981203794564E-7	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999989213446929	WITHOUT_CLASSIFICATION	1.078655307055306E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999879642855951	WITHOUT_CLASSIFICATION	1.2035714404929483E-5	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999999972146278	DESIGN	2.785372176035262E-9	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9992531500652235	WITHOUT_CLASSIFICATION	7.46849934776368E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998831490701112	WITHOUT_CLASSIFICATION	1.1685092988873414E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998831490701112	WITHOUT_CLASSIFICATION	1.1685092988873414E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999997721618433	WITHOUT_CLASSIFICATION	2.2783815680486517E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.998895587983546	WITHOUT_CLASSIFICATION	0.0011044120164539683	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.998895587983546	WITHOUT_CLASSIFICATION	0.0011044120164539683	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.998895587983546	WITHOUT_CLASSIFICATION	0.0011044120164539683	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.998895587983546	WITHOUT_CLASSIFICATION	0.0011044120164539683	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.998895587983546	WITHOUT_CLASSIFICATION	0.0011044120164539683	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999996985510612	WITHOUT_CLASSIFICATION	3.0144893883520583E-7	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999996985510612	WITHOUT_CLASSIFICATION	3.0144893883520583E-7	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999996985510612	WITHOUT_CLASSIFICATION	3.0144893883520583E-7	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999662844347933	WITHOUT_CLASSIFICATION	3.3715565206678584E-5	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999970522618329	WITHOUT_CLASSIFICATION	2.947738167206753E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999623185273	WITHOUT_CLASSIFICATION	3.7681472703575454E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999628394200535	WITHOUT_CLASSIFICATION	3.7160579946457885E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999628394200535	WITHOUT_CLASSIFICATION	3.7160579946457885E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.998895587983546	WITHOUT_CLASSIFICATION	0.0011044120164539683	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.998895587983546	WITHOUT_CLASSIFICATION	0.0011044120164539683	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999996985510612	WITHOUT_CLASSIFICATION	3.0144893883520583E-7	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999997721618433	WITHOUT_CLASSIFICATION	2.2783815680486517E-7	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999997586417	WITHOUT_CLASSIFICATION	2.4135828498995595E-10	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999867956210344	WITHOUT_CLASSIFICATION	1.3204378965649239E-5	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.999823634920539	WITHOUT_CLASSIFICATION	1.7636507946102318E-4	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999989958251473	WITHOUT_CLASSIFICATION	1.0041748526728615E-6	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999980081123332	WITHOUT_CLASSIFICATION	1.991887666795852E-6	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999900538033579	WITHOUT_CLASSIFICATION	9.946196641993774E-6	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999713577947755	WITHOUT_CLASSIFICATION	2.8642205224456174E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9991661579921941	WITHOUT_CLASSIFICATION	8.338420078058945E-4	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999550279986148	WITHOUT_CLASSIFICATION	4.497200138525229E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999607993709478	WITHOUT_CLASSIFICATION	3.9200629052194785E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9962994471503251	WITHOUT_CLASSIFICATION	0.0037005528496749304	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999750907719	WITHOUT_CLASSIFICATION	2.49092281448639E-8	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999996829603555	WITHOUT_CLASSIFICATION	3.1703964453194354E-7	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999999547030712	WITHOUT_CLASSIFICATION	4.529692877087005E-8	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999994528215806	WITHOUT_CLASSIFICATION	5.47178419245559E-7	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999984898257341	WITHOUT_CLASSIFICATION	1.5101742658185306E-6	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999479580384314	WITHOUT_CLASSIFICATION	5.204196156865919E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.999974953831726	WITHOUT_CLASSIFICATION	2.5046168273976825E-5	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999610870777795	WITHOUT_CLASSIFICATION	3.8912922220466364E-5	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999998329530739	WITHOUT_CLASSIFICATION	1.670469260413445E-7	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999948303603343	WITHOUT_CLASSIFICATION	5.169639665790486E-6	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999998318220124	WITHOUT_CLASSIFICATION	1.6817798771247826E-7	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999995953507106	WITHOUT_CLASSIFICATION	4.046492894513898E-7	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999918794272882	WITHOUT_CLASSIFICATION	8.120572711747357E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9997117920983603	WITHOUT_CLASSIFICATION	2.882079016397619E-4	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.5450547161476837	WITHOUT_CLASSIFICATION	0.45494528385231625	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9999202261484139	WITHOUT_CLASSIFICATION	7.977385158604247E-5	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999904011333	WITHOUT_CLASSIFICATION	9.59886666555192E-9	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999991535376946	WITHOUT_CLASSIFICATION	8.464623054343436E-7	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999997419703568	WITHOUT_CLASSIFICATION	2.580296432660065E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999993995892174	WITHOUT_CLASSIFICATION	6.004107827141386E-7	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999956060186	WITHOUT_CLASSIFICATION	4.393981328353309E-9	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999997598468	WITHOUT_CLASSIFICATION	2.4015322112284455E-10	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999945793607	WITHOUT_CLASSIFICATION	5.420639257633013E-9	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999997586417	WITHOUT_CLASSIFICATION	2.4135828498995595E-10	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999962733496	WITHOUT_CLASSIFICATION	3.726650434983851E-9	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9991976110893467	WITHOUT_CLASSIFICATION	8.023889106534549E-4	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.871794061981265	WITHOUT_CLASSIFICATION	0.128205938018735	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9996404522298622	WITHOUT_CLASSIFICATION	3.59547770137831E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9996404522298622	WITHOUT_CLASSIFICATION	3.59547770137831E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999961704780942	WITHOUT_CLASSIFICATION	3.829521905770653E-6	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999961704780942	WITHOUT_CLASSIFICATION	3.829521905770653E-6	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999744742188	WITHOUT_CLASSIFICATION	2.5525781085236167E-8	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999207414043245	WITHOUT_CLASSIFICATION	7.925859567558455E-5	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999116026022	WITHOUT_CLASSIFICATION	8.839739789779842E-8	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999308994592	WITHOUT_CLASSIFICATION	6.910054082268042E-8	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999633073249	WITHOUT_CLASSIFICATION	3.6692675129149974E-8	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.99977422134808	WITHOUT_CLASSIFICATION	2.257786519198788E-4	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999993744871261	WITHOUT_CLASSIFICATION	6.255128740477671E-7	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999999705484	WITHOUT_CLASSIFICATION	2.945145526033396E-11	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999994465798627	WITHOUT_CLASSIFICATION	5.534201372964243E-7	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999653661004	WITHOUT_CLASSIFICATION	3.463389971545421E-8	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999958743149	WITHOUT_CLASSIFICATION	4.125685108178452E-9	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999999982408379	WITHOUT_CLASSIFICATION	1.759162169307927E-9	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999999982408379	WITHOUT_CLASSIFICATION	1.759162169307927E-9	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999958605655	WITHOUT_CLASSIFICATION	4.1394345397804005E-9	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999842216568	WITHOUT_CLASSIFICATION	1.5778343140624073E-8	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999944792391386	WITHOUT_CLASSIFICATION	5.520760861438463E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999944792391386	WITHOUT_CLASSIFICATION	5.520760861438463E-6	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.999999895132946	WITHOUT_CLASSIFICATION	1.0486705405914906E-7	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999927204234089	WITHOUT_CLASSIFICATION	7.279576591013499E-6	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9987322916642004	WITHOUT_CLASSIFICATION	0.0012677083357995928	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999700449026462	WITHOUT_CLASSIFICATION	2.9955097353750946E-5	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999990721253517	WITHOUT_CLASSIFICATION	9.278746483407804E-7	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9996760710444167	WITHOUT_CLASSIFICATION	3.2392895558329334E-4	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999418447624828	WITHOUT_CLASSIFICATION	5.815523751727531E-5	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9997464474361885	WITHOUT_CLASSIFICATION	2.535525638115302E-4	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.999996928431328	WITHOUT_CLASSIFICATION	3.071568671961588E-6	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999966098223687	WITHOUT_CLASSIFICATION	3.390177631357116E-6	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999998137574745	WITHOUT_CLASSIFICATION	1.8624252555485084E-7	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999954326018217	WITHOUT_CLASSIFICATION	4.567398178331284E-6	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999998171522011	WITHOUT_CLASSIFICATION	1.828477989286856E-7	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999999985349539	WITHOUT_CLASSIFICATION	1.4650460965344832E-9	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999987583663	WITHOUT_CLASSIFICATION	1.241633611099E-9	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999998143975088	WITHOUT_CLASSIFICATION	1.8560249109496926E-7	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9997668636088409	WITHOUT_CLASSIFICATION	2.331363911591356E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999888797363335	WITHOUT_CLASSIFICATION	1.1120263666498958E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999977560712	WITHOUT_CLASSIFICATION	2.243928847579001E-9	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999938577547502	WITHOUT_CLASSIFICATION	6.14224524969909E-6	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999307634868801	DESIGN	6.923651311986418E-5	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999980874953387	WITHOUT_CLASSIFICATION	1.9125046613176515E-6	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999998621941608	WITHOUT_CLASSIFICATION	1.3780583912875034E-7	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999988086375288	WITHOUT_CLASSIFICATION	1.1913624711811467E-6	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9998851005523162	WITHOUT_CLASSIFICATION	1.1489944768384373E-4	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.999843391077641	WITHOUT_CLASSIFICATION	1.5660892235893072E-4	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999987026876032	WITHOUT_CLASSIFICATION	1.2973123968579162E-6	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999162834887015	WITHOUT_CLASSIFICATION	8.371651129846142E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999551602439134	WITHOUT_CLASSIFICATION	4.48397560866168E-5	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999992879842353	WITHOUT_CLASSIFICATION	7.120157645815302E-7	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999997909580735	WITHOUT_CLASSIFICATION	2.0904192660808916E-7	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999979571623537	WITHOUT_CLASSIFICATION	2.04283764625355E-6	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999987625391104	WITHOUT_CLASSIFICATION	1.237460889615165E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999904651403184	WITHOUT_CLASSIFICATION	9.534859681544655E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999904651403184	WITHOUT_CLASSIFICATION	9.534859681544655E-6	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999998600878279	WITHOUT_CLASSIFICATION	1.3991217211105415E-7	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999998582510439	WITHOUT_CLASSIFICATION	1.4174895609667757E-6	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999999998404191	WITHOUT_CLASSIFICATION	1.5958089427519769E-9	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.999987825785176	WITHOUT_CLASSIFICATION	1.2174214823969949E-5	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999970422746652	WITHOUT_CLASSIFICATION	2.9577253348000208E-6	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9995427860417253	WITHOUT_CLASSIFICATION	4.572139582746224E-4	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.7480776109260446	WITHOUT_CLASSIFICATION	0.2519223890739554	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.8735320980734699	WITHOUT_CLASSIFICATION	0.12646790192653015	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.999941176890151	WITHOUT_CLASSIFICATION	5.882310984900517E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999927327218971	WITHOUT_CLASSIFICATION	7.2672781027844375E-6	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9996237911022888	DESIGN	3.762088977111517E-4	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9950908338298602	WITHOUT_CLASSIFICATION	0.004909166170139805	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9996828397720655	WITHOUT_CLASSIFICATION	3.1716022793448425E-4	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999600096764111	WITHOUT_CLASSIFICATION	3.999032358891861E-5	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999751810064	WITHOUT_CLASSIFICATION	2.4818993613920702E-8	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999930678104362	WITHOUT_CLASSIFICATION	6.932189563804119E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9992802382197801	WITHOUT_CLASSIFICATION	7.197617802198787E-4	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9994090111142508	WITHOUT_CLASSIFICATION	5.909888857492097E-4	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9960952481523165	WITHOUT_CLASSIFICATION	0.0039047518476833564	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999883968522867	WITHOUT_CLASSIFICATION	1.1603147713243733E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999999383771422	WITHOUT_CLASSIFICATION	6.162285778395606E-8	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999985284568412	WITHOUT_CLASSIFICATION	1.4715431588082326E-6	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9993091840214634	WITHOUT_CLASSIFICATION	6.908159785365573E-4	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999050663753877	WITHOUT_CLASSIFICATION	9.493362461227737E-5	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9986508345259822	WITHOUT_CLASSIFICATION	0.0013491654740177483	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999715365967993	WITHOUT_CLASSIFICATION	2.8463403200661378E-5	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.999999995396318	WITHOUT_CLASSIFICATION	4.6036820475435645E-9	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999541233798	WITHOUT_CLASSIFICATION	4.587662013412469E-8	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9895961961928192	WITHOUT_CLASSIFICATION	0.010403803807180792	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999994109007844	WITHOUT_CLASSIFICATION	5.890992155969996E-7	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999440075087	WITHOUT_CLASSIFICATION	5.599249132796108E-8	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999930898415241	WITHOUT_CLASSIFICATION	6.9101584759180445E-6	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9998430362870204	WITHOUT_CLASSIFICATION	1.5696371297959687E-4	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999989805271622	WITHOUT_CLASSIFICATION	1.0194728377637435E-6	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999980657687975	WITHOUT_CLASSIFICATION	1.9342312025430196E-6	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999856129499017	WITHOUT_CLASSIFICATION	1.4387050098159966E-5	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9884685624839412	WITHOUT_CLASSIFICATION	0.011531437516058913	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999934967862997	WITHOUT_CLASSIFICATION	6.50321370040641E-6	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.999986137430156	WITHOUT_CLASSIFICATION	1.3862569844127252E-5	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999996227514493	WITHOUT_CLASSIFICATION	3.7724855080618844E-7	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999942424402839	WITHOUT_CLASSIFICATION	5.757559716199278E-6	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999887692160689	WITHOUT_CLASSIFICATION	1.1230783931071929E-5	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999887692160689	WITHOUT_CLASSIFICATION	1.1230783931071929E-5	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999304055111555	WITHOUT_CLASSIFICATION	6.959448884446884E-5	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999823366649	WITHOUT_CLASSIFICATION	1.7663335091366613E-8	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999987188229421	WITHOUT_CLASSIFICATION	1.2811770578698626E-6	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9944758293877752	WITHOUT_CLASSIFICATION	0.0055241706122248465	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999146854907305	WITHOUT_CLASSIFICATION	8.531450926950476E-5	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999994128142548	WITHOUT_CLASSIFICATION	5.871857452998256E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999961359054577	WITHOUT_CLASSIFICATION	3.864094542275026E-6	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.691708916090464	WITHOUT_CLASSIFICATION	0.308291083909536	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9997711464509613	WITHOUT_CLASSIFICATION	2.288535490387441E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.996710905237604	WITHOUT_CLASSIFICATION	0.003289094762396093	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9997244246040672	WITHOUT_CLASSIFICATION	2.7557539593279975E-4	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999164728823	WITHOUT_CLASSIFICATION	8.352711762696621E-8	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9521931697142313	WITHOUT_CLASSIFICATION	0.04780683028576875	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999972489820035	WITHOUT_CLASSIFICATION	2.7510179964541524E-6	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999890837729	WITHOUT_CLASSIFICATION	1.0916227208998352E-8	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.999587757223992	DESIGN	4.122427760079972E-4	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9456497241084647	WITHOUT_CLASSIFICATION	0.05435027589153533	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999992753230189	WITHOUT_CLASSIFICATION	7.246769811914826E-7	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9967776592469499	WITHOUT_CLASSIFICATION	0.0032223407530501207	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9997005348662894	DESIGN	2.994651337105524E-4	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999116687801037	WITHOUT_CLASSIFICATION	8.833121989624836E-5	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999773223365822	WITHOUT_CLASSIFICATION	2.2677663417774278E-5	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.999999999747458	WITHOUT_CLASSIFICATION	2.5254196429402007E-10	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999925173291743	WITHOUT_CLASSIFICATION	7.4826708256902165E-6	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999843705187583	WITHOUT_CLASSIFICATION	1.5629481241656113E-5	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999989124475692	WITHOUT_CLASSIFICATION	1.0875524307718495E-6	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999998226590016	WITHOUT_CLASSIFICATION	1.773409984572701E-7	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999947357278948	WITHOUT_CLASSIFICATION	5.264272105256654E-6	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999958874317	WITHOUT_CLASSIFICATION	4.11256825938859E-9	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999629802132713	WITHOUT_CLASSIFICATION	3.701978672858513E-5	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999981873984	WITHOUT_CLASSIFICATION	1.8126016585284683E-9	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999969928274536	WITHOUT_CLASSIFICATION	3.0071725464828367E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999629802132713	WITHOUT_CLASSIFICATION	3.701978672858513E-5	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999971777342754	WITHOUT_CLASSIFICATION	2.822265724592316E-6	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999951094894024	WITHOUT_CLASSIFICATION	4.89051059761334E-6	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999512020858	WITHOUT_CLASSIFICATION	4.879791417952357E-8	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.999857540264378	DESIGN	1.4245973562191283E-4	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9993969252322443	WITHOUT_CLASSIFICATION	6.030747677557063E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9879189816855272	WITHOUT_CLASSIFICATION	0.01208101831447287	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999926742502941	WITHOUT_CLASSIFICATION	7.325749705822461E-6	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.6951604323768221	DESIGN	0.30483956762317793	WITHOUT_CLASSIFICATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999957343705	WITHOUT_CLASSIFICATION	4.265629521079913E-9	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999938577547502	WITHOUT_CLASSIFICATION	6.14224524969909E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999879642855951	WITHOUT_CLASSIFICATION	1.2035714404929483E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9988499960039556	WITHOUT_CLASSIFICATION	0.0011500039960444222	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999999851649816	WITHOUT_CLASSIFICATION	1.4835018394647809E-7	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.999960495835346	WITHOUT_CLASSIFICATION	3.950416465390613E-5	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999999524484701	WITHOUT_CLASSIFICATION	4.755152987913392E-8	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999442756623523	WITHOUT_CLASSIFICATION	5.5724337647611995E-5	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.999993328374649	DESIGN	6.671625350885197E-6	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9892841444454396	WITHOUT_CLASSIFICATION	0.010715855554560465	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9852487546482253	WITHOUT_CLASSIFICATION	0.014751245351774703	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9997523993291827	WITHOUT_CLASSIFICATION	2.4760067081730627E-4	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999997627304464	WITHOUT_CLASSIFICATION	2.372695536145409E-7	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999391709780213	WITHOUT_CLASSIFICATION	6.082902197873165E-5	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9998793530534655	WITHOUT_CLASSIFICATION	1.2064694653442629E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999143183328799	WITHOUT_CLASSIFICATION	8.568166712010485E-5	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9998674361498702	WITHOUT_CLASSIFICATION	1.3256385012975716E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999989315424461	WITHOUT_CLASSIFICATION	1.0684575538857007E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999981834078897	WITHOUT_CLASSIFICATION	1.8165921102666437E-6	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999419870444858	WITHOUT_CLASSIFICATION	5.801295551418815E-5	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999943355706	WITHOUT_CLASSIFICATION	5.6644293457972416E-9	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9961811183908271	DESIGN	0.0038188816091729153	WITHOUT_CLASSIFICATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9961811183908271	DESIGN	0.0038188816091729153	WITHOUT_CLASSIFICATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998246110952	WITHOUT_CLASSIFICATION	1.753889048208368E-7	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999816208957	WITHOUT_CLASSIFICATION	1.8379104378487447E-8	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999601080983563	WITHOUT_CLASSIFICATION	3.9891901643736705E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999926516120493	DESIGN	7.3483879508063435E-6	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999926516120493	DESIGN	7.3483879508063435E-6	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999926516120493	DESIGN	7.3483879508063435E-6	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999926516120493	DESIGN	7.3483879508063435E-6	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999996415659141	WITHOUT_CLASSIFICATION	3.584340859116492E-7	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999999942040662	WITHOUT_CLASSIFICATION	5.7959338595247025E-9	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999997143215058	WITHOUT_CLASSIFICATION	2.856784941937493E-7	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999490118060376	DESIGN	5.09881939624427E-5	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999979751213437	WITHOUT_CLASSIFICATION	2.0248786563657395E-6	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999893962394419	WITHOUT_CLASSIFICATION	1.0603760558095708E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.998531391014964	WITHOUT_CLASSIFICATION	0.001468608985036037	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.998531391014964	WITHOUT_CLASSIFICATION	0.001468608985036037	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9756349428766025	WITHOUT_CLASSIFICATION	0.024365057123397503	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999673902454891	WITHOUT_CLASSIFICATION	3.260975451084203E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9990531444475995	WITHOUT_CLASSIFICATION	9.468555524004483E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999999992269298	WITHOUT_CLASSIFICATION	7.730700516230155E-10	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999954188314	WITHOUT_CLASSIFICATION	4.581168580400057E-9	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999982445701833	WITHOUT_CLASSIFICATION	1.7554298167119766E-6	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999937502734	WITHOUT_CLASSIFICATION	6.249726572528758E-9	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999997269399632	WITHOUT_CLASSIFICATION	2.7306003671660423E-7	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993336725236663	WITHOUT_CLASSIFICATION	6.663274763337269E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993336725236663	WITHOUT_CLASSIFICATION	6.663274763337269E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999969928274536	WITHOUT_CLASSIFICATION	3.0071725464828367E-6	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999979624451791	WITHOUT_CLASSIFICATION	2.037554820800059E-6	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999983783529045	WITHOUT_CLASSIFICATION	1.621647095544033E-6	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9998966776842015	WITHOUT_CLASSIFICATION	1.0332231579850362E-4	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999996192274	WITHOUT_CLASSIFICATION	3.807726791759242E-10	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999480649273195	WITHOUT_CLASSIFICATION	5.1935072680586765E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999959280373156	WITHOUT_CLASSIFICATION	4.071962684348409E-6	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.999873883744148	WITHOUT_CLASSIFICATION	1.2611625585208142E-4	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999864733629072	WITHOUT_CLASSIFICATION	1.3526637092764338E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999864733629072	WITHOUT_CLASSIFICATION	1.3526637092764338E-5	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9994142848447342	WITHOUT_CLASSIFICATION	5.857151552659512E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999986695982	WITHOUT_CLASSIFICATION	1.3304017515356714E-9	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9933912580646537	WITHOUT_CLASSIFICATION	0.0066087419353463555	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999996876254493	WITHOUT_CLASSIFICATION	3.1237455067756815E-7	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999991174994198	WITHOUT_CLASSIFICATION	8.825005802538234E-7	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999693151086226	WITHOUT_CLASSIFICATION	3.068489137732144E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9979917908306064	WITHOUT_CLASSIFICATION	0.002008209169393666	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999975406993945	WITHOUT_CLASSIFICATION	2.4593006055780304E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999975406993945	WITHOUT_CLASSIFICATION	2.4593006055780304E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999975406993945	WITHOUT_CLASSIFICATION	2.4593006055780304E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999975406993945	WITHOUT_CLASSIFICATION	2.4593006055780304E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999998964418431	WITHOUT_CLASSIFICATION	1.0355815690819522E-6	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9996077141763824	WITHOUT_CLASSIFICATION	3.922858236176284E-4	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999890049887375	WITHOUT_CLASSIFICATION	1.0995011262501908E-4	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999991041157295	WITHOUT_CLASSIFICATION	8.958842706468675E-7	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.999999995438668	WITHOUT_CLASSIFICATION	4.561331920323262E-9	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999556974885873	WITHOUT_CLASSIFICATION	4.430251141265865E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999876396568117	WITHOUT_CLASSIFICATION	1.236034318824544E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999579994743	WITHOUT_CLASSIFICATION	4.200052580382731E-8	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999579994743	WITHOUT_CLASSIFICATION	4.200052580382731E-8	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999579994743	WITHOUT_CLASSIFICATION	4.200052580382731E-8	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999082401397	WITHOUT_CLASSIFICATION	9.17598602380878E-8	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999521382952037	WITHOUT_CLASSIFICATION	4.786170479635713E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999768893614	WITHOUT_CLASSIFICATION	2.3110638597253944E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999768893614	WITHOUT_CLASSIFICATION	2.3110638597253944E-8	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999920461057842	WITHOUT_CLASSIFICATION	7.953894215898192E-6	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986737481017	WITHOUT_CLASSIFICATION	1.3262518982194464E-6	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999997515627	WITHOUT_CLASSIFICATION	2.484372036497739E-10	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999620272227147	WITHOUT_CLASSIFICATION	3.797277728525877E-5	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999999652203	WITHOUT_CLASSIFICATION	3.477976404837405E-11	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999836700916136	WITHOUT_CLASSIFICATION	1.632990838638892E-5	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9919091855305731	WITHOUT_CLASSIFICATION	0.008090814469426978	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9919091855305731	WITHOUT_CLASSIFICATION	0.008090814469426978	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999838378153	WITHOUT_CLASSIFICATION	1.6162184779331167E-8	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9969632777163799	WITHOUT_CLASSIFICATION	0.003036722283620102	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999749239289	WITHOUT_CLASSIFICATION	2.5076071084120075E-8	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999989934308727	WITHOUT_CLASSIFICATION	1.0065691272925096E-6	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999634441723597	WITHOUT_CLASSIFICATION	3.655582764033326E-5	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999999810547	WITHOUT_CLASSIFICATION	1.894525415293788E-11	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999918954698808	WITHOUT_CLASSIFICATION	8.104530119223156E-6	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998142269380255	WITHOUT_CLASSIFICATION	1.857730619745787E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999990366163232	WITHOUT_CLASSIFICATION	9.63383676891186E-7	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999859940933207	WITHOUT_CLASSIFICATION	1.4005906679397982E-5	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999998650635045	WITHOUT_CLASSIFICATION	1.3493649547672222E-7	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999998485489282	WITHOUT_CLASSIFICATION	1.5145107180071736E-7	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998542034502	WITHOUT_CLASSIFICATION	1.4579654979270176E-7	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999998344616705	WITHOUT_CLASSIFICATION	1.6553832951913602E-7	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999998651401983	WITHOUT_CLASSIFICATION	1.34859801699991E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9905159726806874	WITHOUT_CLASSIFICATION	0.009484027319312699	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999067059900516	WITHOUT_CLASSIFICATION	9.329400994844558E-5	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999392616282	WITHOUT_CLASSIFICATION	6.073837182604094E-8	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999993074524939	WITHOUT_CLASSIFICATION	6.925475061050178E-7	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999925376146556	WITHOUT_CLASSIFICATION	7.4623853444119215E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999984498545089	WITHOUT_CLASSIFICATION	1.550145491064385E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999925421999778	WITHOUT_CLASSIFICATION	7.457800022215199E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996085886147165	WITHOUT_CLASSIFICATION	3.9141138528352756E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996085886147165	WITHOUT_CLASSIFICATION	3.9141138528352756E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996085886147165	WITHOUT_CLASSIFICATION	3.9141138528352756E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996085886147165	WITHOUT_CLASSIFICATION	3.9141138528352756E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996085886147165	WITHOUT_CLASSIFICATION	3.9141138528352756E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996085886147165	WITHOUT_CLASSIFICATION	3.9141138528352756E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996085886147165	WITHOUT_CLASSIFICATION	3.9141138528352756E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996085886147165	WITHOUT_CLASSIFICATION	3.9141138528352756E-4	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9998738099597478	WITHOUT_CLASSIFICATION	1.2619004025214985E-4	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999758487091683	WITHOUT_CLASSIFICATION	2.415129083171187E-5	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9965716837247826	WITHOUT_CLASSIFICATION	0.0034283162752174827	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999978025806949	DESIGN	2.197419305015998E-6	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999961359054577	WITHOUT_CLASSIFICATION	3.864094542275026E-6	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999961359054577	WITHOUT_CLASSIFICATION	3.864094542275026E-6	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9997052279442415	WITHOUT_CLASSIFICATION	2.947720557583464E-4	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.998238162298102	WITHOUT_CLASSIFICATION	0.0017618377018979443	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999988221687094	WITHOUT_CLASSIFICATION	1.177831290594384E-6	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999961827178953	WITHOUT_CLASSIFICATION	3.81728210474159E-6	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999993370822131	WITHOUT_CLASSIFICATION	6.629177869454992E-7	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999998409914554	WITHOUT_CLASSIFICATION	1.5900854456865385E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.999968737143084	WITHOUT_CLASSIFICATION	3.1262856916003325E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.5488996619816969	DESIGN	0.451100338018303	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999952549146168	WITHOUT_CLASSIFICATION	4.7450853831821965E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999471734883834	WITHOUT_CLASSIFICATION	5.2826511616697736E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999471734883834	WITHOUT_CLASSIFICATION	5.2826511616697736E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999471734883834	WITHOUT_CLASSIFICATION	5.2826511616697736E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9992758542752597	WITHOUT_CLASSIFICATION	7.241457247403081E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999709161856056	WITHOUT_CLASSIFICATION	2.9083814394371157E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999923887473983	WITHOUT_CLASSIFICATION	7.611252601749934E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999128238078137	WITHOUT_CLASSIFICATION	8.717619218626656E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.999862816835635	WITHOUT_CLASSIFICATION	1.3718316436491358E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999870954181957	WITHOUT_CLASSIFICATION	1.2904581804256563E-5	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999782564733913	WITHOUT_CLASSIFICATION	2.1743526608627027E-5	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999996457552216	WITHOUT_CLASSIFICATION	3.5424477845311344E-7	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999948677909402	WITHOUT_CLASSIFICATION	5.132209059816732E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999948677909402	WITHOUT_CLASSIFICATION	5.132209059816732E-6	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999999236434656	WITHOUT_CLASSIFICATION	7.635653432814161E-8	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999982371628364	WITHOUT_CLASSIFICATION	1.7628371636087633E-6	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999998939227309	WITHOUT_CLASSIFICATION	1.0607726905830509E-7	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999903112311634	WITHOUT_CLASSIFICATION	9.688768836533744E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999929614228201	WITHOUT_CLASSIFICATION	7.038577179799156E-6	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999929614228201	WITHOUT_CLASSIFICATION	7.038577179799156E-6	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9743571063047463	WITHOUT_CLASSIFICATION	0.02564289369525367	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999747497158	WITHOUT_CLASSIFICATION	2.525028416801127E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999988186938981	WITHOUT_CLASSIFICATION	1.181306101944413E-6	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9989681836190215	WITHOUT_CLASSIFICATION	0.0010318163809784763	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999564006828778	WITHOUT_CLASSIFICATION	4.359931712206716E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999976577493627	WITHOUT_CLASSIFICATION	2.342250637264807E-6	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999976577493627	WITHOUT_CLASSIFICATION	2.342250637264807E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999564455334083	WITHOUT_CLASSIFICATION	4.3554466591579044E-5	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999564455334083	WITHOUT_CLASSIFICATION	4.3554466591579044E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999994352861801	WITHOUT_CLASSIFICATION	5.647138198760982E-7	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999973507565986	WITHOUT_CLASSIFICATION	2.6492434015197565E-6	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999999743883886	WITHOUT_CLASSIFICATION	2.5611611397859468E-8	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999949645589232	WITHOUT_CLASSIFICATION	5.035441076816473E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999807881657959	WITHOUT_CLASSIFICATION	1.9211834203994232E-5	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999986899133031	WITHOUT_CLASSIFICATION	1.310086696909167E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996443866758	WITHOUT_CLASSIFICATION	3.5561332422490957E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999976608575739	WITHOUT_CLASSIFICATION	2.3391424261411167E-6	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.999956845877499	WITHOUT_CLASSIFICATION	4.315412250113303E-5	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999998032385	WITHOUT_CLASSIFICATION	1.9676149799116638E-10	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.7186418307034838	DESIGN	0.2813581692965164	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9984441141487679	WITHOUT_CLASSIFICATION	0.0015558858512320713	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999995800090217	WITHOUT_CLASSIFICATION	4.1999097826379803E-7	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998038563371	WITHOUT_CLASSIFICATION	1.9614366282703636E-7	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999640915702057	WITHOUT_CLASSIFICATION	3.5908429794246534E-5	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999982572557342	WITHOUT_CLASSIFICATION	1.742744265831076E-6	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9997609838147677	WITHOUT_CLASSIFICATION	2.390161852322491E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999998761472563	WITHOUT_CLASSIFICATION	1.238527437416639E-7	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999983882703011	WITHOUT_CLASSIFICATION	1.6117296989123556E-6	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999711918069439	WITHOUT_CLASSIFICATION	2.8808193056050407E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9988499960039556	WITHOUT_CLASSIFICATION	0.0011500039960444222	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9991644861839085	WITHOUT_CLASSIFICATION	8.355138160915622E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999547293613154	WITHOUT_CLASSIFICATION	4.527063868461674E-5	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999941809773971	WITHOUT_CLASSIFICATION	5.819022602868504E-6	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999903435663072	WITHOUT_CLASSIFICATION	9.656433692735616E-6	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9862920882935292	WITHOUT_CLASSIFICATION	0.013707911706470736	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999959014997131	WITHOUT_CLASSIFICATION	4.09850028698083E-6	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9986782303590721	WITHOUT_CLASSIFICATION	0.0013217696409279617	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999984555370733	WITHOUT_CLASSIFICATION	1.5444629267219975E-6	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999999192649	WITHOUT_CLASSIFICATION	8.073508859726038E-11	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999968110237566	WITHOUT_CLASSIFICATION	3.188976243348006E-6	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999794828556196	WITHOUT_CLASSIFICATION	2.051714438045653E-5	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9994521723050075	WITHOUT_CLASSIFICATION	5.478276949924953E-4	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999991061905438	WITHOUT_CLASSIFICATION	8.93809456182876E-7	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999161314351	WITHOUT_CLASSIFICATION	8.386856489388001E-8	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999110927228959	WITHOUT_CLASSIFICATION	8.890727710408987E-5	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999918992408618	WITHOUT_CLASSIFICATION	8.100759138202345E-5	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9877766262404192	WITHOUT_CLASSIFICATION	0.012223373759580863	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999290387260098	WITHOUT_CLASSIFICATION	7.09612739901718E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999705211057456	WITHOUT_CLASSIFICATION	2.9478894254431598E-5	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.6489984039832288	WITHOUT_CLASSIFICATION	0.35100159601677117	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999509551680287	WITHOUT_CLASSIFICATION	4.9044831971263956E-5	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999939554628	WITHOUT_CLASSIFICATION	6.044537183592497E-9	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999994173314816	WITHOUT_CLASSIFICATION	5.826685185453475E-7	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999940844439448	WITHOUT_CLASSIFICATION	5.915556055196611E-6	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999034929271915	WITHOUT_CLASSIFICATION	9.650707280859314E-5	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999602725290951	WITHOUT_CLASSIFICATION	3.972747090484191E-5	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999994778898523	WITHOUT_CLASSIFICATION	5.22110147727509E-7	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999996756216942	WITHOUT_CLASSIFICATION	3.2437830576144253E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999999933012582	WITHOUT_CLASSIFICATION	6.698741790906814E-8	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9840558378442016	WITHOUT_CLASSIFICATION	0.015944162155798462	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999993225427246	WITHOUT_CLASSIFICATION	6.774572753920906E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999993225427246	WITHOUT_CLASSIFICATION	6.774572753920906E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999977930335124	WITHOUT_CLASSIFICATION	2.206966487599731E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999977930335124	WITHOUT_CLASSIFICATION	2.206966487599731E-6	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9667572029427406	DESIGN	0.033242797057259396	WITHOUT_CLASSIFICATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9667572029427406	DESIGN	0.033242797057259396	WITHOUT_CLASSIFICATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999141502034539	WITHOUT_CLASSIFICATION	8.584979654616308E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999141502034539	WITHOUT_CLASSIFICATION	8.584979654616308E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999983378114418	WITHOUT_CLASSIFICATION	1.6621885581713744E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999983378114418	WITHOUT_CLASSIFICATION	1.6621885581713744E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999983378114418	WITHOUT_CLASSIFICATION	1.6621885581713744E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999983378114418	WITHOUT_CLASSIFICATION	1.6621885581713744E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999983378114418	WITHOUT_CLASSIFICATION	1.6621885581713744E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999983378114418	WITHOUT_CLASSIFICATION	1.6621885581713744E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999983378114418	WITHOUT_CLASSIFICATION	1.6621885581713744E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999983378114418	WITHOUT_CLASSIFICATION	1.6621885581713744E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999983378114418	WITHOUT_CLASSIFICATION	1.6621885581713744E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999999521048649	WITHOUT_CLASSIFICATION	4.789513510719585E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999999521048649	WITHOUT_CLASSIFICATION	4.789513510719585E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999999521048649	WITHOUT_CLASSIFICATION	4.789513510719585E-7	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999473698150895	WITHOUT_CLASSIFICATION	5.263018491064302E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998454390877	WITHOUT_CLASSIFICATION	1.545609122809436E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998454390877	WITHOUT_CLASSIFICATION	1.545609122809436E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998454390877	WITHOUT_CLASSIFICATION	1.545609122809436E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999698042587746	WITHOUT_CLASSIFICATION	3.0195741225421395E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999698042587746	WITHOUT_CLASSIFICATION	3.0195741225421395E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999698042587746	WITHOUT_CLASSIFICATION	3.0195741225421395E-5	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999773774839	WITHOUT_CLASSIFICATION	2.2622516108014156E-8	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999767808774565	WITHOUT_CLASSIFICATION	2.3219122543609868E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999426799027608	WITHOUT_CLASSIFICATION	5.732009723930703E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999014046758723	WITHOUT_CLASSIFICATION	9.859532412763734E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999014046758723	WITHOUT_CLASSIFICATION	9.859532412763734E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999014046758723	WITHOUT_CLASSIFICATION	9.859532412763734E-5	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999009904357758	WITHOUT_CLASSIFICATION	9.900956422420452E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999916539441331	WITHOUT_CLASSIFICATION	8.346055866844063E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999916539441331	WITHOUT_CLASSIFICATION	8.346055866844063E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998997207769131	WITHOUT_CLASSIFICATION	1.0027922308682838E-4	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999996286351935	WITHOUT_CLASSIFICATION	3.713648064973718E-6	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999996286351935	WITHOUT_CLASSIFICATION	3.713648064973718E-6	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9999986011281892	DESIGN	1.3988718107475668E-6	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999999988231688	WITHOUT_CLASSIFICATION	1.1768311952667142E-8	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9998962291575919	WITHOUT_CLASSIFICATION	1.0377084240803876E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990191704968	WITHOUT_CLASSIFICATION	9.808295032311387E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990191704968	WITHOUT_CLASSIFICATION	9.808295032311387E-7	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9674334598910124	DESIGN	0.032566540108987616	WITHOUT_CLASSIFICATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9971167552114094	WITHOUT_CLASSIFICATION	0.0028832447885905653	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9620767404319237	WITHOUT_CLASSIFICATION	0.03792325956807617	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9966259627464322	WITHOUT_CLASSIFICATION	0.003374037253567851	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9991172566687222	WITHOUT_CLASSIFICATION	8.827433312778468E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990191704968	WITHOUT_CLASSIFICATION	9.808295032311387E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990191704968	WITHOUT_CLASSIFICATION	9.808295032311387E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990191704968	WITHOUT_CLASSIFICATION	9.808295032311387E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990191704968	WITHOUT_CLASSIFICATION	9.808295032311387E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990191704968	WITHOUT_CLASSIFICATION	9.808295032311387E-7	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999670233351222	WITHOUT_CLASSIFICATION	3.2976664877761257E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999981752665706	WITHOUT_CLASSIFICATION	1.824733429390274E-6	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9942044449033872	WITHOUT_CLASSIFICATION	0.0057955550966127456	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999738915012	WITHOUT_CLASSIFICATION	2.610849872513415E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999818652241	WITHOUT_CLASSIFICATION	1.8134775980468712E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9997547510570977	WITHOUT_CLASSIFICATION	2.452489429023142E-4	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9997171654736816	WITHOUT_CLASSIFICATION	2.828345263184178E-4	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9998811667719709	WITHOUT_CLASSIFICATION	1.1883322802897021E-4	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999853706690959	WITHOUT_CLASSIFICATION	1.4629330904021157E-5	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999973908560154	WITHOUT_CLASSIFICATION	2.609143984552622E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999994970966888	WITHOUT_CLASSIFICATION	5.02903311122624E-7	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999773223365822	WITHOUT_CLASSIFICATION	2.2677663417774278E-5	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9989543090530993	WITHOUT_CLASSIFICATION	0.0010456909469006856	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999925262806	WITHOUT_CLASSIFICATION	7.47371948389585E-9	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9981361598638968	WITHOUT_CLASSIFICATION	0.001863840136103225	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9985749481166586	WITHOUT_CLASSIFICATION	0.0014250518833414196	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999998377090543	WITHOUT_CLASSIFICATION	1.6229094565742485E-7	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.999199394669242	WITHOUT_CLASSIFICATION	8.006053307580904E-4	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999998052225978	WITHOUT_CLASSIFICATION	1.9477740226873772E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999756040233	WITHOUT_CLASSIFICATION	2.439597662907958E-8	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9912648323174345	WITHOUT_CLASSIFICATION	0.00873516768256551	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999872489519076	WITHOUT_CLASSIFICATION	1.2751048092536576E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.996710905237604	WITHOUT_CLASSIFICATION	0.003289094762396093	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999999481320149	WITHOUT_CLASSIFICATION	5.186798508580123E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999999481320149	WITHOUT_CLASSIFICATION	5.186798508580123E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999999481320149	WITHOUT_CLASSIFICATION	5.186798508580123E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999999481320149	WITHOUT_CLASSIFICATION	5.186798508580123E-7	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.999997832416039	WITHOUT_CLASSIFICATION	2.1675839610438665E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9998290455310929	WITHOUT_CLASSIFICATION	1.70954468907203E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999996954959706	WITHOUT_CLASSIFICATION	3.045040294438551E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999996954959706	WITHOUT_CLASSIFICATION	3.045040294438551E-7	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.999997102296542	WITHOUT_CLASSIFICATION	2.897703458010653E-6	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999637498519528	WITHOUT_CLASSIFICATION	3.625014804711523E-5	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999253212073	WITHOUT_CLASSIFICATION	7.467879270445793E-8	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999857238588753	WITHOUT_CLASSIFICATION	1.4276141124831802E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999951344952925	WITHOUT_CLASSIFICATION	4.865504707427051E-6	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999974540143135	WITHOUT_CLASSIFICATION	2.545985686472437E-6	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999999716241033	WITHOUT_CLASSIFICATION	2.8375896770177693E-8	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9998137201609777	WITHOUT_CLASSIFICATION	1.8627983902232378E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9998137201609777	WITHOUT_CLASSIFICATION	1.8627983902232378E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9998137201609777	WITHOUT_CLASSIFICATION	1.8627983902232378E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9998137201609777	WITHOUT_CLASSIFICATION	1.8627983902232378E-4	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9998728581300418	WITHOUT_CLASSIFICATION	1.2714186995830754E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9918700046692195	WITHOUT_CLASSIFICATION	0.008129995330780517	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9918700046692195	WITHOUT_CLASSIFICATION	0.008129995330780517	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9918700046692195	WITHOUT_CLASSIFICATION	0.008129995330780517	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999916554232453	WITHOUT_CLASSIFICATION	8.344576754708925E-5	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.998195354664255	WITHOUT_CLASSIFICATION	0.0018046453357449658	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9998815079173728	WITHOUT_CLASSIFICATION	1.1849208262714095E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999926516120493	DESIGN	7.3483879508063435E-6	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999926516120493	DESIGN	7.3483879508063435E-6	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999709698657404	WITHOUT_CLASSIFICATION	2.9030134259551683E-5	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.5082756896113303	DESIGN	0.49172431038866965	WITHOUT_CLASSIFICATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999660467006927	WITHOUT_CLASSIFICATION	3.395329930734353E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999660467006927	WITHOUT_CLASSIFICATION	3.395329930734353E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9994983788668311	WITHOUT_CLASSIFICATION	5.01621133168806E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9994983788668311	WITHOUT_CLASSIFICATION	5.01621133168806E-4	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999974723383	WITHOUT_CLASSIFICATION	2.5276618257938673E-9	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.999983791610674	WITHOUT_CLASSIFICATION	1.6208389326099057E-5	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999945635860134	WITHOUT_CLASSIFICATION	5.436413986665815E-6	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999987352968124	WITHOUT_CLASSIFICATION	1.2647031875859322E-6	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999994833498888	WITHOUT_CLASSIFICATION	5.166501113233674E-7	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999994682077118	WITHOUT_CLASSIFICATION	5.317922882041935E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999972920316194	WITHOUT_CLASSIFICATION	2.707968380659486E-6	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9419565790486103	DESIGN	0.05804342095138979	WITHOUT_CLASSIFICATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999997650721578	WITHOUT_CLASSIFICATION	2.3492784225668815E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999963658115443	WITHOUT_CLASSIFICATION	3.634188455717197E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999963658115443	WITHOUT_CLASSIFICATION	3.634188455717197E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999963810507772	WITHOUT_CLASSIFICATION	3.6189492229404385E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999963810507772	WITHOUT_CLASSIFICATION	3.6189492229404385E-6	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999952851874291	WITHOUT_CLASSIFICATION	4.714812570966426E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999981833145472	WITHOUT_CLASSIFICATION	1.8166854528518908E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999239983258672	WITHOUT_CLASSIFICATION	7.600167413274509E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995906274818	WITHOUT_CLASSIFICATION	4.093725181802814E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995906274818	WITHOUT_CLASSIFICATION	4.093725181802814E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995906274818	WITHOUT_CLASSIFICATION	4.093725181802814E-7	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999993420307353	WITHOUT_CLASSIFICATION	6.579692646341328E-7	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999969958723384	WITHOUT_CLASSIFICATION	3.0041276616245623E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999988362807292	WITHOUT_CLASSIFICATION	1.163719270892031E-6	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.99999895773289	WITHOUT_CLASSIFICATION	1.0422671099215242E-6	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999980743069252	WITHOUT_CLASSIFICATION	1.9256930747922982E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999979902298715	WITHOUT_CLASSIFICATION	2.009770128533246E-6	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999987938149905	WITHOUT_CLASSIFICATION	1.20618500949956E-6	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999990631424459	WITHOUT_CLASSIFICATION	9.368575540603653E-7	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999957206335249	WITHOUT_CLASSIFICATION	4.279366475070604E-6	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999921358401849	WITHOUT_CLASSIFICATION	7.864159815105509E-6	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9180913311478375	WITHOUT_CLASSIFICATION	0.08190866885216247	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999999578621682	WITHOUT_CLASSIFICATION	4.2137831765197784E-8	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999995350972518	WITHOUT_CLASSIFICATION	4.649027482212126E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999926516120493	DESIGN	7.3483879508063435E-6	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.99970909803651	WITHOUT_CLASSIFICATION	2.909019634899393E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9830076945685541	WITHOUT_CLASSIFICATION	0.016992305431445885	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9961811183908271	DESIGN	0.0038188816091729153	WITHOUT_CLASSIFICATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998012019791546	WITHOUT_CLASSIFICATION	1.9879802084537225E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998012019791546	WITHOUT_CLASSIFICATION	1.9879802084537225E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998012019791546	WITHOUT_CLASSIFICATION	1.9879802084537225E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998012019791546	WITHOUT_CLASSIFICATION	1.9879802084537225E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998012019791546	WITHOUT_CLASSIFICATION	1.9879802084537225E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997256530864196	WITHOUT_CLASSIFICATION	2.7434691358042254E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998012019791546	WITHOUT_CLASSIFICATION	1.9879802084537225E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998012019791546	WITHOUT_CLASSIFICATION	1.9879802084537225E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998012019791546	WITHOUT_CLASSIFICATION	1.9879802084537225E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999967950721409	WITHOUT_CLASSIFICATION	3.204927859176812E-6	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999289676060155	WITHOUT_CLASSIFICATION	7.103239398458967E-5	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999979448536	WITHOUT_CLASSIFICATION	2.055146335836791E-9	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9729663426483622	WITHOUT_CLASSIFICATION	0.02703365735163775	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999983705020522	WITHOUT_CLASSIFICATION	1.6294979477861521E-6	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9994295967051581	WITHOUT_CLASSIFICATION	5.704032948419478E-4	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999681467511763	WITHOUT_CLASSIFICATION	3.185324882367983E-5	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999987023868725	WITHOUT_CLASSIFICATION	1.29761312748684E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999990936742541	WITHOUT_CLASSIFICATION	9.063257457798516E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999990936742541	WITHOUT_CLASSIFICATION	9.063257457798516E-7	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999989652451354	WITHOUT_CLASSIFICATION	1.0347548645304556E-6	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999979301605207	WITHOUT_CLASSIFICATION	2.069839479277108E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999986215253502	WITHOUT_CLASSIFICATION	1.378474649804026E-6	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999987733328564	WITHOUT_CLASSIFICATION	1.2266671436091435E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999988435681506	WITHOUT_CLASSIFICATION	1.1564318494187137E-6	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999984796947496	WITHOUT_CLASSIFICATION	1.5203052503473056E-6	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999967793019094	WITHOUT_CLASSIFICATION	3.2206980904304215E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999987237775597	WITHOUT_CLASSIFICATION	1.2762224403166517E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999977628770206	WITHOUT_CLASSIFICATION	2.237122979439092E-6	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999991296930706	WITHOUT_CLASSIFICATION	8.703069294775182E-7	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999995603789157	WITHOUT_CLASSIFICATION	4.3962108438156804E-7	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999992685572291	WITHOUT_CLASSIFICATION	7.314427709817587E-7	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999986048951196	WITHOUT_CLASSIFICATION	1.3951048803615678E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999990150816189	WITHOUT_CLASSIFICATION	9.849183810771664E-7	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999985829114414	WITHOUT_CLASSIFICATION	1.417088558635288E-6	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999980604434932	WITHOUT_CLASSIFICATION	1.939556506820825E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999979443685787	WITHOUT_CLASSIFICATION	2.0556314212537315E-6	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999987868063397	WITHOUT_CLASSIFICATION	1.2131936603740605E-6	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999988691880053	WITHOUT_CLASSIFICATION	1.13081199460159E-6	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999989531042964	WITHOUT_CLASSIFICATION	1.0468957036250814E-6	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999987539755055	WITHOUT_CLASSIFICATION	1.2460244945014923E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999988240334783	WITHOUT_CLASSIFICATION	1.175966521627336E-6	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999988351653373	WITHOUT_CLASSIFICATION	1.1648346626859175E-6	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999994480881175	WITHOUT_CLASSIFICATION	5.519118825648889E-7	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999994854956777	WITHOUT_CLASSIFICATION	5.145043221515739E-7	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999996537246191	WITHOUT_CLASSIFICATION	3.462753809551663E-7	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999992379879117	WITHOUT_CLASSIFICATION	7.6201208824825E-7	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999996938893495	WITHOUT_CLASSIFICATION	3.0611065049454724E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999994316538234	WITHOUT_CLASSIFICATION	5.683461766548104E-7	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999994845128363	WITHOUT_CLASSIFICATION	5.154871638078494E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999993724748926	WITHOUT_CLASSIFICATION	6.27525107311173E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999990077317946	WITHOUT_CLASSIFICATION	9.922682053689222E-7	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999992747774098	WITHOUT_CLASSIFICATION	7.252225900727255E-7	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999986507836155	WITHOUT_CLASSIFICATION	1.3492163844878144E-6	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999995815012872	WITHOUT_CLASSIFICATION	4.1849871276686295E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999997028251667	WITHOUT_CLASSIFICATION	2.971748332998086E-7	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.999999413894622	WITHOUT_CLASSIFICATION	5.861053780042719E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999992875810572	WITHOUT_CLASSIFICATION	7.124189427167737E-7	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999995748679471	WITHOUT_CLASSIFICATION	4.251320528930237E-7	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999994539417105	WITHOUT_CLASSIFICATION	5.46058289382387E-7	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999992458491871	WITHOUT_CLASSIFICATION	7.541508128144477E-7	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999996651393683	WITHOUT_CLASSIFICATION	3.3486063168965055E-7	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999995495253023	WITHOUT_CLASSIFICATION	4.5047469765576267E-7	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999989048739937	WITHOUT_CLASSIFICATION	1.095126006343806E-6	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999992457521263	WITHOUT_CLASSIFICATION	7.542478737177698E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.999999346178301	WITHOUT_CLASSIFICATION	6.538216990697234E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.999998893523084	WITHOUT_CLASSIFICATION	1.1064769160114686E-6	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999991522169401	WITHOUT_CLASSIFICATION	8.477830598963359E-7	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999994944373136	WITHOUT_CLASSIFICATION	5.055626864892488E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999991510612816	WITHOUT_CLASSIFICATION	8.489387183591119E-7	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999994679313574	WITHOUT_CLASSIFICATION	5.320686425352895E-7	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999994078706314	WITHOUT_CLASSIFICATION	5.921293686413031E-7	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999996502009731	WITHOUT_CLASSIFICATION	3.497990268022472E-7	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999990324377616	WITHOUT_CLASSIFICATION	9.675622384290195E-7	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999990324377616	WITHOUT_CLASSIFICATION	9.675622384290195E-7	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999987217964454	WITHOUT_CLASSIFICATION	1.2782035545289355E-6	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999994978869148	WITHOUT_CLASSIFICATION	5.021130852205365E-7	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999987007506855	WITHOUT_CLASSIFICATION	1.2992493144745948E-6	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999992177753325	WITHOUT_CLASSIFICATION	7.822246674180109E-7	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999989935616579	WITHOUT_CLASSIFICATION	1.006438342092825E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999993935805365	WITHOUT_CLASSIFICATION	6.06419463563562E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999981502646186	WITHOUT_CLASSIFICATION	1.8497353813713921E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999990231697521	WITHOUT_CLASSIFICATION	9.768302479173884E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999992740756739	WITHOUT_CLASSIFICATION	7.259243260398171E-7	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999990832900725	WITHOUT_CLASSIFICATION	9.16709927527439E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999985351721852	WITHOUT_CLASSIFICATION	1.4648278147686973E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999985351721852	WITHOUT_CLASSIFICATION	1.4648278147686973E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999747663519661	WITHOUT_CLASSIFICATION	2.523364803385875E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999881754335511	WITHOUT_CLASSIFICATION	1.1824566448834213E-5	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998608816354766	WITHOUT_CLASSIFICATION	1.3911836452331684E-4	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999939390724	WITHOUT_CLASSIFICATION	6.060927602723831E-9	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999046731814057	WITHOUT_CLASSIFICATION	9.532681859432317E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999046731814057	WITHOUT_CLASSIFICATION	9.532681859432317E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999046731814057	WITHOUT_CLASSIFICATION	9.532681859432317E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999046731814057	WITHOUT_CLASSIFICATION	9.532681859432317E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8124424906213019	DESIGN	0.1875575093786981	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.7372849541743126	DESIGN	0.26271504582568733	WITHOUT_CLASSIFICATION
// line 313	WITHOUT_CLASSIFICATION	0.9999987815833803	WITHOUT_CLASSIFICATION	1.218416619727857E-6	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999975803057256	WITHOUT_CLASSIFICATION	2.4196942742507587E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999987239927188	WITHOUT_CLASSIFICATION	1.2760072811019802E-6	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999990060622101	WITHOUT_CLASSIFICATION	9.939377899239883E-7	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999990807940292	WITHOUT_CLASSIFICATION	9.192059708381284E-7	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999988544945797	WITHOUT_CLASSIFICATION	1.1455054203913109E-6	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999987190888064	WITHOUT_CLASSIFICATION	1.2809111935900477E-6	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999988189004198	WITHOUT_CLASSIFICATION	1.1810995802314826E-6	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999979608187969	WITHOUT_CLASSIFICATION	2.0391812031268504E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.999999177595732	WITHOUT_CLASSIFICATION	8.224042681502663E-7	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999986379142699	WITHOUT_CLASSIFICATION	1.3620857301095916E-6	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.999997213739822	WITHOUT_CLASSIFICATION	2.786260178065594E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.999997539778914	WITHOUT_CLASSIFICATION	2.460221085852477E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999984846317407	WITHOUT_CLASSIFICATION	1.5153682593026807E-6	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999965867479178	WITHOUT_CLASSIFICATION	3.41325208225296E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999992889496041	WITHOUT_CLASSIFICATION	7.11050395825943E-7	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999992909025446	WITHOUT_CLASSIFICATION	7.090974554555632E-7	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999988650832566	WITHOUT_CLASSIFICATION	1.134916743454115E-6	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999992127148898	WITHOUT_CLASSIFICATION	7.872851102328214E-7	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999986546796298	WITHOUT_CLASSIFICATION	1.345320370250588E-6	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999990855955627	WITHOUT_CLASSIFICATION	9.144044373829054E-7	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999987098593857	WITHOUT_CLASSIFICATION	1.2901406143437417E-6	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999988492389642	WITHOUT_CLASSIFICATION	1.1507610357944782E-6	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999994679671763	WITHOUT_CLASSIFICATION	5.320328237918188E-7	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999996179412516	WITHOUT_CLASSIFICATION	3.820587483759128E-7	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999996354010834	WITHOUT_CLASSIFICATION	3.6459891664158607E-7	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999995678435891	WITHOUT_CLASSIFICATION	4.321564108190523E-7	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999986091450849	WITHOUT_CLASSIFICATION	1.3908549151882937E-6	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999991114984735	WITHOUT_CLASSIFICATION	8.885015263969159E-7	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999994298732109	WITHOUT_CLASSIFICATION	5.701267892129691E-7	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999995226240807	WITHOUT_CLASSIFICATION	4.773759193250231E-7	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.999999186234797	WITHOUT_CLASSIFICATION	8.137652030166828E-7	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999994103124924	WITHOUT_CLASSIFICATION	5.896875076358043E-7	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999993818444469	WITHOUT_CLASSIFICATION	6.181555531592188E-7	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999990987065575	WITHOUT_CLASSIFICATION	9.012934424227063E-7	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.999999024542521	WITHOUT_CLASSIFICATION	9.754574789198148E-7	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999994249622934	WITHOUT_CLASSIFICATION	5.750377066128259E-7	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999991188796955	WITHOUT_CLASSIFICATION	8.811203045268248E-7	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999997050708636	WITHOUT_CLASSIFICATION	2.949291364212712E-7	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999991019706198	WITHOUT_CLASSIFICATION	8.980293802352227E-7	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999986084034533	WITHOUT_CLASSIFICATION	1.3915965466356825E-6	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999992330852928	WITHOUT_CLASSIFICATION	7.669147072641516E-7	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999993440790801	WITHOUT_CLASSIFICATION	6.559209198614659E-7	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999991840350652	WITHOUT_CLASSIFICATION	8.159649349709206E-7	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999989500049045	WITHOUT_CLASSIFICATION	1.049995095432352E-6	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999984241001394	WITHOUT_CLASSIFICATION	1.5758998606073679E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999995406484888	WITHOUT_CLASSIFICATION	4.593515112683752E-7	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999990678342161	WITHOUT_CLASSIFICATION	9.321657838569232E-7	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999985285159582	WITHOUT_CLASSIFICATION	1.4714840418336234E-6	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999987641488894	WITHOUT_CLASSIFICATION	1.2358511105100195E-6	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999997031657898	WITHOUT_CLASSIFICATION	2.968342101555837E-7	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999995052532314	WITHOUT_CLASSIFICATION	4.94746768557107E-7	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999995547136115	WITHOUT_CLASSIFICATION	4.452863884706902E-7	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999995595123852	WITHOUT_CLASSIFICATION	4.40487614865408E-7	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999995225042103	WITHOUT_CLASSIFICATION	4.774957896874658E-7	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999994362888751	WITHOUT_CLASSIFICATION	5.637111248180102E-7	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999996891853469	WITHOUT_CLASSIFICATION	3.1081465319086633E-7	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9886318367483736	WITHOUT_CLASSIFICATION	0.01136816325162637	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999920313470603	WITHOUT_CLASSIFICATION	7.968652939663934E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974313759092964	WITHOUT_CLASSIFICATION	0.0025686240907035595	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974313759092964	WITHOUT_CLASSIFICATION	0.0025686240907035595	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974313759092964	WITHOUT_CLASSIFICATION	0.0025686240907035595	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974313759092964	WITHOUT_CLASSIFICATION	0.0025686240907035595	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974313759092964	WITHOUT_CLASSIFICATION	0.0025686240907035595	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974313759092964	WITHOUT_CLASSIFICATION	0.0025686240907035595	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9974313759092964	WITHOUT_CLASSIFICATION	0.0025686240907035595	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999647143337	WITHOUT_CLASSIFICATION	3.5285666299786904E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999647143337	WITHOUT_CLASSIFICATION	3.5285666299786904E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999647143337	WITHOUT_CLASSIFICATION	3.5285666299786904E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999647143337	WITHOUT_CLASSIFICATION	3.5285666299786904E-7	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9961770401511085	WITHOUT_CLASSIFICATION	0.003822959848891433	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9961770401511085	WITHOUT_CLASSIFICATION	0.003822959848891433	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999386873217	WITHOUT_CLASSIFICATION	6.131267832885975E-8	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999998783447191	WITHOUT_CLASSIFICATION	1.216552808997221E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999998783447191	WITHOUT_CLASSIFICATION	1.216552808997221E-6	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9555490173601232	WITHOUT_CLASSIFICATION	0.04445098263987669	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999756599652796	WITHOUT_CLASSIFICATION	2.4340034720337886E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993001369243	WITHOUT_CLASSIFICATION	6.998630757671814E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993001369243	WITHOUT_CLASSIFICATION	6.998630757671814E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993001369243	WITHOUT_CLASSIFICATION	6.998630757671814E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993001369243	WITHOUT_CLASSIFICATION	6.998630757671814E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993001369243	WITHOUT_CLASSIFICATION	6.998630757671814E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993001369243	WITHOUT_CLASSIFICATION	6.998630757671814E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993001369243	WITHOUT_CLASSIFICATION	6.998630757671814E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990330619665	WITHOUT_CLASSIFICATION	9.669380336186017E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999957892974749	WITHOUT_CLASSIFICATION	4.2107025251836375E-6	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999322753839	WITHOUT_CLASSIFICATION	6.772461613689587E-8	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999322753839	WITHOUT_CLASSIFICATION	6.772461613689587E-8	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999805887139926	WITHOUT_CLASSIFICATION	1.9411286007369532E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999553540104769	WITHOUT_CLASSIFICATION	4.4645989523058555E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999553540104769	WITHOUT_CLASSIFICATION	4.4645989523058555E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999948056526	WITHOUT_CLASSIFICATION	5.194347432326038E-9	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999995781039415	DESIGN	4.218960585048988E-7	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9990975103967986	WITHOUT_CLASSIFICATION	9.024896032013695E-4	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9979347212788431	WITHOUT_CLASSIFICATION	0.0020652787211569157	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.999959464451338	WITHOUT_CLASSIFICATION	4.053554866200839E-5	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999911655150768	WITHOUT_CLASSIFICATION	8.834484923078126E-6	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999989206918847	WITHOUT_CLASSIFICATION	1.0793081153728873E-6	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999890025474	WITHOUT_CLASSIFICATION	1.0997452659080064E-8	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9995315260779499	WITHOUT_CLASSIFICATION	4.684739220500808E-4	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999965816821303	WITHOUT_CLASSIFICATION	3.4183178694957187E-6	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.980666944261113	WITHOUT_CLASSIFICATION	0.01933305573888699	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999996047321124	WITHOUT_CLASSIFICATION	3.9526788764827405E-7	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999990709026955	WITHOUT_CLASSIFICATION	9.290973044173939E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.640921197929637	WITHOUT_CLASSIFICATION	0.35907880207036313	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999999409319786	WITHOUT_CLASSIFICATION	5.906802138537873E-8	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999997685914576	WITHOUT_CLASSIFICATION	2.314085424370418E-7	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999998991174575	WITHOUT_CLASSIFICATION	1.0088254250128287E-7	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999886355849573	WITHOUT_CLASSIFICATION	1.1364415042739131E-5	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9989386487702703	WITHOUT_CLASSIFICATION	0.0010613512297297637	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9989386487702703	WITHOUT_CLASSIFICATION	0.0010613512297297637	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999689356874831	WITHOUT_CLASSIFICATION	3.106431251685115E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999922640197	WITHOUT_CLASSIFICATION	7.735980252911108E-9	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999802958416	WITHOUT_CLASSIFICATION	1.9704158361430414E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.998895587983546	WITHOUT_CLASSIFICATION	0.0011044120164539683	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999713577947755	WITHOUT_CLASSIFICATION	2.8642205224456174E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999713577947755	WITHOUT_CLASSIFICATION	2.8642205224456174E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999713577947755	WITHOUT_CLASSIFICATION	2.8642205224456174E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9962994471503251	WITHOUT_CLASSIFICATION	0.0037005528496749304	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999948303603343	WITHOUT_CLASSIFICATION	5.169639665790486E-6	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999872677970105	WITHOUT_CLASSIFICATION	1.2732202989572792E-5	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999438151519595	WITHOUT_CLASSIFICATION	5.618484804036511E-5	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.995726534313503	WITHOUT_CLASSIFICATION	0.0042734656864970395	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.999999999913322	WITHOUT_CLASSIFICATION	8.667803769604448E-11	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999999958474	WITHOUT_CLASSIFICATION	4.152479899301972E-12	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999653661004	WITHOUT_CLASSIFICATION	3.463389971545421E-8	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999994465798627	WITHOUT_CLASSIFICATION	5.534201372964243E-7	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999998489612391	WITHOUT_CLASSIFICATION	1.5103876100974095E-7	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999897800511123	WITHOUT_CLASSIFICATION	1.0219948887791309E-5	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999990563012845	WITHOUT_CLASSIFICATION	9.436987155118321E-7	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999307634868801	DESIGN	6.923651311986418E-5	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9584439620656463	WITHOUT_CLASSIFICATION	0.0415560379343537	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.999996705398367	WITHOUT_CLASSIFICATION	3.294601632894189E-6	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999159238	WITHOUT_CLASSIFICATION	8.407618300140507E-11	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.999844182875779	WITHOUT_CLASSIFICATION	1.558171242210122E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999440075087	WITHOUT_CLASSIFICATION	5.599249132796108E-8	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999999903267125	WITHOUT_CLASSIFICATION	9.673287420871597E-9	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.7513489327860267	DESIGN	0.24865106721397337	WITHOUT_CLASSIFICATION
// FIXME: move out of this class!	DESIGN	0.9993247912747697	DESIGN	6.752087252302556E-4	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9995968787041493	DESIGN	4.031212958507763E-4	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9996609112518338	DESIGN	3.390887481661965E-4	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9998914380688891	DESIGN	1.085619311108129E-4	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.9989406706396885	DESIGN	0.0010593293603115047	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999975415616511	DESIGN	2.4584383489036565E-6	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.5104832362970643	WITHOUT_CLASSIFICATION	0.4895167637029357	DESIGN
// we might need to perform a DST correction	DESIGN	0.9999718174043737	WITHOUT_CLASSIFICATION	2.818259562633304E-5	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999479237810631	WITHOUT_CLASSIFICATION	5.207621893694649E-5	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9999783702444428	DESIGN	2.1629755557170972E-5	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999603216849499	WITHOUT_CLASSIFICATION	3.967831505019996E-5	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9999706102711704	DESIGN	2.93897288296342E-5	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9999706102711704	DESIGN	2.93897288296342E-5	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.999997642427533	DESIGN	2.3575724670848298E-6	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9999975252157466	DESIGN	2.474784253454744E-6	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999999567038426	DESIGN	4.3296157462602154E-8	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9998774350279802	DESIGN	1.2256497201975917E-4	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999998030450472	DESIGN	1.9695495280170376E-7	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.8051781888769006	DESIGN	0.19482181112309943	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.999999986536743	DESIGN	1.3463257073018634E-8	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9992425202528802	DESIGN	7.574797471198286E-4	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999992203935599	DESIGN	7.7960644006043E-7	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.5437738887747747	WITHOUT_CLASSIFICATION	0.4562261112252251	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9999998978262563	DESIGN	1.0217374375558807E-7	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.999897321271992	DESIGN	1.0267872800789065E-4	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.976729900545602	DESIGN	0.02327009945439798	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9999716465979033	DESIGN	2.8353402096793983E-5	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9867465779645362	WITHOUT_CLASSIFICATION	0.013253422035463876	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9999897604792641	DESIGN	1.023952073581679E-5	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9972527237853192	DESIGN	0.0027472762146807635	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9999999958166734	DESIGN	4.183326574529268E-9	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9997620395619424	DESIGN	2.3796043805747357E-4	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9950698594301683	WITHOUT_CLASSIFICATION	0.004930140569831643	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.9998044807063857	DESIGN	1.9551929361431516E-4	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9828020730576347	DESIGN	0.01719792694236529	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9999980434214404	DESIGN	1.9565785596280756E-6	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9992360269747349	DESIGN	7.639730252650419E-4	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999935587454224	DESIGN	6.4412545776120486E-6	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9999282953743617	DESIGN	7.170462563834644E-5	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.99999999967293	DESIGN	3.270700159527014E-10	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999999999983528	DESIGN	1.6471724136361192E-12	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9999277738009117	DESIGN	7.222619908832786E-5	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.618144072543957	DESIGN	0.3818559274560429	WITHOUT_CLASSIFICATION
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9695299256841537	DESIGN	0.03047007431584622	WITHOUT_CLASSIFICATION
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9997861801248954	DESIGN	2.1381987510466556E-4	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9999936278637216	DESIGN	6.372136278450262E-6	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999895477564	DESIGN	1.0452243686018503E-8	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.7813663221030178	WITHOUT_CLASSIFICATION	0.2186336778969822	DESIGN
// TODO: handle writing into original buffer better	DESIGN	0.999893931811662	DESIGN	1.060681883380547E-4	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9999960289501761	DESIGN	3.971049823915604E-6	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9999767054027779	DESIGN	2.3294597222064497E-5	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9999976062152743	DESIGN	2.3937847255902954E-6	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9980208025701219	DESIGN	0.0019791974298780956	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999938869854488	DESIGN	6.113014551208457E-6	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9951082473518293	DESIGN	0.004891752648170628	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9582604061230598	DESIGN	0.041739593876940165	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9999999931986797	DESIGN	6.801320244095124E-9	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999999999996914	DESIGN	3.086820231506667E-13	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9999490186054631	DESIGN	5.0981394536739886E-5	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9999997084113741	DESIGN	2.9158862590515494E-7	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9999902438580082	DESIGN	9.756141991695914E-6	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9991958283965996	DESIGN	8.041716034003785E-4	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.5936040826736072	WITHOUT_CLASSIFICATION	0.4063959173263929	DESIGN
// FIXME: figure out why we get null sometimes	DESIGN	0.7947952992208521	DESIGN	0.20520470077914785	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.7480481241286859	WITHOUT_CLASSIFICATION	0.251951875871314	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9951089736813077	DESIGN	0.004891026318692342	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9999999947753451	DESIGN	5.224655025905379E-9	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9997064551778588	DESIGN	2.9354482214110234E-4	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9999997788196013	DESIGN	2.2118039861870642E-7	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9960931404733594	DESIGN	0.003906859526640526	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9987907684632901	DESIGN	0.0012092315367099595	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999993265718476	DESIGN	6.734281524037054E-7	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999999233529632	DESIGN	7.664703684635904E-8	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9977463152314986	DESIGN	0.00225368476850138	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.8378528926389842	WITHOUT_CLASSIFICATION	0.16214710736101576	DESIGN
// end hack	DESIGN	0.9758000633476459	WITHOUT_CLASSIFICATION	0.024199936652354093	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.9999300407284343	DESIGN	6.995927156566594E-5	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9999905122528201	DESIGN	9.487747180005622E-6	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9998645851703738	DESIGN	1.3541482962618455E-4	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9969802303536611	DESIGN	0.003019769646338874	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999974654181073	DESIGN	2.5345818927670627E-6	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999998523883	WITHOUT_CLASSIFICATION	1.476117071663964E-10	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9999992086299522	DESIGN	7.913700477913348E-7	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.952511407244553	DESIGN	0.04748859275544695	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.952511407244553	DESIGN	0.04748859275544695	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.952511407244553	DESIGN	0.04748859275544695	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9689513094041222	DESIGN	0.031048690595877834	WITHOUT_CLASSIFICATION
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.999976820333785	DESIGN	2.317966621502087E-5	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.9967095198248037	DESIGN	0.003290480175196203	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.8656901389591349	DESIGN	0.134309861040865	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.7881340558045645	DESIGN	0.21186594419543542	WITHOUT_CLASSIFICATION
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9978801390053988	DESIGN	0.002119860994601148	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9617124598642431	DESIGN	0.038287540135756894	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9999499080363993	DESIGN	5.00919636007523E-5	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9993518562457302	DESIGN	6.481437542697701E-4	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9967148530604968	WITHOUT_CLASSIFICATION	0.0032851469395032184	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.999997392294007	DESIGN	2.6077059930389543E-6	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9999999923529179	DESIGN	7.6470820308964E-9	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.999997392294007	DESIGN	2.6077059930389543E-6	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9039464276650269	WITHOUT_CLASSIFICATION	0.09605357233497318	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.87454720377777	DESIGN	0.12545279622223005	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.87454720377777	DESIGN	0.12545279622223005	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999993869136539	DESIGN	6.130863462150255E-7	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999999878402062	DESIGN	1.2159793958260908E-8	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9999993869136539	DESIGN	6.130863462150255E-7	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9999884324055285	DESIGN	1.156759447144994E-5	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9996609454558353	DESIGN	3.3905454416475377E-4	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.9999999803402069	DESIGN	1.9659793119586436E-8	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9991755086103462	DESIGN	8.244913896537369E-4	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9996124793717128	DESIGN	3.875206282872624E-4	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9996124793717128	DESIGN	3.875206282872624E-4	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9409799298266701	DESIGN	0.05902007017332997	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.951203334523122	WITHOUT_CLASSIFICATION	0.0487966654768781	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9999978174624337	DESIGN	2.182537566284071E-6	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.7712384034559278	DESIGN	0.22876159654407238	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9999790358996161	DESIGN	2.096410038390404E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9748708325701743	DESIGN	0.02512916742982578	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.999722085187248	DESIGN	2.779148127519597E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.5729050285434525	WITHOUT_CLASSIFICATION	0.4270949714565475	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9993806200179124	DESIGN	6.193799820876296E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.5729050285434525	WITHOUT_CLASSIFICATION	0.4270949714565475	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9569672349937369	DESIGN	0.043032765006262984	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9994407280776938	DESIGN	5.592719223060942E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9997949258489387	DESIGN	2.0507415106140286E-4	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.999781038375059	DESIGN	2.189616249408353E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9998942375431529	DESIGN	1.0576245684709253E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9997461511760132	DESIGN	2.5384882398685416E-4	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9999358644246122	DESIGN	6.413557538781603E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9871587376445383	DESIGN	0.012841262355461621	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9284027297320108	DESIGN	0.07159727026798919	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9997461511760132	DESIGN	2.5384882398685416E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.7932688980587197	WITHOUT_CLASSIFICATION	0.20673110194128042	DESIGN
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999999451689076	DESIGN	5.4831092473054057E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9997636871739592	DESIGN	2.3631282604079696E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.6770030099867718	DESIGN	0.32299699001322824	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999999963869113	DESIGN	3.6130886658437727E-9	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9959889127747675	DESIGN	0.00401108722523246	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9995135341297251	DESIGN	4.864658702749971E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9912543909676244	DESIGN	0.008745609032375671	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9999520476830513	DESIGN	4.7952316948693607E-5	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9168002153106478	WITHOUT_CLASSIFICATION	0.08319978468935219	DESIGN
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9982934832879805	DESIGN	0.0017065167120195494	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9983239778353593	DESIGN	0.0016760221646407066	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9999879878736572	DESIGN	1.201212634294009E-5	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9400284523571716	WITHOUT_CLASSIFICATION	0.05997154764282836	DESIGN
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.997354139729379	WITHOUT_CLASSIFICATION	0.0026458602706210133	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9992905725734473	DESIGN	7.094274265526629E-4	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9999906468682158	DESIGN	9.35313178426993E-6	WITHOUT_CLASSIFICATION
// we basically ignore protocol. let someone report it...	DESIGN	0.9964780707793304	WITHOUT_CLASSIFICATION	0.003521929220669547	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9991217199772597	DESIGN	8.782800227402091E-4	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9992379117444721	WITHOUT_CLASSIFICATION	7.620882555278511E-4	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.8445845092250873	WITHOUT_CLASSIFICATION	0.1554154907749127	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.999977645036348	DESIGN	2.2354963652111426E-5	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9976630017338848	DESIGN	0.0023369982661152686	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.994800221743304	DESIGN	0.005199778256696069	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9999954142019016	DESIGN	4.585798098397445E-6	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.6480319024366051	DESIGN	0.351968097563395	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.8911046872808787	DESIGN	0.10889531271912133	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999987157503444	DESIGN	1.2842496556365812E-6	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999781329288746	WITHOUT_CLASSIFICATION	2.1867071125330735E-5	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999727356788153	WITHOUT_CLASSIFICATION	2.726432118465699E-5	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999060925633507	WITHOUT_CLASSIFICATION	9.390743664923492E-5	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.502499434559911	WITHOUT_CLASSIFICATION	0.4975005654400891	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.9922286156231073	DESIGN	0.007771384376892666	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.6590352415949067	DESIGN	0.3409647584050935	WITHOUT_CLASSIFICATION
// TODO: public only?	DESIGN	0.9999592647712471	DESIGN	4.073522875285665E-5	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9970101723365716	WITHOUT_CLASSIFICATION	0.0029898276634282707	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9999888088426176	DESIGN	1.1191157382458514E-5	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.999992120066362	DESIGN	7.879933638031082E-6	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9993828154854474	DESIGN	6.171845145526034E-4	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.9941314709977714	DESIGN	0.005868529002228592	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9803465071236661	DESIGN	0.019653492876333892	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9803465071236661	DESIGN	0.019653492876333892	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9981357305540725	WITHOUT_CLASSIFICATION	0.0018642694459275935	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9984212885936589	DESIGN	0.0015787114063411524	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9984212885936589	DESIGN	0.0015787114063411524	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9999969659478296	WITHOUT_CLASSIFICATION	3.0340521704335765E-6	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9996801849317087	DESIGN	3.198150682911458E-4	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.8257448096928807	DESIGN	0.17425519030711928	WITHOUT_CLASSIFICATION
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9997951663937513	DESIGN	2.048336062486487E-4	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9999999995335347	DESIGN	4.664653265100344E-10	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9998222885632541	DESIGN	1.777114367458871E-4	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.9994383846518826	DESIGN	5.616153481173307E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9998818428015218	DESIGN	1.1815719847817107E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9998818428015218	DESIGN	1.1815719847817107E-4	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.7982464330607706	DESIGN	0.20175356693922944	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.5361314971853697	DESIGN	0.4638685028146304	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9879021005370909	DESIGN	0.012097899462909048	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9999397259915326	DESIGN	6.0274008467375624E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9999000781563482	DESIGN	9.992184365182287E-5	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999856750930589	WITHOUT_CLASSIFICATION	1.4324906941120937E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9999587484485742	DESIGN	4.1251551425715956E-5	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9892050607614203	WITHOUT_CLASSIFICATION	0.0107949392385796	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.8293684121599266	DESIGN	0.17063158784007337	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.5386401083031576	DESIGN	0.46135989169684244	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999999682151042	WITHOUT_CLASSIFICATION	3.1784895885199087E-8	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9971377655162099	DESIGN	0.0028622344837899937	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9999906468682158	DESIGN	9.35313178426993E-6	WITHOUT_CLASSIFICATION
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.999998353001355	WITHOUT_CLASSIFICATION	1.6469986450528937E-6	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9999992517268996	DESIGN	7.48273100438609E-7	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.99999710979417	DESIGN	2.890205830007265E-6	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9999861658946149	DESIGN	1.3834105385141091E-5	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.6254019478011329	WITHOUT_CLASSIFICATION	0.3745980521988671	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9918255448378858	DESIGN	0.008174455162114245	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.7276026082235832	DESIGN	0.27239739177641664	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999846604239906	DESIGN	1.5339576009389495E-5	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999846604239906	DESIGN	1.5339576009389495E-5	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.752357270735266	WITHOUT_CLASSIFICATION	0.24764272926473396	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9974743780241715	DESIGN	0.0025256219758284315	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9917064753715783	DESIGN	0.008293524628421691	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999834554879619	DESIGN	1.6544512038169527E-5	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.935149032607993	DESIGN	0.06485096739200709	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9996292078805776	WITHOUT_CLASSIFICATION	3.7079211942242453E-4	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.7675705534381918	WITHOUT_CLASSIFICATION	0.23242944656180817	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9958731842998289	DESIGN	0.0041268157001711665	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9618127846649303	DESIGN	0.038187215335069774	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.999999999996728	DESIGN	3.2721361675271603E-12	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999914498373426	DESIGN	8.550162657335922E-6	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9999999108274665	DESIGN	8.917253347759066E-8	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999914498373426	DESIGN	8.550162657335922E-6	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999914498373426	DESIGN	8.550162657335922E-6	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.6411582529340999	WITHOUT_CLASSIFICATION	0.3588417470659	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9999997996279882	DESIGN	2.0037201179820079E-7	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999999373386359	DESIGN	6.266136415697425E-8	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.995286455843506	DESIGN	0.004713544156494084	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9996931528456091	DESIGN	3.0684715439087374E-4	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.9847295364254709	DESIGN	0.015270463574529101	WITHOUT_CLASSIFICATION
// TODO: This is probably BAD...	DESIGN	0.9999993620494168	DESIGN	6.379505832846802E-7	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999876083606192	DESIGN	1.2391639380913967E-5	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9999999947340491	DESIGN	5.265950813202695E-9	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999997962037522	DESIGN	2.0379624785396515E-7	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9999045466941665	DESIGN	9.545330583344178E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999876083606192	DESIGN	1.2391639380913967E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999876083606192	DESIGN	1.2391639380913967E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999876083606192	DESIGN	1.2391639380913967E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999876083606192	DESIGN	1.2391639380913967E-5	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.999999612161852	DESIGN	3.8783814809177974E-7	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9999958745376214	DESIGN	4.125462378629094E-6	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9788574080618762	DESIGN	0.02114259193812382	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9999905830687994	DESIGN	9.41693120069998E-6	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9999905830687994	DESIGN	9.41693120069998E-6	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9981300131371139	WITHOUT_CLASSIFICATION	0.0018699868628861587	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9982609513600132	WITHOUT_CLASSIFICATION	0.001739048639986856	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9328361311710816	WITHOUT_CLASSIFICATION	0.06716386882891849	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9328361311710816	WITHOUT_CLASSIFICATION	0.06716386882891849	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9999043001067602	DESIGN	9.569989323982424E-5	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9999772559181839	DESIGN	2.2744081816187025E-5	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9999390450474451	DESIGN	6.0954952554893205E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999996372405	DESIGN	3.627595356259864E-10	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999999996372405	DESIGN	3.627595356259864E-10	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9999219376150505	DESIGN	7.806238494937499E-5	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.999913039341683	DESIGN	8.696065831705836E-5	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9999184769674339	DESIGN	8.15230325661018E-5	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999565067091754	DESIGN	4.349329082452849E-5	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.999997207612258	DESIGN	2.7923877419377866E-6	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9998219258881446	WITHOUT_CLASSIFICATION	1.7807411185549824E-4	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9995160755661823	DESIGN	4.839244338177154E-4	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9986579459690506	DESIGN	0.0013420540309494124	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9991206389188154	DESIGN	8.793610811846678E-4	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9991755086103462	DESIGN	8.244913896537369E-4	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9991755086103462	DESIGN	8.244913896537369E-4	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9999997747872396	DESIGN	2.2521276042889764E-7	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9409799298266701	DESIGN	0.05902007017332997	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.951203334523122	WITHOUT_CLASSIFICATION	0.0487966654768781	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999999995307431	DESIGN	4.692568709857993E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.999999693812517	DESIGN	3.0618748303011815E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9999986079950982	DESIGN	1.3920049017362142E-6	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.9055598233630544	DESIGN	0.09444017663694551	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9999467512125177	DESIGN	5.3248787482285986E-5	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9999999198473631	DESIGN	8.01526368228143E-8	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.6984067426846579	WITHOUT_CLASSIFICATION	0.3015932573153422	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.7982464330607706	DESIGN	0.20175356693922944	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9618127846649303	DESIGN	0.038187215335069774	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999996699512	DESIGN	3.300487508113591E-10	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9906250432698562	DESIGN	0.009374956730143836	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999846604239906	DESIGN	1.5339576009389495E-5	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9999680027930367	DESIGN	3.1997206963343346E-5	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999997679087076	DESIGN	2.3209129254898949E-7	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999999997648604	DESIGN	2.351395197071732E-10	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999991029	DESIGN	8.970336807025119E-13	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9999826202380138	DESIGN	1.7379761986274524E-5	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999936900835343	DESIGN	6.309916465691249E-6	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999936900835343	DESIGN	6.309916465691249E-6	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9977373936429326	DESIGN	0.0022626063570675117	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9895154364980099	DESIGN	0.01048456350199009	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.9969890542205894	WITHOUT_CLASSIFICATION	0.0030109457794107535	DESIGN
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9997516030725278	DESIGN	2.4839692747221227E-4	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9895154364980099	DESIGN	0.01048456350199009	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9835196308961645	WITHOUT_CLASSIFICATION	0.01648036910383556	DESIGN
// HACK: force clinit to be created	DESIGN	0.6870178511299786	DESIGN	0.3129821488700214	WITHOUT_CLASSIFICATION
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999999998767953	DESIGN	1.232046615793212E-10	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9999984816492145	DESIGN	1.518350785513041E-6	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9611376040852733	DESIGN	0.03886239591472674	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.952511407244553	DESIGN	0.04748859275544695	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9999846604239906	DESIGN	1.5339576009389495E-5	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9689513094041222	DESIGN	0.031048690595877834	WITHOUT_CLASSIFICATION
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999998299297727	DESIGN	1.7007022737444049E-7	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.9717978515215536	DESIGN	0.028202148478446355	WITHOUT_CLASSIFICATION
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9999785053611507	DESIGN	2.149463884922029E-5	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999997238303933	DESIGN	2.761696066947612E-7	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999999895477564	DESIGN	1.0452243686018503E-8	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9458214100704044	DESIGN	0.054178589929595566	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9989944771733671	DESIGN	0.0010055228266329522	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9999998528897329	DESIGN	1.471102671045183E-7	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9997342274240867	WITHOUT_CLASSIFICATION	2.657725759133148E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9967095198248037	DESIGN	0.003290480175196203	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9998818428015218	DESIGN	1.1815719847817107E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9998774350279802	DESIGN	1.2256497201975917E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9998774350279802	DESIGN	1.2256497201975917E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9998774350279802	DESIGN	1.2256497201975917E-4	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999999983088	DESIGN	1.6912366569747698E-12	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999999950449397	DESIGN	4.955060241440469E-9	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9924602915079445	WITHOUT_CLASSIFICATION	0.007539708492055453	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9999999680225873	DESIGN	3.197741273967559E-8	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9975693719841839	DESIGN	0.00243062801581604	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.8515111650098319	DESIGN	0.14848883499016807	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9980208025701219	DESIGN	0.0019791974298780956	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.786956656451567	DESIGN	0.21304334354843307	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999938869854488	DESIGN	6.113014551208457E-6	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.999927257536867	DESIGN	7.274246313299043E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9998646975870168	DESIGN	1.3530241298316442E-4	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9999287579673095	DESIGN	7.12420326903835E-5	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9999948200583203	DESIGN	5.179941679706087E-6	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9996609112518338	DESIGN	3.390887481661965E-4	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9143023912865096	DESIGN	0.08569760871349047	WITHOUT_CLASSIFICATION
// end hack	DESIGN	0.9758000633476459	WITHOUT_CLASSIFICATION	0.024199936652354093	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.8858431876746744	DESIGN	0.11415681232532571	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999991029	DESIGN	8.970336807025119E-13	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999999988989824	DESIGN	1.10101762173584E-9	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9999300407284343	DESIGN	6.995927156566594E-5	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.93770444780666	WITHOUT_CLASSIFICATION	0.06229555219334009	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9917064753715783	DESIGN	0.008293524628421691	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999834554879619	DESIGN	1.6544512038169527E-5	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.999597455269458	DESIGN	4.0254473054201324E-4	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9998723762131423	DESIGN	1.2762378685776834E-4	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.7675705534381918	WITHOUT_CLASSIFICATION	0.23242944656180817	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9978997617347591	DESIGN	0.0021002382652407785	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999914498373426	DESIGN	8.550162657335922E-6	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9999914498373426	DESIGN	8.550162657335922E-6	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.5446216916440917	WITHOUT_CLASSIFICATION	0.45537830835590837	DESIGN
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9999998980337402	DESIGN	1.019662597808027E-7	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9984617463906935	DESIGN	0.0015382536093065068	WITHOUT_CLASSIFICATION
