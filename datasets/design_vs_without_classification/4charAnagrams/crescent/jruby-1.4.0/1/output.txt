// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999974873139852	WITHOUT_CLASSIFICATION	2.5126860148079754E-6	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999821827571233	WITHOUT_CLASSIFICATION	1.781724287675831E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998806187290934	WITHOUT_CLASSIFICATION	1.1938127090662934E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998806187290934	WITHOUT_CLASSIFICATION	1.1938127090662934E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999687451864727	WITHOUT_CLASSIFICATION	3.125481352730959E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999687451864727	WITHOUT_CLASSIFICATION	3.125481352730959E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997740745954702	WITHOUT_CLASSIFICATION	2.2592540452987631E-4	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999987283349696	WITHOUT_CLASSIFICATION	1.2716650303802903E-6	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999858290189635	WITHOUT_CLASSIFICATION	1.4170981036484674E-5	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999858406421439	WITHOUT_CLASSIFICATION	1.4159357856071063E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996338414695071	WITHOUT_CLASSIFICATION	3.66158530492935E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996338414695071	WITHOUT_CLASSIFICATION	3.66158530492935E-4	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999849654595627	WITHOUT_CLASSIFICATION	1.5034540437195423E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997516381204173	WITHOUT_CLASSIFICATION	2.483618795827067E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997516381204173	WITHOUT_CLASSIFICATION	2.483618795827067E-4	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9996106532723741	WITHOUT_CLASSIFICATION	3.8934672762589947E-4	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9997624088028706	WITHOUT_CLASSIFICATION	2.37591197129448E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998412398622796	WITHOUT_CLASSIFICATION	1.5876013772031915E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998412398622796	WITHOUT_CLASSIFICATION	1.5876013772031915E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998412398622796	WITHOUT_CLASSIFICATION	1.5876013772031915E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998412398622796	WITHOUT_CLASSIFICATION	1.5876013772031915E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998412398622796	WITHOUT_CLASSIFICATION	1.5876013772031915E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998412398622796	WITHOUT_CLASSIFICATION	1.5876013772031915E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998412398622796	WITHOUT_CLASSIFICATION	1.5876013772031915E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996849071413753	WITHOUT_CLASSIFICATION	3.150928586248418E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996849071413753	WITHOUT_CLASSIFICATION	3.150928586248418E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996849071413753	WITHOUT_CLASSIFICATION	3.150928586248418E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996849071413753	WITHOUT_CLASSIFICATION	3.150928586248418E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996849071413753	WITHOUT_CLASSIFICATION	3.150928586248418E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996849071413753	WITHOUT_CLASSIFICATION	3.150928586248418E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996849071413753	WITHOUT_CLASSIFICATION	3.150928586248418E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997362984752203	WITHOUT_CLASSIFICATION	2.6370152477979007E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997362984752203	WITHOUT_CLASSIFICATION	2.6370152477979007E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997362984752203	WITHOUT_CLASSIFICATION	2.6370152477979007E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997362984752203	WITHOUT_CLASSIFICATION	2.6370152477979007E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997362984752203	WITHOUT_CLASSIFICATION	2.6370152477979007E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997362984752203	WITHOUT_CLASSIFICATION	2.6370152477979007E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996308604189656	WITHOUT_CLASSIFICATION	3.691395810343747E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996308604189656	WITHOUT_CLASSIFICATION	3.691395810343747E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996308604189656	WITHOUT_CLASSIFICATION	3.691395810343747E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996308604189656	WITHOUT_CLASSIFICATION	3.691395810343747E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996308604189656	WITHOUT_CLASSIFICATION	3.691395810343747E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996308604189656	WITHOUT_CLASSIFICATION	3.691395810343747E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997496158617221	WITHOUT_CLASSIFICATION	2.5038413827799917E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997496158617221	WITHOUT_CLASSIFICATION	2.5038413827799917E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997496158617221	WITHOUT_CLASSIFICATION	2.5038413827799917E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997496158617221	WITHOUT_CLASSIFICATION	2.5038413827799917E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997496158617221	WITHOUT_CLASSIFICATION	2.5038413827799917E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997496158617221	WITHOUT_CLASSIFICATION	2.5038413827799917E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997496158617221	WITHOUT_CLASSIFICATION	2.5038413827799917E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997430518284834	WITHOUT_CLASSIFICATION	2.5694817151666145E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997430518284834	WITHOUT_CLASSIFICATION	2.5694817151666145E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997430518284834	WITHOUT_CLASSIFICATION	2.5694817151666145E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997430518284834	WITHOUT_CLASSIFICATION	2.5694817151666145E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9979252892628744	WITHOUT_CLASSIFICATION	0.0020747107371256466	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9979252892628744	WITHOUT_CLASSIFICATION	0.0020747107371256466	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999036817475875	WITHOUT_CLASSIFICATION	9.631825241247632E-5	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999851835488912	WITHOUT_CLASSIFICATION	1.4816451108779775E-5	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999212431620139	WITHOUT_CLASSIFICATION	7.875683798618694E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999597012724968	WITHOUT_CLASSIFICATION	4.029872750323631E-5	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9997578718834611	WITHOUT_CLASSIFICATION	2.4212811653892143E-4	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999528034408093	WITHOUT_CLASSIFICATION	4.719655919060356E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999528034408093	WITHOUT_CLASSIFICATION	4.719655919060356E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999528034408093	WITHOUT_CLASSIFICATION	4.719655919060356E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999528034408093	WITHOUT_CLASSIFICATION	4.719655919060356E-5	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9986600187534789	WITHOUT_CLASSIFICATION	0.0013399812465210823	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999468951250456	WITHOUT_CLASSIFICATION	5.310487495429412E-5	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999704055196109	WITHOUT_CLASSIFICATION	2.9594480389174808E-5	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9997899514684987	WITHOUT_CLASSIFICATION	2.1004853150129863E-4	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999714831781615	WITHOUT_CLASSIFICATION	2.851682183837459E-5	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9997935304752529	WITHOUT_CLASSIFICATION	2.0646952474709946E-4	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999887796544853	WITHOUT_CLASSIFICATION	1.1220345514729059E-5	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999915417550098	WITHOUT_CLASSIFICATION	8.458244990163441E-6	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9921146126325772	WITHOUT_CLASSIFICATION	0.007885387367422832	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9997752742323136	WITHOUT_CLASSIFICATION	2.2472576768633296E-4	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999987356455518	WITHOUT_CLASSIFICATION	1.2643544483536507E-6	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999902878110853	WITHOUT_CLASSIFICATION	9.712188914561484E-6	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9994435191910475	WITHOUT_CLASSIFICATION	5.564808089525201E-4	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999383614060527	WITHOUT_CLASSIFICATION	6.163859394728547E-5	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996852458973966	WITHOUT_CLASSIFICATION	3.147541026034559E-4	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9997725235375666	WITHOUT_CLASSIFICATION	2.2747646243328535E-4	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9969350818779923	WITHOUT_CLASSIFICATION	0.0030649181220077713	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999528034408093	WITHOUT_CLASSIFICATION	4.719655919060356E-5	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9997838192911072	WITHOUT_CLASSIFICATION	2.161807088928515E-4	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999492923407942	WITHOUT_CLASSIFICATION	5.070765920573964E-5	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998095200994942	WITHOUT_CLASSIFICATION	1.9047990050578178E-4	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.999810799932116	WITHOUT_CLASSIFICATION	1.892000678839155E-4	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9998463583068097	WITHOUT_CLASSIFICATION	1.536416931903691E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999331468702435	WITHOUT_CLASSIFICATION	6.685312975647888E-5	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999956930630342	WITHOUT_CLASSIFICATION	4.306936965806948E-6	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999339926294234	WITHOUT_CLASSIFICATION	6.6007370576545E-5	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9982438887728073	WITHOUT_CLASSIFICATION	0.0017561112271926684	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999891093089629	WITHOUT_CLASSIFICATION	1.0890691037185171E-5	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9940879966578842	WITHOUT_CLASSIFICATION	0.005912003342115745	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999373885499127	WITHOUT_CLASSIFICATION	6.261145008732059E-5	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9998793792647305	WITHOUT_CLASSIFICATION	1.2062073526949174E-4	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9989637435275864	WITHOUT_CLASSIFICATION	0.0010362564724136012	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9998818106215779	WITHOUT_CLASSIFICATION	1.1818937842213192E-4	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999586281830007	WITHOUT_CLASSIFICATION	4.1371816999338083E-5	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999448229320402	WITHOUT_CLASSIFICATION	5.517706795965746E-5	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999951232164381	WITHOUT_CLASSIFICATION	4.87678356186683E-6	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999836488634104	WITHOUT_CLASSIFICATION	1.635113658961664E-5	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9998783163205454	WITHOUT_CLASSIFICATION	1.216836794545888E-4	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9844099972475132	WITHOUT_CLASSIFICATION	0.015590002752486853	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.999909601395727	WITHOUT_CLASSIFICATION	9.039860427295518E-5	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998891969631079	WITHOUT_CLASSIFICATION	1.1080303689214546E-4	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9995198212582894	WITHOUT_CLASSIFICATION	4.8017874171053484E-4	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9990095016540973	WITHOUT_CLASSIFICATION	9.904983459027193E-4	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9998456578944537	WITHOUT_CLASSIFICATION	1.5434210554634637E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999708575634592	WITHOUT_CLASSIFICATION	2.9142436540940603E-5	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999254961667228	WITHOUT_CLASSIFICATION	7.450383327724751E-5	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9996255888038885	WITHOUT_CLASSIFICATION	3.744111961115306E-4	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.999767139160955	WITHOUT_CLASSIFICATION	2.328608390448504E-4	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9997229850051992	WITHOUT_CLASSIFICATION	2.7701499480081395E-4	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9995586068563576	WITHOUT_CLASSIFICATION	4.4139314364247996E-4	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.99878344275716	WITHOUT_CLASSIFICATION	0.0012165572428399502	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999536318334097	WITHOUT_CLASSIFICATION	4.636816659038835E-5	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999370378213396	WITHOUT_CLASSIFICATION	6.296217866042087E-5	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999904731367952	WITHOUT_CLASSIFICATION	9.526863204839823E-6	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999514791046578	WITHOUT_CLASSIFICATION	4.852089534225949E-5	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.5677331073128997	WITHOUT_CLASSIFICATION	0.43226689268710033	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999990590319835	WITHOUT_CLASSIFICATION	9.409680164807384E-7	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999747227102681	WITHOUT_CLASSIFICATION	2.5277289731889012E-5	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.999970844731881	WITHOUT_CLASSIFICATION	2.91552681188712E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999106535245329	WITHOUT_CLASSIFICATION	8.934647546711583E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9997290796008684	WITHOUT_CLASSIFICATION	2.709203991316219E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999557954213355	WITHOUT_CLASSIFICATION	4.420457866457591E-5	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999557954213355	WITHOUT_CLASSIFICATION	4.420457866457591E-5	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999775294855662	WITHOUT_CLASSIFICATION	2.2470514433818352E-5	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9998953125934607	WITHOUT_CLASSIFICATION	1.0468740653937346E-4	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999344043229822	WITHOUT_CLASSIFICATION	6.55956770177738E-5	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.999974560021096	WITHOUT_CLASSIFICATION	2.5439978904036313E-5	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9993667918918696	WITHOUT_CLASSIFICATION	6.332081081303307E-4	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9993018711586376	WITHOUT_CLASSIFICATION	6.981288413624607E-4	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9994786192208494	WITHOUT_CLASSIFICATION	5.213807791506312E-4	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9998511482973087	WITHOUT_CLASSIFICATION	1.4885170269124344E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999106535245329	WITHOUT_CLASSIFICATION	8.934647546711583E-5	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999969065738641	WITHOUT_CLASSIFICATION	3.0934261359840803E-6	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999846420041664	WITHOUT_CLASSIFICATION	1.535799583366107E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9995988345456315	WITHOUT_CLASSIFICATION	4.01165454368439E-4	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.999994782130693	WITHOUT_CLASSIFICATION	5.2178693070076896E-6	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999902794077861	WITHOUT_CLASSIFICATION	9.720592213973951E-6	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999973666255739	WITHOUT_CLASSIFICATION	2.633374425946135E-6	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999973666255739	WITHOUT_CLASSIFICATION	2.633374425946135E-6	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999973666255739	WITHOUT_CLASSIFICATION	2.633374425946135E-6	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.999684726778819	WITHOUT_CLASSIFICATION	3.152732211808958E-4	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999979883893565	WITHOUT_CLASSIFICATION	2.0116106434866633E-6	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999989402842218	WITHOUT_CLASSIFICATION	1.0597157781832635E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9998617866750146	WITHOUT_CLASSIFICATION	1.3821332498546908E-4	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.999995301111266	WITHOUT_CLASSIFICATION	4.698888733957899E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999694760629361	WITHOUT_CLASSIFICATION	3.052393706384146E-5	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.998593106730445	WITHOUT_CLASSIFICATION	0.0014068932695549786	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999516775530571	WITHOUT_CLASSIFICATION	4.8322446942827355E-5	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999671538020458	WITHOUT_CLASSIFICATION	3.284619795407298E-5	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999671538020458	WITHOUT_CLASSIFICATION	3.284619795407298E-5	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9993381111478492	WITHOUT_CLASSIFICATION	6.618888521507423E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999993224548601	WITHOUT_CLASSIFICATION	6.775451398439625E-7	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999434626060312	WITHOUT_CLASSIFICATION	5.653739396885663E-5	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999434626060312	WITHOUT_CLASSIFICATION	5.653739396885663E-5	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999992561791456	WITHOUT_CLASSIFICATION	7.438208544524762E-7	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999602213152569	WITHOUT_CLASSIFICATION	3.9778684743091205E-5	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999461276903767	WITHOUT_CLASSIFICATION	5.3872309623286925E-5	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999766547727776	WITHOUT_CLASSIFICATION	2.3345227222411382E-5	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999935051982285	WITHOUT_CLASSIFICATION	6.494801771510077E-6	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.999977981892129	WITHOUT_CLASSIFICATION	2.201810787099342E-5	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999436261455358	WITHOUT_CLASSIFICATION	5.637385446427764E-5	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999121514464023	WITHOUT_CLASSIFICATION	8.784855359772307E-5	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9999856110243545	WITHOUT_CLASSIFICATION	1.438897564549092E-5	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999950716374331	WITHOUT_CLASSIFICATION	4.928362566889568E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999106535245329	WITHOUT_CLASSIFICATION	8.934647546711583E-5	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999889577620853	WITHOUT_CLASSIFICATION	1.1042237914688334E-5	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999828571638821	WITHOUT_CLASSIFICATION	1.7142836117810177E-5	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9998779856239465	WITHOUT_CLASSIFICATION	1.2201437605348196E-4	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9998331779318737	WITHOUT_CLASSIFICATION	1.6682206812632214E-4	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9995117294949976	WITHOUT_CLASSIFICATION	4.882705050024441E-4	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9992183373992332	WITHOUT_CLASSIFICATION	7.816626007669001E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9987664633403247	WITHOUT_CLASSIFICATION	0.0012335366596753156	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9979038136270614	WITHOUT_CLASSIFICATION	0.0020961863729386347	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999198082904898	WITHOUT_CLASSIFICATION	8.0191709510276E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9995904869436371	WITHOUT_CLASSIFICATION	4.0951305636289663E-4	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999272055662204	WITHOUT_CLASSIFICATION	7.279443377963788E-5	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.999995791214015	WITHOUT_CLASSIFICATION	4.208785984851921E-6	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999992454560918	WITHOUT_CLASSIFICATION	7.545439082764834E-7	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9996878306925691	WITHOUT_CLASSIFICATION	3.1216930743084624E-4	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9998520612512222	WITHOUT_CLASSIFICATION	1.479387487777752E-4	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999762524957678	WITHOUT_CLASSIFICATION	2.3747504232182546E-5	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999354040423826	WITHOUT_CLASSIFICATION	6.45959576174065E-5	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999721306156537	WITHOUT_CLASSIFICATION	2.78693843461804E-5	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999957030196419	WITHOUT_CLASSIFICATION	4.296980358088541E-6	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999719953491785	WITHOUT_CLASSIFICATION	2.800465082151325E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999944467638604	WITHOUT_CLASSIFICATION	5.553236139614696E-6	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9998980859525538	WITHOUT_CLASSIFICATION	1.0191404744620144E-4	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999818191822755	WITHOUT_CLASSIFICATION	1.8180817724547128E-5	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999033976863992	WITHOUT_CLASSIFICATION	9.660231360080759E-5	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999944764782185	WITHOUT_CLASSIFICATION	5.523521781616761E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9998982985818953	WITHOUT_CLASSIFICATION	1.017014181046758E-4	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9998942201308909	WITHOUT_CLASSIFICATION	1.0577986910912628E-4	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999839261330221	WITHOUT_CLASSIFICATION	1.6073866977819177E-5	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999960057370689	WITHOUT_CLASSIFICATION	3.994262931037526E-6	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999938240103828	WITHOUT_CLASSIFICATION	6.1759896171907965E-6	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.999904981160863	WITHOUT_CLASSIFICATION	9.501883913693444E-5	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9999599644933772	WITHOUT_CLASSIFICATION	4.00355066227732E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9995431782088716	WITHOUT_CLASSIFICATION	4.5682179112828343E-4	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999990528078224	WITHOUT_CLASSIFICATION	9.471921776982003E-7	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999271681022365	WITHOUT_CLASSIFICATION	7.283189776346563E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999075981396651	WITHOUT_CLASSIFICATION	9.240186033482671E-5	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9994926300749388	WITHOUT_CLASSIFICATION	5.07369925061292E-4	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9998902374024525	WITHOUT_CLASSIFICATION	1.0976259754750434E-4	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999900632873016	WITHOUT_CLASSIFICATION	9.936712698344466E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9998561140910629	WITHOUT_CLASSIFICATION	1.4388590893711823E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999993810296718	WITHOUT_CLASSIFICATION	6.189703282916763E-7	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999946118930744	WITHOUT_CLASSIFICATION	5.388106925602948E-6	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9998445357021203	WITHOUT_CLASSIFICATION	1.5546429787972687E-4	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999636001780263	WITHOUT_CLASSIFICATION	3.6399821973639295E-5	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999883833367639	WITHOUT_CLASSIFICATION	1.1616663236168338E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999926030026757	WITHOUT_CLASSIFICATION	7.396997324417351E-6	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999964963750362	WITHOUT_CLASSIFICATION	3.5036249638052825E-6	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9996846633191266	WITHOUT_CLASSIFICATION	3.153366808734013E-4	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9998884839563033	WITHOUT_CLASSIFICATION	1.1151604369681374E-4	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.999977113353814	WITHOUT_CLASSIFICATION	2.288664618592683E-5	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999564687361191	WITHOUT_CLASSIFICATION	4.3531263880891226E-5	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9975733703819661	WITHOUT_CLASSIFICATION	0.0024266296180338646	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999972020430675	WITHOUT_CLASSIFICATION	2.7979569325251407E-6	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.999957895088575	WITHOUT_CLASSIFICATION	4.2104911425062384E-5	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9996030190463243	WITHOUT_CLASSIFICATION	3.9698095367576315E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9909225594675837	WITHOUT_CLASSIFICATION	0.00907744053241634	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9998849134105178	WITHOUT_CLASSIFICATION	1.1508658948220733E-4	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9996011948882552	WITHOUT_CLASSIFICATION	3.98805111744723E-4	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999954231382807	WITHOUT_CLASSIFICATION	4.576861719217003E-6	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999831962048615	WITHOUT_CLASSIFICATION	1.680379513848384E-5	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999665401378387	WITHOUT_CLASSIFICATION	3.345986216118159E-5	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999665401378387	WITHOUT_CLASSIFICATION	3.345986216118159E-5	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999005113173326	WITHOUT_CLASSIFICATION	9.948868266740337E-5	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999005113173326	WITHOUT_CLASSIFICATION	9.948868266740337E-5	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9997266706386279	WITHOUT_CLASSIFICATION	2.733293613722134E-4	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9997266706386279	WITHOUT_CLASSIFICATION	2.733293613722134E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9995084773741837	WITHOUT_CLASSIFICATION	4.915226258162431E-4	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9995084773741837	WITHOUT_CLASSIFICATION	4.915226258162431E-4	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999799132851235	WITHOUT_CLASSIFICATION	2.0086714876504663E-5	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999557217978449	WITHOUT_CLASSIFICATION	4.4278202155015884E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998835670215935	WITHOUT_CLASSIFICATION	1.1643297840646346E-4	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999612937043311	WITHOUT_CLASSIFICATION	3.870629566899563E-5	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999502702313716	WITHOUT_CLASSIFICATION	4.972976862832612E-5	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999166079044649	WITHOUT_CLASSIFICATION	8.339209553518106E-5	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.999563760413878	WITHOUT_CLASSIFICATION	4.3623958612211655E-4	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999906568845549	WITHOUT_CLASSIFICATION	9.343115445034653E-6	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9998491938669178	WITHOUT_CLASSIFICATION	1.5080613308216358E-4	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999772468624708	WITHOUT_CLASSIFICATION	2.2753137529110032E-5	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999672974314933	WITHOUT_CLASSIFICATION	3.270256850669639E-5	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999924592780582	WITHOUT_CLASSIFICATION	7.54072194171535E-6	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999027305543049	WITHOUT_CLASSIFICATION	9.726944569501938E-5	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999967217012051	WITHOUT_CLASSIFICATION	3.2782987949558306E-6	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999967359084427	WITHOUT_CLASSIFICATION	3.264091557330751E-6	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999474781846063	WITHOUT_CLASSIFICATION	5.2521815393740653E-5	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999736738294389	WITHOUT_CLASSIFICATION	2.6326170561161903E-5	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999409993908048	WITHOUT_CLASSIFICATION	5.9000609195271395E-5	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.981581646510219	WITHOUT_CLASSIFICATION	0.018418353489781044	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9971121267940364	WITHOUT_CLASSIFICATION	0.002887873205963694	DESIGN
// must not reallocate	WITHOUT_CLASSIFICATION	0.9996456130289794	WITHOUT_CLASSIFICATION	3.54386971020561E-4	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999608218968546	WITHOUT_CLASSIFICATION	3.917810314539153E-5	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.999987203534823	WITHOUT_CLASSIFICATION	1.279646517706831E-5	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999494600340995	WITHOUT_CLASSIFICATION	5.053996590058947E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999802069855765	WITHOUT_CLASSIFICATION	1.9793014423435487E-5	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999949480492988	WITHOUT_CLASSIFICATION	5.051950701224353E-6	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999741963312061	WITHOUT_CLASSIFICATION	2.5803668793912652E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999643467987636	WITHOUT_CLASSIFICATION	3.565320123644222E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999643467987636	WITHOUT_CLASSIFICATION	3.565320123644222E-5	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999501395739464	WITHOUT_CLASSIFICATION	4.9860426053582626E-5	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.999974189050635	WITHOUT_CLASSIFICATION	2.581094936495081E-5	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9998541882838103	WITHOUT_CLASSIFICATION	1.4581171618962454E-4	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9998846403543753	WITHOUT_CLASSIFICATION	1.1535964562480533E-4	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.999910597647364	WITHOUT_CLASSIFICATION	8.940235263600043E-5	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9998969941028557	WITHOUT_CLASSIFICATION	1.0300589714431373E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9998778878408549	WITHOUT_CLASSIFICATION	1.2211215914514277E-4	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9998778878408549	WITHOUT_CLASSIFICATION	1.2211215914514277E-4	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999674655311378	WITHOUT_CLASSIFICATION	3.2534468862175813E-5	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9857678784617463	WITHOUT_CLASSIFICATION	0.014232121538253798	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998048104657227	WITHOUT_CLASSIFICATION	1.951895342774169E-4	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998048104657227	WITHOUT_CLASSIFICATION	1.951895342774169E-4	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999990546870821	WITHOUT_CLASSIFICATION	9.453129179786488E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999265464205656	WITHOUT_CLASSIFICATION	7.345357943447343E-5	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999265464205656	WITHOUT_CLASSIFICATION	7.345357943447343E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999321441448985	WITHOUT_CLASSIFICATION	6.785585510156296E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999321441448985	WITHOUT_CLASSIFICATION	6.785585510156296E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999255051127373	WITHOUT_CLASSIFICATION	7.449488726275012E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999255051127373	WITHOUT_CLASSIFICATION	7.449488726275012E-5	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9997476145218956	WITHOUT_CLASSIFICATION	2.5238547810439965E-4	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999023023261142	WITHOUT_CLASSIFICATION	9.769767388571935E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999716624239393	WITHOUT_CLASSIFICATION	2.83375760606748E-5	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999947334804981	WITHOUT_CLASSIFICATION	5.266519501904332E-5	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9993679971832113	WITHOUT_CLASSIFICATION	6.32002816788581E-4	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9996837886861109	WITHOUT_CLASSIFICATION	3.162113138891547E-4	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9995774855992393	WITHOUT_CLASSIFICATION	4.2251440076063694E-4	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9994009533324064	WITHOUT_CLASSIFICATION	5.99046667593475E-4	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9995774855992393	WITHOUT_CLASSIFICATION	4.2251440076063694E-4	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9995425860911342	WITHOUT_CLASSIFICATION	4.574139088658081E-4	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9997697302210702	WITHOUT_CLASSIFICATION	2.3026977892978356E-4	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9998233983991812	WITHOUT_CLASSIFICATION	1.7660160081880316E-4	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999777013932248	WITHOUT_CLASSIFICATION	2.229860677512396E-5	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9998594649244178	WITHOUT_CLASSIFICATION	1.4053507558220137E-4	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9996361214317152	WITHOUT_CLASSIFICATION	3.6387856828477263E-4	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999344303734976	WITHOUT_CLASSIFICATION	6.556962650246317E-5	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999778026018463	WITHOUT_CLASSIFICATION	2.2197398153648615E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9998181790505726	WITHOUT_CLASSIFICATION	1.8182094942749497E-4	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9998973151018352	WITHOUT_CLASSIFICATION	1.0268489816487004E-4	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.999853530975913	WITHOUT_CLASSIFICATION	1.4646902408693528E-4	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999976734599565	WITHOUT_CLASSIFICATION	2.3265400435621395E-6	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999826526141647	WITHOUT_CLASSIFICATION	1.734738583527607E-5	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.999985701605125	WITHOUT_CLASSIFICATION	1.429839487510755E-5	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9994097198868666	WITHOUT_CLASSIFICATION	5.902801131334146E-4	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999504708919492	WITHOUT_CLASSIFICATION	4.952910805079575E-5	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9994885488191216	WITHOUT_CLASSIFICATION	5.11451180878308E-4	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999963803453258	WITHOUT_CLASSIFICATION	3.619654674208065E-6	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9995816950256969	WITHOUT_CLASSIFICATION	4.1830497430306345E-4	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9998317992262389	WITHOUT_CLASSIFICATION	1.682007737611136E-4	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.999991170737382	WITHOUT_CLASSIFICATION	8.829262618037444E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999992672866839	WITHOUT_CLASSIFICATION	7.327133160937652E-6	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999842178834772	WITHOUT_CLASSIFICATION	1.578211652284788E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999527172207924	WITHOUT_CLASSIFICATION	4.728277920758245E-5	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999249676921688	WITHOUT_CLASSIFICATION	7.503230783132247E-5	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9989671071403688	WITHOUT_CLASSIFICATION	0.0010328928596312005	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9998936148964082	WITHOUT_CLASSIFICATION	1.0638510359185285E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999621067361695	WITHOUT_CLASSIFICATION	3.7893263830560614E-5	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999863199697925	WITHOUT_CLASSIFICATION	1.3680030207551961E-5	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999759157676039	WITHOUT_CLASSIFICATION	2.4084232396104075E-5	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999384755376732	WITHOUT_CLASSIFICATION	6.152446232672568E-5	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.999840640960599	WITHOUT_CLASSIFICATION	1.5935903940095616E-4	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.999943566763172	WITHOUT_CLASSIFICATION	5.643323682811437E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9998373552533647	WITHOUT_CLASSIFICATION	1.6264474663516682E-4	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999959789348103	WITHOUT_CLASSIFICATION	4.0210651896940525E-5	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9996800959882988	WITHOUT_CLASSIFICATION	3.199040117012793E-4	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999397760104815	WITHOUT_CLASSIFICATION	6.022398951859594E-5	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9989620098256073	WITHOUT_CLASSIFICATION	0.0010379901743926118	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999092653425881	WITHOUT_CLASSIFICATION	9.073465741189517E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9998302344837559	WITHOUT_CLASSIFICATION	1.697655162441064E-4	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9998864351507148	WITHOUT_CLASSIFICATION	1.1356484928519882E-4	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999973263394424	WITHOUT_CLASSIFICATION	2.6736605575361654E-6	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999852580859165	WITHOUT_CLASSIFICATION	1.474191408355023E-5	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999316513981822	WITHOUT_CLASSIFICATION	6.83486018178207E-5	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999705095750158	WITHOUT_CLASSIFICATION	2.9490424984198922E-5	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.999966415245774	WITHOUT_CLASSIFICATION	3.358475422601215E-5	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999070736896438	WITHOUT_CLASSIFICATION	9.292631035618118E-5	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999868869371962	WITHOUT_CLASSIFICATION	1.3113062803744999E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999872754739392	WITHOUT_CLASSIFICATION	1.272452606079753E-5	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9987431834821713	WITHOUT_CLASSIFICATION	0.0012568165178286198	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999742873056924	WITHOUT_CLASSIFICATION	2.5712694307721675E-5	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999552425131402	WITHOUT_CLASSIFICATION	4.475748685986464E-5	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9986831672200654	WITHOUT_CLASSIFICATION	0.0013168327799346058	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.999943498103447	WITHOUT_CLASSIFICATION	5.650189655293534E-5	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9992267226756512	WITHOUT_CLASSIFICATION	7.732773243487617E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9992267226756512	WITHOUT_CLASSIFICATION	7.732773243487617E-4	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9439896944983078	WITHOUT_CLASSIFICATION	0.05601030550169219	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.879788839133374	WITHOUT_CLASSIFICATION	0.12021116086662587	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.8958701640656103	WITHOUT_CLASSIFICATION	0.10412983593438982	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9995120272453757	WITHOUT_CLASSIFICATION	4.8797275462425586E-4	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999967059343903	WITHOUT_CLASSIFICATION	3.2940656098692883E-6	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9998417149589757	WITHOUT_CLASSIFICATION	1.5828504102428662E-4	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9986427453925403	WITHOUT_CLASSIFICATION	0.0013572546074597236	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9954448828236987	WITHOUT_CLASSIFICATION	0.0045551171763012505	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999505942349608	WITHOUT_CLASSIFICATION	4.940576503911016E-5	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999597530624879	WITHOUT_CLASSIFICATION	4.024693751206904E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.998515280670095	WITHOUT_CLASSIFICATION	0.0014847193299049905	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.998515280670095	WITHOUT_CLASSIFICATION	0.0014847193299049905	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999963383445994	WITHOUT_CLASSIFICATION	3.661655400469876E-6	DESIGN
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9982581939037551	WITHOUT_CLASSIFICATION	0.0017418060962448535	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.999255811209013	WITHOUT_CLASSIFICATION	7.441887909870355E-4	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999975242704909	WITHOUT_CLASSIFICATION	2.475729509017838E-6	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999995436545807	WITHOUT_CLASSIFICATION	4.5634541932200083E-7	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999990220982135	WITHOUT_CLASSIFICATION	9.779017866084758E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999975045979115	WITHOUT_CLASSIFICATION	2.495402088572134E-6	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999935987859626	WITHOUT_CLASSIFICATION	6.401214037366888E-6	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999752575413963	WITHOUT_CLASSIFICATION	2.474245860372842E-5	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999661545027634	WITHOUT_CLASSIFICATION	3.3845497236605174E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999348900125525	WITHOUT_CLASSIFICATION	6.510998744748264E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999525160197007	WITHOUT_CLASSIFICATION	4.748398029936715E-5	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999685862513903	WITHOUT_CLASSIFICATION	3.14137486096879E-5	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999685862513903	WITHOUT_CLASSIFICATION	3.14137486096879E-5	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9995660495629427	WITHOUT_CLASSIFICATION	4.339504370573688E-4	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9944551979175194	WITHOUT_CLASSIFICATION	0.005544802082480579	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9997199350447872	WITHOUT_CLASSIFICATION	2.8006495521283164E-4	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9992940145304421	WITHOUT_CLASSIFICATION	7.059854695579832E-4	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999634437859982	WITHOUT_CLASSIFICATION	3.655621400176461E-5	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.999908188431209	WITHOUT_CLASSIFICATION	9.181156879094439E-5	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999866878344749	WITHOUT_CLASSIFICATION	1.331216552514552E-5	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999810780161226	WITHOUT_CLASSIFICATION	1.892198387739198E-5	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9998728991008655	WITHOUT_CLASSIFICATION	1.2710089913450863E-4	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9996622525491806	WITHOUT_CLASSIFICATION	3.3774745081944097E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.999255811209013	WITHOUT_CLASSIFICATION	7.441887909870355E-4	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999967681466719	WITHOUT_CLASSIFICATION	3.2318533280863622E-6	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.997686072494621	WITHOUT_CLASSIFICATION	0.002313927505378923	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999789082020397	WITHOUT_CLASSIFICATION	2.1091797960260475E-5	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9998788094365181	WITHOUT_CLASSIFICATION	1.2119056348184382E-4	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9997198755538288	WITHOUT_CLASSIFICATION	2.801244461712846E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9992400463429112	WITHOUT_CLASSIFICATION	7.599536570887593E-4	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998510410048653	WITHOUT_CLASSIFICATION	1.489589951346854E-4	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.999952480750544	WITHOUT_CLASSIFICATION	4.751924945599678E-5	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999607006848424	WITHOUT_CLASSIFICATION	3.9299315157691486E-5	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.999973307140233	WITHOUT_CLASSIFICATION	2.6692859767007918E-5	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999649022597357	WITHOUT_CLASSIFICATION	3.509774026432432E-5	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999557116064777	WITHOUT_CLASSIFICATION	4.4288393522341605E-5	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999947310551485	WITHOUT_CLASSIFICATION	5.26894485156037E-6	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999944800662942	WITHOUT_CLASSIFICATION	5.519933705883034E-6	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9998327595173269	WITHOUT_CLASSIFICATION	1.6724048267314728E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999879444836587	WITHOUT_CLASSIFICATION	1.2055516341222361E-5	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.98673514306087	WITHOUT_CLASSIFICATION	0.013264856939130005	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9998705777534257	WITHOUT_CLASSIFICATION	1.2942224657423322E-4	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9990562444201877	WITHOUT_CLASSIFICATION	9.437555798123265E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.999788854242987	WITHOUT_CLASSIFICATION	2.111457570130537E-4	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.997172867655134	WITHOUT_CLASSIFICATION	0.0028271323448659253	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999943431188877	WITHOUT_CLASSIFICATION	5.656881112376266E-6	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9977456563078966	WITHOUT_CLASSIFICATION	0.002254343692103339	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999665673577081	WITHOUT_CLASSIFICATION	3.3432642291861727E-5	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999724094868998	WITHOUT_CLASSIFICATION	2.759051310024761E-5	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999899559279385	WITHOUT_CLASSIFICATION	1.0044072061496463E-5	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.999537363027539	WITHOUT_CLASSIFICATION	4.6263697246091853E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.999990815880022	WITHOUT_CLASSIFICATION	9.184119977931228E-6	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.999900441200416	WITHOUT_CLASSIFICATION	9.955879958390348E-5	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999990806513942	WITHOUT_CLASSIFICATION	9.193486057934403E-7	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999032403402669	WITHOUT_CLASSIFICATION	9.675965973308983E-5	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999032403402669	WITHOUT_CLASSIFICATION	9.675965973308983E-5	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999946437212944	WITHOUT_CLASSIFICATION	5.356278705509689E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999907962831691	WITHOUT_CLASSIFICATION	9.203716830948562E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.999980538497091	WITHOUT_CLASSIFICATION	1.9461502908954277E-5	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999884939201933	WITHOUT_CLASSIFICATION	1.1506079806717493E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999954479857024	WITHOUT_CLASSIFICATION	4.552014297533065E-6	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9988714892111432	WITHOUT_CLASSIFICATION	0.0011285107888567164	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999106535245329	WITHOUT_CLASSIFICATION	8.934647546711583E-5	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9997493397413616	WITHOUT_CLASSIFICATION	2.5066025863838343E-4	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9998363498572207	WITHOUT_CLASSIFICATION	1.6365014277925787E-4	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999956490722833	WITHOUT_CLASSIFICATION	4.3509277166772675E-6	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999986188604637	WITHOUT_CLASSIFICATION	1.381139536248979E-6	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9999039727336432	WITHOUT_CLASSIFICATION	9.602726635674412E-5	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999703289345938	WITHOUT_CLASSIFICATION	2.9671065406155726E-5	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9998561140910629	WITHOUT_CLASSIFICATION	1.4388590893711823E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.999635323280042	WITHOUT_CLASSIFICATION	3.646767199579894E-4	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999930032924444	WITHOUT_CLASSIFICATION	6.996707555627401E-6	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9998758743788201	WITHOUT_CLASSIFICATION	1.2412562117993886E-4	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999936592711638	WITHOUT_CLASSIFICATION	6.340728836196706E-6	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999873261306335	WITHOUT_CLASSIFICATION	1.2673869366530876E-5	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999868466116086	WITHOUT_CLASSIFICATION	1.3153388391321394E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9996988203597148	WITHOUT_CLASSIFICATION	3.011796402851949E-4	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9996988203597148	WITHOUT_CLASSIFICATION	3.011796402851949E-4	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9998903774616554	WITHOUT_CLASSIFICATION	1.0962253834455133E-4	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999576230475411	WITHOUT_CLASSIFICATION	4.237695245894922E-5	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999172351823961	WITHOUT_CLASSIFICATION	8.276481760386507E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999952220253299	WITHOUT_CLASSIFICATION	4.777974670146598E-6	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999434542162117	WITHOUT_CLASSIFICATION	5.654578378841437E-5	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999811621395442	WITHOUT_CLASSIFICATION	1.883786045571764E-5	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999664324970223	WITHOUT_CLASSIFICATION	3.356750297764688E-5	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999566422287572	WITHOUT_CLASSIFICATION	4.3357771242818475E-5	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999683441924698	WITHOUT_CLASSIFICATION	3.1655807530077916E-5	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9992168013010917	WITHOUT_CLASSIFICATION	7.831986989082899E-4	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999921453548389	WITHOUT_CLASSIFICATION	7.854645161152188E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999308318007893	WITHOUT_CLASSIFICATION	6.91681992106642E-5	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999772424087919	WITHOUT_CLASSIFICATION	2.275759120809249E-5	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999244988678149	WITHOUT_CLASSIFICATION	7.550113218508516E-5	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999862090447821	WITHOUT_CLASSIFICATION	1.3790955217973393E-5	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9978268164802371	WITHOUT_CLASSIFICATION	0.002173183519762991	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.999796115021268	WITHOUT_CLASSIFICATION	2.0388497873207058E-4	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.999898468540614	WITHOUT_CLASSIFICATION	1.0153145938601863E-4	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.999465163272034	WITHOUT_CLASSIFICATION	5.348367279659639E-4	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9996825331812998	WITHOUT_CLASSIFICATION	3.17466818700157E-4	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9998721033962908	WITHOUT_CLASSIFICATION	1.278966037090672E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999924099547345	WITHOUT_CLASSIFICATION	7.590045265458686E-6	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999720260587375	WITHOUT_CLASSIFICATION	2.7973941262561022E-5	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9740104132864427	WITHOUT_CLASSIFICATION	0.025989586713557247	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.999757047634332	WITHOUT_CLASSIFICATION	2.429523656679324E-4	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9960446177559359	WITHOUT_CLASSIFICATION	0.003955382244064101	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9997178394771369	WITHOUT_CLASSIFICATION	2.8216052286314806E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999680757143707	WITHOUT_CLASSIFICATION	3.192428562921793E-5	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999778679124347	WITHOUT_CLASSIFICATION	2.2132087565355944E-5	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9986872191461736	WITHOUT_CLASSIFICATION	0.001312780853826354	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999261516673215	WITHOUT_CLASSIFICATION	7.384833267855592E-5	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.99996044067092	WITHOUT_CLASSIFICATION	3.955932907997856E-5	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9995369127962055	WITHOUT_CLASSIFICATION	4.630872037944801E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9998341434169067	WITHOUT_CLASSIFICATION	1.6585658309328582E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9998525944182759	WITHOUT_CLASSIFICATION	1.474055817240076E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.8266490688637841	WITHOUT_CLASSIFICATION	0.1733509311362159	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9919649485754313	WITHOUT_CLASSIFICATION	0.008035051424568833	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999322054619217	WITHOUT_CLASSIFICATION	6.779453807825434E-5	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9995557894201377	WITHOUT_CLASSIFICATION	4.442105798622383E-4	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999714910185262	WITHOUT_CLASSIFICATION	2.8508981473720427E-5	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9996054168393106	WITHOUT_CLASSIFICATION	3.9458316068942964E-4	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999880677059633	WITHOUT_CLASSIFICATION	1.1932294036767006E-5	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999928698068031	WITHOUT_CLASSIFICATION	7.130193196836602E-6	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9901102366570658	WITHOUT_CLASSIFICATION	0.009889763342934265	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999200574120831	WITHOUT_CLASSIFICATION	7.994258791682043E-5	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9901102366570658	WITHOUT_CLASSIFICATION	0.009889763342934265	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.6872111368647691	WITHOUT_CLASSIFICATION	0.31278886313523085	DESIGN
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.6326970486396505	WITHOUT_CLASSIFICATION	0.3673029513603494	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9996111064021377	WITHOUT_CLASSIFICATION	3.888935978622839E-4	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7821665701461459	DESIGN	0.21783342985385412	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.998865628259568	WITHOUT_CLASSIFICATION	0.0011343717404320099	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999557723703402	WITHOUT_CLASSIFICATION	4.422762965986608E-5	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999519770650079	WITHOUT_CLASSIFICATION	4.802293499201946E-5	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9993077945777065	WITHOUT_CLASSIFICATION	6.922054222935486E-4	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999513988902706	WITHOUT_CLASSIFICATION	4.860110972945313E-5	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9998205750160811	WITHOUT_CLASSIFICATION	1.79424983918957E-4	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9961500722930196	WITHOUT_CLASSIFICATION	0.0038499277069804854	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9998452681665541	WITHOUT_CLASSIFICATION	1.547318334459701E-4	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9897563115586104	WITHOUT_CLASSIFICATION	0.010243688441389585	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9994440113967135	WITHOUT_CLASSIFICATION	5.559886032865816E-4	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.999836236600222	WITHOUT_CLASSIFICATION	1.637633997779791E-4	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9160186551614212	WITHOUT_CLASSIFICATION	0.08398134483857882	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9998500343931258	WITHOUT_CLASSIFICATION	1.4996560687413296E-4	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9980459334184201	WITHOUT_CLASSIFICATION	0.001954066581579921	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999862694885205	WITHOUT_CLASSIFICATION	1.3730511479438629E-5	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9981345476913381	WITHOUT_CLASSIFICATION	0.0018654523086618297	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.999017812174689	WITHOUT_CLASSIFICATION	9.82187825310988E-4	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999694626342663	WITHOUT_CLASSIFICATION	3.0537365733717484E-5	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999465459486797	WITHOUT_CLASSIFICATION	5.345405132030825E-5	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.999981651373178	WITHOUT_CLASSIFICATION	1.8348626822019573E-5	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999862012507308	WITHOUT_CLASSIFICATION	1.3798749269103207E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9978954648022922	WITHOUT_CLASSIFICATION	0.0021045351977077307	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999121484631233	WITHOUT_CLASSIFICATION	8.785153687684362E-5	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9985350577518339	WITHOUT_CLASSIFICATION	0.0014649422481660703	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999987356455518	WITHOUT_CLASSIFICATION	1.2643544483536507E-6	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9998774879847487	WITHOUT_CLASSIFICATION	1.2251201525121508E-4	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9992924017131266	WITHOUT_CLASSIFICATION	7.075982868733886E-4	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990625651473667	WITHOUT_CLASSIFICATION	9.374348526333121E-4	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9989713889493778	WITHOUT_CLASSIFICATION	0.0010286110506222603	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9997860844720569	WITHOUT_CLASSIFICATION	2.1391552794318544E-4	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999763081291984	WITHOUT_CLASSIFICATION	2.3691870801681513E-5	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9997333348146923	WITHOUT_CLASSIFICATION	2.6666518530765846E-4	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9996769203970145	WITHOUT_CLASSIFICATION	3.230796029855508E-4	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999938400988273	WITHOUT_CLASSIFICATION	6.159901172727657E-6	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999992991656536	WITHOUT_CLASSIFICATION	7.008343464625439E-7	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9997620094707943	WITHOUT_CLASSIFICATION	2.3799052920575386E-4	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9998998516123467	WITHOUT_CLASSIFICATION	1.0014838765331173E-4	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999563892470454	WITHOUT_CLASSIFICATION	4.3610752954567454E-5	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999910526622728	WITHOUT_CLASSIFICATION	8.94733772705178E-6	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9996557469240035	WITHOUT_CLASSIFICATION	3.4425307599647256E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9996557469240035	WITHOUT_CLASSIFICATION	3.4425307599647256E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.993626442846776	WITHOUT_CLASSIFICATION	0.0063735571532240526	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999221473924286	WITHOUT_CLASSIFICATION	7.785260757139935E-5	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999528987372904	WITHOUT_CLASSIFICATION	4.7101262709450136E-5	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999934224622771	WITHOUT_CLASSIFICATION	6.57753772292235E-6	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9998660468712198	WITHOUT_CLASSIFICATION	1.339531287801529E-4	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9997585021054517	WITHOUT_CLASSIFICATION	2.414978945483461E-4	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9997259786179319	WITHOUT_CLASSIFICATION	2.740213820681287E-4	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999347978253514	WITHOUT_CLASSIFICATION	6.520217464859389E-5	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9998097891743974	WITHOUT_CLASSIFICATION	1.902108256026299E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999681873201565	WITHOUT_CLASSIFICATION	3.181267984362138E-5	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999258270736221	WITHOUT_CLASSIFICATION	7.41729263779132E-5	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9728029154543876	WITHOUT_CLASSIFICATION	0.027197084545612413	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9979524491705121	WITHOUT_CLASSIFICATION	0.0020475508294879475	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9811238692695644	WITHOUT_CLASSIFICATION	0.018876130730435585	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9351329610358204	WITHOUT_CLASSIFICATION	0.06486703896417959	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999971062059908	WITHOUT_CLASSIFICATION	2.8937940091356395E-6	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999457484532622	WITHOUT_CLASSIFICATION	5.425154673774337E-5	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999735072974407	WITHOUT_CLASSIFICATION	2.6492702559223126E-5	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9982180052486788	WITHOUT_CLASSIFICATION	0.001781994751321163	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999792417769349	WITHOUT_CLASSIFICATION	2.07582230652072E-5	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9994414683850829	WITHOUT_CLASSIFICATION	5.585316149171509E-4	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999180896261847	WITHOUT_CLASSIFICATION	8.191037381541555E-5	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999948751584724	WITHOUT_CLASSIFICATION	5.1248415275031266E-6	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9983864826583414	WITHOUT_CLASSIFICATION	0.0016135173416585522	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999590949543131	WITHOUT_CLASSIFICATION	4.09050456869172E-5	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999941111579177	WITHOUT_CLASSIFICATION	5.888842082233222E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9996798091925844	WITHOUT_CLASSIFICATION	3.201908074156971E-4	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9993066200317132	WITHOUT_CLASSIFICATION	6.933799682868119E-4	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999380507361174	WITHOUT_CLASSIFICATION	6.194926388255726E-5	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9983368587426656	WITHOUT_CLASSIFICATION	0.0016631412573343853	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999562872520447	WITHOUT_CLASSIFICATION	4.371274795530087E-5	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999503619287303	WITHOUT_CLASSIFICATION	4.9638071269576966E-5	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9990142121347356	WITHOUT_CLASSIFICATION	9.857878652643312E-4	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999175366638536	WITHOUT_CLASSIFICATION	8.246333614630286E-5	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999846516365414	WITHOUT_CLASSIFICATION	1.5348363458590576E-5	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.999941003699262	WITHOUT_CLASSIFICATION	5.8996300738039E-5	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9989986340850655	WITHOUT_CLASSIFICATION	0.0010013659149345	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9991968350519278	WITHOUT_CLASSIFICATION	8.031649480722667E-4	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999761074268254	WITHOUT_CLASSIFICATION	2.389257317450374E-5	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9992848778940633	WITHOUT_CLASSIFICATION	7.151221059368033E-4	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998893500526822	WITHOUT_CLASSIFICATION	1.1064994731776948E-4	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9996259510306357	WITHOUT_CLASSIFICATION	3.7404896936429156E-4	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999792848205096	WITHOUT_CLASSIFICATION	2.0715179490468875E-5	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999975371081697	WITHOUT_CLASSIFICATION	2.4628918303128956E-6	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999973618095007	WITHOUT_CLASSIFICATION	2.638190499305398E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9995607421196552	WITHOUT_CLASSIFICATION	4.3925788034488355E-4	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.998444106840619	WITHOUT_CLASSIFICATION	0.0015558931593810494	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9984983071036835	WITHOUT_CLASSIFICATION	0.0015016928963165327	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9997359944736798	WITHOUT_CLASSIFICATION	2.640055263201475E-4	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.999889455275679	WITHOUT_CLASSIFICATION	1.1054472432094025E-4	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999999521923796	WITHOUT_CLASSIFICATION	4.78076203962363E-7	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999979982715532	WITHOUT_CLASSIFICATION	2.0017284468153856E-6	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999993856241736	WITHOUT_CLASSIFICATION	6.143758263899853E-7	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999949404930054	WITHOUT_CLASSIFICATION	5.059506994621047E-6	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999011520537837	WITHOUT_CLASSIFICATION	9.884794621629745E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.999461547869806	WITHOUT_CLASSIFICATION	5.384521301940271E-4	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999561664131831	WITHOUT_CLASSIFICATION	4.383358681699189E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9964535906754516	WITHOUT_CLASSIFICATION	0.003546409324548427	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.999960745465528	WITHOUT_CLASSIFICATION	3.9254534471918824E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9996564556792674	WITHOUT_CLASSIFICATION	3.4354432073264177E-4	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9998339105031353	WITHOUT_CLASSIFICATION	1.6608949686469326E-4	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999387087166953	WITHOUT_CLASSIFICATION	6.129128330459607E-5	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999803401309489	WITHOUT_CLASSIFICATION	1.9659869051078445E-5	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999614039957267	WITHOUT_CLASSIFICATION	3.8596004273227145E-5	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999840229620941	WITHOUT_CLASSIFICATION	1.5977037905861822E-5	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9995803017356388	WITHOUT_CLASSIFICATION	4.196982643612392E-4	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9991656477223929	WITHOUT_CLASSIFICATION	8.34352277607061E-4	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999898876644765	WITHOUT_CLASSIFICATION	1.0112335523491307E-5	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.999783820746228	WITHOUT_CLASSIFICATION	2.1617925377192304E-4	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999898928758171	WITHOUT_CLASSIFICATION	1.0107124182833728E-5	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999862812693413	WITHOUT_CLASSIFICATION	1.3718730658636664E-5	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.999994857237949	WITHOUT_CLASSIFICATION	5.142762051006464E-6	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.99998498753797	WITHOUT_CLASSIFICATION	1.5012462030053081E-5	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999769304741049	WITHOUT_CLASSIFICATION	2.3069525895159393E-5	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9998585104073275	WITHOUT_CLASSIFICATION	1.414895926724273E-4	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9998542810805809	WITHOUT_CLASSIFICATION	1.457189194190159E-4	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9998653532188376	WITHOUT_CLASSIFICATION	1.3464678116233215E-4	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9998427286493148	WITHOUT_CLASSIFICATION	1.5727135068527434E-4	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9998394262784849	WITHOUT_CLASSIFICATION	1.6057372151508616E-4	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.999835658145425	WITHOUT_CLASSIFICATION	1.6434185457492363E-4	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.99983672967645	WITHOUT_CLASSIFICATION	1.6327032355005166E-4	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9998346046677357	WITHOUT_CLASSIFICATION	1.6539533226447655E-4	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.999843965829775	WITHOUT_CLASSIFICATION	1.5603417022496836E-4	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9998321935114918	WITHOUT_CLASSIFICATION	1.6780648850821698E-4	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9998218533865911	WITHOUT_CLASSIFICATION	1.78146613408896E-4	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9998537116549687	WITHOUT_CLASSIFICATION	1.4628834503115085E-4	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9998278555100879	WITHOUT_CLASSIFICATION	1.7214448991211866E-4	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9998222498253494	WITHOUT_CLASSIFICATION	1.777501746506516E-4	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9998322214011652	WITHOUT_CLASSIFICATION	1.677785988347346E-4	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9998231818082112	WITHOUT_CLASSIFICATION	1.7681819178878193E-4	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9998244716201361	WITHOUT_CLASSIFICATION	1.7552837986382759E-4	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9998622978890441	WITHOUT_CLASSIFICATION	1.3770211095584368E-4	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.999855887190471	WITHOUT_CLASSIFICATION	1.4411280952896508E-4	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999851562826436	WITHOUT_CLASSIFICATION	1.4843717356349729E-5	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999773350936156	WITHOUT_CLASSIFICATION	2.2664906384406608E-5	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999649317080392	WITHOUT_CLASSIFICATION	3.5068291960687035E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999941451288145	WITHOUT_CLASSIFICATION	5.854871185568742E-6	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999952720034009	WITHOUT_CLASSIFICATION	4.727996599089133E-5	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999975819010384	WITHOUT_CLASSIFICATION	2.4180989617092822E-6	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999933030523435	WITHOUT_CLASSIFICATION	6.696947656553212E-6	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9998676728251646	WITHOUT_CLASSIFICATION	1.3232717483536478E-4	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999341431467674	WITHOUT_CLASSIFICATION	6.585685323263651E-5	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9952215564627351	WITHOUT_CLASSIFICATION	0.004778443537264854	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9059980684052583	WITHOUT_CLASSIFICATION	0.0940019315947416	DESIGN
// integer division	WITHOUT_CLASSIFICATION	0.9999845950627815	WITHOUT_CLASSIFICATION	1.540493721856074E-5	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999802971600438	WITHOUT_CLASSIFICATION	1.9702839956245615E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9989675025416528	WITHOUT_CLASSIFICATION	0.0010324974583471739	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9989675025416528	WITHOUT_CLASSIFICATION	0.0010324974583471739	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999972887493427	WITHOUT_CLASSIFICATION	2.7112506572400176E-6	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9993934612439683	WITHOUT_CLASSIFICATION	6.065387560315795E-4	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999955836801028	WITHOUT_CLASSIFICATION	4.416319897243326E-6	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999419805940917	WITHOUT_CLASSIFICATION	5.80194059084544E-5	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999735340517002	WITHOUT_CLASSIFICATION	2.6465948299883092E-5	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9974251426404911	WITHOUT_CLASSIFICATION	0.0025748573595089017	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9998982439347236	WITHOUT_CLASSIFICATION	1.0175606527644258E-4	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999966284184066	WITHOUT_CLASSIFICATION	3.3715815933753407E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999884614545872	WITHOUT_CLASSIFICATION	1.1538545412867634E-5	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999018392943214	WITHOUT_CLASSIFICATION	9.816070567852178E-5	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999954256389126	WITHOUT_CLASSIFICATION	4.574361087424128E-6	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999775793206397	WITHOUT_CLASSIFICATION	2.2420679360301656E-5	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9997317680548599	WITHOUT_CLASSIFICATION	2.682319451400343E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999947120071982	WITHOUT_CLASSIFICATION	5.287992801730959E-6	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999940597413615	WITHOUT_CLASSIFICATION	5.940258638568455E-6	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999614710642487	WITHOUT_CLASSIFICATION	3.85289357512533E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999331468702435	WITHOUT_CLASSIFICATION	6.685312975647888E-5	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999998993332647	WITHOUT_CLASSIFICATION	1.006667353735447E-7	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999917627874714	WITHOUT_CLASSIFICATION	8.23721252859728E-6	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999817003677708	WITHOUT_CLASSIFICATION	1.8299632229199104E-5	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.99999670310534	WITHOUT_CLASSIFICATION	3.2968946600010358E-6	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9997109007639856	WITHOUT_CLASSIFICATION	2.8909923601439847E-4	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999645944577396	WITHOUT_CLASSIFICATION	3.54055422603181E-5	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999934699945898	WITHOUT_CLASSIFICATION	6.5300054102208555E-6	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999950300389526	WITHOUT_CLASSIFICATION	4.969961047399305E-6	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999907572829493	WITHOUT_CLASSIFICATION	9.242717050785395E-6	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999707726213946	WITHOUT_CLASSIFICATION	2.92273786054003E-5	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999414076111696	WITHOUT_CLASSIFICATION	5.859238883033519E-5	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999992174050137	WITHOUT_CLASSIFICATION	7.825949862787939E-7	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999695892248971	WITHOUT_CLASSIFICATION	3.0410775102923992E-5	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999416502724514	WITHOUT_CLASSIFICATION	5.834972754849488E-5	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9998676352847002	WITHOUT_CLASSIFICATION	1.3236471529970474E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999866984925667	WITHOUT_CLASSIFICATION	1.3301507433395912E-5	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999647371196059	WITHOUT_CLASSIFICATION	3.526288039410662E-5	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999389398552463	WITHOUT_CLASSIFICATION	6.106014475371317E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9997421165960377	WITHOUT_CLASSIFICATION	2.578834039622225E-4	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998668184375227	WITHOUT_CLASSIFICATION	1.3318156247732647E-4	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999561992403951	WITHOUT_CLASSIFICATION	4.3800759604823195E-5	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9986338201210093	WITHOUT_CLASSIFICATION	0.001366179878990641	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9962686150935194	WITHOUT_CLASSIFICATION	0.003731384906480688	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9993117738379822	WITHOUT_CLASSIFICATION	6.882261620178589E-4	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999081118309626	WITHOUT_CLASSIFICATION	9.188816903735468E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999985846904472	WITHOUT_CLASSIFICATION	1.4153095528522976E-6	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999767196917441	WITHOUT_CLASSIFICATION	2.3280308255970155E-5	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999767196917441	WITHOUT_CLASSIFICATION	2.3280308255970155E-5	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999360577777889	WITHOUT_CLASSIFICATION	6.394222221097772E-5	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999194914522166	WITHOUT_CLASSIFICATION	8.05085477834373E-5	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999024242002301	WITHOUT_CLASSIFICATION	9.757579976988372E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9990487567527744	WITHOUT_CLASSIFICATION	9.512432472255392E-4	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9993986030475112	WITHOUT_CLASSIFICATION	6.013969524887558E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999591374276292	WITHOUT_CLASSIFICATION	4.086257237085167E-5	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999777709865453	WITHOUT_CLASSIFICATION	2.2229013454761634E-5	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9986374141003892	WITHOUT_CLASSIFICATION	0.0013625858996107383	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999601633043893	WITHOUT_CLASSIFICATION	3.983669561076479E-5	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9996471403527628	WITHOUT_CLASSIFICATION	3.5285964723719696E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9997662653692668	WITHOUT_CLASSIFICATION	2.3373463073318254E-4	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999670262969268	WITHOUT_CLASSIFICATION	3.297370307315027E-5	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9997056569980637	WITHOUT_CLASSIFICATION	2.943430019364144E-4	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.999822859321168	WITHOUT_CLASSIFICATION	1.7714067883213796E-4	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9691564077337556	WITHOUT_CLASSIFICATION	0.030843592266244408	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9968028146027833	WITHOUT_CLASSIFICATION	0.0031971853972166914	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9998642152108909	WITHOUT_CLASSIFICATION	1.3578478910908758E-4	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999769799612316	WITHOUT_CLASSIFICATION	2.3020038768319026E-5	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999998748623595	WITHOUT_CLASSIFICATION	1.2513764049383808E-7	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9998902374024525	WITHOUT_CLASSIFICATION	1.0976259754750434E-4	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999913221967768	WITHOUT_CLASSIFICATION	8.67780322330367E-6	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999913221967768	WITHOUT_CLASSIFICATION	8.67780322330367E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999942372737837	WITHOUT_CLASSIFICATION	5.762726216281234E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999942372737837	WITHOUT_CLASSIFICATION	5.762726216281234E-6	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999591382200985	WITHOUT_CLASSIFICATION	4.0861779901440494E-5	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999524645327175	WITHOUT_CLASSIFICATION	4.753546728243259E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999968920564763	WITHOUT_CLASSIFICATION	3.1079435237375755E-6	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999586470752126	WITHOUT_CLASSIFICATION	4.135292478726767E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999716624239393	WITHOUT_CLASSIFICATION	2.83375760606748E-5	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9998059249672765	WITHOUT_CLASSIFICATION	1.9407503272360235E-4	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9981742048443427	WITHOUT_CLASSIFICATION	0.0018257951556572025	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9999761423664996	WITHOUT_CLASSIFICATION	2.3857633500492213E-5	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999932897996018	WITHOUT_CLASSIFICATION	6.710200398145908E-6	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999958792351326	WITHOUT_CLASSIFICATION	4.120764867439893E-6	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999912930558773	WITHOUT_CLASSIFICATION	8.706944122563518E-6	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9998189125706254	WITHOUT_CLASSIFICATION	1.810874293746362E-4	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9961594880420837	WITHOUT_CLASSIFICATION	0.0038405119579163842	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9995437227657119	WITHOUT_CLASSIFICATION	4.5627723428809576E-4	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999670912847247	WITHOUT_CLASSIFICATION	3.290871527526086E-5	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999950053001199	WITHOUT_CLASSIFICATION	4.994699880191448E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9998673089585262	WITHOUT_CLASSIFICATION	1.3269104147377187E-4	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999772726523042	WITHOUT_CLASSIFICATION	2.2727347695879413E-5	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9996340271726023	WITHOUT_CLASSIFICATION	3.6597282739762687E-4	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999618356618172	WITHOUT_CLASSIFICATION	3.81643381827847E-5	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999755849226968	WITHOUT_CLASSIFICATION	2.4415077303242576E-5	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999839166258732	WITHOUT_CLASSIFICATION	1.6083374126822646E-5	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.999966766417492	WITHOUT_CLASSIFICATION	3.323358250808141E-5	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999121484631233	WITHOUT_CLASSIFICATION	8.785153687684362E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9997585021054517	WITHOUT_CLASSIFICATION	2.414978945483461E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999146688169966	WITHOUT_CLASSIFICATION	8.533118300333498E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.6662050647376072	WITHOUT_CLASSIFICATION	0.33379493526239273	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999121525483511	WITHOUT_CLASSIFICATION	8.784745164889886E-5	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9908184401534236	WITHOUT_CLASSIFICATION	0.009181559846576322	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999923221941812	WITHOUT_CLASSIFICATION	7.677805818812564E-6	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999923221941812	WITHOUT_CLASSIFICATION	7.677805818812564E-6	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9996431955336987	WITHOUT_CLASSIFICATION	3.5680446630131875E-4	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9995192217855784	WITHOUT_CLASSIFICATION	4.8077821442155664E-4	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999859027440753	WITHOUT_CLASSIFICATION	1.4097255924634254E-5	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9997350962888688	WITHOUT_CLASSIFICATION	2.6490371113111583E-4	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9994132947443842	WITHOUT_CLASSIFICATION	5.8670525561583E-4	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9992966849718081	WITHOUT_CLASSIFICATION	7.033150281918534E-4	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9998739624032837	WITHOUT_CLASSIFICATION	1.2603759671625436E-4	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9995647328667173	WITHOUT_CLASSIFICATION	4.3526713328260097E-4	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999977033550981	WITHOUT_CLASSIFICATION	2.2966449019480237E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.999764168155624	WITHOUT_CLASSIFICATION	2.358318443759908E-4	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.999757517873429	WITHOUT_CLASSIFICATION	2.4248212657105472E-4	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.999868316242985	WITHOUT_CLASSIFICATION	1.3168375701505777E-4	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9997338006506937	WITHOUT_CLASSIFICATION	2.661993493063121E-4	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999845142175083	WITHOUT_CLASSIFICATION	1.548578249166493E-5	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999488625821943	WITHOUT_CLASSIFICATION	5.1137417805846786E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998835670215935	WITHOUT_CLASSIFICATION	1.1643297840646346E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999709310633101	WITHOUT_CLASSIFICATION	2.906893668974737E-5	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999063421262132	WITHOUT_CLASSIFICATION	9.365787378673389E-5	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9997989607451164	WITHOUT_CLASSIFICATION	2.0103925488363465E-4	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9981007449849836	WITHOUT_CLASSIFICATION	0.0018992550150163901	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999920322824503	WITHOUT_CLASSIFICATION	7.967717549801036E-6	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999948240292921	WITHOUT_CLASSIFICATION	5.175970707955966E-6	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999040419737606	WITHOUT_CLASSIFICATION	9.595802623939497E-5	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999450938711946	WITHOUT_CLASSIFICATION	5.490612880530632E-5	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999917431225855	WITHOUT_CLASSIFICATION	8.25687741444335E-6	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999802710387099	WITHOUT_CLASSIFICATION	1.972896129015378E-5	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9998139598591502	WITHOUT_CLASSIFICATION	1.860401408496413E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999869036910027	WITHOUT_CLASSIFICATION	1.3096308997227375E-5	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999445098679598	WITHOUT_CLASSIFICATION	5.5490132040151056E-5	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999828389592301	WITHOUT_CLASSIFICATION	1.7161040769862964E-5	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999854480014788	WITHOUT_CLASSIFICATION	1.4551998521163565E-5	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999401360516869	WITHOUT_CLASSIFICATION	5.986394831324085E-5	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999612448434769	WITHOUT_CLASSIFICATION	3.875515652315016E-5	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9998970082535047	WITHOUT_CLASSIFICATION	1.0299174649534994E-4	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9992594275526202	WITHOUT_CLASSIFICATION	7.40572447379795E-4	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9985276451901243	WITHOUT_CLASSIFICATION	0.0014723548098757638	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999264679804589	WITHOUT_CLASSIFICATION	7.353201954115046E-5	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9957907292503545	WITHOUT_CLASSIFICATION	0.004209270749645501	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9998314605417545	WITHOUT_CLASSIFICATION	1.6853945824558725E-4	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998600556676156	WITHOUT_CLASSIFICATION	1.3994433238432807E-4	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998162724690934	WITHOUT_CLASSIFICATION	1.8372753090650253E-4	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9998953643553116	WITHOUT_CLASSIFICATION	1.046356446885065E-4	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999517193759729	WITHOUT_CLASSIFICATION	4.828062402708494E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999293458420159	WITHOUT_CLASSIFICATION	7.065415798413958E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9994134542943444	WITHOUT_CLASSIFICATION	5.865457056555476E-4	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999855043041771	WITHOUT_CLASSIFICATION	1.4495695822860372E-5	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9997403425701044	WITHOUT_CLASSIFICATION	2.596574298955859E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999975161220723	WITHOUT_CLASSIFICATION	2.483877927644709E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999932301852467	WITHOUT_CLASSIFICATION	6.76981475331516E-6	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9999358021122576	WITHOUT_CLASSIFICATION	6.419788774232866E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9997285642016064	WITHOUT_CLASSIFICATION	2.714357983935599E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9994635557648618	WITHOUT_CLASSIFICATION	5.364442351382162E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998038387666931	WITHOUT_CLASSIFICATION	1.961612333068249E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999740727282928	WITHOUT_CLASSIFICATION	2.5927271707207414E-4	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9994775474357971	WITHOUT_CLASSIFICATION	5.224525642029106E-4	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9997545754240261	WITHOUT_CLASSIFICATION	2.454245759739374E-4	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9997735491491786	WITHOUT_CLASSIFICATION	2.2645085082134423E-4	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9981776499359655	WITHOUT_CLASSIFICATION	0.0018223500640345695	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999496988856369	WITHOUT_CLASSIFICATION	5.030111436316421E-5	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9971453933124256	WITHOUT_CLASSIFICATION	0.0028546066875744093	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9995950449134043	WITHOUT_CLASSIFICATION	4.049550865955727E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9997285642016064	WITHOUT_CLASSIFICATION	2.714357983935599E-4	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998038387666931	WITHOUT_CLASSIFICATION	1.961612333068249E-4	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9994635557648618	WITHOUT_CLASSIFICATION	5.364442351382162E-4	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9997645368457322	WITHOUT_CLASSIFICATION	2.3546315426773112E-4	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9997159713219099	WITHOUT_CLASSIFICATION	2.840286780899767E-4	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999481558427954	WITHOUT_CLASSIFICATION	5.1844157204516745E-5	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999614397615283	WITHOUT_CLASSIFICATION	3.856023847163073E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9999916524899621	WITHOUT_CLASSIFICATION	8.347510037804829E-6	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999817775561342	WITHOUT_CLASSIFICATION	1.822244386584831E-5	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.999956451472759	WITHOUT_CLASSIFICATION	4.35485272409836E-5	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999768694588486	WITHOUT_CLASSIFICATION	2.313054115152474E-5	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9998920880077173	WITHOUT_CLASSIFICATION	1.079119922826138E-4	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.999991741965925	WITHOUT_CLASSIFICATION	8.258034075049024E-6	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999950288491459	WITHOUT_CLASSIFICATION	4.971150854107633E-6	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999672671235673	WITHOUT_CLASSIFICATION	3.273287643275472E-5	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999938130189328	WITHOUT_CLASSIFICATION	6.186981067200117E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999870235712158	WITHOUT_CLASSIFICATION	1.2976428784116636E-5	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999848465798254	WITHOUT_CLASSIFICATION	1.515342017464353E-5	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9992965011631276	WITHOUT_CLASSIFICATION	7.034988368724372E-4	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9974057495186788	WITHOUT_CLASSIFICATION	0.0025942504813212426	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999839457048786	WITHOUT_CLASSIFICATION	1.6054295121446303E-5	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999839457048786	WITHOUT_CLASSIFICATION	1.6054295121446303E-5	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999923575393961	WITHOUT_CLASSIFICATION	7.6424606039603E-6	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999529610234696	WITHOUT_CLASSIFICATION	4.7038976530217576E-5	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999250724561782	WITHOUT_CLASSIFICATION	7.492754382175943E-5	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.999774284939748	WITHOUT_CLASSIFICATION	2.2571506025203568E-4	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998540460561979	WITHOUT_CLASSIFICATION	1.459539438020769E-4	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999938515158059	WITHOUT_CLASSIFICATION	6.14848419417795E-6	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.99987800130959	WITHOUT_CLASSIFICATION	1.2199869041005194E-4	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9995250179125744	WITHOUT_CLASSIFICATION	4.7498208742558157E-4	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999571779888061	WITHOUT_CLASSIFICATION	4.2822011193966385E-5	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9998318839199279	WITHOUT_CLASSIFICATION	1.6811608007212154E-4	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9996949037026767	WITHOUT_CLASSIFICATION	3.050962973232602E-4	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9998976631376592	WITHOUT_CLASSIFICATION	1.0233686234091472E-4	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999924812658565	WITHOUT_CLASSIFICATION	7.518734143590354E-6	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.8550596690351274	WITHOUT_CLASSIFICATION	0.14494033096487252	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999950331771187	WITHOUT_CLASSIFICATION	4.966822881316613E-6	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999548128753206	WITHOUT_CLASSIFICATION	4.5187124679413325E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999831687080819	WITHOUT_CLASSIFICATION	1.68312919180596E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999592444361511	WITHOUT_CLASSIFICATION	4.07555638487956E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999592444361511	WITHOUT_CLASSIFICATION	4.07555638487956E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9998211327793549	WITHOUT_CLASSIFICATION	1.78867220645051E-4	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999683571763249	WITHOUT_CLASSIFICATION	3.164282367514869E-5	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.999996487504677	WITHOUT_CLASSIFICATION	3.5124953230668672E-6	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999875401123592	WITHOUT_CLASSIFICATION	1.2459887640861074E-5	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999086614155401	WITHOUT_CLASSIFICATION	9.133858445980001E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999592444361511	WITHOUT_CLASSIFICATION	4.07555638487956E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999592444361511	WITHOUT_CLASSIFICATION	4.07555638487956E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999869787399966	WITHOUT_CLASSIFICATION	1.3021260003354858E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999869787399966	WITHOUT_CLASSIFICATION	1.3021260003354858E-5	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9997609749542112	WITHOUT_CLASSIFICATION	2.390250457888504E-4	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999895834482779	WITHOUT_CLASSIFICATION	1.041655172211968E-5	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999941959177071	WITHOUT_CLASSIFICATION	5.804082292910383E-5	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9973732935110123	WITHOUT_CLASSIFICATION	0.0026267064889876667	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999992649558075	WITHOUT_CLASSIFICATION	7.350441925036811E-6	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999992649558075	WITHOUT_CLASSIFICATION	7.350441925036811E-6	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.999993540071724	WITHOUT_CLASSIFICATION	6.459928276078984E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9993097324810678	WITHOUT_CLASSIFICATION	6.902675189322871E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9997789473461532	WITHOUT_CLASSIFICATION	2.2105265384681787E-4	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9997924686554609	WITHOUT_CLASSIFICATION	2.0753134453913664E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999865525405222	WITHOUT_CLASSIFICATION	1.3447459477848502E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998202719374218	WITHOUT_CLASSIFICATION	1.797280625780318E-4	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999925140207461	WITHOUT_CLASSIFICATION	7.485979254012598E-6	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9998097293418089	WITHOUT_CLASSIFICATION	1.902706581910776E-4	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.999281549052142	WITHOUT_CLASSIFICATION	7.18450947857942E-4	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999292490378414	WITHOUT_CLASSIFICATION	7.075096215866033E-5	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9996751292873279	WITHOUT_CLASSIFICATION	3.248707126721009E-4	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999966224474192	WITHOUT_CLASSIFICATION	3.3775525808309664E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999781567905236	WITHOUT_CLASSIFICATION	2.1843209476387676E-5	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9998668839843031	WITHOUT_CLASSIFICATION	1.331160156968789E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999548128753206	WITHOUT_CLASSIFICATION	4.5187124679413325E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999592444361511	WITHOUT_CLASSIFICATION	4.07555638487956E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999869787399966	WITHOUT_CLASSIFICATION	1.3021260003354858E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998202719374218	WITHOUT_CLASSIFICATION	1.797280625780318E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9789354263864922	WITHOUT_CLASSIFICATION	0.021064573613507824	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9789354263864922	WITHOUT_CLASSIFICATION	0.021064573613507824	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.99999618350482	WITHOUT_CLASSIFICATION	3.81649517996268E-6	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999986471319579	WITHOUT_CLASSIFICATION	1.352868042082715E-6	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9996187358308856	WITHOUT_CLASSIFICATION	3.8126416911447153E-4	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999560183757656	WITHOUT_CLASSIFICATION	4.39816242343717E-5	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999038797534348	WITHOUT_CLASSIFICATION	9.612024656513555E-5	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999873256904889	WITHOUT_CLASSIFICATION	1.2674309511165315E-5	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9986359182132813	WITHOUT_CLASSIFICATION	0.0013640817867186625	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9967874546239104	WITHOUT_CLASSIFICATION	0.003212545376089599	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999774209148354	WITHOUT_CLASSIFICATION	2.2579085164484045E-5	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9998981245986099	WITHOUT_CLASSIFICATION	1.018754013900168E-4	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9996889526688559	WITHOUT_CLASSIFICATION	3.1104733114408E-4	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999982885897492	WITHOUT_CLASSIFICATION	1.7114102507627768E-6	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9998966338294679	WITHOUT_CLASSIFICATION	1.0336617053211101E-4	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999831687080819	WITHOUT_CLASSIFICATION	1.68312919180596E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999869787399966	WITHOUT_CLASSIFICATION	1.3021260003354858E-5	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9993097324810678	WITHOUT_CLASSIFICATION	6.902675189322871E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9997789473461532	WITHOUT_CLASSIFICATION	2.2105265384681787E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9997789473461532	WITHOUT_CLASSIFICATION	2.2105265384681787E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999865525405222	WITHOUT_CLASSIFICATION	1.3447459477848502E-5	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998202719374218	WITHOUT_CLASSIFICATION	1.797280625780318E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998202719374218	WITHOUT_CLASSIFICATION	1.797280625780318E-4	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9789354263864922	WITHOUT_CLASSIFICATION	0.021064573613507824	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999834752402949	WITHOUT_CLASSIFICATION	1.6524759705219584E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999758061646336	WITHOUT_CLASSIFICATION	2.419383536640712E-5	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999653587181089	WITHOUT_CLASSIFICATION	3.4641281891086844E-5	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999202440799647	WITHOUT_CLASSIFICATION	7.975592003529261E-4	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9993134784476082	WITHOUT_CLASSIFICATION	6.865215523917588E-4	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9997590579620285	WITHOUT_CLASSIFICATION	2.4094203797139947E-4	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999824618651789	WITHOUT_CLASSIFICATION	1.7538134821049053E-5	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999156690086018	WITHOUT_CLASSIFICATION	8.43309913982018E-5	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999947336413727	WITHOUT_CLASSIFICATION	5.266358627302203E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9993097324810678	WITHOUT_CLASSIFICATION	6.902675189322871E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9997789473461532	WITHOUT_CLASSIFICATION	2.2105265384681787E-4	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9997789473461532	WITHOUT_CLASSIFICATION	2.2105265384681787E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999865525405222	WITHOUT_CLASSIFICATION	1.3447459477848502E-5	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9967874546239104	WITHOUT_CLASSIFICATION	0.003212545376089599	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9998981245986099	WITHOUT_CLASSIFICATION	1.018754013900168E-4	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999812063339133	WITHOUT_CLASSIFICATION	1.879366608668129E-5	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.999989846302741	WITHOUT_CLASSIFICATION	1.0153697259011655E-5	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999865958827466	WITHOUT_CLASSIFICATION	1.3404117253294135E-5	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999865958827466	WITHOUT_CLASSIFICATION	1.3404117253294135E-5	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9998434998376756	WITHOUT_CLASSIFICATION	1.5650016232434958E-4	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9994743928558399	WITHOUT_CLASSIFICATION	5.256071441600226E-4	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9987870569807811	WITHOUT_CLASSIFICATION	0.0012129430192188556	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998558600717427	WITHOUT_CLASSIFICATION	1.441399282574185E-4	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999527445500341	WITHOUT_CLASSIFICATION	4.725544996576864E-5	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999527445500341	WITHOUT_CLASSIFICATION	4.725544996576864E-5	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9995807850130002	WITHOUT_CLASSIFICATION	4.192149869998735E-4	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9995807850130002	WITHOUT_CLASSIFICATION	4.192149869998735E-4	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999743582014081	WITHOUT_CLASSIFICATION	2.564179859191878E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999743582014081	WITHOUT_CLASSIFICATION	2.564179859191878E-5	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999359603369522	WITHOUT_CLASSIFICATION	6.403966304784031E-5	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999455945744538	WITHOUT_CLASSIFICATION	5.4405425546277346E-5	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9990716061086421	WITHOUT_CLASSIFICATION	9.283938913578564E-4	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999931571854709	WITHOUT_CLASSIFICATION	6.842814529127198E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999218626126407	WITHOUT_CLASSIFICATION	7.813738735929686E-5	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999666526367365	WITHOUT_CLASSIFICATION	3.3347363263586174E-5	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9966595570205804	WITHOUT_CLASSIFICATION	0.0033404429794196286	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999783173053732	WITHOUT_CLASSIFICATION	2.1682694626804044E-5	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9991085996320113	WITHOUT_CLASSIFICATION	8.914003679887766E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9882094622752476	WITHOUT_CLASSIFICATION	0.011790537724752304	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999175011168246	WITHOUT_CLASSIFICATION	8.24988831754204E-5	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999572599810769	WITHOUT_CLASSIFICATION	4.2740018923063814E-5	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9996819445548717	WITHOUT_CLASSIFICATION	3.1805544512824717E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998722432331967	WITHOUT_CLASSIFICATION	1.2775676680333055E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998722432331967	WITHOUT_CLASSIFICATION	1.2775676680333055E-4	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9996606705310862	WITHOUT_CLASSIFICATION	3.3932946891384236E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9998059249672765	WITHOUT_CLASSIFICATION	1.9407503272360235E-4	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9987065283256636	WITHOUT_CLASSIFICATION	0.0012934716743363906	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999858274774266	WITHOUT_CLASSIFICATION	1.4172522573455133E-5	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999361466887324	WITHOUT_CLASSIFICATION	6.38533112675512E-5	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999947758650531	WITHOUT_CLASSIFICATION	5.224134946881789E-6	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999828846812677	WITHOUT_CLASSIFICATION	1.7115318732316413E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999956650660765	WITHOUT_CLASSIFICATION	4.33493392346791E-6	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999937865004409	WITHOUT_CLASSIFICATION	6.21349955910235E-6	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999877160637721	WITHOUT_CLASSIFICATION	1.2283936227780708E-5	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999862988443573	WITHOUT_CLASSIFICATION	1.37011556426161E-5	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999121798172711	WITHOUT_CLASSIFICATION	8.782018272885391E-5	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.999984433060313	WITHOUT_CLASSIFICATION	1.5566939686962404E-5	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999914677298275	WITHOUT_CLASSIFICATION	8.53227017240236E-6	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9946897879582768	WITHOUT_CLASSIFICATION	0.005310212041723205	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999951104209608	WITHOUT_CLASSIFICATION	4.889579039206695E-6	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9997679016128944	WITHOUT_CLASSIFICATION	2.3209838710563913E-4	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999988899641217	WITHOUT_CLASSIFICATION	1.1100358782813264E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998981202121228	WITHOUT_CLASSIFICATION	1.018797878771784E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998981202121228	WITHOUT_CLASSIFICATION	1.018797878771784E-4	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999883991823851	WITHOUT_CLASSIFICATION	1.1600817614954685E-5	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999415237479391	WITHOUT_CLASSIFICATION	5.847625206094734E-5	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9989295470772438	WITHOUT_CLASSIFICATION	0.0010704529227562615	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9989295470772438	WITHOUT_CLASSIFICATION	0.0010704529227562615	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999987764994883	WITHOUT_CLASSIFICATION	1.2235005116711318E-6	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9993418915048499	WITHOUT_CLASSIFICATION	6.581084951501437E-4	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9988055615255332	WITHOUT_CLASSIFICATION	0.0011944384744668193	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9992335359405056	WITHOUT_CLASSIFICATION	7.664640594943473E-4	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999077595410483	WITHOUT_CLASSIFICATION	9.224045895178947E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999837946854255	WITHOUT_CLASSIFICATION	1.6205314574506263E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999837946854255	WITHOUT_CLASSIFICATION	1.6205314574506263E-5	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999385722670039	WITHOUT_CLASSIFICATION	6.142773299607361E-5	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999559251161521	WITHOUT_CLASSIFICATION	4.4074883848052105E-5	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9998659041207382	WITHOUT_CLASSIFICATION	1.3409587926192448E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999413036531013	WITHOUT_CLASSIFICATION	5.8696346898829996E-5	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999415237479391	WITHOUT_CLASSIFICATION	5.847625206094734E-5	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999432202363704	WITHOUT_CLASSIFICATION	5.677976362959248E-4	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998518087348839	WITHOUT_CLASSIFICATION	1.481912651162438E-4	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998518087348839	WITHOUT_CLASSIFICATION	1.481912651162438E-4	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999920979924017	WITHOUT_CLASSIFICATION	7.902007598306694E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962824445896	WITHOUT_CLASSIFICATION	3.7175554105062204E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962824445896	WITHOUT_CLASSIFICATION	3.7175554105062204E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999983712308299	WITHOUT_CLASSIFICATION	1.6287691699812704E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999983712308299	WITHOUT_CLASSIFICATION	1.6287691699812704E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999983712308299	WITHOUT_CLASSIFICATION	1.6287691699812704E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962824445896	WITHOUT_CLASSIFICATION	3.7175554105062204E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962824445896	WITHOUT_CLASSIFICATION	3.7175554105062204E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999920979924017	WITHOUT_CLASSIFICATION	7.902007598306694E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9995409517297005	WITHOUT_CLASSIFICATION	4.590482702994376E-4	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999565542374474	WITHOUT_CLASSIFICATION	4.344576255247987E-5	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9987676751026824	WITHOUT_CLASSIFICATION	0.001232324897317622	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999847645222351	WITHOUT_CLASSIFICATION	1.5235477764814856E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999975401589734	WITHOUT_CLASSIFICATION	2.4598410266440768E-6	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999984946492718	WITHOUT_CLASSIFICATION	1.5053507282206614E-6	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999787004269851	WITHOUT_CLASSIFICATION	2.1299573014890444E-5	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999899801998561	WITHOUT_CLASSIFICATION	1.0019800143876735E-5	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999862988443573	WITHOUT_CLASSIFICATION	1.37011556426161E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962824445896	WITHOUT_CLASSIFICATION	3.7175554105062204E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962824445896	WITHOUT_CLASSIFICATION	3.7175554105062204E-6	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9995614325020321	WITHOUT_CLASSIFICATION	4.385674979678371E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999977113040549	WITHOUT_CLASSIFICATION	2.2886959450709587E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999656622911943	WITHOUT_CLASSIFICATION	3.4337708805627703E-5	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.99999537609106	WITHOUT_CLASSIFICATION	4.623908939908802E-6	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999680725161304	WITHOUT_CLASSIFICATION	3.192748386961526E-5	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999964987988214	WITHOUT_CLASSIFICATION	3.5012011786215827E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999846031928952	WITHOUT_CLASSIFICATION	1.539680710474319E-5	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999230055967	WITHOUT_CLASSIFICATION	7.699440320093126E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999988136890696	WITHOUT_CLASSIFICATION	1.1863109302672802E-6	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9620042361026693	WITHOUT_CLASSIFICATION	0.03799576389733069	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.999634812064929	WITHOUT_CLASSIFICATION	3.6518793507095345E-4	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9996567966977684	WITHOUT_CLASSIFICATION	3.432033022315442E-4	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999952610549808	WITHOUT_CLASSIFICATION	4.738945019211967E-6	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999975396946692	WITHOUT_CLASSIFICATION	2.4603053307959323E-5	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999997502597321	WITHOUT_CLASSIFICATION	2.497402679291759E-7	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999683879241946	WITHOUT_CLASSIFICATION	3.1612075805366556E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999683879241946	WITHOUT_CLASSIFICATION	3.1612075805366556E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999683879241946	WITHOUT_CLASSIFICATION	3.1612075805366556E-5	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9999621325950641	WITHOUT_CLASSIFICATION	3.786740493601977E-5	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999862626487172	WITHOUT_CLASSIFICATION	1.3737351282753976E-5	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999828802178646	WITHOUT_CLASSIFICATION	1.7119782135350148E-5	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999794281327652	WITHOUT_CLASSIFICATION	2.057186723485027E-5	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999994180269871	WITHOUT_CLASSIFICATION	5.819730129078234E-7	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999347147180262	WITHOUT_CLASSIFICATION	6.528528197377187E-5	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999374605835709	WITHOUT_CLASSIFICATION	6.253941642907438E-5	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999919243750552	WITHOUT_CLASSIFICATION	8.075624944693568E-6	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999897852254016	WITHOUT_CLASSIFICATION	1.0214774598491046E-5	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999800277401736	WITHOUT_CLASSIFICATION	1.9972259826471757E-5	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.999188593190144	WITHOUT_CLASSIFICATION	8.114068098559455E-4	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9965571822149304	WITHOUT_CLASSIFICATION	0.0034428177850696754	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999385722670039	WITHOUT_CLASSIFICATION	6.142773299607361E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962824445896	WITHOUT_CLASSIFICATION	3.7175554105062204E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962824445896	WITHOUT_CLASSIFICATION	3.7175554105062204E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999920979924017	WITHOUT_CLASSIFICATION	7.902007598306694E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999984946492718	WITHOUT_CLASSIFICATION	1.5053507282206614E-6	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999977113040549	WITHOUT_CLASSIFICATION	2.2886959450709587E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.99999537609106	WITHOUT_CLASSIFICATION	4.623908939908802E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999964987988214	WITHOUT_CLASSIFICATION	3.5012011786215827E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999656622911943	WITHOUT_CLASSIFICATION	3.4337708805627703E-5	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999846031928952	WITHOUT_CLASSIFICATION	1.539680710474319E-5	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9620042361026693	WITHOUT_CLASSIFICATION	0.03799576389733069	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999988136890696	WITHOUT_CLASSIFICATION	1.1863109302672802E-6	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9996567966977684	WITHOUT_CLASSIFICATION	3.432033022315442E-4	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999382784852139	WITHOUT_CLASSIFICATION	6.172151478614388E-5	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9996786974081112	WITHOUT_CLASSIFICATION	3.2130259188876476E-4	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9990627029422621	WITHOUT_CLASSIFICATION	9.372970577378525E-4	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999501073027331	WITHOUT_CLASSIFICATION	4.9892697266905234E-5	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999602200853486	WITHOUT_CLASSIFICATION	3.977991465147761E-5	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.999883271391328	WITHOUT_CLASSIFICATION	1.1672860867195986E-4	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9981068911571709	WITHOUT_CLASSIFICATION	0.00189310884282915	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999856424947121	WITHOUT_CLASSIFICATION	1.435750528789673E-5	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9992750977752994	WITHOUT_CLASSIFICATION	7.249022247005089E-4	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999010531594	WITHOUT_CLASSIFICATION	9.894684061265453E-8	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999354198751387	WITHOUT_CLASSIFICATION	6.458012486136016E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999705711749094	WITHOUT_CLASSIFICATION	2.9428825090586854E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999748410206489	WITHOUT_CLASSIFICATION	2.515897935102764E-5	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.5668626937093497	WITHOUT_CLASSIFICATION	0.4331373062906502	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999826828649026	WITHOUT_CLASSIFICATION	1.7317135097469226E-5	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9967577090322882	WITHOUT_CLASSIFICATION	0.0032422909677117485	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9997754831519913	WITHOUT_CLASSIFICATION	2.245168480086691E-4	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999791439349438	WITHOUT_CLASSIFICATION	2.0856065056093164E-5	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999962840393504	WITHOUT_CLASSIFICATION	3.7159606497181505E-6	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998095737597398	WITHOUT_CLASSIFICATION	1.9042624026023634E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999877795788811	WITHOUT_CLASSIFICATION	1.2220421119014067E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999522232509742	WITHOUT_CLASSIFICATION	4.777674902574374E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999522232509742	WITHOUT_CLASSIFICATION	4.777674902574374E-5	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999582756242917	WITHOUT_CLASSIFICATION	4.1724375708180315E-5	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.998106693332752	WITHOUT_CLASSIFICATION	0.001893306667247863	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996249637712801	WITHOUT_CLASSIFICATION	3.7503622872000467E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996249637712801	WITHOUT_CLASSIFICATION	3.7503622872000467E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996249637712801	WITHOUT_CLASSIFICATION	3.7503622872000467E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9996289937005899	WITHOUT_CLASSIFICATION	3.7100629941012154E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9996289937005899	WITHOUT_CLASSIFICATION	3.7100629941012154E-4	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9996443538095009	WITHOUT_CLASSIFICATION	3.5564619049911127E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9995172057581546	WITHOUT_CLASSIFICATION	4.827942418453664E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.998106693332752	WITHOUT_CLASSIFICATION	0.001893306667247863	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999506033964372	WITHOUT_CLASSIFICATION	4.9396603562740944E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996249637712801	WITHOUT_CLASSIFICATION	3.7503622872000467E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996249637712801	WITHOUT_CLASSIFICATION	3.7503622872000467E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9996289937005899	WITHOUT_CLASSIFICATION	3.7100629941012154E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9995172057581546	WITHOUT_CLASSIFICATION	4.827942418453664E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9993849259354042	WITHOUT_CLASSIFICATION	6.150740645957932E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9993849259354042	WITHOUT_CLASSIFICATION	6.150740645957932E-4	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999934359494186	WITHOUT_CLASSIFICATION	6.564050581427723E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999934359494186	WITHOUT_CLASSIFICATION	6.564050581427723E-6	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.999881765041003	WITHOUT_CLASSIFICATION	1.1823495899698632E-4	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.999881765041003	WITHOUT_CLASSIFICATION	1.1823495899698632E-4	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999097276815061	WITHOUT_CLASSIFICATION	9.027231849383349E-5	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999889004347425	WITHOUT_CLASSIFICATION	1.1099565257368038E-5	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999889004347425	WITHOUT_CLASSIFICATION	1.1099565257368038E-5	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999664643048451	WITHOUT_CLASSIFICATION	3.353569515484725E-5	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999664643048451	WITHOUT_CLASSIFICATION	3.353569515484725E-5	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999986578688522	WITHOUT_CLASSIFICATION	1.3421311477917022E-5	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9992516071124695	WITHOUT_CLASSIFICATION	7.483928875305557E-4	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9992516071124695	WITHOUT_CLASSIFICATION	7.483928875305557E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9993482197806514	WITHOUT_CLASSIFICATION	6.517802193486041E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999291261688608	WITHOUT_CLASSIFICATION	7.087383113922668E-5	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999499182811482	WITHOUT_CLASSIFICATION	5.0081718851691494E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9993482197806514	WITHOUT_CLASSIFICATION	6.517802193486041E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999977355181459	WITHOUT_CLASSIFICATION	2.2644818541504755E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999581171217974	WITHOUT_CLASSIFICATION	4.188287820268414E-5	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999581171217974	WITHOUT_CLASSIFICATION	4.188287820268414E-5	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999581171217974	WITHOUT_CLASSIFICATION	4.188287820268414E-5	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999905818460882	WITHOUT_CLASSIFICATION	9.41815391173742E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999672504178477	WITHOUT_CLASSIFICATION	3.2749582152300684E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999043261027021	WITHOUT_CLASSIFICATION	9.567389729791207E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999043261027021	WITHOUT_CLASSIFICATION	9.567389729791207E-5	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.999979954500459	WITHOUT_CLASSIFICATION	2.0045499541040733E-5	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999613812166482	WITHOUT_CLASSIFICATION	3.861878335185798E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999668123037313	WITHOUT_CLASSIFICATION	3.318769626869598E-5	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.999959191607029	WITHOUT_CLASSIFICATION	4.0808392971083794E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999994272768535	WITHOUT_CLASSIFICATION	5.727231464976148E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999855368524284	WITHOUT_CLASSIFICATION	1.4463147571660177E-5	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999855368524284	WITHOUT_CLASSIFICATION	1.4463147571660177E-5	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999990853306836	WITHOUT_CLASSIFICATION	9.14669316277867E-7	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9995553061002646	WITHOUT_CLASSIFICATION	4.4469389973548123E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9995553061002646	WITHOUT_CLASSIFICATION	4.4469389973548123E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999581171217974	WITHOUT_CLASSIFICATION	4.188287820268414E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999672504178477	WITHOUT_CLASSIFICATION	3.2749582152300684E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999043261027021	WITHOUT_CLASSIFICATION	9.567389729791207E-5	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.999979954500459	WITHOUT_CLASSIFICATION	2.0045499541040733E-5	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999613812166482	WITHOUT_CLASSIFICATION	3.861878335185798E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999668123037313	WITHOUT_CLASSIFICATION	3.318769626869598E-5	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.999959191607029	WITHOUT_CLASSIFICATION	4.0808392971083794E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9995553061002646	WITHOUT_CLASSIFICATION	4.4469389973548123E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998519208208717	WITHOUT_CLASSIFICATION	1.4807917912819472E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9996613343137105	WITHOUT_CLASSIFICATION	3.3866568628950844E-4	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9998295122394742	WITHOUT_CLASSIFICATION	1.7048776052572422E-4	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9996039633437233	WITHOUT_CLASSIFICATION	3.9603665627682276E-4	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.999766696962575	WITHOUT_CLASSIFICATION	2.3330303742499916E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9996242117028847	WITHOUT_CLASSIFICATION	3.757882971152632E-4	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999309496582751	WITHOUT_CLASSIFICATION	6.905034172497789E-5	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999309496582751	WITHOUT_CLASSIFICATION	6.905034172497789E-5	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9989013436398033	WITHOUT_CLASSIFICATION	0.0010986563601966092	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.999903472752135	WITHOUT_CLASSIFICATION	9.652724786500565E-5	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9997317524208665	WITHOUT_CLASSIFICATION	2.682475791334201E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999884429733814	WITHOUT_CLASSIFICATION	1.155702661861049E-5	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.99993776033887	WITHOUT_CLASSIFICATION	6.223966112992728E-5	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.99993776033887	WITHOUT_CLASSIFICATION	6.223966112992728E-5	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9981141382921913	WITHOUT_CLASSIFICATION	0.0018858617078087133	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9993398429032899	WITHOUT_CLASSIFICATION	6.60157096710143E-4	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999163744856188	WITHOUT_CLASSIFICATION	8.362551438125169E-5	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999163744856188	WITHOUT_CLASSIFICATION	8.362551438125169E-5	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999822974853838	WITHOUT_CLASSIFICATION	1.7702514616145386E-5	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999577356857464	WITHOUT_CLASSIFICATION	4.226431425360957E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999994272768535	WITHOUT_CLASSIFICATION	5.727231464976148E-6	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999586829904646	WITHOUT_CLASSIFICATION	4.131700953543542E-5	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9997499297376765	WITHOUT_CLASSIFICATION	2.500702623235314E-4	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999859905026205	WITHOUT_CLASSIFICATION	1.4009497379520544E-5	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999725987128398	WITHOUT_CLASSIFICATION	2.740128716016856E-5	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999650049676285	WITHOUT_CLASSIFICATION	3.499503237141988E-5	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999992269409456	WITHOUT_CLASSIFICATION	7.73059054333014E-7	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9998004471916478	WITHOUT_CLASSIFICATION	1.9955280835213206E-4	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9998580403970458	WITHOUT_CLASSIFICATION	1.4195960295415873E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999731232228869	WITHOUT_CLASSIFICATION	2.6876777113143175E-5	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999731232228869	WITHOUT_CLASSIFICATION	2.6876777113143175E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999738255648992	WITHOUT_CLASSIFICATION	2.6174435100807296E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999738255648992	WITHOUT_CLASSIFICATION	2.6174435100807296E-5	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999936466242171	WITHOUT_CLASSIFICATION	6.353375782870021E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9967343998212318	WITHOUT_CLASSIFICATION	0.003265600178768206	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9967343998212318	WITHOUT_CLASSIFICATION	0.003265600178768206	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9967343998212318	WITHOUT_CLASSIFICATION	0.003265600178768206	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998715942774055	WITHOUT_CLASSIFICATION	1.2840572259449753E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998976025917766	WITHOUT_CLASSIFICATION	1.0239740822334863E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998976025917766	WITHOUT_CLASSIFICATION	1.0239740822334863E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999760835911656	WITHOUT_CLASSIFICATION	2.3916408834322244E-5	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9998160995746669	WITHOUT_CLASSIFICATION	1.8390042533309402E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999940258237	WITHOUT_CLASSIFICATION	5.97417629999134E-6	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999749437178151	WITHOUT_CLASSIFICATION	2.5056282184865666E-5	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999858208371842	WITHOUT_CLASSIFICATION	1.4179162815772718E-5	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9999892678824428	WITHOUT_CLASSIFICATION	1.073211755722377E-5	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9996400405151089	WITHOUT_CLASSIFICATION	3.5995948489101533E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999748410206489	WITHOUT_CLASSIFICATION	2.515897935102764E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999748410206489	WITHOUT_CLASSIFICATION	2.515897935102764E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998715942774055	WITHOUT_CLASSIFICATION	1.2840572259449753E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999760835911656	WITHOUT_CLASSIFICATION	2.3916408834322244E-5	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999704281668307	WITHOUT_CLASSIFICATION	2.9571833169318085E-5	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9998160995746669	WITHOUT_CLASSIFICATION	1.8390042533309402E-4	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999940258237	WITHOUT_CLASSIFICATION	5.97417629999134E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999951275831064	WITHOUT_CLASSIFICATION	4.872416893645745E-6	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999811340229102	WITHOUT_CLASSIFICATION	1.886597708978435E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999990489561452	WITHOUT_CLASSIFICATION	9.510438547966881E-7	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9997756198715109	WITHOUT_CLASSIFICATION	2.2438012848909763E-4	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999892131517826	WITHOUT_CLASSIFICATION	1.0786848217406105E-5	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999101869448916	WITHOUT_CLASSIFICATION	8.981305510837852E-5	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998737121402178	WITHOUT_CLASSIFICATION	1.2628785978217129E-4	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999951275831064	WITHOUT_CLASSIFICATION	4.872416893645745E-6	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9973462030288598	WITHOUT_CLASSIFICATION	0.0026537969711402064	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9973462030288598	WITHOUT_CLASSIFICATION	0.0026537969711402064	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999777073780544	WITHOUT_CLASSIFICATION	2.2292621945663674E-5	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999392656873218	WITHOUT_CLASSIFICATION	6.073431267830686E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9993317164306988	WITHOUT_CLASSIFICATION	6.682835693011234E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9991928335109593	WITHOUT_CLASSIFICATION	8.071664890406863E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.999967356444952	WITHOUT_CLASSIFICATION	3.26435550479677E-5	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9969139009276088	WITHOUT_CLASSIFICATION	0.003086099072391248	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999802784383302	WITHOUT_CLASSIFICATION	1.9721561669905847E-5	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9979786983526036	WITHOUT_CLASSIFICATION	0.0020213016473964373	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999245223542417	WITHOUT_CLASSIFICATION	7.547764575828708E-5	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999783981996335	WITHOUT_CLASSIFICATION	2.1601800366393914E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999895587520361	WITHOUT_CLASSIFICATION	1.044124796390874E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9991928335109593	WITHOUT_CLASSIFICATION	8.071664890406863E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.999967356444952	WITHOUT_CLASSIFICATION	3.26435550479677E-5	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999545483140808	WITHOUT_CLASSIFICATION	4.545168591916662E-5	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9998960900082897	WITHOUT_CLASSIFICATION	1.0390999171026928E-4	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999988362836512	WITHOUT_CLASSIFICATION	1.1637163488717108E-6	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9983211515044319	WITHOUT_CLASSIFICATION	0.00167884849556815	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.999863533964623	WITHOUT_CLASSIFICATION	1.3646603537694396E-4	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999393428785124	WITHOUT_CLASSIFICATION	6.065712148755844E-5	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9990256775503282	WITHOUT_CLASSIFICATION	9.743224496717353E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999801826405427	WITHOUT_CLASSIFICATION	1.9817359457394267E-5	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999733574520524	WITHOUT_CLASSIFICATION	2.6642547947615477E-5	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9994276146185166	WITHOUT_CLASSIFICATION	5.723853814834462E-4	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9998870989353942	WITHOUT_CLASSIFICATION	1.1290106460576117E-4	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9997675147392621	WITHOUT_CLASSIFICATION	2.3248526073788026E-4	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999922281360066	WITHOUT_CLASSIFICATION	7.771863993315291E-6	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999293517857888	WITHOUT_CLASSIFICATION	7.06482142112332E-5	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.922581571404662	WITHOUT_CLASSIFICATION	0.07741842859533804	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999661346075641	WITHOUT_CLASSIFICATION	3.3865392435910945E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9995959874194847	WITHOUT_CLASSIFICATION	4.0401258051522615E-4	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9998739226307216	WITHOUT_CLASSIFICATION	1.2607736927835417E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999606370418992	WITHOUT_CLASSIFICATION	3.936295810086406E-5	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999720405421205	WITHOUT_CLASSIFICATION	2.7959457879491058E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9995959874194847	WITHOUT_CLASSIFICATION	4.0401258051522615E-4	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9998739226307216	WITHOUT_CLASSIFICATION	1.2607736927835417E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999606370418992	WITHOUT_CLASSIFICATION	3.936295810086406E-5	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9993177704681164	WITHOUT_CLASSIFICATION	6.822295318835531E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9988402298031831	WITHOUT_CLASSIFICATION	0.0011597701968168654	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999881188434714	WITHOUT_CLASSIFICATION	1.1881156528606552E-5	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999755049447738	WITHOUT_CLASSIFICATION	2.4495055226205067E-4	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9974737654136517	WITHOUT_CLASSIFICATION	0.0025262345863483293	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999935217135824	WITHOUT_CLASSIFICATION	6.478286417719101E-6	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9817121338135155	WITHOUT_CLASSIFICATION	0.018287866186484425	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9998902603761314	WITHOUT_CLASSIFICATION	1.0973962386865727E-4	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9999948065095168	WITHOUT_CLASSIFICATION	5.193490483340135E-6	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999874812017732	WITHOUT_CLASSIFICATION	1.2518798226794365E-5	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9810413649015971	DESIGN	0.018958635098402832	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999227206217284	WITHOUT_CLASSIFICATION	7.727937827156024E-5	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9997625177176448	WITHOUT_CLASSIFICATION	2.3748228235530162E-4	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999960827455071	WITHOUT_CLASSIFICATION	3.917254492846667E-6	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999818673888894	WITHOUT_CLASSIFICATION	1.8132611110619738E-5	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9996081438792673	WITHOUT_CLASSIFICATION	3.9185612073270844E-4	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9988031770507888	WITHOUT_CLASSIFICATION	0.001196822949211188	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999831549838658	WITHOUT_CLASSIFICATION	1.6845016134122554E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997945353868876	WITHOUT_CLASSIFICATION	2.0546461311252783E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999942042087119	WITHOUT_CLASSIFICATION	5.795791288063851E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999532646320227	WITHOUT_CLASSIFICATION	4.673536797732512E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999901720211179	WITHOUT_CLASSIFICATION	9.827978882104795E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999901720211179	WITHOUT_CLASSIFICATION	9.827978882104795E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9998627408286217	WITHOUT_CLASSIFICATION	1.3725917137837076E-4	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9998627408286217	WITHOUT_CLASSIFICATION	1.3725917137837076E-4	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999998090227689	WITHOUT_CLASSIFICATION	1.9097723127899605E-7	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999998090227689	WITHOUT_CLASSIFICATION	1.9097723127899605E-7	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999937322248531	WITHOUT_CLASSIFICATION	6.267775146937391E-6	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999987744156611	WITHOUT_CLASSIFICATION	1.2255843389101508E-5	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999927996750283	WITHOUT_CLASSIFICATION	7.200324971664356E-6	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999724524651712	WITHOUT_CLASSIFICATION	2.7547534828871344E-5	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999996322726247	WITHOUT_CLASSIFICATION	3.6772737530252886E-7	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999534936839525	WITHOUT_CLASSIFICATION	4.6506316047637956E-5	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999977849267354	WITHOUT_CLASSIFICATION	2.21507326463912E-6	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.9999932426917928	WITHOUT_CLASSIFICATION	6.757308207168713E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999748410206489	WITHOUT_CLASSIFICATION	2.515897935102764E-5	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999937322248531	WITHOUT_CLASSIFICATION	6.267775146937391E-6	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999987744156611	WITHOUT_CLASSIFICATION	1.2255843389101508E-5	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999927996750283	WITHOUT_CLASSIFICATION	7.200324971664356E-6	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999996322726247	WITHOUT_CLASSIFICATION	3.6772737530252886E-7	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999534936839525	WITHOUT_CLASSIFICATION	4.6506316047637956E-5	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999609491487496	WITHOUT_CLASSIFICATION	3.905085125050408E-5	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999865297359061	WITHOUT_CLASSIFICATION	1.3470264093968316E-5	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999394533409331	WITHOUT_CLASSIFICATION	6.054665906690008E-5	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999394533409331	WITHOUT_CLASSIFICATION	6.054665906690008E-5	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9973646231317709	WITHOUT_CLASSIFICATION	0.0026353768682291683	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999962907059839	WITHOUT_CLASSIFICATION	3.709294016101897E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999437456529666	WITHOUT_CLASSIFICATION	5.625434703338027E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998342644150804	WITHOUT_CLASSIFICATION	1.657355849196516E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998342644150804	WITHOUT_CLASSIFICATION	1.657355849196516E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999856924256209	WITHOUT_CLASSIFICATION	1.4307574379170738E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999195964008513	WITHOUT_CLASSIFICATION	8.04035991486873E-5	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9994476711822273	WITHOUT_CLASSIFICATION	5.523288177726578E-4	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999684352213217	WITHOUT_CLASSIFICATION	3.156477867837963E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999238845613534	WITHOUT_CLASSIFICATION	7.611543864668278E-5	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.5668626937093497	WITHOUT_CLASSIFICATION	0.4331373062906502	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999826828649026	WITHOUT_CLASSIFICATION	1.7317135097469226E-5	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9967577090322882	WITHOUT_CLASSIFICATION	0.0032422909677117485	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9997754831519913	WITHOUT_CLASSIFICATION	2.245168480086691E-4	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998095737597398	WITHOUT_CLASSIFICATION	1.9042624026023634E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999877795788811	WITHOUT_CLASSIFICATION	1.2220421119014067E-5	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999856924256209	WITHOUT_CLASSIFICATION	1.4307574379170738E-5	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999195964008513	WITHOUT_CLASSIFICATION	8.04035991486873E-5	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999684352213217	WITHOUT_CLASSIFICATION	3.156477867837963E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998572127422328	WITHOUT_CLASSIFICATION	1.4278725776713412E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999437456529666	WITHOUT_CLASSIFICATION	5.625434703338027E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999437456529666	WITHOUT_CLASSIFICATION	5.625434703338027E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999895587520361	WITHOUT_CLASSIFICATION	1.044124796390874E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999895587520361	WITHOUT_CLASSIFICATION	1.044124796390874E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999734377842409	WITHOUT_CLASSIFICATION	2.656221575923076E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999734377842409	WITHOUT_CLASSIFICATION	2.656221575923076E-5	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9997096495151255	WITHOUT_CLASSIFICATION	2.9035048487443497E-4	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.999983795534954	WITHOUT_CLASSIFICATION	1.6204465045933118E-5	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999349475509128	WITHOUT_CLASSIFICATION	6.505244908722833E-5	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999412366141385	WITHOUT_CLASSIFICATION	5.87633858615219E-5	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9896231061958445	WITHOUT_CLASSIFICATION	0.010376893804155492	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9998184124312767	WITHOUT_CLASSIFICATION	1.8158756872341082E-4	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998155289083426	WITHOUT_CLASSIFICATION	1.8447109165738363E-4	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9994073507754663	WITHOUT_CLASSIFICATION	5.926492245336321E-4	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999717135455075	WITHOUT_CLASSIFICATION	2.8286454492457893E-5	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999719514314941	WITHOUT_CLASSIFICATION	2.8048568505931777E-5	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9986356777004338	WITHOUT_CLASSIFICATION	0.0013643222995662235	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999951194495175	WITHOUT_CLASSIFICATION	4.88055048253498E-6	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999674916542526	WITHOUT_CLASSIFICATION	3.250834574738779E-5	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999933760473458	WITHOUT_CLASSIFICATION	6.623952654187416E-6	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999937145110523	WITHOUT_CLASSIFICATION	6.2854889475882085E-6	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.999805240721835	WITHOUT_CLASSIFICATION	1.9475927816500933E-4	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.999987519809363	WITHOUT_CLASSIFICATION	1.2480190636988442E-5	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.999950882338754	WITHOUT_CLASSIFICATION	4.911766124610332E-5	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999913904266303	WITHOUT_CLASSIFICATION	8.609573369639892E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999826828649026	WITHOUT_CLASSIFICATION	1.7317135097469226E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9997754831519913	WITHOUT_CLASSIFICATION	2.245168480086691E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999522232509742	WITHOUT_CLASSIFICATION	4.777674902574374E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999043261027021	WITHOUT_CLASSIFICATION	9.567389729791207E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999043261027021	WITHOUT_CLASSIFICATION	9.567389729791207E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998572127422328	WITHOUT_CLASSIFICATION	1.4278725776713412E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999437456529666	WITHOUT_CLASSIFICATION	5.625434703338027E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999895587520361	WITHOUT_CLASSIFICATION	1.044124796390874E-4	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999734377842409	WITHOUT_CLASSIFICATION	2.656221575923076E-5	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9938782546649118	WITHOUT_CLASSIFICATION	0.006121745335088201	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999324868453121	WITHOUT_CLASSIFICATION	6.751315468785438E-5	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.999952323715047	WITHOUT_CLASSIFICATION	4.767628495294539E-5	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.999378246705821	WITHOUT_CLASSIFICATION	6.217532941791181E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9991800783095862	WITHOUT_CLASSIFICATION	8.199216904137171E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9991800783095862	WITHOUT_CLASSIFICATION	8.199216904137171E-4	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999947198111372	WITHOUT_CLASSIFICATION	5.2801888628836895E-6	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999959748644304	WITHOUT_CLASSIFICATION	4.0251355696115345E-6	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999547178926746	WITHOUT_CLASSIFICATION	4.5282107325290485E-5	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999937356660644	WITHOUT_CLASSIFICATION	6.264333935603497E-6	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999477346525236	WITHOUT_CLASSIFICATION	5.226534747644942E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999477346525236	WITHOUT_CLASSIFICATION	5.226534747644942E-5	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9997621808227972	WITHOUT_CLASSIFICATION	2.37819177202771E-4	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999942132594434	WITHOUT_CLASSIFICATION	5.786740556564818E-6	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9989419468879736	WITHOUT_CLASSIFICATION	0.0010580531120263892	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9900848533749504	WITHOUT_CLASSIFICATION	0.009915146625049633	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999655730084791	WITHOUT_CLASSIFICATION	3.442699152092471E-5	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999358825587782	WITHOUT_CLASSIFICATION	6.411744122184409E-5	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999344225149073	WITHOUT_CLASSIFICATION	6.557748509268932E-5	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999878779714676	WITHOUT_CLASSIFICATION	1.212202853239745E-4	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999864469994004	WITHOUT_CLASSIFICATION	1.3553000599699014E-5	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.999995546031258	WITHOUT_CLASSIFICATION	4.453968742049025E-6	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.5734758435289583	WITHOUT_CLASSIFICATION	0.4265241564710418	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9994914053511564	WITHOUT_CLASSIFICATION	5.085946488435062E-4	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9996534603114318	WITHOUT_CLASSIFICATION	3.465396885682504E-4	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999994428896729	WITHOUT_CLASSIFICATION	5.571103270351545E-7	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9998885212231585	WITHOUT_CLASSIFICATION	1.1147877684141377E-4	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.999982232760013	WITHOUT_CLASSIFICATION	1.7767239987024154E-5	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9984125370762152	WITHOUT_CLASSIFICATION	0.0015874629237847219	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999888295497062	WITHOUT_CLASSIFICATION	1.117045029378892E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.999968383394323	WITHOUT_CLASSIFICATION	3.161660567694432E-5	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999635537450369	WITHOUT_CLASSIFICATION	3.644625496322724E-5	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9997240705471712	WITHOUT_CLASSIFICATION	2.7592945282880116E-4	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999891497458407	WITHOUT_CLASSIFICATION	1.0850254159186892E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999891497458407	WITHOUT_CLASSIFICATION	1.0850254159186892E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9989231954026607	WITHOUT_CLASSIFICATION	0.0010768045973392315	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9998244077688323	WITHOUT_CLASSIFICATION	1.7559223116774428E-4	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999956650660765	WITHOUT_CLASSIFICATION	4.33493392346791E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999956650660765	WITHOUT_CLASSIFICATION	4.33493392346791E-6	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9981921674497154	WITHOUT_CLASSIFICATION	0.00180783255028457	DESIGN
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9995722837059006	WITHOUT_CLASSIFICATION	4.277162940993919E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999471160858485	WITHOUT_CLASSIFICATION	5.2883914151470574E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999687107670401	WITHOUT_CLASSIFICATION	3.128923296002285E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999687107670401	WITHOUT_CLASSIFICATION	3.128923296002285E-5	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9990947369687202	WITHOUT_CLASSIFICATION	9.052630312797866E-4	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999944141633513	WITHOUT_CLASSIFICATION	5.585836648747807E-6	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999847542186625	WITHOUT_CLASSIFICATION	1.5245781337547514E-5	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999581131995319	WITHOUT_CLASSIFICATION	4.188680046803805E-5	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9982043141921412	WITHOUT_CLASSIFICATION	0.0017956858078588026	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.999654505613058	WITHOUT_CLASSIFICATION	3.4549438694195966E-4	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998688137657968	WITHOUT_CLASSIFICATION	1.3118623420326102E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999844205964662	WITHOUT_CLASSIFICATION	1.5579403533769504E-5	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.999925379890359	WITHOUT_CLASSIFICATION	7.462010964100583E-5	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9994857801651804	WITHOUT_CLASSIFICATION	5.142198348196649E-4	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999320854996467	WITHOUT_CLASSIFICATION	6.791450035331378E-5	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999058281530074	WITHOUT_CLASSIFICATION	9.417184699260426E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999697625597566	WITHOUT_CLASSIFICATION	3.023744024350677E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9996629208382644	WITHOUT_CLASSIFICATION	3.370791617355686E-4	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9997507788304111	WITHOUT_CLASSIFICATION	2.492211695888406E-4	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999947606789467	WITHOUT_CLASSIFICATION	5.239321053326157E-6	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999901584294636	WITHOUT_CLASSIFICATION	9.841570536450106E-6	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999389167068264	WITHOUT_CLASSIFICATION	6.10832931736061E-5	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9998709039447534	WITHOUT_CLASSIFICATION	1.2909605524652967E-4	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9996022294176043	WITHOUT_CLASSIFICATION	3.977705823956386E-4	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999153387764846	WITHOUT_CLASSIFICATION	8.466122351536855E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9998715216749877	WITHOUT_CLASSIFICATION	1.2847832501224036E-4	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999646270412028	WITHOUT_CLASSIFICATION	3.537295879715854E-5	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999737668857435	WITHOUT_CLASSIFICATION	2.6233114256589186E-5	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999823031116413	WITHOUT_CLASSIFICATION	1.7696888358692917E-5	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9958825712954419	WITHOUT_CLASSIFICATION	0.004117428704558196	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9992551453400816	WITHOUT_CLASSIFICATION	7.44854659918355E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999982698646566	WITHOUT_CLASSIFICATION	1.7301353434500243E-6	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999196967284345	WITHOUT_CLASSIFICATION	8.030327156547605E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999858481137501	WITHOUT_CLASSIFICATION	1.4151886249942862E-5	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999988482387443	WITHOUT_CLASSIFICATION	1.1517612556922326E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9996629208382644	WITHOUT_CLASSIFICATION	3.370791617355686E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999982698646566	WITHOUT_CLASSIFICATION	1.7301353434500243E-6	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999196967284345	WITHOUT_CLASSIFICATION	8.030327156547605E-5	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999988482387443	WITHOUT_CLASSIFICATION	1.1517612556922326E-5	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998756952596273	WITHOUT_CLASSIFICATION	1.243047403727996E-4	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999002407885659	WITHOUT_CLASSIFICATION	9.975921143413054E-5	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999138306007005	WITHOUT_CLASSIFICATION	8.616939929952164E-5	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999987812914566	WITHOUT_CLASSIFICATION	1.218708543356913E-6	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999996505183862	WITHOUT_CLASSIFICATION	3.4948161380630115E-6	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999977216101954	WITHOUT_CLASSIFICATION	2.2783898045602284E-6	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999711726656022	WITHOUT_CLASSIFICATION	2.8827334397749058E-5	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9994368997609385	WITHOUT_CLASSIFICATION	5.631002390615856E-4	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999735469565006	WITHOUT_CLASSIFICATION	2.645304349934228E-5	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9875441684372379	WITHOUT_CLASSIFICATION	0.012455831562762048	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9981850128934904	WITHOUT_CLASSIFICATION	0.001814987106509646	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9981850128934904	WITHOUT_CLASSIFICATION	0.001814987106509646	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.999976516971067	WITHOUT_CLASSIFICATION	2.348302893293236E-5	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999935130382374	WITHOUT_CLASSIFICATION	6.486961762677368E-6	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999150804085235	WITHOUT_CLASSIFICATION	8.491959147651695E-5	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999272497323913	WITHOUT_CLASSIFICATION	7.275026760874833E-5	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9996725787482186	WITHOUT_CLASSIFICATION	3.274212517813949E-4	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999641015478489	WITHOUT_CLASSIFICATION	3.589845215113982E-5	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9996418256451931	WITHOUT_CLASSIFICATION	3.5817435480695064E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9996531221305833	WITHOUT_CLASSIFICATION	3.468778694166874E-4	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999801011807917	WITHOUT_CLASSIFICATION	1.9898819208255348E-5	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9990855421365823	WITHOUT_CLASSIFICATION	9.144578634177361E-4	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999810692424422	WITHOUT_CLASSIFICATION	1.8930757557695817E-5	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999127681347155	WITHOUT_CLASSIFICATION	8.723186528443401E-5	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999749054626695	WITHOUT_CLASSIFICATION	2.5094537330480783E-5	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999960621764611	WITHOUT_CLASSIFICATION	3.937823538957525E-6	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999921734714912	WITHOUT_CLASSIFICATION	7.82652850888549E-6	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9990370346024653	WITHOUT_CLASSIFICATION	9.629653975345972E-4	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999792137547662	WITHOUT_CLASSIFICATION	2.078624523378153E-5	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999774070078864	WITHOUT_CLASSIFICATION	2.259299211356931E-5	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9999427865518546	WITHOUT_CLASSIFICATION	5.7213448145371035E-5	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9995929099033187	WITHOUT_CLASSIFICATION	4.070900966812644E-4	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9998994343789102	WITHOUT_CLASSIFICATION	1.0056562108974329E-4	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999598383697245	WITHOUT_CLASSIFICATION	4.0161630275490345E-5	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999832196934836	WITHOUT_CLASSIFICATION	1.6780306516330782E-5	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999865187300773	WITHOUT_CLASSIFICATION	1.3481269922677683E-5	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9998539347776483	WITHOUT_CLASSIFICATION	1.4606522235185136E-4	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999752252498104	WITHOUT_CLASSIFICATION	2.4774750189569763E-5	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9959441927143492	WITHOUT_CLASSIFICATION	0.004055807285650847	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999156934407862	WITHOUT_CLASSIFICATION	8.430655921373919E-5	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9999758930933839	WITHOUT_CLASSIFICATION	2.4106906616046752E-5	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999808805732113	WITHOUT_CLASSIFICATION	1.911942678862418E-5	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999817499719176	WITHOUT_CLASSIFICATION	1.825002808231598E-5	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999627145005022	WITHOUT_CLASSIFICATION	3.728549949781628E-5	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999618403954178	WITHOUT_CLASSIFICATION	3.8159604582197224E-5	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999076085254345	WITHOUT_CLASSIFICATION	9.239147456556515E-5	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9993114407512506	WITHOUT_CLASSIFICATION	6.88559248749472E-4	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9998348906154124	WITHOUT_CLASSIFICATION	1.651093845875366E-4	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999682401695728	WITHOUT_CLASSIFICATION	3.175983042727039E-5	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9968080098851227	WITHOUT_CLASSIFICATION	0.0031919901148772327	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9998586507803784	WITHOUT_CLASSIFICATION	1.4134921962168404E-4	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9996234397058752	WITHOUT_CLASSIFICATION	3.7656029412487985E-4	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9998991859369377	WITHOUT_CLASSIFICATION	1.008140630622223E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9823472211995888	WITHOUT_CLASSIFICATION	0.017652778800411193	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9999336539396837	WITHOUT_CLASSIFICATION	6.634606031626686E-5	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9996804817848887	WITHOUT_CLASSIFICATION	3.19518215111396E-4	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9998973757346332	WITHOUT_CLASSIFICATION	1.0262426536676148E-4	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999962927172551	WITHOUT_CLASSIFICATION	3.707282745011286E-6	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.996660674284403	WITHOUT_CLASSIFICATION	0.003339325715596984	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9998110147307361	WITHOUT_CLASSIFICATION	1.889852692640059E-4	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9994090401496258	WITHOUT_CLASSIFICATION	5.909598503742342E-4	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999194922272325	WITHOUT_CLASSIFICATION	8.050777276750853E-5	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999443387877501	WITHOUT_CLASSIFICATION	5.566121224981255E-5	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999551335720759	WITHOUT_CLASSIFICATION	4.4866427924024564E-5	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999757603990957	WITHOUT_CLASSIFICATION	2.423960090430675E-5	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9995308284170606	WITHOUT_CLASSIFICATION	4.691715829392603E-4	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9994632156853568	WITHOUT_CLASSIFICATION	5.367843146432374E-4	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9994728142197433	WITHOUT_CLASSIFICATION	5.271857802567038E-4	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.999989361709367	WITHOUT_CLASSIFICATION	1.063829063290229E-5	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998909456093008	WITHOUT_CLASSIFICATION	1.0905439069917114E-4	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999140684922831	WITHOUT_CLASSIFICATION	8.593150771686829E-5	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9982172787730972	WITHOUT_CLASSIFICATION	0.001782721226902833	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9982172787730972	WITHOUT_CLASSIFICATION	0.001782721226902833	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9996439467278752	WITHOUT_CLASSIFICATION	3.560532721249385E-4	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999700949222096	WITHOUT_CLASSIFICATION	2.990507779035582E-5	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9995506114317326	WITHOUT_CLASSIFICATION	4.493885682673278E-4	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9997339854789651	WITHOUT_CLASSIFICATION	2.660145210349055E-4	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999886416527719	WITHOUT_CLASSIFICATION	1.1358347228166417E-5	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.998033390504628	WITHOUT_CLASSIFICATION	0.0019666094953719308	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9997930199240755	WITHOUT_CLASSIFICATION	2.0698007592452649E-4	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9982145583918223	WITHOUT_CLASSIFICATION	0.001785441608177644	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999788436341841	WITHOUT_CLASSIFICATION	2.1156365815822325E-5	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9997304902860809	WITHOUT_CLASSIFICATION	2.6950971391915814E-4	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999710951876751	WITHOUT_CLASSIFICATION	2.8904812324891146E-5	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999029561797464	WITHOUT_CLASSIFICATION	9.70438202536105E-5	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9996470594499786	WITHOUT_CLASSIFICATION	3.529405500214566E-4	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9996352694123048	WITHOUT_CLASSIFICATION	3.647305876951172E-4	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999715004566895	WITHOUT_CLASSIFICATION	2.8499543310482564E-5	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999792182819669	WITHOUT_CLASSIFICATION	2.0781718033064267E-5	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999635810215024	WITHOUT_CLASSIFICATION	3.6418978497614866E-5	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999424427116229	WITHOUT_CLASSIFICATION	5.755728837703278E-5	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999367415729326	WITHOUT_CLASSIFICATION	6.32584270675325E-5	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9981243933592284	WITHOUT_CLASSIFICATION	0.0018756066407715519	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998473095391789	WITHOUT_CLASSIFICATION	1.5269046082109635E-4	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999124742173994	WITHOUT_CLASSIFICATION	8.752578260070669E-5	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9996295446356106	WITHOUT_CLASSIFICATION	3.7045536438935176E-4	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9738273889588083	WITHOUT_CLASSIFICATION	0.02617261104119171	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999669994251634	WITHOUT_CLASSIFICATION	3.300057483655701E-5	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9983652935936276	WITHOUT_CLASSIFICATION	0.0016347064063723365	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9957641523784655	WITHOUT_CLASSIFICATION	0.00423584762153449	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.999975718988304	WITHOUT_CLASSIFICATION	2.4281011696003717E-5	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999865030584124	WITHOUT_CLASSIFICATION	1.3496941587693019E-5	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.5367296112974048	WITHOUT_CLASSIFICATION	0.4632703887025952	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9998053766964257	WITHOUT_CLASSIFICATION	1.9462330357429965E-4	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999966296637794	WITHOUT_CLASSIFICATION	3.3703362206825945E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998871343437765	WITHOUT_CLASSIFICATION	1.1286565622346027E-4	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9991675028873072	WITHOUT_CLASSIFICATION	8.324971126928147E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998871343437765	WITHOUT_CLASSIFICATION	1.1286565622346027E-4	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999876376398257	WITHOUT_CLASSIFICATION	1.2362360174229977E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999934095165918	WITHOUT_CLASSIFICATION	6.590483408251276E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999934095165918	WITHOUT_CLASSIFICATION	6.590483408251276E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999934095165918	WITHOUT_CLASSIFICATION	6.590483408251276E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9998429030587821	WITHOUT_CLASSIFICATION	1.5709694121799226E-4	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9998429030587821	WITHOUT_CLASSIFICATION	1.5709694121799226E-4	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9975444585592419	WITHOUT_CLASSIFICATION	0.002455541440758161	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999906407138387	WITHOUT_CLASSIFICATION	9.359286161274479E-6	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9987328707111705	WITHOUT_CLASSIFICATION	0.001267129288829518	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9986658744239605	WITHOUT_CLASSIFICATION	0.0013341255760395512	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9998180299136673	WITHOUT_CLASSIFICATION	1.819700863327312E-4	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9982105648821404	WITHOUT_CLASSIFICATION	0.001789435117859468	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999393866044288	WITHOUT_CLASSIFICATION	6.0613395571050176E-5	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999770031580442	WITHOUT_CLASSIFICATION	2.2996841955798397E-5	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.993092218136762	WITHOUT_CLASSIFICATION	0.006907781863237966	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999944578381604	WITHOUT_CLASSIFICATION	5.5421618395889685E-6	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999438114861272	WITHOUT_CLASSIFICATION	5.6188513872824506E-5	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9998673901753092	WITHOUT_CLASSIFICATION	1.326098246906882E-4	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9998714677068677	WITHOUT_CLASSIFICATION	1.2853229313223815E-4	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999926009757516	WITHOUT_CLASSIFICATION	7.399024248374824E-6	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999021274332466	WITHOUT_CLASSIFICATION	9.787256675340537E-5	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999614573597756	WITHOUT_CLASSIFICATION	3.854264022432904E-5	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.999989711852011	WITHOUT_CLASSIFICATION	1.0288147988857975E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999890873830415	WITHOUT_CLASSIFICATION	1.091261695845143E-5	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999890873830415	WITHOUT_CLASSIFICATION	1.091261695845143E-5	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999892301872348	WITHOUT_CLASSIFICATION	1.0769812765125921E-5	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999921737519686	WITHOUT_CLASSIFICATION	7.826248031463418E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999921737519686	WITHOUT_CLASSIFICATION	7.826248031463418E-6	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9996567096657739	WITHOUT_CLASSIFICATION	3.432903342260553E-4	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999928507781913	WITHOUT_CLASSIFICATION	7.149221808640641E-6	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9998439551172064	WITHOUT_CLASSIFICATION	1.5604488279366262E-4	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999828988335576	WITHOUT_CLASSIFICATION	1.7101166442422058E-5	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999892949312809	WITHOUT_CLASSIFICATION	1.0705068719158253E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.999993480374329	WITHOUT_CLASSIFICATION	6.5196256709875536E-6	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999941011913199	WITHOUT_CLASSIFICATION	5.8988086800349E-6	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9998231209310502	WITHOUT_CLASSIFICATION	1.7687906894971403E-4	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999757359258676	WITHOUT_CLASSIFICATION	2.4264074132431015E-5	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999583561125158	WITHOUT_CLASSIFICATION	4.16438874841638E-5	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9998851258174175	WITHOUT_CLASSIFICATION	1.1487418258245061E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9998296622688104	WITHOUT_CLASSIFICATION	1.7033773118960025E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999146688169966	WITHOUT_CLASSIFICATION	8.533118300333498E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999414396859287	WITHOUT_CLASSIFICATION	5.856031407133068E-5	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999770031580442	WITHOUT_CLASSIFICATION	2.2996841955798397E-5	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9992554340771693	WITHOUT_CLASSIFICATION	7.445659228306664E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999486530382099	WITHOUT_CLASSIFICATION	5.134696179001562E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999941491565867	WITHOUT_CLASSIFICATION	5.850843413322448E-6	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999941491565867	WITHOUT_CLASSIFICATION	5.850843413322448E-6	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9972678548909168	WITHOUT_CLASSIFICATION	0.002732145109083112	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9996989617732193	WITHOUT_CLASSIFICATION	3.010382267806796E-4	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999703842995467	WITHOUT_CLASSIFICATION	2.9615700453452402E-5	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999935760795525	WITHOUT_CLASSIFICATION	6.4239204474208845E-6	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9998411804156113	WITHOUT_CLASSIFICATION	1.5881958438875696E-4	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999466447839598	WITHOUT_CLASSIFICATION	5.3355216040281435E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9995729401428941	WITHOUT_CLASSIFICATION	4.2705985710588207E-4	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999173102302082	WITHOUT_CLASSIFICATION	8.268976979168633E-5	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9969749748898273	WITHOUT_CLASSIFICATION	0.003025025110172719	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9997726142754975	WITHOUT_CLASSIFICATION	2.273857245026223E-4	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999818249035997	WITHOUT_CLASSIFICATION	1.8175096400375412E-5	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999216622251964	WITHOUT_CLASSIFICATION	7.83377748036223E-5	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999112136023316	WITHOUT_CLASSIFICATION	8.878639766850659E-5	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999968161142407	WITHOUT_CLASSIFICATION	3.1838857592072946E-6	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9995755496355151	WITHOUT_CLASSIFICATION	4.244503644848993E-4	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9996349453224426	WITHOUT_CLASSIFICATION	3.650546775574987E-4	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9985958695920353	WITHOUT_CLASSIFICATION	0.0014041304079647323	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9997989914452434	WITHOUT_CLASSIFICATION	2.0100855475669598E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.99971163109335	WITHOUT_CLASSIFICATION	2.883689066499496E-4	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.99996646808603	WITHOUT_CLASSIFICATION	3.3531913970004586E-5	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9997694925668604	WITHOUT_CLASSIFICATION	2.3050743313952657E-4	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9997237433347202	WITHOUT_CLASSIFICATION	2.762566652797024E-4	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999758571567611	WITHOUT_CLASSIFICATION	2.4142843238966846E-5	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9789506049863186	WITHOUT_CLASSIFICATION	0.02104939501368137	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9983378396202903	WITHOUT_CLASSIFICATION	0.0016621603797096357	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9998876903055822	WITHOUT_CLASSIFICATION	1.1230969441776359E-4	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999227023215796	WITHOUT_CLASSIFICATION	7.729767842035837E-5	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999779946301962	WITHOUT_CLASSIFICATION	2.2005369803865017E-5	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999025452109476	WITHOUT_CLASSIFICATION	9.745478905246985E-5	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.999984558814551	WITHOUT_CLASSIFICATION	1.5441185448984718E-5	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9925267768870454	WITHOUT_CLASSIFICATION	0.007473223112954687	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9998224687446998	WITHOUT_CLASSIFICATION	1.7753125530006535E-4	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9983745022246249	WITHOUT_CLASSIFICATION	0.0016254977753751058	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9971695714544203	WITHOUT_CLASSIFICATION	0.002830428545579697	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999039729672429	WITHOUT_CLASSIFICATION	9.602703275714707E-5	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9998960803920729	WITHOUT_CLASSIFICATION	1.039196079271647E-4	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999779946301962	WITHOUT_CLASSIFICATION	2.2005369803865017E-5	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999561576608477	WITHOUT_CLASSIFICATION	4.384233915232591E-5	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999039729672429	WITHOUT_CLASSIFICATION	9.602703275714707E-5	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9993815753781016	WITHOUT_CLASSIFICATION	6.184246218985465E-4	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999920395071412	WITHOUT_CLASSIFICATION	7.960492858758215E-6	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999983471248896	WITHOUT_CLASSIFICATION	1.652875110418172E-6	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999621527640037	WITHOUT_CLASSIFICATION	3.784723599640183E-5	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9991813848685497	WITHOUT_CLASSIFICATION	8.186151314503636E-4	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9987523076205652	WITHOUT_CLASSIFICATION	0.0012476923794347403	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9987523076205652	WITHOUT_CLASSIFICATION	0.0012476923794347403	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999375673792278	WITHOUT_CLASSIFICATION	6.2432620772165E-5	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999687490119811	WITHOUT_CLASSIFICATION	3.125098801897363E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999684103162735	WITHOUT_CLASSIFICATION	3.1589683726605306E-5	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999684103162735	WITHOUT_CLASSIFICATION	3.1589683726605306E-5	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999911433582476	WITHOUT_CLASSIFICATION	8.856641752431156E-6	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9991162195808063	WITHOUT_CLASSIFICATION	8.837804191936028E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9985123101522371	WITHOUT_CLASSIFICATION	0.0014876898477629336	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9985123101522371	WITHOUT_CLASSIFICATION	0.0014876898477629336	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999692699997013	WITHOUT_CLASSIFICATION	3.073000029865296E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999878693880572	WITHOUT_CLASSIFICATION	1.213061194279165E-5	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999804425785984	WITHOUT_CLASSIFICATION	1.9557421401640395E-5	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9998209643522971	WITHOUT_CLASSIFICATION	1.79035647702998E-4	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9884268249588571	WITHOUT_CLASSIFICATION	0.011573175041142717	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9998338204420385	WITHOUT_CLASSIFICATION	1.6617955796159378E-4	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999978233575294	WITHOUT_CLASSIFICATION	2.1766424705593595E-6	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999527726382795	WITHOUT_CLASSIFICATION	4.722736172050611E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999335033687372	WITHOUT_CLASSIFICATION	6.649663126277086E-5	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999621973031453	WITHOUT_CLASSIFICATION	3.7802696854736745E-5	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9999533418292706	WITHOUT_CLASSIFICATION	4.665817072929055E-5	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9998552412675735	WITHOUT_CLASSIFICATION	1.4475873242639946E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999862481452352	WITHOUT_CLASSIFICATION	1.3751854764913776E-5	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9998794165592526	WITHOUT_CLASSIFICATION	1.2058344074742206E-4	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999778938232132	WITHOUT_CLASSIFICATION	2.210617678679979E-5	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999654017660169	WITHOUT_CLASSIFICATION	3.459823398303183E-5	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999996120377791	WITHOUT_CLASSIFICATION	3.8796222090541505E-6	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9998845239807899	WITHOUT_CLASSIFICATION	1.1547601921016044E-4	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999674206299684	WITHOUT_CLASSIFICATION	3.2579370031768574E-5	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999901044001761	WITHOUT_CLASSIFICATION	9.895599823860141E-6	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999044477574187	WITHOUT_CLASSIFICATION	9.555224258121413E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999976933167076	WITHOUT_CLASSIFICATION	2.306683292399881E-6	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.999952766550509	WITHOUT_CLASSIFICATION	4.723344949095985E-5	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.999866988271766	WITHOUT_CLASSIFICATION	1.330117282341201E-4	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999529775688306	WITHOUT_CLASSIFICATION	4.702243116936483E-5	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999316149929974	WITHOUT_CLASSIFICATION	6.838500700262572E-5	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9998824111674911	WITHOUT_CLASSIFICATION	1.175888325088721E-4	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999846140551701	WITHOUT_CLASSIFICATION	1.5385944829841355E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9996564556792674	WITHOUT_CLASSIFICATION	3.4354432073264177E-4	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9996564556792674	WITHOUT_CLASSIFICATION	3.4354432073264177E-4	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9961575239297963	WITHOUT_CLASSIFICATION	0.0038424760702037894	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999955814298043	WITHOUT_CLASSIFICATION	4.418570195773736E-6	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999884526115633	WITHOUT_CLASSIFICATION	1.1547388436545857E-5	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.999946480276084	WITHOUT_CLASSIFICATION	5.3519723916037745E-5	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9994923125406303	WITHOUT_CLASSIFICATION	5.07687459369689E-4	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9999334911886671	WITHOUT_CLASSIFICATION	6.650881133288263E-5	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9998605075419008	WITHOUT_CLASSIFICATION	1.3949245809928833E-4	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999857230689515	WITHOUT_CLASSIFICATION	1.4276931048598253E-5	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9929119328902996	WITHOUT_CLASSIFICATION	0.0070880671097003755	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999966025864105	WITHOUT_CLASSIFICATION	3.3974135894727963E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999985017530258	WITHOUT_CLASSIFICATION	1.4982469741022164E-6	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.999908150993082	WITHOUT_CLASSIFICATION	9.184900691811832E-5	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9987575146064793	WITHOUT_CLASSIFICATION	0.0012424853935205607	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999585902162841	WITHOUT_CLASSIFICATION	4.140978371597709E-5	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9945602025558692	WITHOUT_CLASSIFICATION	0.0054397974441307995	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.992345733513689	WITHOUT_CLASSIFICATION	0.007654266486310995	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9998851782435138	WITHOUT_CLASSIFICATION	1.1482175648627011E-4	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9985869571495056	WITHOUT_CLASSIFICATION	0.00141304285049433	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.999298269746664	WITHOUT_CLASSIFICATION	7.017302533359355E-4	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999535792207792	WITHOUT_CLASSIFICATION	4.6420779220896486E-5	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9971676227132553	WITHOUT_CLASSIFICATION	0.002832377286744544	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9995757695162462	WITHOUT_CLASSIFICATION	4.242304837537414E-4	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999490167953541	WITHOUT_CLASSIFICATION	5.098320464581871E-5	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999941785009111	WITHOUT_CLASSIFICATION	5.821499088970126E-6	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999981968736964	WITHOUT_CLASSIFICATION	1.803126303544913E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9813657008798756	WITHOUT_CLASSIFICATION	0.018634299120124334	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.999853561600148	WITHOUT_CLASSIFICATION	1.4643839985207716E-4	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9998800785212253	WITHOUT_CLASSIFICATION	1.1992147877465234E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999350476960556	WITHOUT_CLASSIFICATION	6.495230394446489E-5	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999229836139037	WITHOUT_CLASSIFICATION	7.701638609625692E-5	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9998873064199508	WITHOUT_CLASSIFICATION	1.1269358004915548E-4	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.999855562872263	WITHOUT_CLASSIFICATION	1.4443712773707987E-4	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.999920026109728	WITHOUT_CLASSIFICATION	7.997389027204748E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999401389862532	WITHOUT_CLASSIFICATION	5.9861013746753744E-5	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999725875239495	WITHOUT_CLASSIFICATION	2.7412476050483082E-5	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9998269838145909	WITHOUT_CLASSIFICATION	1.7301618540908794E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999574265905553	WITHOUT_CLASSIFICATION	4.2573409444679395E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.987333636095532	WITHOUT_CLASSIFICATION	0.012666363904467973	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999986289762864	WITHOUT_CLASSIFICATION	1.3710237135350818E-6	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999876495144332	WITHOUT_CLASSIFICATION	1.235048556690833E-5	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999846206748547	WITHOUT_CLASSIFICATION	1.5379325145239606E-5	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999147654536149	WITHOUT_CLASSIFICATION	8.523454638511744E-5	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999143010105057	WITHOUT_CLASSIFICATION	8.569898949433124E-5	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999143010105057	WITHOUT_CLASSIFICATION	8.569898949433124E-5	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999538670824213	WITHOUT_CLASSIFICATION	4.6132917578620376E-5	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999940341603817	WITHOUT_CLASSIFICATION	5.965839618307283E-6	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999978062801117	WITHOUT_CLASSIFICATION	2.193719888352502E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999641203172493	WITHOUT_CLASSIFICATION	3.587968275066E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997945353868876	WITHOUT_CLASSIFICATION	2.0546461311252783E-4	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999942042087119	WITHOUT_CLASSIFICATION	5.795791288063851E-6	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9994660398657321	WITHOUT_CLASSIFICATION	5.339601342678563E-4	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999920707987356	WITHOUT_CLASSIFICATION	7.929201264370489E-6	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999920084906148	WITHOUT_CLASSIFICATION	7.991509385250692E-6	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9998807675311766	WITHOUT_CLASSIFICATION	1.1923246882350858E-4	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999290001197665	WITHOUT_CLASSIFICATION	7.099988023349197E-5	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999716590472701	WITHOUT_CLASSIFICATION	2.834095272977777E-5	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999459596962144	WITHOUT_CLASSIFICATION	5.4040303785638556E-5	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9997509706903207	WITHOUT_CLASSIFICATION	2.4902930967926645E-4	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999399400618476	WITHOUT_CLASSIFICATION	6.0059938152464685E-5	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999896476844902	WITHOUT_CLASSIFICATION	1.0352315509921896E-5	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999817845326515	WITHOUT_CLASSIFICATION	1.8215467348399784E-5	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999160233895266	WITHOUT_CLASSIFICATION	8.397661047350761E-5	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998429647202177	WITHOUT_CLASSIFICATION	1.5703527978233955E-4	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999625769116386	WITHOUT_CLASSIFICATION	3.7423088361322454E-5	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999396001418231	WITHOUT_CLASSIFICATION	6.039985817691406E-5	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999206715888104	WITHOUT_CLASSIFICATION	7.932841118960657E-5	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999621799579064	WITHOUT_CLASSIFICATION	3.7820042093547486E-5	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999149673906296	WITHOUT_CLASSIFICATION	8.503260937039828E-5	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999925492921367	WITHOUT_CLASSIFICATION	7.450707863275791E-6	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999003600767707	WITHOUT_CLASSIFICATION	9.963992322923507E-5	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999640241861306	WITHOUT_CLASSIFICATION	3.597581386940788E-5	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999798369550222	WITHOUT_CLASSIFICATION	2.016304497768555E-5	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999919436432352	WITHOUT_CLASSIFICATION	8.056356764935274E-6	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999263452393676	WITHOUT_CLASSIFICATION	7.365476063240019E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999019671631256	WITHOUT_CLASSIFICATION	9.803283687439712E-5	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.999984091331259	WITHOUT_CLASSIFICATION	1.590866874098016E-5	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999888943176742	WITHOUT_CLASSIFICATION	1.1105682325736098E-5	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999988027892799	WITHOUT_CLASSIFICATION	1.197210720189187E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.987333636095532	WITHOUT_CLASSIFICATION	0.012666363904467973	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999714007041502	WITHOUT_CLASSIFICATION	2.859929584966956E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999514094383999	WITHOUT_CLASSIFICATION	4.8590561600087094E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999514094383999	WITHOUT_CLASSIFICATION	4.8590561600087094E-5	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999953557517477	WITHOUT_CLASSIFICATION	4.6442482522911435E-6	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999156751194354	WITHOUT_CLASSIFICATION	8.432488056459292E-5	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9998789865948773	WITHOUT_CLASSIFICATION	1.210134051228021E-4	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.999965668282991	WITHOUT_CLASSIFICATION	3.4331717008835335E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999935428751691	WITHOUT_CLASSIFICATION	6.45712483094343E-6	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999973061352903	WITHOUT_CLASSIFICATION	2.6938647097036095E-6	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999985298376246	WITHOUT_CLASSIFICATION	1.4701623753557266E-6	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999947214941939	WITHOUT_CLASSIFICATION	5.278505806069303E-6	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999968709851836	WITHOUT_CLASSIFICATION	3.1290148163279597E-6	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999987173920827	WITHOUT_CLASSIFICATION	1.2826079173211682E-6	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999938688398419	WITHOUT_CLASSIFICATION	6.131160158115298E-6	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999920638483096	WITHOUT_CLASSIFICATION	7.936151690403423E-6	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.999989081148312	WITHOUT_CLASSIFICATION	1.091885168809168E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999491533056656	WITHOUT_CLASSIFICATION	5.0846694334434194E-5	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999960137145413	WITHOUT_CLASSIFICATION	3.986285458792545E-6	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9972822128288379	WITHOUT_CLASSIFICATION	0.0027177871711620664	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999943149337723	WITHOUT_CLASSIFICATION	5.6850662277110405E-6	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.99999583546969	WITHOUT_CLASSIFICATION	4.164530309996192E-6	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999972066237582	WITHOUT_CLASSIFICATION	2.793376241716504E-6	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999988549732155	WITHOUT_CLASSIFICATION	1.145026784591146E-6	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999927609199963	WITHOUT_CLASSIFICATION	7.239080003587011E-6	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999852882872975	WITHOUT_CLASSIFICATION	1.4711712702466029E-5	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999987805254258	WITHOUT_CLASSIFICATION	1.2194745742022696E-6	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9995986725564743	WITHOUT_CLASSIFICATION	4.013274435257918E-4	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999959104466671	WITHOUT_CLASSIFICATION	4.089553332815826E-6	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999954539553749	WITHOUT_CLASSIFICATION	4.546044625164004E-6	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999983831129211	WITHOUT_CLASSIFICATION	1.6168870788858009E-6	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9997864986965036	WITHOUT_CLASSIFICATION	2.1350130349634755E-4	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999842051739383	WITHOUT_CLASSIFICATION	1.5794826061837228E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998682374651091	WITHOUT_CLASSIFICATION	1.317625348908386E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9998148886384548	WITHOUT_CLASSIFICATION	1.851113615451434E-4	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999425591522729	WITHOUT_CLASSIFICATION	5.7440847726981195E-5	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999532198716014	WITHOUT_CLASSIFICATION	4.678012839863771E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999684240299086	WITHOUT_CLASSIFICATION	3.157597009143629E-5	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999794929485727	WITHOUT_CLASSIFICATION	2.0507051427327144E-5	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999890659065559	WITHOUT_CLASSIFICATION	1.0934093444164657E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996983975918015	WITHOUT_CLASSIFICATION	3.016024081986028E-4	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999954539553749	WITHOUT_CLASSIFICATION	4.546044625164004E-6	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999983831129211	WITHOUT_CLASSIFICATION	1.6168870788858009E-6	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9997864986965036	WITHOUT_CLASSIFICATION	2.1350130349634755E-4	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998682374651091	WITHOUT_CLASSIFICATION	1.317625348908386E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999888728904348	WITHOUT_CLASSIFICATION	1.1127109565250785E-5	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999903693192908	WITHOUT_CLASSIFICATION	9.63068070921879E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999556106260968	WITHOUT_CLASSIFICATION	4.438937390314144E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9998027413250575	WITHOUT_CLASSIFICATION	1.9725867494251728E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9997174172835848	WITHOUT_CLASSIFICATION	2.8258271641528547E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999637914206181	WITHOUT_CLASSIFICATION	3.620857938196212E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9997617049518671	WITHOUT_CLASSIFICATION	2.3829504813287103E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.999884095303659	WITHOUT_CLASSIFICATION	1.1590469634105381E-4	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999679105286211	WITHOUT_CLASSIFICATION	3.208947137881979E-5	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999788791966511	WITHOUT_CLASSIFICATION	2.112080334888551E-5	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999502902535504	WITHOUT_CLASSIFICATION	4.970974644968281E-5	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999506140179388	WITHOUT_CLASSIFICATION	4.938598206111833E-5	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999924785576465	WITHOUT_CLASSIFICATION	7.521442353437327E-6	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999941005780019	WITHOUT_CLASSIFICATION	5.899421998129721E-6	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.999981019696006	WITHOUT_CLASSIFICATION	1.8980303994039334E-5	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999733995961265	WITHOUT_CLASSIFICATION	2.660040387352759E-5	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999409978799075	WITHOUT_CLASSIFICATION	5.900212009239965E-5	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9979393304588199	WITHOUT_CLASSIFICATION	0.002060669541180215	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999724433432935	WITHOUT_CLASSIFICATION	2.7556656706469594E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996983975918015	WITHOUT_CLASSIFICATION	3.016024081986028E-4	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999903693192908	WITHOUT_CLASSIFICATION	9.63068070921879E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999556106260968	WITHOUT_CLASSIFICATION	4.438937390314144E-5	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9997174172835848	WITHOUT_CLASSIFICATION	2.8258271641528547E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999637914206181	WITHOUT_CLASSIFICATION	3.620857938196212E-5	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9997617049518671	WITHOUT_CLASSIFICATION	2.3829504813287103E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.999884095303659	WITHOUT_CLASSIFICATION	1.1590469634105381E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999744511268726	WITHOUT_CLASSIFICATION	2.5548873127427215E-5	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9990904296666653	WITHOUT_CLASSIFICATION	9.09570333334753E-4	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999959361356933	WITHOUT_CLASSIFICATION	4.063864306731471E-6	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999974782707745	WITHOUT_CLASSIFICATION	2.521729225678496E-6	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.99991982379698	WITHOUT_CLASSIFICATION	8.017620301999785E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.99991982379698	WITHOUT_CLASSIFICATION	8.017620301999785E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999777147673439	WITHOUT_CLASSIFICATION	2.228523265611491E-5	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9990158149516263	WITHOUT_CLASSIFICATION	9.84185048373706E-4	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9998537193750712	WITHOUT_CLASSIFICATION	1.462806249288959E-4	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999854870720731	WITHOUT_CLASSIFICATION	1.4512927926924817E-5	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999181106273676	WITHOUT_CLASSIFICATION	8.18893726323835E-5	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999912456989325	WITHOUT_CLASSIFICATION	8.754301067443065E-6	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999508811211993	WITHOUT_CLASSIFICATION	4.9118878800755676E-5	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.999876941423057	WITHOUT_CLASSIFICATION	1.2305857694299436E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999983847998168	WITHOUT_CLASSIFICATION	1.6152001831782851E-6	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999809318446049	WITHOUT_CLASSIFICATION	1.906815539504163E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999856851657679	WITHOUT_CLASSIFICATION	1.4314834232029773E-5	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9998726146785102	WITHOUT_CLASSIFICATION	1.273853214897464E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999840482107946	WITHOUT_CLASSIFICATION	1.595178920551387E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999826258097387	WITHOUT_CLASSIFICATION	1.7374190261239777E-5	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999356980465578	WITHOUT_CLASSIFICATION	6.43019534421876E-5	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9998339496711198	WITHOUT_CLASSIFICATION	1.6605032888008888E-4	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999559428378183	WITHOUT_CLASSIFICATION	4.405716218166859E-5	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999993654977419	WITHOUT_CLASSIFICATION	6.345022581134927E-7	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999923769977084	WITHOUT_CLASSIFICATION	7.623002291678025E-6	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9996670904021043	WITHOUT_CLASSIFICATION	3.32909597895735E-4	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.6800556591660656	WITHOUT_CLASSIFICATION	0.3199443408339344	DESIGN
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9996804842025198	WITHOUT_CLASSIFICATION	3.1951579748028497E-4	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.999823842558755	WITHOUT_CLASSIFICATION	1.7615744124505558E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8871384961698217	WITHOUT_CLASSIFICATION	0.11286150383017843	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999828320711246	WITHOUT_CLASSIFICATION	1.7167928875325347E-5	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999845264825674	WITHOUT_CLASSIFICATION	1.5473517432516514E-5	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999372864210329	WITHOUT_CLASSIFICATION	6.271357896721699E-5	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999728626083528	WITHOUT_CLASSIFICATION	2.713739164709933E-5	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999856449950582	WITHOUT_CLASSIFICATION	1.4355004941868177E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999828320711246	WITHOUT_CLASSIFICATION	1.7167928875325347E-5	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999845264825674	WITHOUT_CLASSIFICATION	1.5473517432516514E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999826258097387	WITHOUT_CLASSIFICATION	1.7374190261239777E-5	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999800510184484	WITHOUT_CLASSIFICATION	1.9948981551571832E-5	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999492460743996	WITHOUT_CLASSIFICATION	5.075392560035158E-5	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999544193567544	WITHOUT_CLASSIFICATION	4.5580643245540675E-5	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.999742097111841	WITHOUT_CLASSIFICATION	2.579028881590064E-4	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.999585456539797	WITHOUT_CLASSIFICATION	4.145434602030765E-4	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999960516572113	WITHOUT_CLASSIFICATION	3.948342788733849E-6	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9965619836889732	WITHOUT_CLASSIFICATION	0.003438016311026904	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999851625398491	WITHOUT_CLASSIFICATION	1.483746015085882E-5	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9997724718442594	WITHOUT_CLASSIFICATION	2.275281557404598E-4	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9997230159304458	WITHOUT_CLASSIFICATION	2.76984069554153E-4	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999971010599289	WITHOUT_CLASSIFICATION	2.8989400710244285E-6	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999953335968235	WITHOUT_CLASSIFICATION	4.6664031764780565E-6	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999973739005897	WITHOUT_CLASSIFICATION	2.6260994102733273E-6	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999991858601418	WITHOUT_CLASSIFICATION	8.141398581476805E-7	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999152026474096	WITHOUT_CLASSIFICATION	8.479735259042522E-5	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999996957376336	WITHOUT_CLASSIFICATION	3.0426236637060344E-7	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.999995502573826	WITHOUT_CLASSIFICATION	4.497426174047563E-6	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9998125950259755	WITHOUT_CLASSIFICATION	1.8740497402449467E-4	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999996308722607	WITHOUT_CLASSIFICATION	3.69127739219824E-7	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9997220129341967	WITHOUT_CLASSIFICATION	2.77987065803339E-4	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999967116625332	WITHOUT_CLASSIFICATION	3.288337466677284E-6	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9998848489104672	WITHOUT_CLASSIFICATION	1.1515108953279945E-4	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999919163236239	WITHOUT_CLASSIFICATION	8.083676376069897E-6	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9996966552930959	WITHOUT_CLASSIFICATION	3.033447069040535E-4	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999988955527205	WITHOUT_CLASSIFICATION	1.104447279544876E-6	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999988958277388	WITHOUT_CLASSIFICATION	1.1041722611639206E-6	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9981336631782496	WITHOUT_CLASSIFICATION	0.0018663368217503484	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9973066579514525	WITHOUT_CLASSIFICATION	0.0026933420485475484	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9991900525418276	WITHOUT_CLASSIFICATION	8.099474581724813E-4	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999219598781786	WITHOUT_CLASSIFICATION	7.804012182151234E-5	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999718537395125	WITHOUT_CLASSIFICATION	2.8146260487533054E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.999987383049398	WITHOUT_CLASSIFICATION	1.2616950601869685E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.999987383049398	WITHOUT_CLASSIFICATION	1.2616950601869685E-5	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999840482107946	WITHOUT_CLASSIFICATION	1.595178920551387E-5	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.999994446916063	WITHOUT_CLASSIFICATION	5.5530839369367486E-6	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9995385534747105	WITHOUT_CLASSIFICATION	4.6144652528943295E-4	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9998976869424031	WITHOUT_CLASSIFICATION	1.0231305759685229E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999241849165443	WITHOUT_CLASSIFICATION	7.581508345569617E-4	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999241849165443	WITHOUT_CLASSIFICATION	7.581508345569617E-4	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999977612162526	WITHOUT_CLASSIFICATION	2.2387837473054956E-6	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9998602149153789	WITHOUT_CLASSIFICATION	1.397850846211735E-4	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9994323910015446	WITHOUT_CLASSIFICATION	5.676089984554918E-4	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.999966410003367	WITHOUT_CLASSIFICATION	3.358999663314651E-5	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9992333463360749	WITHOUT_CLASSIFICATION	7.66653663925101E-4	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9925078312588452	WITHOUT_CLASSIFICATION	0.007492168741154749	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999354614249594	WITHOUT_CLASSIFICATION	6.453857504059186E-4	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999687464268581	WITHOUT_CLASSIFICATION	3.125357314186989E-5	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9946395889926738	WITHOUT_CLASSIFICATION	0.005360411007326221	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999814056146041	WITHOUT_CLASSIFICATION	1.859438539593003E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999694538040906	WITHOUT_CLASSIFICATION	3.0546195909341506E-5	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999440662470702	WITHOUT_CLASSIFICATION	5.593375292977681E-5	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999323438436739	WITHOUT_CLASSIFICATION	6.765615632606988E-5	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999551638407846	WITHOUT_CLASSIFICATION	4.4836159215329176E-5	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9989366591037321	WITHOUT_CLASSIFICATION	0.0010633408962678872	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9989887964768827	WITHOUT_CLASSIFICATION	0.0010112035231173927	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999971363249026	WITHOUT_CLASSIFICATION	2.863675097349543E-6	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999971363249026	WITHOUT_CLASSIFICATION	2.863675097349543E-6	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999996803742629	WITHOUT_CLASSIFICATION	3.196257370998629E-6	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999996803742629	WITHOUT_CLASSIFICATION	3.196257370998629E-6	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.999945612646575	WITHOUT_CLASSIFICATION	5.438735342492532E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999730218821425	WITHOUT_CLASSIFICATION	2.69781178574302E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999818844358295	WITHOUT_CLASSIFICATION	1.811556417045981E-5	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999930512863235	WITHOUT_CLASSIFICATION	6.948713676552828E-6	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999829535079818	WITHOUT_CLASSIFICATION	1.7046492018189645E-4	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9997955847705997	WITHOUT_CLASSIFICATION	2.0441522940034835E-4	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999920934175603	WITHOUT_CLASSIFICATION	7.906582439694151E-6	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999440662470702	WITHOUT_CLASSIFICATION	5.593375292977681E-5	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999323438436739	WITHOUT_CLASSIFICATION	6.765615632606988E-5	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9989366591037321	WITHOUT_CLASSIFICATION	0.0010633408962678872	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999846760809389	WITHOUT_CLASSIFICATION	1.532391906107723E-5	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9995870947343454	WITHOUT_CLASSIFICATION	4.129052656546822E-4	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999925699750775	WITHOUT_CLASSIFICATION	7.430024922552008E-6	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9989862190265901	WITHOUT_CLASSIFICATION	0.0010137809734097928	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999959013988668	WITHOUT_CLASSIFICATION	4.098601133189203E-6	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9993528054796902	WITHOUT_CLASSIFICATION	6.471945203097991E-4	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999944833397905	WITHOUT_CLASSIFICATION	5.516660209590833E-6	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999897628527672	WITHOUT_CLASSIFICATION	1.0237147232831425E-5	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999994799927633	WITHOUT_CLASSIFICATION	5.200072367123271E-7	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999881045565926	WITHOUT_CLASSIFICATION	1.1895443407473121E-5	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9998601295309472	WITHOUT_CLASSIFICATION	1.3987046905288405E-4	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999708880109932	WITHOUT_CLASSIFICATION	2.9111989006821226E-5	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999637602693348	WITHOUT_CLASSIFICATION	3.623973066533752E-5	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999955669904954	WITHOUT_CLASSIFICATION	4.433009504539714E-6	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999831038887593	WITHOUT_CLASSIFICATION	1.6896111240666735E-5	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999958785521426	WITHOUT_CLASSIFICATION	4.1214478574192046E-6	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999733471418607	WITHOUT_CLASSIFICATION	2.6652858139349685E-5	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999914342647545	WITHOUT_CLASSIFICATION	8.56573524556884E-6	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999914696532339	WITHOUT_CLASSIFICATION	8.530346765964748E-6	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999032282452406	WITHOUT_CLASSIFICATION	9.677175475935769E-5	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999992828668488	WITHOUT_CLASSIFICATION	7.17133151213744E-7	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999970662035682	WITHOUT_CLASSIFICATION	2.9337964318590405E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999882931506845	WITHOUT_CLASSIFICATION	1.1706849315508602E-5	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999965814007037	WITHOUT_CLASSIFICATION	3.418599296365554E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9996716808223215	WITHOUT_CLASSIFICATION	3.2831917767849343E-4	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999993972934875	WITHOUT_CLASSIFICATION	6.027065125871797E-7	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999952486778493	WITHOUT_CLASSIFICATION	4.751322150743787E-6	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999986549276213	WITHOUT_CLASSIFICATION	1.3450723787076861E-5	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999988589854983	WITHOUT_CLASSIFICATION	1.1410145016562936E-6	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9998827577846428	WITHOUT_CLASSIFICATION	1.1724221535723863E-4	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999372779098927	WITHOUT_CLASSIFICATION	6.272209010722272E-5	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999981053738098	WITHOUT_CLASSIFICATION	1.8946261901659807E-6	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999958386837736	WITHOUT_CLASSIFICATION	4.161316226368205E-6	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999398253914296	WITHOUT_CLASSIFICATION	6.017460857051034E-5	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999462481665816	WITHOUT_CLASSIFICATION	5.375183341832139E-5	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9998325463090336	WITHOUT_CLASSIFICATION	1.674536909664232E-4	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999787073819164	WITHOUT_CLASSIFICATION	2.1292618083586972E-5	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999215502562565	WITHOUT_CLASSIFICATION	7.844974374358863E-5	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999565089292584	WITHOUT_CLASSIFICATION	4.3491070741768564E-5	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9992516935925873	WITHOUT_CLASSIFICATION	7.483064074127036E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999943016932576	WITHOUT_CLASSIFICATION	5.698306742272807E-6	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9995385534747105	WITHOUT_CLASSIFICATION	4.6144652528943295E-4	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999787073819164	WITHOUT_CLASSIFICATION	2.1292618083586972E-5	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9900294772605986	WITHOUT_CLASSIFICATION	0.009970522739401287	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999968574192324	WITHOUT_CLASSIFICATION	3.142580767606559E-5	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9996703491899288	WITHOUT_CLASSIFICATION	3.2965081007110846E-4	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999668526199079	WITHOUT_CLASSIFICATION	3.314738009205845E-5	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999668526199079	WITHOUT_CLASSIFICATION	3.314738009205845E-5	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999797396620348	WITHOUT_CLASSIFICATION	2.0260337965243928E-5	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.99998729730143	WITHOUT_CLASSIFICATION	1.2702698570065275E-5	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999173032282801	WITHOUT_CLASSIFICATION	8.269677171993929E-5	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9810025064054171	WITHOUT_CLASSIFICATION	0.01899749359458295	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999942320156827	WITHOUT_CLASSIFICATION	5.767984317333528E-6	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999942699394325	WITHOUT_CLASSIFICATION	5.730060567502714E-6	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999009136812	WITHOUT_CLASSIFICATION	9.908631879145704E-8	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999001512184441	WITHOUT_CLASSIFICATION	9.984878155581973E-5	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999373412669105	WITHOUT_CLASSIFICATION	6.265873308951856E-5	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999373412669105	WITHOUT_CLASSIFICATION	6.265873308951856E-5	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.995524817395108	WITHOUT_CLASSIFICATION	0.004475182604892024	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999997639936817	WITHOUT_CLASSIFICATION	2.3600631820874867E-7	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9995330324279678	WITHOUT_CLASSIFICATION	4.6696757203213427E-4	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9998977630284623	WITHOUT_CLASSIFICATION	1.0223697153774331E-4	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9999638011332515	WITHOUT_CLASSIFICATION	3.619886674845532E-5	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999461641439017	WITHOUT_CLASSIFICATION	5.383585609835571E-5	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999998896658997	WITHOUT_CLASSIFICATION	1.1033410031622561E-7	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9993878557808868	WITHOUT_CLASSIFICATION	6.121442191132215E-4	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9952705813341071	WITHOUT_CLASSIFICATION	0.004729418665892942	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9975849290054636	WITHOUT_CLASSIFICATION	0.002415070994536449	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999993437533686	WITHOUT_CLASSIFICATION	6.562466312746354E-7	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999823961848584	WITHOUT_CLASSIFICATION	1.760381514154814E-5	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.999998868292653	WITHOUT_CLASSIFICATION	1.1317073469760116E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998261438330122	WITHOUT_CLASSIFICATION	1.738561669878791E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998261438330122	WITHOUT_CLASSIFICATION	1.738561669878791E-4	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9994743928558399	WITHOUT_CLASSIFICATION	5.256071441600226E-4	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.999884095303659	WITHOUT_CLASSIFICATION	1.1590469634105381E-4	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9981160133792688	WITHOUT_CLASSIFICATION	0.0018839866207312167	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.999303139855	WITHOUT_CLASSIFICATION	6.968601450000354E-4	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9998157705148571	WITHOUT_CLASSIFICATION	1.8422948514276876E-4	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999944272634145	WITHOUT_CLASSIFICATION	5.572736585500559E-6	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999892011692211	WITHOUT_CLASSIFICATION	1.0798830778917015E-5	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999968473897423	WITHOUT_CLASSIFICATION	3.1526102576594193E-6	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999974700161122	WITHOUT_CLASSIFICATION	2.5299838878354087E-6	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9992752590483635	WITHOUT_CLASSIFICATION	7.247409516365853E-4	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9994364142489461	WITHOUT_CLASSIFICATION	5.635857510538724E-4	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9996082692523153	WITHOUT_CLASSIFICATION	3.917307476847303E-4	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999986566169877	WITHOUT_CLASSIFICATION	1.3433830122985164E-6	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999411744099325	WITHOUT_CLASSIFICATION	5.882559006756449E-5	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9998207858772289	WITHOUT_CLASSIFICATION	1.7921412277120346E-4	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.999988636777439	WITHOUT_CLASSIFICATION	1.1363222561055724E-5	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999952588464203	WITHOUT_CLASSIFICATION	4.741153579723035E-6	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9996923388992068	WITHOUT_CLASSIFICATION	3.0766110079319105E-4	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.999829929488059	WITHOUT_CLASSIFICATION	1.700705119410304E-4	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999837883856757	WITHOUT_CLASSIFICATION	1.6211614324278152E-5	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9994008057829422	WITHOUT_CLASSIFICATION	5.991942170577723E-4	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999545060415012	WITHOUT_CLASSIFICATION	4.549395849883887E-5	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9992941850401775	WITHOUT_CLASSIFICATION	7.058149598225783E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9998597324584042	WITHOUT_CLASSIFICATION	1.4026754159573909E-4	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9973561186310769	WITHOUT_CLASSIFICATION	0.0026438813689231722	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9993226918131628	WITHOUT_CLASSIFICATION	6.773081868372137E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9999636316194022	WITHOUT_CLASSIFICATION	3.6368380597849245E-5	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999925549038554	WITHOUT_CLASSIFICATION	7.445096144597278E-6	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999931231240072	WITHOUT_CLASSIFICATION	6.876875992752486E-6	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9919139703753578	WITHOUT_CLASSIFICATION	0.008086029624642273	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.999937674434915	WITHOUT_CLASSIFICATION	6.232556508501408E-5	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9999496142843942	WITHOUT_CLASSIFICATION	5.03857156057132E-5	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999665928133119	WITHOUT_CLASSIFICATION	3.3407186688019373E-5	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999780691816902	WITHOUT_CLASSIFICATION	2.1930818309879898E-5	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9992595940938037	WITHOUT_CLASSIFICATION	7.404059061963126E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9998286296996297	WITHOUT_CLASSIFICATION	1.7137030037032422E-4	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999948837147404	WITHOUT_CLASSIFICATION	5.116285259655859E-6	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999959934378796	WITHOUT_CLASSIFICATION	4.006562120372191E-6	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999974141588946	WITHOUT_CLASSIFICATION	2.5858411052840913E-6	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999959702189071	WITHOUT_CLASSIFICATION	4.029781092836243E-6	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9997969816352196	WITHOUT_CLASSIFICATION	2.0301836478044108E-4	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999816486210071	WITHOUT_CLASSIFICATION	1.8351378992832778E-5	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999969896120126	WITHOUT_CLASSIFICATION	3.010387987393744E-6	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9993006721693078	WITHOUT_CLASSIFICATION	6.99327830692116E-4	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9998420745181947	WITHOUT_CLASSIFICATION	1.5792548180517855E-4	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999968920564763	WITHOUT_CLASSIFICATION	3.1079435237375755E-6	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999586470752126	WITHOUT_CLASSIFICATION	4.135292478726767E-5	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999774209148354	WITHOUT_CLASSIFICATION	2.2579085164484045E-5	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999202440799647	WITHOUT_CLASSIFICATION	7.975592003529261E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999828320711246	WITHOUT_CLASSIFICATION	1.7167928875325347E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999828320711246	WITHOUT_CLASSIFICATION	1.7167928875325347E-5	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999990761188384	WITHOUT_CLASSIFICATION	9.238811615726091E-7	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999822795826476	WITHOUT_CLASSIFICATION	1.7720417352403193E-5	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999740889034422	WITHOUT_CLASSIFICATION	2.591109655782661E-5	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.999989248442998	WITHOUT_CLASSIFICATION	1.0751557002009963E-5	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999994271765793	WITHOUT_CLASSIFICATION	5.728234207619009E-7	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999991149122953	WITHOUT_CLASSIFICATION	8.850877046037408E-7	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9978661997301193	WITHOUT_CLASSIFICATION	0.0021338002698806746	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9916806081926579	WITHOUT_CLASSIFICATION	0.008319391807341989	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999967608039392	WITHOUT_CLASSIFICATION	3.239196060901797E-6	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9892532910793409	WITHOUT_CLASSIFICATION	0.010746708920659131	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999825111567158	WITHOUT_CLASSIFICATION	1.7488843284197374E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999825111567158	WITHOUT_CLASSIFICATION	1.7488843284197374E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999825111567158	WITHOUT_CLASSIFICATION	1.7488843284197374E-4	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999988828906767	WITHOUT_CLASSIFICATION	1.1171093231892004E-6	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999703334665652	WITHOUT_CLASSIFICATION	2.966653343483671E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9999018936904104	WITHOUT_CLASSIFICATION	9.810630958960341E-5	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999947551512685	WITHOUT_CLASSIFICATION	5.244848731505651E-5	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999947551512685	WITHOUT_CLASSIFICATION	5.244848731505651E-5	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999666872763712	WITHOUT_CLASSIFICATION	3.3312723628900794E-5	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999343339673168	WITHOUT_CLASSIFICATION	6.56660326831573E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999705348132004	WITHOUT_CLASSIFICATION	2.9465186799517728E-5	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9994615874189264	WITHOUT_CLASSIFICATION	5.38412581073645E-4	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9912465901879403	WITHOUT_CLASSIFICATION	0.008753409812059769	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999979970197512	WITHOUT_CLASSIFICATION	2.002980248711406E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9997051801483792	WITHOUT_CLASSIFICATION	2.948198516207824E-4	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999903605680779	WITHOUT_CLASSIFICATION	9.639431922093373E-6	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999946976250845	WITHOUT_CLASSIFICATION	5.302374915454447E-6	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999842501058142	WITHOUT_CLASSIFICATION	1.5749894185937488E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999842501058142	WITHOUT_CLASSIFICATION	1.5749894185937488E-5	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9996384253393282	WITHOUT_CLASSIFICATION	3.6157466067178787E-4	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999866035857145	WITHOUT_CLASSIFICATION	1.3396414285449598E-5	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999547649433111	WITHOUT_CLASSIFICATION	4.523505668881687E-5	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999870579905054	WITHOUT_CLASSIFICATION	1.294200949466134E-5	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999644543733753	WITHOUT_CLASSIFICATION	3.554562662469403E-5	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999828697673995	WITHOUT_CLASSIFICATION	1.7130232600605698E-5	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999706396419659	WITHOUT_CLASSIFICATION	2.936035803411198E-5	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999619409828303	WITHOUT_CLASSIFICATION	3.8059017169703555E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9998062576450516	WITHOUT_CLASSIFICATION	1.9374235494833535E-4	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9998780019207367	WITHOUT_CLASSIFICATION	1.2199807926339136E-4	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999884117589981	WITHOUT_CLASSIFICATION	1.158824100194873E-5	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999014812567177	WITHOUT_CLASSIFICATION	9.851874328226856E-5	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9996260137760798	WITHOUT_CLASSIFICATION	3.7398622392016787E-4	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999625962793732	WITHOUT_CLASSIFICATION	3.7403720626695057E-5	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9996182200040161	WITHOUT_CLASSIFICATION	3.8177999598381106E-4	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999989694189848	WITHOUT_CLASSIFICATION	1.0305810151460198E-6	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999843520472735	WITHOUT_CLASSIFICATION	1.5647952726545176E-5	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.999881428851993	WITHOUT_CLASSIFICATION	1.1857114800695629E-4	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999901925105384	WITHOUT_CLASSIFICATION	9.807489461636528E-6	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999963260973205	WITHOUT_CLASSIFICATION	3.6739026795016294E-5	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9511173634827745	WITHOUT_CLASSIFICATION	0.04888263651722548	DESIGN
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999997536005831	WITHOUT_CLASSIFICATION	2.4639941685257904E-7	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999835083679037	WITHOUT_CLASSIFICATION	1.6491632096237665E-5	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999997294850158	WITHOUT_CLASSIFICATION	2.7051498410673344E-7	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999863516573664	WITHOUT_CLASSIFICATION	1.3648342633576165E-5	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999679830276923	WITHOUT_CLASSIFICATION	3.201697230771454E-5	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999534257311465	WITHOUT_CLASSIFICATION	4.6574268853563956E-5	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9997772737601855	WITHOUT_CLASSIFICATION	2.227262398145191E-4	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9997123908498778	WITHOUT_CLASSIFICATION	2.876091501221573E-4	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9998690917826087	WITHOUT_CLASSIFICATION	1.309082173912094E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9998442757970509	WITHOUT_CLASSIFICATION	1.5572420294897714E-4	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9998794426622961	WITHOUT_CLASSIFICATION	1.205573377038518E-4	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.999440611166834	WITHOUT_CLASSIFICATION	5.593888331660623E-4	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9998442757970509	WITHOUT_CLASSIFICATION	1.5572420294897714E-4	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9998661846633157	WITHOUT_CLASSIFICATION	1.3381533668431917E-4	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999546218009047	WITHOUT_CLASSIFICATION	4.537819909539164E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9996211504561622	WITHOUT_CLASSIFICATION	3.788495438377971E-4	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9981820990568762	WITHOUT_CLASSIFICATION	0.00181790094312394	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999730238007497	WITHOUT_CLASSIFICATION	2.697619925035448E-5	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999883306813641	WITHOUT_CLASSIFICATION	1.1669318635901055E-5	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999807561132291	WITHOUT_CLASSIFICATION	1.924388677079161E-5	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9995816748788393	WITHOUT_CLASSIFICATION	4.183251211607177E-4	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9998903547437143	WITHOUT_CLASSIFICATION	1.096452562856113E-4	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999216843427551	WITHOUT_CLASSIFICATION	7.831565724500392E-5	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.99980249763298	WITHOUT_CLASSIFICATION	1.9750236701998388E-4	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.998845634070858	WITHOUT_CLASSIFICATION	0.001154365929142039	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9997483280750583	WITHOUT_CLASSIFICATION	2.5167192494162066E-4	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999273618811335	WITHOUT_CLASSIFICATION	7.26381188664093E-5	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9996547188459706	WITHOUT_CLASSIFICATION	3.452811540294507E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9994444034478948	WITHOUT_CLASSIFICATION	5.555965521053279E-4	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9995448189939845	WITHOUT_CLASSIFICATION	4.551810060155391E-4	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9997555426149223	WITHOUT_CLASSIFICATION	2.444573850776662E-4	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999495620582439	WITHOUT_CLASSIFICATION	5.04379417560034E-5	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999753222403189	WITHOUT_CLASSIFICATION	2.4677759681018105E-5	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9902884195967027	WITHOUT_CLASSIFICATION	0.00971158040329738	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999229531704058	WITHOUT_CLASSIFICATION	7.70468295942434E-5	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9998916154324856	WITHOUT_CLASSIFICATION	1.0838456751430328E-4	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999479833257607	WITHOUT_CLASSIFICATION	5.2016674239268785E-5	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999711193381652	WITHOUT_CLASSIFICATION	2.8880661834784752E-5	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999895829541551	WITHOUT_CLASSIFICATION	1.0417045844900234E-4	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9994878624740543	WITHOUT_CLASSIFICATION	5.121375259456647E-4	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999744770032154	WITHOUT_CLASSIFICATION	2.5522996784619184E-5	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999840219514438	WITHOUT_CLASSIFICATION	1.597804855620484E-5	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.999984039607763	WITHOUT_CLASSIFICATION	1.5960392236925844E-5	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.999643116110887	WITHOUT_CLASSIFICATION	3.568838891129682E-4	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9998814912453629	WITHOUT_CLASSIFICATION	1.185087546372108E-4	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999833476469011	WITHOUT_CLASSIFICATION	1.665235309881736E-5	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9998954256194859	WITHOUT_CLASSIFICATION	1.0457438051414517E-4	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999319556417058	WITHOUT_CLASSIFICATION	6.804435829422613E-5	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999547361897133	WITHOUT_CLASSIFICATION	4.526381028678503E-5	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.999935584505203	WITHOUT_CLASSIFICATION	6.44154947970315E-5	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9996402641380918	WITHOUT_CLASSIFICATION	3.5973586190815083E-4	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999356649662918	WITHOUT_CLASSIFICATION	6.433503370813603E-5	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9997801463706323	WITHOUT_CLASSIFICATION	2.1985362936774897E-4	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999696037989456	WITHOUT_CLASSIFICATION	3.0396201054302904E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999109622255596	WITHOUT_CLASSIFICATION	8.903777444035101E-5	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999272170121559	WITHOUT_CLASSIFICATION	7.278298784411469E-5	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999853463809597	WITHOUT_CLASSIFICATION	1.465361904027326E-5	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999580429422124	WITHOUT_CLASSIFICATION	4.1957057787652286E-5	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.999941115875844	WITHOUT_CLASSIFICATION	5.888412415602022E-5	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9999854037278231	WITHOUT_CLASSIFICATION	1.4596272176992989E-5	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9998026560258583	WITHOUT_CLASSIFICATION	1.9734397414178568E-4	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999291668271024	WITHOUT_CLASSIFICATION	7.083317289751304E-5	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9997901371408113	WITHOUT_CLASSIFICATION	2.0986285918859408E-4	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998901353578772	WITHOUT_CLASSIFICATION	1.0986464212279305E-4	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998711119521214	WITHOUT_CLASSIFICATION	1.2888804787849402E-4	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999660986598387	WITHOUT_CLASSIFICATION	3.390134016135514E-5	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999291668271024	WITHOUT_CLASSIFICATION	7.083317289751304E-5	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9998737383389867	WITHOUT_CLASSIFICATION	1.2626166101326207E-4	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9998737383389867	WITHOUT_CLASSIFICATION	1.2626166101326207E-4	DESIGN
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999586162375887	WITHOUT_CLASSIFICATION	4.138376241121401E-5	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9991527049136725	WITHOUT_CLASSIFICATION	8.472950863276561E-4	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999584056206835	WITHOUT_CLASSIFICATION	4.159437931656875E-5	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999447245167826	WITHOUT_CLASSIFICATION	5.5275483217458745E-5	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9868885082710063	WITHOUT_CLASSIFICATION	0.013111491728993653	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999637071155705	WITHOUT_CLASSIFICATION	3.629288442952552E-5	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999783316917569	WITHOUT_CLASSIFICATION	2.1668308243129182E-5	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.6648410496605395	WITHOUT_CLASSIFICATION	0.33515895033946047	DESIGN
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9992590394587348	WITHOUT_CLASSIFICATION	7.409605412651159E-4	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9991640774402921	WITHOUT_CLASSIFICATION	8.359225597079209E-4	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999553513612051	WITHOUT_CLASSIFICATION	4.464863879482133E-5	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9998666333765902	WITHOUT_CLASSIFICATION	1.3336662340975806E-4	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9998162232483256	WITHOUT_CLASSIFICATION	1.8377675167433432E-4	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999877712659093	WITHOUT_CLASSIFICATION	1.2228734090604597E-5	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9997797084345699	WITHOUT_CLASSIFICATION	2.202915654301163E-4	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999725914868008	WITHOUT_CLASSIFICATION	2.7408513199195776E-4	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.999981687696907	WITHOUT_CLASSIFICATION	1.83123030930099E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996377214406668	WITHOUT_CLASSIFICATION	3.6227855933332554E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996377214406668	WITHOUT_CLASSIFICATION	3.6227855933332554E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996377214406668	WITHOUT_CLASSIFICATION	3.6227855933332554E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996377214406668	WITHOUT_CLASSIFICATION	3.6227855933332554E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996377214406668	WITHOUT_CLASSIFICATION	3.6227855933332554E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999857719200441	WITHOUT_CLASSIFICATION	1.42280799559155E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9997169348405601	WITHOUT_CLASSIFICATION	2.830651594399314E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997798607214509	WITHOUT_CLASSIFICATION	2.2013927854925444E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.999280049003042	WITHOUT_CLASSIFICATION	7.199509969579757E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998458454629288	WITHOUT_CLASSIFICATION	1.541545370711469E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999948443355434	WITHOUT_CLASSIFICATION	5.155664456603924E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999433405947551	WITHOUT_CLASSIFICATION	5.6659405244966606E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999458551541743	WITHOUT_CLASSIFICATION	5.4144845825594916E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999841559528296	WITHOUT_CLASSIFICATION	1.5844047170365893E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999880583467476	WITHOUT_CLASSIFICATION	1.1941653252421135E-5	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999865858726446	WITHOUT_CLASSIFICATION	1.3414127355472555E-5	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999841344213154	WITHOUT_CLASSIFICATION	1.5865578684660783E-5	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999854821176158	WITHOUT_CLASSIFICATION	1.4517882384145396E-5	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999858077583538	WITHOUT_CLASSIFICATION	1.4192241646133485E-5	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999851208258428	WITHOUT_CLASSIFICATION	1.487917415716943E-5	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999853898877967	WITHOUT_CLASSIFICATION	1.4610112203337798E-5	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999833271571879	WITHOUT_CLASSIFICATION	1.667284281220722E-5	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999861347012445	WITHOUT_CLASSIFICATION	1.3865298755421303E-5	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999829885846293	WITHOUT_CLASSIFICATION	1.701141537075156E-5	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999853852028752	WITHOUT_CLASSIFICATION	1.4614797124805095E-5	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999834993420385	WITHOUT_CLASSIFICATION	1.6500657961492965E-5	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999829442810434	WITHOUT_CLASSIFICATION	1.705571895665022E-5	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999858406421439	WITHOUT_CLASSIFICATION	1.4159357856071063E-5	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999836538707477	WITHOUT_CLASSIFICATION	1.6346129252213122E-5	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.999986613001176	WITHOUT_CLASSIFICATION	1.3386998823953726E-5	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999846184314246	WITHOUT_CLASSIFICATION	1.538156857532014E-5	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999854110414192	WITHOUT_CLASSIFICATION	1.4588958580655785E-5	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999843839154491	WITHOUT_CLASSIFICATION	1.5616084550879652E-5	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999850479808716	WITHOUT_CLASSIFICATION	1.495201912824457E-5	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999880061625134	WITHOUT_CLASSIFICATION	1.1993837486670549E-5	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999856861323366	WITHOUT_CLASSIFICATION	1.4313867663441178E-5	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999833537892067	WITHOUT_CLASSIFICATION	1.664621079336539E-5	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.999983207650173	WITHOUT_CLASSIFICATION	1.6792349826944744E-5	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999821384740102	WITHOUT_CLASSIFICATION	1.7861525989809953E-5	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999858287681878	WITHOUT_CLASSIFICATION	1.417123181218986E-5	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999829614792994	WITHOUT_CLASSIFICATION	1.7038520700493616E-5	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999829075834213	WITHOUT_CLASSIFICATION	1.7092416578629656E-5	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999830452698047	WITHOUT_CLASSIFICATION	1.6954730195199387E-5	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999850818755848	WITHOUT_CLASSIFICATION	1.4918124415336225E-5	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999830200586479	WITHOUT_CLASSIFICATION	1.6979941352111175E-5	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999835985895283	WITHOUT_CLASSIFICATION	1.6401410471660907E-5	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999838865711996	WITHOUT_CLASSIFICATION	1.6113428800352874E-5	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999857805129513	WITHOUT_CLASSIFICATION	1.4219487048810193E-5	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999835404813645	WITHOUT_CLASSIFICATION	1.6459518635484778E-5	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999868144179181	WITHOUT_CLASSIFICATION	1.3185582081874835E-5	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999855323605326	WITHOUT_CLASSIFICATION	1.4467639467488319E-5	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999848171055642	WITHOUT_CLASSIFICATION	1.5182894435834618E-5	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999867071191166	WITHOUT_CLASSIFICATION	1.329288088332241E-5	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999850983447945	WITHOUT_CLASSIFICATION	1.4901655205420672E-5	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999846540272885	WITHOUT_CLASSIFICATION	1.534597271150689E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997798607214509	WITHOUT_CLASSIFICATION	2.2013927854925444E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999831429550904	WITHOUT_CLASSIFICATION	1.685704490963358E-5	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999851479149219	WITHOUT_CLASSIFICATION	1.4852085078221538E-5	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999842628368242	WITHOUT_CLASSIFICATION	1.57371631757969E-5	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999832608437264	WITHOUT_CLASSIFICATION	1.6739156273677074E-5	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999816656802859	WITHOUT_CLASSIFICATION	1.8334319714172736E-5	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9999818431140106	WITHOUT_CLASSIFICATION	1.815688598938921E-5	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999830577701222	WITHOUT_CLASSIFICATION	1.694222987782835E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999816773633926	WITHOUT_CLASSIFICATION	1.832263660739139E-5	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999826762763346	WITHOUT_CLASSIFICATION	1.7323723665319316E-5	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999816285148292	WITHOUT_CLASSIFICATION	1.8371485170831632E-5	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999833223292253	WITHOUT_CLASSIFICATION	1.6677670774685843E-5	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999835334962345	WITHOUT_CLASSIFICATION	1.646650376557844E-5	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999820118658105	WITHOUT_CLASSIFICATION	1.7988134189441586E-5	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999855856461496	WITHOUT_CLASSIFICATION	1.4414353850396825E-5	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999848730254898	WITHOUT_CLASSIFICATION	1.512697451022915E-5	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999868200718592	WITHOUT_CLASSIFICATION	1.3179928140852293E-5	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999852311162424	WITHOUT_CLASSIFICATION	1.476888375771991E-5	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999846607593795	WITHOUT_CLASSIFICATION	1.5339240620400127E-5	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999840508816508	WITHOUT_CLASSIFICATION	1.594911834930903E-5	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999840973594534	WITHOUT_CLASSIFICATION	1.5902640546650333E-5	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999854533475082	WITHOUT_CLASSIFICATION	1.454665249184338E-5	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999831698477423	WITHOUT_CLASSIFICATION	1.683015225777921E-5	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999816934186058	WITHOUT_CLASSIFICATION	1.830658139420692E-5	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999840581176658	WITHOUT_CLASSIFICATION	1.59418823342353E-5	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999819067720502	WITHOUT_CLASSIFICATION	1.80932279497759E-5	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999848769393272	WITHOUT_CLASSIFICATION	1.5123060672647445E-5	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999856776235176	WITHOUT_CLASSIFICATION	1.4322376482353501E-5	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999811788473649	WITHOUT_CLASSIFICATION	1.8821152635107737E-5	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999867426087989	WITHOUT_CLASSIFICATION	1.3257391201107983E-5	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999838644718657	WITHOUT_CLASSIFICATION	1.613552813429418E-5	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999876710044259	WITHOUT_CLASSIFICATION	1.2328995574129289E-5	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999852925663226	WITHOUT_CLASSIFICATION	1.4707433677427352E-5	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999854226073897	WITHOUT_CLASSIFICATION	1.4577392610330414E-5	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999859026306853	WITHOUT_CLASSIFICATION	1.4097369314658061E-5	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.999982783615089	WITHOUT_CLASSIFICATION	1.721638491098873E-5	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.999983889422717	WITHOUT_CLASSIFICATION	1.6110577283066913E-5	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999850618180622	WITHOUT_CLASSIFICATION	1.4938181937844327E-5	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999832225763987	WITHOUT_CLASSIFICATION	1.677742360134267E-5	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999815391405034	WITHOUT_CLASSIFICATION	1.8460859496607762E-5	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.999984614281186	WITHOUT_CLASSIFICATION	1.538571881400974E-5	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999829705950636	WITHOUT_CLASSIFICATION	1.702940493643347E-5	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999825871383606	WITHOUT_CLASSIFICATION	1.7412861639338582E-5	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999847474619314	WITHOUT_CLASSIFICATION	1.5252538068601707E-5	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.999981436567363	WITHOUT_CLASSIFICATION	1.8563432637005585E-5	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.999986127048087	WITHOUT_CLASSIFICATION	1.3872951913103503E-5	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999824184993851	WITHOUT_CLASSIFICATION	1.7581500614904487E-5	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999849858091069	WITHOUT_CLASSIFICATION	1.5014190893045729E-5	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999831560096393	WITHOUT_CLASSIFICATION	1.684399036073419E-5	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999814500287951	WITHOUT_CLASSIFICATION	1.8549971204863783E-5	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.999985969321246	WITHOUT_CLASSIFICATION	1.403067875402336E-5	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999858123506726	WITHOUT_CLASSIFICATION	1.4187649327428336E-5	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999862327422543	WITHOUT_CLASSIFICATION	1.3767257745732562E-5	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999853384881314	WITHOUT_CLASSIFICATION	1.4661511868588642E-5	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999847677729237	WITHOUT_CLASSIFICATION	1.523222707630346E-5	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999882571058412	WITHOUT_CLASSIFICATION	1.1742894158853815E-5	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999868320592278	WITHOUT_CLASSIFICATION	1.3167940772194116E-5	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999860116200493	WITHOUT_CLASSIFICATION	1.3988379950615758E-5	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999833693724938	WITHOUT_CLASSIFICATION	1.663062750623799E-5	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999838702083489	WITHOUT_CLASSIFICATION	1.612979165112623E-5	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.999983578297661	WITHOUT_CLASSIFICATION	1.6421702338870927E-5	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999871296781665	WITHOUT_CLASSIFICATION	1.287032183354455E-5	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999837700004414	WITHOUT_CLASSIFICATION	1.6229999558586593E-5	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999862313234192	WITHOUT_CLASSIFICATION	1.3768676580747759E-5	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999825615960004	WITHOUT_CLASSIFICATION	1.743840399963999E-5	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999860030712975	WITHOUT_CLASSIFICATION	1.3996928702539589E-5	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999826254380283	WITHOUT_CLASSIFICATION	1.7374561971730158E-5	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999860741091413	WITHOUT_CLASSIFICATION	1.3925890858784773E-5	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999835179743682	WITHOUT_CLASSIFICATION	1.6482025631756245E-5	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999836097406066	WITHOUT_CLASSIFICATION	1.6390259393317858E-5	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999831263258782	WITHOUT_CLASSIFICATION	1.687367412192525E-5	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999837325072815	WITHOUT_CLASSIFICATION	1.6267492718523668E-5	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999828732086276	WITHOUT_CLASSIFICATION	1.712679137241121E-5	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999827351616748	WITHOUT_CLASSIFICATION	1.7264838325224295E-5	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999845552989994	WITHOUT_CLASSIFICATION	1.544470100055862E-5	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999845204342902	WITHOUT_CLASSIFICATION	1.5479565709732983E-5	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999842352075324	WITHOUT_CLASSIFICATION	1.576479246755955E-5	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999874869208162	WITHOUT_CLASSIFICATION	1.2513079183938705E-5	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999851462016317	WITHOUT_CLASSIFICATION	1.4853798368250851E-5	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999850729709038	WITHOUT_CLASSIFICATION	1.4927029096250516E-5	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999856570933873	WITHOUT_CLASSIFICATION	1.4342906612709007E-5	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999826552209861	WITHOUT_CLASSIFICATION	1.7344779013968633E-5	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.999984878140347	WITHOUT_CLASSIFICATION	1.5121859653093164E-5	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999822831441295	WITHOUT_CLASSIFICATION	1.7716855870401095E-5	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999837699886139	WITHOUT_CLASSIFICATION	1.6230011386048627E-5	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999820942160031	WITHOUT_CLASSIFICATION	1.790578399687628E-5	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999840304102336	WITHOUT_CLASSIFICATION	1.5969589766399263E-5	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999833128273552	WITHOUT_CLASSIFICATION	1.6687172644790643E-5	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9999818753255877	WITHOUT_CLASSIFICATION	1.812467441231638E-5	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.999985278453478	WITHOUT_CLASSIFICATION	1.4721546521901345E-5	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999830048591333	WITHOUT_CLASSIFICATION	1.699514086668412E-5	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999854151140468	WITHOUT_CLASSIFICATION	1.4584885953248968E-5	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999841803051159	WITHOUT_CLASSIFICATION	1.5819694884095068E-5	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999829821399119	WITHOUT_CLASSIFICATION	1.7017860088078524E-5	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999809356986256	WITHOUT_CLASSIFICATION	1.906430137442709E-5	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.999988455349169	WITHOUT_CLASSIFICATION	1.1544650831071336E-5	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999893379273677	WITHOUT_CLASSIFICATION	1.0662072632386956E-5	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999891530831768	WITHOUT_CLASSIFICATION	1.0846916823241054E-5	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999876882166265	WITHOUT_CLASSIFICATION	1.2311783373499844E-5	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999903413050452	WITHOUT_CLASSIFICATION	9.658694954773829E-6	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999900888527636	WITHOUT_CLASSIFICATION	9.911147236405687E-6	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999886714155701	WITHOUT_CLASSIFICATION	1.1328584429921325E-5	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999884122120799	WITHOUT_CLASSIFICATION	1.1587787920057593E-5	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999889977447032	WITHOUT_CLASSIFICATION	1.1002255296950966E-5	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999877237206606	WITHOUT_CLASSIFICATION	1.2276279339437328E-5	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999883963396976	WITHOUT_CLASSIFICATION	1.1603660302420336E-5	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999875120298076	WITHOUT_CLASSIFICATION	1.2487970192343082E-5	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999882780054911	WITHOUT_CLASSIFICATION	1.1721994508884485E-5	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999879198098828	WITHOUT_CLASSIFICATION	1.2080190117197158E-5	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999879870685124	WITHOUT_CLASSIFICATION	1.2012931487461623E-5	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999903628643398	WITHOUT_CLASSIFICATION	9.637135660178838E-6	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999884354316609	WITHOUT_CLASSIFICATION	1.1564568339108062E-5	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999880194803715	WITHOUT_CLASSIFICATION	1.1980519628616134E-5	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999886383638636	WITHOUT_CLASSIFICATION	1.136163613626008E-5	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999878802446696	WITHOUT_CLASSIFICATION	1.2119755330462888E-5	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.999987824101412	WITHOUT_CLASSIFICATION	1.2175898588113686E-5	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999851543548368	WITHOUT_CLASSIFICATION	1.4845645163225704E-5	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999857029410509	WITHOUT_CLASSIFICATION	1.4297058948961129E-5	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999851558668313	WITHOUT_CLASSIFICATION	1.4844133168629589E-5	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999856953975018	WITHOUT_CLASSIFICATION	1.4304602498306473E-5	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999880885038616	WITHOUT_CLASSIFICATION	1.1911496138389497E-5	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999858214568685	WITHOUT_CLASSIFICATION	1.4178543131309284E-5	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999861322154696	WITHOUT_CLASSIFICATION	1.3867784530345974E-5	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999863559428209	WITHOUT_CLASSIFICATION	1.3644057179018485E-5	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999879829476342	WITHOUT_CLASSIFICATION	1.2017052365894817E-5	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999856455843841	WITHOUT_CLASSIFICATION	1.435441561602142E-5	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999864803612536	WITHOUT_CLASSIFICATION	1.351963874646687E-5	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999864091686883	WITHOUT_CLASSIFICATION	1.3590831311773458E-5	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999887752244554	WITHOUT_CLASSIFICATION	1.1224775544652322E-5	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999857551824531	WITHOUT_CLASSIFICATION	1.4244817546821693E-5	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999865022057528	WITHOUT_CLASSIFICATION	1.3497794247268196E-5	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999867029312918	WITHOUT_CLASSIFICATION	1.3297068708225703E-5	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999866197419296	WITHOUT_CLASSIFICATION	1.33802580702955E-5	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.999986304608443	WITHOUT_CLASSIFICATION	1.369539155697773E-5	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999908372872485	WITHOUT_CLASSIFICATION	9.16271275153916E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999903754687147	WITHOUT_CLASSIFICATION	9.624531285256023E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.999989536740319	WITHOUT_CLASSIFICATION	1.0463259681040153E-5	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.99998850945605	WITHOUT_CLASSIFICATION	1.1490543950051209E-5	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999890927630098	WITHOUT_CLASSIFICATION	1.090723699014053E-5	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999879727502113	WITHOUT_CLASSIFICATION	1.20272497885128E-5	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999896298917605	WITHOUT_CLASSIFICATION	1.0370108239469255E-5	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999889796475926	WITHOUT_CLASSIFICATION	1.102035240743298E-5	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999883310023473	WITHOUT_CLASSIFICATION	1.1668997652666833E-5	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999887895338376	WITHOUT_CLASSIFICATION	1.1210466162431841E-5	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999885371025878	WITHOUT_CLASSIFICATION	1.1462897412170003E-5	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999907444769207	WITHOUT_CLASSIFICATION	9.25552307939558E-6	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999895042198792	WITHOUT_CLASSIFICATION	1.0495780120769728E-5	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999898320874936	WITHOUT_CLASSIFICATION	1.0167912506391267E-5	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.99998808784908	WITHOUT_CLASSIFICATION	1.1912150920045431E-5	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999879918331512	WITHOUT_CLASSIFICATION	1.2008166848809575E-5	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999905600493454	WITHOUT_CLASSIFICATION	9.439950654568369E-6	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999884723968127	WITHOUT_CLASSIFICATION	1.152760318746365E-5	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999851034585554	WITHOUT_CLASSIFICATION	1.4896541444608518E-5	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999856771957655	WITHOUT_CLASSIFICATION	1.4322804234576956E-5	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999904098152724	WITHOUT_CLASSIFICATION	9.590184727478204E-6	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999891241132545	WITHOUT_CLASSIFICATION	1.0875886745596104E-5	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999856724154564	WITHOUT_CLASSIFICATION	1.4327584543647636E-5	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999875737785974	WITHOUT_CLASSIFICATION	1.2426221402601186E-5	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999885920411388	WITHOUT_CLASSIFICATION	1.1407958861176727E-5	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999868426679704	WITHOUT_CLASSIFICATION	1.3157332029607958E-5	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999870528899455	WITHOUT_CLASSIFICATION	1.2947110054419594E-5	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999869974713799	WITHOUT_CLASSIFICATION	1.3002528620039184E-5	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999872674020506	WITHOUT_CLASSIFICATION	1.273259794947336E-5	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999882827388705	WITHOUT_CLASSIFICATION	1.1717261129447994E-5	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999857472792069	WITHOUT_CLASSIFICATION	1.425272079313027E-5	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999873025636088	WITHOUT_CLASSIFICATION	1.2697436391192546E-5	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999868332968133	WITHOUT_CLASSIFICATION	1.3166703186691264E-5	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999874762690447	WITHOUT_CLASSIFICATION	1.2523730955186492E-5	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999867146228039	WITHOUT_CLASSIFICATION	1.3285377196148231E-5	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999868763499103	WITHOUT_CLASSIFICATION	1.3123650089549342E-5	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999864731795624	WITHOUT_CLASSIFICATION	1.3526820437712568E-5	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999888560014369	WITHOUT_CLASSIFICATION	1.114399856293855E-5	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999864412647075	WITHOUT_CLASSIFICATION	1.355873529249272E-5	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999882001707315	WITHOUT_CLASSIFICATION	1.1799829268346088E-5	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999858664496397	WITHOUT_CLASSIFICATION	1.4133550360255887E-5	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999890009054238	WITHOUT_CLASSIFICATION	1.0999094576314993E-5	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9999871158287533	WITHOUT_CLASSIFICATION	1.2884171246723376E-5	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999865370398849	WITHOUT_CLASSIFICATION	1.3462960115136355E-5	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999860751689914	WITHOUT_CLASSIFICATION	1.3924831008588608E-5	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999901682819666	WITHOUT_CLASSIFICATION	9.831718033393224E-6	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999871662601177	WITHOUT_CLASSIFICATION	1.2833739882294638E-5	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999856190399231	WITHOUT_CLASSIFICATION	1.4380960076836782E-5	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999858029498556	WITHOUT_CLASSIFICATION	1.4197050144378257E-5	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999858237088958	WITHOUT_CLASSIFICATION	1.4176291104285963E-5	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999870360038966	WITHOUT_CLASSIFICATION	1.2963996103364561E-5	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999855985672789	WITHOUT_CLASSIFICATION	1.440143272116352E-5	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999851561428803	WITHOUT_CLASSIFICATION	1.4843857119673088E-5	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999851446847111	WITHOUT_CLASSIFICATION	1.4855315288854413E-5	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999864922819256	WITHOUT_CLASSIFICATION	1.3507718074325425E-5	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999857522131739	WITHOUT_CLASSIFICATION	1.4247786826002847E-5	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999865786173114	WITHOUT_CLASSIFICATION	1.3421382688594436E-5	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999852080285514	WITHOUT_CLASSIFICATION	1.4791971448581978E-5	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999866681832793	WITHOUT_CLASSIFICATION	1.3331816720772463E-5	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999850215210495	WITHOUT_CLASSIFICATION	1.4978478950505154E-5	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.999986376047139	WITHOUT_CLASSIFICATION	1.3623952860958583E-5	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999889934659373	WITHOUT_CLASSIFICATION	1.100653406267733E-5	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.999988583884962	WITHOUT_CLASSIFICATION	1.1416115038000112E-5	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999888694739254	WITHOUT_CLASSIFICATION	1.1130526074704512E-5	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999882321376117	WITHOUT_CLASSIFICATION	1.1767862388390055E-5	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.999988925839229	WITHOUT_CLASSIFICATION	1.1074160771053222E-5	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999892532241658	WITHOUT_CLASSIFICATION	1.0746775834175485E-5	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999877359325198	WITHOUT_CLASSIFICATION	1.2264067480217814E-5	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999879393419496	WITHOUT_CLASSIFICATION	1.2060658050389288E-5	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999875910704038	WITHOUT_CLASSIFICATION	1.2408929596225904E-5	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999881513164472	WITHOUT_CLASSIFICATION	1.184868355267718E-5	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999858897172933	WITHOUT_CLASSIFICATION	1.4110282706836076E-5	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999871767270732	WITHOUT_CLASSIFICATION	1.2823272926797969E-5	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999858667994541	WITHOUT_CLASSIFICATION	1.4133200545906198E-5	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999889708167896	WITHOUT_CLASSIFICATION	1.1029183210447251E-5	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999860509831027	WITHOUT_CLASSIFICATION	1.3949016897441755E-5	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999874146649605	WITHOUT_CLASSIFICATION	1.258533503931791E-5	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999872209931124	WITHOUT_CLASSIFICATION	1.2779006887505808E-5	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999876204965993	WITHOUT_CLASSIFICATION	1.2379503400747409E-5	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999881636804976	WITHOUT_CLASSIFICATION	1.1836319502295734E-5	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999881882643974	WITHOUT_CLASSIFICATION	1.1811735602547637E-5	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999858947730367	WITHOUT_CLASSIFICATION	1.4105226963436687E-5	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.99998883345543	WITHOUT_CLASSIFICATION	1.1166544569958325E-5	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999864675529273	WITHOUT_CLASSIFICATION	1.3532447072763865E-5	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999866341391068	WITHOUT_CLASSIFICATION	1.336586089303511E-5	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999852072340674	WITHOUT_CLASSIFICATION	1.4792765932607394E-5	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.999986047002153	WITHOUT_CLASSIFICATION	1.3952997846957253E-5	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999877780835864	WITHOUT_CLASSIFICATION	1.2221916413649578E-5	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999851250414667	WITHOUT_CLASSIFICATION	1.4874958533332802E-5	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.999987542946516	WITHOUT_CLASSIFICATION	1.2457053483910432E-5	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999878864901056	WITHOUT_CLASSIFICATION	1.211350989434646E-5	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999866661696372	WITHOUT_CLASSIFICATION	1.3333830362932106E-5	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999852117442447	WITHOUT_CLASSIFICATION	1.4788255755281971E-5	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999887700754027	WITHOUT_CLASSIFICATION	1.1229924597249441E-5	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999586965754007	WITHOUT_CLASSIFICATION	4.130342459939436E-5	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9997064761942257	WITHOUT_CLASSIFICATION	2.935238057743299E-4	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999165844727633	WITHOUT_CLASSIFICATION	8.341552723663597E-5	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9995803853439537	WITHOUT_CLASSIFICATION	4.1961465604639886E-4	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9987481604824717	WITHOUT_CLASSIFICATION	0.0012518395175282343	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998941316265391	WITHOUT_CLASSIFICATION	1.0586837346091794E-4	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9998233101550786	WITHOUT_CLASSIFICATION	1.7668984492129024E-4	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998107192307258	WITHOUT_CLASSIFICATION	1.8928076927406297E-4	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999350495068843	WITHOUT_CLASSIFICATION	6.495049311577572E-5	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9997876437998138	WITHOUT_CLASSIFICATION	2.1235620018622323E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998653537328241	WITHOUT_CLASSIFICATION	1.3464626717585754E-4	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999854762943152	WITHOUT_CLASSIFICATION	1.4523705684760208E-5	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999659886370798	WITHOUT_CLASSIFICATION	3.40113629202971E-5	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.999694487287586	WITHOUT_CLASSIFICATION	3.055127124139315E-4	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999921056536969	WITHOUT_CLASSIFICATION	7.894346303186046E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9993602263452358	WITHOUT_CLASSIFICATION	6.397736547642411E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9987057021566733	WITHOUT_CLASSIFICATION	0.0012942978433267782	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998460611922304	WITHOUT_CLASSIFICATION	1.5393880776954372E-4	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999975980402779	WITHOUT_CLASSIFICATION	2.4019597220487364E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999891779681727	WITHOUT_CLASSIFICATION	1.0822031827359535E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999779140214646	WITHOUT_CLASSIFICATION	2.2085978535398672E-5	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.99999189021663	WITHOUT_CLASSIFICATION	8.109783369934052E-6	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999682533115573	WITHOUT_CLASSIFICATION	3.1746688442708E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9992960353645947	WITHOUT_CLASSIFICATION	7.039646354052823E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9992960353645947	WITHOUT_CLASSIFICATION	7.039646354052823E-4	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.5423452742239739	WITHOUT_CLASSIFICATION	0.45765472577602606	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9932360678390569	WITHOUT_CLASSIFICATION	0.0067639321609430396	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999024201357077	WITHOUT_CLASSIFICATION	9.757986429216715E-5	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9961690375909572	WITHOUT_CLASSIFICATION	0.003830962409042841	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.999888868938794	WITHOUT_CLASSIFICATION	1.1113106120595203E-4	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999959903775595	WITHOUT_CLASSIFICATION	4.009622440512917E-6	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999980317865347	WITHOUT_CLASSIFICATION	1.968213465392047E-6	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999994310930203	WITHOUT_CLASSIFICATION	5.689069797958095E-7	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9998372820918684	WITHOUT_CLASSIFICATION	1.6271790813163933E-4	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999991854416664	WITHOUT_CLASSIFICATION	8.145583336288692E-7	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999894875695103	WITHOUT_CLASSIFICATION	1.0512430489661019E-5	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999983771814593	WITHOUT_CLASSIFICATION	1.622818540654175E-6	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999989881111244	WITHOUT_CLASSIFICATION	1.0118888755487842E-6	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999156229496933	WITHOUT_CLASSIFICATION	8.437705030672506E-5	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999262073591133	WITHOUT_CLASSIFICATION	7.37926408866333E-5	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999078943173915	WITHOUT_CLASSIFICATION	9.210568260844159E-5	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9996936209375833	WITHOUT_CLASSIFICATION	3.063790624167298E-4	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.999822882884834	WITHOUT_CLASSIFICATION	1.7711711516595722E-4	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999470524085833	WITHOUT_CLASSIFICATION	5.2947591416721667E-5	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999191966812395	WITHOUT_CLASSIFICATION	8.080331876042695E-5	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9998023519301354	WITHOUT_CLASSIFICATION	1.9764806986450505E-4	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9998676974987893	WITHOUT_CLASSIFICATION	1.3230250121062898E-4	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9994607067260578	WITHOUT_CLASSIFICATION	5.392932739422183E-4	DESIGN
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9977042491802957	WITHOUT_CLASSIFICATION	0.0022957508197042563	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9994607067260578	WITHOUT_CLASSIFICATION	5.392932739422183E-4	DESIGN
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9952499088781356	WITHOUT_CLASSIFICATION	0.004750091121864468	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9955349131700121	WITHOUT_CLASSIFICATION	0.004465086829987911	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9995112811234756	WITHOUT_CLASSIFICATION	4.887188765243176E-4	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9998194577249087	WITHOUT_CLASSIFICATION	1.8054227509136983E-4	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999321353721269	WITHOUT_CLASSIFICATION	6.786462787316246E-5	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9998958342207289	WITHOUT_CLASSIFICATION	1.041657792710193E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9998958342207289	WITHOUT_CLASSIFICATION	1.041657792710193E-4	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9998958342207289	WITHOUT_CLASSIFICATION	1.041657792710193E-4	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999606007575729	WITHOUT_CLASSIFICATION	3.939924242716494E-5	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9998546303533997	WITHOUT_CLASSIFICATION	1.4536964660030022E-4	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999290351627027	WITHOUT_CLASSIFICATION	7.096483729722437E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997141495166798	WITHOUT_CLASSIFICATION	2.8585048332028525E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997141495166798	WITHOUT_CLASSIFICATION	2.8585048332028525E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997141495166798	WITHOUT_CLASSIFICATION	2.8585048332028525E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997141495166798	WITHOUT_CLASSIFICATION	2.8585048332028525E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997141495166798	WITHOUT_CLASSIFICATION	2.8585048332028525E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997141495166798	WITHOUT_CLASSIFICATION	2.8585048332028525E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998806187290934	WITHOUT_CLASSIFICATION	1.1938127090662934E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998806187290934	WITHOUT_CLASSIFICATION	1.1938127090662934E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998806187290934	WITHOUT_CLASSIFICATION	1.1938127090662934E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998806187290934	WITHOUT_CLASSIFICATION	1.1938127090662934E-4	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998806187290934	WITHOUT_CLASSIFICATION	1.1938127090662934E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999687451864727	WITHOUT_CLASSIFICATION	3.125481352730959E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999687451864727	WITHOUT_CLASSIFICATION	3.125481352730959E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999687451864727	WITHOUT_CLASSIFICATION	3.125481352730959E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999687451864727	WITHOUT_CLASSIFICATION	3.125481352730959E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999687451864727	WITHOUT_CLASSIFICATION	3.125481352730959E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997740745954702	WITHOUT_CLASSIFICATION	2.2592540452987631E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997740745954702	WITHOUT_CLASSIFICATION	2.2592540452987631E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997740745954702	WITHOUT_CLASSIFICATION	2.2592540452987631E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997740745954702	WITHOUT_CLASSIFICATION	2.2592540452987631E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997740745954702	WITHOUT_CLASSIFICATION	2.2592540452987631E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997740745954702	WITHOUT_CLASSIFICATION	2.2592540452987631E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996338414695071	WITHOUT_CLASSIFICATION	3.66158530492935E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996338414695071	WITHOUT_CLASSIFICATION	3.66158530492935E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996338414695071	WITHOUT_CLASSIFICATION	3.66158530492935E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996338414695071	WITHOUT_CLASSIFICATION	3.66158530492935E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996338414695071	WITHOUT_CLASSIFICATION	3.66158530492935E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997516381204173	WITHOUT_CLASSIFICATION	2.483618795827067E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997516381204173	WITHOUT_CLASSIFICATION	2.483618795827067E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997516381204173	WITHOUT_CLASSIFICATION	2.483618795827067E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997516381204173	WITHOUT_CLASSIFICATION	2.483618795827067E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997516381204173	WITHOUT_CLASSIFICATION	2.483618795827067E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997798607214509	WITHOUT_CLASSIFICATION	2.2013927854925444E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997798607214509	WITHOUT_CLASSIFICATION	2.2013927854925444E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997798607214509	WITHOUT_CLASSIFICATION	2.2013927854925444E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997798607214509	WITHOUT_CLASSIFICATION	2.2013927854925444E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997798607214509	WITHOUT_CLASSIFICATION	2.2013927854925444E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.999280049003042	WITHOUT_CLASSIFICATION	7.199509969579757E-4	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999948443355434	WITHOUT_CLASSIFICATION	5.155664456603924E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999433405947551	WITHOUT_CLASSIFICATION	5.6659405244966606E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999458551541743	WITHOUT_CLASSIFICATION	5.4144845825594916E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999841559528296	WITHOUT_CLASSIFICATION	1.5844047170365893E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999878693880572	WITHOUT_CLASSIFICATION	1.213061194279165E-5	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999853852028752	WITHOUT_CLASSIFICATION	1.4614797124805095E-5	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.999986613001176	WITHOUT_CLASSIFICATION	1.3386998823953726E-5	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999850479808716	WITHOUT_CLASSIFICATION	1.495201912824457E-5	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999880061625134	WITHOUT_CLASSIFICATION	1.1993837486670549E-5	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.99998575635499	WITHOUT_CLASSIFICATION	1.424364501013846E-5	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999856861323366	WITHOUT_CLASSIFICATION	1.4313867663441178E-5	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.999988504372315	WITHOUT_CLASSIFICATION	1.1495627685006933E-5	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999869639410677	WITHOUT_CLASSIFICATION	1.3036058932441777E-5	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999854165611116	WITHOUT_CLASSIFICATION	1.4583438888443011E-5	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999863972909986	WITHOUT_CLASSIFICATION	1.3602709001418857E-5	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999857148397052	WITHOUT_CLASSIFICATION	1.4285160294842007E-5	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999851929572777	WITHOUT_CLASSIFICATION	1.4807042722391506E-5	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999815794887482	WITHOUT_CLASSIFICATION	1.8420511251843022E-5	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999823320920782	WITHOUT_CLASSIFICATION	1.766790792179501E-5	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.999986429420552	WITHOUT_CLASSIFICATION	1.3570579447921769E-5	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999835541735014	WITHOUT_CLASSIFICATION	1.644582649852373E-5	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999844162276403	WITHOUT_CLASSIFICATION	1.5583772359719966E-5	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999835857768373	WITHOUT_CLASSIFICATION	1.6414223162753067E-5	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999836189404702	WITHOUT_CLASSIFICATION	1.6381059529850875E-5	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999820921500213	WITHOUT_CLASSIFICATION	1.7907849978588764E-5	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999830343563428	WITHOUT_CLASSIFICATION	1.6965643657161273E-5	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999853070789793	WITHOUT_CLASSIFICATION	1.4692921020692966E-5	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.999982309084215	WITHOUT_CLASSIFICATION	1.7690915785043896E-5	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999858126935974	WITHOUT_CLASSIFICATION	1.418730640250494E-5	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999867171377947	WITHOUT_CLASSIFICATION	1.3282862205303975E-5	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999839371218847	WITHOUT_CLASSIFICATION	1.6062878115273945E-5	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.99998204980578	WITHOUT_CLASSIFICATION	1.795019422006445E-5	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999829907142325	WITHOUT_CLASSIFICATION	1.7009285767556275E-5	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999821972771238	WITHOUT_CLASSIFICATION	1.780272287621666E-5	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.999983062684189	WITHOUT_CLASSIFICATION	1.69373158109077E-5	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999821181073341	WITHOUT_CLASSIFICATION	1.7881892666030162E-5	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999830929922175	WITHOUT_CLASSIFICATION	1.690700778241394E-5	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999836897362565	WITHOUT_CLASSIFICATION	1.6310263743497383E-5	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999863630244288	WITHOUT_CLASSIFICATION	1.3636975571266902E-5	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999830772930641	WITHOUT_CLASSIFICATION	1.692270693584817E-5	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999821265217991	WITHOUT_CLASSIFICATION	1.7873478200981583E-5	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999828791176489	WITHOUT_CLASSIFICATION	1.7120882351008825E-5	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999848513020891	WITHOUT_CLASSIFICATION	1.5148697910845E-5	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999846818236804	WITHOUT_CLASSIFICATION	1.5318176319607235E-5	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999851357131979	WITHOUT_CLASSIFICATION	1.4864286802146165E-5	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999873760888414	WITHOUT_CLASSIFICATION	1.2623911158742817E-5	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999876173421953	WITHOUT_CLASSIFICATION	1.2382657804650705E-5	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.999985346732168	WITHOUT_CLASSIFICATION	1.465326783199994E-5	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999851479149219	WITHOUT_CLASSIFICATION	1.4852085078221538E-5	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999842628368242	WITHOUT_CLASSIFICATION	1.57371631757969E-5	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999832608437264	WITHOUT_CLASSIFICATION	1.6739156273677074E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999816773633926	WITHOUT_CLASSIFICATION	1.832263660739139E-5	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999868200718592	WITHOUT_CLASSIFICATION	1.3179928140852293E-5	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999856776235176	WITHOUT_CLASSIFICATION	1.4322376482353501E-5	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999852053687359	WITHOUT_CLASSIFICATION	1.4794631264094285E-5	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999811788473649	WITHOUT_CLASSIFICATION	1.8821152635107737E-5	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999847474619314	WITHOUT_CLASSIFICATION	1.5252538068601707E-5	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.999986127048087	WITHOUT_CLASSIFICATION	1.3872951913103503E-5	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999831743462902	WITHOUT_CLASSIFICATION	1.682565370977168E-5	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999824184993851	WITHOUT_CLASSIFICATION	1.7581500614904487E-5	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999849858091069	WITHOUT_CLASSIFICATION	1.5014190893045729E-5	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999839329340552	WITHOUT_CLASSIFICATION	1.6067065944842174E-5	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999833848305166	WITHOUT_CLASSIFICATION	1.6615169483354234E-5	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999848083666582	WITHOUT_CLASSIFICATION	1.5191633341704879E-5	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999824787895533	WITHOUT_CLASSIFICATION	1.752121044667E-5	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999852391598348	WITHOUT_CLASSIFICATION	1.4760840165080418E-5	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999852416629887	WITHOUT_CLASSIFICATION	1.4758337011371565E-5	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999834218814362	WITHOUT_CLASSIFICATION	1.657811856385283E-5	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999826375666374	WITHOUT_CLASSIFICATION	1.7362433362543795E-5	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999833377332108	WITHOUT_CLASSIFICATION	1.666226678920361E-5	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999834304785239	WITHOUT_CLASSIFICATION	1.6569521476098245E-5	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999854618911888	WITHOUT_CLASSIFICATION	1.4538108811219394E-5	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999814985598156	WITHOUT_CLASSIFICATION	1.850144018444152E-5	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999831716671586	WITHOUT_CLASSIFICATION	1.6828332841447887E-5	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999855597069338	WITHOUT_CLASSIFICATION	1.4440293066229905E-5	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999855591207939	WITHOUT_CLASSIFICATION	1.4440879206090042E-5	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.99998538551762	WITHOUT_CLASSIFICATION	1.4614482380123035E-5	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999826250084161	WITHOUT_CLASSIFICATION	1.737499158402895E-5	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999828432846268	WITHOUT_CLASSIFICATION	1.7156715373156112E-5	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999847661524157	WITHOUT_CLASSIFICATION	1.5233847584144278E-5	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.99998265656319	WITHOUT_CLASSIFICATION	1.7343436809965026E-5	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999846268876279	WITHOUT_CLASSIFICATION	1.5373112372157054E-5	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.999980891582806	WITHOUT_CLASSIFICATION	1.9108417193971695E-5	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999834656759392	WITHOUT_CLASSIFICATION	1.6534324060798698E-5	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999862988887296	WITHOUT_CLASSIFICATION	1.3701111270439804E-5	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999826362760571	WITHOUT_CLASSIFICATION	1.7363723942867818E-5	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999819662166796	WITHOUT_CLASSIFICATION	1.8033783320377446E-5	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999845984005608	WITHOUT_CLASSIFICATION	1.5401599439217065E-5	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999852292026354	WITHOUT_CLASSIFICATION	1.4770797364458932E-5	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999846326181006	WITHOUT_CLASSIFICATION	1.5367381899452797E-5	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999822019628151	WITHOUT_CLASSIFICATION	1.779803718499188E-5	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.99998287755122	WITHOUT_CLASSIFICATION	1.7122448780049892E-5	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999816688971612	WITHOUT_CLASSIFICATION	1.833110283882076E-5	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999877875550323	WITHOUT_CLASSIFICATION	1.2212444967884312E-5	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999850581819947	WITHOUT_CLASSIFICATION	1.4941818005351023E-5	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999858433096634	WITHOUT_CLASSIFICATION	1.415669033664291E-5	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999854910063791	WITHOUT_CLASSIFICATION	1.4508993620960217E-5	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999871296781665	WITHOUT_CLASSIFICATION	1.287032183354455E-5	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999844027948791	WITHOUT_CLASSIFICATION	1.5597205120898636E-5	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999837700004414	WITHOUT_CLASSIFICATION	1.6229999558586593E-5	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999837325072815	WITHOUT_CLASSIFICATION	1.6267492718523668E-5	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999827351616748	WITHOUT_CLASSIFICATION	1.7264838325224295E-5	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999856570933873	WITHOUT_CLASSIFICATION	1.4342906612709007E-5	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999822831441295	WITHOUT_CLASSIFICATION	1.7716855870401095E-5	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999840304102336	WITHOUT_CLASSIFICATION	1.5969589766399263E-5	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999854151140468	WITHOUT_CLASSIFICATION	1.4584885953248968E-5	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999893379273677	WITHOUT_CLASSIFICATION	1.0662072632386956E-5	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999886702021068	WITHOUT_CLASSIFICATION	1.1329797893206298E-5	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999883510560695	WITHOUT_CLASSIFICATION	1.1648943930534608E-5	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999861038077499	WITHOUT_CLASSIFICATION	1.3896192249978146E-5	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.999986226676033	WITHOUT_CLASSIFICATION	1.377332396707854E-5	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999866618048867	WITHOUT_CLASSIFICATION	1.3338195113344332E-5	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999859348804544	WITHOUT_CLASSIFICATION	1.4065119545482757E-5	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999834454828517	WITHOUT_CLASSIFICATION	1.655451714831645E-5	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999854852162413	WITHOUT_CLASSIFICATION	1.451478375856154E-5	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999839345723021	WITHOUT_CLASSIFICATION	1.6065427697986923E-5	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999826256037839	WITHOUT_CLASSIFICATION	1.7374396216114368E-5	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999835728214346	WITHOUT_CLASSIFICATION	1.642717856544997E-5	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999834020087984	WITHOUT_CLASSIFICATION	1.6597991201652668E-5	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.999983858574302	WITHOUT_CLASSIFICATION	1.6141425697961823E-5	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999828400489753	WITHOUT_CLASSIFICATION	1.7159951024641436E-5	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999853809903577	WITHOUT_CLASSIFICATION	1.461900964222585E-5	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999876071527025	WITHOUT_CLASSIFICATION	1.2392847297524185E-5	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999842519626925	WITHOUT_CLASSIFICATION	1.5748037307524304E-5	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999871317244987	WITHOUT_CLASSIFICATION	1.2868275501373564E-5	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999850103884362	WITHOUT_CLASSIFICATION	1.4989611563610009E-5	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999850682802536	WITHOUT_CLASSIFICATION	1.4931719746315094E-5	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999858221451077	WITHOUT_CLASSIFICATION	1.4177854892407741E-5	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999855597240827	WITHOUT_CLASSIFICATION	1.4440275917397907E-5	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999829873486804	WITHOUT_CLASSIFICATION	1.7012651319630776E-5	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.999984844013912	WITHOUT_CLASSIFICATION	1.5155986087993596E-5	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999811709121804	WITHOUT_CLASSIFICATION	1.8829087819512972E-5	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999816777862987	WITHOUT_CLASSIFICATION	1.832221370130443E-5	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999812187630761	WITHOUT_CLASSIFICATION	1.8781236923904664E-5	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999813811325338	WITHOUT_CLASSIFICATION	1.8618867466279913E-5	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999834626516224	WITHOUT_CLASSIFICATION	1.6537348377613227E-5	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999874373243804	WITHOUT_CLASSIFICATION	1.2562675619511313E-5	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999902884270453	WITHOUT_CLASSIFICATION	9.71157295476965E-6	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.999987892536557	WITHOUT_CLASSIFICATION	1.210746344308737E-5	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999883268939082	WITHOUT_CLASSIFICATION	1.1673106091782869E-5	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999891380679823	WITHOUT_CLASSIFICATION	1.0861932017703542E-5	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999884376455161	WITHOUT_CLASSIFICATION	1.156235448388662E-5	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999878830898765	WITHOUT_CLASSIFICATION	1.2116910123405743E-5	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999873902658474	WITHOUT_CLASSIFICATION	1.2609734152639828E-5	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999879520932375	WITHOUT_CLASSIFICATION	1.2047906762547947E-5	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999878348147268	WITHOUT_CLASSIFICATION	1.2165185273293631E-5	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999876780872003	WITHOUT_CLASSIFICATION	1.2321912799630758E-5	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999851543548368	WITHOUT_CLASSIFICATION	1.4845645163225704E-5	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999882244697551	WITHOUT_CLASSIFICATION	1.1775530244756516E-5	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999880885038616	WITHOUT_CLASSIFICATION	1.1911496138389497E-5	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999879829476342	WITHOUT_CLASSIFICATION	1.2017052365894817E-5	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999864091686883	WITHOUT_CLASSIFICATION	1.3590831311773458E-5	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999908372872485	WITHOUT_CLASSIFICATION	9.16271275153916E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999903754687147	WITHOUT_CLASSIFICATION	9.624531285256023E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999889796475926	WITHOUT_CLASSIFICATION	1.102035240743298E-5	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999883310023473	WITHOUT_CLASSIFICATION	1.1668997652666833E-5	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999883530514024	WITHOUT_CLASSIFICATION	1.1646948597573706E-5	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999884803752883	WITHOUT_CLASSIFICATION	1.1519624711570695E-5	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999891894809582	WITHOUT_CLASSIFICATION	1.0810519041752352E-5	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999885078523346	WITHOUT_CLASSIFICATION	1.1492147665397372E-5	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999875389535551	WITHOUT_CLASSIFICATION	1.2461046445019268E-5	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999882928772306	WITHOUT_CLASSIFICATION	1.1707122769445245E-5	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999859884706024	WITHOUT_CLASSIFICATION	1.4011529397565853E-5	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999863483545027	WITHOUT_CLASSIFICATION	1.3651645497163074E-5	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999859562010274	WITHOUT_CLASSIFICATION	1.4043798972726047E-5	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999888450912133	WITHOUT_CLASSIFICATION	1.115490878664097E-5	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999882281689317	WITHOUT_CLASSIFICATION	1.1771831068310596E-5	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999870229454371	WITHOUT_CLASSIFICATION	1.2977054562993234E-5	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999859077793333	WITHOUT_CLASSIFICATION	1.4092220666684188E-5	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999865440226225	WITHOUT_CLASSIFICATION	1.3455977377350557E-5	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999850451239437	WITHOUT_CLASSIFICATION	1.4954876056318042E-5	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999891726393367	WITHOUT_CLASSIFICATION	1.0827360663345965E-5	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999862741354149	WITHOUT_CLASSIFICATION	1.3725864585177909E-5	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999859334635807	WITHOUT_CLASSIFICATION	1.4066536419383127E-5	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999888497869153	WITHOUT_CLASSIFICATION	1.1150213084697195E-5	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999877194840816	WITHOUT_CLASSIFICATION	1.2280515918410443E-5	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999855811740698	WITHOUT_CLASSIFICATION	1.4418825930181674E-5	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999882658363506	WITHOUT_CLASSIFICATION	1.1734163649282175E-5	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999879435669283	WITHOUT_CLASSIFICATION	1.2056433071650695E-5	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999884876390586	WITHOUT_CLASSIFICATION	1.1512360941486481E-5	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999884754778576	WITHOUT_CLASSIFICATION	1.1524522142469605E-5	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999885367131479	WITHOUT_CLASSIFICATION	1.1463286852129386E-5	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999890096112319	WITHOUT_CLASSIFICATION	1.0990388768147616E-5	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.999988963148669	WITHOUT_CLASSIFICATION	1.1036851330979266E-5	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999894164623284	WITHOUT_CLASSIFICATION	1.0583537671580971E-5	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999899306472064	WITHOUT_CLASSIFICATION	1.0069352793536953E-5	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999888184581267	WITHOUT_CLASSIFICATION	1.1181541873334237E-5	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999884603974901	WITHOUT_CLASSIFICATION	1.1539602509857424E-5	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999885246463358	WITHOUT_CLASSIFICATION	1.1475353664250203E-5	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999888074523172	WITHOUT_CLASSIFICATION	1.1192547682791653E-5	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999892593703513	WITHOUT_CLASSIFICATION	1.0740629648562292E-5	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999879877380994	WITHOUT_CLASSIFICATION	1.201226190051423E-5	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999882741161307	WITHOUT_CLASSIFICATION	1.1725883869259647E-5	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999888559002342	WITHOUT_CLASSIFICATION	1.114409976575584E-5	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999880678529135	WITHOUT_CLASSIFICATION	1.1932147086495915E-5	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999875737785974	WITHOUT_CLASSIFICATION	1.2426221402601186E-5	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999872674020506	WITHOUT_CLASSIFICATION	1.273259794947336E-5	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999882827388705	WITHOUT_CLASSIFICATION	1.1717261129447994E-5	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999865429919085	WITHOUT_CLASSIFICATION	1.345700809154016E-5	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999888560014369	WITHOUT_CLASSIFICATION	1.114399856293855E-5	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999882001707315	WITHOUT_CLASSIFICATION	1.1799829268346088E-5	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999860751689914	WITHOUT_CLASSIFICATION	1.3924831008588608E-5	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999901682819666	WITHOUT_CLASSIFICATION	9.831718033393224E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999850215210495	WITHOUT_CLASSIFICATION	1.4978478950505154E-5	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.999986376047139	WITHOUT_CLASSIFICATION	1.3623952860958583E-5	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999885914080783	WITHOUT_CLASSIFICATION	1.1408591921655035E-5	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999861703551616	WITHOUT_CLASSIFICATION	1.3829644838398184E-5	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9999858261906137	WITHOUT_CLASSIFICATION	1.417380938637989E-5	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999877270625848	WITHOUT_CLASSIFICATION	1.227293741520397E-5	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999885494168577	WITHOUT_CLASSIFICATION	1.145058314232348E-5	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999886506616357	WITHOUT_CLASSIFICATION	1.134933836433162E-5	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999858923588871	WITHOUT_CLASSIFICATION	1.4107641112786778E-5	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999891790670382	WITHOUT_CLASSIFICATION	1.0820932961661825E-5	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999868863897522	WITHOUT_CLASSIFICATION	1.3113610247745763E-5	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999869115897754	WITHOUT_CLASSIFICATION	1.3088410224736026E-5	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999863653132792	WITHOUT_CLASSIFICATION	1.363468672080041E-5	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999856527647633	WITHOUT_CLASSIFICATION	1.434723523671827E-5	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.999986434949835	WITHOUT_CLASSIFICATION	1.3565050164946793E-5	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999857484460459	WITHOUT_CLASSIFICATION	1.4251553954080408E-5	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999857307331155	WITHOUT_CLASSIFICATION	1.4269266884475887E-5	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999865144908838	WITHOUT_CLASSIFICATION	1.3485509116147983E-5	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999853852590901	WITHOUT_CLASSIFICATION	1.4614740910023749E-5	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.999987386580204	WITHOUT_CLASSIFICATION	1.261341979607318E-5	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999879967410784	WITHOUT_CLASSIFICATION	1.2003258921643774E-5	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.999985895545013	WITHOUT_CLASSIFICATION	1.4104454986834987E-5	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999882577558145	WITHOUT_CLASSIFICATION	1.1742244185505751E-5	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999887332098133	WITHOUT_CLASSIFICATION	1.1266790186695257E-5	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999889814757555	WITHOUT_CLASSIFICATION	1.1018524244531734E-5	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999869001931729	WITHOUT_CLASSIFICATION	1.309980682702619E-5	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999872946987574	WITHOUT_CLASSIFICATION	1.2705301242706445E-5	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999882814415504	WITHOUT_CLASSIFICATION	1.1718558449608109E-5	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999857985832191	WITHOUT_CLASSIFICATION	1.4201416780946869E-5	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999870730836636	WITHOUT_CLASSIFICATION	1.2926916336456168E-5	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999864785263054	WITHOUT_CLASSIFICATION	1.3521473694660906E-5	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999872522220121	WITHOUT_CLASSIFICATION	1.2747777987964051E-5	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999867738185325	WITHOUT_CLASSIFICATION	1.3226181467482078E-5	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999877199217057	WITHOUT_CLASSIFICATION	1.2280078294399458E-5	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999856122524019	WITHOUT_CLASSIFICATION	1.4387747598024512E-5	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999886302519383	WITHOUT_CLASSIFICATION	1.136974806176984E-5	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.99998702500663	WITHOUT_CLASSIFICATION	1.297499337007685E-5	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999887620092542	WITHOUT_CLASSIFICATION	1.123799074577771E-5	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999852119597626	WITHOUT_CLASSIFICATION	1.4788040237378955E-5	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999862840715763	WITHOUT_CLASSIFICATION	1.37159284237307E-5	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999856384962158	WITHOUT_CLASSIFICATION	1.4361503784277578E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999859060704971	WITHOUT_CLASSIFICATION	1.4093929502979347E-5	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.999988925839229	WITHOUT_CLASSIFICATION	1.1074160771053222E-5	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999892532241658	WITHOUT_CLASSIFICATION	1.0746775834175485E-5	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999876204965993	WITHOUT_CLASSIFICATION	1.2379503400747409E-5	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999858902113322	WITHOUT_CLASSIFICATION	1.4109788667812292E-5	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999881882643974	WITHOUT_CLASSIFICATION	1.1811735602547637E-5	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.99998883345543	WITHOUT_CLASSIFICATION	1.1166544569958325E-5	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999866341391068	WITHOUT_CLASSIFICATION	1.336586089303511E-5	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999852117442447	WITHOUT_CLASSIFICATION	1.4788255755281971E-5	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999887700754027	WITHOUT_CLASSIFICATION	1.1229924597249441E-5	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999883391860902	WITHOUT_CLASSIFICATION	1.166081390969904E-5	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999878859527516	WITHOUT_CLASSIFICATION	1.2114047248452861E-5	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999888110842019	WITHOUT_CLASSIFICATION	1.118891579799438E-5	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999887889198212	WITHOUT_CLASSIFICATION	1.121108017875071E-5	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999863272427577	WITHOUT_CLASSIFICATION	1.3672757242319322E-5	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999867687900741	WITHOUT_CLASSIFICATION	1.3231209926022979E-5	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999880842995238	WITHOUT_CLASSIFICATION	1.1915700476124028E-5	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999864562665178	WITHOUT_CLASSIFICATION	1.3543733482109125E-5	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999866320894547	WITHOUT_CLASSIFICATION	1.3367910545269383E-5	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999877094802136	WITHOUT_CLASSIFICATION	1.2290519786318705E-5	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999863964556964	WITHOUT_CLASSIFICATION	1.360354430366093E-5	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999872674634478	WITHOUT_CLASSIFICATION	1.2732536552295396E-5	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999902061287625	WITHOUT_CLASSIFICATION	9.793871237364285E-6	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999856714782669	WITHOUT_CLASSIFICATION	1.432852173320457E-5	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999856998905972	WITHOUT_CLASSIFICATION	1.4300109402933517E-5	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999882292444643	WITHOUT_CLASSIFICATION	1.1770755535617294E-5	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999863280252871	WITHOUT_CLASSIFICATION	1.3671974712875759E-5	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999870523175376	WITHOUT_CLASSIFICATION	1.2947682462411441E-5	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999870900488791	WITHOUT_CLASSIFICATION	1.290995112089375E-5	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999865343991904	WITHOUT_CLASSIFICATION	1.3465600809542373E-5	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999858582126229	WITHOUT_CLASSIFICATION	1.4141787377178334E-5	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999864853896672	WITHOUT_CLASSIFICATION	1.3514610332887873E-5	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.999985822969851	WITHOUT_CLASSIFICATION	1.417703014907396E-5	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999853082716875	WITHOUT_CLASSIFICATION	1.469172831244709E-5	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999852289688622	WITHOUT_CLASSIFICATION	1.4771031137900943E-5	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999888950442303	WITHOUT_CLASSIFICATION	1.1104955769660648E-5	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999865314713483	WITHOUT_CLASSIFICATION	1.3468528651560675E-5	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999859264320682	WITHOUT_CLASSIFICATION	1.4073567931785261E-5	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999856534586398	WITHOUT_CLASSIFICATION	1.4346541360258843E-5	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.99998513582821	WITHOUT_CLASSIFICATION	1.486417179001457E-5	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999892682699577	WITHOUT_CLASSIFICATION	1.0731730042195593E-5	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.999988625163515	WITHOUT_CLASSIFICATION	1.1374836484904234E-5	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999884979052811	WITHOUT_CLASSIFICATION	1.1502094718942004E-5	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.999988838722585	WITHOUT_CLASSIFICATION	1.1161277415017577E-5	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999858738360454	WITHOUT_CLASSIFICATION	1.4126163954702391E-5	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999887478297876	WITHOUT_CLASSIFICATION	1.125217021236571E-5	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999882906581884	WITHOUT_CLASSIFICATION	1.1709341811532518E-5	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999869771931726	WITHOUT_CLASSIFICATION	1.3022806827344064E-5	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999873461553809	WITHOUT_CLASSIFICATION	1.265384461914214E-5	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9998233101550786	WITHOUT_CLASSIFICATION	1.7668984492129024E-4	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998107192307258	WITHOUT_CLASSIFICATION	1.8928076927406297E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999659886370798	WITHOUT_CLASSIFICATION	3.40113629202971E-5	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999921056536969	WITHOUT_CLASSIFICATION	7.894346303186046E-6	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9993602263452358	WITHOUT_CLASSIFICATION	6.397736547642411E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9987057021566733	WITHOUT_CLASSIFICATION	0.0012942978433267782	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998460611922304	WITHOUT_CLASSIFICATION	1.5393880776954372E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.99903123711399	WITHOUT_CLASSIFICATION	9.687628860101051E-4	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9999872380883547	WITHOUT_CLASSIFICATION	1.2761911645329456E-5	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999867288742483	WITHOUT_CLASSIFICATION	1.3271125751721145E-5	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999889824821542	WITHOUT_CLASSIFICATION	1.1017517845787608E-5	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999860657366787	WITHOUT_CLASSIFICATION	1.3934263321313026E-5	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999859720699662	WITHOUT_CLASSIFICATION	1.402793003385894E-5	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999857850207416	WITHOUT_CLASSIFICATION	1.4214979258407553E-5	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999902849384599	WITHOUT_CLASSIFICATION	9.715061540029846E-6	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999877196532925	WITHOUT_CLASSIFICATION	1.228034670750267E-5	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999857401696193	WITHOUT_CLASSIFICATION	1.425983038064178E-5	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999860340161727	WITHOUT_CLASSIFICATION	1.3965983827309035E-5	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999862581200009	WITHOUT_CLASSIFICATION	1.3741879999067129E-5	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999871407632046	WITHOUT_CLASSIFICATION	1.2859236795439793E-5	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999888970202359	WITHOUT_CLASSIFICATION	1.110297976422528E-5	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.999987249890606	WITHOUT_CLASSIFICATION	1.2750109393967775E-5	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999874544755215	WITHOUT_CLASSIFICATION	1.2545524478432809E-5	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999861142086444	WITHOUT_CLASSIFICATION	1.38857913556755E-5	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999863246835218	WITHOUT_CLASSIFICATION	1.3675316478242124E-5	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999884349269124	WITHOUT_CLASSIFICATION	1.1565073087646651E-5	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999889211507266	WITHOUT_CLASSIFICATION	1.1078849273400221E-5	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999852877844922	WITHOUT_CLASSIFICATION	1.4712215507710182E-5	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999895414674258	WITHOUT_CLASSIFICATION	1.045853257414552E-5	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999893945691587	WITHOUT_CLASSIFICATION	1.060543084119904E-5	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999896840311724	WITHOUT_CLASSIFICATION	1.0315968827631483E-5	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999982633398156	WITHOUT_CLASSIFICATION	1.7366601843597427E-6	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9994994548259288	WITHOUT_CLASSIFICATION	5.005451740711243E-4	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999966996978604	WITHOUT_CLASSIFICATION	3.300302139479935E-6	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9998892253431416	WITHOUT_CLASSIFICATION	1.1077465685841608E-4	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.999998578695137	WITHOUT_CLASSIFICATION	1.4213048630048184E-6	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9998168879453381	WITHOUT_CLASSIFICATION	1.8311205466199946E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999891779681727	WITHOUT_CLASSIFICATION	1.0822031827359535E-5	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999779140214646	WITHOUT_CLASSIFICATION	2.2085978535398672E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9992960353645947	WITHOUT_CLASSIFICATION	7.039646354052823E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9992960353645947	WITHOUT_CLASSIFICATION	7.039646354052823E-4	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9928966923122368	WITHOUT_CLASSIFICATION	0.007103307687763331	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9997721796384681	WITHOUT_CLASSIFICATION	2.2782036153186553E-4	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.999994208046247	WITHOUT_CLASSIFICATION	5.791953753048567E-6	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999934476786914	WITHOUT_CLASSIFICATION	6.552321308597972E-6	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9998298548842345	WITHOUT_CLASSIFICATION	1.701451157655041E-4	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9815017859425952	WITHOUT_CLASSIFICATION	0.018498214057404743	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9992240110703616	WITHOUT_CLASSIFICATION	7.759889296383785E-4	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9996366385033113	WITHOUT_CLASSIFICATION	3.6336149668870046E-4	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999658874634277	WITHOUT_CLASSIFICATION	3.4112536572197476E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9998801996556884	WITHOUT_CLASSIFICATION	1.1980034431162668E-4	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9959440574410777	WITHOUT_CLASSIFICATION	0.004055942558922295	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9944891325265774	WITHOUT_CLASSIFICATION	0.005510867473422597	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999436003796582	WITHOUT_CLASSIFICATION	5.639962034169842E-5	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999999530796317	WITHOUT_CLASSIFICATION	4.69203681995349E-8	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999544525696985	WITHOUT_CLASSIFICATION	4.5547430301602885E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999544525696985	WITHOUT_CLASSIFICATION	4.5547430301602885E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9996633919689555	WITHOUT_CLASSIFICATION	3.366080310445471E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999859978369059	WITHOUT_CLASSIFICATION	1.4002163094154116E-5	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.999977086197169	WITHOUT_CLASSIFICATION	2.2913802831007897E-5	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9998229842266538	WITHOUT_CLASSIFICATION	1.770157733462497E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9927137935726164	WITHOUT_CLASSIFICATION	0.007286206427383636	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999851257104608	WITHOUT_CLASSIFICATION	1.4874289539211443E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999906535750217	WITHOUT_CLASSIFICATION	9.3464249782407E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999851257104608	WITHOUT_CLASSIFICATION	1.4874289539211443E-5	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999931271810996	WITHOUT_CLASSIFICATION	6.872818900494766E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9958567520253647	WITHOUT_CLASSIFICATION	0.004143247974635215	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9981853714947727	WITHOUT_CLASSIFICATION	0.0018146285052272272	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9982419992377414	WITHOUT_CLASSIFICATION	0.0017580007622586184	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999358762468	WITHOUT_CLASSIFICATION	6.412375319993959E-5	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9993433548170088	WITHOUT_CLASSIFICATION	6.566451829912996E-4	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999993808181781	WITHOUT_CLASSIFICATION	6.191818218982459E-7	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999950691049054	WITHOUT_CLASSIFICATION	4.930895094537831E-6	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999993162734292	WITHOUT_CLASSIFICATION	6.83726570815858E-6	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9962077495570375	WITHOUT_CLASSIFICATION	0.003792250442962441	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.8944086139252874	WITHOUT_CLASSIFICATION	0.10559138607471256	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9998713325983868	WITHOUT_CLASSIFICATION	1.2866740161322993E-4	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999196151674843	WITHOUT_CLASSIFICATION	8.038483251569411E-5	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9987315049601878	WITHOUT_CLASSIFICATION	0.0012684950398122268	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999975868728016	WITHOUT_CLASSIFICATION	2.4131271984055994E-5	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999975868728016	WITHOUT_CLASSIFICATION	2.4131271984055994E-5	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999661716187481	WITHOUT_CLASSIFICATION	3.382838125187409E-5	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999058939954542	WITHOUT_CLASSIFICATION	9.410600454594782E-5	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999934195113743	WITHOUT_CLASSIFICATION	6.580488625568915E-6	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.99999228061138	WITHOUT_CLASSIFICATION	7.719388620003221E-6	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999955380586996	WITHOUT_CLASSIFICATION	4.461941300518679E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999851257104608	WITHOUT_CLASSIFICATION	1.4874289539211443E-5	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.998814092950623	WITHOUT_CLASSIFICATION	0.0011859070493770536	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999914476317834	WITHOUT_CLASSIFICATION	8.55236821671847E-6	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999553277917047	WITHOUT_CLASSIFICATION	4.467220829532107E-5	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9982795322511394	WITHOUT_CLASSIFICATION	0.0017204677488606179	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999985347828215	WITHOUT_CLASSIFICATION	1.4652171784744763E-6	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999989639088029	WITHOUT_CLASSIFICATION	1.0360911970164693E-6	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999955333813281	WITHOUT_CLASSIFICATION	4.466618671882644E-6	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999829311545156	WITHOUT_CLASSIFICATION	1.7068845484366048E-5	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9354626260757611	WITHOUT_CLASSIFICATION	0.06453737392423892	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9962419579742856	WITHOUT_CLASSIFICATION	0.00375804202571453	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.999986001201624	WITHOUT_CLASSIFICATION	1.3998798376138092E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9993776257941289	WITHOUT_CLASSIFICATION	6.223742058710643E-4	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9933365148800495	WITHOUT_CLASSIFICATION	0.006663485119950484	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999413827387958	WITHOUT_CLASSIFICATION	5.8617261204071317E-5	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.8235303546477982	DESIGN	0.1764696453522018	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9997025392498462	WITHOUT_CLASSIFICATION	2.974607501538808E-4	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9998499763584354	WITHOUT_CLASSIFICATION	1.500236415646735E-4	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9998552073185077	WITHOUT_CLASSIFICATION	1.4479268149227638E-4	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999806512687841	WITHOUT_CLASSIFICATION	1.9348731215855672E-5	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999499265892355	WITHOUT_CLASSIFICATION	5.007341076443938E-5	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999806549012159	WITHOUT_CLASSIFICATION	1.9345098784155774E-5	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9997683177262218	WITHOUT_CLASSIFICATION	2.316822737782694E-4	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999694844021821	WITHOUT_CLASSIFICATION	3.0515597817821042E-5	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999782216735825	WITHOUT_CLASSIFICATION	2.177832641754842E-5	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999627657144752	WITHOUT_CLASSIFICATION	3.723428552472889E-5	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999849134687959	WITHOUT_CLASSIFICATION	1.5086531204020437E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999651807825415	WITHOUT_CLASSIFICATION	3.481921745862048E-5	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9979909841874873	WITHOUT_CLASSIFICATION	0.0020090158125126846	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9977057166015008	WITHOUT_CLASSIFICATION	0.0022942833984992876	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999647998866146	WITHOUT_CLASSIFICATION	3.520011338536112E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9998779679476409	WITHOUT_CLASSIFICATION	1.2203205235906827E-4	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.999988930003628	WITHOUT_CLASSIFICATION	1.1069996371986692E-5	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9988262687468361	WITHOUT_CLASSIFICATION	0.0011737312531638665	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9995338653859427	WITHOUT_CLASSIFICATION	4.661346140573264E-4	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9996050908955889	WITHOUT_CLASSIFICATION	3.949091044111619E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999785647536102	WITHOUT_CLASSIFICATION	2.1435246389732555E-5	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9998976015216204	WITHOUT_CLASSIFICATION	1.023984783794589E-4	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9999978399005118	WITHOUT_CLASSIFICATION	2.160099488187125E-6	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9999738180242451	WITHOUT_CLASSIFICATION	2.6181975754963525E-5	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9993740067449591	WITHOUT_CLASSIFICATION	6.259932550409571E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.99903123711399	WITHOUT_CLASSIFICATION	9.687628860101051E-4	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9995853595811564	WITHOUT_CLASSIFICATION	4.146404188435969E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999524645327175	WITHOUT_CLASSIFICATION	4.753546728243259E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999968920564763	WITHOUT_CLASSIFICATION	3.1079435237375755E-6	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999586470752126	WITHOUT_CLASSIFICATION	4.135292478726767E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9958567520253647	WITHOUT_CLASSIFICATION	0.004143247974635215	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9996320826855586	WITHOUT_CLASSIFICATION	3.6791731444147714E-4	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9989268486050679	WITHOUT_CLASSIFICATION	0.0010731513949322033	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.999121173929669	WITHOUT_CLASSIFICATION	8.788260703309308E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999164557956429	WITHOUT_CLASSIFICATION	8.354420435706499E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999164557956429	WITHOUT_CLASSIFICATION	8.354420435706499E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998688150909009	WITHOUT_CLASSIFICATION	1.3118490909920538E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998688150909009	WITHOUT_CLASSIFICATION	1.3118490909920538E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998688150909009	WITHOUT_CLASSIFICATION	1.3118490909920538E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999942119355834	WITHOUT_CLASSIFICATION	5.788064416681791E-6	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999942119355834	WITHOUT_CLASSIFICATION	5.788064416681791E-6	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999922532621968	WITHOUT_CLASSIFICATION	7.746737803242138E-6	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999922532621968	WITHOUT_CLASSIFICATION	7.746737803242138E-6	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999004919095705	WITHOUT_CLASSIFICATION	9.950809042946938E-5	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999803439096281	WITHOUT_CLASSIFICATION	1.9656090371885464E-5	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999725316006329	WITHOUT_CLASSIFICATION	2.7468399367003916E-5	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999725316006329	WITHOUT_CLASSIFICATION	2.7468399367003916E-5	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9963155560717838	WITHOUT_CLASSIFICATION	0.0036844439282163236	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999903630754648	WITHOUT_CLASSIFICATION	9.636924535101497E-6	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9913337634313552	WITHOUT_CLASSIFICATION	0.008666236568644905	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9996789852946082	WITHOUT_CLASSIFICATION	3.2101470539186124E-4	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9995985184148336	WITHOUT_CLASSIFICATION	4.0148158516640044E-4	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999859030330938	WITHOUT_CLASSIFICATION	1.4096966906271651E-5	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.99972462463421	WITHOUT_CLASSIFICATION	2.7537536579002415E-4	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9920531574326286	WITHOUT_CLASSIFICATION	0.007946842567371333	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9996513575685524	WITHOUT_CLASSIFICATION	3.486424314476165E-4	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.999632294716781	WITHOUT_CLASSIFICATION	3.6770528321907093E-4	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999294399553428	WITHOUT_CLASSIFICATION	7.056004465720758E-5	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999890637569072	WITHOUT_CLASSIFICATION	1.0936243092762427E-5	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999009360960609	WITHOUT_CLASSIFICATION	9.906390393909615E-5	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9999891519695706	WITHOUT_CLASSIFICATION	1.0848030429489905E-5	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999734700651532	WITHOUT_CLASSIFICATION	2.65299348467254E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9986571823797693	WITHOUT_CLASSIFICATION	0.0013428176202307529	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999162313790767	WITHOUT_CLASSIFICATION	8.376862092333204E-5	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9997835791860664	WITHOUT_CLASSIFICATION	2.1642081393363012E-4	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9997847071024122	WITHOUT_CLASSIFICATION	2.1529289758769952E-4	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9983756233638765	WITHOUT_CLASSIFICATION	0.0016243766361234682	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998641759202292	WITHOUT_CLASSIFICATION	1.3582407977071753E-4	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998395563648373	WITHOUT_CLASSIFICATION	1.604436351626057E-4	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9998252518765872	WITHOUT_CLASSIFICATION	1.7474812341288165E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999893678169049	WITHOUT_CLASSIFICATION	1.0632183095116932E-4	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999833047753224	WITHOUT_CLASSIFICATION	1.6695224677664398E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999921707414527	WITHOUT_CLASSIFICATION	7.829258547142955E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999959768438842	WITHOUT_CLASSIFICATION	4.023156115785574E-5	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999855592132229	WITHOUT_CLASSIFICATION	1.4440786777094962E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999381571863937	WITHOUT_CLASSIFICATION	6.18428136062595E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999902894735404	WITHOUT_CLASSIFICATION	9.710526459677156E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999995446246352	WITHOUT_CLASSIFICATION	4.553753648041286E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999550749316908	WITHOUT_CLASSIFICATION	4.4925068309269456E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999929459897224	WITHOUT_CLASSIFICATION	7.054010277611389E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961128444474	WITHOUT_CLASSIFICATION	3.887155552552358E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999929459897224	WITHOUT_CLASSIFICATION	7.054010277611389E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999929459897224	WITHOUT_CLASSIFICATION	7.054010277611389E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999929459897224	WITHOUT_CLASSIFICATION	7.054010277611389E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999929459897224	WITHOUT_CLASSIFICATION	7.054010277611389E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999929459897224	WITHOUT_CLASSIFICATION	7.054010277611389E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999929459897224	WITHOUT_CLASSIFICATION	7.054010277611389E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961128444474	WITHOUT_CLASSIFICATION	3.887155552552358E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961128444474	WITHOUT_CLASSIFICATION	3.887155552552358E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961128444474	WITHOUT_CLASSIFICATION	3.887155552552358E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961128444474	WITHOUT_CLASSIFICATION	3.887155552552358E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961128444474	WITHOUT_CLASSIFICATION	3.887155552552358E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961128444474	WITHOUT_CLASSIFICATION	3.887155552552358E-6	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999925300267618	WITHOUT_CLASSIFICATION	7.469973238237347E-6	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.999764115208763	WITHOUT_CLASSIFICATION	2.3588479123700138E-4	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9998380972012192	WITHOUT_CLASSIFICATION	1.619027987807284E-4	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999855071248804	WITHOUT_CLASSIFICATION	1.4492875119573457E-5	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9996794467979333	WITHOUT_CLASSIFICATION	3.205532020666055E-4	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999993304337115	WITHOUT_CLASSIFICATION	6.695662885044153E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999979657269171	WITHOUT_CLASSIFICATION	2.0342730829268177E-6	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999996496095525	WITHOUT_CLASSIFICATION	3.5039044750816665E-6	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999863701367397	WITHOUT_CLASSIFICATION	1.3629863260269256E-5	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999787907296357	WITHOUT_CLASSIFICATION	2.1209270364230983E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999946870568232	WITHOUT_CLASSIFICATION	5.312943176883803E-6	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.99998137787636	WITHOUT_CLASSIFICATION	1.862212364000538E-5	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999768478337271	WITHOUT_CLASSIFICATION	2.3152166272962238E-5	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999995027805403	WITHOUT_CLASSIFICATION	4.972194597606769E-7	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999336068448267	WITHOUT_CLASSIFICATION	6.63931551733388E-5	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9993670286018627	WITHOUT_CLASSIFICATION	6.329713981373151E-4	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999967323155309	WITHOUT_CLASSIFICATION	3.2676844690761728E-6	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999965801552836	WITHOUT_CLASSIFICATION	3.419844716325883E-6	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999815179418643	WITHOUT_CLASSIFICATION	1.848205813569064E-5	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999998566639854	WITHOUT_CLASSIFICATION	1.4333601460352802E-6	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999995390824536	WITHOUT_CLASSIFICATION	4.6091754635733585E-7	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999488941968362	WITHOUT_CLASSIFICATION	5.1105803163877934E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999906535750217	WITHOUT_CLASSIFICATION	9.3464249782407E-6	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.999996805573868	WITHOUT_CLASSIFICATION	3.1944261320506566E-6	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9998052211324665	WITHOUT_CLASSIFICATION	1.9477886753336047E-4	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999997493275364	WITHOUT_CLASSIFICATION	2.506724636099699E-6	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.999963905549694	WITHOUT_CLASSIFICATION	3.609445030592021E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999996287403072	WITHOUT_CLASSIFICATION	3.7125969272356603E-7	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999787417705629	WITHOUT_CLASSIFICATION	2.1258229437153435E-5	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9996012705464907	WITHOUT_CLASSIFICATION	3.98729453509225E-4	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999950752978859	WITHOUT_CLASSIFICATION	4.92470211417002E-6	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999931263338253	WITHOUT_CLASSIFICATION	6.8736661747401275E-6	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9994295051061958	WITHOUT_CLASSIFICATION	5.704948938042865E-4	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999970565418935	WITHOUT_CLASSIFICATION	2.9434581065674402E-6	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999490795273493	WITHOUT_CLASSIFICATION	5.0920472650591626E-5	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998585559427612	WITHOUT_CLASSIFICATION	1.4144405723874576E-4	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999469898039185	WITHOUT_CLASSIFICATION	5.3010196081642746E-5	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999750806239115	WITHOUT_CLASSIFICATION	2.4919376088495907E-5	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999990383183829	WITHOUT_CLASSIFICATION	9.61681617165617E-7	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999862514217682	WITHOUT_CLASSIFICATION	1.3748578231826918E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998751556499517	WITHOUT_CLASSIFICATION	1.2484435004826898E-4	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999457765602463	WITHOUT_CLASSIFICATION	5.422343975367337E-5	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999991839122844	WITHOUT_CLASSIFICATION	8.160877156900493E-7	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998995833725944	WITHOUT_CLASSIFICATION	1.0041662740558199E-4	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9998995833725944	WITHOUT_CLASSIFICATION	1.0041662740558199E-4	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999694357466989	WITHOUT_CLASSIFICATION	3.0564253301161466E-5	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999694357466989	WITHOUT_CLASSIFICATION	3.0564253301161466E-5	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9989786245111646	WITHOUT_CLASSIFICATION	0.0010213754888355134	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9989786245111646	WITHOUT_CLASSIFICATION	0.0010213754888355134	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999997841138248	WITHOUT_CLASSIFICATION	2.1588617514020624E-7	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.999925007172374	WITHOUT_CLASSIFICATION	7.499282762600389E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.999995433804634	WITHOUT_CLASSIFICATION	4.566195365941746E-6	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999930702302513	WITHOUT_CLASSIFICATION	6.929769748814058E-6	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999939971813006	WITHOUT_CLASSIFICATION	6.00281869946979E-6	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9936724830622594	WITHOUT_CLASSIFICATION	0.006327516937740646	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9998723814762024	WITHOUT_CLASSIFICATION	1.2761852379768792E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999961777194207	WITHOUT_CLASSIFICATION	3.822280579249145E-6	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999825257734073	WITHOUT_CLASSIFICATION	1.7474226592701636E-5	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999564886177056	WITHOUT_CLASSIFICATION	4.351138229433043E-5	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.999950767940378	WITHOUT_CLASSIFICATION	4.923205962212061E-5	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999880015995015	WITHOUT_CLASSIFICATION	1.1998400498442815E-5	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9993213005243112	WITHOUT_CLASSIFICATION	6.786994756889008E-4	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9997119277587482	WITHOUT_CLASSIFICATION	2.880722412518582E-4	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9996363448613838	WITHOUT_CLASSIFICATION	3.6365513861624993E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999143703988506	WITHOUT_CLASSIFICATION	8.562960114946367E-5	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999958389491844	WITHOUT_CLASSIFICATION	4.16105081560133E-6	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999972792391891	WITHOUT_CLASSIFICATION	2.720760810900076E-6	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999833822780906	WITHOUT_CLASSIFICATION	1.661772190940957E-5	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.999908913519856	WITHOUT_CLASSIFICATION	9.108648014390398E-5	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9998718066183044	WITHOUT_CLASSIFICATION	1.28193381695547E-4	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9994657592741685	WITHOUT_CLASSIFICATION	5.342407258314648E-4	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999428458940139	WITHOUT_CLASSIFICATION	5.715410598604682E-5	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9996883621177004	WITHOUT_CLASSIFICATION	3.1163788229963583E-4	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999543167534718	WITHOUT_CLASSIFICATION	4.568324652825441E-5	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9997748584757233	WITHOUT_CLASSIFICATION	2.2514152427660788E-4	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9997981916961372	WITHOUT_CLASSIFICATION	2.0180830386273393E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999942582749581	WITHOUT_CLASSIFICATION	5.7417250418351416E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999942582749581	WITHOUT_CLASSIFICATION	5.7417250418351416E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999942582749581	WITHOUT_CLASSIFICATION	5.7417250418351416E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9990465700297814	WITHOUT_CLASSIFICATION	9.53429970218506E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9990465700297814	WITHOUT_CLASSIFICATION	9.53429970218506E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999413827387958	WITHOUT_CLASSIFICATION	5.8617261204071317E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999413827387958	WITHOUT_CLASSIFICATION	5.8617261204071317E-5	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999877492512237	WITHOUT_CLASSIFICATION	1.2250748776166457E-5	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9986784530842931	WITHOUT_CLASSIFICATION	0.0013215469157069146	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9998901428653092	WITHOUT_CLASSIFICATION	1.0985713469083021E-4	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9998881634142743	WITHOUT_CLASSIFICATION	1.1183658572566952E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999942582749581	WITHOUT_CLASSIFICATION	5.7417250418351416E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999942582749581	WITHOUT_CLASSIFICATION	5.7417250418351416E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999942582749581	WITHOUT_CLASSIFICATION	5.7417250418351416E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9990465700297814	WITHOUT_CLASSIFICATION	9.53429970218506E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9990465700297814	WITHOUT_CLASSIFICATION	9.53429970218506E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9990465700297814	WITHOUT_CLASSIFICATION	9.53429970218506E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999413827387958	WITHOUT_CLASSIFICATION	5.8617261204071317E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999413827387958	WITHOUT_CLASSIFICATION	5.8617261204071317E-5	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999742053099422	WITHOUT_CLASSIFICATION	2.579469005784435E-5	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9959534127905535	WITHOUT_CLASSIFICATION	0.004046587209446408	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9993105586952818	WITHOUT_CLASSIFICATION	6.894413047181716E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9993105586952818	WITHOUT_CLASSIFICATION	6.894413047181716E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9993105586952818	WITHOUT_CLASSIFICATION	6.894413047181716E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9993105586952818	WITHOUT_CLASSIFICATION	6.894413047181716E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9993105586952818	WITHOUT_CLASSIFICATION	6.894413047181716E-4	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9998464737444547	WITHOUT_CLASSIFICATION	1.535262555452205E-4	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9995362950876637	WITHOUT_CLASSIFICATION	4.6370491233630937E-4	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999962226343125	WITHOUT_CLASSIFICATION	3.7773656875209835E-6	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.99998545683278	WITHOUT_CLASSIFICATION	1.4543167220111155E-5	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999889436909203	WITHOUT_CLASSIFICATION	1.105630907971236E-5	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.999936825473703	WITHOUT_CLASSIFICATION	6.31745262970015E-5	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999732842215293	WITHOUT_CLASSIFICATION	2.6715778470755666E-5	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9995111380055303	WITHOUT_CLASSIFICATION	4.88861994469664E-4	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999514772662432	WITHOUT_CLASSIFICATION	4.852273375679656E-5	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999266911396077	WITHOUT_CLASSIFICATION	7.330886039216493E-5	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999942601016375	WITHOUT_CLASSIFICATION	5.739898362525628E-6	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999736341719057	WITHOUT_CLASSIFICATION	2.6365828094302164E-5	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999121134978857	WITHOUT_CLASSIFICATION	8.788650211429543E-5	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9998956645967269	WITHOUT_CLASSIFICATION	1.0433540327313618E-4	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9954292494161808	WITHOUT_CLASSIFICATION	0.0045707505838191425	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9990615448897828	WITHOUT_CLASSIFICATION	9.384551102171489E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9990615448897828	WITHOUT_CLASSIFICATION	9.384551102171489E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9990615448897828	WITHOUT_CLASSIFICATION	9.384551102171489E-4	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9995454846130603	WITHOUT_CLASSIFICATION	4.5451538693982557E-4	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.999545433603913	WITHOUT_CLASSIFICATION	4.545663960870185E-4	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999958035917484	WITHOUT_CLASSIFICATION	4.196408251650597E-6	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999357343773896	WITHOUT_CLASSIFICATION	6.426562261050227E-5	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9998250865514091	WITHOUT_CLASSIFICATION	1.7491344859085832E-4	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999865470213071	WITHOUT_CLASSIFICATION	1.345297869298731E-5	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.999960586037477	WITHOUT_CLASSIFICATION	3.9413962523122813E-5	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9999210401898071	WITHOUT_CLASSIFICATION	7.895981019296406E-5	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999580807877664	WITHOUT_CLASSIFICATION	4.1919212233595874E-5	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999882156905675	WITHOUT_CLASSIFICATION	1.1784309432437097E-5	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999776477950841	WITHOUT_CLASSIFICATION	2.2352204915849824E-5	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9998940393810326	WITHOUT_CLASSIFICATION	1.0596061896738257E-4	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999853485979099	WITHOUT_CLASSIFICATION	1.4651402090005388E-5	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.999982750519642	WITHOUT_CLASSIFICATION	1.7249480358043836E-5	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999875177283228	WITHOUT_CLASSIFICATION	1.248227167724724E-5	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999757664667728	WITHOUT_CLASSIFICATION	2.4233533227174512E-5	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999589345713903	WITHOUT_CLASSIFICATION	4.1065428609654815E-5	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999448670173462	WITHOUT_CLASSIFICATION	5.513298265380207E-5	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999220770854692	WITHOUT_CLASSIFICATION	7.79229145307433E-5	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9997848888729435	WITHOUT_CLASSIFICATION	2.1511112705660857E-4	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9998792472382182	WITHOUT_CLASSIFICATION	1.2075276178186796E-4	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999137678531093	WITHOUT_CLASSIFICATION	8.623214689067464E-5	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9993896010432551	WITHOUT_CLASSIFICATION	6.10398956744766E-4	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999285307328687	WITHOUT_CLASSIFICATION	7.146926713137808E-5	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999735327839125	WITHOUT_CLASSIFICATION	2.6467216087513957E-5	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999687811033166	WITHOUT_CLASSIFICATION	3.121889668351802E-5	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999616055696657	WITHOUT_CLASSIFICATION	3.839443033423446E-5	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999195447989482	WITHOUT_CLASSIFICATION	8.045520105188067E-5	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9975555108739762	WITHOUT_CLASSIFICATION	0.0024444891260237468	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9998021734398341	WITHOUT_CLASSIFICATION	1.9782656016597932E-4	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9998306878789375	WITHOUT_CLASSIFICATION	1.693121210625543E-4	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9997953428898987	WITHOUT_CLASSIFICATION	2.0465711010138769E-4	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9997841224367748	WITHOUT_CLASSIFICATION	2.1587756322521485E-4	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9997744037212344	WITHOUT_CLASSIFICATION	2.255962787656142E-4	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9997825932584603	WITHOUT_CLASSIFICATION	2.1740674153966982E-4	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9997739179522799	WITHOUT_CLASSIFICATION	2.2608204772018556E-4	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9998069627299926	WITHOUT_CLASSIFICATION	1.9303727000745562E-4	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999783780588802	WITHOUT_CLASSIFICATION	2.1621941119770424E-5	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9998253765609122	WITHOUT_CLASSIFICATION	1.7462343908781236E-4	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9933432811439512	WITHOUT_CLASSIFICATION	0.006656718856048862	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9970670359675385	WITHOUT_CLASSIFICATION	0.0029329640324614065	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999853734062474	WITHOUT_CLASSIFICATION	1.4626593752550006E-5	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999861901647779	WITHOUT_CLASSIFICATION	1.3809835222175335E-5	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999947717783909	WITHOUT_CLASSIFICATION	5.228221609085246E-6	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9998909123881181	WITHOUT_CLASSIFICATION	1.0908761188187982E-4	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9993289466880179	WITHOUT_CLASSIFICATION	6.71053311982077E-4	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998133328698605	WITHOUT_CLASSIFICATION	1.8666713013943577E-4	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998133328698605	WITHOUT_CLASSIFICATION	1.8666713013943577E-4	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.999948240159416	WITHOUT_CLASSIFICATION	5.1759840584030364E-5	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999999136189041	WITHOUT_CLASSIFICATION	8.638109599043798E-8	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9988709999382213	WITHOUT_CLASSIFICATION	0.0011290000617787661	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9982448128475945	WITHOUT_CLASSIFICATION	0.0017551871524054661	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9997021879731339	WITHOUT_CLASSIFICATION	2.9781202686603414E-4	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999902012650598	WITHOUT_CLASSIFICATION	9.798734940279748E-6	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9995250966937728	WITHOUT_CLASSIFICATION	4.7490330622719447E-4	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999996844769974	WITHOUT_CLASSIFICATION	3.1552300265437355E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999283811902714	WITHOUT_CLASSIFICATION	7.161880972857303E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999966447435852	WITHOUT_CLASSIFICATION	3.355256414860892E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9994390178059835	WITHOUT_CLASSIFICATION	5.609821940165029E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9994390178059835	WITHOUT_CLASSIFICATION	5.609821940165029E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9994390178059835	WITHOUT_CLASSIFICATION	5.609821940165029E-4	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9994390178059835	WITHOUT_CLASSIFICATION	5.609821940165029E-4	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999889219842648	WITHOUT_CLASSIFICATION	1.107801573521464E-5	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999145587306577	WITHOUT_CLASSIFICATION	8.544126934233614E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9995694043788579	WITHOUT_CLASSIFICATION	4.305956211421127E-4	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9999929547358404	WITHOUT_CLASSIFICATION	7.045264159705795E-6	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9928995629164769	WITHOUT_CLASSIFICATION	0.007100437083523245	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999725225514309	WITHOUT_CLASSIFICATION	2.747744856919946E-5	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.99999519252471	WITHOUT_CLASSIFICATION	4.807475289922631E-6	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9996692002837358	WITHOUT_CLASSIFICATION	3.307997162642326E-4	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9996692002837358	WITHOUT_CLASSIFICATION	3.307997162642326E-4	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9996916132215656	WITHOUT_CLASSIFICATION	3.083867784344211E-4	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999915855842345	WITHOUT_CLASSIFICATION	8.414415765387336E-6	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999950341403101	WITHOUT_CLASSIFICATION	4.965859689898575E-6	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9882723462200581	WITHOUT_CLASSIFICATION	0.011727653779941867	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9882723462200581	WITHOUT_CLASSIFICATION	0.011727653779941867	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9996231980030585	WITHOUT_CLASSIFICATION	3.768019969414601E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999352554378179	WITHOUT_CLASSIFICATION	6.474456218198808E-5	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999352554378179	WITHOUT_CLASSIFICATION	6.474456218198808E-5	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999542013537249	WITHOUT_CLASSIFICATION	4.5798646275018484E-5	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9997474624661783	WITHOUT_CLASSIFICATION	2.5253753382175156E-4	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999898214256274	WITHOUT_CLASSIFICATION	1.0178574372667207E-5	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9998178101825764	WITHOUT_CLASSIFICATION	1.8218981742366698E-4	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9987738519963578	WITHOUT_CLASSIFICATION	0.0012261480036422148	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9997830594363679	WITHOUT_CLASSIFICATION	2.1694056363202066E-4	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999496365212186	WITHOUT_CLASSIFICATION	5.0363478781383536E-5	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999265442102294	WITHOUT_CLASSIFICATION	7.345578977063028E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999963828394076	WITHOUT_CLASSIFICATION	3.617160592322261E-6	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999962020374367	WITHOUT_CLASSIFICATION	3.797962563274324E-6	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.999979453220808	WITHOUT_CLASSIFICATION	2.0546779191986015E-5	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9998880150671172	WITHOUT_CLASSIFICATION	1.1198493288275574E-4	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9965072358082899	WITHOUT_CLASSIFICATION	0.0034927641917100187	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9970300085317696	WITHOUT_CLASSIFICATION	0.0029699914682304192	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9997697157105757	WITHOUT_CLASSIFICATION	2.3028428942434355E-4	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9980551953743817	WITHOUT_CLASSIFICATION	0.0019448046256183408	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999471841381379	WITHOUT_CLASSIFICATION	5.2815861862076656E-5	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999171757243568	WITHOUT_CLASSIFICATION	8.282427564319878E-5	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999852006282521	WITHOUT_CLASSIFICATION	1.4799371747813785E-5	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.999997560238521	WITHOUT_CLASSIFICATION	2.439761478956749E-6	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9998397203558014	WITHOUT_CLASSIFICATION	1.6027964419857354E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999798309406605	WITHOUT_CLASSIFICATION	2.01690593395198E-5	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999932899225832	WITHOUT_CLASSIFICATION	6.710077416770957E-6	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9973909086889575	WITHOUT_CLASSIFICATION	0.002609091311042355	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999910996886793	WITHOUT_CLASSIFICATION	8.90031132077571E-6	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9995984663156563	WITHOUT_CLASSIFICATION	4.015336843437772E-4	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999756334853045	WITHOUT_CLASSIFICATION	2.43665146955424E-5	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9997539431447064	WITHOUT_CLASSIFICATION	2.460568552935499E-4	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9932510694587986	WITHOUT_CLASSIFICATION	0.006748930541201429	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999923223776361	WITHOUT_CLASSIFICATION	7.677622363932006E-6	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9998854056444659	WITHOUT_CLASSIFICATION	1.1459435553407396E-4	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999880303340651	WITHOUT_CLASSIFICATION	1.1969665934881332E-5	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9914406848954839	WITHOUT_CLASSIFICATION	0.00855931510451617	DESIGN
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999902766808135	WITHOUT_CLASSIFICATION	9.723319186455097E-6	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999607844683527	WITHOUT_CLASSIFICATION	3.921553164739222E-5	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9437606621431225	WITHOUT_CLASSIFICATION	0.05623933785687765	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999279716784036	WITHOUT_CLASSIFICATION	7.20283215963458E-5	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999454415993041	WITHOUT_CLASSIFICATION	5.455840069590606E-5	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999940466686997	WITHOUT_CLASSIFICATION	5.953331300163743E-6	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9437606621431225	WITHOUT_CLASSIFICATION	0.05623933785687765	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999279716784036	WITHOUT_CLASSIFICATION	7.20283215963458E-5	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999985521613553	WITHOUT_CLASSIFICATION	1.4478386446930076E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998140067107554	WITHOUT_CLASSIFICATION	1.8599328924467774E-4	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998140067107554	WITHOUT_CLASSIFICATION	1.8599328924467774E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999898173071787	WITHOUT_CLASSIFICATION	1.0182692821189618E-5	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999993203436325	WITHOUT_CLASSIFICATION	6.79656367563771E-7	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9998999020921412	WITHOUT_CLASSIFICATION	1.0009790785888833E-4	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999958798433124	WITHOUT_CLASSIFICATION	4.1201566876137374E-5	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998327589352647	WITHOUT_CLASSIFICATION	1.6724106473521276E-4	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9993855256086984	WITHOUT_CLASSIFICATION	6.144743913015553E-4	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999736960811061	WITHOUT_CLASSIFICATION	2.6303918893901194E-5	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999694991275561	WITHOUT_CLASSIFICATION	3.0500872443956613E-5	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9998722606956639	WITHOUT_CLASSIFICATION	1.2773930433611323E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999444765011922	WITHOUT_CLASSIFICATION	5.552349880781126E-5	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999907370734696	WITHOUT_CLASSIFICATION	9.26292653027203E-6	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999960714708184	WITHOUT_CLASSIFICATION	3.9285291816303E-6	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999161563727075	WITHOUT_CLASSIFICATION	8.384362729246979E-5	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999779984865523	WITHOUT_CLASSIFICATION	2.2001513447680167E-5	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999779984865523	WITHOUT_CLASSIFICATION	2.2001513447680167E-5	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999721411004776	WITHOUT_CLASSIFICATION	2.785889952249372E-5	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999721411004776	WITHOUT_CLASSIFICATION	2.785889952249372E-5	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.999994432544945	WITHOUT_CLASSIFICATION	5.567455054958023E-6	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999964650807202	WITHOUT_CLASSIFICATION	3.5349192798684997E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999827391272877	WITHOUT_CLASSIFICATION	1.7260872712229632E-5	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999737548507868	WITHOUT_CLASSIFICATION	2.624514921326134E-5	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999762832465746	WITHOUT_CLASSIFICATION	2.3716753425474842E-5	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999947223483284	WITHOUT_CLASSIFICATION	5.277651671627081E-6	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9998999020921412	WITHOUT_CLASSIFICATION	1.0009790785888833E-4	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999958798433124	WITHOUT_CLASSIFICATION	4.1201566876137374E-5	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9998722606956639	WITHOUT_CLASSIFICATION	1.2773930433611323E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999444765011922	WITHOUT_CLASSIFICATION	5.552349880781126E-5	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999747586153817	WITHOUT_CLASSIFICATION	2.524138461828682E-5	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999991398487927	WITHOUT_CLASSIFICATION	8.601512073524554E-7	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9998789857389566	WITHOUT_CLASSIFICATION	1.2101426104338406E-4	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.999975664565316	WITHOUT_CLASSIFICATION	2.4335434684102884E-5	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999778396942542	WITHOUT_CLASSIFICATION	2.2160305745771604E-5	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9982085521563923	WITHOUT_CLASSIFICATION	0.0017914478436077846	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9950223395304085	WITHOUT_CLASSIFICATION	0.0049776604695914856	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999966248337182	WITHOUT_CLASSIFICATION	3.375166281795487E-5	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999522020546446	WITHOUT_CLASSIFICATION	4.779794535546721E-5	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999851098415287	WITHOUT_CLASSIFICATION	1.4890158471289274E-5	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999822988868279	WITHOUT_CLASSIFICATION	1.7701113172132478E-5	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.999999141455324	WITHOUT_CLASSIFICATION	8.58544676006296E-7	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9999051143171004	WITHOUT_CLASSIFICATION	9.488568289956228E-5	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999494357647946	WITHOUT_CLASSIFICATION	5.056423520546694E-5	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999620843788406	WITHOUT_CLASSIFICATION	3.7915621159350266E-5	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999024288465493	WITHOUT_CLASSIFICATION	9.757115345060172E-5	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999114551477681	WITHOUT_CLASSIFICATION	8.85448522318379E-5	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999817742580028	WITHOUT_CLASSIFICATION	1.822574199715608E-5	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999758493849515	WITHOUT_CLASSIFICATION	2.4150615048520666E-5	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999817391045817	WITHOUT_CLASSIFICATION	1.8260895418273522E-5	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999817706764134	WITHOUT_CLASSIFICATION	1.8229323586600983E-5	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999817706764134	WITHOUT_CLASSIFICATION	1.8229323586600983E-5	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999107325518963	WITHOUT_CLASSIFICATION	8.92674481035658E-5	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998096977569995	WITHOUT_CLASSIFICATION	1.9030224300049055E-4	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9998673269242401	WITHOUT_CLASSIFICATION	1.3267307575988598E-4	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999813139411357	WITHOUT_CLASSIFICATION	1.8686058864339164E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999813139411357	WITHOUT_CLASSIFICATION	1.8686058864339164E-5	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9998789857389566	WITHOUT_CLASSIFICATION	1.2101426104338406E-4	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999852745394404	WITHOUT_CLASSIFICATION	1.4725460559646434E-5	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999844649048214	WITHOUT_CLASSIFICATION	1.5535095178643768E-5	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999904603059427	WITHOUT_CLASSIFICATION	9.53969405719397E-6	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999815989768982	WITHOUT_CLASSIFICATION	1.840102310173964E-5	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999935447816932	WITHOUT_CLASSIFICATION	6.455218306700122E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9993207523078448	WITHOUT_CLASSIFICATION	6.792476921553053E-4	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.999994146883115	WITHOUT_CLASSIFICATION	5.853116884886263E-6	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999614103331231	WITHOUT_CLASSIFICATION	3.858966687689226E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999908971348556	WITHOUT_CLASSIFICATION	9.102865144481696E-6	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999335738414988	WITHOUT_CLASSIFICATION	6.64261585012235E-5	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9969733297784545	WITHOUT_CLASSIFICATION	0.0030266702215454916	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999784776873746	WITHOUT_CLASSIFICATION	2.1522312625472013E-5	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999366846535457	WITHOUT_CLASSIFICATION	6.331534645429987E-5	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999721881380182	WITHOUT_CLASSIFICATION	2.7811861981726558E-5	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9996461071458553	WITHOUT_CLASSIFICATION	3.5389285414462934E-4	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.99996099818546	WITHOUT_CLASSIFICATION	3.900181454005157E-5	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999720818962741	WITHOUT_CLASSIFICATION	2.791810372585766E-5	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9930409651496411	WITHOUT_CLASSIFICATION	0.0069590348503589155	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999957974892905	WITHOUT_CLASSIFICATION	4.202510709630825E-6	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999988798384563	WITHOUT_CLASSIFICATION	1.1201615437107126E-6	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9997838151586045	WITHOUT_CLASSIFICATION	2.1618484139562487E-4	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9953415545504057	WITHOUT_CLASSIFICATION	0.004658445449594257	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999803475266803	WITHOUT_CLASSIFICATION	1.9652473319656046E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999966865930998	WITHOUT_CLASSIFICATION	3.3134069002900384E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998530777860251	WITHOUT_CLASSIFICATION	1.4692221397496704E-4	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999605713367529	WITHOUT_CLASSIFICATION	3.9428663247190956E-5	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999753840908715	WITHOUT_CLASSIFICATION	2.461590912850624E-4	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999958113385756	WITHOUT_CLASSIFICATION	4.188661424293074E-6	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.999937373816772	WITHOUT_CLASSIFICATION	6.262618322799185E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999657825528242	WITHOUT_CLASSIFICATION	3.4217447175768075E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999657825528242	WITHOUT_CLASSIFICATION	3.4217447175768075E-5	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9995703156219541	WITHOUT_CLASSIFICATION	4.29684378045895E-4	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999871221598318	WITHOUT_CLASSIFICATION	1.2877840168217989E-5	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999871221598318	WITHOUT_CLASSIFICATION	1.2877840168217989E-5	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999932247214507	WITHOUT_CLASSIFICATION	6.775278549298942E-5	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999932247214507	WITHOUT_CLASSIFICATION	6.775278549298942E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999625590377316	WITHOUT_CLASSIFICATION	3.744096226843102E-5	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999932594630566	WITHOUT_CLASSIFICATION	6.740536943357342E-6	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999762655834978	WITHOUT_CLASSIFICATION	2.373441650216691E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9998849454647556	WITHOUT_CLASSIFICATION	1.1505453524442197E-4	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999803566569405	WITHOUT_CLASSIFICATION	1.9643343059537678E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999043261027021	WITHOUT_CLASSIFICATION	9.567389729791207E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999043261027021	WITHOUT_CLASSIFICATION	9.567389729791207E-5	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999966865930998	WITHOUT_CLASSIFICATION	3.3134069002900384E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999966865930998	WITHOUT_CLASSIFICATION	3.3134069002900384E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999966865930998	WITHOUT_CLASSIFICATION	3.3134069002900384E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998530777860251	WITHOUT_CLASSIFICATION	1.4692221397496704E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999657825528242	WITHOUT_CLASSIFICATION	3.4217447175768075E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999657825528242	WITHOUT_CLASSIFICATION	3.4217447175768075E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999657825528242	WITHOUT_CLASSIFICATION	3.4217447175768075E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999625590377316	WITHOUT_CLASSIFICATION	3.744096226843102E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999625590377316	WITHOUT_CLASSIFICATION	3.744096226843102E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999625590377316	WITHOUT_CLASSIFICATION	3.744096226843102E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9998849454647556	WITHOUT_CLASSIFICATION	1.1505453524442197E-4	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9998849454647556	WITHOUT_CLASSIFICATION	1.1505453524442197E-4	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999852854151843	WITHOUT_CLASSIFICATION	1.4714584815597724E-5	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999832151625704	WITHOUT_CLASSIFICATION	1.678483742965128E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999839889616747	WITHOUT_CLASSIFICATION	1.6011038325257667E-5	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.935053858087752	DESIGN	0.06494614191224796	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999919791730565	WITHOUT_CLASSIFICATION	8.020826943572007E-6	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998557590486287	WITHOUT_CLASSIFICATION	1.4424095137131066E-4	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9998557590486287	WITHOUT_CLASSIFICATION	1.4424095137131066E-4	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999986044847189	WITHOUT_CLASSIFICATION	1.3955152811358947E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9993207523078448	WITHOUT_CLASSIFICATION	6.792476921553053E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9993207523078448	WITHOUT_CLASSIFICATION	6.792476921553053E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9993207523078448	WITHOUT_CLASSIFICATION	6.792476921553053E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9993207523078448	WITHOUT_CLASSIFICATION	6.792476921553053E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9993207523078448	WITHOUT_CLASSIFICATION	6.792476921553053E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999876094301526	WITHOUT_CLASSIFICATION	1.2390569847481332E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999876094301526	WITHOUT_CLASSIFICATION	1.2390569847481332E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999876094301526	WITHOUT_CLASSIFICATION	1.2390569847481332E-5	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999717496675434	WITHOUT_CLASSIFICATION	2.8250332456575784E-5	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999957654118496	WITHOUT_CLASSIFICATION	4.2345881503369765E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998530777860251	WITHOUT_CLASSIFICATION	1.4692221397496704E-4	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999625590377316	WITHOUT_CLASSIFICATION	3.744096226843102E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999625590377316	WITHOUT_CLASSIFICATION	3.744096226843102E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9993207523078448	WITHOUT_CLASSIFICATION	6.792476921553053E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9993207523078448	WITHOUT_CLASSIFICATION	6.792476921553053E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999876094301526	WITHOUT_CLASSIFICATION	1.2390569847481332E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999986044847189	WITHOUT_CLASSIFICATION	1.3955152811358947E-6	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999973876100469	WITHOUT_CLASSIFICATION	2.612389953104707E-6	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999838689373635	WITHOUT_CLASSIFICATION	1.6131062636560725E-5	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999783674723288	WITHOUT_CLASSIFICATION	2.163252767126033E-5	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999813043493881	WITHOUT_CLASSIFICATION	1.869565061178512E-5	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999816512723672	WITHOUT_CLASSIFICATION	1.834872763274803E-5	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999763472282553	WITHOUT_CLASSIFICATION	2.3652771744739908E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9997792684325855	WITHOUT_CLASSIFICATION	2.2073156741457772E-4	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999296318565876	WITHOUT_CLASSIFICATION	7.036814341237849E-5	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999782307656179	WITHOUT_CLASSIFICATION	2.1769234382057597E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999985388701365	WITHOUT_CLASSIFICATION	1.4611298635259673E-6	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9993568122321735	WITHOUT_CLASSIFICATION	6.431877678264598E-4	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999968643986226	WITHOUT_CLASSIFICATION	3.1356013774689085E-6	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.999835054306511	WITHOUT_CLASSIFICATION	1.6494569348902196E-4	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9991313090507341	WITHOUT_CLASSIFICATION	8.686909492658302E-4	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999969285261038	WITHOUT_CLASSIFICATION	3.071473896074194E-6	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999986667148442	WITHOUT_CLASSIFICATION	1.3332851557570154E-6	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999630551548409	WITHOUT_CLASSIFICATION	3.6944845159141515E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9954482859674252	WITHOUT_CLASSIFICATION	0.004551714032574848	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9990141026617115	WITHOUT_CLASSIFICATION	9.858973382885718E-4	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999963033764452	WITHOUT_CLASSIFICATION	3.6966235548503707E-6	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9996628039475035	WITHOUT_CLASSIFICATION	3.3719605249652677E-4	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.999588820290339	WITHOUT_CLASSIFICATION	4.1117970966092493E-4	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9991541261182963	WITHOUT_CLASSIFICATION	8.45873881703497E-4	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999987319113857	WITHOUT_CLASSIFICATION	1.2680886143271592E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9917093936659055	WITHOUT_CLASSIFICATION	0.008290606334094596	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9587475972505246	WITHOUT_CLASSIFICATION	0.04125240274947537	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9993809089149869	WITHOUT_CLASSIFICATION	6.190910850131515E-4	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999142476303694	WITHOUT_CLASSIFICATION	8.575236963056602E-5	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9997895540694943	WITHOUT_CLASSIFICATION	2.1044593050564573E-4	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999995701498419	WITHOUT_CLASSIFICATION	4.298501581146279E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9984439456046542	WITHOUT_CLASSIFICATION	0.0015560543953458256	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999957130300199	WITHOUT_CLASSIFICATION	4.286969980175495E-6	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999974252308803	WITHOUT_CLASSIFICATION	2.5747691196231628E-6	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999779968207391	WITHOUT_CLASSIFICATION	2.200317926085417E-5	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999973876100469	WITHOUT_CLASSIFICATION	2.612389953104707E-6	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999834126761958	WITHOUT_CLASSIFICATION	1.6587323804085052E-5	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9997364734132078	WITHOUT_CLASSIFICATION	2.6352658679220525E-4	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9987718253175243	WITHOUT_CLASSIFICATION	0.0012281746824757964	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999322752117403	WITHOUT_CLASSIFICATION	6.772478825969125E-5	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999322752117403	WITHOUT_CLASSIFICATION	6.772478825969125E-5	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999874523952098	WITHOUT_CLASSIFICATION	1.2547604790243182E-5	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999874523952098	WITHOUT_CLASSIFICATION	1.2547604790243182E-5	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.999993497901527	WITHOUT_CLASSIFICATION	6.502098472939474E-6	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999526675040837	WITHOUT_CLASSIFICATION	4.733249591628676E-5	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999867691564382	WITHOUT_CLASSIFICATION	1.3230843561750636E-5	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999942295692111	WITHOUT_CLASSIFICATION	5.770430788932344E-6	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9996225227043393	WITHOUT_CLASSIFICATION	3.774772956606941E-4	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9995442614947344	WITHOUT_CLASSIFICATION	4.557385052655785E-4	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9854422086689693	WITHOUT_CLASSIFICATION	0.01455779133103072	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9996448203103244	WITHOUT_CLASSIFICATION	3.5517968967564066E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9997059069053843	WITHOUT_CLASSIFICATION	2.940930946157063E-4	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999881245445656	WITHOUT_CLASSIFICATION	1.1875455434393486E-4	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9994749963107763	WITHOUT_CLASSIFICATION	5.250036892236398E-4	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999831791337279	WITHOUT_CLASSIFICATION	1.6820866272000735E-5	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999831791337279	WITHOUT_CLASSIFICATION	1.6820866272000735E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.999748773712733	WITHOUT_CLASSIFICATION	2.5122628726699503E-4	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9774312661276533	WITHOUT_CLASSIFICATION	0.022568733872346692	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999933806874688	WITHOUT_CLASSIFICATION	6.619312531134921E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999933806874688	WITHOUT_CLASSIFICATION	6.619312531134921E-6	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999389142987316	WITHOUT_CLASSIFICATION	6.108570126830306E-5	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999762363740827	WITHOUT_CLASSIFICATION	2.3763625917252645E-5	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9928632529492429	WITHOUT_CLASSIFICATION	0.007136747050756987	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9960344684141437	WITHOUT_CLASSIFICATION	0.003965531585856415	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9995682967409264	WITHOUT_CLASSIFICATION	4.3170325907354427E-4	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.999954557136821	WITHOUT_CLASSIFICATION	4.544286317898228E-5	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999496163495432	WITHOUT_CLASSIFICATION	5.038365045677333E-5	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999937641512268	WITHOUT_CLASSIFICATION	6.235848773296946E-6	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9998206431456846	WITHOUT_CLASSIFICATION	1.7935685431538534E-4	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999496890829314	WITHOUT_CLASSIFICATION	5.0310917068606416E-5	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.999985545440594	WITHOUT_CLASSIFICATION	1.4454559406085893E-5	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999885970889958	WITHOUT_CLASSIFICATION	1.1402911004183686E-5	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999981610083537	WITHOUT_CLASSIFICATION	1.8389916463908952E-6	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999708353828933	WITHOUT_CLASSIFICATION	2.916461710666344E-5	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999411109773	WITHOUT_CLASSIFICATION	5.888902269995769E-5	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999246985332648	WITHOUT_CLASSIFICATION	7.530146673517697E-5	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9996575463435539	WITHOUT_CLASSIFICATION	3.424536564460874E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9991571318273955	WITHOUT_CLASSIFICATION	8.428681726043725E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999993198478483	WITHOUT_CLASSIFICATION	6.801521517579841E-7	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999894385403544	WITHOUT_CLASSIFICATION	1.056145964557826E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9985105193340862	WITHOUT_CLASSIFICATION	0.0014894806659137764	DESIGN
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999886559016172	WITHOUT_CLASSIFICATION	1.1344098382722838E-5	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999837633638325	WITHOUT_CLASSIFICATION	1.6236636167427414E-5	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999900634107349	WITHOUT_CLASSIFICATION	9.936589265144478E-6	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9998235896174228	WITHOUT_CLASSIFICATION	1.7641038257721245E-4	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9989846571036851	WITHOUT_CLASSIFICATION	0.0010153428963149485	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999598380271663	WITHOUT_CLASSIFICATION	4.0161972833836854E-5	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999622212933255	WITHOUT_CLASSIFICATION	3.777870667461081E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9944162530562244	WITHOUT_CLASSIFICATION	0.005583746943775638	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999362568037349	WITHOUT_CLASSIFICATION	6.374319626505064E-5	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999919876437917	WITHOUT_CLASSIFICATION	8.012356208328557E-6	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999320231853718	WITHOUT_CLASSIFICATION	6.797681462816747E-5	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999996000025089	WITHOUT_CLASSIFICATION	3.9999749124582245E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9997155633038711	WITHOUT_CLASSIFICATION	2.8443669612884516E-4	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9997155633038711	WITHOUT_CLASSIFICATION	2.8443669612884516E-4	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999930287751009	WITHOUT_CLASSIFICATION	6.971224899095453E-6	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9989604324063303	WITHOUT_CLASSIFICATION	0.0010395675936697016	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999883978636441	WITHOUT_CLASSIFICATION	1.1602136355982513E-5	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999535882785674	WITHOUT_CLASSIFICATION	4.6411721432483014E-5	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9998056794669493	WITHOUT_CLASSIFICATION	1.943205330506709E-4	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999521778375664	WITHOUT_CLASSIFICATION	4.7822162433478666E-5	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9993653345047414	WITHOUT_CLASSIFICATION	6.346654952584875E-4	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9994437025805648	WITHOUT_CLASSIFICATION	5.562974194352156E-4	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999853842345271	WITHOUT_CLASSIFICATION	1.461576547296997E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9998941116295316	WITHOUT_CLASSIFICATION	1.0588837046846756E-4	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.7737122496034478	WITHOUT_CLASSIFICATION	0.22628775039655213	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.634696678276917	WITHOUT_CLASSIFICATION	0.36530332172308294	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999428313395363	WITHOUT_CLASSIFICATION	5.7168660463665826E-5	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9974940337501594	WITHOUT_CLASSIFICATION	0.002505966249840655	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9995493247402366	WITHOUT_CLASSIFICATION	4.506752597633721E-4	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.999957864822173	WITHOUT_CLASSIFICATION	4.2135177827023894E-5	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9967995395324457	WITHOUT_CLASSIFICATION	0.003200460467554375	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9966718348984055	WITHOUT_CLASSIFICATION	0.0033281651015944235	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9992887805534673	WITHOUT_CLASSIFICATION	7.112194465326416E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9995393599110945	WITHOUT_CLASSIFICATION	4.6064008890548395E-4	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999374730775978	WITHOUT_CLASSIFICATION	6.252692240224076E-5	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999949480492988	WITHOUT_CLASSIFICATION	5.051950701224353E-6	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999891316607029	WITHOUT_CLASSIFICATION	1.086833929705223E-5	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9994236977531311	WITHOUT_CLASSIFICATION	5.76302246868908E-4	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9986485716379142	WITHOUT_CLASSIFICATION	0.001351428362085821	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9998237623851798	WITHOUT_CLASSIFICATION	1.7623761482024085E-4	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998691531155373	WITHOUT_CLASSIFICATION	1.3084688446262686E-4	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999882584351499	WITHOUT_CLASSIFICATION	1.1741564850187316E-5	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9631502565626265	WITHOUT_CLASSIFICATION	0.03684974343737358	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9956640013652116	WITHOUT_CLASSIFICATION	0.004335998634788431	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999995016635058	WITHOUT_CLASSIFICATION	4.983364942060951E-6	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9979305170281675	WITHOUT_CLASSIFICATION	0.00206948297183246	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9990741635900898	WITHOUT_CLASSIFICATION	9.258364099101384E-4	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999914662867395	WITHOUT_CLASSIFICATION	8.533713260533828E-6	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9998851091213248	WITHOUT_CLASSIFICATION	1.1489087867518821E-4	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9910966327803916	WITHOUT_CLASSIFICATION	0.008903367219608339	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9984365853427546	WITHOUT_CLASSIFICATION	0.0015634146572454757	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999955898400973	WITHOUT_CLASSIFICATION	4.41015990277432E-6	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999954601473848	WITHOUT_CLASSIFICATION	4.539852615100921E-6	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999501738243329	WITHOUT_CLASSIFICATION	4.982617566717636E-5	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999810801966741	WITHOUT_CLASSIFICATION	1.891980332595935E-5	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998647418989525	WITHOUT_CLASSIFICATION	1.3525810104755357E-4	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998647418989525	WITHOUT_CLASSIFICATION	1.3525810104755357E-4	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9996307945761188	WITHOUT_CLASSIFICATION	3.6920542388122683E-4	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999603564507761	WITHOUT_CLASSIFICATION	3.964354922393978E-5	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9998926147812328	WITHOUT_CLASSIFICATION	1.0738521876726455E-4	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9998578535907845	WITHOUT_CLASSIFICATION	1.4214640921552456E-4	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999999176911214	WITHOUT_CLASSIFICATION	8.230887860563304E-7	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999657769917741	WITHOUT_CLASSIFICATION	3.4223008225795195E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999522232509742	WITHOUT_CLASSIFICATION	4.777674902574374E-5	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999049192401209	WITHOUT_CLASSIFICATION	9.508075987911675E-5	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999960872994084	WITHOUT_CLASSIFICATION	3.9127005916294E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9997521378197741	WITHOUT_CLASSIFICATION	2.478621802259318E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999413036531013	WITHOUT_CLASSIFICATION	5.8696346898829996E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999506033964372	WITHOUT_CLASSIFICATION	4.9396603562740944E-5	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9918613975468915	WITHOUT_CLASSIFICATION	0.008138602453108471	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999943564445006	WITHOUT_CLASSIFICATION	5.643555499307163E-6	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.999991381138056	WITHOUT_CLASSIFICATION	8.61886194405179E-6	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9995705739414016	WITHOUT_CLASSIFICATION	4.2942605859845183E-4	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999968574192324	WITHOUT_CLASSIFICATION	3.142580767606559E-5	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999786368331583	WITHOUT_CLASSIFICATION	2.136316684170935E-4	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9996484701788002	WITHOUT_CLASSIFICATION	3.5152982119978005E-4	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9947141791075295	WITHOUT_CLASSIFICATION	0.0052858208924705715	DESIGN
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999656301522396	WITHOUT_CLASSIFICATION	3.436984776046017E-5	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998426327886335	WITHOUT_CLASSIFICATION	1.573672113663925E-4	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999929905142997	WITHOUT_CLASSIFICATION	7.009485700318474E-6	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9998353471432082	WITHOUT_CLASSIFICATION	1.6465285679171027E-4	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9946395889926738	WITHOUT_CLASSIFICATION	0.005360411007326221	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999669403146237	WITHOUT_CLASSIFICATION	3.305968537621684E-5	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999845500009659	WITHOUT_CLASSIFICATION	1.5449999034112738E-5	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999699471154201	WITHOUT_CLASSIFICATION	3.0052884579965622E-5	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999993881229914	WITHOUT_CLASSIFICATION	6.118770086055004E-7	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9994806806635032	WITHOUT_CLASSIFICATION	5.193193364968697E-4	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999995138422645	WITHOUT_CLASSIFICATION	4.861577354037805E-7	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999933633265671	WITHOUT_CLASSIFICATION	6.636673432985258E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9994806806635032	WITHOUT_CLASSIFICATION	5.193193364968697E-4	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999855347677088	WITHOUT_CLASSIFICATION	1.4465232291107139E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999910996886793	WITHOUT_CLASSIFICATION	8.90031132077571E-6	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999180294385349	WITHOUT_CLASSIFICATION	8.197056146510401E-5	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8864448179771393	WITHOUT_CLASSIFICATION	0.11355518202286076	DESIGN
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999838985280698	WITHOUT_CLASSIFICATION	1.61014719301707E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9993105586952818	WITHOUT_CLASSIFICATION	6.894413047181716E-4	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.999979481146143	WITHOUT_CLASSIFICATION	2.0518853857040658E-5	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9997275571755351	WITHOUT_CLASSIFICATION	2.7244282446496247E-4	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999993203436325	WITHOUT_CLASSIFICATION	6.79656367563771E-7	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999894385403544	WITHOUT_CLASSIFICATION	1.056145964557826E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999839889616747	WITHOUT_CLASSIFICATION	1.6011038325257667E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9789354263864922	WITHOUT_CLASSIFICATION	0.021064573613507824	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999137076943635	WITHOUT_CLASSIFICATION	8.629230563644703E-5	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9998084510354011	WITHOUT_CLASSIFICATION	1.915489645989228E-4	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.998559844936238	WITHOUT_CLASSIFICATION	0.0014401550637620439	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999681840048226	WITHOUT_CLASSIFICATION	3.1815995177381846E-5	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.5552299151997871	WITHOUT_CLASSIFICATION	0.4447700848002128	DESIGN
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9996421568314307	WITHOUT_CLASSIFICATION	3.578431685694071E-4	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999711493568587	WITHOUT_CLASSIFICATION	2.8850643141281706E-5	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9808878284395173	WITHOUT_CLASSIFICATION	0.01911217156048276	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999483338001096	WITHOUT_CLASSIFICATION	5.166619989032763E-5	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999221652096153	WITHOUT_CLASSIFICATION	7.783479038479167E-5	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9997465949053002	WITHOUT_CLASSIFICATION	2.534050946998279E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999848555957822	WITHOUT_CLASSIFICATION	1.5144404217810185E-5	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9992711286214322	WITHOUT_CLASSIFICATION	7.288713785678939E-4	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.99998575635499	WITHOUT_CLASSIFICATION	1.424364501013846E-5	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999838865711996	WITHOUT_CLASSIFICATION	1.6113428800352874E-5	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9995308246838481	WITHOUT_CLASSIFICATION	4.69175316151895E-4	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999566422287572	WITHOUT_CLASSIFICATION	4.3357771242818475E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9964535906754516	WITHOUT_CLASSIFICATION	0.003546409324548427	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9964535906754516	WITHOUT_CLASSIFICATION	0.003546409324548427	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998981202121228	WITHOUT_CLASSIFICATION	1.018797878771784E-4	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999802434605328	WITHOUT_CLASSIFICATION	1.9756539467172955E-5	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999687490119811	WITHOUT_CLASSIFICATION	3.125098801897363E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8871384961698217	WITHOUT_CLASSIFICATION	0.11286150383017843	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8871384961698217	WITHOUT_CLASSIFICATION	0.11286150383017843	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8871384961698217	WITHOUT_CLASSIFICATION	0.11286150383017843	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8871384961698217	WITHOUT_CLASSIFICATION	0.11286150383017843	DESIGN
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999935125999828	WITHOUT_CLASSIFICATION	6.487400017188021E-6	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999975396946692	WITHOUT_CLASSIFICATION	2.4603053307959323E-5	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999578970470988	WITHOUT_CLASSIFICATION	4.2102952901198185E-5	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9986468520453017	WITHOUT_CLASSIFICATION	0.0013531479546983576	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999828320711246	WITHOUT_CLASSIFICATION	1.7167928875325347E-5	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999928852804327	WITHOUT_CLASSIFICATION	7.114719567297151E-6	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9995431782088716	WITHOUT_CLASSIFICATION	4.5682179112828343E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9995431782088716	WITHOUT_CLASSIFICATION	4.5682179112828343E-4	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9837454285804963	WITHOUT_CLASSIFICATION	0.016254571419503743	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9998470165141805	WITHOUT_CLASSIFICATION	1.529834858195187E-4	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9997989506117128	WITHOUT_CLASSIFICATION	2.0104938828724407E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9897499074404004	WITHOUT_CLASSIFICATION	0.010250092559599583	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999952610549808	WITHOUT_CLASSIFICATION	4.738945019211967E-6	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999950151191772	WITHOUT_CLASSIFICATION	4.984880822838163E-6	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999828369323678	WITHOUT_CLASSIFICATION	1.7163067632252966E-5	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999335409596954	WITHOUT_CLASSIFICATION	6.645904030454084E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996377214406668	WITHOUT_CLASSIFICATION	3.6227855933332554E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9996377214406668	WITHOUT_CLASSIFICATION	3.6227855933332554E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999933633265671	WITHOUT_CLASSIFICATION	6.636673432985258E-6	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999822707740362	WITHOUT_CLASSIFICATION	1.7729225963792266E-5	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999826812075839	WITHOUT_CLASSIFICATION	1.7318792415964642E-5	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9997983704148604	WITHOUT_CLASSIFICATION	2.016295851396459E-4	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999263634770648	WITHOUT_CLASSIFICATION	7.363652293523968E-5	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9998303172516244	WITHOUT_CLASSIFICATION	1.6968274837555352E-4	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999776360033273	WITHOUT_CLASSIFICATION	2.236399667266065E-5	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999891555637966	WITHOUT_CLASSIFICATION	1.0844436203302557E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999532646320227	WITHOUT_CLASSIFICATION	4.673536797732512E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999532646320227	WITHOUT_CLASSIFICATION	4.673536797732512E-5	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9986644234728368	WITHOUT_CLASSIFICATION	0.001335576527163108	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999955534736011	WITHOUT_CLASSIFICATION	4.446526398863517E-6	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9996872361771845	WITHOUT_CLASSIFICATION	3.1276382281551963E-4	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999901720211179	WITHOUT_CLASSIFICATION	9.827978882104795E-5	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999162587631053	WITHOUT_CLASSIFICATION	8.374123689477614E-5	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9998318214364258	WITHOUT_CLASSIFICATION	1.681785635741405E-4	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999950331771187	WITHOUT_CLASSIFICATION	4.966822881316613E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999705711749094	WITHOUT_CLASSIFICATION	2.9428825090586854E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999705711749094	WITHOUT_CLASSIFICATION	2.9428825090586854E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999705711749094	WITHOUT_CLASSIFICATION	2.9428825090586854E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999705711749094	WITHOUT_CLASSIFICATION	2.9428825090586854E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999687107670401	WITHOUT_CLASSIFICATION	3.128923296002285E-5	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999370509551099	WITHOUT_CLASSIFICATION	6.294904489016442E-5	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999996120377791	WITHOUT_CLASSIFICATION	3.8796222090541505E-6	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.999734919348924	WITHOUT_CLASSIFICATION	2.650806510760843E-4	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999944747863835	WITHOUT_CLASSIFICATION	5.525213616581119E-6	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9998338893761126	WITHOUT_CLASSIFICATION	1.661106238874142E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999548128753206	WITHOUT_CLASSIFICATION	4.5187124679413325E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999748410206489	WITHOUT_CLASSIFICATION	2.515897935102764E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999748410206489	WITHOUT_CLASSIFICATION	2.515897935102764E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999748410206489	WITHOUT_CLASSIFICATION	2.515897935102764E-5	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999962907059839	WITHOUT_CLASSIFICATION	3.709294016101897E-5	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9998892310370139	WITHOUT_CLASSIFICATION	1.1076896298607374E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998871343437765	WITHOUT_CLASSIFICATION	1.1286565622346027E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998871343437765	WITHOUT_CLASSIFICATION	1.1286565622346027E-4	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.999866988271766	WITHOUT_CLASSIFICATION	1.330117282341201E-4	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999898828289829	WITHOUT_CLASSIFICATION	1.011717101705558E-5	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999986634705842	WITHOUT_CLASSIFICATION	1.3365294158819406E-6	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9995567550052699	WITHOUT_CLASSIFICATION	4.4324499473013585E-4	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999781733901746	WITHOUT_CLASSIFICATION	2.182660982530665E-5	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999831687080819	WITHOUT_CLASSIFICATION	1.68312919180596E-5	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.5668626937093497	WITHOUT_CLASSIFICATION	0.4331373062906502	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.5668626937093497	WITHOUT_CLASSIFICATION	0.4331373062906502	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998342644150804	WITHOUT_CLASSIFICATION	1.657355849196516E-4	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.810674378405173	WITHOUT_CLASSIFICATION	0.189325621594827	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9990319302611	WITHOUT_CLASSIFICATION	9.680697389000365E-4	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999846931476402	WITHOUT_CLASSIFICATION	1.5306852359889384E-5	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999951992017483	WITHOUT_CLASSIFICATION	4.800798251719127E-6	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999566784400876	WITHOUT_CLASSIFICATION	4.332155991235941E-5	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9998096099591629	WITHOUT_CLASSIFICATION	1.903900408371977E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997362984752203	WITHOUT_CLASSIFICATION	2.6370152477979007E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998458454629288	WITHOUT_CLASSIFICATION	1.541545370711469E-4	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999934832616074	WITHOUT_CLASSIFICATION	6.516738392588168E-6	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9979638478370665	WITHOUT_CLASSIFICATION	0.00203615216293346	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999826828649026	WITHOUT_CLASSIFICATION	1.7317135097469226E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999734377842409	WITHOUT_CLASSIFICATION	2.656221575923076E-5	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9934886022652003	WITHOUT_CLASSIFICATION	0.006511397734799615	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999966025864105	WITHOUT_CLASSIFICATION	3.3974135894727963E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9991488057867178	WITHOUT_CLASSIFICATION	8.511942132821252E-4	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9980497560867013	WITHOUT_CLASSIFICATION	0.0019502439132986998	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999501976176812	WITHOUT_CLASSIFICATION	4.980238231880386E-5	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999962840393504	WITHOUT_CLASSIFICATION	3.7159606497181505E-6	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999648467570991	WITHOUT_CLASSIFICATION	3.515324290088322E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999858481137501	WITHOUT_CLASSIFICATION	1.4151886249942862E-5	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999888728904348	WITHOUT_CLASSIFICATION	1.1127109565250785E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.999987383049398	WITHOUT_CLASSIFICATION	1.2616950601869685E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.999987383049398	WITHOUT_CLASSIFICATION	1.2616950601869685E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.999987383049398	WITHOUT_CLASSIFICATION	1.2616950601869685E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.999987383049398	WITHOUT_CLASSIFICATION	1.2616950601869685E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.999987383049398	WITHOUT_CLASSIFICATION	1.2616950601869685E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.999987383049398	WITHOUT_CLASSIFICATION	1.2616950601869685E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.999987383049398	WITHOUT_CLASSIFICATION	1.2616950601869685E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.999987383049398	WITHOUT_CLASSIFICATION	1.2616950601869685E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999818844358295	WITHOUT_CLASSIFICATION	1.811556417045981E-5	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9991564971449393	WITHOUT_CLASSIFICATION	8.435028550607846E-4	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9995879165949795	WITHOUT_CLASSIFICATION	4.120834050204873E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.6872111368647691	WITHOUT_CLASSIFICATION	0.31278886313523085	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999522232509742	WITHOUT_CLASSIFICATION	4.777674902574374E-5	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999522232509742	WITHOUT_CLASSIFICATION	4.777674902574374E-5	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9997535396437455	WITHOUT_CLASSIFICATION	2.464603562545647E-4	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.958835222795454	WITHOUT_CLASSIFICATION	0.04116477720454607	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999976376337397	WITHOUT_CLASSIFICATION	2.3623662602719747E-6	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999975019490075	WITHOUT_CLASSIFICATION	2.49805099246498E-6	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999890659065559	WITHOUT_CLASSIFICATION	1.0934093444164657E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999888468808622	WITHOUT_CLASSIFICATION	1.1153119137798656E-5	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9997078951506626	WITHOUT_CLASSIFICATION	2.9210484933738136E-4	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9971121267940364	WITHOUT_CLASSIFICATION	0.002887873205963694	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9952215564627351	WITHOUT_CLASSIFICATION	0.004778443537264854	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999592444361511	WITHOUT_CLASSIFICATION	4.07555638487956E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999592444361511	WITHOUT_CLASSIFICATION	4.07555638487956E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999592444361511	WITHOUT_CLASSIFICATION	4.07555638487956E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9991800783095862	WITHOUT_CLASSIFICATION	8.199216904137171E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9998296622688104	WITHOUT_CLASSIFICATION	1.7033773118960025E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999802069855765	WITHOUT_CLASSIFICATION	1.9793014423435487E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999557723703402	WITHOUT_CLASSIFICATION	4.422762965986608E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998437504562016	WITHOUT_CLASSIFICATION	1.5624954379842476E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999547178926746	WITHOUT_CLASSIFICATION	4.5282107325290485E-5	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999996505183862	WITHOUT_CLASSIFICATION	3.4948161380630115E-6	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999967581743963	WITHOUT_CLASSIFICATION	3.2418256037223406E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9813657008798756	WITHOUT_CLASSIFICATION	0.018634299120124334	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9813657008798756	WITHOUT_CLASSIFICATION	0.018634299120124334	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9998027413250575	WITHOUT_CLASSIFICATION	1.9725867494251728E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9995385534747105	WITHOUT_CLASSIFICATION	4.6144652528943295E-4	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.999961784628949	WITHOUT_CLASSIFICATION	3.82153710509771E-5	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999605510097188	WITHOUT_CLASSIFICATION	3.944899028117479E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999643467987636	WITHOUT_CLASSIFICATION	3.565320123644222E-5	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999643467987636	WITHOUT_CLASSIFICATION	3.565320123644222E-5	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9736115258052176	WITHOUT_CLASSIFICATION	0.026388474194782435	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999998518786649	WITHOUT_CLASSIFICATION	1.4812133513885144E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9993097324810678	WITHOUT_CLASSIFICATION	6.902675189322871E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9991277434388657	WITHOUT_CLASSIFICATION	8.722565611343672E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999477346525236	WITHOUT_CLASSIFICATION	5.226534747644942E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999486530382099	WITHOUT_CLASSIFICATION	5.134696179001562E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999486530382099	WITHOUT_CLASSIFICATION	5.134696179001562E-5	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999941129844313	WITHOUT_CLASSIFICATION	5.887015568738679E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999941129844313	WITHOUT_CLASSIFICATION	5.887015568738679E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999744511268726	WITHOUT_CLASSIFICATION	2.5548873127427215E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999241849165443	WITHOUT_CLASSIFICATION	7.581508345569617E-4	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999956315600359	WITHOUT_CLASSIFICATION	4.3684399639948815E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999255051127373	WITHOUT_CLASSIFICATION	7.449488726275012E-5	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999465459486797	WITHOUT_CLASSIFICATION	5.345405132030825E-5	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.999997966426213	WITHOUT_CLASSIFICATION	2.0335737870014626E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999865525405222	WITHOUT_CLASSIFICATION	1.3447459477848502E-5	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999043261027021	WITHOUT_CLASSIFICATION	9.567389729791207E-5	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9984745949606948	WITHOUT_CLASSIFICATION	0.0015254050393051614	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9997806839412114	WITHOUT_CLASSIFICATION	2.1931605878855126E-4	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999112136023316	WITHOUT_CLASSIFICATION	8.878639766850659E-5	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9998800785212253	WITHOUT_CLASSIFICATION	1.1992147877465234E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9998833493449654	WITHOUT_CLASSIFICATION	1.1665065503462371E-4	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999354614249594	WITHOUT_CLASSIFICATION	6.453857504059186E-4	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9996451614108558	WITHOUT_CLASSIFICATION	3.5483858914419286E-4	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999719326534832	WITHOUT_CLASSIFICATION	2.806734651671406E-5	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999964005331696	WITHOUT_CLASSIFICATION	3.5994668303908775E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9998181790505726	WITHOUT_CLASSIFICATION	1.8182094942749497E-4	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9998983610468092	WITHOUT_CLASSIFICATION	1.0163895319078342E-4	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999564495093778	WITHOUT_CLASSIFICATION	4.355049062218204E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9789354263864922	WITHOUT_CLASSIFICATION	0.021064573613507824	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9995553061002646	WITHOUT_CLASSIFICATION	4.4469389973548123E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9983463062666194	WITHOUT_CLASSIFICATION	0.0016536937333806072	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999982610682459	WITHOUT_CLASSIFICATION	1.7389317541487165E-6	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999711034915543	WITHOUT_CLASSIFICATION	2.8896508445747594E-5	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999940025861371	WITHOUT_CLASSIFICATION	5.997413862784215E-6	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999565089292584	WITHOUT_CLASSIFICATION	4.3491070741768564E-5	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.999469406329803	WITHOUT_CLASSIFICATION	5.305936701970256E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9989746301087749	WITHOUT_CLASSIFICATION	0.001025369891225075	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999459566864	WITHOUT_CLASSIFICATION	5.4043313657542995E-8	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.999868372387428	WITHOUT_CLASSIFICATION	1.316276125720648E-4	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999949727841441	WITHOUT_CLASSIFICATION	5.027215855874934E-6	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9996613343137105	WITHOUT_CLASSIFICATION	3.3866568628950844E-4	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999807509225301	WITHOUT_CLASSIFICATION	1.9249077469839383E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999992672866839	WITHOUT_CLASSIFICATION	7.327133160937652E-6	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9998756173735525	WITHOUT_CLASSIFICATION	1.2438262644743709E-4	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999855017089913	WITHOUT_CLASSIFICATION	1.4498291008751826E-5	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9997719877349663	WITHOUT_CLASSIFICATION	2.2801226503366977E-4	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9996242117028847	WITHOUT_CLASSIFICATION	3.757882971152632E-4	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9996531221305833	WITHOUT_CLASSIFICATION	3.468778694166874E-4	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.5294298195350615	WITHOUT_CLASSIFICATION	0.4705701804649385	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9998873064199508	WITHOUT_CLASSIFICATION	1.1269358004915548E-4	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9997763729979918	WITHOUT_CLASSIFICATION	2.2362700200814377E-4	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999245571800083	WITHOUT_CLASSIFICATION	7.54428199917962E-5	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999511861154131	WITHOUT_CLASSIFICATION	4.88138845868758E-5	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999202440799647	WITHOUT_CLASSIFICATION	7.975592003529261E-4	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999903690414087	WITHOUT_CLASSIFICATION	9.630958591389381E-6	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999920975208919	WITHOUT_CLASSIFICATION	7.902479108124147E-6	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999718761794693	WITHOUT_CLASSIFICATION	2.8123820530770138E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9992924017131266	WITHOUT_CLASSIFICATION	7.075982868733886E-4	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999624614822137	WITHOUT_CLASSIFICATION	3.753851778629059E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998558600717427	WITHOUT_CLASSIFICATION	1.441399282574185E-4	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998558600717427	WITHOUT_CLASSIFICATION	1.441399282574185E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9997499297376765	WITHOUT_CLASSIFICATION	2.500702623235314E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9997499297376765	WITHOUT_CLASSIFICATION	2.500702623235314E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9823472211995888	WITHOUT_CLASSIFICATION	0.017652778800411193	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9823472211995888	WITHOUT_CLASSIFICATION	0.017652778800411193	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999747227102681	WITHOUT_CLASSIFICATION	2.5277289731889012E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999747227102681	WITHOUT_CLASSIFICATION	2.5277289731889012E-5	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999942372737837	WITHOUT_CLASSIFICATION	5.762726216281234E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999942372737837	WITHOUT_CLASSIFICATION	5.762726216281234E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999942372737837	WITHOUT_CLASSIFICATION	5.762726216281234E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999942372737837	WITHOUT_CLASSIFICATION	5.762726216281234E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999942372737837	WITHOUT_CLASSIFICATION	5.762726216281234E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999942372737837	WITHOUT_CLASSIFICATION	5.762726216281234E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999942372737837	WITHOUT_CLASSIFICATION	5.762726216281234E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999942372737837	WITHOUT_CLASSIFICATION	5.762726216281234E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999942372737837	WITHOUT_CLASSIFICATION	5.762726216281234E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999859905026205	WITHOUT_CLASSIFICATION	1.4009497379520544E-5	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999859905026205	WITHOUT_CLASSIFICATION	1.4009497379520544E-5	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999859905026205	WITHOUT_CLASSIFICATION	1.4009497379520544E-5	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999814056146041	WITHOUT_CLASSIFICATION	1.859438539593003E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999106535245329	WITHOUT_CLASSIFICATION	8.934647546711583E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999106535245329	WITHOUT_CLASSIFICATION	8.934647546711583E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999106535245329	WITHOUT_CLASSIFICATION	8.934647546711583E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999872754739392	WITHOUT_CLASSIFICATION	1.272452606079753E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999872754739392	WITHOUT_CLASSIFICATION	1.272452606079753E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999872754739392	WITHOUT_CLASSIFICATION	1.272452606079753E-5	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9990625651473667	WITHOUT_CLASSIFICATION	9.374348526333121E-4	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9998521572384591	WITHOUT_CLASSIFICATION	1.4784276154087224E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9996308604189656	WITHOUT_CLASSIFICATION	3.691395810343747E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997430518284834	WITHOUT_CLASSIFICATION	2.5694817151666145E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997430518284834	WITHOUT_CLASSIFICATION	2.5694817151666145E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997430518284834	WITHOUT_CLASSIFICATION	2.5694817151666145E-4	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999618232028379	WITHOUT_CLASSIFICATION	3.817679716201727E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9996012110067014	WITHOUT_CLASSIFICATION	3.98788993298588E-4	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9996012110067014	WITHOUT_CLASSIFICATION	3.98788993298588E-4	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9997290796008684	WITHOUT_CLASSIFICATION	2.709203991316219E-4	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9976501247139311	WITHOUT_CLASSIFICATION	0.0023498752860689263	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9976501247139311	WITHOUT_CLASSIFICATION	0.0023498752860689263	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.990067280980926	DESIGN	0.00993271901907404	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9995853595811564	WITHOUT_CLASSIFICATION	4.146404188435969E-4	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9991478224639289	WITHOUT_CLASSIFICATION	8.521775360711633E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998715942774055	WITHOUT_CLASSIFICATION	1.2840572259449753E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998715942774055	WITHOUT_CLASSIFICATION	1.2840572259449753E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9993667918918696	WITHOUT_CLASSIFICATION	6.332081081303307E-4	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9978174670403351	WITHOUT_CLASSIFICATION	0.0021825329596647574	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9993608789706756	WITHOUT_CLASSIFICATION	6.391210293244071E-4	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9906804391681611	WITHOUT_CLASSIFICATION	0.00931956083183894	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9991304506666712	WITHOUT_CLASSIFICATION	8.695493333288707E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998715942774055	WITHOUT_CLASSIFICATION	1.2840572259449753E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998715942774055	WITHOUT_CLASSIFICATION	1.2840572259449753E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998715942774055	WITHOUT_CLASSIFICATION	1.2840572259449753E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998715942774055	WITHOUT_CLASSIFICATION	1.2840572259449753E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998715942774055	WITHOUT_CLASSIFICATION	1.2840572259449753E-4	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.99971163109335	WITHOUT_CLASSIFICATION	2.883689066499496E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999574265905553	WITHOUT_CLASSIFICATION	4.2573409444679395E-5	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999409354871193	WITHOUT_CLASSIFICATION	5.906451288085973E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999694538040906	WITHOUT_CLASSIFICATION	3.0546195909341506E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999941941399357	WITHOUT_CLASSIFICATION	5.8058600642293305E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998752845337615	WITHOUT_CLASSIFICATION	1.2471546623851442E-4	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9985870480446695	WITHOUT_CLASSIFICATION	0.0014129519553306323	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9908184401534236	WITHOUT_CLASSIFICATION	0.009181559846576322	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999704281668307	WITHOUT_CLASSIFICATION	2.9571833169318085E-5	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999635537450369	WITHOUT_CLASSIFICATION	3.644625496322724E-5	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.99996646808603	WITHOUT_CLASSIFICATION	3.3531913970004586E-5	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998426327886335	WITHOUT_CLASSIFICATION	1.573672113663925E-4	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999612811057794	WITHOUT_CLASSIFICATION	3.8718894220551804E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999993224548601	WITHOUT_CLASSIFICATION	6.775451398439625E-7	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999885271036847	WITHOUT_CLASSIFICATION	1.1472896315262912E-5	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9966003105579495	WITHOUT_CLASSIFICATION	0.0033996894420504267	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9996851096781352	WITHOUT_CLASSIFICATION	3.1489032186483965E-4	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.99999704745908	WITHOUT_CLASSIFICATION	2.9525409199092018E-6	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999380920059389	WITHOUT_CLASSIFICATION	6.190799406105792E-5	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999975045979115	WITHOUT_CLASSIFICATION	2.495402088572134E-6	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999593274879826	WITHOUT_CLASSIFICATION	4.067251201751865E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.999764168155624	WITHOUT_CLASSIFICATION	2.358318443759908E-4	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9997521378197741	WITHOUT_CLASSIFICATION	2.478621802259318E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999990489561452	WITHOUT_CLASSIFICATION	9.510438547966881E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999990489561452	WITHOUT_CLASSIFICATION	9.510438547966881E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999990489561452	WITHOUT_CLASSIFICATION	9.510438547966881E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999990489561452	WITHOUT_CLASSIFICATION	9.510438547966881E-7	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999966854854152	WITHOUT_CLASSIFICATION	3.31451458488594E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9984668667485023	WITHOUT_CLASSIFICATION	0.0015331332514976308	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999926482248056	WITHOUT_CLASSIFICATION	7.351775194400034E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999926482248056	WITHOUT_CLASSIFICATION	7.351775194400034E-6	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999661346075641	WITHOUT_CLASSIFICATION	3.3865392435910945E-5	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9995712682043383	WITHOUT_CLASSIFICATION	4.287317956616863E-4	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999561576608477	WITHOUT_CLASSIFICATION	4.384233915232591E-5	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999754329597358	WITHOUT_CLASSIFICATION	2.456704026416766E-5	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999730218821425	WITHOUT_CLASSIFICATION	2.69781178574302E-5	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9998103058048907	WITHOUT_CLASSIFICATION	1.8969419510922453E-4	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999326377110399	WITHOUT_CLASSIFICATION	6.73622889600624E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999032721823421	WITHOUT_CLASSIFICATION	9.672781765795364E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999032721823421	WITHOUT_CLASSIFICATION	9.672781765795364E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999032721823421	WITHOUT_CLASSIFICATION	9.672781765795364E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999032721823421	WITHOUT_CLASSIFICATION	9.672781765795364E-5	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9997623766320621	WITHOUT_CLASSIFICATION	2.3762336793795523E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9996798091925844	WITHOUT_CLASSIFICATION	3.201908074156971E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9996798091925844	WITHOUT_CLASSIFICATION	3.201908074156971E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9996798091925844	WITHOUT_CLASSIFICATION	3.201908074156971E-4	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999828846812677	WITHOUT_CLASSIFICATION	1.7115318732316413E-5	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9996344490398262	WITHOUT_CLASSIFICATION	3.655509601738112E-4	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9998486458492747	WITHOUT_CLASSIFICATION	1.5135415072528826E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8871384961698217	WITHOUT_CLASSIFICATION	0.11286150383017843	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8871384961698217	WITHOUT_CLASSIFICATION	0.11286150383017843	DESIGN
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999939941648665	WITHOUT_CLASSIFICATION	6.005835133637787E-6	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.6921546967907898	WITHOUT_CLASSIFICATION	0.30784530320921033	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.999769967228796	WITHOUT_CLASSIFICATION	2.300327712041352E-4	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.999769967228796	WITHOUT_CLASSIFICATION	2.300327712041352E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999709310633101	WITHOUT_CLASSIFICATION	2.906893668974737E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999709310633101	WITHOUT_CLASSIFICATION	2.906893668974737E-5	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999998307106062	WITHOUT_CLASSIFICATION	1.6928939383292328E-7	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999950596531403	WITHOUT_CLASSIFICATION	4.9403468597638244E-6	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999929943761883	WITHOUT_CLASSIFICATION	7.005623811814474E-6	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999997008414911	WITHOUT_CLASSIFICATION	2.9915850886782853E-7	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9995056690036676	WITHOUT_CLASSIFICATION	4.943309963323837E-4	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9995096616180288	WITHOUT_CLASSIFICATION	4.903383819711297E-4	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999828571638821	WITHOUT_CLASSIFICATION	1.7142836117810177E-5	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9737001863606655	WITHOUT_CLASSIFICATION	0.026299813639334556	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9996345097516791	WITHOUT_CLASSIFICATION	3.65490248320877E-4	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999975161220723	WITHOUT_CLASSIFICATION	2.483877927644709E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999975161220723	WITHOUT_CLASSIFICATION	2.483877927644709E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9996878306925691	WITHOUT_CLASSIFICATION	3.1216930743084624E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9996878306925691	WITHOUT_CLASSIFICATION	3.1216930743084624E-4	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9998439684705789	WITHOUT_CLASSIFICATION	1.5603152942114763E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9995607421196552	WITHOUT_CLASSIFICATION	4.3925788034488355E-4	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999740727282928	WITHOUT_CLASSIFICATION	2.5927271707207414E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9997169348405601	WITHOUT_CLASSIFICATION	2.830651594399314E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9997169348405601	WITHOUT_CLASSIFICATION	2.830651594399314E-4	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9997169348405601	WITHOUT_CLASSIFICATION	2.830651594399314E-4	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999865851619911	WITHOUT_CLASSIFICATION	1.3414838008866891E-5	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999829249909381	WITHOUT_CLASSIFICATION	1.707500906186504E-5	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999851045462617	WITHOUT_CLASSIFICATION	1.489545373840602E-5	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999852963440466	WITHOUT_CLASSIFICATION	1.470365595324263E-5	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999824965163269	WITHOUT_CLASSIFICATION	1.750348367312804E-5	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999831429550904	WITHOUT_CLASSIFICATION	1.685704490963358E-5	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999844812875629	WITHOUT_CLASSIFICATION	1.551871243709155E-5	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999511202688447	WITHOUT_CLASSIFICATION	4.8879731155368974E-5	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998245486959841	WITHOUT_CLASSIFICATION	1.7545130401587752E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9988402298031831	WITHOUT_CLASSIFICATION	0.0011597701968168654	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.8499823059886447	WITHOUT_CLASSIFICATION	0.15001769401135545	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9998243164727604	WITHOUT_CLASSIFICATION	1.7568352723966568E-4	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999985118069692	WITHOUT_CLASSIFICATION	1.4881930308328008E-6	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8871384961698217	WITHOUT_CLASSIFICATION	0.11286150383017843	DESIGN
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999103198893728	WITHOUT_CLASSIFICATION	8.968011062716591E-5	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999868466116086	WITHOUT_CLASSIFICATION	1.3153388391321394E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9964535906754516	WITHOUT_CLASSIFICATION	0.003546409324548427	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9995476032464895	WITHOUT_CLASSIFICATION	4.523967535105132E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9995476032464895	WITHOUT_CLASSIFICATION	4.523967535105132E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9995476032464895	WITHOUT_CLASSIFICATION	4.523967535105132E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9995476032464895	WITHOUT_CLASSIFICATION	4.523967535105132E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9995476032464895	WITHOUT_CLASSIFICATION	4.523967535105132E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997141495166798	WITHOUT_CLASSIFICATION	2.8585048332028525E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9995476032464895	WITHOUT_CLASSIFICATION	4.523967535105132E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9995476032464895	WITHOUT_CLASSIFICATION	4.523967535105132E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9995476032464895	WITHOUT_CLASSIFICATION	4.523967535105132E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999271018669037	WITHOUT_CLASSIFICATION	7.289813309631929E-5	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999171596469322	WITHOUT_CLASSIFICATION	8.284035306780936E-5	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9994636191484334	WITHOUT_CLASSIFICATION	5.363808515665491E-4	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9993574695720595	WITHOUT_CLASSIFICATION	6.425304279406199E-4	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9984242587752626	WITHOUT_CLASSIFICATION	0.00157574122473739	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9998711119521214	WITHOUT_CLASSIFICATION	1.2888804787849402E-4	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9994174489649905	WITHOUT_CLASSIFICATION	5.825510350095582E-4	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999855534533262	WITHOUT_CLASSIFICATION	1.4446546673827373E-5	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999868629816646	WITHOUT_CLASSIFICATION	1.3137018335384373E-5	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999868629816646	WITHOUT_CLASSIFICATION	1.3137018335384373E-5	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.999985455199655	WITHOUT_CLASSIFICATION	1.4544800345077079E-5	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999841213587622	WITHOUT_CLASSIFICATION	1.5878641237776114E-5	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999852053687359	WITHOUT_CLASSIFICATION	1.4794631264094285E-5	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.99998536471975	WITHOUT_CLASSIFICATION	1.463528025000286E-5	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999859026306853	WITHOUT_CLASSIFICATION	1.4097369314658061E-5	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999831119695081	WITHOUT_CLASSIFICATION	1.6888030491908974E-5	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999815830856785	WITHOUT_CLASSIFICATION	1.841691432144045E-5	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999831743462902	WITHOUT_CLASSIFICATION	1.682565370977168E-5	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999831560096393	WITHOUT_CLASSIFICATION	1.684399036073419E-5	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999867440548127	WITHOUT_CLASSIFICATION	1.3255945187440135E-5	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999880322981648	WITHOUT_CLASSIFICATION	1.1967701835241693E-5	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999861714200631	WITHOUT_CLASSIFICATION	1.3828579937074727E-5	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.999983578297661	WITHOUT_CLASSIFICATION	1.6421702338870927E-5	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999844027948791	WITHOUT_CLASSIFICATION	1.5597205120898636E-5	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999848330031104	WITHOUT_CLASSIFICATION	1.5166996889568709E-5	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999826360420053	WITHOUT_CLASSIFICATION	1.736395799469696E-5	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999828732086276	WITHOUT_CLASSIFICATION	1.712679137241121E-5	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999847780163694	WITHOUT_CLASSIFICATION	1.5221983630554598E-5	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999846257303205	WITHOUT_CLASSIFICATION	1.537426967946178E-5	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999851634481433	WITHOUT_CLASSIFICATION	1.4836551856597923E-5	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.999984455454264	WITHOUT_CLASSIFICATION	1.554454573596583E-5	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.999985278453478	WITHOUT_CLASSIFICATION	1.4721546521901345E-5	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999842024702461	WITHOUT_CLASSIFICATION	1.579752975380788E-5	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999874057224276	WITHOUT_CLASSIFICATION	1.2594277572528979E-5	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.999990240547761	WITHOUT_CLASSIFICATION	9.759452238911576E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999886702021068	WITHOUT_CLASSIFICATION	1.1329797893206298E-5	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999879180861565	WITHOUT_CLASSIFICATION	1.2081913843447192E-5	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999883116978582	WITHOUT_CLASSIFICATION	1.168830214194872E-5	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999880194803715	WITHOUT_CLASSIFICATION	1.1980519628616134E-5	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999876780872003	WITHOUT_CLASSIFICATION	1.2321912799630758E-5	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999882244697551	WITHOUT_CLASSIFICATION	1.1775530244756516E-5	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999858214568685	WITHOUT_CLASSIFICATION	1.4178543131309284E-5	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999863768465042	WITHOUT_CLASSIFICATION	1.3623153495831127E-5	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999870190430414	WITHOUT_CLASSIFICATION	1.2980956958516596E-5	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999900221191241	WITHOUT_CLASSIFICATION	9.977880875865574E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.999989536740319	WITHOUT_CLASSIFICATION	1.0463259681040153E-5	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999883985604933	WITHOUT_CLASSIFICATION	1.160143950673557E-5	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999883530514024	WITHOUT_CLASSIFICATION	1.1646948597573706E-5	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999893261484709	WITHOUT_CLASSIFICATION	1.0673851529045495E-5	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999886855177108	WITHOUT_CLASSIFICATION	1.1314482289171558E-5	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.999988209696011	WITHOUT_CLASSIFICATION	1.1790303989072013E-5	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999904098152724	WITHOUT_CLASSIFICATION	9.590184727478204E-6	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999885231287836	WITHOUT_CLASSIFICATION	1.1476871216482601E-5	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999857108167582	WITHOUT_CLASSIFICATION	1.4289183241735635E-5	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999864368838849	WITHOUT_CLASSIFICATION	1.3563116115103334E-5	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999865429919085	WITHOUT_CLASSIFICATION	1.345700809154016E-5	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999864731795624	WITHOUT_CLASSIFICATION	1.3526820437712568E-5	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.999986894596403	WITHOUT_CLASSIFICATION	1.3105403597021525E-5	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999887458838987	WITHOUT_CLASSIFICATION	1.1254116101206002E-5	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999856190399231	WITHOUT_CLASSIFICATION	1.4380960076836782E-5	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999881951496643	WITHOUT_CLASSIFICATION	1.180485033570323E-5	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.999988314703202	WITHOUT_CLASSIFICATION	1.1685296797936404E-5	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999888206490213	WITHOUT_CLASSIFICATION	1.117935097866819E-5	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999883654499042	WITHOUT_CLASSIFICATION	1.1634550095689951E-5	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999883654499042	WITHOUT_CLASSIFICATION	1.1634550095689951E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999859060704971	WITHOUT_CLASSIFICATION	1.4093929502979347E-5	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999906234709157	WITHOUT_CLASSIFICATION	9.376529084334373E-6	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.999986894140517	WITHOUT_CLASSIFICATION	1.3105859482910153E-5	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999888816848896	WITHOUT_CLASSIFICATION	1.1118315110373408E-5	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999871478562189	WITHOUT_CLASSIFICATION	1.285214378100825E-5	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999881636804976	WITHOUT_CLASSIFICATION	1.1836319502295734E-5	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999858902113322	WITHOUT_CLASSIFICATION	1.4109788667812292E-5	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999851289947328	WITHOUT_CLASSIFICATION	1.4871005267266648E-5	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999877780835864	WITHOUT_CLASSIFICATION	1.2221916413649578E-5	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999866740505967	WITHOUT_CLASSIFICATION	1.3325949403258393E-5	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998322721404264	WITHOUT_CLASSIFICATION	1.6772785957371538E-4	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998322721404264	WITHOUT_CLASSIFICATION	1.6772785957371538E-4	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999586965754007	WITHOUT_CLASSIFICATION	4.130342459939436E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9987481604824717	WITHOUT_CLASSIFICATION	0.0012518395175282343	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998941316265391	WITHOUT_CLASSIFICATION	1.0586837346091794E-4	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999894464072787	WITHOUT_CLASSIFICATION	1.0553592721295866E-4	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999891779681727	WITHOUT_CLASSIFICATION	1.0822031827359535E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999891779681727	WITHOUT_CLASSIFICATION	1.0822031827359535E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999891779681727	WITHOUT_CLASSIFICATION	1.0822031827359535E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999891779681727	WITHOUT_CLASSIFICATION	1.0822031827359535E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9994607067260578	WITHOUT_CLASSIFICATION	5.392932739422183E-4	DESIGN
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9974599358360866	WITHOUT_CLASSIFICATION	0.0025400641639133784	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9999844208080524	WITHOUT_CLASSIFICATION	1.5579191947692114E-5	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.999982012345662	WITHOUT_CLASSIFICATION	1.7987654338088462E-5	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.999985508420944	WITHOUT_CLASSIFICATION	1.449157905589159E-5	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999854476484151	WITHOUT_CLASSIFICATION	1.4552351584847065E-5	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999855236582361	WITHOUT_CLASSIFICATION	1.4476341763764534E-5	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999858717096629	WITHOUT_CLASSIFICATION	1.4128290337097218E-5	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999856604070532	WITHOUT_CLASSIFICATION	1.4339592946793786E-5	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999838405758994	WITHOUT_CLASSIFICATION	1.61594241007086E-5	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999807067330652	WITHOUT_CLASSIFICATION	1.9293266934826497E-5	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999861920605414	WITHOUT_CLASSIFICATION	1.3807939458677015E-5	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999852233237481	WITHOUT_CLASSIFICATION	1.477667625205076E-5	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999822707390364	WITHOUT_CLASSIFICATION	1.7729260963571654E-5	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999819576989304	WITHOUT_CLASSIFICATION	1.804230106963031E-5	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999847688019385	WITHOUT_CLASSIFICATION	1.52311980614328E-5	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.999981566264675	WITHOUT_CLASSIFICATION	1.843373532500692E-5	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999861608488605	WITHOUT_CLASSIFICATION	1.3839151139477784E-5	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999861719813504	WITHOUT_CLASSIFICATION	1.3828018649444148E-5	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999842031316148	WITHOUT_CLASSIFICATION	1.5796868385089472E-5	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999863623604067	WITHOUT_CLASSIFICATION	1.3637639593339488E-5	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999843348028965	WITHOUT_CLASSIFICATION	1.5665197103479395E-5	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999850387017775	WITHOUT_CLASSIFICATION	1.4961298222605566E-5	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999828883204531	WITHOUT_CLASSIFICATION	1.7111679546896682E-5	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999845614262711	WITHOUT_CLASSIFICATION	1.5438573728842233E-5	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999884674299091	WITHOUT_CLASSIFICATION	1.1532570090960463E-5	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999900195037129	WITHOUT_CLASSIFICATION	9.980496287041918E-6	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999882636879317	WITHOUT_CLASSIFICATION	1.1736312068184886E-5	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999882187441866	WITHOUT_CLASSIFICATION	1.178125581341997E-5	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999862484485537	WITHOUT_CLASSIFICATION	1.3751551446287611E-5	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999874973310083	WITHOUT_CLASSIFICATION	1.2502668991647554E-5	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999883466336981	WITHOUT_CLASSIFICATION	1.1653366301967108E-5	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999888455820374	WITHOUT_CLASSIFICATION	1.1154417962660049E-5	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999885047467674	WITHOUT_CLASSIFICATION	1.1495253232646796E-5	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999891992509993	WITHOUT_CLASSIFICATION	1.0800749000841055E-5	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999877894763832	WITHOUT_CLASSIFICATION	1.2210523616805073E-5	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999864805587204	WITHOUT_CLASSIFICATION	1.351944127961102E-5	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999851873005655	WITHOUT_CLASSIFICATION	1.4812699434350957E-5	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999886974829466	WITHOUT_CLASSIFICATION	1.1302517053402507E-5	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999857288154512	WITHOUT_CLASSIFICATION	1.4271184548704675E-5	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999905132076817	WITHOUT_CLASSIFICATION	9.486792318218974E-6	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999870647623618	WITHOUT_CLASSIFICATION	1.2935237638342519E-5	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999864941277525	WITHOUT_CLASSIFICATION	1.3505872247420803E-5	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999855122097947	WITHOUT_CLASSIFICATION	1.4487790205250296E-5	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999858321495767	WITHOUT_CLASSIFICATION	1.4167850423356739E-5	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999866659573569	WITHOUT_CLASSIFICATION	1.3334042643045624E-5	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999895010058373	WITHOUT_CLASSIFICATION	1.0498994162696446E-5	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999860901391491	WITHOUT_CLASSIFICATION	1.3909860850788885E-5	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999888067837904	WITHOUT_CLASSIFICATION	1.1193216209517232E-5	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999862797119667	WITHOUT_CLASSIFICATION	1.3720288033340925E-5	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999853112090128	WITHOUT_CLASSIFICATION	1.4688790987205048E-5	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999865028425804	WITHOUT_CLASSIFICATION	1.3497157419590053E-5	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999884692858982	WITHOUT_CLASSIFICATION	1.1530714101785838E-5	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999870607136369	WITHOUT_CLASSIFICATION	1.2939286363086605E-5	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999863795374522	WITHOUT_CLASSIFICATION	1.362046254781298E-5	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999882461409656	WITHOUT_CLASSIFICATION	1.1753859034336226E-5	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999877148442339	WITHOUT_CLASSIFICATION	1.228515576618962E-5	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999879206323824	WITHOUT_CLASSIFICATION	1.2079367617602833E-5	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999903999316466	WITHOUT_CLASSIFICATION	9.600068353296997E-6	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9991710193743655	WITHOUT_CLASSIFICATION	8.289806256344187E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999859978369059	WITHOUT_CLASSIFICATION	1.4002163094154116E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9927137935726164	WITHOUT_CLASSIFICATION	0.007286206427383636	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9927137935726164	WITHOUT_CLASSIFICATION	0.007286206427383636	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9927137935726164	WITHOUT_CLASSIFICATION	0.007286206427383636	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9927137935726164	WITHOUT_CLASSIFICATION	0.007286206427383636	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9927137935726164	WITHOUT_CLASSIFICATION	0.007286206427383636	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9927137935726164	WITHOUT_CLASSIFICATION	0.007286206427383636	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9927137935726164	WITHOUT_CLASSIFICATION	0.007286206427383636	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9958567520253647	WITHOUT_CLASSIFICATION	0.004143247974635215	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9958567520253647	WITHOUT_CLASSIFICATION	0.004143247974635215	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9958567520253647	WITHOUT_CLASSIFICATION	0.004143247974635215	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9958567520253647	WITHOUT_CLASSIFICATION	0.004143247974635215	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9987315049601878	WITHOUT_CLASSIFICATION	0.0012684950398122268	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9987315049601878	WITHOUT_CLASSIFICATION	0.0012684950398122268	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9983784886563288	WITHOUT_CLASSIFICATION	0.001621511343671139	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999164557956429	WITHOUT_CLASSIFICATION	8.354420435706499E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999164557956429	WITHOUT_CLASSIFICATION	8.354420435706499E-5	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999685581206931	WITHOUT_CLASSIFICATION	3.144187930701183E-5	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9998973092265521	WITHOUT_CLASSIFICATION	1.0269077344784607E-4	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999550749316908	WITHOUT_CLASSIFICATION	4.4925068309269456E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999550749316908	WITHOUT_CLASSIFICATION	4.4925068309269456E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999550749316908	WITHOUT_CLASSIFICATION	4.4925068309269456E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999550749316908	WITHOUT_CLASSIFICATION	4.4925068309269456E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999550749316908	WITHOUT_CLASSIFICATION	4.4925068309269456E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999550749316908	WITHOUT_CLASSIFICATION	4.4925068309269456E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999550749316908	WITHOUT_CLASSIFICATION	4.4925068309269456E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999929459897224	WITHOUT_CLASSIFICATION	7.054010277611389E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999961128444474	WITHOUT_CLASSIFICATION	3.887155552552358E-6	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999996287403072	WITHOUT_CLASSIFICATION	3.7125969272356603E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999996287403072	WITHOUT_CLASSIFICATION	3.7125969272356603E-7	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999870690825653	WITHOUT_CLASSIFICATION	1.293091743459867E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998751556499517	WITHOUT_CLASSIFICATION	1.2484435004826898E-4	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998751556499517	WITHOUT_CLASSIFICATION	1.2484435004826898E-4	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9998852406937644	WITHOUT_CLASSIFICATION	1.1475930623562322E-4	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.995468517240385	WITHOUT_CLASSIFICATION	0.0045314827596150235	DESIGN
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9984700247265645	WITHOUT_CLASSIFICATION	0.0015299752734353534	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9993986659937626	WITHOUT_CLASSIFICATION	6.01334006237461E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999437455342148	WITHOUT_CLASSIFICATION	5.625446578511477E-5	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999263946723745	WITHOUT_CLASSIFICATION	7.360532762542702E-5	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9943001227859483	WITHOUT_CLASSIFICATION	0.005699877214051772	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9994989216403094	WITHOUT_CLASSIFICATION	5.010783596905427E-4	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999950341403101	WITHOUT_CLASSIFICATION	4.965859689898575E-6	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999949970130579	WITHOUT_CLASSIFICATION	5.0029869420976905E-6	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9982448128475945	WITHOUT_CLASSIFICATION	0.0017551871524054661	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.999663387345078	WITHOUT_CLASSIFICATION	3.366126549219817E-4	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999996844769974	WITHOUT_CLASSIFICATION	3.1552300265437355E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9875877901502422	WITHOUT_CLASSIFICATION	0.012412209849757704	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999898173071787	WITHOUT_CLASSIFICATION	1.0182692821189618E-5	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999980674998794	WITHOUT_CLASSIFICATION	1.9325001206213467E-6	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999910433304267	WITHOUT_CLASSIFICATION	8.956669573322335E-6	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998327589352647	WITHOUT_CLASSIFICATION	1.6724106473521276E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9998722606956639	WITHOUT_CLASSIFICATION	1.2773930433611323E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9998722606956639	WITHOUT_CLASSIFICATION	1.2773930433611323E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999982443904991	WITHOUT_CLASSIFICATION	1.7556095009461397E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999657825528242	WITHOUT_CLASSIFICATION	3.4217447175768075E-5	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999695034846832	WITHOUT_CLASSIFICATION	3.0496515316828804E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9993207523078448	WITHOUT_CLASSIFICATION	6.792476921553053E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9997792684325855	WITHOUT_CLASSIFICATION	2.2073156741457772E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9997792684325855	WITHOUT_CLASSIFICATION	2.2073156741457772E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9997792684325855	WITHOUT_CLASSIFICATION	2.2073156741457772E-4	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9993568122321735	WITHOUT_CLASSIFICATION	6.431877678264598E-4	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9996628039475035	WITHOUT_CLASSIFICATION	3.3719605249652677E-4	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9968863539086752	WITHOUT_CLASSIFICATION	0.0031136460913248386	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9996278333160181	WITHOUT_CLASSIFICATION	3.721666839819529E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.6065474420516179	WITHOUT_CLASSIFICATION	0.3934525579483821	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9997412302762935	WITHOUT_CLASSIFICATION	2.587697237065864E-4	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999480322358402	WITHOUT_CLASSIFICATION	5.196776415990527E-5	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999881245445656	WITHOUT_CLASSIFICATION	1.1875455434393486E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9997059069053843	WITHOUT_CLASSIFICATION	2.940930946157063E-4	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9998454175627265	WITHOUT_CLASSIFICATION	1.5458243727345568E-4	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999858222410408	WITHOUT_CLASSIFICATION	1.41777589592058E-5	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999672217418202	WITHOUT_CLASSIFICATION	3.2778258179908554E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9985105193340862	WITHOUT_CLASSIFICATION	0.0014894806659137764	DESIGN
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9982629239933702	WITHOUT_CLASSIFICATION	0.001737076006629691	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999673556113382	WITHOUT_CLASSIFICATION	3.264438866171264E-5	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999363228297	WITHOUT_CLASSIFICATION	6.367717028293843E-8	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999605585231426	WITHOUT_CLASSIFICATION	3.9441476857407786E-5	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999995016635058	WITHOUT_CLASSIFICATION	4.983364942060951E-6	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999115147287466	WITHOUT_CLASSIFICATION	8.848527125333425E-5	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.9993434486072722	WITHOUT_CLASSIFICATION	6.565513927277605E-4	DESIGN
// FIXME: move out of this class!	DESIGN	0.995120789047193	WITHOUT_CLASSIFICATION	0.0048792109528069255	DESIGN
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9254799183410451	WITHOUT_CLASSIFICATION	0.07452008165895496	DESIGN
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9989658974392788	WITHOUT_CLASSIFICATION	0.0010341025607212763	DESIGN
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9854003022965665	WITHOUT_CLASSIFICATION	0.014599697703433433	DESIGN
// TODO: eliminate?	DESIGN	0.9274307076755937	WITHOUT_CLASSIFICATION	0.07256929232440626	DESIGN
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.7680419503664696	WITHOUT_CLASSIFICATION	0.2319580496335304	DESIGN
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9943711632683012	WITHOUT_CLASSIFICATION	0.00562883673169878	DESIGN
// we might need to perform a DST correction	DESIGN	0.9999641936172551	WITHOUT_CLASSIFICATION	3.580638274493232E-5	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9998014469180304	WITHOUT_CLASSIFICATION	1.9855308196961861E-4	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9734985569024395	WITHOUT_CLASSIFICATION	0.026501443097560584	DESIGN
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9998045103758757	WITHOUT_CLASSIFICATION	1.9548962412443944E-4	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9561150214380877	WITHOUT_CLASSIFICATION	0.043884978561912244	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9561150214380877	WITHOUT_CLASSIFICATION	0.043884978561912244	DESIGN
// TODO: is this correct ?	DESIGN	0.5442344949272374	DESIGN	0.4557655050727627	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9724560784613692	WITHOUT_CLASSIFICATION	0.02754392153863079	DESIGN
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9060643026713322	DESIGN	0.0939356973286678	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9978813777427964	WITHOUT_CLASSIFICATION	0.0021186222572035463	DESIGN
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9978013702780958	WITHOUT_CLASSIFICATION	0.002198629721904231	DESIGN
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.6677209595174858	DESIGN	0.3322790404825142	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.577799759561706	DESIGN	0.42220024043829385	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.8160161141556249	WITHOUT_CLASSIFICATION	0.18398388584437506	DESIGN
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9998037382431608	WITHOUT_CLASSIFICATION	1.962617568391326E-4	DESIGN
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.9993753895430306	WITHOUT_CLASSIFICATION	6.246104569693935E-4	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.62406114665057	DESIGN	0.37593885334943	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.84799441601574	DESIGN	0.15200558398425998	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9918723487091129	WITHOUT_CLASSIFICATION	0.00812765129088721	DESIGN
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.5323019468479284	DESIGN	0.4676980531520716	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9999573131345562	WITHOUT_CLASSIFICATION	4.268686544383E-5	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9746766942800911	DESIGN	0.025323305719909005	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9997442796374917	WITHOUT_CLASSIFICATION	2.557203625082404E-4	DESIGN
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9964387034593465	WITHOUT_CLASSIFICATION	0.003561296540653508	DESIGN
// TODO: no java stringity	DESIGN	0.9961369279528233	WITHOUT_CLASSIFICATION	0.0038630720471767624	DESIGN
// need to reexamine this	DESIGN	0.9999241074762879	WITHOUT_CLASSIFICATION	7.589252371209016E-5	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.7161253193457323	DESIGN	0.2838746806542678	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9937025707465034	WITHOUT_CLASSIFICATION	0.006297429253496686	DESIGN
// TODO: this method is not present in MRI!	DESIGN	0.7368731451170306	WITHOUT_CLASSIFICATION	0.2631268548829694	DESIGN
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.8551668498078451	WITHOUT_CLASSIFICATION	0.14483315019215495	DESIGN
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9590682275134373	DESIGN	0.0409317724865627	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9998434163024628	WITHOUT_CLASSIFICATION	1.565836975372196E-4	DESIGN
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9983210801977953	DESIGN	0.001678919802204711	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.6064297344216766	WITHOUT_CLASSIFICATION	0.3935702655783233	DESIGN
// TODO: better error handling	DESIGN	0.5326545341257111	WITHOUT_CLASSIFICATION	0.4673454658742889	DESIGN
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9999655289429559	WITHOUT_CLASSIFICATION	3.4471057044056994E-5	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9980049883692818	WITHOUT_CLASSIFICATION	0.0019950116307181727	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.6544454222496275	WITHOUT_CLASSIFICATION	0.34555457775037235	DESIGN
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9986743913308102	WITHOUT_CLASSIFICATION	0.0013256086691898485	DESIGN
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9722417110704665	WITHOUT_CLASSIFICATION	0.027758288929533505	DESIGN
// FIXME: I don't like the null checks here	DESIGN	0.9999759717800181	WITHOUT_CLASSIFICATION	2.4028219981952987E-5	DESIGN
// TODO: handle writing into original buffer better	DESIGN	0.919340762555618	DESIGN	0.08065923744438194	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9680457583106131	DESIGN	0.0319542416893868	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.805920525963947	WITHOUT_CLASSIFICATION	0.19407947403605302	DESIGN
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.501380165456059	WITHOUT_CLASSIFICATION	0.498619834543941	DESIGN
/* FIXME: finalizer should be dupped here */	DESIGN	0.9989705885963237	WITHOUT_CLASSIFICATION	0.001029411403676233	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.998989834227582	WITHOUT_CLASSIFICATION	0.0010101657724179735	DESIGN
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9959433420925803	WITHOUT_CLASSIFICATION	0.00405665790741966	DESIGN
// Workaround for JRUBY-4149	DESIGN	0.9168311942879711	WITHOUT_CLASSIFICATION	0.08316880571202888	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.955456348718532	WITHOUT_CLASSIFICATION	0.04454365128146796	DESIGN
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9898618729680614	DESIGN	0.010138127031938698	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9887387634704776	WITHOUT_CLASSIFICATION	0.011261236529522399	DESIGN
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9803172924083792	WITHOUT_CLASSIFICATION	0.01968270759162079	DESIGN
// TODO: Consider a better way of synchronizing 	DESIGN	0.5566007135474303	WITHOUT_CLASSIFICATION	0.4433992864525695	DESIGN
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.8914948926504659	WITHOUT_CLASSIFICATION	0.10850510734953411	DESIGN
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.734220336252193	WITHOUT_CLASSIFICATION	0.26577966374780704	DESIGN
// FIXME: figure out why we get null sometimes	DESIGN	0.9997337220984814	WITHOUT_CLASSIFICATION	2.66277901518473E-4	DESIGN
// FIXME: Can get optimized for IEqlNode	DESIGN	0.9999909490431808	WITHOUT_CLASSIFICATION	9.050956819136808E-6	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.986029504198865	WITHOUT_CLASSIFICATION	0.013970495801135062	DESIGN
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9999502959918205	WITHOUT_CLASSIFICATION	4.970400817955706E-5	DESIGN
// TODO: what about n arg?	DESIGN	0.5163481988634732	WITHOUT_CLASSIFICATION	0.4836518011365269	DESIGN
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9961683197637257	DESIGN	0.0038316802362743487	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9904131508184298	WITHOUT_CLASSIFICATION	0.009586849181570177	DESIGN
// TODO: better algorithm to set precision needed	DESIGN	0.954179233845929	WITHOUT_CLASSIFICATION	0.045820766154071	DESIGN
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9975268382123943	WITHOUT_CLASSIFICATION	0.002473161787605628	DESIGN
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9682679296548456	WITHOUT_CLASSIFICATION	0.03173207034515437	DESIGN
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9725294621907333	WITHOUT_CLASSIFICATION	0.0274705378092667	DESIGN
// Yow...this is still ugly	DESIGN	0.9985610123349691	WITHOUT_CLASSIFICATION	0.0014389876650309108	DESIGN
// end hack	DESIGN	0.9990249649590497	WITHOUT_CLASSIFICATION	9.750350409504479E-4	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.8844472697259277	WITHOUT_CLASSIFICATION	0.11555273027407226	DESIGN
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.5333789565372278	WITHOUT_CLASSIFICATION	0.46662104346277233	DESIGN
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9601371323234621	WITHOUT_CLASSIFICATION	0.039862867676537815	DESIGN
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9991748826898597	WITHOUT_CLASSIFICATION	8.251173101403133E-4	DESIGN
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.6180350216052518	WITHOUT_CLASSIFICATION	0.3819649783947483	DESIGN
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999874526012363	WITHOUT_CLASSIFICATION	1.2547398763612644E-5	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9992949657462643	WITHOUT_CLASSIFICATION	7.050342537357638E-4	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9969623522910531	WITHOUT_CLASSIFICATION	0.003037647708946956	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9969623522910531	WITHOUT_CLASSIFICATION	0.003037647708946956	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9969623522910531	WITHOUT_CLASSIFICATION	0.003037647708946956	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.996233321249814	WITHOUT_CLASSIFICATION	0.00376667875018601	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.562439564741629	WITHOUT_CLASSIFICATION	0.43756043525837096	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.5932621362136086	DESIGN	0.40673786378639143	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9999741851417971	WITHOUT_CLASSIFICATION	2.581485820290876E-5	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.9721749864253352	WITHOUT_CLASSIFICATION	0.027825013574664822	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.7546406619347981	WITHOUT_CLASSIFICATION	0.245359338065202	DESIGN
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9698508864240349	WITHOUT_CLASSIFICATION	0.030149113575965055	DESIGN
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9978225424520887	WITHOUT_CLASSIFICATION	0.0021774575479114175	DESIGN
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9669915700169737	WITHOUT_CLASSIFICATION	0.03300842998302637	DESIGN
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9994766072351526	WITHOUT_CLASSIFICATION	5.233927648473926E-4	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.8813291208831168	DESIGN	0.1186708791168832	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.6637550114553917	WITHOUT_CLASSIFICATION	0.33624498854460827	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.8813291208831168	DESIGN	0.1186708791168832	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9974565002562359	WITHOUT_CLASSIFICATION	0.0025434997437641465	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8013129543265086	WITHOUT_CLASSIFICATION	0.19868704567349146	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8013129543265086	WITHOUT_CLASSIFICATION	0.19868704567349146	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.8206067244491069	WITHOUT_CLASSIFICATION	0.17939327555089307	DESIGN
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9984217226867375	DESIGN	0.0015782773132625386	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.8206067244491069	WITHOUT_CLASSIFICATION	0.17939327555089307	DESIGN
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9996906327430789	WITHOUT_CLASSIFICATION	3.093672569211082E-4	DESIGN
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9984575776697768	WITHOUT_CLASSIFICATION	0.001542422330223107	DESIGN
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.7779875228529552	DESIGN	0.22201247714704472	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9968159005484025	WITHOUT_CLASSIFICATION	0.0031840994515974523	DESIGN
// TODO: cache?	DESIGN	0.7708791802376133	WITHOUT_CLASSIFICATION	0.22912081976238674	DESIGN
// TODO: cache?	DESIGN	0.7708791802376133	WITHOUT_CLASSIFICATION	0.22912081976238674	DESIGN
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9994589361367808	WITHOUT_CLASSIFICATION	5.410638632192565E-4	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9999853699444007	WITHOUT_CLASSIFICATION	1.4630055599380953E-5	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9175911926662625	WITHOUT_CLASSIFICATION	0.08240880733373745	DESIGN
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9914937718593089	WITHOUT_CLASSIFICATION	0.00850622814069114	DESIGN
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.978575125372042	WITHOUT_CLASSIFICATION	0.021424874627957953	DESIGN
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9553103119161975	WITHOUT_CLASSIFICATION	0.04468968808380255	DESIGN
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9997289891498977	WITHOUT_CLASSIFICATION	2.7101085010222995E-4	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9988936631683745	WITHOUT_CLASSIFICATION	0.0011063368316255441	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9969809692706526	WITHOUT_CLASSIFICATION	0.0030190307293474225	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9988936631683745	WITHOUT_CLASSIFICATION	0.0011063368316255441	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.999644978370382	WITHOUT_CLASSIFICATION	3.5502162961796233E-4	DESIGN
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9993674531776042	WITHOUT_CLASSIFICATION	6.325468223958252E-4	DESIGN
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9938101965654828	WITHOUT_CLASSIFICATION	0.006189803434517328	DESIGN
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.999872213616669	WITHOUT_CLASSIFICATION	1.2778638333102292E-4	DESIGN
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.903190937653752	WITHOUT_CLASSIFICATION	0.096809062346248	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.9948023285923877	WITHOUT_CLASSIFICATION	0.005197671407612264	DESIGN
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9755364744618876	WITHOUT_CLASSIFICATION	0.024463525538112353	DESIGN
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9950184882795627	WITHOUT_CLASSIFICATION	0.00498151172043726	DESIGN
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9997991277689972	WITHOUT_CLASSIFICATION	2.008722310027795E-4	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.9948023285923877	WITHOUT_CLASSIFICATION	0.005197671407612264	DESIGN
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9999913776090296	WITHOUT_CLASSIFICATION	8.622390970407916E-6	DESIGN
// add a "self" recv here // TODO: is this right?	DESIGN	0.5041481167186878	WITHOUT_CLASSIFICATION	0.49585188328131224	DESIGN
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9982331181207887	WITHOUT_CLASSIFICATION	0.0017668818792112087	DESIGN
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9989033307055901	WITHOUT_CLASSIFICATION	0.0010966692944098925	DESIGN
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9337093999622945	WITHOUT_CLASSIFICATION	0.06629060003770533	DESIGN
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.993049926114513	WITHOUT_CLASSIFICATION	0.0069500738854869504	DESIGN
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9970261590776134	WITHOUT_CLASSIFICATION	0.0029738409223867487	DESIGN
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.997201349940726	WITHOUT_CLASSIFICATION	0.0027986500592740507	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.8195176038663514	WITHOUT_CLASSIFICATION	0.18048239613364855	DESIGN
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9995224119833677	WITHOUT_CLASSIFICATION	4.775880166324108E-4	DESIGN
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9975199166043632	WITHOUT_CLASSIFICATION	0.002480083395636766	DESIGN
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9629358029608002	WITHOUT_CLASSIFICATION	0.0370641970391998	DESIGN
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.850343106224911	WITHOUT_CLASSIFICATION	0.14965689377508887	DESIGN
/* Hack in to replace usual readline with this */	DESIGN	0.9822251113049212	WITHOUT_CLASSIFICATION	0.017774888695078848	DESIGN
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9979810446517541	WITHOUT_CLASSIFICATION	0.002018955348245998	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9893416281383027	WITHOUT_CLASSIFICATION	0.010658371861697317	DESIGN
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9969491004966153	WITHOUT_CLASSIFICATION	0.0030508995033846796	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9997005028696648	WITHOUT_CLASSIFICATION	2.9949713033527515E-4	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.854739499261844	WITHOUT_CLASSIFICATION	0.14526050073815605	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9974455338439588	WITHOUT_CLASSIFICATION	0.002554466156041025	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9999710429571141	WITHOUT_CLASSIFICATION	2.895704288581817E-5	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9890145977707587	WITHOUT_CLASSIFICATION	0.010985402229241194	DESIGN
// FIXME: set up a CallConfiguration for this	DESIGN	0.9998859183732418	WITHOUT_CLASSIFICATION	1.1408162675813467E-4	DESIGN
// FIXME: set up a call configuration for this	DESIGN	0.9986076471292656	WITHOUT_CLASSIFICATION	0.0013923528707343782	DESIGN
// TODO: make this do specific-arity calling	DESIGN	0.5616465457304048	DESIGN	0.4383534542695953	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9986705157393719	WITHOUT_CLASSIFICATION	0.001329484260628178	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9970132916741231	WITHOUT_CLASSIFICATION	0.0029867083258769667	DESIGN
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9952012017403024	WITHOUT_CLASSIFICATION	0.00479879825969764	DESIGN
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999607096621796	WITHOUT_CLASSIFICATION	3.929033782030245E-5	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999423977023275	WITHOUT_CLASSIFICATION	5.760229767241036E-5	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999760160393312	WITHOUT_CLASSIFICATION	2.3983960668820434E-5	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.999839705153591	WITHOUT_CLASSIFICATION	1.6029484640895346E-4	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.9312137903232127	WITHOUT_CLASSIFICATION	0.06878620967678728	DESIGN
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9405731607212007	WITHOUT_CLASSIFICATION	0.05942683927879943	DESIGN
// TODO: public only?	DESIGN	0.9227508351919147	WITHOUT_CLASSIFICATION	0.07724916480808527	DESIGN
// see note below re: 2-field kludge	DESIGN	0.9994849405633334	WITHOUT_CLASSIFICATION	5.150594366665975E-4	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9629672864077086	DESIGN	0.03703271359229135	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9631629679258178	DESIGN	0.03683703207418228	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9949191831239372	WITHOUT_CLASSIFICATION	0.005080816876062807	DESIGN
// FIXME: This doesn't actually support anything but String	DESIGN	0.9984267949469043	WITHOUT_CLASSIFICATION	0.001573205053095625	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.6095742775203138	DESIGN	0.39042572247968604	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.6095742775203138	DESIGN	0.39042572247968604	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9902768960698813	WITHOUT_CLASSIFICATION	0.009723103930118741	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9384039279566938	WITHOUT_CLASSIFICATION	0.06159607204330634	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9384039279566938	WITHOUT_CLASSIFICATION	0.06159607204330634	DESIGN
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9996366210811094	WITHOUT_CLASSIFICATION	3.6337891889053807E-4	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9983425684831811	WITHOUT_CLASSIFICATION	0.0016574315168187844	DESIGN
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9619753124841081	WITHOUT_CLASSIFICATION	0.038024687515891956	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9261045943675338	WITHOUT_CLASSIFICATION	0.07389540563246624	DESIGN
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.7462335325944426	WITHOUT_CLASSIFICATION	0.25376646740555747	DESIGN
// FIXME: needs to be rethought	DESIGN	0.998170512662814	WITHOUT_CLASSIFICATION	0.0018294873371860673	DESIGN
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.5017916734192287	WITHOUT_CLASSIFICATION	0.49820832658077135	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.8295211098657272	WITHOUT_CLASSIFICATION	0.1704788901342727	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.8295211098657272	WITHOUT_CLASSIFICATION	0.1704788901342727	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.6378997751839752	WITHOUT_CLASSIFICATION	0.36210022481602466	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.9918516504196061	WITHOUT_CLASSIFICATION	0.008148349580393876	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9953050148886866	WITHOUT_CLASSIFICATION	0.0046949851113133895	DESIGN
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9984798999121618	WITHOUT_CLASSIFICATION	0.0015201000878382598	DESIGN
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9728091458400309	WITHOUT_CLASSIFICATION	0.02719085415996909	DESIGN
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999440312222023	WITHOUT_CLASSIFICATION	5.5968777797692914E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.8484973631795992	WITHOUT_CLASSIFICATION	0.15150263682040074	DESIGN
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9998255090748579	WITHOUT_CLASSIFICATION	1.744909251421149E-4	DESIGN
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9987417012393716	WITHOUT_CLASSIFICATION	0.001258298760628455	DESIGN
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9999345142053305	WITHOUT_CLASSIFICATION	6.54857946694909E-5	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999965902875132	WITHOUT_CLASSIFICATION	3.409712486748847E-6	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9930408454085601	WITHOUT_CLASSIFICATION	0.006959154591439921	DESIGN
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9969491004966153	WITHOUT_CLASSIFICATION	0.0030508995033846796	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9996839380139011	WITHOUT_CLASSIFICATION	3.1606198609898184E-4	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.5443511850515483	WITHOUT_CLASSIFICATION	0.4556488149484516	DESIGN
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.7367718862067272	DESIGN	0.26322811379327277	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.999611086792623	WITHOUT_CLASSIFICATION	3.889132073769632E-4	DESIGN
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.997781263134907	WITHOUT_CLASSIFICATION	0.0022187368650929858	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9999142734067968	WITHOUT_CLASSIFICATION	8.572659320320306E-5	DESIGN
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9999961137308823	WITHOUT_CLASSIFICATION	3.886269117780989E-6	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8282143076109614	WITHOUT_CLASSIFICATION	0.17178569238903865	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8282143076109614	WITHOUT_CLASSIFICATION	0.17178569238903865	DESIGN
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9912555588234023	WITHOUT_CLASSIFICATION	0.008744441176597688	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9860225054236499	WITHOUT_CLASSIFICATION	0.013977494576350172	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9986103805168236	WITHOUT_CLASSIFICATION	0.001389619483176457	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.95752451014039	DESIGN	0.04247548985961	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9998845371681699	WITHOUT_CLASSIFICATION	1.1546283183002889E-4	DESIGN
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9999686445207232	WITHOUT_CLASSIFICATION	3.135547927687691E-5	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9847554424601866	WITHOUT_CLASSIFICATION	0.015244557539813243	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.7064131645658699	WITHOUT_CLASSIFICATION	0.2935868354341301	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.899576690373012	WITHOUT_CLASSIFICATION	0.10042330962698806	DESIGN
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.555535685109474	WITHOUT_CLASSIFICATION	0.4444643148905259	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.987527217661338	WITHOUT_CLASSIFICATION	0.01247278233866194	DESIGN
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9992070575106826	WITHOUT_CLASSIFICATION	7.929424893173199E-4	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.987527217661338	WITHOUT_CLASSIFICATION	0.01247278233866194	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.987527217661338	WITHOUT_CLASSIFICATION	0.01247278233866194	DESIGN
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9988509801614928	WITHOUT_CLASSIFICATION	0.0011490198385072726	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9914848352703169	WITHOUT_CLASSIFICATION	0.008515164729683172	DESIGN
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9993740749388188	WITHOUT_CLASSIFICATION	6.259250611812369E-4	DESIGN
// FIXME: This is gross. Don't do this.	DESIGN	0.9965557703450849	WITHOUT_CLASSIFICATION	0.0034442296549150497	DESIGN
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9957172686707896	WITHOUT_CLASSIFICATION	0.004282731329210448	DESIGN
// FIXME: No, I don't like it.	DESIGN	0.9999281904302416	WITHOUT_CLASSIFICATION	7.18095697583297E-5	DESIGN
// TODO: This is probably BAD...	DESIGN	0.7283546325939602	WITHOUT_CLASSIFICATION	0.2716453674060398	DESIGN
// FIXME: not very efficient	DESIGN	0.9999240716997487	WITHOUT_CLASSIFICATION	7.592830025124898E-5	DESIGN
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9771399140203101	DESIGN	0.0228600859796899	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.6771405256839435	DESIGN	0.3228594743160565	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9994575440930396	WITHOUT_CLASSIFICATION	5.424559069603517E-4	DESIGN
// FIXME: not very efficient	DESIGN	0.9999240716997487	WITHOUT_CLASSIFICATION	7.592830025124898E-5	DESIGN
// FIXME: not very efficient	DESIGN	0.9999240716997487	WITHOUT_CLASSIFICATION	7.592830025124898E-5	DESIGN
// FIXME: not very efficient	DESIGN	0.9999240716997487	WITHOUT_CLASSIFICATION	7.592830025124898E-5	DESIGN
// FIXME: not very efficient	DESIGN	0.9999240716997487	WITHOUT_CLASSIFICATION	7.592830025124898E-5	DESIGN
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9954096110053593	WITHOUT_CLASSIFICATION	0.00459038899464076	DESIGN
// FIXME: potentially could just use ByteList here?	DESIGN	0.9995507102460193	WITHOUT_CLASSIFICATION	4.4928975398072883E-4	DESIGN
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.999951138920611	WITHOUT_CLASSIFICATION	4.886107938893751E-5	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9838076820347486	DESIGN	0.016192317965251442	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9838076820347486	DESIGN	0.016192317965251442	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9998647124540889	WITHOUT_CLASSIFICATION	1.3528754591102585E-4	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9992500983901594	WITHOUT_CLASSIFICATION	7.499016098404482E-4	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9998334576614263	WITHOUT_CLASSIFICATION	1.6654233857379332E-4	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9998334576614263	WITHOUT_CLASSIFICATION	1.6654233857379332E-4	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.5667821960685705	WITHOUT_CLASSIFICATION	0.4332178039314295	DESIGN
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9147136269436447	WITHOUT_CLASSIFICATION	0.08528637305635536	DESIGN
// FIXME: this probably belongs in a different package.	DESIGN	0.9993788000321222	WITHOUT_CLASSIFICATION	6.211999678777922E-4	DESIGN
// TODO: It would be nice to throw a better error for this	DESIGN	0.9984469987218472	DESIGN	0.00155300127815286	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9984469987218472	DESIGN	0.00155300127815286	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9983939127439357	WITHOUT_CLASSIFICATION	0.00160608725606429	DESIGN
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9192773074064198	WITHOUT_CLASSIFICATION	0.08072269259358017	DESIGN
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9741588369949072	WITHOUT_CLASSIFICATION	0.025841163005092687	DESIGN
// TODO this should entry into error handling somewhere	DESIGN	0.9865396361894169	DESIGN	0.013460363810583001	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9897943344199083	WITHOUT_CLASSIFICATION	0.010205665580091776	DESIGN
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999671522256401	WITHOUT_CLASSIFICATION	3.2847774359850804E-5	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.6618193215363793	WITHOUT_CLASSIFICATION	0.33818067846362065	DESIGN
// TODO: Make this more intelligible value	DESIGN	0.9033821118958477	WITHOUT_CLASSIFICATION	0.09661788810415232	DESIGN
// XXX: do something?	DESIGN	0.9958538907565703	WITHOUT_CLASSIFICATION	0.004146109243429687	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9968159005484025	WITHOUT_CLASSIFICATION	0.0031840994515974523	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9968159005484025	WITHOUT_CLASSIFICATION	0.0031840994515974523	DESIGN
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.9953348514358982	WITHOUT_CLASSIFICATION	0.004665148564101828	DESIGN
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9994589361367808	WITHOUT_CLASSIFICATION	5.410638632192565E-4	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.9999853699444007	WITHOUT_CLASSIFICATION	1.4630055599380953E-5	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9987650973875013	WITHOUT_CLASSIFICATION	0.0012349026124987852	DESIGN
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9353033084183112	WITHOUT_CLASSIFICATION	0.06469669158168881	DESIGN
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.999523055105583	WITHOUT_CLASSIFICATION	4.769448944169639E-4	DESIGN
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.985935279877561	WITHOUT_CLASSIFICATION	0.014064720122438954	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.8897823008817594	WITHOUT_CLASSIFICATION	0.11021769911824067	DESIGN
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.6682759670114653	DESIGN	0.33172403298853465	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9998256674319166	WITHOUT_CLASSIFICATION	1.743325680832846E-4	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.6378997751839752	WITHOUT_CLASSIFICATION	0.36210022481602466	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.899576690373012	WITHOUT_CLASSIFICATION	0.10042330962698806	DESIGN
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999220999926689	DESIGN	7.790000733106305E-5	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.6448037868830122	WITHOUT_CLASSIFICATION	0.35519621311698785	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8282143076109614	WITHOUT_CLASSIFICATION	0.17178569238903865	DESIGN
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9756228194847658	WITHOUT_CLASSIFICATION	0.024377180515234183	DESIGN
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.8384200578592733	WITHOUT_CLASSIFICATION	0.1615799421407267	DESIGN
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9991792134668306	WITHOUT_CLASSIFICATION	8.207865331693193E-4	DESIGN
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.983731795235625	WITHOUT_CLASSIFICATION	0.01626820476437503	DESIGN
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.756830855304885	WITHOUT_CLASSIFICATION	0.243169144695115	DESIGN
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9998749932761881	WITHOUT_CLASSIFICATION	1.2500672381186923E-4	DESIGN
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9998749932761881	WITHOUT_CLASSIFICATION	1.2500672381186923E-4	DESIGN
// hack to get right style for input	DESIGN	0.9974975714606514	WITHOUT_CLASSIFICATION	0.002502428539348556	DESIGN
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9853482501340132	WITHOUT_CLASSIFICATION	0.014651749865986871	DESIGN
// small hack to save a cast later on	DESIGN	0.9991675583493075	WITHOUT_CLASSIFICATION	8.32441650692446E-4	DESIGN
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9589101865837316	WITHOUT_CLASSIFICATION	0.04108981341626849	DESIGN
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9853482501340132	WITHOUT_CLASSIFICATION	0.014651749865986871	DESIGN
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9772051874531303	WITHOUT_CLASSIFICATION	0.022794812546869752	DESIGN
// HACK: force clinit to be created	DESIGN	0.9914821621398441	WITHOUT_CLASSIFICATION	0.008517837860155912	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.7303593742464493	DESIGN	0.26964062575355063	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9804229604617035	WITHOUT_CLASSIFICATION	0.019577039538296447	DESIGN
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9975293742656941	WITHOUT_CLASSIFICATION	0.0024706257343059547	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9969623522910531	WITHOUT_CLASSIFICATION	0.003037647708946956	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.8282143076109614	WITHOUT_CLASSIFICATION	0.17178569238903865	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.996233321249814	WITHOUT_CLASSIFICATION	0.00376667875018601	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.8620408854861075	DESIGN	0.1379591145138925	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.7024423619798617	DESIGN	0.29755763802013824	WITHOUT_CLASSIFICATION
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.5030002792986347	WITHOUT_CLASSIFICATION	0.4969997207013653	DESIGN
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.8968358437991613	DESIGN	0.10316415620083878	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9722417110704665	WITHOUT_CLASSIFICATION	0.027758288929533505	DESIGN
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.999826339959757	WITHOUT_CLASSIFICATION	1.7366004024305389E-4	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9960941721834391	WITHOUT_CLASSIFICATION	0.003905827816560977	DESIGN
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9803214143303454	DESIGN	0.019678585669654636	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9944154492000047	WITHOUT_CLASSIFICATION	0.005584550799995223	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.5932621362136086	DESIGN	0.40673786378639143	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.8295211098657272	WITHOUT_CLASSIFICATION	0.1704788901342727	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9978813777427964	WITHOUT_CLASSIFICATION	0.0021186222572035463	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9978813777427964	WITHOUT_CLASSIFICATION	0.0021186222572035463	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9978813777427964	WITHOUT_CLASSIFICATION	0.0021186222572035463	DESIGN
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.7936865529172298	DESIGN	0.20631344708277022	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999967757509611	WITHOUT_CLASSIFICATION	3.224249038850107E-6	DESIGN
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9996669973541563	WITHOUT_CLASSIFICATION	3.3300264584375564E-4	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9998122278113108	WITHOUT_CLASSIFICATION	1.877721886891977E-4	DESIGN
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9578492211257371	WITHOUT_CLASSIFICATION	0.04215077887426282	DESIGN
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.6551229378754279	DESIGN	0.34487706212457214	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9989705885963237	WITHOUT_CLASSIFICATION	0.001029411403676233	DESIGN
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9993935675038713	WITHOUT_CLASSIFICATION	6.06432496128775E-4	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.998989834227582	WITHOUT_CLASSIFICATION	0.0010101657724179735	DESIGN
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.690792736216306	WITHOUT_CLASSIFICATION	0.30920726378369384	DESIGN
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.8483849561344265	WITHOUT_CLASSIFICATION	0.15161504386557345	DESIGN
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9992344549272769	DESIGN	7.655450727231812E-4	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.7223213461812571	WITHOUT_CLASSIFICATION	0.27767865381874296	DESIGN
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9989658974392788	WITHOUT_CLASSIFICATION	0.0010341025607212763	DESIGN
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.994591043439237	WITHOUT_CLASSIFICATION	0.005408956560763049	DESIGN
// end hack	DESIGN	0.9990249649590497	WITHOUT_CLASSIFICATION	9.750350409504479E-4	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.7916937759110149	WITHOUT_CLASSIFICATION	0.20830622408898508	DESIGN
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.983731795235625	WITHOUT_CLASSIFICATION	0.01626820476437503	DESIGN
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9354849525416123	DESIGN	0.06451504745838771	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.8844472697259277	WITHOUT_CLASSIFICATION	0.11555273027407226	DESIGN
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9882515294943425	WITHOUT_CLASSIFICATION	0.011748470505657405	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9986103805168236	WITHOUT_CLASSIFICATION	0.001389619483176457	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.95752451014039	DESIGN	0.04247548985961	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9908639147691743	WITHOUT_CLASSIFICATION	0.009136085230825562	DESIGN
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9927824626890719	WITHOUT_CLASSIFICATION	0.007217537310928167	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9847554424601866	WITHOUT_CLASSIFICATION	0.015244557539813243	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9999526960386944	WITHOUT_CLASSIFICATION	4.7303961305502E-5	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.987527217661338	WITHOUT_CLASSIFICATION	0.01247278233866194	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.987527217661338	WITHOUT_CLASSIFICATION	0.01247278233866194	DESIGN
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9871023960451069	WITHOUT_CLASSIFICATION	0.012897603954893162	DESIGN
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.8128461322956066	DESIGN	0.18715386770439343	WITHOUT_CLASSIFICATION
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9951542128760988	WITHOUT_CLASSIFICATION	0.004845787123901197	DESIGN
