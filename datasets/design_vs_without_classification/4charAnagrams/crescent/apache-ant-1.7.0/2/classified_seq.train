WITHOUT_CLASSIFICATION	// Delete the ActionContributionItems with matching action. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Recompute the read only state. //
WITHOUT_CLASSIFICATION	// Refresh any actions that may become enabled or disabled. //
WITHOUT_CLASSIFICATION	// Create the command stack that will notify this editor as commands are executed. //
WITHOUT_CLASSIFICATION	// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Try to select the affected objects. //
WITHOUT_CLASSIFICATION	// Create the editing domain with a special command stack. //
WITHOUT_CLASSIFICATION	// Make sure it's okay. //
WITHOUT_CLASSIFICATION	// Create an adapter factory that yields item providers. //
WITHOUT_CLASSIFICATION	// Try to select the items in the current content viewer of the editor. //
WITHOUT_CLASSIFICATION	// If it is changing... //
WITHOUT_CLASSIFICATION	// Create the listener on demand. //
WITHOUT_CLASSIFICATION	// Stop listening to the old one. //
WITHOUT_CLASSIFICATION	// Start listening to the new one. //
WITHOUT_CLASSIFICATION	// Remember it. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set the editors selection based on the current viewer's selection. //
WITHOUT_CLASSIFICATION	// Load the resource through the editing domain. //
WITHOUT_CLASSIFICATION	// Create a page for the selection tree view. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Ensures that this editor will only display the page's tab // area if there are more than one page //
WITHOUT_CLASSIFICATION	// The content outline is just a tree. //
WITHOUT_CLASSIFICATION	// This is the page for the list viewer //
WITHOUT_CLASSIFICATION	// This is the page for the tree viewer //
WITHOUT_CLASSIFICATION	// This is the page for the table viewer. //
WITHOUT_CLASSIFICATION	// This is the page for the table tree viewer. //
WITHOUT_CLASSIFICATION	// Make sure our popups work. //
WITHOUT_CLASSIFICATION	// Select the root object in the view. //
WITHOUT_CLASSIFICATION	// Listen to selection so that we can handle it is a special way. //
WITHOUT_CLASSIFICATION	// This ensures that we handle selections correctly. //
WITHOUT_CLASSIFICATION	// Set the selection to the widget. //
WITHOUT_CLASSIFICATION	// Save only resources that have actually changed. //
WITHOUT_CLASSIFICATION	// Do the work within an operation because this is a long running activity that modifies the workbench. //
WITHOUT_CLASSIFICATION	// Set the input to the widget. //
WITHOUT_CLASSIFICATION	// Save the resources to the file system. //
WITHOUT_CLASSIFICATION	// This runs the options, and shows progress. //
WITHOUT_CLASSIFICATION	// Refresh the necessary state. //
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Create a default .jetsettings file file
WITHOUT_CLASSIFICATION	// Something went wrong that shouldn't. //
WITHOUT_CLASSIFICATION	// Set the new variables. //
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//Ecore2XMLResourceFactoryImpl
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	//Ecore2XMLAdapterFactory
WITHOUT_CLASSIFICATION	//Ecore2XMLSwitch
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	//Ecore2XMLResourceFactoryImpl
WITHOUT_CLASSIFICATION	//FunctionNamePairImpl
WITHOUT_CLASSIFICATION	//MappingFactoryImpl
WITHOUT_CLASSIFICATION	//ComplexTypeConverterImpl
WITHOUT_CLASSIFICATION	//MappingHelperImpl
WITHOUT_CLASSIFICATION	//MappingStrategyImpl
WITHOUT_CLASSIFICATION	//FunctionPairImpl
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	//MappingImpl
WITHOUT_CLASSIFICATION	// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //
WITHOUT_CLASSIFICATION	//TypeConverterImpl
WITHOUT_CLASSIFICATION	// Barring a better result, this will be the result. //
WITHOUT_CLASSIFICATION	// If the intersection is empty, i.e., no ancestor is in the mapping... //
WITHOUT_CLASSIFICATION	// If this mapping isn't a parent, it's children definitely won't be either. //
WITHOUT_CLASSIFICATION	// Make sure the collections aren't identical... //
WITHOUT_CLASSIFICATION	//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.
WITHOUT_CLASSIFICATION	// printAdapters();
WITHOUT_CLASSIFICATION	//MappingRootImpl
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	// Try to select the items in the current content viewer of the editor. //
WITHOUT_CLASSIFICATION	// If it is changing... //
WITHOUT_CLASSIFICATION	// Create the listener on demand. //
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// VAJ kludge //
WITHOUT_CLASSIFICATION	// This just notifies those things that are affected by the selection. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Stop listening to the old one. //
WITHOUT_CLASSIFICATION	// Start listening to the new one. //
WITHOUT_CLASSIFICATION	// Remember it. //
WITHOUT_CLASSIFICATION	/* EATM getDecoratedAdapterFactory().*/
WITHOUT_CLASSIFICATION	/* EATM getDecoratedAdapterFactory().*/
WITHOUT_CLASSIFICATION	/* EATM getDecoratedAdapterFactory().*/
WITHOUT_CLASSIFICATION	// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //
WITHOUT_CLASSIFICATION	// I assume that the editorInput is a file object. //
WITHOUT_CLASSIFICATION	// Handle the creation of the model from the modelFile. //
WITHOUT_CLASSIFICATION	// Restore the persistent command stack, if need be. //
WITHOUT_CLASSIFICATION	// Create a page for the selection tree view. //
WITHOUT_CLASSIFICATION	// Set up the tree viewer. //
WITHOUT_CLASSIFICATION	// Make sure our popups work. //
WITHOUT_CLASSIFICATION	// Select the root object in the view. //
WITHOUT_CLASSIFICATION	// This ensures that we handle selections correctly. //
WITHOUT_CLASSIFICATION	// Do the work within an operation because this is a long running activity that modifies the workbench. //
WITHOUT_CLASSIFICATION	// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //
WITHOUT_CLASSIFICATION	// The one object in the resource's extent should be the root object. //
WITHOUT_CLASSIFICATION	// Save the resource to the file system. //
WITHOUT_CLASSIFICATION	// Update the workbench's knowledge of the file's contents. //
WITHOUT_CLASSIFICATION	// Add the binding to the provided hash table: //
WITHOUT_CLASSIFICATION	// Refresh the necessary state. //
WITHOUT_CLASSIFICATION	// Something went wrong that shouldn't. //
WITHOUT_CLASSIFICATION	// Parse as an attribute=value:
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Create the mapping domain with a special command stack. // 
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();
WITHOUT_CLASSIFICATION	// If the object is an input or output object, then use it. //
WITHOUT_CLASSIFICATION	// Process the children recursively. //
WITHOUT_CLASSIFICATION	// Look for a single-char work delimiter: //
WITHOUT_CLASSIFICATION	// oldWidth = table.getClientArea().width;
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();
WITHOUT_CLASSIFICATION	// This is for the in2out feature. //
WITHOUT_CLASSIFICATION	// This is for the out2in feature. //
WITHOUT_CLASSIFICATION	// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	// This is for the in2out feature. //
WITHOUT_CLASSIFICATION	// This is for the topDown feature. //
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();
WITHOUT_CLASSIFICATION	//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();
WITHOUT_CLASSIFICATION	// This is for the in2out feature. //
WITHOUT_CLASSIFICATION	// This is for the out2in feature. //
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();
WITHOUT_CLASSIFICATION	// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();
WITHOUT_CLASSIFICATION	//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);
WITHOUT_CLASSIFICATION	// supportedTypes.add(IUpdateableItemText.class);
WITHOUT_CLASSIFICATION	//FB ????? 
WITHOUT_CLASSIFICATION	// This is for the helper feature. //
WITHOUT_CLASSIFICATION	// This is for the typeMapping feature. //
WITHOUT_CLASSIFICATION	//FIX:::
WITHOUT_CLASSIFICATION	//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	// Create a resource set and load the model file into it. //
WITHOUT_CLASSIFICATION	// This is the path of the target directory. //
WITHOUT_CLASSIFICATION	// Break the cycle. //
WITHOUT_CLASSIFICATION	//MappingAdapterFactory
WITHOUT_CLASSIFICATION	// This ensures that we are dealing with actual MOF objects. //
WITHOUT_CLASSIFICATION	//MappingSwitch
WITHOUT_CLASSIFICATION	// This is the name of the model. //
WITHOUT_CLASSIFICATION	// Create a resource set and load the model file into it. //
WITHOUT_CLASSIFICATION	// This is the path of the target directory. //
WITHOUT_CLASSIFICATION	// This is to handle a genmodel produced by rose2genmodel. //
WITHOUT_CLASSIFICATION	// This is to handle a genmodel produced by rose2genmodel. //
WITHOUT_CLASSIFICATION	// Clean up any old project information. //
WITHOUT_CLASSIFICATION	// Remove variables since the plugin.xml should provide the complete path information. //
WITHOUT_CLASSIFICATION	// Look for a likely plugin name. //
WITHOUT_CLASSIFICATION	// Clean up any old project information. //
WITHOUT_CLASSIFICATION	// Remove variables since the plugin.xml should provide the complete path information. //
WITHOUT_CLASSIFICATION	// Consult the generator option for backwards compatibility. //
WITHOUT_CLASSIFICATION	// Apply a redirection pattern, if specified. //
WITHOUT_CLASSIFICATION	// If the target is read-only, we can ask the platform to release it. //
WITHOUT_CLASSIFICATION	// Multiple jet directives.
WITHOUT_CLASSIFICATION	// If the target is read-only, we can ask the platform to release it. //
WITHOUT_CLASSIFICATION	// Merge with an existing file. //
WITHOUT_CLASSIFICATION	// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //
WITHOUT_CLASSIFICATION	// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //
WITHOUT_CLASSIFICATION	// Create a code formatter for this compilation unit, if needed. //
WITHOUT_CLASSIFICATION	// If a newline from the previous character data remains, add a generator for it. //
WITHOUT_CLASSIFICATION	// If we can't determine it by reading the file, // look at the preferences instead.
WITHOUT_CLASSIFICATION	// Since we're invoking plugged-in code, we must be defensive against cycles. //
WITHOUT_CLASSIFICATION	// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //
WITHOUT_CLASSIFICATION	// Combine the two lists. //
WITHOUT_CLASSIFICATION	// Give all generator adapters the chance to do setup work. //
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// Give all generator adapters the chance to do tear down. //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.
WITHOUT_CLASSIFICATION	// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// // EMF.Editor generation //
WITHOUT_CLASSIFICATION	// // Tests generation //
WITHOUT_CLASSIFICATION	// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();
WITHOUT_CLASSIFICATION	//  Remove any non-Java dependencies from being added. //
WITHOUT_CLASSIFICATION	// This URI handler redirect the URI based on the mapping. //
WITHOUT_CLASSIFICATION	// There must be at least one match. //
WITHOUT_CLASSIFICATION	// Ignore if there is not substantial change. //
WITHOUT_CLASSIFICATION	// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
WITHOUT_CLASSIFICATION	// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
WITHOUT_CLASSIFICATION	// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //
WITHOUT_CLASSIFICATION	// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //
WITHOUT_CLASSIFICATION	//We are not generating the manifest file if the plugin.xml exists. //
WITHOUT_CLASSIFICATION	// Use an alternate if we can't write to this one. //
WITHOUT_CLASSIFICATION	// J9 2.2 has problems assigning null to a Class variable. // 
WITHOUT_CLASSIFICATION	// Create the options model. //
WITHOUT_CLASSIFICATION	//  Remove any non-Java dependencies from being added. //
WITHOUT_CLASSIFICATION	// Escape a string that will terminate the comment in which this will all be nested. //
WITHOUT_CLASSIFICATION	// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //
WITHOUT_CLASSIFICATION	// Search the local scope for a resolution of the type parameter name. //
WITHOUT_CLASSIFICATION	// Check if we found a resolution for it. //
WITHOUT_CLASSIFICATION	// If not we'll erase it to java.lang.Object. //
WITHOUT_CLASSIFICATION	// Otherwise, recursively call ourselves to substitute it in context if necessary. //
WITHOUT_CLASSIFICATION	// Add back in the array indices if there are any. //
WITHOUT_CLASSIFICATION	// Just import the name or use it directly. //
WITHOUT_CLASSIFICATION	// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////
WITHOUT_CLASSIFICATION	// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case
WITHOUT_CLASSIFICATION	// We assume that the rootExtendsClass already implements it. //
WITHOUT_CLASSIFICATION	// We assume that the rootExtendsClass already implements it. //
WITHOUT_CLASSIFICATION	// If the flag will straddle two fields, bump it to the next one. //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// Ignore the exception.
WITHOUT_CLASSIFICATION	// An interface should be abstract, but this makes sure of that fact. //
WITHOUT_CLASSIFICATION	// Simple cases: no mix-ins for no inheritance or for a single base class. //
WITHOUT_CLASSIFICATION	// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //
WITHOUT_CLASSIFICATION	// Mix-ins are everything after the base class. //
WITHOUT_CLASSIFICATION	// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //
WITHOUT_CLASSIFICATION	// Add all other create child features that this item provider is responsible for. //
WITHOUT_CLASSIFICATION	// Many inherited methods must be overridden to handle this case. //
WITHOUT_CLASSIFICATION	// If this looks like a feature getter, a kind property will allow it to be recognized properly. //
WITHOUT_CLASSIFICATION	// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //
WITHOUT_CLASSIFICATION	// Type parameter casts can't be checked. //
WITHOUT_CLASSIFICATION	// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //
WITHOUT_CLASSIFICATION	// Optimize the performance of applying the import regular  // expressions locating the last import line //      
WITHOUT_CLASSIFICATION	// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //
WITHOUT_CLASSIFICATION	// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //
WITHOUT_CLASSIFICATION	// Get the Java literal expression for the value. //
WITHOUT_CLASSIFICATION	// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //
WITHOUT_CLASSIFICATION	// If the base package isn't set but there is a parent package, us it's information instead. //
WITHOUT_CLASSIFICATION	// Add all classes from this package first, to guarantee they get the // simple names
WITHOUT_CLASSIFICATION	// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //
WITHOUT_CLASSIFICATION	// Set the mapper to build an XSD2EcoreMappingRoot, if available. //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //
WITHOUT_CLASSIFICATION	// Restore original resource URI values. //
WITHOUT_CLASSIFICATION	// The "suffix" can actually be a substitution pattern for the package name. //
WITHOUT_CLASSIFICATION	// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //
WITHOUT_CLASSIFICATION	// Any features that delegate to features in this package. //
WITHOUT_CLASSIFICATION	// If there are delegated features, add only those that aren't already in this package to the end of the list. //
WITHOUT_CLASSIFICATION	// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// source method return type is array (getExceptions), target is not array (i.e. addException)
WITHOUT_CLASSIFICATION	// We also need to set it on any GenModels holding any used or static packages that may be refered to. //
WITHOUT_CLASSIFICATION	// We also need to set it on any GenModels holding any used or static packages that may be refered to. //
WITHOUT_CLASSIFICATION	// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //
WITHOUT_CLASSIFICATION	// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //
WITHOUT_CLASSIFICATION	// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();
WITHOUT_CLASSIFICATION	// If there are any warnings other than raw type warnings, include all the warnings. //
WITHOUT_CLASSIFICATION	// Force the project to be setup properly. //
WITHOUT_CLASSIFICATION	// Force the project to be setup properly. //
WITHOUT_CLASSIFICATION	// node is not marked up by now, but keep checking other rules 
WITHOUT_CLASSIFICATION	// Subclasses may override this method
WITHOUT_CLASSIFICATION	// // Tests generation //
WITHOUT_CLASSIFICATION	// If we change to pattern defaults, will have to specify plain suffix in no main package case. //
WITHOUT_CLASSIFICATION	// If we change to pattern defaults, will have to specify plain suffix in no main package case. //
WITHOUT_CLASSIFICATION	// If we change to pattern defaults, will have to specify plain suffix in no main package case. //
WITHOUT_CLASSIFICATION	// Subclasses may override this method
WITHOUT_CLASSIFICATION	// See if a GenModel is registered for the package's URI, and if so, try to load it. //
WITHOUT_CLASSIFICATION	// If that didn't work, just synthesize one. //
WITHOUT_CLASSIFICATION	// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.
WITHOUT_CLASSIFICATION	// EATM  // Foreign Model
WITHOUT_CLASSIFICATION	// Any features from one package that delegate to features in another. //
WITHOUT_CLASSIFICATION	// If there are features delegating across packages, add only those that aren't already being generated. //
WITHOUT_CLASSIFICATION	// Recompute the read only state. //
WITHOUT_CLASSIFICATION	// Refresh any actions that may become enabled or disabled. //
WITHOUT_CLASSIFICATION	// Create the command stack that will notify this editor as commands are executed. //
WITHOUT_CLASSIFICATION	// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //
WITHOUT_CLASSIFICATION	// Try to select the affected objects. //
WITHOUT_CLASSIFICATION	// Create the editing domain with a special command stack. //
WITHOUT_CLASSIFICATION	// Make sure it's okay. //
WITHOUT_CLASSIFICATION	// Try to select the items in the current content viewer of the editor. //
WITHOUT_CLASSIFICATION	// If it is changing... //
WITHOUT_CLASSIFICATION	// Create the listener on demand. //
WITHOUT_CLASSIFICATION	// This just notifies those things that are affected by the section. //
WITHOUT_CLASSIFICATION	// Stop listening to the old one. //
WITHOUT_CLASSIFICATION	// Start listening to the new one. //
WITHOUT_CLASSIFICATION	// Remember it. //
WITHOUT_CLASSIFICATION	// Set the editors selection based on the current viewer's selection. //
WITHOUT_CLASSIFICATION	// Load the resource through the editing domain. //
WITHOUT_CLASSIFICATION	// Creates the model from the editor input //
WITHOUT_CLASSIFICATION	// Only creates the other pages if there is something that can be edited //
WITHOUT_CLASSIFICATION	// Create a page for the selection tree view. //
WITHOUT_CLASSIFICATION	// Ensures that this editor will only display the page's tab // area if there are more than one page //
WITHOUT_CLASSIFICATION	// The content outline is just a tree. //
WITHOUT_CLASSIFICATION	// Set up the tree viewer. //
WITHOUT_CLASSIFICATION	// Make sure our popups work. //
WITHOUT_CLASSIFICATION	// Select the root object in the view. //
WITHOUT_CLASSIFICATION	// Listen to selection so that we can handle it is a special way. //
WITHOUT_CLASSIFICATION	// This ensures that we handle selections correctly. //
WITHOUT_CLASSIFICATION	// Get the first selected element. //
WITHOUT_CLASSIFICATION	// log the error, ignore the change and continue
WITHOUT_CLASSIFICATION	// Save the resources to the file system. //
WITHOUT_CLASSIFICATION	// Set the selection to the widget. //
WITHOUT_CLASSIFICATION	// Do the work within an operation because this is a long running activity that modifies the workbench. //
WITHOUT_CLASSIFICATION	// Save only resources that have actually changed. //
WITHOUT_CLASSIFICATION	// This is the method that gets invoked when the operation runs. //
WITHOUT_CLASSIFICATION	// loop for all commented out nodes
WITHOUT_CLASSIFICATION	// Do the work within an operation because this is a long running activity that modifies the workbench. //
WITHOUT_CLASSIFICATION	// Refresh the necessary state. //
WITHOUT_CLASSIFICATION	// This runs the options, and shows progress. //
WITHOUT_CLASSIFICATION	// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)
WITHOUT_CLASSIFICATION	// Something went wrong that shouldn't. //
WITHOUT_CLASSIFICATION	// Nothing to do
WITHOUT_CLASSIFICATION	// This is the method that gets invoked when the operation runs. //
WITHOUT_CLASSIFICATION	// Something went wrong that shouldn't. //
WITHOUT_CLASSIFICATION	// Stop only on cancel. //
WITHOUT_CLASSIFICATION	// insert line break at the first line if there is something before the node start and the beginning of the line
WITHOUT_CLASSIFICATION	// Switch to the new selection provider. //
WITHOUT_CLASSIFICATION	// Fake a selection changed event to update the menus. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	//Class/genFeature.override.javajetinc //for
WITHOUT_CLASSIFICATION	// Kick of a Java build if not already in a build. //
WITHOUT_CLASSIFICATION	//Class/implementedGenOperation.override.javajetinc //for
WITHOUT_CLASSIFICATION	// do not add a new line if there is one
WITHOUT_CLASSIFICATION	// This call should get the files checked out from version control if the project is a 'team' project. //
WITHOUT_CLASSIFICATION	// there is only whitespace on this line - no need for line break
WITHOUT_CLASSIFICATION	// Check which directive it is. //
WITHOUT_CLASSIFICATION	//reader.reset(start); //return false;
WITHOUT_CLASSIFICATION	// Parse the attr-val pairs. //
WITHOUT_CLASSIFICATION	// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 
WITHOUT_CLASSIFICATION	// Compute the URL for where the classes for this project will be located. //
WITHOUT_CLASSIFICATION	// Compute the URLs for all the output folder of all the project dependencies. //
WITHOUT_CLASSIFICATION	// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //
WITHOUT_CLASSIFICATION	// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //
WITHOUT_CLASSIFICATION	// Strip off the trailing "_" and load that class. //
WITHOUT_CLASSIFICATION	// Check that the class is actually different from the one that's directly visible to the JETEmitter. //
WITHOUT_CLASSIFICATION	// Don't do any of the other normally dynamic JETEmitter project processing. //
WITHOUT_CLASSIFICATION	// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //
WITHOUT_CLASSIFICATION	// Add the new entries, including source, JRE container, and added variables and classpath containers.  //
WITHOUT_CLASSIFICATION	// Construct a proper URL for relative lookup. //
WITHOUT_CLASSIFICATION	// Determine all the bundles that this project depends on. //
WITHOUT_CLASSIFICATION	// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //
WITHOUT_CLASSIFICATION	// Add JETBuilder //
WITHOUT_CLASSIFICATION	// Create .jetproperties file //
WITHOUT_CLASSIFICATION	// clone includeStack without cloning contents //
WITHOUT_CLASSIFICATION	// Store the current state in stack. //
WITHOUT_CLASSIFICATION	// Set the new variables. //
WITHOUT_CLASSIFICATION	// Make sure we have something to pop. //
WITHOUT_CLASSIFICATION	// Get previous state in stack. //
WITHOUT_CLASSIFICATION	// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.
WITHOUT_CLASSIFICATION	// Register the file, and read its content: //
WITHOUT_CLASSIFICATION	// Is stack created ? (will happen if the JET file we're looking at is missing. //
WITHOUT_CLASSIFICATION	// Restore parser state: //
WITHOUT_CLASSIFICATION	// Consume the open quote: //
WITHOUT_CLASSIFICATION	// Check end of quote, skip closing quote: //
WITHOUT_CLASSIFICATION	// Get the attribute name: //
WITHOUT_CLASSIFICATION	// Check for an equal sign: //
WITHOUT_CLASSIFICATION	// Get the attribute value: //
WITHOUT_CLASSIFICATION	// insert line break if there is non-whitespace before end of the line
WITHOUT_CLASSIFICATION	// End of the useBean tag. //
WITHOUT_CLASSIFICATION	// XMLesque Close tags //
WITHOUT_CLASSIFICATION	// Parse as an attribute=value: //
WITHOUT_CLASSIFICATION	// Reached EOF: //
WITHOUT_CLASSIFICATION	// Look for an end-of-comment or end-of-tag: //
WITHOUT_CLASSIFICATION	// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //
WITHOUT_CLASSIFICATION	// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //
WITHOUT_CLASSIFICATION	// The include failed, so if there is an alternative, we don't skip it. //
WITHOUT_CLASSIFICATION	// A section is not allowed without a preceding include with alternative. //
WITHOUT_CLASSIFICATION	// This pop is safe because a section couldn't have been started without an include that pushed. //
WITHOUT_CLASSIFICATION	// Process this first. //
WITHOUT_CLASSIFICATION	// Ignore this now //
WITHOUT_CLASSIFICATION	// If a newline from the previous character data remains, add a generator for it. //
WITHOUT_CLASSIFICATION	// An expression with more that 931 "+" will break Sun and IBM javac compilers. //
WITHOUT_CLASSIFICATION	// Register our directive. //
WITHOUT_CLASSIFICATION	// Ignore it if there are multiple comments. //
WITHOUT_CLASSIFICATION	// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //
WITHOUT_CLASSIFICATION	// Create the source and target JDOMs. //
WITHOUT_CLASSIFICATION	// Create a pattern dictionary for each. //
WITHOUT_CLASSIFICATION	//  We expect this failure when running stand-alone //
WITHOUT_CLASSIFICATION	// JControlModel.class is used with classNames that were not found //
WITHOUT_CLASSIFICATION	// Ignore the further-most javadoc //
WITHOUT_CLASSIFICATION	// retrieve source node corresponding to target //
WITHOUT_CLASSIFICATION	// convert the target node to a compatible node //
WITHOUT_CLASSIFICATION	// There must be at least one match. //
WITHOUT_CLASSIFICATION	// Ignore if there is not substantial change. //
WITHOUT_CLASSIFICATION	// Create the options model. //
WITHOUT_CLASSIFICATION	// Create a pattern dictionary for each. //
WITHOUT_CLASSIFICATION	// retrieve source node corresponding to target //
WITHOUT_CLASSIFICATION	// convert the target node to a compatible node //
WITHOUT_CLASSIFICATION	// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //
WITHOUT_CLASSIFICATION	// Skip if there's an equality filter and the values aren't equal. //
WITHOUT_CLASSIFICATION	// The methods were matched by a process that doesn't consider the // parameters
WITHOUT_CLASSIFICATION	// Don't push method annotations into redirected methods. //
WITHOUT_CLASSIFICATION	// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //
WITHOUT_CLASSIFICATION	// Create the source and target JCompilationUnit. //
WITHOUT_CLASSIFICATION	// apply changes using ASTRewrite //
WITHOUT_CLASSIFICATION	// apply additional edits like replacing or commenting out nodes //
WITHOUT_CLASSIFICATION	// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it
WITHOUT_CLASSIFICATION	// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)
WITHOUT_CLASSIFICATION	// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used
WITHOUT_CLASSIFICATION	// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called
WITHOUT_CLASSIFICATION	// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //
WITHOUT_CLASSIFICATION	// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos
WITHOUT_CLASSIFICATION	// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 
WITHOUT_CLASSIFICATION	// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment
WITHOUT_CLASSIFICATION	// there is anything else but comma after constant - insert line break
WITHOUT_CLASSIFICATION	// we don't want to include the line comments immediately before an import in the  // returned range
WITHOUT_CLASSIFICATION	// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it
WITHOUT_CLASSIFICATION	// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)
WITHOUT_CLASSIFICATION	// replace arguments that match the name of the fields with the initializer value of the field //
WITHOUT_CLASSIFICATION	// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers
WITHOUT_CLASSIFICATION	// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //
WITHOUT_CLASSIFICATION	// Create the source and target JDOMs. //
WITHOUT_CLASSIFICATION	// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)
WITHOUT_CLASSIFICATION	// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //
WITHOUT_CLASSIFICATION	// Don't do replacement if previous line ended with a comment. //
WITHOUT_CLASSIFICATION	// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //
WITHOUT_CLASSIFICATION	// Trim off the "bin" or "runtime" segment. //
WITHOUT_CLASSIFICATION	// Platform.resolve() doesn't work if the project is encoded. //
WITHOUT_CLASSIFICATION	// There needs to be another URL protocol right after the archive protocol, and not a "/". //
WITHOUT_CLASSIFICATION	// There must be at least one archive path. //
WITHOUT_CLASSIFICATION	// There must be at least one archive path. //
WITHOUT_CLASSIFICATION	// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //
WITHOUT_CLASSIFICATION	// There should be at least one archive separator per scheme. //
WITHOUT_CLASSIFICATION	// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //
WITHOUT_CLASSIFICATION	// Skip a scheme for the archive accessor to be handled directly here. //
WITHOUT_CLASSIFICATION	// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //
WITHOUT_CLASSIFICATION	// Create the delegate URL. //
WITHOUT_CLASSIFICATION	// The cutoff point to the next archive. //
WITHOUT_CLASSIFICATION	// The cutoff point to the next archive. //
WITHOUT_CLASSIFICATION	// Construct the input stream in a special efficient way for case of a file scheme. //
WITHOUT_CLASSIFICATION	// Just get the stream from the URL. //
WITHOUT_CLASSIFICATION	// The name to be used for the entry. //
WITHOUT_CLASSIFICATION	// Skip over this archive path to the next one, since we are handling this one special. //
WITHOUT_CLASSIFICATION	// Loop over the archive paths. //
WITHOUT_CLASSIFICATION	// The entry name to be matched. //
WITHOUT_CLASSIFICATION	// Wrap the input stream as a zip stream to scan it's contents for a match. //
WITHOUT_CLASSIFICATION	// Skip to the next archive path and continue the loop. //
WITHOUT_CLASSIFICATION	// Create the delegate URL //
WITHOUT_CLASSIFICATION	// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //
WITHOUT_CLASSIFICATION	// Record the input and output streams for closing in case of failure so that handles are not left open. //
WITHOUT_CLASSIFICATION	// Create the output stream to the temporary file and the input stream for the delegate URL. //
WITHOUT_CLASSIFICATION	// The most deeply nested output stream that will be returned wrapped as the result. //
WITHOUT_CLASSIFICATION	// A buffer for transferring archive contents. //
WITHOUT_CLASSIFICATION	// We expect there to be at least one archive path. //
WITHOUT_CLASSIFICATION	// The name that will be used as the archive entry. //
WITHOUT_CLASSIFICATION	// Wrap the current result as a zip stream, and record it for loop-based recursion. //
WITHOUT_CLASSIFICATION	// Wrap the current input as a zip stream, and record it for loop-based recursion. //
WITHOUT_CLASSIFICATION	// Loop over the entries in the zip stream. //
WITHOUT_CLASSIFICATION	// Transfer the entry and its contents. //
WITHOUT_CLASSIFICATION	// Find the next archive path and continue "recursively" if there is one. //
WITHOUT_CLASSIFICATION	// Create no entry since we are deleting and return immediately. //
WITHOUT_CLASSIFICATION	// Create a new or replaced entry and continue processing the remaining archives. //
WITHOUT_CLASSIFICATION	// Ensure that it won't be closed in the finally block. //
WITHOUT_CLASSIFICATION	// Wrap the deepest result so that on close, the results are finally transferred. //
WITHOUT_CLASSIFICATION	// Make sure we close only once. //
WITHOUT_CLASSIFICATION	// Close for real so that the temporary file is ready to be read. //
WITHOUT_CLASSIFICATION	// Make sure they are closed no matter what bad thing happens. //
WITHOUT_CLASSIFICATION	// Close in case of failure to complete. //
WITHOUT_CLASSIFICATION	// Close if we created this. //
WITHOUT_CLASSIFICATION	// Go through the commands of the list. //
WITHOUT_CLASSIFICATION	// If there are some... //
WITHOUT_CLASSIFICATION	// The termination guard is in the body. //
WITHOUT_CLASSIFICATION	// We can't undo it, so we'd better give up. //
WITHOUT_CLASSIFICATION	// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //
WITHOUT_CLASSIFICATION	// If we can't execute this one, we just can't do it at all. //
WITHOUT_CLASSIFICATION	// If we are pessimistic, then we need to undo all the commands that we have executed so far. //
WITHOUT_CLASSIFICATION	// The most recently processed command will never have been executed. //
WITHOUT_CLASSIFICATION	// We want to unroll all the effects of the previous commands. //
WITHOUT_CLASSIFICATION	// Skip over the command that threw the exception. //
WITHOUT_CLASSIFICATION	// Iterate back over the executed commands to undo them. //
WITHOUT_CLASSIFICATION	// If the command is executable, record and execute it. //
WITHOUT_CLASSIFICATION	// Clear the list past the top. //
WITHOUT_CLASSIFICATION	// Record the successfully executed command. //
WITHOUT_CLASSIFICATION	// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below
WITHOUT_CLASSIFICATION	// Iterate back over the executed commands to undo them. //
WITHOUT_CLASSIFICATION	// Clear the list past the top. //
WITHOUT_CLASSIFICATION	// This forces isSaveNeded to always be true. //
WITHOUT_CLASSIFICATION	// Clear the list. //
WITHOUT_CLASSIFICATION	//  Remember where we are now. //
WITHOUT_CLASSIFICATION	// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;
WITHOUT_CLASSIFICATION	// Skip over the command that threw the exception. //
WITHOUT_CLASSIFICATION	// Skip over the command that threw the exception. //
WITHOUT_CLASSIFICATION	// Iterate back over the executed commands to undo them. //
WITHOUT_CLASSIFICATION	// Iterate forward over the undone commands to redo them. //
WITHOUT_CLASSIFICATION	// This ensures that these useless state variables at least reflect the right value. //
WITHOUT_CLASSIFICATION	// Copy to a list and allocate positions. //
WITHOUT_CLASSIFICATION	// Copy to a list and allocate positions. //
WITHOUT_CLASSIFICATION	// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //
WITHOUT_CLASSIFICATION	// If any objects are matched. //
WITHOUT_CLASSIFICATION	// Remove from by position in reverse order. //
WITHOUT_CLASSIFICATION	// Remove from by position in reverse order. //
WITHOUT_CLASSIFICATION	// Compact the results to remove unmatched objects //
WITHOUT_CLASSIFICATION	// If any objects are matched. //
WITHOUT_CLASSIFICATION	// Remove from by position in reverse order. //
WITHOUT_CLASSIFICATION	// Compact the results to remove unmatched objects //
WITHOUT_CLASSIFICATION	// Create view form.     //control = new ViewForm(parent, getStyle());
WITHOUT_CLASSIFICATION	// Listen to title changes. // getViewPart().addPropertyListener(this);
WITHOUT_CLASSIFICATION	//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));
WITHOUT_CLASSIFICATION	//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());
WITHOUT_CLASSIFICATION	//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);
WITHOUT_CLASSIFICATION	// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());
WITHOUT_CLASSIFICATION	// If there are objects to populate... //
WITHOUT_CLASSIFICATION	// Create a new array. //
WITHOUT_CLASSIFICATION	// Fill in the result array with labels and re-populate the original list in order. //
WITHOUT_CLASSIFICATION	// Fill in the array with labels. //
WITHOUT_CLASSIFICATION	// Get the index into the list via this call to super. //
WITHOUT_CLASSIFICATION	// Set the index of the object value in the list via this call to super. //
WITHOUT_CLASSIFICATION	// Ensure there are no extraneous style bits. //
WITHOUT_CLASSIFICATION	// Assign default style bits, if necessary, and ensure none conflict. //
WITHOUT_CLASSIFICATION	// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //
WITHOUT_CLASSIFICATION	// On Motif, selection color may be set as background. //
WITHOUT_CLASSIFICATION	// Draw the extra first-column image. //
WITHOUT_CLASSIFICATION	// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //
WITHOUT_CLASSIFICATION	// If the table is indenting, draw tree lines. //
WITHOUT_CLASSIFICATION	//private final boolean iri; //private URI cachedASCIIURI;
WITHOUT_CLASSIFICATION	// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped
WITHOUT_CLASSIFICATION	//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");
WITHOUT_CLASSIFICATION	// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.
WITHOUT_CLASSIFICATION	// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.
WITHOUT_CLASSIFICATION	// Returns the lower half bitmask for all the ASCII characters in the given // string.
WITHOUT_CLASSIFICATION	// Returns whether the given character is in the set specified by the given // bitmask.
WITHOUT_CLASSIFICATION	// Converts null to length-zero array, and clones array to ensure // immutability.
WITHOUT_CLASSIFICATION	// Checks whether the string contains any more segments after the one that // starts at position i.
WITHOUT_CLASSIFICATION	// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.
WITHOUT_CLASSIFICATION	// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...
WITHOUT_CLASSIFICATION	// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>
WITHOUT_CLASSIFICATION	// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 
WITHOUT_CLASSIFICATION	//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);
WITHOUT_CLASSIFICATION	// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>
WITHOUT_CLASSIFICATION	// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 
WITHOUT_CLASSIFICATION	// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 
WITHOUT_CLASSIFICATION	// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.
WITHOUT_CLASSIFICATION	// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.
WITHOUT_CLASSIFICATION	// Tests whether this URI's path segment array is equal to that of the // given uri.
WITHOUT_CLASSIFICATION	// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.
WITHOUT_CLASSIFICATION	// Tests two strings for equality, tolerating nulls and optionally // ignoring case.
WITHOUT_CLASSIFICATION	// note: it's okay for two URIs to share a segments array, since // neither will ever modify it
WITHOUT_CLASSIFICATION	// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 
WITHOUT_CLASSIFICATION	// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs
WITHOUT_CLASSIFICATION	// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path
WITHOUT_CLASSIFICATION	// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.
WITHOUT_CLASSIFICATION	// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed
WITHOUT_CLASSIFICATION	// unless we're already accumulating root parent references, // parent references simply pop the last segment descended
WITHOUT_CLASSIFICATION	// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path
WITHOUT_CLASSIFICATION	// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.
WITHOUT_CLASSIFICATION	// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents
WITHOUT_CLASSIFICATION	// a single separator, possibly preceded by some parent reference // segments, is redundant
WITHOUT_CLASSIFICATION	// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference
WITHOUT_CLASSIFICATION	// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.
WITHOUT_CLASSIFICATION	// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator
WITHOUT_CLASSIFICATION	// Returns a string representation of this URI for debugging, explicitly // showing each of the components.
WITHOUT_CLASSIFICATION	// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.
WITHOUT_CLASSIFICATION	// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.
WITHOUT_CLASSIFICATION	// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.
WITHOUT_CLASSIFICATION	// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.
WITHOUT_CLASSIFICATION	// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.
WITHOUT_CLASSIFICATION	// create new field and replace it all by original contents
WITHOUT_CLASSIFICATION	// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.
WITHOUT_CLASSIFICATION	// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.
WITHOUT_CLASSIFICATION	// range to look for comments
WITHOUT_CLASSIFICATION	// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.
WITHOUT_CLASSIFICATION	// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.
WITHOUT_CLASSIFICATION	// find start position of farthest preceding comment
WITHOUT_CLASSIFICATION	// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //
WITHOUT_CLASSIFICATION	// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.
WITHOUT_CLASSIFICATION	// Determine the base URL by looking for the plugin.properties file in the standard way. //
WITHOUT_CLASSIFICATION	// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal
WITHOUT_CLASSIFICATION	// for enum constants use special range
WITHOUT_CLASSIFICATION	//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }
WITHOUT_CLASSIFICATION	// default implementation does nothing
WITHOUT_CLASSIFICATION	// clear old values
WITHOUT_CLASSIFICATION	// Trim off the segments corresponding to the package nesting. //
WITHOUT_CLASSIFICATION	// For an archive URI, check for the plugin.properties in the archive. //
WITHOUT_CLASSIFICATION	// append extra dimensions since they are not stored in Type object
WITHOUT_CLASSIFICATION	// Trim off the "bin" or "runtime" segment. //
WITHOUT_CLASSIFICATION	// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //
WITHOUT_CLASSIFICATION	// If we didn't find the plugin.properties in the usual place nor in the archive... //
WITHOUT_CLASSIFICATION	// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //
WITHOUT_CLASSIFICATION	// If we still don't have a good base URL, complain about it. //
WITHOUT_CLASSIFICATION	// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.
WITHOUT_CLASSIFICATION	// If we are still on the root mapping itself... //
WITHOUT_CLASSIFICATION	// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //
WITHOUT_CLASSIFICATION	// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //
WITHOUT_CLASSIFICATION	// If the result about to be returned has children... //
WITHOUT_CLASSIFICATION	// Record the iterator as the next one to prune, and add it to the stack. //
WITHOUT_CLASSIFICATION	// There will be no iterator to prune. //
WITHOUT_CLASSIFICATION	// While the current iterator has no next... //
WITHOUT_CLASSIFICATION	// Pop it from the stack. //
WITHOUT_CLASSIFICATION	// If the stack is empty, we're done. //
WITHOUT_CLASSIFICATION	// if the given class is subclass of enum and node is of subclass of type
WITHOUT_CLASSIFICATION	// Pop it off the stack. //
WITHOUT_CLASSIFICATION	// Get the next one down and then test it for has next. //
WITHOUT_CLASSIFICATION	// If there is an iterator to prune. //
WITHOUT_CLASSIFICATION	// You can only prune once. //
WITHOUT_CLASSIFICATION	// If that iterator is still at the top of the stack... //
WITHOUT_CLASSIFICATION	// Allow for a bit-shift of growth. //
WITHOUT_CLASSIFICATION	// Keep popping the stack until an iterator that has a next is at the top. //
WITHOUT_CLASSIFICATION	// Conditionally create the data. //
WITHOUT_CLASSIFICATION	//  ++modCount //
WITHOUT_CLASSIFICATION	// Guard for no data. //
WITHOUT_CLASSIFICATION	// Guard for no data. //
WITHOUT_CLASSIFICATION	// ++modCount //
WITHOUT_CLASSIFICATION	// ++modCount //
WITHOUT_CLASSIFICATION	// Conditionally create the data. //
WITHOUT_CLASSIFICATION	// ++modCount //
WITHOUT_CLASSIFICATION	// Don't hold onto a duplicate reference to the last object. //
WITHOUT_CLASSIFICATION	// Give it all back to the garbage collector. //
WITHOUT_CLASSIFICATION	// Give it all back to the garbage collector. //
WITHOUT_CLASSIFICATION	// Write the capacity. //
WITHOUT_CLASSIFICATION	// create map of public static final field initializers to fields
WITHOUT_CLASSIFICATION	// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //
WITHOUT_CLASSIFICATION	// This should be transparent. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Write all the entryData; there will be size of them. //
WITHOUT_CLASSIFICATION	// Restore the capacity, if there was any. //
WITHOUT_CLASSIFICATION	// Read all size number of entryData. //
WITHOUT_CLASSIFICATION	//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000
WITHOUT_CLASSIFICATION	//0000 0000 1111 //1111 0000 0000
WITHOUT_CLASSIFICATION	// This just represents going back to the unset state, but that doesn't affect the contents of the list. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// add all converted fields after the last final field  // that is used in initializers of the converted fields
WITHOUT_CLASSIFICATION	// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //
WITHOUT_CLASSIFICATION	// Open an editor on the new file. //
WITHOUT_CLASSIFICATION	// create field initializer from enum constant's arguments and body
WITHOUT_CLASSIFICATION	// Apply the change. //
WITHOUT_CLASSIFICATION	// Delete the change information because it is invalid now that the objects have been changed. //
WITHOUT_CLASSIFICATION	// Apply the change and reverse the change information. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// set original node of annotations (to allow get methods to work correctly)
WITHOUT_CLASSIFICATION	// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.
WITHOUT_CLASSIFICATION	// Reverse the objects to attach and detach lists. //
WITHOUT_CLASSIFICATION	// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //
WITHOUT_CLASSIFICATION	// This case will be handled special during apply //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// New Template Container Entryfield
WITHOUT_CLASSIFICATION	// If there's no position, the list is being cleared. //
WITHOUT_CLASSIFICATION	// If there's no position, the list is being cleared. //
WITHOUT_CLASSIFICATION	// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //
WITHOUT_CLASSIFICATION	// When we attached we have to recompute the erasure of the type parameter. //
WITHOUT_CLASSIFICATION	// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error
WITHOUT_CLASSIFICATION	// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData
WITHOUT_CLASSIFICATION	// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //
WITHOUT_CLASSIFICATION	// Create a key set that supports add. //
WITHOUT_CLASSIFICATION	// Skip derived features. //
WITHOUT_CLASSIFICATION	// Include derived relations only if they won't also come from mixed or a group. //
WITHOUT_CLASSIFICATION	// If this is just a proxy being resolved... //
WITHOUT_CLASSIFICATION	// Force the raw type to be resolved so we don't resolve this endlessly. //
WITHOUT_CLASSIFICATION	// Update the classifier and hence the raw type as normal. //
WITHOUT_CLASSIFICATION	// The notification for this list is being thrown by the // delegating list //
WITHOUT_CLASSIFICATION	// At development time, the real factory may not be available. Just return null. //
WITHOUT_CLASSIFICATION	// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.
WITHOUT_CLASSIFICATION	// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();
WITHOUT_CLASSIFICATION	// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);
WITHOUT_CLASSIFICATION	// This should never be called. //
WITHOUT_CLASSIFICATION	// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);
WITHOUT_CLASSIFICATION	// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;
WITHOUT_CLASSIFICATION	// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //
WITHOUT_CLASSIFICATION	// When setting the resource to null we assume that detach has already been called in the resource implementation //
WITHOUT_CLASSIFICATION	/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */
WITHOUT_CLASSIFICATION	// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //
WITHOUT_CLASSIFICATION	// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //
WITHOUT_CLASSIFICATION	// For isSet, we only need to check the bit and return -1 when the bit is 0. //
WITHOUT_CLASSIFICATION	// If the value index set, there's no index to return. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //
WITHOUT_CLASSIFICATION	// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //
WITHOUT_CLASSIFICATION	// Determine the index for the feature and return the value at that index, if an index is assigned. //
WITHOUT_CLASSIFICATION	// Determine if an index is assigned. //
WITHOUT_CLASSIFICATION	// Determine the index. //
WITHOUT_CLASSIFICATION	// If it's newly allocated, add a new value, and indicate there was no previous value. //
WITHOUT_CLASSIFICATION	// Set the value at the previously allocated index and return the previous value there. //
WITHOUT_CLASSIFICATION	// Forward the interned value. //
WITHOUT_CLASSIFICATION	// If it's a parameterized type... //
WITHOUT_CLASSIFICATION	// The instance class name is the erasure. //
WITHOUT_CLASSIFICATION	// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //
WITHOUT_CLASSIFICATION	// Be sure to pick up any trailing [] brackets. //
WITHOUT_CLASSIFICATION	// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //
WITHOUT_CLASSIFICATION	// If the result is not a proxy, cache it. //
WITHOUT_CLASSIFICATION	// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //
WITHOUT_CLASSIFICATION	// Is the first character a special character, i.e., something other than '@'? //
WITHOUT_CLASSIFICATION	// Is it the start of a source URI of an annotation? //
WITHOUT_CLASSIFICATION	// Recompute the read only state. //
WITHOUT_CLASSIFICATION	// Refresh any actions that may become enabled or disabled. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// If this is just a proxy being resolved... //
WITHOUT_CLASSIFICATION	// Force the raw type to be resolved so we don't resolve this endlessly. //
WITHOUT_CLASSIFICATION	// Update the classifier and hence the raw type as normal. //
WITHOUT_CLASSIFICATION	// Find the closing '%' //
WITHOUT_CLASSIFICATION	// Decode all encoded characters. //
WITHOUT_CLASSIFICATION	// Check for a count, i.e., a '.' followed by a number. //
WITHOUT_CLASSIFICATION	// Look for the annotation with the matching source. //
WITHOUT_CLASSIFICATION	// Look for trailing count. //
WITHOUT_CLASSIFICATION	// Look for a matching named element. //
WITHOUT_CLASSIFICATION	// Find the uppermost class loader in the hierarchy that can load the class. //
WITHOUT_CLASSIFICATION	// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //
WITHOUT_CLASSIFICATION	// Register with the upper most class loader that's able to load the class. //
WITHOUT_CLASSIFICATION	// This let's us test whether the string exists as a file. // If not, we try as a URI. //
WITHOUT_CLASSIFICATION	// First try to see if this class has an eInstance  //
WITHOUT_CLASSIFICATION	// First try to see if this class has an eInstance  //
WITHOUT_CLASSIFICATION	// Remember the file. //
WITHOUT_CLASSIFICATION	// Do the work within an operation. //
WITHOUT_CLASSIFICATION	// Create a resource set //
WITHOUT_CLASSIFICATION	// Get the URI of the model file. //
WITHOUT_CLASSIFICATION	// Create a resource for this file. //
WITHOUT_CLASSIFICATION	// Add the initial model object to the contents. //
WITHOUT_CLASSIFICATION	// Save the contents of the resource to the file system. //
WITHOUT_CLASSIFICATION	// Select the new file resource in the current view. //
WITHOUT_CLASSIFICATION	// Make sure the file ends in ".ecore". //
WITHOUT_CLASSIFICATION	// Create a page, set the title, and the initial model file name. //
WITHOUT_CLASSIFICATION	// Try and get the resource selection to determine a current directory for the file dialog. //
WITHOUT_CLASSIFICATION	// Get the resource... //
WITHOUT_CLASSIFICATION	// Get the resource parent, if its a file. //
WITHOUT_CLASSIFICATION	// This gives us a directory... //
WITHOUT_CLASSIFICATION	// Set this for the container. //
WITHOUT_CLASSIFICATION	// Make up a unique new name here. //
WITHOUT_CLASSIFICATION	// Create an adapter factory that yields item providers. //
WITHOUT_CLASSIFICATION	// Create the command stack that will notify this editor as commands are executed. //
WITHOUT_CLASSIFICATION	// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //
WITHOUT_CLASSIFICATION	// Try to select the affected objects. //
WITHOUT_CLASSIFICATION	// Create the editing domain with a special command stack. //
WITHOUT_CLASSIFICATION	// Make sure it's okay. //
WITHOUT_CLASSIFICATION	// Try to select the items in the current content viewer of the editor. //
WITHOUT_CLASSIFICATION	// If it is changing... //
WITHOUT_CLASSIFICATION	// Create the listener on demand. //
WITHOUT_CLASSIFICATION	// This just notifies those things that are affected by the section. //
WITHOUT_CLASSIFICATION	// Stop listening to the old one. //
WITHOUT_CLASSIFICATION	// Start listening to the new one. //
WITHOUT_CLASSIFICATION	// Remember it. //
WITHOUT_CLASSIFICATION	// Set the editors selection based on the current viewer's selection. //
WITHOUT_CLASSIFICATION	// Load the resource through the editing domain. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Create a page for the selection tree view. //
WITHOUT_CLASSIFICATION	// Ensures that this editor will only display the page's tab // area if there are more than one page //
WITHOUT_CLASSIFICATION	// The content outline is just a tree. //
WITHOUT_CLASSIFICATION	// Set up the tree viewer. //
WITHOUT_CLASSIFICATION	// Make sure our popups work. //
WITHOUT_CLASSIFICATION	// Select the root object in the view. //
WITHOUT_CLASSIFICATION	// Listen to selection so that we can handle it is a special way. //
WITHOUT_CLASSIFICATION	// Get the first selected element. //
WITHOUT_CLASSIFICATION	// Set the selection to the widget. //
WITHOUT_CLASSIFICATION	// Save only resources that have actually changed. //
WITHOUT_CLASSIFICATION	// This is the method that gets invoked when the operation runs. //
WITHOUT_CLASSIFICATION	// Save the resources to the file system. //
WITHOUT_CLASSIFICATION	// This runs the options, and shows progress. //
WITHOUT_CLASSIFICATION	// Refresh the necessary state. //
WITHOUT_CLASSIFICATION	// Something went wrong that shouldn't. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Remember the file. //
WITHOUT_CLASSIFICATION	// Do the work within an operation. //
WITHOUT_CLASSIFICATION	// Create a resource set //
WITHOUT_CLASSIFICATION	// Get the URI of the model file. //
WITHOUT_CLASSIFICATION	// Save the contents of the resource to the file system. //
WITHOUT_CLASSIFICATION	// Select the new file resource in the current view. //
WITHOUT_CLASSIFICATION	// We can't have a null name, in case we're using EMOF serialization. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Switch to the new selection provider. //
WITHOUT_CLASSIFICATION	// Fake a selection changed event to update the menus. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Try and get the resource selection to determine a current directory for the file dialog. //
WITHOUT_CLASSIFICATION	// Get the resource... //
WITHOUT_CLASSIFICATION	// Get the resource parent, if its a file. //
WITHOUT_CLASSIFICATION	// This gives us a directory... //
WITHOUT_CLASSIFICATION	// Make up a unique new name here. //
WITHOUT_CLASSIFICATION	// Prepare for CreateChild item addition or removal. //
WITHOUT_CLASSIFICATION	// Prepare for CreateSibling item addition or removal. //
WITHOUT_CLASSIFICATION	// Force an update because Eclipse hides empty menus now. //
WITHOUT_CLASSIFICATION	// Remove any menu items for old selection. //
WITHOUT_CLASSIFICATION	// Query the new selection for appropriate new child/sibling descriptors //
WITHOUT_CLASSIFICATION	// Generate actions for selection; populate and redraw the menus. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Look into SubContributionItems //
WITHOUT_CLASSIFICATION	// Delete the ActionContributionItems with matching action. //
WITHOUT_CLASSIFICATION	// If it's really a contained child, return the feature for it. //
WITHOUT_CLASSIFICATION	// Changes to the parameters should also update the label. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// If it's really a contained child, return the feature for it. //
WITHOUT_CLASSIFICATION	// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //
WITHOUT_CLASSIFICATION	// Changes to parameter types should also update the operation's label. //
WITHOUT_CLASSIFICATION	// Filter out types that aren't permitted. //
WITHOUT_CLASSIFICATION	// Filter out types that aren't permitted. //
WITHOUT_CLASSIFICATION	// Avoid allowing choices that will lead to duplicates. //
WITHOUT_CLASSIFICATION	//  Avoid allowing a choice that will lead to duplicates. //
WITHOUT_CLASSIFICATION	// Ensure that there are enough type arguments to match the number of type parameters. //
WITHOUT_CLASSIFICATION	// You can only add type arguments if there are type parameters not yet used up. //
WITHOUT_CLASSIFICATION	// You cannot add any children for a type parameter. //
WITHOUT_CLASSIFICATION	// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //
WITHOUT_CLASSIFICATION	// Otherwise you can't make it a child. //
WITHOUT_CLASSIFICATION	// Let them choose type parameters as well. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Handle eOpposite specially. //
WITHOUT_CLASSIFICATION	// Don't use the normal reference copying for eOpposite. //
WITHOUT_CLASSIFICATION	// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //
WITHOUT_CLASSIFICATION	// Filter out classes that aren't permitted. //
WITHOUT_CLASSIFICATION	// Read all the values into an array. //
WITHOUT_CLASSIFICATION	// Read all the values into an array. //
WITHOUT_CLASSIFICATION	// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //
WITHOUT_CLASSIFICATION	// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //
WITHOUT_CLASSIFICATION	// This guard is needed to ensure that clear doesn't make the resource become loaded. //
WITHOUT_CLASSIFICATION	// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.
WITHOUT_CLASSIFICATION	// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY
WITHOUT_CLASSIFICATION	// The CipherOutputStream shoudln't close the underlying stream //
WITHOUT_CLASSIFICATION	// Build a list of the keys //
WITHOUT_CLASSIFICATION	// The classifier of an references's generic type must be a class. //
WITHOUT_CLASSIFICATION	// If they are the same classifier, they are of course equal. //
WITHOUT_CLASSIFICATION	// Ignore derived features. //
WITHOUT_CLASSIFICATION	// Don't set the type if it's already set. //
WITHOUT_CLASSIFICATION	// Look through all the references... //
WITHOUT_CLASSIFICATION	// Do the extent processing that should have been done for the root but was actualljy done for the document root. //
WITHOUT_CLASSIFICATION	// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //
WITHOUT_CLASSIFICATION	// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData
WITHOUT_CLASSIFICATION	// Internal use only. // The @ always matches line beginnings.
WITHOUT_CLASSIFICATION	// Reserve a place to insert xmlns declarations after we know what they all are. //
WITHOUT_CLASSIFICATION	// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);
WITHOUT_CLASSIFICATION	// Need not to call setSource() because // a caller can not access this match instance.
WITHOUT_CLASSIFICATION	// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)
WITHOUT_CLASSIFICATION	// Ignore CHAR tokens. // ** // **
WITHOUT_CLASSIFICATION	//missing Specials add manually // 84
WITHOUT_CLASSIFICATION	//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero
WITHOUT_CLASSIFICATION	// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.
WITHOUT_CLASSIFICATION	// // Data //
WITHOUT_CLASSIFICATION	// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.
WITHOUT_CLASSIFICATION	// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.
WITHOUT_CLASSIFICATION	// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."
WITHOUT_CLASSIFICATION	// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.
WITHOUT_CLASSIFICATION	// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Check whether there is an opposite that needs attention. //
WITHOUT_CLASSIFICATION	// Return whether there is a list, the value is in the list, and index is in range... //
WITHOUT_CLASSIFICATION	// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //
WITHOUT_CLASSIFICATION	// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //
WITHOUT_CLASSIFICATION	// Only return the feedback for an executable command. //
WITHOUT_CLASSIFICATION	// No image is a good default. //
WITHOUT_CLASSIFICATION	// Add it to the list and remove it from the other list. //
WITHOUT_CLASSIFICATION	// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //
WITHOUT_CLASSIFICATION	// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //
WITHOUT_CLASSIFICATION	// Record the part. //
WITHOUT_CLASSIFICATION	// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon
WITHOUT_CLASSIFICATION	// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //
WITHOUT_CLASSIFICATION	// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //
WITHOUT_CLASSIFICATION	// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //
WITHOUT_CLASSIFICATION	// If we've found thing with type parameters, search them for a match. //
WITHOUT_CLASSIFICATION	// process documentation info and create eEnumLiteral for each line //
WITHOUT_CLASSIFICATION	// This just notifies those things that are affected by the section. //
WITHOUT_CLASSIFICATION	// Creates the model from the editor input //
WITHOUT_CLASSIFICATION	// This is the method that gets invoked when the operation runs. //
WITHOUT_CLASSIFICATION	// Generate actions for selection; populate and redraw the menus. //
WITHOUT_CLASSIFICATION	// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info
WITHOUT_CLASSIFICATION	// Create a page for the parent tree view. //
WITHOUT_CLASSIFICATION	// Make sure it's okay. //
WITHOUT_CLASSIFICATION	// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //
WITHOUT_CLASSIFICATION	// Cache the tree path for each object. //
WITHOUT_CLASSIFICATION	// Set the editor's selection based on the current viewer's selection. //
WITHOUT_CLASSIFICATION	// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //
WITHOUT_CLASSIFICATION	// This is the method that gets invoked when the operation runs. //
WITHOUT_CLASSIFICATION	// This is for the out2in feature. //
WITHOUT_CLASSIFICATION	// This is for the topDown feature. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// There needs to be another URL protocol right after the archive protocol, and not a "/". //
WITHOUT_CLASSIFICATION	// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //
WITHOUT_CLASSIFICATION	// Record them as generic streams to record state during the loop that emulates recursion. //
WITHOUT_CLASSIFICATION	// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //
WITHOUT_CLASSIFICATION	// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //
WITHOUT_CLASSIFICATION	// Either execute or redo the command, as appropriate. //
WITHOUT_CLASSIFICATION	// Skip over the command that threw the exception. //
WITHOUT_CLASSIFICATION	// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //
WITHOUT_CLASSIFICATION	// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //
WITHOUT_CLASSIFICATION	// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //
WITHOUT_CLASSIFICATION	// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //
WITHOUT_CLASSIFICATION	// Remove from by position in reverse order. //
WITHOUT_CLASSIFICATION	// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)
WITHOUT_CLASSIFICATION	//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
WITHOUT_CLASSIFICATION	// Define gradient (blue to widget background color)
WITHOUT_CLASSIFICATION	// Create a new array. //
WITHOUT_CLASSIFICATION	// buttonComposite has to be the first child of composite because subclasses are expecting this.
WITHOUT_CLASSIFICATION	// Common to all URI types.
WITHOUT_CLASSIFICATION	// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.
WITHOUT_CLASSIFICATION	// The lower-cased schemes that will be used to identify archive URIs.
WITHOUT_CLASSIFICATION	// Special segment values interpreted at resolve and resolve time.
WITHOUT_CLASSIFICATION	// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //
WITHOUT_CLASSIFICATION	// | ucschar | escaped
WITHOUT_CLASSIFICATION	// We can't want to do encoding of platform resource URIs by default yet.    //
WITHOUT_CLASSIFICATION	// Returns the upper half bitmask for all the ASCII characters in the given // string.
WITHOUT_CLASSIFICATION	// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.
WITHOUT_CLASSIFICATION	// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //
WITHOUT_CLASSIFICATION	//boolean iri = false;
WITHOUT_CLASSIFICATION	//iri = iri || containsNonASCII(segments[i]);
WITHOUT_CLASSIFICATION	// <p>A valid query may be null or contain any allowed URI characters.
WITHOUT_CLASSIFICATION	//return value == null || validate(value, URIC_HI, URIC_LO, true, true);
WITHOUT_CLASSIFICATION	// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.
WITHOUT_CLASSIFICATION	// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	// current document reference: use base path and query
WITHOUT_CLASSIFICATION	// else keep device, path, and query
WITHOUT_CLASSIFICATION	// else keep authority, device, path, and query
WITHOUT_CLASSIFICATION	// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.
WITHOUT_CLASSIFICATION	// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path
WITHOUT_CLASSIFICATION	// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI
WITHOUT_CLASSIFICATION	// path form demands an absolute path: keep it and query
WITHOUT_CLASSIFICATION	// always include fragment, even if null; // no validation needed since all components are from existing URIs
WITHOUT_CLASSIFICATION	// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.
WITHOUT_CLASSIFICATION	// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty
WITHOUT_CLASSIFICATION	// absolute path or no path -> absolute path
WITHOUT_CLASSIFICATION	// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.
WITHOUT_CLASSIFICATION	/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */
WITHOUT_CLASSIFICATION	// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //
WITHOUT_CLASSIFICATION	// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //
WITHOUT_CLASSIFICATION	// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //
WITHOUT_CLASSIFICATION	// ++modCount //
WITHOUT_CLASSIFICATION	// ++modCount //
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Open an editor on the new file. //
WITHOUT_CLASSIFICATION	// Open an editor on the new file. //
WITHOUT_CLASSIFICATION	// feature is instance of EAttribute
WITHOUT_CLASSIFICATION	// Create a proper feature map entry. //
WITHOUT_CLASSIFICATION	// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //
WITHOUT_CLASSIFICATION	// caches the list value.
WITHOUT_CLASSIFICATION	// caches the list value.
WITHOUT_CLASSIFICATION	// caches the list value.
WITHOUT_CLASSIFICATION	// Maintain a (weak hash) set on the type parameter of all referencing generic types. //
WITHOUT_CLASSIFICATION	// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //
WITHOUT_CLASSIFICATION	// The notification for this list is being thrown by the // delegating list //
WITHOUT_CLASSIFICATION	// Keep trying until all else has failed.
WITHOUT_CLASSIFICATION	// return eContainerFeatureID;
WITHOUT_CLASSIFICATION	// If we're not setting a new resource, attach it to the old container's resource.
WITHOUT_CLASSIFICATION	// If we didn't detach it from an old resource already, detach it from the old container's resource. //
WITHOUT_CLASSIFICATION	/* backward compatibility with old generated overrides */
WITHOUT_CLASSIFICATION	/* backward compatibility with old generated overrides */
WITHOUT_CLASSIFICATION	// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //
WITHOUT_CLASSIFICATION	// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //
WITHOUT_CLASSIFICATION	// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //
WITHOUT_CLASSIFICATION	// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //
WITHOUT_CLASSIFICATION	// Interpret it as part of the name. //
WITHOUT_CLASSIFICATION	// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //
WITHOUT_CLASSIFICATION	//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);
WITHOUT_CLASSIFICATION	// First try to see if this class has an eInstance  //
WITHOUT_CLASSIFICATION	// Create a resource for this file. //
WITHOUT_CLASSIFICATION	// Add the initial model object to the contents. //
WITHOUT_CLASSIFICATION	// Create a page, set the title, and the initial model file name. //
WITHOUT_CLASSIFICATION	// Set this for the container. //
WITHOUT_CLASSIFICATION	// Load the schema and packages that were used to load the instance into this resource set. //
WITHOUT_CLASSIFICATION	// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //
WITHOUT_CLASSIFICATION	// Put all static package in the package registry. //
WITHOUT_CLASSIFICATION	// Look into SubContributionItems //
WITHOUT_CLASSIFICATION	//return;
WITHOUT_CLASSIFICATION	// super.collectNewChildDescriptors(newChildDescriptors, object);
WITHOUT_CLASSIFICATION	// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //
WITHOUT_CLASSIFICATION	// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);
WITHOUT_CLASSIFICATION	// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //
WITHOUT_CLASSIFICATION	// There is no match if the types are different // and they don't each specify the same non-null instance class name. //
WITHOUT_CLASSIFICATION	// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 
WITHOUT_CLASSIFICATION	// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //
WITHOUT_CLASSIFICATION	// A primitive type can only be used as the generic type of a typed element. //
WITHOUT_CLASSIFICATION	// Check if the bound specifies a classifier... //
WITHOUT_CLASSIFICATION	// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //
WITHOUT_CLASSIFICATION	// Or we test their relationship via their instance classes, if they have them. //
WITHOUT_CLASSIFICATION	// The bound is a wildcard with no constraints. //
WITHOUT_CLASSIFICATION	// The bound is a wildcard with no constraints. //
WITHOUT_CLASSIFICATION	/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/
WITHOUT_CLASSIFICATION	// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //
WITHOUT_CLASSIFICATION	/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/
WITHOUT_CLASSIFICATION	// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //
WITHOUT_CLASSIFICATION	// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //
WITHOUT_CLASSIFICATION	// If we can't add it, it must already be in the list so find it and move it to the end. //
WITHOUT_CLASSIFICATION	// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //
WITHOUT_CLASSIFICATION	// There's no reason they aren't equal, so they are. //
WITHOUT_CLASSIFICATION	// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //
WITHOUT_CLASSIFICATION	// If entries don't have the same feature, the feature maps aren't equal. //
WITHOUT_CLASSIFICATION	// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //
WITHOUT_CLASSIFICATION	// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //
WITHOUT_CLASSIFICATION	// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //
WITHOUT_CLASSIFICATION	// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //
WITHOUT_CLASSIFICATION	// Cc
WITHOUT_CLASSIFICATION	// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //
WITHOUT_CLASSIFICATION	// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //
WITHOUT_CLASSIFICATION	// So if the resolved object is also present... //
WITHOUT_CLASSIFICATION	// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //
WITHOUT_CLASSIFICATION	// Continue with a different approach.
WITHOUT_CLASSIFICATION	// Look for the first non-XMI element. //
WITHOUT_CLASSIFICATION	// set features and properties
WITHOUT_CLASSIFICATION	// Include only non-duplicate namespace declarations. //
WITHOUT_CLASSIFICATION	// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //
WITHOUT_CLASSIFICATION	// We must have a qualifier for an attribute that needs qualified. //
WITHOUT_CLASSIFICATION	// see if prefix already exists in current context
WITHOUT_CLASSIFICATION	// Walk up the super types until we reach a root. //
WITHOUT_CLASSIFICATION	// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //
WITHOUT_CLASSIFICATION	/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */
WITHOUT_CLASSIFICATION	// it's intentional to keep going
WITHOUT_CLASSIFICATION	// it's intentional to keep going
WITHOUT_CLASSIFICATION	// it's intentional to keep going
WITHOUT_CLASSIFICATION	// it's intentional to keep going
WITHOUT_CLASSIFICATION	// Produce the supplemental character as an entity
WITHOUT_CLASSIFICATION	// We not sure the encoding supports this code point, so we write it as a character entity reference.
WITHOUT_CLASSIFICATION	// no property
WITHOUT_CLASSIFICATION	// no property
WITHOUT_CLASSIFICATION	// no property
WITHOUT_CLASSIFICATION	// Only handle classifiers from this package. //
WITHOUT_CLASSIFICATION	// We effectively passed null, "" to look up the general-content feature. //
WITHOUT_CLASSIFICATION	// DocumentRoot
WITHOUT_CLASSIFICATION	// Keep trying other member types until all have failed.
WITHOUT_CLASSIFICATION	// Keep trying other member types until all have failed.
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// Need not to call setSource() because // a caller can not access this match instance.
WITHOUT_CLASSIFICATION	// Need not to call setSource() because // a caller can not access this match instance.
WITHOUT_CLASSIFICATION	/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */
WITHOUT_CLASSIFICATION	/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */
WITHOUT_CLASSIFICATION	/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */
WITHOUT_CLASSIFICATION	// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 
WITHOUT_CLASSIFICATION	// STRING
WITHOUT_CLASSIFICATION	// for RANGE or NRANGE
WITHOUT_CLASSIFICATION	// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o
WITHOUT_CLASSIFICATION	// this.ranges is sorted and compacted.
WITHOUT_CLASSIFICATION	// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2
WITHOUT_CLASSIFICATION	//this.setLocale(Locale.getDefault());
WITHOUT_CLASSIFICATION	/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */
WITHOUT_CLASSIFICATION	// ')'
WITHOUT_CLASSIFICATION	// Skips ')'
WITHOUT_CLASSIFICATION	// off -> next of '}'
WITHOUT_CLASSIFICATION	// \ + c // backsolidus // POSIX Character class such as [:alnum:]
WITHOUT_CLASSIFICATION	//tok.dumpRanges();
WITHOUT_CLASSIFICATION	// Skips ']'
WITHOUT_CLASSIFICATION	// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B
WITHOUT_CLASSIFICATION	// for CLOSURE
WITHOUT_CLASSIFICATION	// for STRING
WITHOUT_CLASSIFICATION	// ****
WITHOUT_CLASSIFICATION	/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */
WITHOUT_CLASSIFICATION	// ------------------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------------------
WITHOUT_CLASSIFICATION	// 28 // 29, 30 // 31-37
WITHOUT_CLASSIFICATION	// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote
WITHOUT_CLASSIFICATION	/*0590..05FF;*/
WITHOUT_CLASSIFICATION	/*0A00..0A7F;*/
WITHOUT_CLASSIFICATION	/*0D00..0D7F;*/
WITHOUT_CLASSIFICATION	/*10A0..10FF;*/
WITHOUT_CLASSIFICATION	/*16A0..16FF;*/
WITHOUT_CLASSIFICATION	/*2000..206F;*/
WITHOUT_CLASSIFICATION	/*2190..21FF;*/
WITHOUT_CLASSIFICATION	/*2500..257F;*/
WITHOUT_CLASSIFICATION	/*2FF0..2FFF;*/
WITHOUT_CLASSIFICATION	/*3190..319F;*/
WITHOUT_CLASSIFICATION	/*A000..A48F;*/
WITHOUT_CLASSIFICATION	/*FB50..FDFF;*/
WITHOUT_CLASSIFICATION	/*FF00..FFEF;*/
WITHOUT_CLASSIFICATION	/*1D400..1D7FF;*/
WITHOUT_CLASSIFICATION	//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 
WITHOUT_CLASSIFICATION	// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;
WITHOUT_CLASSIFICATION	// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction
WITHOUT_CLASSIFICATION	// both prefix (if any) a localpart must be valid NCName
WITHOUT_CLASSIFICATION	// Empty.
WITHOUT_CLASSIFICATION	// Empty.
WITHOUT_CLASSIFICATION	// Empty.
WITHOUT_CLASSIFICATION	// Empty.
WITHOUT_CLASSIFICATION	/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */
WITHOUT_CLASSIFICATION	//if found "no data" just return null
WITHOUT_CLASSIFICATION	/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */
WITHOUT_CLASSIFICATION	// // Static initialization //
WITHOUT_CLASSIFICATION	// // Static initialization //
WITHOUT_CLASSIFICATION	// add IANA to Java encoding mappings.
WITHOUT_CLASSIFICATION	// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html
WITHOUT_CLASSIFICATION	// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html
WITHOUT_CLASSIFICATION	// <clinit>()
WITHOUT_CLASSIFICATION	// <clinit>()
WITHOUT_CLASSIFICATION	// putJava2IANAMapping(String,String)
WITHOUT_CLASSIFICATION	// getJava2IANAMapping(String):String
WITHOUT_CLASSIFICATION	// removeJava2IANAMapping
WITHOUT_CLASSIFICATION	// Add ASCII Letters
WITHOUT_CLASSIFICATION	// Add Mark Characters
WITHOUT_CLASSIFICATION	// Add Userinfo Characters
WITHOUT_CLASSIFICATION	// just make a copy of the base if spec is empty
WITHOUT_CLASSIFICATION	// A standalone base is a valid URI according to spec
WITHOUT_CLASSIFICATION	// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments
WITHOUT_CLASSIFICATION	// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments
WITHOUT_CLASSIFICATION	// If we didn't find authority we need to back up. Attempt to // match against abs_path next.
WITHOUT_CLASSIFICATION	// create message
WITHOUT_CLASSIFICATION	// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC
WITHOUT_CLASSIFICATION	// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done
WITHOUT_CLASSIFICATION	// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6
WITHOUT_CLASSIFICATION	// check for valid escape sequence
WITHOUT_CLASSIFICATION	// check for valid escape sequence
WITHOUT_CLASSIFICATION	// check for valid escape sequence
WITHOUT_CLASSIFICATION	// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas
WITHOUT_CLASSIFICATION	// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas
WITHOUT_CLASSIFICATION	// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum
WITHOUT_CLASSIFICATION	// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.
WITHOUT_CLASSIFICATION	// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.
WITHOUT_CLASSIFICATION	// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 
WITHOUT_CLASSIFICATION	// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// }}
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	// cause a syntax error
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Look for a likely plugin name. //
WITHOUT_CLASSIFICATION	/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */
WITHOUT_CLASSIFICATION	/*   * Returns the base portion of the dynamic template path.   */
WITHOUT_CLASSIFICATION	// It's okay for there not be a precompiled template, so fail quietly.
WITHOUT_CLASSIFICATION	// Returns whether this class implements any of the given features.
WITHOUT_CLASSIFICATION	// GenTypedElement
WITHOUT_CLASSIFICATION	// GenTypeParameter
WITHOUT_CLASSIFICATION	//GenRuntimeVersion
WITHOUT_CLASSIFICATION	//GenModelPackage
WITHOUT_CLASSIFICATION	// String getPackageID();
WITHOUT_CLASSIFICATION	// getFirstFileExtension?
WITHOUT_CLASSIFICATION	// this returns either "attribute", "attribute list", "reference", or "reference list"
WITHOUT_CLASSIFICATION	// add variable fragment to new declaration
WITHOUT_CLASSIFICATION	// Filtered for property keys to remove duplicates.
WITHOUT_CLASSIFICATION	//GenModelFactory
WITHOUT_CLASSIFICATION	// GenAnnotation
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	// add added super interfaces to the array
WITHOUT_CLASSIFICATION	// always returns original value
WITHOUT_CLASSIFICATION	// only 1 fragment left - revert the changes
WITHOUT_CLASSIFICATION	// split is performed
WITHOUT_CLASSIFICATION	// name already contains ".*" - unset on demand property
WITHOUT_CLASSIFICATION	// not supported in JDOM
WITHOUT_CLASSIFICATION	// not supported in JDOM    
WITHOUT_CLASSIFICATION	//The shared instance.
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	//GenAnnotationImpl
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Create enums
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize enums and add enum literals
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	//GenModelPackageImpl
WITHOUT_CLASSIFICATION	// Does nothing
WITHOUT_CLASSIFICATION	// Create an import manager for this compilation unit
WITHOUT_CLASSIFICATION	// Create a code formatter for this compilation unit, if needed
WITHOUT_CLASSIFICATION	// InputStream contents = new ByteArrayInputStream(bytes);
WITHOUT_CLASSIFICATION	// Clear the import manager
WITHOUT_CLASSIFICATION	//FB TBD different objects for ecore model!
WITHOUT_CLASSIFICATION	// BasicEMap.this.removeEntry(index, j);
WITHOUT_CLASSIFICATION	//FB TBD different objects for ecore model!
WITHOUT_CLASSIFICATION	//(eType instanceof EDataType)
WITHOUT_CLASSIFICATION	// order genPackages by putting firstGenPackage (if non-null) first
WITHOUT_CLASSIFICATION	// generateColor();
WITHOUT_CLASSIFICATION	// If the value is null, the key is a referenced object
WITHOUT_CLASSIFICATION	// If we've found thing with type parameters, search them for a match.
WITHOUT_CLASSIFICATION	/*   * Set from {@link #isChildren children} if unset, and return value.   */
WITHOUT_CLASSIFICATION	//  && eReverseFeature.isNavigable();
WITHOUT_CLASSIFICATION	//GenFeatureImpl
WITHOUT_CLASSIFICATION	// Returns whether this class implements any of the given features.
WITHOUT_CLASSIFICATION	//GenEnumImpl
WITHOUT_CLASSIFICATION	//GenModelFactoryImpl
WITHOUT_CLASSIFICATION	// build mapping from classes to list of features that use them
WITHOUT_CLASSIFICATION	// scan feature lists for those with multiple elements and return them
WITHOUT_CLASSIFICATION	//data type
WITHOUT_CLASSIFICATION	//GenTypeParameterImpl
WITHOUT_CLASSIFICATION	//GenTypedElementImpl
WITHOUT_CLASSIFICATION	// escaped unicode form
WITHOUT_CLASSIFICATION	// EObject is handled by default case
WITHOUT_CLASSIFICATION	// Go through class super types to catch any from other packages
WITHOUT_CLASSIFICATION	// Go through class super types to catch constraints from other packages
WITHOUT_CLASSIFICATION	// Create helpers to cache and supply information for unique naming
WITHOUT_CLASSIFICATION	// Ignore this soft dependency when it's not satisfied.
WITHOUT_CLASSIFICATION	// return getPrefixedName("EditPlugin");
WITHOUT_CLASSIFICATION	// return getProviderPackageName() + "." + getEditPluginClassName();
WITHOUT_CLASSIFICATION	// return getPrefixedName("EditorPlugin");
WITHOUT_CLASSIFICATION	// return getPresentationPackageName() + "." + getEditorPluginClassName();
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	//TBD 
WITHOUT_CLASSIFICATION	//TBD 
WITHOUT_CLASSIFICATION	//GenPackageImpl
WITHOUT_CLASSIFICATION	// Don't care about plugin class; we can generate a model without one.
WITHOUT_CLASSIFICATION	// genPackage can be a broken proxy
WITHOUT_CLASSIFICATION	//   protected JETEmitter extendedItemProviderEmitter = null;
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//GenModelImpl
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc
WITHOUT_CLASSIFICATION	/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	//)
WITHOUT_CLASSIFICATION	// (
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	//GenModelSwitch
WITHOUT_CLASSIFICATION	//GenModelAdapterFactory
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	//GenModelValidator
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//ItemProvider/getText.override.javajetinc
WITHOUT_CLASSIFICATION	//ItemProvider/addPropertyDescriptor.override.javajetinc
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	// return eProperties;
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	//Class/reflectiveDelegation.override.javajetinc
WITHOUT_CLASSIFICATION	//Editor/addItemproviderFactories.override.javajetinc"
WITHOUT_CLASSIFICATION	//ResourceFactoryClass/createResource.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/declaredFieldGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	///////////////////////
WITHOUT_CLASSIFICATION	///////////////////////
WITHOUT_CLASSIFICATION	//volatile
WITHOUT_CLASSIFICATION	//Class/getGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/getGenFeature.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/getGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/getGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicGetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicGetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicGetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicSetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicSetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicSetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/setGenFeature.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/setGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/setGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/setGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicUnsetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicUnsetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class.basicUnsetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/unsetGenFeature.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/unsetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/unsetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/unsetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/isSetGenFeature.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/isSetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/isSetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/isSetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/genOperation.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/genOperation.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/implementedGenOperation.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/eUnset.override.javajetinc
WITHOUT_CLASSIFICATION	//datatype
WITHOUT_CLASSIFICATION	//Class/eIsSet.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/getGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/getGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/getGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/setGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	//TestCase/setGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/setGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/unsetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/unsetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/unsetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/isSetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/isSetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/implementedGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/genOperation.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/implementedGenOperation.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/implementedGenOperation.override.javajetinc
WITHOUT_CLASSIFICATION	/*   * Char buffer for HTML data   */
WITHOUT_CLASSIFICATION	// Match close.
WITHOUT_CLASSIFICATION	// Continue processing dynamically as normal.
WITHOUT_CLASSIFICATION	// Ignore because we'll rethrow the original exception eventually.
WITHOUT_CLASSIFICATION	// pure obfuscated genius!
WITHOUT_CLASSIFICATION	// Read value until delimiter is found:
WITHOUT_CLASSIFICATION	// Take care of the quoting here.
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// (
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Close NCSA like attributes "->"
WITHOUT_CLASSIFICATION	// Close variable like attributes "%>"
WITHOUT_CLASSIFICATION	// XMLesque Close tags
WITHOUT_CLASSIFICATION	// Reached EOF:
WITHOUT_CLASSIFICATION	// Ignore the version
WITHOUT_CLASSIFICATION	//dumpNodeContents(node);
WITHOUT_CLASSIFICATION	// dumpNodeContents(node);
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	//)
WITHOUT_CLASSIFICATION	/////////////////////////////////  PULL  /////////////////////////////////////
WITHOUT_CLASSIFICATION	/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/
WITHOUT_CLASSIFICATION	/////////////////////////////////  PUSH  /////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////  SWEEP  /////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////  SORT  /////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////
WITHOUT_CLASSIFICATION	// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");
WITHOUT_CLASSIFICATION	// apply target parent pattern first
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////
WITHOUT_CLASSIFICATION	// Ignore the exception.
WITHOUT_CLASSIFICATION	// use new node from now on
WITHOUT_CLASSIFICATION	// redo the markup since nodes changed now
WITHOUT_CLASSIFICATION	// super is called on converted node
WITHOUT_CLASSIFICATION	// Back up over the whitespace.
WITHOUT_CLASSIFICATION	// target method is NOT addSuperInterface
WITHOUT_CLASSIFICATION	// if the parent is not in target, there is no point on checking the child
WITHOUT_CLASSIFICATION	// by default nodes are marked up
WITHOUT_CLASSIFICATION	// ignore rules for nodes of different class
WITHOUT_CLASSIFICATION	//)
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// use new node from now on
WITHOUT_CLASSIFICATION	// redo the markup since nodes changed now
WITHOUT_CLASSIFICATION	// super is called on converted node
WITHOUT_CLASSIFICATION	// Command line execution methods
WITHOUT_CLASSIFICATION	// do not crash when control model is not set
WITHOUT_CLASSIFICATION	// Subclasses may override this method
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Not instantiable
WITHOUT_CLASSIFICATION	// replace or append
WITHOUT_CLASSIFICATION	// enable tracking for nodes that have string content
WITHOUT_CLASSIFICATION	// enable tracking for commented out nodes
WITHOUT_CLASSIFICATION	// apply header
WITHOUT_CLASSIFICATION	// skip whitespace, up to the end of the line
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// this should never happen
WITHOUT_CLASSIFICATION	// revert all current edits for this node
WITHOUT_CLASSIFICATION	// log the error, ignore the change and continue
WITHOUT_CLASSIFICATION	// comment out all lines of the node itself, from firstLine to last line
WITHOUT_CLASSIFICATION	// if there is anything after the node on the same line, insert line break
WITHOUT_CLASSIFICATION	// reset text edits; since this node is processed successfully, there is no need to revert these changes
WITHOUT_CLASSIFICATION	// this line has been commented out, return next line number
WITHOUT_CLASSIFICATION	// return the line number of the start of the node
WITHOUT_CLASSIFICATION	// handle the case when there is a replace edit that covers these lines
WITHOUT_CLASSIFICATION	// skip all lines that replace edit covers
WITHOUT_CLASSIFICATION	// should not happen, re-throw exception
WITHOUT_CLASSIFICATION	// make sure that dummy edit is not in the tree
WITHOUT_CLASSIFICATION	// assume length will grow by 10% (average line length is 20 characters)
WITHOUT_CLASSIFICATION	// next position is checked as well
WITHOUT_CLASSIFICATION	// char at currentPos is copied as well
WITHOUT_CLASSIFICATION	// lastPos, currentPos points at the next chars that will be copied later
WITHOUT_CLASSIFICATION	// copy last piece if any
WITHOUT_CLASSIFICATION	// if needed, comment out a comma of the previous enum constant
WITHOUT_CLASSIFICATION	// if there is anything before the node on the same line, create line break and comment out the first line of the node
WITHOUT_CLASSIFICATION	// there is only whitespace on this line - no need for line break
WITHOUT_CLASSIFICATION	// for enum constants, insert line break after the comma if there is anything after the comma
WITHOUT_CLASSIFICATION	// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)
WITHOUT_CLASSIFICATION	// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)
WITHOUT_CLASSIFICATION	// if previous node is not commented out, but all following are
WITHOUT_CLASSIFICATION	// insert new line at the end of previous constant
WITHOUT_CLASSIFICATION	// if comma is on a line by itself, comment it out but do not insert the line break
WITHOUT_CLASSIFICATION	// delete variable fragment from old declaration
WITHOUT_CLASSIFICATION	// do not insert line break if there is only whitespace after comma
WITHOUT_CLASSIFICATION	// there is only whitespace after enum constant on the same line - do not add line breaks
WITHOUT_CLASSIFICATION	//listRewrite.remove((ASTNode)modifier, null);
WITHOUT_CLASSIFICATION	// add added super interfaces to the array
WITHOUT_CLASSIFICATION	// this could be method body, for example
WITHOUT_CLASSIFICATION	// for field declarations use variable declaration fragments instead
WITHOUT_CLASSIFICATION	// for all nodes but some use default extended range
WITHOUT_CLASSIFICATION	// remove all existing modifiers
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// append extra dimensions if any
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// create new modifiers and add to rewrite
WITHOUT_CLASSIFICATION	// parse
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	// specify the exact parent of annotations
WITHOUT_CLASSIFICATION	// set source
WITHOUT_CLASSIFICATION	// create rewriter to record changes
WITHOUT_CLASSIFICATION	// keep comments between nodes when removing or moving nodes
WITHOUT_CLASSIFICATION	// set properties
WITHOUT_CLASSIFICATION	// create JNode and set properties
WITHOUT_CLASSIFICATION	// Set of options that we want to copy from the current definition        
WITHOUT_CLASSIFICATION	// Set of options that we want to control
WITHOUT_CLASSIFICATION	// separate fields with an empty line
WITHOUT_CLASSIFICATION	// make all enum constants to be on separate lines
WITHOUT_CLASSIFICATION	// handle field declarations separately
WITHOUT_CLASSIFICATION	// create new node and replace it all by original contents
WITHOUT_CLASSIFICATION	// set rewriter on the new node
WITHOUT_CLASSIFICATION	// if there are multiple variables in the same field declaration, create declaration with only 1 variable
WITHOUT_CLASSIFICATION	// rewriter is required for set methods
WITHOUT_CLASSIFICATION	// set comment and initializer as strings
WITHOUT_CLASSIFICATION	// set annotation contents
WITHOUT_CLASSIFICATION	// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)
WITHOUT_CLASSIFICATION	// get rewriter
WITHOUT_CLASSIFICATION	// update the wrapped object map
WITHOUT_CLASSIFICATION	// range to look for comments
WITHOUT_CLASSIFICATION	// get the end position of the range for the previous node
WITHOUT_CLASSIFICATION	//previousNode.getStartPosition() + previousNode.getLength();
WITHOUT_CLASSIFICATION	// if there is an element with end position <= rangeEndPos
WITHOUT_CLASSIFICATION	// the previous element must have end position <= rangeEndPos
WITHOUT_CLASSIFICATION	// else - there is a comment that ends exactly at rangeEndPos    
WITHOUT_CLASSIFICATION	// if there is a comment with start position > rangeStartPos
WITHOUT_CLASSIFICATION	// else - there is a comment that starts exactly at rangeStartPos
WITHOUT_CLASSIFICATION	// find start position of farthest preceding comment
WITHOUT_CLASSIFICATION	// check if there is just whitespace between position and start of the comment
WITHOUT_CLASSIFICATION	// extend to include the comment at the same line as the position 
WITHOUT_CLASSIFICATION	// extend range backward
WITHOUT_CLASSIFICATION	// extend range forward
WITHOUT_CLASSIFICATION	// add trailing whitespace
WITHOUT_CLASSIFICATION	// increments the position to add the white spaces
WITHOUT_CLASSIFICATION	// for all nodes but some use default extended range
WITHOUT_CLASSIFICATION	// include line comments following end of the nodes into the range
WITHOUT_CLASSIFICATION	// add leading comments
WITHOUT_CLASSIFICATION	// add trailing comments if necessary
WITHOUT_CLASSIFICATION	// insert new declaration before this one
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// append extra dimensions if any
WITHOUT_CLASSIFICATION	// default implementation does nothing
WITHOUT_CLASSIFICATION	// disable commenting out
WITHOUT_CLASSIFICATION	// enable commenting out
WITHOUT_CLASSIFICATION	// mark the node as moved if node has been removed      
WITHOUT_CLASSIFICATION	// if are dealing with original, not cloned node
WITHOUT_CLASSIFICATION	// mark the node to be removed
WITHOUT_CLASSIFICATION	// assume that the node is being moved (to allow insertion after)
WITHOUT_CLASSIFICATION	// remove the node
WITHOUT_CLASSIFICATION	// insert new values
WITHOUT_CLASSIFICATION	// stringValue not null, nodeValue is null
WITHOUT_CLASSIFICATION	// always returns original value
WITHOUT_CLASSIFICATION	// append extra dimensions since they are not stored in Type object
WITHOUT_CLASSIFICATION	// create map of field names to fields
WITHOUT_CLASSIFICATION	// move all children to the enum, converting some fields to constants
WITHOUT_CLASSIFICATION	// remove type, insert enum
WITHOUT_CLASSIFICATION	// convert only public static final fields
WITHOUT_CLASSIFICATION	// convert only fields of the same type as parent
WITHOUT_CLASSIFICATION	// set arguments and body
WITHOUT_CLASSIFICATION	// move annotations
WITHOUT_CLASSIFICATION	// unable to set arguments or body
WITHOUT_CLASSIFICATION	// update the wrapped object
WITHOUT_CLASSIFICATION	// move annotations
WITHOUT_CLASSIFICATION	// convert enum constants and add to list of converted constants
WITHOUT_CLASSIFICATION	// move the node
WITHOUT_CLASSIFICATION	// insert nodeToInsert after targetNode
WITHOUT_CLASSIFICATION	// replace type by enum
WITHOUT_CLASSIFICATION	// create field declaration with 1 variable declaration fragment
WITHOUT_CLASSIFICATION	// set the type to create
WITHOUT_CLASSIFICATION	// set arguments
WITHOUT_CLASSIFICATION	// replace some arguments by another field names (constants)
WITHOUT_CLASSIFICATION	// update last field that is used
WITHOUT_CLASSIFICATION	// set the arguments to the constructor
WITHOUT_CLASSIFICATION	// set the body
WITHOUT_CLASSIFICATION	// set the whole initializer
WITHOUT_CLASSIFICATION	// return the whole declaration contents (not just variableDeclarationFragment)
WITHOUT_CLASSIFICATION	// check number of fragments
WITHOUT_CLASSIFICATION	// create a copy of declaration
WITHOUT_CLASSIFICATION	// new declaration will not have fragments until performSplit() is called
WITHOUT_CLASSIFICATION	// set rewritten node to be the original
WITHOUT_CLASSIFICATION	// perform split if there is more than 1 fragment
WITHOUT_CLASSIFICATION	// set javadoc
WITHOUT_CLASSIFICATION	// set initializer
WITHOUT_CLASSIFICATION	// set annotations contents
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// generateColor();
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// container specification group
WITHOUT_CLASSIFICATION	// New Template Container Label
WITHOUT_CLASSIFICATION	// New Template Container Label
WITHOUT_CLASSIFICATION	// New Template Container Entryfield
WITHOUT_CLASSIFICATION	// jetNature.setTemplateContainers(newTemplateContainers);
WITHOUT_CLASSIFICATION	// jetNature.setJavaSourceContainer(newJavaSourceContainer);
WITHOUT_CLASSIFICATION	// will point at the character after 0 to 3 octal digits
WITHOUT_CLASSIFICATION	/*   * @since 2.4   */
WITHOUT_CLASSIFICATION	// the for loop's condition finds the separator 
WITHOUT_CLASSIFICATION	// Assume that we aren't running.
WITHOUT_CLASSIFICATION	// Assume that it's not available.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*     * Javadoc copied from interface.     */
WITHOUT_CLASSIFICATION	/*     * Javadoc copied from interface.     */
WITHOUT_CLASSIFICATION	// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();
WITHOUT_CLASSIFICATION	// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();
WITHOUT_CLASSIFICATION	// Trim off the segments corresponding to the package nesting. //
WITHOUT_CLASSIFICATION	// For an archive URI, check for the path in the archive. //
WITHOUT_CLASSIFICATION	// Just print an error message.
WITHOUT_CLASSIFICATION	// Assume the class is not available.
WITHOUT_CLASSIFICATION	// Just return the default.
WITHOUT_CLASSIFICATION	// Ignore the exception and return the original URI.
WITHOUT_CLASSIFICATION	// Continue with the unresolved URI.
WITHOUT_CLASSIFICATION	// Return the original URI.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// If we can open  an input stream, then the path is there, and we have a good URL. //
WITHOUT_CLASSIFICATION	// If we didn't find the path in the usual place nor in the archive... //
WITHOUT_CLASSIFICATION	// Continue processing if the file doesn't exist so that we try create a new empty one.
WITHOUT_CLASSIFICATION	// This is just a marker interface.
WITHOUT_CLASSIFICATION	// This is just a marker interface.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * @deprecated   */
WITHOUT_CLASSIFICATION	/*   * @deprecated   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Create a title bar.
WITHOUT_CLASSIFICATION	// When the pane or any child gains focus, notify the workbench.
WITHOUT_CLASSIFICATION	// Only do this once.
WITHOUT_CLASSIFICATION	// Title.  
WITHOUT_CLASSIFICATION	// Action bar.
WITHOUT_CLASSIFICATION	// System bar.  
WITHOUT_CLASSIFICATION	// Define gradient (blue to widget background color)
WITHOUT_CLASSIFICATION	// colorMap.put(CLR_GRAD_START, clr1);
WITHOUT_CLASSIFICATION	// colorMap.put(CLR_GRAD_START, clr1);
WITHOUT_CLASSIFICATION	// Preload.
WITHOUT_CLASSIFICATION	// Preload.
WITHOUT_CLASSIFICATION	// was the details button pressed?
WITHOUT_CLASSIFICATION	// create OK and Details buttons
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Empty block
WITHOUT_CLASSIFICATION	// Empty block
WITHOUT_CLASSIFICATION	// Empty block
WITHOUT_CLASSIFICATION	// create a composite with standard margins and spacing
WITHOUT_CLASSIFICATION	//Create a label if there are no children to force a smaller layout
WITHOUT_CLASSIFICATION	//If it was not a warning or an diagnostic then return the diagnostic image
WITHOUT_CLASSIFICATION	// Closing the detail area
WITHOUT_CLASSIFICATION	// Opening the detail area
WITHOUT_CLASSIFICATION	//Only one example per wizard
WITHOUT_CLASSIFICATION	// null -> relative URI reference
WITHOUT_CLASSIFICATION	// Applicable only to a hierarchical URI.
WITHOUT_CLASSIFICATION	// empty last segment -> trailing separator
WITHOUT_CLASSIFICATION	// Identifies a file-type absolute URI.
WITHOUT_CLASSIFICATION	// Separators for parsing a URI string.
WITHOUT_CLASSIFICATION	// Characters to use in escaping.
WITHOUT_CLASSIFICATION	// | ucschar | escaped
WITHOUT_CLASSIFICATION	// Static initializer for archiveSchemes.
WITHOUT_CLASSIFICATION	// Returns the lower half bitmask for the given ASCII character.
WITHOUT_CLASSIFICATION	// Returns the upper half bitmask for the given ACSII character.
WITHOUT_CLASSIFICATION	// Debugging method: converts the given long to a string of binary digits.
WITHOUT_CLASSIFICATION	// String-parsing implementation.
WITHOUT_CLASSIFICATION	// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)
WITHOUT_CLASSIFICATION	// Private constructor for use of platform factory methods.
WITHOUT_CLASSIFICATION	// Private constructor for use of static factory methods.
WITHOUT_CLASSIFICATION	//iri = iri || containsNonASCII(authority);
WITHOUT_CLASSIFICATION	//iri = iri || containsNonASCII(device);
WITHOUT_CLASSIFICATION	//iri = iri || containsNonASCII(query);
WITHOUT_CLASSIFICATION	//iri = iri || containsNonASCII(fragment);
WITHOUT_CLASSIFICATION	//this.iri = iri;
WITHOUT_CLASSIFICATION	//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);
WITHOUT_CLASSIFICATION	// Ignore the exception and return false.
WITHOUT_CLASSIFICATION	//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);
WITHOUT_CLASSIFICATION	//return value == null || validate(value, URIC_HI, URIC_LO, true, true);
WITHOUT_CLASSIFICATION	// <p>A valid fragment may be null or contain any allowed URI characters.
WITHOUT_CLASSIFICATION	// note: hierarchical -> authority != null
WITHOUT_CLASSIFICATION	// note: device != null -> hierarchical
WITHOUT_CLASSIFICATION	// note: absolutePath -> hierarchical
WITHOUT_CLASSIFICATION	// note: query != null -> hierarchical
WITHOUT_CLASSIFICATION	// an absolute URI needs no resolving
WITHOUT_CLASSIFICATION	// note: isRelative() -> hierarchical
WITHOUT_CLASSIFICATION	// no authority: use base's
WITHOUT_CLASSIFICATION	// no device: use base's
WITHOUT_CLASSIFICATION	// else keep device, path, and query
WITHOUT_CLASSIFICATION	// else absolute path: keep it and query
WITHOUT_CLASSIFICATION	// else keep authority, device, path, and query
WITHOUT_CLASSIFICATION	// return a correctly sized result
WITHOUT_CLASSIFICATION	// skip empty segments and self references; push everything else
WITHOUT_CLASSIFICATION	// different scheme: need complete, absolute URI
WITHOUT_CLASSIFICATION	// matching authorities and no device or path removal
WITHOUT_CLASSIFICATION	// matching devices and no path removal
WITHOUT_CLASSIFICATION	// user rejects a relative path: keep absolute or no path
WITHOUT_CLASSIFICATION	// current document reference: keep no path or query
WITHOUT_CLASSIFICATION	// no paths: keep query only
WITHOUT_CLASSIFICATION	// keep query and select relative or absolute path based on length
WITHOUT_CLASSIFICATION	// user demands a relative path or the absolute path is longer
WITHOUT_CLASSIFICATION	// else keep shorter absolute path
WITHOUT_CLASSIFICATION	// treat an empty base path as the root absolute path
WITHOUT_CLASSIFICATION	// drop last segment from base, as in resolving
WITHOUT_CLASSIFICATION	// index of first segment that is different between endPath and startPath
WITHOUT_CLASSIFICATION	// return a correctly sized result
WITHOUT_CLASSIFICATION	// return a correctly sized result
WITHOUT_CLASSIFICATION	// Empty statement.
WITHOUT_CLASSIFICATION	// use a stack to accumulate segments
WITHOUT_CLASSIFICATION	// absolute path or no path -> absolute path
WITHOUT_CLASSIFICATION	// note: segments.length > 0 -> hierarchical
WITHOUT_CLASSIFICATION	// note: segments.length > 0 -> hierarchical
WITHOUT_CLASSIFICATION	// Get what's left of the segments after trimming the prefix.
WITHOUT_CLASSIFICATION	// no validation needed since all components are from existing URIs
WITHOUT_CLASSIFICATION	// Otherwise, the path needs only the remaining segments.
WITHOUT_CLASSIFICATION	// Returns the int value of the given hex digit.
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33
WITHOUT_CLASSIFICATION	/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */
WITHOUT_CLASSIFICATION	// Continue with the established base URL.
WITHOUT_CLASSIFICATION	// Ignore the exception since we will throw one when all else fails.
WITHOUT_CLASSIFICATION	// We'll rethrow the original exception, not this one.
WITHOUT_CLASSIFICATION	// Ignore this since we will throw an exception when all else fails.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from source.   */
WITHOUT_CLASSIFICATION	// Suppress default constructor for noninstantiability.
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33
WITHOUT_CLASSIFICATION	/*    * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*    * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	//EParameter
WITHOUT_CLASSIFICATION	// Subclasses may overrride 
WITHOUT_CLASSIFICATION	// WizardContainer variables
WITHOUT_CLASSIFICATION	// Sorting only the genModels
WITHOUT_CLASSIFICATION	//EOperation
WITHOUT_CLASSIFICATION	// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList
WITHOUT_CLASSIFICATION	// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList
WITHOUT_CLASSIFICATION	// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	//ETypedElement
WITHOUT_CLASSIFICATION	// ETypeParameter
WITHOUT_CLASSIFICATION	//EDataType
WITHOUT_CLASSIFICATION	//EcoreFactory
WITHOUT_CLASSIFICATION	// EAnnotation
WITHOUT_CLASSIFICATION	// EGenericType
WITHOUT_CLASSIFICATION	//EcorePackage
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Create enums
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize enums and add enum literals
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	// ListChange
WITHOUT_CLASSIFICATION	// FeatureMapEntry
WITHOUT_CLASSIFICATION	// FeatureChange
WITHOUT_CLASSIFICATION	// ChangeDescription
WITHOUT_CLASSIFICATION	//ChangeFactory
WITHOUT_CLASSIFICATION	//ChangePackage
WITHOUT_CLASSIFICATION	// ResourceChange
WITHOUT_CLASSIFICATION	//ChangePackageImpl
WITHOUT_CLASSIFICATION	//EObjectToChangesMapEntryImpl
WITHOUT_CLASSIFICATION	//ListChangeImpl
WITHOUT_CLASSIFICATION	// cache result
WITHOUT_CLASSIFICATION	// cache result
WITHOUT_CLASSIFICATION	//ResourceChangeImpl
WITHOUT_CLASSIFICATION	// feature is instance of EAttribute
WITHOUT_CLASSIFICATION	// cached already?
WITHOUT_CLASSIFICATION	//FeatureChangeImpl
WITHOUT_CLASSIFICATION	//FeatureChangeImpl
WITHOUT_CLASSIFICATION	// Isolating the new objects
WITHOUT_CLASSIFICATION	// getObjectsToDetachGen() should be changed only if required
WITHOUT_CLASSIFICATION	// caches the list value.
WITHOUT_CLASSIFICATION	//ChangeDescriptionImpl
WITHOUT_CLASSIFICATION	//ChangeFactoryImpl
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Register package validator
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	/*   * @deprecated   */
WITHOUT_CLASSIFICATION	//ChangeSwitch
WITHOUT_CLASSIFICATION	//ChangeAdapterFactory
WITHOUT_CLASSIFICATION	// Make sure that all the old values are cached.
WITHOUT_CLASSIFICATION	//case Notification.REMOVE:
WITHOUT_CLASSIFICATION	//case Notification.REMOVE_MANY:
WITHOUT_CLASSIFICATION	// Continue with no instanceClass. 
WITHOUT_CLASSIFICATION	//EGenericTypeImpl
WITHOUT_CLASSIFICATION	//EParameterImpl
WITHOUT_CLASSIFICATION	// Create data types
WITHOUT_CLASSIFICATION	// Initialize data types
WITHOUT_CLASSIFICATION	//return eContainer;
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	//ETypeParameterImpl
WITHOUT_CLASSIFICATION	//EStringToStringMapEntryImpl
WITHOUT_CLASSIFICATION	// Don't really unset it.
WITHOUT_CLASSIFICATION	// create containment one.
WITHOUT_CLASSIFICATION	//getList(entry).clear();
WITHOUT_CLASSIFICATION	//ETypedElementImpl
WITHOUT_CLASSIFICATION	// Keep trying until all else has failed.
WITHOUT_CLASSIFICATION	// Continue to try a different approach.
WITHOUT_CLASSIFICATION	// Continue to try a different approach.
WITHOUT_CLASSIFICATION	// Keep trying until all else false.
WITHOUT_CLASSIFICATION	//EcoreFactoryImpl
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	/* backward compatibility with old generated overrides */
WITHOUT_CLASSIFICATION	/* backward compatibility with old generated overrides */
WITHOUT_CLASSIFICATION	// Subclasses MUST override this function
WITHOUT_CLASSIFICATION	// return eVirtualIndexBits[offset];
WITHOUT_CLASSIFICATION	// eVirtualIndexBits[offset] = newIndexBits;
WITHOUT_CLASSIFICATION	// Continue to compute the offset.
WITHOUT_CLASSIFICATION	// return eVirtualValues;
WITHOUT_CLASSIFICATION	// eVirtualValues = newValues;
WITHOUT_CLASSIFICATION	// return minimumCapacity;
WITHOUT_CLASSIFICATION	// Ignore exceptions.
WITHOUT_CLASSIFICATION	// Continue and return null.
WITHOUT_CLASSIFICATION	// Ensure that cached ePackage is forgotten.
WITHOUT_CLASSIFICATION	//EAnnotationImpl
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Don't really unset it.
WITHOUT_CLASSIFICATION	// Force this to be initialized as well.
WITHOUT_CLASSIFICATION	//)
WITHOUT_CLASSIFICATION	// (
WITHOUT_CLASSIFICATION	// We can also optimize single valued reverse.  //
WITHOUT_CLASSIFICATION	// all implementations of Java 1.5 should support AES
WITHOUT_CLASSIFICATION	// generate the key
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Continue and try to close.
WITHOUT_CLASSIFICATION	// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// ...
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Ignore exceptions.
WITHOUT_CLASSIFICATION	// Ignore exceptions.
WITHOUT_CLASSIFICATION	// encrypt the input
WITHOUT_CLASSIFICATION	// this is the key we will use to encrypt the data 
WITHOUT_CLASSIFICATION	// create the IV for the password generation algorithm
WITHOUT_CLASSIFICATION	// generate the IV for encryption
WITHOUT_CLASSIFICATION	// turn the password into an AES key
WITHOUT_CLASSIFICATION	// now create the encryption cipher 
WITHOUT_CLASSIFICATION	// Read the header of the encrypted file.				
WITHOUT_CLASSIFICATION	// Decrypt the key bytes
WITHOUT_CLASSIFICATION	// Create the key from the key bytes
WITHOUT_CLASSIFICATION	// If we haven't yet generated a key, just use this one
WITHOUT_CLASSIFICATION	// now create the decrypt cipher
WITHOUT_CLASSIFICATION	// Ignore any exceptions and assume the class isn't available.
WITHOUT_CLASSIFICATION	// Ignore any exceptions and assume the class isn't available.
WITHOUT_CLASSIFICATION	// No methods added.
WITHOUT_CLASSIFICATION	// ECLIPSE-DEPEND-BEGIN
WITHOUT_CLASSIFICATION	// ECLIPSE-DEPEND-BEGIN
WITHOUT_CLASSIFICATION	// ECLIPSE-DEPEND-END
WITHOUT_CLASSIFICATION	// ECLIPSE-DEPEND-END
WITHOUT_CLASSIFICATION	// We can't update any properties via just a URL connection.
WITHOUT_CLASSIFICATION	// Ignore the bound if the value is too big.
WITHOUT_CLASSIFICATION	// Ignore the bound if the value is too big.
WITHOUT_CLASSIFICATION	// Ignore features from the first super type. //
WITHOUT_CLASSIFICATION	// Match against every other operation but this one. //
WITHOUT_CLASSIFICATION	/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	// The CipherOutputStream shoudln't close the underlying stream //
WITHOUT_CLASSIFICATION	// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);
WITHOUT_CLASSIFICATION	// Ensure that the class loader for this class will be used downstream. //
WITHOUT_CLASSIFICATION	// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //
WITHOUT_CLASSIFICATION	//EcoreSwitch
WITHOUT_CLASSIFICATION	// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //
WITHOUT_CLASSIFICATION	// For performance, skip matching all the features of the first super type. //
WITHOUT_CLASSIFICATION	// Don't bother complaining about things with no name, // since there are constraints for that problem. //
WITHOUT_CLASSIFICATION	// Drop the _ separators and normalize the case. //
WITHOUT_CLASSIFICATION	// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19
WITHOUT_CLASSIFICATION	// Match against every other operation but this one. //
WITHOUT_CLASSIFICATION	// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //
WITHOUT_CLASSIFICATION	// There is no match if the types are different // and they don't each specify the same non-null instance class name. //
WITHOUT_CLASSIFICATION	// Iterate over all the operations but skip all the operations in the first super. //
WITHOUT_CLASSIFICATION	// We do not want to diagnose any error that have already been diagnosed by a super type. //
WITHOUT_CLASSIFICATION	// Maintain a list of classifiers for looking up conflicts. //
WITHOUT_CLASSIFICATION	// Look for duplicates among the generic super types. //
WITHOUT_CLASSIFICATION	// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //
WITHOUT_CLASSIFICATION	// The string must contain inappropriate whitespace, so find the index for the first difference. //
WITHOUT_CLASSIFICATION	// Don't complain about the literals if they are the same as the names and the names collide. //
WITHOUT_CLASSIFICATION	// Can't have both a classifier and a type parameter. //
WITHOUT_CLASSIFICATION	// The referencing generic type must be contained to be in scope //
WITHOUT_CLASSIFICATION	// The type parameter must be in scope and must not be a forward reference. //
WITHOUT_CLASSIFICATION	// When used as a generic super type, there must be a classifier that refers to a class. //
WITHOUT_CLASSIFICATION	// The type arguments of a generic super type must not be a wildcard. //
WITHOUT_CLASSIFICATION	// Wildcards are only allowed in type arguments. //
WITHOUT_CLASSIFICATION	// The classifier of an attribute's generic type must be a data type. //
WITHOUT_CLASSIFICATION	// Can't have both an upper and lower bound. //
WITHOUT_CLASSIFICATION	// Can't have a classifier or a type parameter as well as bounds. //
WITHOUT_CLASSIFICATION	// Can only have bounds when used as a type argument. //
WITHOUT_CLASSIFICATION	// Can't have type arguments unless there is a classifier //
WITHOUT_CLASSIFICATION	// Have no arguments when they are allowed is only a warning. //
WITHOUT_CLASSIFICATION	// Incorrect number of type arguments. //
WITHOUT_CLASSIFICATION	// Check if the bound specifies a classifier... //
WITHOUT_CLASSIFICATION	// If the type also specifies a classifier... //
WITHOUT_CLASSIFICATION	// If the are the same then it is bounded properly... //
WITHOUT_CLASSIFICATION	// We test their relationship either via them both being classes... //
WITHOUT_CLASSIFICATION	// namespace context
WITHOUT_CLASSIFICATION	// Determine if there is a bounding generic super type. //
WITHOUT_CLASSIFICATION	// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //
WITHOUT_CLASSIFICATION	// Test if there are type parameters that might require substitution. //
WITHOUT_CLASSIFICATION	// If none of the generic super types are bounded, then we've failed. //
WITHOUT_CLASSIFICATION	// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //
WITHOUT_CLASSIFICATION	// If there is a type parameter, one of its bounds must be bounded by the bound. //
WITHOUT_CLASSIFICATION	// If there is a upper bound, the bound must bound it. //
WITHOUT_CLASSIFICATION	// Failing all those cases, there must be an lower bound that bounds it. //
WITHOUT_CLASSIFICATION	// If the generic type is a wildcard, it can't be bounded by another wildcard. //
WITHOUT_CLASSIFICATION	// If there is an lower bound, the type argument must bound it. //
WITHOUT_CLASSIFICATION	// If the type also specifies a classifier... //
WITHOUT_CLASSIFICATION	// If they are the same classifier, they are of course equal. //
WITHOUT_CLASSIFICATION	// Consider the instance type names they wrap  // to see if they are non-null and equal. //
WITHOUT_CLASSIFICATION	// Consider the instance type names they wrap  // to see if they are non-null and equal. //
WITHOUT_CLASSIFICATION	// I.e., the classifiers are considered equal if they wrap the same non-null type. //
WITHOUT_CLASSIFICATION	// I.e., the classifiers are considered equal if they wrap the same non-null type. //
WITHOUT_CLASSIFICATION	// If the generic type is a different wildcard, it doesn't match. //
WITHOUT_CLASSIFICATION	// Reverse the test. //
WITHOUT_CLASSIFICATION	// If they are the same instance they are equal. //
WITHOUT_CLASSIFICATION	// If one is null (but the other is not) then they are not equal. //
WITHOUT_CLASSIFICATION	// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //
WITHOUT_CLASSIFICATION	// If they both aren't null... //
WITHOUT_CLASSIFICATION	// If one is null (but the other is not) then they can't be equal. //
WITHOUT_CLASSIFICATION	// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //
WITHOUT_CLASSIFICATION	// Ignore leading whitespace
WITHOUT_CLASSIFICATION	// Ignore trailing whitespace
WITHOUT_CLASSIFICATION	//EcoreValidator
WITHOUT_CLASSIFICATION	//  Public
WITHOUT_CLASSIFICATION	// --entryCursor;
WITHOUT_CLASSIFICATION	//lastCursor = -1; //prepared = 0;
WITHOUT_CLASSIFICATION	/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/
WITHOUT_CLASSIFICATION	// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //
WITHOUT_CLASSIFICATION	// For the extended meta data to be created. //
WITHOUT_CLASSIFICATION	// We can also optimize single valued reverse.  //
WITHOUT_CLASSIFICATION	// This forces the feature ids to be assigned. //
WITHOUT_CLASSIFICATION	// We can use == for EObjects and EnumLiterals. //
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	// We can use == for EObjects and EnumLiterals. //
WITHOUT_CLASSIFICATION	// This should be the same as the logic in ResourceImpl.getEObject(String). //
WITHOUT_CLASSIFICATION	//EcoreAdapterFactory
WITHOUT_CLASSIFICATION	// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //
WITHOUT_CLASSIFICATION	/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/
WITHOUT_CLASSIFICATION	// Validate now since the call we make after will skip validating.
WITHOUT_CLASSIFICATION	// Index should be -1.
WITHOUT_CLASSIFICATION	// Index should be -1.
WITHOUT_CLASSIFICATION	// This may be called directly on an EObject for the case of a containment. //
WITHOUT_CLASSIFICATION	// demandDocumentRoot(ePackage);
WITHOUT_CLASSIFICATION	// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //
WITHOUT_CLASSIFICATION	// No new methods.
WITHOUT_CLASSIFICATION	// Undo the preparation for previous and continue.
WITHOUT_CLASSIFICATION	// Undo the preparation for next and continue.
WITHOUT_CLASSIFICATION	// Validate now since the call we make after will skip validating.
WITHOUT_CLASSIFICATION	// Index should be -1.
WITHOUT_CLASSIFICATION	// Index should be -1.
WITHOUT_CLASSIFICATION	// This may be called directly on an EObject for the case of a containment. //
WITHOUT_CLASSIFICATION	/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/
WITHOUT_CLASSIFICATION	//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }
WITHOUT_CLASSIFICATION	// Failure to resolve is ignored.
WITHOUT_CLASSIFICATION	// The loop resolves the cross references by visiting them.
WITHOUT_CLASSIFICATION	// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //
WITHOUT_CLASSIFICATION	// If we are on the special resource set iterator, and there isn't really a next object at this point... //
WITHOUT_CLASSIFICATION	// Skip the dummy null object and test again. //
WITHOUT_CLASSIFICATION	// {
WITHOUT_CLASSIFICATION	// {
WITHOUT_CLASSIFICATION	// If the first object is null, the second object must be null. //
WITHOUT_CLASSIFICATION	// We know the first object isn't null, so if the second one is, it can't be equal. //
WITHOUT_CLASSIFICATION	// Then eObject2 must be that previous match. //
WITHOUT_CLASSIFICATION	// If eObject2 has been compared already... //
WITHOUT_CLASSIFICATION	// Then eObject1 must be that match. //
WITHOUT_CLASSIFICATION	// Neither eObject1 nor eObject2 have been compared yet.
WITHOUT_CLASSIFICATION	// If eObject1 and eObject2 are the same instance... //
WITHOUT_CLASSIFICATION	// Match them and return true. //
WITHOUT_CLASSIFICATION	// If they don't have the same class, they can't be equal. //
WITHOUT_CLASSIFICATION	// Assume from now on that they match. //
WITHOUT_CLASSIFICATION	// Check all the values. //
WITHOUT_CLASSIFICATION	// If the first value is null, the second value must be null. //
WITHOUT_CLASSIFICATION	// Since the first value isn't null, if the second one is, they aren't equal. //
WITHOUT_CLASSIFICATION	// If this is a feature map... //
WITHOUT_CLASSIFICATION	// The feature maps must be equal. //
WITHOUT_CLASSIFICATION	// The values must be Java equal. //
WITHOUT_CLASSIFICATION	// If they don't have the same size, the feature maps aren't equal. //
WITHOUT_CLASSIFICATION	// Compare entries in order. //
WITHOUT_CLASSIFICATION	// There is no reason they aren't equals. //
WITHOUT_CLASSIFICATION	// If the referenced EObjects aren't equal, the feature maps aren't equal. //
WITHOUT_CLASSIFICATION	// If the values aren't Java equal, the feature maps aren't equal. //
WITHOUT_CLASSIFICATION	// EqualityHelper
WITHOUT_CLASSIFICATION	// If it's a proxy, use that. //
WITHOUT_CLASSIFICATION	// If it is in a resource, form the URI relative to that resource. //
WITHOUT_CLASSIFICATION	// Keys that will be used to record visibility for the accessors. //
WITHOUT_CLASSIFICATION	// Value used to suppress visibility. //
WITHOUT_CLASSIFICATION	// Handle the last byte at the end. //
WITHOUT_CLASSIFICATION	// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //
WITHOUT_CLASSIFICATION	// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //
WITHOUT_CLASSIFICATION	// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //
WITHOUT_CLASSIFICATION	// clockseq_hi
WITHOUT_CLASSIFICATION	// clockseq_low
WITHOUT_CLASSIFICATION	// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //
WITHOUT_CLASSIFICATION	// Wait so that the clock can catch up and the time adjustment won't overflow.
WITHOUT_CLASSIFICATION	// We just woke up.
WITHOUT_CLASSIFICATION	// We just woke up.
WITHOUT_CLASSIFICATION	// Place the time into the byte array in network byte order. //
WITHOUT_CLASSIFICATION	// time_low //
WITHOUT_CLASSIFICATION	// time_mid //
WITHOUT_CLASSIFICATION	// time_hi //
WITHOUT_CLASSIFICATION	// Ignore if we can't freeze.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	//fall through...
WITHOUT_CLASSIFICATION	// Deresolve all the URI against the current base URI. //
WITHOUT_CLASSIFICATION	// System.err.println("add = ["+newString+"]");
WITHOUT_CLASSIFICATION	// If there is a temporary file... //
WITHOUT_CLASSIFICATION	// This is the cheapest and most common case. //
WITHOUT_CLASSIFICATION	// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  
WITHOUT_CLASSIFICATION	// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //
WITHOUT_CLASSIFICATION	// If we can't create one, too bad.
WITHOUT_CLASSIFICATION	// SAXXMIHandler
WITHOUT_CLASSIFICATION	// EMOF.isReadOnly = !Ecore.changeable
WITHOUT_CLASSIFICATION	// Ecore.changeable = !EMOF.isReadOnly
WITHOUT_CLASSIFICATION	// Ignore it if we've already set generic versions of these //
WITHOUT_CLASSIFICATION	// Ignore whatever was set before. //
WITHOUT_CLASSIFICATION	// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.
WITHOUT_CLASSIFICATION	// throws SAXException
WITHOUT_CLASSIFICATION	// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //
WITHOUT_CLASSIFICATION	// // Overwrite DefaultHandler methods //
WITHOUT_CLASSIFICATION	// // Implement LexicalHandler methods //
WITHOUT_CLASSIFICATION	// // Implement DTDHandler methods //
WITHOUT_CLASSIFICATION	// // Implement EntityResolver methods //
WITHOUT_CLASSIFICATION	// And find the one that holds this proxy. //
WITHOUT_CLASSIFICATION	// Try to resolve the proxy locally. //
WITHOUT_CLASSIFICATION	// We won't need to process this again later. //
WITHOUT_CLASSIFICATION	// Compute the holder of the proxy //
WITHOUT_CLASSIFICATION	// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //
WITHOUT_CLASSIFICATION	// Move the resolved object to the right place, remove the proxy, and we're done. //
WITHOUT_CLASSIFICATION	// If the resolved object doesn't contain a reference to the proxy holder as it should. //
WITHOUT_CLASSIFICATION	// The proxy needs to be replaced in a way that updates both ends of the reference. //
WITHOUT_CLASSIFICATION	// We won't need to process this again later.
WITHOUT_CLASSIFICATION	// At least set the references that we were able to resolve, if any. //
WITHOUT_CLASSIFICATION	// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //
WITHOUT_CLASSIFICATION	// EATM temporary for debug purposes only. //
WITHOUT_CLASSIFICATION	// check for simple feature
WITHOUT_CLASSIFICATION	// Set up a deferred extent so the document root we create definitely will not be added to the resource. //
WITHOUT_CLASSIFICATION	// Remove the document root's information from the top of the stacks. //
WITHOUT_CLASSIFICATION	// Process the new root object if any. //
WITHOUT_CLASSIFICATION	// There's an EObject on the stack already. //
WITHOUT_CLASSIFICATION	// Excise the new root from the document root. //
WITHOUT_CLASSIFICATION	// handler.ignorableWhitespace(ch, start, length);
WITHOUT_CLASSIFICATION	// Excise the new root from the document root. //
WITHOUT_CLASSIFICATION	//}
WITHOUT_CLASSIFICATION	// The new root object is the actual new object since all sign of the document root will now have disappeared. //
WITHOUT_CLASSIFICATION	// Ignore a whitespace only text entry at the beginning. //
WITHOUT_CLASSIFICATION	// Handle namespaces
WITHOUT_CLASSIFICATION	// If processSchemaLocations is specified, treat these as XML Schema locations
WITHOUT_CLASSIFICATION	// If externalSchemaLocations are specified, process these ones as well
WITHOUT_CLASSIFICATION	// Ensure that anything can be handled, even if it's not recognized. //
WITHOUT_CLASSIFICATION	// This happens when processing an element with simple content that has elements content even though it shouldn't. //
WITHOUT_CLASSIFICATION	// Try to get a general-content feature. // Use a pattern that's not possible any other way. //
WITHOUT_CLASSIFICATION	// This is for the case for a local unqualified element that has been bound. //
WITHOUT_CLASSIFICATION	// This handles the case of a substitution group. //
WITHOUT_CLASSIFICATION	// This check is redundant -- see handleFeature method (EL)
WITHOUT_CLASSIFICATION	// processing unknown feature with xsi:type (xmi:type)
WITHOUT_CLASSIFICATION	// This only works for old globally registered things.
WITHOUT_CLASSIFICATION	// Ignore it if we can't find it since we'll fail anyway.
WITHOUT_CLASSIFICATION	// Continue with a different approach.
WITHOUT_CLASSIFICATION	// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...
WITHOUT_CLASSIFICATION	// Create a proxy in the correct way and pop it. //
WITHOUT_CLASSIFICATION	// Test for a same document reference that would usually be handled as an IDREF. //
WITHOUT_CLASSIFICATION	// EATM Demand create metadata.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface   */
WITHOUT_CLASSIFICATION	// add the key/value pairs to the output string
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ensure that anything can be handled, even if it's not recognized. //
WITHOUT_CLASSIFICATION	// xmlResource.getResourceSet().getResources().addAll(generatedResources);
WITHOUT_CLASSIFICATION	// use the pool to retrieve the parser
WITHOUT_CLASSIFICATION	// use the pool to retrieve the parser
WITHOUT_CLASSIFICATION	// set features and properties
WITHOUT_CLASSIFICATION	// set lexical handler
WITHOUT_CLASSIFICATION	// set lexical handler
WITHOUT_CLASSIFICATION	// release parser back to the pool
WITHOUT_CLASSIFICATION	// release parser back to the pool
WITHOUT_CLASSIFICATION	// Don't read encoding - rely on XML parser to provide one via Locator2
WITHOUT_CLASSIFICATION	// record node's attributes
WITHOUT_CLASSIFICATION	// Include only non-duplicate namespace declarations. //
WITHOUT_CLASSIFICATION	// record namespaces in scope //
WITHOUT_CLASSIFICATION	// traverse element node
WITHOUT_CLASSIFICATION	// class AttributesProxy
WITHOUT_CLASSIFICATION	// XMLLoad
WITHOUT_CLASSIFICATION	// Ignore close since we don't want to let the parser close the stream when it's done.
WITHOUT_CLASSIFICATION	// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.
WITHOUT_CLASSIFICATION	// handler.skippedEntity(name);
WITHOUT_CLASSIFICATION	// handler.resolveEntity(publicId, systemId);
WITHOUT_CLASSIFICATION	// Skips '-'
WITHOUT_CLASSIFICATION	// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //
WITHOUT_CLASSIFICATION	// handler.notationDecl(name, publicId, systemId);
WITHOUT_CLASSIFICATION	// handler.unparsedEntityDecl(name, publicId, systemId, notationName);
WITHOUT_CLASSIFICATION	// SAXXMLHandler
WITHOUT_CLASSIFICATION	// true if seen xmlns="" declaration
WITHOUT_CLASSIFICATION	// There really must be a package. //
WITHOUT_CLASSIFICATION	// There really must be a package. //
WITHOUT_CLASSIFICATION	// We must have a qualifier for an attribute that needs qualified. //
WITHOUT_CLASSIFICATION	// for any content prefix to URI mapping could be in namespace context
WITHOUT_CLASSIFICATION	// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //
WITHOUT_CLASSIFICATION	// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //
WITHOUT_CLASSIFICATION	// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //
WITHOUT_CLASSIFICATION	// If we are substituting an EAttribute for an EReference... //
WITHOUT_CLASSIFICATION	// Create an simple any type wrapper for the attribute value and use that with the EReference. //
WITHOUT_CLASSIFICATION	// Make sure that the list will appear to be set to be empty. //
WITHOUT_CLASSIFICATION	// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>
WITHOUT_CLASSIFICATION	// since xmlns="" is default declaration, remove ""->empty_URI mapping
WITHOUT_CLASSIFICATION	// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)
WITHOUT_CLASSIFICATION	// record duplicate declaration for a given prefix (#3)
WITHOUT_CLASSIFICATION	// recording a first declaration for a given prefix
WITHOUT_CLASSIFICATION	// extend the array, if necessary
WITHOUT_CLASSIFICATION	// push context
WITHOUT_CLASSIFICATION	// resize array, if needed
WITHOUT_CLASSIFICATION	// bind prefix to uri in current context
WITHOUT_CLASSIFICATION	// find prefix in current context
WITHOUT_CLASSIFICATION	// prefix not found
WITHOUT_CLASSIFICATION	// find uri in current context
WITHOUT_CLASSIFICATION	// uri not found
WITHOUT_CLASSIFICATION	// getDeclaredPrefixAt(int):String
WITHOUT_CLASSIFICATION	/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */
WITHOUT_CLASSIFICATION	// Look for a matching element in the specified packages if there are any. //
WITHOUT_CLASSIFICATION	// Look for a substitution group feature in the feature's containing class' containing package. //
WITHOUT_CLASSIFICATION	// Look for a substitution group feature in the classifier's containing package. //
WITHOUT_CLASSIFICATION	// Look for a substitution group feature in the additional packages. //
WITHOUT_CLASSIFICATION	// Process the super types if that's been specified. //
WITHOUT_CLASSIFICATION	// XMIHandler
WITHOUT_CLASSIFICATION	// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation
WITHOUT_CLASSIFICATION	// set serialization options
WITHOUT_CLASSIFICATION	// If we can't create a temp file then we have to ignore the option.
WITHOUT_CLASSIFICATION	// DOM serialization
WITHOUT_CLASSIFICATION	// caching turned on by the user
WITHOUT_CLASSIFICATION	//no caching
WITHOUT_CLASSIFICATION	// If there is no field, then we can't do this.
WITHOUT_CLASSIFICATION	// Entities aren't supported for DOM.
WITHOUT_CLASSIFICATION	// this is a root element
WITHOUT_CLASSIFICATION	// Process XML attributes
WITHOUT_CLASSIFICATION	// it's intentional to keep going
WITHOUT_CLASSIFICATION	// It's intentional to keep going.
WITHOUT_CLASSIFICATION	// Process XML elements
WITHOUT_CLASSIFICATION	// for performance reasons saveNil and saveElement are not used
WITHOUT_CLASSIFICATION	// value[outputPos];
WITHOUT_CLASSIFICATION	// Every codepoint is supported! 
WITHOUT_CLASSIFICATION	// Produce the supplemental character as an entity
WITHOUT_CLASSIFICATION	// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:
WITHOUT_CLASSIFICATION	// value[outputPos];
WITHOUT_CLASSIFICATION	// Go back and add all the XMLNS stuff. //
WITHOUT_CLASSIFICATION	// First try to see if this package's implementation class has an eInstance. //
WITHOUT_CLASSIFICATION	// Check if it's an anonymous type. //
WITHOUT_CLASSIFICATION	// We only get here if we should do this. //
WITHOUT_CLASSIFICATION	// 2^N // 2^N-1    
WITHOUT_CLASSIFICATION	// Every codepoint is supported! 
WITHOUT_CLASSIFICATION	// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:
WITHOUT_CLASSIFICATION	/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */
WITHOUT_CLASSIFICATION	// We not sure the encoding supports this code point, so we write it as a character entity reference.
WITHOUT_CLASSIFICATION	/*     *  Convert:     *  \n to line separator     */
WITHOUT_CLASSIFICATION	// continue with default processing
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// write doctype
WITHOUT_CLASSIFICATION	// Avoid a function call... //
WITHOUT_CLASSIFICATION	// create dummy documentElement
WITHOUT_CLASSIFICATION	// no property
WITHOUT_CLASSIFICATION	// no property
WITHOUT_CLASSIFICATION	// boolean not
WITHOUT_CLASSIFICATION	// ownedProperty???
WITHOUT_CLASSIFICATION	// We will use an xmi:Extension element for these
WITHOUT_CLASSIFICATION	// set parser features and properties
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Register package validator
WITHOUT_CLASSIFICATION	// Register package validator
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Create enums
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize enums and add enum literals
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	// Create data types
WITHOUT_CLASSIFICATION	// Initialize data types
WITHOUT_CLASSIFICATION	// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");
WITHOUT_CLASSIFICATION	// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi
WITHOUT_CLASSIFICATION	// no property // no property // no property
WITHOUT_CLASSIFICATION	// no property // no property
WITHOUT_CLASSIFICATION	//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //
WITHOUT_CLASSIFICATION	// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //
WITHOUT_CLASSIFICATION	// register default options
WITHOUT_CLASSIFICATION	/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */
WITHOUT_CLASSIFICATION	// Assume the class isn't available.
WITHOUT_CLASSIFICATION	//XMLNamespaceFactory
WITHOUT_CLASSIFICATION	// DocumentRoot
WITHOUT_CLASSIFICATION	//XMLNamespacePackage
WITHOUT_CLASSIFICATION	//SpaceType
WITHOUT_CLASSIFICATION	// http:///org/eclipse/emf/ecore/util/ExtendedMetaData
WITHOUT_CLASSIFICATION	//XMLNamespacePackageImpl
WITHOUT_CLASSIFICATION	//XMLNamespaceDocumentRootImpl
WITHOUT_CLASSIFICATION	//XMLNamespaceFactoryImpl
WITHOUT_CLASSIFICATION	//XMLNamespaceValidator
WITHOUT_CLASSIFICATION	// AnyType
WITHOUT_CLASSIFICATION	// SimpleAnyType
WITHOUT_CLASSIFICATION	// ProcessingInstructionType
WITHOUT_CLASSIFICATION	//XMLTypeFactory
WITHOUT_CLASSIFICATION	//XMLTypePackage
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	// Create data types
WITHOUT_CLASSIFICATION	// Initialize data types
WITHOUT_CLASSIFICATION	// {
WITHOUT_CLASSIFICATION	// Create annotations // http://www.w3.org/XML/1998/namespace
WITHOUT_CLASSIFICATION	// Don't create anything.
WITHOUT_CLASSIFICATION	//XMLTypePackageImpl
WITHOUT_CLASSIFICATION	//AnyTypeImpl
WITHOUT_CLASSIFICATION	//ProcessingInstructionTypeImpl
WITHOUT_CLASSIFICATION	// do not validate on load. Check validity using Diagnostician.
WITHOUT_CLASSIFICATION	// do not validate on load. Check validity using Diagnostician.
WITHOUT_CLASSIFICATION	//XMLTypeFactoryImpl
WITHOUT_CLASSIFICATION	//DocumentRootImpl
WITHOUT_CLASSIFICATION	//SimpleAnyTypeImpl
WITHOUT_CLASSIFICATION	//System.err.println("Starts at "+index);
WITHOUT_CLASSIFICATION	//System.err.println("Starts at "+index);
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// Skips a white space.
WITHOUT_CLASSIFICATION	// Skips characters between '#' and a line end.
WITHOUT_CLASSIFICATION	// Strips an escaped white space.
WITHOUT_CLASSIFICATION	// Other escaped character.
WITHOUT_CLASSIFICATION	// As is.
WITHOUT_CLASSIFICATION	// ret.next is null.
WITHOUT_CLASSIFICATION	// {n}
WITHOUT_CLASSIFICATION	// X{2,6} -> XX(X(X(XX?)?)?)?
WITHOUT_CLASSIFICATION	// Token.CLOSURE
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: matchEnd="+matchEnd);
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: matchEnd="+matchEnd);
WITHOUT_CLASSIFICATION	/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: fixed-only: "+this.fixedString);
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: fixed-only: "+this.fixedString);
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: fixed-only: "+this.fixedString);
WITHOUT_CLASSIFICATION	/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */
WITHOUT_CLASSIFICATION	/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */
WITHOUT_CLASSIFICATION	//System.err.println("Non-match in fixed-string search.");
WITHOUT_CLASSIFICATION	//System.err.println("Non-match in fixed-string search.");
WITHOUT_CLASSIFICATION	//System.err.println("Non-match in fixed-string search.");
WITHOUT_CLASSIFICATION	/*           * Checks whether the expression starts with ".*".           */
WITHOUT_CLASSIFICATION	/*           * Checks whether the expression starts with ".*".           */
WITHOUT_CLASSIFICATION	/*           * Checks whether the expression starts with ".*".           */
WITHOUT_CLASSIFICATION	/*           * Optimization against the first character.           */
WITHOUT_CLASSIFICATION	/*           * Optimization against the first character.           */
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);
WITHOUT_CLASSIFICATION	/*           * Straightforward matching.           */
WITHOUT_CLASSIFICATION	/*           * Straightforward matching.           */
WITHOUT_CLASSIFICATION	// Internal use only. // The @ always matches line beginnings.
WITHOUT_CLASSIFICATION	// Internal use only. // The @ always matches line beginnings.
WITHOUT_CLASSIFICATION	// switch anchor type
WITHOUT_CLASSIFICATION	// switch anchor type
WITHOUT_CLASSIFICATION	// ********
WITHOUT_CLASSIFICATION	// ********
WITHOUT_CLASSIFICATION	/*                       * Saves current position to avoid                       * zero-width repeats.                       */
WITHOUT_CLASSIFICATION	/*                       * Saves current position to avoid                       * zero-width repeats.                       */
WITHOUT_CLASSIFICATION	/*           * Optimization against the first character.           */
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);
WITHOUT_CLASSIFICATION	/*           * Straightforward matching.           */
WITHOUT_CLASSIFICATION	// switch anchor type
WITHOUT_CLASSIFICATION	// ********
WITHOUT_CLASSIFICATION	/*                       * Saves current position to avoid                       * zero-width repeats.                       */
WITHOUT_CLASSIFICATION	// "w"
WITHOUT_CLASSIFICATION	// Op.CHAR
WITHOUT_CLASSIFICATION	//+this.fixedString
WITHOUT_CLASSIFICATION	// This pattern has a fixed string of which length is more than one.
WITHOUT_CLASSIFICATION	// Cf // Mn // Mc
WITHOUT_CLASSIFICATION	// "u"
WITHOUT_CLASSIFICATION	/*    public ParseException(String mes) {        this(mes, -1);    }    */
WITHOUT_CLASSIFICATION	// L // L // L // L // L // N // N // N // Mc
WITHOUT_CLASSIFICATION	// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)
WITHOUT_CLASSIFICATION	// Legacy word characters
WITHOUT_CLASSIFICATION	// for UNION
WITHOUT_CLASSIFICATION	//System.err.println("Creates UnionOp");
WITHOUT_CLASSIFICATION	// ModifierOp
WITHOUT_CLASSIFICATION	// for CLOSURE, QUESTION
WITHOUT_CLASSIFICATION	// for UNIoN
WITHOUT_CLASSIFICATION	// STRING
WITHOUT_CLASSIFICATION	// RANGE, NRANGE
WITHOUT_CLASSIFICATION	//case 0x0b:  ret = "\\v";  break;
WITHOUT_CLASSIFICATION	// for RANGE or NRANGE
WITHOUT_CLASSIFICATION	//System.err.println("Token#addRange(): "+start+" "+end);
WITHOUT_CLASSIFICATION	//System.err.println("Do sorting: "+this.ranges.length);
WITHOUT_CLASSIFICATION	// Index of writing point // Index of processing point
WITHOUT_CLASSIFICATION	//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);
WITHOUT_CLASSIFICATION	// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub
WITHOUT_CLASSIFICATION	// src:    o--------o // sub:  o------------o // res: empty // Reuse sub
WITHOUT_CLASSIFICATION	// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)
WITHOUT_CLASSIFICATION	// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub
WITHOUT_CLASSIFICATION	// Not overlapped // src:          o-----o // sub: o----o
WITHOUT_CLASSIFICATION	// this.ranges is sorted and compacted.
WITHOUT_CLASSIFICATION	// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2
WITHOUT_CLASSIFICATION	// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o
WITHOUT_CLASSIFICATION	// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2
WITHOUT_CLASSIFICATION	// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1
WITHOUT_CLASSIFICATION	// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1
WITHOUT_CLASSIFICATION	// Not overlapped // src1:          o-----o // src2: o----o
WITHOUT_CLASSIFICATION	// 32 is the number of bits in `int'.
WITHOUT_CLASSIFICATION	// s&0x1f : 0-31
WITHOUT_CLASSIFICATION	// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class
WITHOUT_CLASSIFICATION	//this.setLocale(Locale.getDefault());
WITHOUT_CLASSIFICATION	//this.setLocale(locale);
WITHOUT_CLASSIFICATION	// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.
WITHOUT_CLASSIFICATION	// Through down
WITHOUT_CLASSIFICATION	// Options
WITHOUT_CLASSIFICATION	// conditional // this.offsets points the next of '('.
WITHOUT_CLASSIFICATION	// '|'
WITHOUT_CLASSIFICATION	//tok = Token.createConcat(tok, this.parseFactor());
WITHOUT_CLASSIFICATION	// ----------------------------------------------------------------
WITHOUT_CLASSIFICATION	// ----------------------------------------------------------------
WITHOUT_CLASSIFICATION	// ')'
WITHOUT_CLASSIFICATION	// ')'
WITHOUT_CLASSIFICATION	// ')'
WITHOUT_CLASSIFICATION	// X+ -> XX*
WITHOUT_CLASSIFICATION	// X? -> X|
WITHOUT_CLASSIFICATION	// Skips ')'
WITHOUT_CLASSIFICATION	// Skips ')'
WITHOUT_CLASSIFICATION	// this.offset points the next of '('
WITHOUT_CLASSIFICATION	// Parses a condition.
WITHOUT_CLASSIFICATION	// Points '('.
WITHOUT_CLASSIFICATION	// Parses yes/no-patterns.
WITHOUT_CLASSIFICATION	// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'
WITHOUT_CLASSIFICATION	// '-' or ':'?
WITHOUT_CLASSIFICATION	// ':'?
WITHOUT_CLASSIFICATION	// such as (?-i)
WITHOUT_CLASSIFICATION	// Must be in 0x0040-0x005f
WITHOUT_CLASSIFICATION	// through down
WITHOUT_CLASSIFICATION	// this.offset -> next of '{'
WITHOUT_CLASSIFICATION	// {min,max}
WITHOUT_CLASSIFICATION	// assume {min,}
WITHOUT_CLASSIFICATION	//System.err.println("CLOSURE: "+min+", "+max);
WITHOUT_CLASSIFICATION	// '(?:' // '(?(' // (?modifiers ... )
WITHOUT_CLASSIFICATION	// Skips '.'
WITHOUT_CLASSIFICATION	// handle category escape
WITHOUT_CLASSIFICATION	// '['
WITHOUT_CLASSIFICATION	// '^'
WITHOUT_CLASSIFICATION	// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)
WITHOUT_CLASSIFICATION	// if not shorthands... // Here is no '-'.
WITHOUT_CLASSIFICATION	//tok.dumpRanges();
WITHOUT_CLASSIFICATION	// *** It is not a bug.
WITHOUT_CLASSIFICATION	// for CLOSURE
WITHOUT_CLASSIFICATION	// for CLOSURE
WITHOUT_CLASSIFICATION	// for CLOSURE
WITHOUT_CLASSIFICATION	// for STRING
WITHOUT_CLASSIFICATION	// for STRING
WITHOUT_CLASSIFICATION	// *******
WITHOUT_CLASSIFICATION	// ***** Really?
WITHOUT_CLASSIFICATION	// ***** Really?
WITHOUT_CLASSIFICATION	// infinity
WITHOUT_CLASSIFICATION	// When this.child.getMaxLength() < 0, // this returns minus value
WITHOUT_CLASSIFICATION	// ******
WITHOUT_CLASSIFICATION	/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */
WITHOUT_CLASSIFICATION	// ****
WITHOUT_CLASSIFICATION	// **** We can not optimize.
WITHOUT_CLASSIFICATION	// **** We can not optimize.
WITHOUT_CLASSIFICATION	// ------------------------------------------------------
WITHOUT_CLASSIFICATION	//blockNames in UNICODE 3.1 that supported by XML Schema REC             
WITHOUT_CLASSIFICATION	/*0000..007F;*/
WITHOUT_CLASSIFICATION	/*0080..00FF;*/
WITHOUT_CLASSIFICATION	/*0100..017F;*/
WITHOUT_CLASSIFICATION	/*0180..024F;*/
WITHOUT_CLASSIFICATION	/*0250..02AF;*/
WITHOUT_CLASSIFICATION	/*02B0..02FF;*/
WITHOUT_CLASSIFICATION	/*0300..036F;*/
WITHOUT_CLASSIFICATION	/*0370..03FF;*/
WITHOUT_CLASSIFICATION	/*0400..04FF;*/
WITHOUT_CLASSIFICATION	/*0530..058F;*/
WITHOUT_CLASSIFICATION	/*0600..06FF;*/
WITHOUT_CLASSIFICATION	/*0700..074F;*/
WITHOUT_CLASSIFICATION	/*0780..07BF;*/
WITHOUT_CLASSIFICATION	/*0900..097F;*/
WITHOUT_CLASSIFICATION	/*0980..09FF;*/
WITHOUT_CLASSIFICATION	/*0A80..0AFF;*/
WITHOUT_CLASSIFICATION	/*0B00..0B7F;*/
WITHOUT_CLASSIFICATION	/*0B80..0BFF;*/
WITHOUT_CLASSIFICATION	/*0C00..0C7F;*/
WITHOUT_CLASSIFICATION	/*0C80..0CFF;*/
WITHOUT_CLASSIFICATION	/*0D80..0DFF;*/
WITHOUT_CLASSIFICATION	/*0E00..0E7F;*/
WITHOUT_CLASSIFICATION	/*0E80..0EFF;*/
WITHOUT_CLASSIFICATION	/*0F00..0FFF;*/
WITHOUT_CLASSIFICATION	/*1000..109F;*/
WITHOUT_CLASSIFICATION	/*1100..11FF;*/
WITHOUT_CLASSIFICATION	/*1200..137F;*/
WITHOUT_CLASSIFICATION	/*13A0..13FF;*/
WITHOUT_CLASSIFICATION	/*1400..167F;*/
WITHOUT_CLASSIFICATION	/*1680..169F;*/
WITHOUT_CLASSIFICATION	/*1780..17FF;*/
WITHOUT_CLASSIFICATION	/*1800..18AF;*/
WITHOUT_CLASSIFICATION	/*1E00..1EFF;*/
WITHOUT_CLASSIFICATION	/*1F00..1FFF;*/
WITHOUT_CLASSIFICATION	/*2070..209F;*/
WITHOUT_CLASSIFICATION	/*20A0..20CF;*/
WITHOUT_CLASSIFICATION	/*20D0..20FF;*/
WITHOUT_CLASSIFICATION	/*2100..214F;*/
WITHOUT_CLASSIFICATION	/*2150..218F;*/
WITHOUT_CLASSIFICATION	/*2200..22FF;*/
WITHOUT_CLASSIFICATION	/*2300..23FF;*/
WITHOUT_CLASSIFICATION	/*2400..243F;*/
WITHOUT_CLASSIFICATION	/*2440..245F;*/
WITHOUT_CLASSIFICATION	/*2460..24FF;*/
WITHOUT_CLASSIFICATION	/*2580..259F;*/
WITHOUT_CLASSIFICATION	/*25A0..25FF;*/
WITHOUT_CLASSIFICATION	/*2600..26FF;*/
WITHOUT_CLASSIFICATION	/*2700..27BF;*/
WITHOUT_CLASSIFICATION	/*2800..28FF;*/
WITHOUT_CLASSIFICATION	/*2E80..2EFF;*/
WITHOUT_CLASSIFICATION	/*2F00..2FDF;*/
WITHOUT_CLASSIFICATION	/*3000..303F;*/
WITHOUT_CLASSIFICATION	/*3040..309F;*/
WITHOUT_CLASSIFICATION	/*30A0..30FF;*/
WITHOUT_CLASSIFICATION	/*3100..312F;*/
WITHOUT_CLASSIFICATION	/*3130..318F;*/
WITHOUT_CLASSIFICATION	/*31A0..31BF;*/
WITHOUT_CLASSIFICATION	/*3200..32FF;*/
WITHOUT_CLASSIFICATION	/*3300..33FF;*/
WITHOUT_CLASSIFICATION	/*3400..4DB5;*/
WITHOUT_CLASSIFICATION	/*4E00..9FFF;*/
WITHOUT_CLASSIFICATION	/*A490..A4CF;*/
WITHOUT_CLASSIFICATION	/*AC00..D7A3;*/
WITHOUT_CLASSIFICATION	/*E000..F8FF;*/
WITHOUT_CLASSIFICATION	/*F900..FAFF;*/
WITHOUT_CLASSIFICATION	/*FB00..FB4F;*/
WITHOUT_CLASSIFICATION	/*FE20..FE2F;*/
WITHOUT_CLASSIFICATION	/*FE30..FE4F;*/
WITHOUT_CLASSIFICATION	/*FE50..FE6F;*/
WITHOUT_CLASSIFICATION	/*FE70..FEFE;*/
WITHOUT_CLASSIFICATION	/*FEFF..FEFF;*/
WITHOUT_CLASSIFICATION	/*10300..1032F;*/
WITHOUT_CLASSIFICATION	/*10330..1034F;*/
WITHOUT_CLASSIFICATION	/*10400..1044F;*/
WITHOUT_CLASSIFICATION	/*1D000..1D0FF;*/
WITHOUT_CLASSIFICATION	/*1D100..1D1FF;*/
WITHOUT_CLASSIFICATION	/*20000..2A6D6;*/
WITHOUT_CLASSIFICATION	/*2F800..2FA1F;*/
WITHOUT_CLASSIFICATION	/*E0000..E007F;*/
WITHOUT_CLASSIFICATION	//missing 2 private use add manually
WITHOUT_CLASSIFICATION	// 84
WITHOUT_CLASSIFICATION	//build table of Pi values
WITHOUT_CLASSIFICATION	//build table of Pf values
WITHOUT_CLASSIFICATION	// for all characters
WITHOUT_CLASSIFICATION	// Unassigned
WITHOUT_CLASSIFICATION	// TR#18 1.2
WITHOUT_CLASSIFICATION	// Z
WITHOUT_CLASSIFICATION	// Lu Ll Lo Nd
WITHOUT_CLASSIFICATION	// Perl extension
WITHOUT_CLASSIFICATION	//this.setLocale(locale);
WITHOUT_CLASSIFICATION	// X+ -> XX*
WITHOUT_CLASSIFICATION	// X? -> X|
WITHOUT_CLASSIFICATION	// Skips ')'
WITHOUT_CLASSIFICATION	// '['
WITHOUT_CLASSIFICATION	// '^'
WITHOUT_CLASSIFICATION	// Skips ']'
WITHOUT_CLASSIFICATION	// for STRING
WITHOUT_CLASSIFICATION	// ------------------------------------------------------
WITHOUT_CLASSIFICATION	// \pM* // \PM + \pM*
WITHOUT_CLASSIFICATION	// Lu // Ll // Lo
WITHOUT_CLASSIFICATION	// Lu Ll Lo // Nd
WITHOUT_CLASSIFICATION	// synchronized // if null
WITHOUT_CLASSIFICATION	//DEBUG //System.err.println("isRegisterNonXS: "+name);
WITHOUT_CLASSIFICATION	// [{ASSIGNED}]-[{M},{C}]
WITHOUT_CLASSIFICATION	// hangul_medial and hangul_final // extras
WITHOUT_CLASSIFICATION	// base_char?
WITHOUT_CLASSIFICATION	//case 0x0b:  ret = "\\v";  break;
WITHOUT_CLASSIFICATION	// This is CONCAT, and new child is CONCAT.
WITHOUT_CLASSIFICATION	// Recursion
WITHOUT_CLASSIFICATION	//System.err.println("Merge '"+previous+"' and '"+tok+"'.");
WITHOUT_CLASSIFICATION	// Replace previous token by STRING
WITHOUT_CLASSIFICATION	// Subraction
WITHOUT_CLASSIFICATION	// Exit this loop
WITHOUT_CLASSIFICATION	// if not shorthands...
WITHOUT_CLASSIFICATION	// Here is no '-'.
WITHOUT_CLASSIFICATION	// c '-' ']' -> '-' is a single-range.
WITHOUT_CLASSIFICATION	// if - is at the last position of the group
WITHOUT_CLASSIFICATION	// LINE FEED U+000A
WITHOUT_CLASSIFICATION	// CRRIAGE RETURN U+000D
WITHOUT_CLASSIFICATION	// HORIZONTAL TABULATION U+0009
WITHOUT_CLASSIFICATION	// return actucal char
WITHOUT_CLASSIFICATION	// \ + c // backsolidus
WITHOUT_CLASSIFICATION	// Found '-' // Is this '-' is a from-to token?? // Skips '-'
WITHOUT_CLASSIFICATION	// getIANA2JavaMapping(String):String
WITHOUT_CLASSIFICATION	// This implementation was changed to not introduce multi line content.
WITHOUT_CLASSIFICATION	// form integral number of 6-bit groups
WITHOUT_CLASSIFICATION	//encodedData[encodedIndex] = 0xa;
WITHOUT_CLASSIFICATION	// remove white spaces
WITHOUT_CLASSIFICATION	//should be divisible by four
WITHOUT_CLASSIFICATION	//if found "no data" just return null
WITHOUT_CLASSIFICATION	//if found "no data" just return null
WITHOUT_CLASSIFICATION	//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero
WITHOUT_CLASSIFICATION	//One PAD  e.g. 3cQ[Pad]
WITHOUT_CLASSIFICATION	//last 2 bits should be zero
WITHOUT_CLASSIFICATION	//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data
WITHOUT_CLASSIFICATION	//No PAD e.g 3cQl
WITHOUT_CLASSIFICATION	// count characters that's not whitespace
WITHOUT_CLASSIFICATION	/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */
WITHOUT_CLASSIFICATION	// add IANA to Java encoding mappings.
WITHOUT_CLASSIFICATION	// proposed addition (see above for details):
WITHOUT_CLASSIFICATION	// Add support for Cp1252 and its friends
WITHOUT_CLASSIFICATION	// <clinit>()
WITHOUT_CLASSIFICATION	// added since this encoding only differs w.r.t. presentation 
WITHOUT_CLASSIFICATION	// removeIANA2JavaMapping(String):String
WITHOUT_CLASSIFICATION	// putIANA2JavaMapping(String,String)
WITHOUT_CLASSIFICATION	// putJava2IANAMapping(String,String)
WITHOUT_CLASSIFICATION	// getJava2IANAMapping(String):String
WITHOUT_CLASSIFICATION	// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html
WITHOUT_CLASSIFICATION	// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?
WITHOUT_CLASSIFICATION	// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?
WITHOUT_CLASSIFICATION	// // Public static methods //
WITHOUT_CLASSIFICATION	// removeJava2IANAMapping
WITHOUT_CLASSIFICATION	// class EncodingMap
WITHOUT_CLASSIFICATION	//RFC 2732 added '[' and ']' as reserved characters
WITHOUT_CLASSIFICATION	// Add ASCII Digits and ASCII Hex Numbers
WITHOUT_CLASSIFICATION	// Add ASCII Letters and ASCII Hex Numbers
WITHOUT_CLASSIFICATION	// Add ASCII Letters
WITHOUT_CLASSIFICATION	// Add Reserved Characters
WITHOUT_CLASSIFICATION	// Add Mark Characters
WITHOUT_CLASSIFICATION	// Add Scheme Characters
WITHOUT_CLASSIFICATION	// Add Path Characters
WITHOUT_CLASSIFICATION	// Just use null.
WITHOUT_CLASSIFICATION	// just make a copy of the base if spec is empty
WITHOUT_CLASSIFICATION	// search backwards starting from character before ':'.
WITHOUT_CLASSIFICATION	// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.
WITHOUT_CLASSIFICATION	// Authority will be everything up to path, query or fragment
WITHOUT_CLASSIFICATION	// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.
WITHOUT_CLASSIFICATION	// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications
WITHOUT_CLASSIFICATION	// check for absolute path - RFC 2396 5.2 #5
WITHOUT_CLASSIFICATION	// 6a - get all but the last segment of the base URI path
WITHOUT_CLASSIFICATION	// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done
WITHOUT_CLASSIFICATION	// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done
WITHOUT_CLASSIFICATION	// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6
WITHOUT_CLASSIFICATION	// 6b - append the relative URI path
WITHOUT_CLASSIFICATION	// 6c - remove all "./" where "." is a complete path segment
WITHOUT_CLASSIFICATION	// 6d - remove "." if path ends with "." as a complete path segment
WITHOUT_CLASSIFICATION	// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment
WITHOUT_CLASSIFICATION	// userinfo is everything up to @
WITHOUT_CLASSIFICATION	// host is everything up to last ':', or up to  // and including ']' if followed by ':'.
WITHOUT_CLASSIFICATION	// port
WITHOUT_CLASSIFICATION	// Check if the host is well formed.
WITHOUT_CLASSIFICATION	// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.
WITHOUT_CLASSIFICATION	// Check that userinfo is well formed if it exists.
WITHOUT_CLASSIFICATION	// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','
WITHOUT_CLASSIFICATION	// check for valid escape sequence
WITHOUT_CLASSIFICATION	// can check against path characters because the set // is the same except for '/' which we've already excluded.
WITHOUT_CLASSIFICATION	// path - everything up to query string or fragment
WITHOUT_CLASSIFICATION	// RFC 2732 only allows '[' and ']' to appear in the opaque part.
WITHOUT_CLASSIFICATION	// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]
WITHOUT_CLASSIFICATION	// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.
WITHOUT_CLASSIFICATION	// Scan opaque part. // opaque_part = uric_no_slash *uric
WITHOUT_CLASSIFICATION	// query - starts with ? and up to fragment or end
WITHOUT_CLASSIFICATION	// fragment - starts with #
WITHOUT_CLASSIFICATION	// Server based authority.
WITHOUT_CLASSIFICATION	// the second hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	// Registry based authority.
WITHOUT_CLASSIFICATION	// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )
WITHOUT_CLASSIFICATION	// presence of the host (whether valid or empty) means // double-slashes which means generic uri
WITHOUT_CLASSIFICATION	// Check if the host is a valid IPv6reference.
WITHOUT_CLASSIFICATION	// Cannot start with a '.', '-', or end with a '-'.
WITHOUT_CLASSIFICATION	// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2
WITHOUT_CLASSIFICATION	// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum
WITHOUT_CLASSIFICATION	// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.
WITHOUT_CLASSIFICATION	// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric
WITHOUT_CLASSIFICATION	// RFC 1034: Labels must be 63 characters or less.
WITHOUT_CLASSIFICATION	// Check that that there are no more than three digits // in this segment.
WITHOUT_CLASSIFICATION	// Check that this segment is not greater than 255.
WITHOUT_CLASSIFICATION	// Check if string is a potential match for IPv6reference.
WITHOUT_CLASSIFICATION	// Counter for the number of 16-bit sections read in the address.
WITHOUT_CLASSIFICATION	// Scan hex sequence before possible '::' or IPv4 address.
WITHOUT_CLASSIFICATION	// Address must contain 128-bits of information.
WITHOUT_CLASSIFICATION	// '::' represents at least one 16-bit group of zeros.
WITHOUT_CLASSIFICATION	// Trailing zeros will fill out the rest of the address.
WITHOUT_CLASSIFICATION	// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.
WITHOUT_CLASSIFICATION	// 3. Scan hex sequence after '::'.
WITHOUT_CLASSIFICATION	// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 
WITHOUT_CLASSIFICATION	// IPv6 addresses are 128-bit, so there can be at most eight sections.
WITHOUT_CLASSIFICATION	// This could be '::'.
WITHOUT_CLASSIFICATION	// There can be at most 4 hex digits per group.
WITHOUT_CLASSIFICATION	// which ASCII characters need to be escaped
WITHOUT_CLASSIFICATION	// // Static initialization //
WITHOUT_CLASSIFICATION	// we saw some non-ascii character
WITHOUT_CLASSIFICATION	// for each byte
WITHOUT_CLASSIFICATION	// for non-ascii character: make it positive, then escape
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// isValidName(String):boolean
WITHOUT_CLASSIFICATION	// // XML Schema anyURI specific information //
WITHOUT_CLASSIFICATION	// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).
WITHOUT_CLASSIFICATION	// for each character in the anyURI
WITHOUT_CLASSIFICATION	// If encoding happened, create a new string; // otherwise, return the orginal one.
WITHOUT_CLASSIFICATION	// // Constants //
WITHOUT_CLASSIFICATION	// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 49
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -71
WITHOUT_CLASSIFICATION	// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 31 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 53 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 20 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 44 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 66 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 12 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 36 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 15 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 11 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 40 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 68 of value (byte) 33
WITHOUT_CLASSIFICATION	// // Public static methods //
WITHOUT_CLASSIFICATION	// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19
WITHOUT_CLASSIFICATION	// isValid(int):boolean
WITHOUT_CLASSIFICATION	// isInvalid(int):boolean
WITHOUT_CLASSIFICATION	// isContent(int):boolean
WITHOUT_CLASSIFICATION	// isMarkup(int):boolean
WITHOUT_CLASSIFICATION	// isSpace(int):boolean
WITHOUT_CLASSIFICATION	// isNameStart(int):boolean
WITHOUT_CLASSIFICATION	// isName(int):boolean
WITHOUT_CLASSIFICATION	// isNCNameStart(int):boolean
WITHOUT_CLASSIFICATION	// isNCName(int):boolean
WITHOUT_CLASSIFICATION	// isPubid(int):boolean
WITHOUT_CLASSIFICATION	/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */
WITHOUT_CLASSIFICATION	// isValidName(String):boolean
WITHOUT_CLASSIFICATION	/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */
WITHOUT_CLASSIFICATION	// isValidNCName(String):boolean
WITHOUT_CLASSIFICATION	/*      * [7] Nmtoken ::= (NameChar)+      */
WITHOUT_CLASSIFICATION	// encodings
WITHOUT_CLASSIFICATION	// isValidIANAEncoding(String):boolean
WITHOUT_CLASSIFICATION	// class XMLChar
WITHOUT_CLASSIFICATION	//order constants
WITHOUT_CLASSIFICATION	// check whether the character is in the range 0x30 ~ 0x39
WITHOUT_CLASSIFICATION	// interface TypeValidator
WITHOUT_CLASSIFICATION	// This implementation was changed to not introduce multi line content.
WITHOUT_CLASSIFICATION	// form integral number of 6-bit groups
WITHOUT_CLASSIFICATION	//encodedData[encodedIndex] = 0xa;
WITHOUT_CLASSIFICATION	// remove white spaces
WITHOUT_CLASSIFICATION	//should be divisible by four
WITHOUT_CLASSIFICATION	//if found "no data" just return null
WITHOUT_CLASSIFICATION	//One PAD  e.g. 3cQ[Pad]
WITHOUT_CLASSIFICATION	//last 2 bits should be zero
WITHOUT_CLASSIFICATION	//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data
WITHOUT_CLASSIFICATION	//No PAD e.g 3cQl
WITHOUT_CLASSIFICATION	// count characters that's not whitespace
WITHOUT_CLASSIFICATION	// // Data //
WITHOUT_CLASSIFICATION	// // Static initialization //
WITHOUT_CLASSIFICATION	// Add support for Cp1252 and its friends
WITHOUT_CLASSIFICATION	// added since this encoding only differs w.r.t. presentation 
WITHOUT_CLASSIFICATION	// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html
WITHOUT_CLASSIFICATION	// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?
WITHOUT_CLASSIFICATION	// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?
WITHOUT_CLASSIFICATION	// proposed addition (see above for details):
WITHOUT_CLASSIFICATION	// <clinit>()
WITHOUT_CLASSIFICATION	// // Public static methods //
WITHOUT_CLASSIFICATION	// putIANA2JavaMapping(String,String)
WITHOUT_CLASSIFICATION	// getIANA2JavaMapping(String):String
WITHOUT_CLASSIFICATION	// removeIANA2JavaMapping(String):String
WITHOUT_CLASSIFICATION	//RFC 2732 added '[' and ']' as reserved characters
WITHOUT_CLASSIFICATION	// Add ASCII Digits and ASCII Hex Numbers
WITHOUT_CLASSIFICATION	// Add ASCII Letters and ASCII Hex Numbers
WITHOUT_CLASSIFICATION	// isValidName(String):boolean
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33
WITHOUT_CLASSIFICATION	// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1
WITHOUT_CLASSIFICATION	// Add Reserved Characters
WITHOUT_CLASSIFICATION	// Add Scheme Characters
WITHOUT_CLASSIFICATION	// Add Userinfo Characters
WITHOUT_CLASSIFICATION	// Add Path Characters
WITHOUT_CLASSIFICATION	// Just use null.
WITHOUT_CLASSIFICATION	// search backwards starting from character before ':'.
WITHOUT_CLASSIFICATION	// A standalone base is a valid URI according to spec
WITHOUT_CLASSIFICATION	// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.
WITHOUT_CLASSIFICATION	// Authority will be everything up to path, query or fragment
WITHOUT_CLASSIFICATION	// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.
WITHOUT_CLASSIFICATION	// If we didn't find authority we need to back up. Attempt to // match against abs_path next.
WITHOUT_CLASSIFICATION	// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications
WITHOUT_CLASSIFICATION	// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC
WITHOUT_CLASSIFICATION	// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done
WITHOUT_CLASSIFICATION	// check for absolute path - RFC 2396 5.2 #5
WITHOUT_CLASSIFICATION	// 6a - get all but the last segment of the base URI path
WITHOUT_CLASSIFICATION	// 6b - append the relative URI path
WITHOUT_CLASSIFICATION	// 6c - remove all "./" where "." is a complete path segment
WITHOUT_CLASSIFICATION	// 6d - remove "." if path ends with "." as a complete path segment
WITHOUT_CLASSIFICATION	// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."
WITHOUT_CLASSIFICATION	// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment
WITHOUT_CLASSIFICATION	// userinfo is everything up to @
WITHOUT_CLASSIFICATION	// host is everything up to last ':', or up to  // and including ']' if followed by ':'.
WITHOUT_CLASSIFICATION	// port
WITHOUT_CLASSIFICATION	// Check if the host is well formed.
WITHOUT_CLASSIFICATION	// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.
WITHOUT_CLASSIFICATION	// Check that userinfo is well formed if it exists.
WITHOUT_CLASSIFICATION	// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','
WITHOUT_CLASSIFICATION	// check for valid escape sequence
WITHOUT_CLASSIFICATION	// check for valid escape sequence
WITHOUT_CLASSIFICATION	// can check against path characters because the set // is the same except for '/' which we've already excluded.
WITHOUT_CLASSIFICATION	// path - everything up to query string or fragment
WITHOUT_CLASSIFICATION	// RFC 2732 only allows '[' and ']' to appear in the opaque part.
WITHOUT_CLASSIFICATION	// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]
WITHOUT_CLASSIFICATION	// Scan opaque part. // opaque_part = uric_no_slash *uric
WITHOUT_CLASSIFICATION	// query - starts with ? and up to fragment or end
WITHOUT_CLASSIFICATION	// fragment - starts with #
WITHOUT_CLASSIFICATION	// Server based authority.
WITHOUT_CLASSIFICATION	// Registry based authority.
WITHOUT_CLASSIFICATION	// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','
WITHOUT_CLASSIFICATION	// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )
WITHOUT_CLASSIFICATION	// presence of the host (whether valid or empty) means // double-slashes which means generic uri
WITHOUT_CLASSIFICATION	// Check if the host is a valid IPv6reference.
WITHOUT_CLASSIFICATION	// Cannot start with a '.', '-', or end with a '-'.
WITHOUT_CLASSIFICATION	// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2
WITHOUT_CLASSIFICATION	// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.
WITHOUT_CLASSIFICATION	// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric
WITHOUT_CLASSIFICATION	// RFC 1034: Labels must be 63 characters or less.
WITHOUT_CLASSIFICATION	// Check that that there are no more than three digits // in this segment.
WITHOUT_CLASSIFICATION	// Check that this segment is not greater than 255.
WITHOUT_CLASSIFICATION	// Check if string is a potential match for IPv6reference.
WITHOUT_CLASSIFICATION	// Counter for the number of 16-bit sections read in the address.
WITHOUT_CLASSIFICATION	// Scan hex sequence before possible '::' or IPv4 address.
WITHOUT_CLASSIFICATION	// Address must contain 128-bits of information.
WITHOUT_CLASSIFICATION	// '::' represents at least one 16-bit group of zeros.
WITHOUT_CLASSIFICATION	// Trailing zeros will fill out the rest of the address.
WITHOUT_CLASSIFICATION	// 3. Scan hex sequence after '::'.
WITHOUT_CLASSIFICATION	// IPv6 addresses are 128-bit, so there can be at most eight sections.
WITHOUT_CLASSIFICATION	// This could be '::'.
WITHOUT_CLASSIFICATION	// There can be at most 4 hex digits per group.
WITHOUT_CLASSIFICATION	// which ASCII characters need to be escaped
WITHOUT_CLASSIFICATION	// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG
WITHOUT_CLASSIFICATION	// initialize the above 3 arrays
WITHOUT_CLASSIFICATION	// if it's not an ASCII character, break here, and use UTF-8 encoding
WITHOUT_CLASSIFICATION	// we saw some non-ascii character
WITHOUT_CLASSIFICATION	// get UTF-8 bytes for the remaining sub-string
WITHOUT_CLASSIFICATION	// for each byte
WITHOUT_CLASSIFICATION	// for non-ascii character: make it positive, then escape
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.
WITHOUT_CLASSIFICATION	// // XML Schema anyURI specific information //
WITHOUT_CLASSIFICATION	// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).
WITHOUT_CLASSIFICATION	// for each character in the anyURI
WITHOUT_CLASSIFICATION	// If encoding happened, create a new string; // otherwise, return the orginal one.
WITHOUT_CLASSIFICATION	// // Constants //
WITHOUT_CLASSIFICATION	// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 49
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -71
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 31 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 53 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 20 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 44 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 66 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 12 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 36 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 15 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 11 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 40 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 68 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33
WITHOUT_CLASSIFICATION	// isValid(int):boolean
WITHOUT_CLASSIFICATION	// isInvalid(int):boolean
WITHOUT_CLASSIFICATION	// isContent(int):boolean
WITHOUT_CLASSIFICATION	// isMarkup(int):boolean
WITHOUT_CLASSIFICATION	// isSpace(int):boolean
WITHOUT_CLASSIFICATION	// isNameStart(int):boolean
WITHOUT_CLASSIFICATION	// isName(int):boolean
WITHOUT_CLASSIFICATION	// isNCNameStart(int):boolean
WITHOUT_CLASSIFICATION	// isNCName(int):boolean
WITHOUT_CLASSIFICATION	// isPubid(int):boolean
WITHOUT_CLASSIFICATION	/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */
WITHOUT_CLASSIFICATION	// isValidName(String):boolean
WITHOUT_CLASSIFICATION	/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */
WITHOUT_CLASSIFICATION	// isValidNCName(String):boolean
WITHOUT_CLASSIFICATION	/*      * [7] Nmtoken ::= (NameChar)+      */
WITHOUT_CLASSIFICATION	// encodings
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// // Public static methods //
WITHOUT_CLASSIFICATION	// isValidIANAEncoding(String):boolean
WITHOUT_CLASSIFICATION	// isValidIANAEncoding(String):boolean
WITHOUT_CLASSIFICATION	//order constants
WITHOUT_CLASSIFICATION	// check whether the character is in the range 0x30 ~ 0x39
WITHOUT_CLASSIFICATION	// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1
WITHOUT_CLASSIFICATION	// There are attributes to handle.
WITHOUT_CLASSIFICATION	// There are attributes to handle.
WITHOUT_CLASSIFICATION	//XMLTypeResourceImpl
WITHOUT_CLASSIFICATION	//XMLTypeValidator
WITHOUT_CLASSIFICATION	// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //
WITHOUT_CLASSIFICATION	// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //
WITHOUT_CLASSIFICATION	// If we aren't simply removing all the old values... //
WITHOUT_CLASSIFICATION	// If there are values to remove, append a command for them. //
WITHOUT_CLASSIFICATION	// Determine the values that will remain and move them into the right order, if necessary. //
WITHOUT_CLASSIFICATION	// end setting whole list
WITHOUT_CLASSIFICATION	// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //
WITHOUT_CLASSIFICATION	// (value == null) && (oldValue == null) // A simple set/unset will suffice. //
WITHOUT_CLASSIFICATION	// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //
WITHOUT_CLASSIFICATION	// ((value != null) 
WITHOUT_CLASSIFICATION	// (value != null) && (oldValue == null) // Add owner to new value. //
WITHOUT_CLASSIFICATION	// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //
WITHOUT_CLASSIFICATION	// For consistency, we always set 1-1 container relations from the container end. //
WITHOUT_CLASSIFICATION	// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //
WITHOUT_CLASSIFICATION	// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //
WITHOUT_CLASSIFICATION	// For a 1-to-1, we can directly create a SetCommand. //
WITHOUT_CLASSIFICATION	// Initialize all the fields from the command parameter. //
WITHOUT_CLASSIFICATION	// If there is an owner. //
WITHOUT_CLASSIFICATION	// Get the owner's meta object. //
WITHOUT_CLASSIFICATION	// Is the feature an attribute of the owner... //
WITHOUT_CLASSIFICATION	// If must be of this type then. //
WITHOUT_CLASSIFICATION	// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //
WITHOUT_CLASSIFICATION	// If the attribute is set, record it's old value. //
WITHOUT_CLASSIFICATION	// oldValue = owner.eGet(feature);
WITHOUT_CLASSIFICATION	// Make sure the container is not being put into a contained object. //
WITHOUT_CLASSIFICATION	// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //
WITHOUT_CLASSIFICATION	// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //
WITHOUT_CLASSIFICATION	// Either set or unset the feature. //
WITHOUT_CLASSIFICATION	// Either set or unset the feature. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Either set or unset the old value. //
WITHOUT_CLASSIFICATION	// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //
WITHOUT_CLASSIFICATION	// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //
WITHOUT_CLASSIFICATION	// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //
WITHOUT_CLASSIFICATION	// Check each object...  //
WITHOUT_CLASSIFICATION	// Check type of object. //
WITHOUT_CLASSIFICATION	// Check that the object isn't already in a unique list. //
WITHOUT_CLASSIFICATION	// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //
WITHOUT_CLASSIFICATION	// Check to see if a container is being put into a contained object. //
WITHOUT_CLASSIFICATION	// Simply add the collection to the list. //
WITHOUT_CLASSIFICATION	// Simply add the collection to the list. //
WITHOUT_CLASSIFICATION	// We'd like the collection of things added to be selected after this command completes. //
WITHOUT_CLASSIFICATION	// We'd like the collection of things added to be selected after this command completes. //
WITHOUT_CLASSIFICATION	// Remove the collection from the list by index. //
WITHOUT_CLASSIFICATION	// We'd like the owner selected after this undo completes. //
WITHOUT_CLASSIFICATION	// It must be an unsettable feature to be null and considered set. //
WITHOUT_CLASSIFICATION	// It must be an unsettable feature to be empty and considered set. //
WITHOUT_CLASSIFICATION	// if one is null, they'll all be null
WITHOUT_CLASSIFICATION	// Possible scope for the ChangeRecorder
WITHOUT_CLASSIFICATION	// Create commands to create copies of the children. //
WITHOUT_CLASSIFICATION	// We'll default to this. //
WITHOUT_CLASSIFICATION	// If there isn't something obviously wrong with the arguments... //
WITHOUT_CLASSIFICATION	// If the location is near the boundary, we'll start by trying to do a drop insert. //
WITHOUT_CLASSIFICATION	// If we could do a drop insert operation... //
WITHOUT_CLASSIFICATION	// Set the bounds so that we re-check when we are closer to the middle. //
WITHOUT_CLASSIFICATION	// We can try to do a drop on instead. //
WITHOUT_CLASSIFICATION	// Set the bounds so that we re-check when we get near the other end. //
WITHOUT_CLASSIFICATION	// We are near the middle, so we'll start by trying to do a drop on. //
WITHOUT_CLASSIFICATION	// If we can do a drop on operation. //
WITHOUT_CLASSIFICATION	// Set the range so that we re-check when we get aren't in the middle. //
WITHOUT_CLASSIFICATION	// We can reset and try a drop insert instead. //
WITHOUT_CLASSIFICATION	// We'll always be wrong for these arguments, so don't bother re-checking. //
WITHOUT_CLASSIFICATION	// This will be the default return value. //
WITHOUT_CLASSIFICATION	// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //
WITHOUT_CLASSIFICATION	// If we can't determine the parent. //
WITHOUT_CLASSIFICATION	// Iterate over the children to find the owner. //
WITHOUT_CLASSIFICATION	// When we match the owner, we're done. //
WITHOUT_CLASSIFICATION	// Try to create a specific command based on the current desired operation. //
WITHOUT_CLASSIFICATION	// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //
WITHOUT_CLASSIFICATION	// Try again. //
WITHOUT_CLASSIFICATION	// We've switch the operation! //
WITHOUT_CLASSIFICATION	// We've switch the operation! //
WITHOUT_CLASSIFICATION	// We don't want to move insert an object before or after itself... //
WITHOUT_CLASSIFICATION	// If the dragged objects share a parent... //
WITHOUT_CLASSIFICATION	// Just remove the objects and add them. //
WITHOUT_CLASSIFICATION	// We don't want to copy insert an object before or after itself... //
WITHOUT_CLASSIFICATION	// Copy the collection //
WITHOUT_CLASSIFICATION	// And add the copy. //
WITHOUT_CLASSIFICATION	// if optimize // if collection
WITHOUT_CLASSIFICATION	// We don't want to insert an object before or after itself... //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //
WITHOUT_CLASSIFICATION	// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //
WITHOUT_CLASSIFICATION	// Add the collection //
WITHOUT_CLASSIFICATION	// This is the default return value. //
WITHOUT_CLASSIFICATION	// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //
WITHOUT_CLASSIFICATION	// Prepare the right type of operation. //
WITHOUT_CLASSIFICATION	// If we can't set the collection, try setting use the single value of the collection. //
WITHOUT_CLASSIFICATION	// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //
WITHOUT_CLASSIFICATION	// Reset as in the constructor. //
WITHOUT_CLASSIFICATION	// If the operation has changed significantly... //
WITHOUT_CLASSIFICATION	// Clean it up. //
WITHOUT_CLASSIFICATION	// Set the arguments again. //
WITHOUT_CLASSIFICATION	// Determine if the operation is executable. //
WITHOUT_CLASSIFICATION	// Just return the cached result. //
WITHOUT_CLASSIFICATION	// Only return the operation for an executable command. //
WITHOUT_CLASSIFICATION	// Thread.dumpStack();
WITHOUT_CLASSIFICATION	// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //
WITHOUT_CLASSIFICATION	// An extent allows anything to be added. //
WITHOUT_CLASSIFICATION	// Make sure each object conforms to the type of the feature. //
WITHOUT_CLASSIFICATION	// Record the position of the value in the owner list. //
WITHOUT_CLASSIFICATION	// Simply remove the object from the owner list. //
WITHOUT_CLASSIFICATION	// Insert the collection at the right place. //
WITHOUT_CLASSIFICATION	// We'd like the collection of replacements selected after this replace completes. //
WITHOUT_CLASSIFICATION	// Remove the collection of replacements. //
WITHOUT_CLASSIFICATION	// Add the value back in the right place. //
WITHOUT_CLASSIFICATION	// We'd like the replaced selected after this undo replace completes. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //
WITHOUT_CLASSIFICATION	// Thread.dumpStack();
WITHOUT_CLASSIFICATION	// Create a strict compound command to do a copy and then add the result //
WITHOUT_CLASSIFICATION	// Create a command to copy the clipboard. //
WITHOUT_CLASSIFICATION	// Create a proxy that will create an add command. //
WITHOUT_CLASSIFICATION	// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //
WITHOUT_CLASSIFICATION	// This will determine canExecute as efficiently as possible. //
WITHOUT_CLASSIFICATION	// This will actually execute the copy command in order to check if the add can execute. //
WITHOUT_CLASSIFICATION	// We need to check canExecute() here in case prepare() went down the "optimize" path. //
WITHOUT_CLASSIFICATION	// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //
WITHOUT_CLASSIFICATION	// If this owned object is one from the collection... //
WITHOUT_CLASSIFICATION	// Remove the object from the collection and add it to the identity list. //
WITHOUT_CLASSIFICATION	// Record the index. //
WITHOUT_CLASSIFICATION	// Record the index. //
WITHOUT_CLASSIFICATION	// Second pass: match by value equality. //
WITHOUT_CLASSIFICATION	// If this owned object is equal to one from the collection... //
WITHOUT_CLASSIFICATION	// Remove the object from the collection and add it to the equality list.  //
WITHOUT_CLASSIFICATION	// Merge the lists. //
WITHOUT_CLASSIFICATION	// Remove objects from the owner list by index, starting from the end. //
WITHOUT_CLASSIFICATION	// We'd like the owner selected after this remove completes. //
WITHOUT_CLASSIFICATION	// If either list is empty, the result is simply the other. //
WITHOUT_CLASSIFICATION	// Allocate list and array for objects and indices. //
WITHOUT_CLASSIFICATION	// Index counters into indices1, indices2, and indices.  //
WITHOUT_CLASSIFICATION	// Object iterators. //
WITHOUT_CLASSIFICATION	// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //
WITHOUT_CLASSIFICATION	// We'd like the collection of things added to be selected after this command completes. //
WITHOUT_CLASSIFICATION	// Create commands to create copies of the children. //
WITHOUT_CLASSIFICATION	// Thread.dumpStack();
WITHOUT_CLASSIFICATION	// Remove objects from the owner list by index, starting from the end. //
WITHOUT_CLASSIFICATION	// We'd like the owner selected after this remove completes. //
WITHOUT_CLASSIFICATION	// Create commands to create the copy object(s). //
WITHOUT_CLASSIFICATION	// Create an initialize copy command for each of the created objects. //
WITHOUT_CLASSIFICATION	// Record it for execution. //
WITHOUT_CLASSIFICATION	// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //
WITHOUT_CLASSIFICATION	// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //
WITHOUT_CLASSIFICATION	// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //
WITHOUT_CLASSIFICATION	// This will call prepare() which will partially execute the command. //
WITHOUT_CLASSIFICATION	// We need to check canExecute() in case optimize is true. //
WITHOUT_CLASSIFICATION	// Create a command to create a copy of the object. //
WITHOUT_CLASSIFICATION	// This handles IStructuredSelection. //
WITHOUT_CLASSIFICATION	// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());
WITHOUT_CLASSIFICATION	// If the owner parameter is set, we delegate to the owner's adapter //
WITHOUT_CLASSIFICATION	// If there is an adapter of the correct type... //
WITHOUT_CLASSIFICATION	// If command has no owner specified //
WITHOUT_CLASSIFICATION	// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //
WITHOUT_CLASSIFICATION	// If there is a column object, just convert it to a string. //
WITHOUT_CLASSIFICATION	// If there is an adapter of the correct type... //
WITHOUT_CLASSIFICATION	// If there is an adapter of the correct type... //
WITHOUT_CLASSIFICATION	// If there is an adapter of the correct type... //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// We will iterate over the whole collection, removing some as we go. //
WITHOUT_CLASSIFICATION	// Take the first object, and remove it. //
WITHOUT_CLASSIFICATION	// Determine the object's parent. //
WITHOUT_CLASSIFICATION	// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //
WITHOUT_CLASSIFICATION	// Get the next object and check if it has the same parent. //
WITHOUT_CLASSIFICATION	// Remove the object and add it as a sibling. //
WITHOUT_CLASSIFICATION	// We will now create a command with this implied parent //
WITHOUT_CLASSIFICATION	// The parent is null, which implies a top-level removal, so create a self-removing command. //
WITHOUT_CLASSIFICATION	// If no object is specified, but an existing sibling is, the object is // its parent. //
WITHOUT_CLASSIFICATION	// protected Object labelProvider;
WITHOUT_CLASSIFICATION	//return getDefaultValue(attribute.getEType());
WITHOUT_CLASSIFICATION	// If any children were added or removed, reset the indices.
WITHOUT_CLASSIFICATION	// Get the URI of the model file. //
WITHOUT_CLASSIFICATION	// isValidIANAEncoding(String):boolean
WITHOUT_CLASSIFICATION	// Wrap any new children and add them to the map. Remove each current child from the set of old children. //
WITHOUT_CLASSIFICATION	// Remove and dispose any wrappers for remaining old children. //
WITHOUT_CLASSIFICATION	// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //
WITHOUT_CLASSIFICATION	/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemLabelProvider. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemLabelProvider. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemFontProvider. //
WITHOUT_CLASSIFICATION	// No font is a good default. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemFontProvider. //
WITHOUT_CLASSIFICATION	// No color is a good default. //
WITHOUT_CLASSIFICATION	// No color is a good default. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemColorProvider. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemColorProvider. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemColorProvider. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemColorProvider. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	//public String getUpdateableText(Object object)
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();
WITHOUT_CLASSIFICATION	// Check that the value is type compatible with the entry feature. //
WITHOUT_CLASSIFICATION	// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;
WITHOUT_CLASSIFICATION	// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //
WITHOUT_CLASSIFICATION	// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //
WITHOUT_CLASSIFICATION	// Use an existing getReferenceValue() override. //
WITHOUT_CLASSIFICATION	// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //
WITHOUT_CLASSIFICATION	// Iterate over all the child references to factor each child to the right reference. //
WITHOUT_CLASSIFICATION	// If this object is compatible with this reference... //
WITHOUT_CLASSIFICATION	// Iterate over all the set feature to factor each child to the right reference. //
WITHOUT_CLASSIFICATION	// Build the collection of new child descriptors. //
WITHOUT_CLASSIFICATION	// Add child descriptors contributed by extenders. //
WITHOUT_CLASSIFICATION	// If a sibling has been specified, add the best index possible to each CommandParameter. //
WITHOUT_CLASSIFICATION	// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //
WITHOUT_CLASSIFICATION	// For each CommandParameter with a non-null, multi-valued structural feature... //
WITHOUT_CLASSIFICATION	// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //
WITHOUT_CLASSIFICATION	// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //
WITHOUT_CLASSIFICATION	// If the child feature follows the sibling feature, the child should be first in its feature. //
WITHOUT_CLASSIFICATION	// Subclasses may override to add descriptors.
WITHOUT_CLASSIFICATION	// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //
WITHOUT_CLASSIFICATION	// Iterator over all the child references to factor each child to the right reference. //
WITHOUT_CLASSIFICATION	// If it is a list type value... // 
WITHOUT_CLASSIFICATION	// If it is a list type value... // 
WITHOUT_CLASSIFICATION	// Is this object in this feature... //
WITHOUT_CLASSIFICATION	// Is this object in this feature... //
WITHOUT_CLASSIFICATION	// Add it to the list and remove it from the other list. //
WITHOUT_CLASSIFICATION	// If we have children to remove for this feature, create a command for it. //
WITHOUT_CLASSIFICATION	// It's just a single value //
WITHOUT_CLASSIFICATION	// Create a command to set this to null and remove the object from the other list. //
WITHOUT_CLASSIFICATION	// If all the objects are used up by the above, then we can't do the command. //
WITHOUT_CLASSIFICATION	// Correct the index, if necessary. //
WITHOUT_CLASSIFICATION	// Consume the rest of the appropriate children. //
WITHOUT_CLASSIFICATION	// Is this child in this feature... //
WITHOUT_CLASSIFICATION	// Create a command for this feature,  //
WITHOUT_CLASSIFICATION	// If all the objects aren't used up by the above, then we can't do the command. //
WITHOUT_CLASSIFICATION	// Compute the relative index as best as possible. //
WITHOUT_CLASSIFICATION	// Create a command for this feature, //
WITHOUT_CLASSIFICATION	// continue to next case
WITHOUT_CLASSIFICATION	// All this logic is so that we only create a list if the adapter is set to more than one target. //
WITHOUT_CLASSIFICATION	// Dispose the child wrappers. //
WITHOUT_CLASSIFICATION	// Ignore the unset notification for an isMany feature; the value is boolean in this case. //
WITHOUT_CLASSIFICATION	// No index specified when removing all elements. //
WITHOUT_CLASSIFICATION	// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //
WITHOUT_CLASSIFICATION	// Unwrap collection. //
WITHOUT_CLASSIFICATION	// If the first wrapped value is found... //
WITHOUT_CLASSIFICATION	// Allocate the new collection, and populate it up to this point. //
WITHOUT_CLASSIFICATION	// If a new collection was allocated, continue to populate it. //
WITHOUT_CLASSIFICATION	// Unwrap value. //
WITHOUT_CLASSIFICATION	// Wrappers from the old command parameter must be considered in order for cut and paste to work. //
WITHOUT_CLASSIFICATION	// If the adapter factory is composeable, we'll adapt using the root. //
WITHOUT_CLASSIFICATION	// Build list of wrapped children from the appropriate adapters. //
WITHOUT_CLASSIFICATION	// Add in additional wrappers to search. //
WITHOUT_CLASSIFICATION	/*   * Returns the help context id for this property.   */
WITHOUT_CLASSIFICATION	/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/
WITHOUT_CLASSIFICATION	// Does this part provide an editing domain? //
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	// There are attributes to handle.
WITHOUT_CLASSIFICATION	// This ensure that this package itself is traversed even if the reference type is EObject... //
WITHOUT_CLASSIFICATION	// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //
WITHOUT_CLASSIFICATION	// Is this a containment reference child? //
WITHOUT_CLASSIFICATION	// Is this the label feature? //
WITHOUT_CLASSIFICATION	// Or a feature map child? //
WITHOUT_CLASSIFICATION	// Don't include controlled children here, they'll show up under their container. //
WITHOUT_CLASSIFICATION	// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());
WITHOUT_CLASSIFICATION	// Overlay if the resource is the target for any controlled objects.  //
WITHOUT_CLASSIFICATION	// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:
WITHOUT_CLASSIFICATION	// TreeNode
WITHOUT_CLASSIFICATION	//TreeFactory
WITHOUT_CLASSIFICATION	//TreePackage
WITHOUT_CLASSIFICATION	//TreeFactoryImpl
WITHOUT_CLASSIFICATION	//TreeNodeImpl
WITHOUT_CLASSIFICATION	//TreePackageImpl
WITHOUT_CLASSIFICATION	/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/
WITHOUT_CLASSIFICATION	//TreeAdapterFactory
WITHOUT_CLASSIFICATION	//TreeSwitch
WITHOUT_CLASSIFICATION	// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //
WITHOUT_CLASSIFICATION	// If there is a new one... //
WITHOUT_CLASSIFICATION	// This guard is for extra security, but should not be necessary. //
WITHOUT_CLASSIFICATION	// Use up the command. // Note that notification will cause a new command to be created. //
WITHOUT_CLASSIFICATION	// We will only deal with structured selections. //
WITHOUT_CLASSIFICATION	// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?
WITHOUT_CLASSIFICATION	// If we have a good editing domain... //
WITHOUT_CLASSIFICATION	// Delegate the action for this object to the editing domain. //
WITHOUT_CLASSIFICATION	// We can enable the action as indicated by the command, // and we can set all the other values from the command. //
WITHOUT_CLASSIFICATION	// Nothing more to do and we don't want to do the default stuff below. //
WITHOUT_CLASSIFICATION	// We just can't do it. //
WITHOUT_CLASSIFICATION	// No point in keeping garbage. //
WITHOUT_CLASSIFICATION	// Show the colourless image. //
WITHOUT_CLASSIFICATION	// try to get editing domain from workbench part
WITHOUT_CLASSIFICATION	// only handle structured selections
WITHOUT_CLASSIFICATION	// convert the selection to a collection of the selected objects
WITHOUT_CLASSIFICATION	// if the editing domain wasn't given by the workbench part, try to get // it from the selection
WITHOUT_CLASSIFICATION	// if we found an editing domain, create command
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// use up the command
WITHOUT_CLASSIFICATION	// Add our standard marker. //
WITHOUT_CLASSIFICATION	// Add the edit menu actions. //
WITHOUT_CLASSIFICATION	// Add our other standard marker. //
WITHOUT_CLASSIFICATION	// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //
WITHOUT_CLASSIFICATION	// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //
WITHOUT_CLASSIFICATION	// grabHorizontal = true;
WITHOUT_CLASSIFICATION	// We use multi even for a single line because we want to respond to the enter key. //
WITHOUT_CLASSIFICATION	// event is null when choiceTableViewer is double clicked
WITHOUT_CLASSIFICATION	// event is null when featureTableViewer is double clicked 
WITHOUT_CLASSIFICATION	// In column 0, the drop-down is indented past the collapse/expand icon. //
WITHOUT_CLASSIFICATION	// dropDown.addListener(SWT.Paint, dropDownListener);
WITHOUT_CLASSIFICATION	// This should be consistent with paintControl(). // 
WITHOUT_CLASSIFICATION	// setEditor(null, null, -1);
WITHOUT_CLASSIFICATION	// Fill with background. //
WITHOUT_CLASSIFICATION	// Draw the icons. //
WITHOUT_CLASSIFICATION	// Draw the text. //
WITHOUT_CLASSIFICATION	// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);
WITHOUT_CLASSIFICATION	// Remember the requested operation.
WITHOUT_CLASSIFICATION	// Remember the requested operation.
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */
WITHOUT_CLASSIFICATION	// Draw background of right-side button. //
WITHOUT_CLASSIFICATION	// Draw down arrow, offset if dropped. //
WITHOUT_CLASSIFICATION	// Draw ellipses, offset if down. //
WITHOUT_CLASSIFICATION	// Draw outline. //
WITHOUT_CLASSIFICATION	// Draw 3D effect on right-side button. //
WITHOUT_CLASSIFICATION	// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //
WITHOUT_CLASSIFICATION	// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //
WITHOUT_CLASSIFICATION	// A command was created if the source was available early, and the // information used to create it was cached... //
WITHOUT_CLASSIFICATION	// Recreate the command. //
WITHOUT_CLASSIFICATION	// Otherwise, the source should be available now as event.data, and we // can create the command. //
WITHOUT_CLASSIFICATION	// If the command can execute... //
WITHOUT_CLASSIFICATION	// Execute it. //
WITHOUT_CLASSIFICATION	// Otherwise, let's call the whole thing off. //
WITHOUT_CLASSIFICATION	// Clean up the state. //
WITHOUT_CLASSIFICATION	// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.
WITHOUT_CLASSIFICATION	// Clear out any old information from a previous drag. //
WITHOUT_CLASSIFICATION	// Get the target object from the item widget and the mouse location in it. //
WITHOUT_CLASSIFICATION	// Determine if we can create a valid command at the current location. //
WITHOUT_CLASSIFICATION	// If we don't have a previous cached command... //
WITHOUT_CLASSIFICATION	// Remember the target; create the command and test if it is executable. //
WITHOUT_CLASSIFICATION	// Keep track of any changes to the command information.
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc) Method declared on Dialog.     */
WITHOUT_CLASSIFICATION	// create OK and Cancel buttons by default
WITHOUT_CLASSIFICATION	// create composite
WITHOUT_CLASSIFICATION	// generateColor();
WITHOUT_CLASSIFICATION	// }}
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Check if the cached command can provide DND feedback/revalidation. //
WITHOUT_CLASSIFICATION	// If so, revalidate the command. //
WITHOUT_CLASSIFICATION	// If not, dispose the current command and create a new one. //
WITHOUT_CLASSIFICATION	// If this command can provide detailed drag and drop feedback... //
WITHOUT_CLASSIFICATION	// Use it for the operation and drag under effect. //
WITHOUT_CLASSIFICATION	// There is no executable command, so we'd better nix the whole deal. //
WITHOUT_CLASSIFICATION	// Check whether the current data type can be transfered locally. //
WITHOUT_CLASSIFICATION	// Iterate over the data types to see if there is a data type that supports a local transfer. //
WITHOUT_CLASSIFICATION	// If the local transfer supports this data type, switch to that data type //
WITHOUT_CLASSIFICATION	// Transfer the data and, if non-null, extract it. //
WITHOUT_CLASSIFICATION	// Transfer the data and convert the structured selection to a collection of objects. //
WITHOUT_CLASSIFICATION	//do this here because setting the text will set enablement on the OK // button
WITHOUT_CLASSIFICATION	/* | GridData.GRAB_VERTICAL */
WITHOUT_CLASSIFICATION	// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292
WITHOUT_CLASSIFICATION	// If there was no old input, then we must be providing content for this part for the first time... //
WITHOUT_CLASSIFICATION	// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemLabelProvider. //
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemLabelProvider. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //
WITHOUT_CLASSIFICATION	// No image is a good default. //
WITHOUT_CLASSIFICATION	// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 
WITHOUT_CLASSIFICATION	// n2.isLabelUpdate()
WITHOUT_CLASSIFICATION	// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //
WITHOUT_CLASSIFICATION	// ???
WITHOUT_CLASSIFICATION	//    case Notification.TOUCH:
WITHOUT_CLASSIFICATION	// We ignore non-changes for now. //
WITHOUT_CLASSIFICATION	// fireLabelProviderChanged();
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	// Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	// Ignore any exceptions and assume the class isn't available.
WITHOUT_CLASSIFICATION	// Ignore any exceptions and assume the class isn't available.
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// If there is a column object, just convert it to a string. //
WITHOUT_CLASSIFICATION	// No font is a good default. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemFontProvider. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemFontProvider. //
WITHOUT_CLASSIFICATION	// No color is a good default. //
WITHOUT_CLASSIFICATION	// No color is a good default. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemColorProvider. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemColorProvider. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemColorProvider. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemColorProvider. //
WITHOUT_CLASSIFICATION	// The class is not available.
WITHOUT_CLASSIFICATION	// Nested GenAnnotations
WITHOUT_CLASSIFICATION	/*   * For debugging purposes.  May be removed in the future.   */
WITHOUT_CLASSIFICATION	// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //
WITHOUT_CLASSIFICATION	// Create resources for all the root EPackages. //
WITHOUT_CLASSIFICATION	// removing the first space
WITHOUT_CLASSIFICATION	// Subclasses may overwrite
WITHOUT_CLASSIFICATION	// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.
WITHOUT_CLASSIFICATION	// Initialize the GenModel with all the computed data. //
WITHOUT_CLASSIFICATION	// Restore all configured settings from the original. //
WITHOUT_CLASSIFICATION	// Handle application genmodel stub //
WITHOUT_CLASSIFICATION	// Determine which projects will need to be referenced. //
WITHOUT_CLASSIFICATION	// Create the model project. //
WITHOUT_CLASSIFICATION	// Add a dummy GenModel for referenced packages. //
WITHOUT_CLASSIFICATION	// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //
WITHOUT_CLASSIFICATION	// Walk the project looking for .java files to analyze. //
WITHOUT_CLASSIFICATION	// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //
WITHOUT_CLASSIFICATION	// Now we need to hook up opposites by finding the named feature in the type. //
WITHOUT_CLASSIFICATION	// Containers are transient by default unless explicitly annotated otherwise. //
WITHOUT_CLASSIFICATION	// Now we need to hook up keys by finding the named feature in the type. //
WITHOUT_CLASSIFICATION	// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //
WITHOUT_CLASSIFICATION	// Now we should sort. //
WITHOUT_CLASSIFICATION	// Find the fragment root so that we can generate to the right location (by default). //
WITHOUT_CLASSIFICATION	// Iterate over all projects to look at the manifests. //
WITHOUT_CLASSIFICATION	// Determine the required plugins. //
WITHOUT_CLASSIFICATION	// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //
WITHOUT_CLASSIFICATION	// Also add each required plugin for consideration in the loop. //
WITHOUT_CLASSIFICATION	// If it's a platform plugin URI, include it in the map. //
WITHOUT_CLASSIFICATION	// Keep only the plugins that have GenModels for consideration. //
WITHOUT_CLASSIFICATION	// Consider each GenModel location URI for each required plugin. //
WITHOUT_CLASSIFICATION	// Compute the closure. //
WITHOUT_CLASSIFICATION	// use no encoding
WITHOUT_CLASSIFICATION	// Walk the fields. //
WITHOUT_CLASSIFICATION	// Create the EPackage on demand. //
WITHOUT_CLASSIFICATION	// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //
WITHOUT_CLASSIFICATION	// Get the package name and see if there's an EPackage for it. //
WITHOUT_CLASSIFICATION	// If it's an interface, then it will be treated as an EClass //
WITHOUT_CLASSIFICATION	// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //
WITHOUT_CLASSIFICATION	// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //
WITHOUT_CLASSIFICATION	// Match them and accumulate the appropriate result. //
WITHOUT_CLASSIFICATION	// Walk the methods. //
WITHOUT_CLASSIFICATION	// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //
WITHOUT_CLASSIFICATION	// Otherwise it's treated as an EEnum //
WITHOUT_CLASSIFICATION	// Find Packages and Factories
WITHOUT_CLASSIFICATION	// It's definitely a package if it was declared as such. //
WITHOUT_CLASSIFICATION	// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //
WITHOUT_CLASSIFICATION	// This will catch inherited features, or additional things we don't want to worry about.
WITHOUT_CLASSIFICATION	// Check whether this has @model annotation contents. //
WITHOUT_CLASSIFICATION	// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //
WITHOUT_CLASSIFICATION	// Map to an EEnum.
WITHOUT_CLASSIFICATION	// The feature name is extracted lower cased. //
WITHOUT_CLASSIFICATION	// The name is extracted and lower cased. //
WITHOUT_CLASSIFICATION	// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //
WITHOUT_CLASSIFICATION	// Each token in exceptions will specify a data type for the corresponding exception. //
WITHOUT_CLASSIFICATION	// If we aren't doing an operation... //
WITHOUT_CLASSIFICATION	// We'll create one of these. //
WITHOUT_CLASSIFICATION	// If any of these attributes appear, this must be a reference. //
WITHOUT_CLASSIFICATION	// Set the EReference attributes. //
WITHOUT_CLASSIFICATION	// Defer the handling of the opposite. //
WITHOUT_CLASSIFICATION	// Set the visibility annotations for the EstructuralFeature. //
WITHOUT_CLASSIFICATION	// Set the EAttribute attributes. //
WITHOUT_CLASSIFICATION	// Handle the type, multiplicity and other ETypedElement attributes. //
WITHOUT_CLASSIFICATION	// Set the EStructuralFeature attributes. //
WITHOUT_CLASSIFICATION	// Process the annotations. //
WITHOUT_CLASSIFICATION	// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //
WITHOUT_CLASSIFICATION	// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //
WITHOUT_CLASSIFICATION	// Allow the value to be defined by an annotation or by the field's initializer //
WITHOUT_CLASSIFICATION	// Allow a distinct literal value to be provided, too. //
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Allow a mixed case version of the name to be provided. //
WITHOUT_CLASSIFICATION	// But, if name doesn't expand into field name, ignore it. //
WITHOUT_CLASSIFICATION	// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //
WITHOUT_CLASSIFICATION	// We want to resolve to this. //
WITHOUT_CLASSIFICATION	// Check if it is exactly the name of a type parameter that's in scope. //
WITHOUT_CLASSIFICATION	// Check if the name is qualified //
WITHOUT_CLASSIFICATION	// For arrays, consider the element type. //
WITHOUT_CLASSIFICATION	// Find an explicit import or the first wildcard import. //
WITHOUT_CLASSIFICATION	// Find the modeled package for the import and look up the name there. //
WITHOUT_CLASSIFICATION	// If we can't find it, try the simple name in the package... //
WITHOUT_CLASSIFICATION	// Find the modeled package for the name and look up the name there. //
WITHOUT_CLASSIFICATION	// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// See if we already have the EDataType. //
WITHOUT_CLASSIFICATION	// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //
WITHOUT_CLASSIFICATION	// If we don't have one yet, maybe it's one of the special types... //
WITHOUT_CLASSIFICATION	// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //
WITHOUT_CLASSIFICATION	// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //
WITHOUT_CLASSIFICATION	// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //
WITHOUT_CLASSIFICATION	// Make array names legal. //
WITHOUT_CLASSIFICATION	// Avoid classifier name collisions. //
WITHOUT_CLASSIFICATION	// For the model information. //
WITHOUT_CLASSIFICATION	// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //
WITHOUT_CLASSIFICATION	// The package is in a .cat file. //
WITHOUT_CLASSIFICATION	// The package not in a .cat file. //
WITHOUT_CLASSIFICATION	// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //
WITHOUT_CLASSIFICATION	// Get the parent object. //
WITHOUT_CLASSIFICATION	// Map to an EPackage. //
WITHOUT_CLASSIFICATION	// Add to package. //
WITHOUT_CLASSIFICATION	// Map to an EClass. //
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	// Map to an EDataType. //
WITHOUT_CLASSIFICATION	// Map to an EDataType. //
WITHOUT_CLASSIFICATION	// Map to an eClass. //
WITHOUT_CLASSIFICATION	// Map to an EOperation.
WITHOUT_CLASSIFICATION	// Add to an EClass //
WITHOUT_CLASSIFICATION	// Map to an EParameter as input parameter for operation. //
WITHOUT_CLASSIFICATION	// Do this first for better error message during setEParameterProperties. //
WITHOUT_CLASSIFICATION	// Map to EAttribute, or EEnumLiteral. //
WITHOUT_CLASSIFICATION	// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //
WITHOUT_CLASSIFICATION	// Convert to an EReference. //
WITHOUT_CLASSIFICATION	// map to EReference when is navigable //
WITHOUT_CLASSIFICATION	// eReference.setNavigable(roseNode.isNavigable());
WITHOUT_CLASSIFICATION	/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */
WITHOUT_CLASSIFICATION	// try to retrieve the fully qualified name of the specified type...
WITHOUT_CLASSIFICATION	// convert to dot-separated format if necessary...
WITHOUT_CLASSIFICATION	// remove garbage characters...
WITHOUT_CLASSIFICATION	// qualify type name if not already qualified...
WITHOUT_CLASSIFICATION	// default value //
WITHOUT_CLASSIFICATION	// Order first by number of features (descending) and then alphabetically (ascending) //
WITHOUT_CLASSIFICATION	// Temporary WAS/WSAD migration option. //
WITHOUT_CLASSIFICATION	// A container must be transient. //
WITHOUT_CLASSIFICATION	// setup attribute and parameter type //
WITHOUT_CLASSIFICATION	// Convert attributes of with EClass type to references. //
WITHOUT_CLASSIFICATION	// It was not found in the model class so check if primitive type. //
WITHOUT_CLASSIFICATION	// Convert reference to attribute if its type is an EDataType...  //
WITHOUT_CLASSIFICATION	// Store the base name for relative .cat file references. //
WITHOUT_CLASSIFICATION	// read mdl file...
WITHOUT_CLASSIFICATION	// special case, traverse cat file or mdl file //
WITHOUT_CLASSIFICATION	// file is a mdl file // // get model name
WITHOUT_CLASSIFICATION	// cat(unit) file referenced by mdl file
WITHOUT_CLASSIFICATION	// Process the children of the UnitTreeNode recursively. //
WITHOUT_CLASSIFICATION	//directoryName.length() > 0 && directoryName.charAt(0) == '$') 
WITHOUT_CLASSIFICATION	// map properties even when isTreeOnly == true
WITHOUT_CLASSIFICATION	//    top++;
WITHOUT_CLASSIFICATION	// 7 is the size of (object
WITHOUT_CLASSIFICATION	// 5 is the size of (list
WITHOUT_CLASSIFICATION	// 6 is the size of (value
WITHOUT_CLASSIFICATION	// size should be 1
WITHOUT_CLASSIFICATION	// could this happen?
WITHOUT_CLASSIFICATION	// Process the children of the UnitTreeNode recursively. //
WITHOUT_CLASSIFICATION	// Process the contents of the extent //
WITHOUT_CLASSIFICATION	// Load the Rose .mdl or .cat file, and create mappings for the objects. //
WITHOUT_CLASSIFICATION	// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //
WITHOUT_CLASSIFICATION	// Start second traverse to create mapping objects in memory. //
WITHOUT_CLASSIFICATION	// Only one open quote. //
WITHOUT_CLASSIFICATION	// This will not add duplicates. //
WITHOUT_CLASSIFICATION	// No additional features // MappingStrategy
WITHOUT_CLASSIFICATION	//MappingPackage
WITHOUT_CLASSIFICATION	// ComplexTypeConverter
WITHOUT_CLASSIFICATION	// No additional features // TypeConverter
WITHOUT_CLASSIFICATION	// MappingRoot
WITHOUT_CLASSIFICATION	// FunctionNamePair
WITHOUT_CLASSIFICATION	// MappingHelper
WITHOUT_CLASSIFICATION	//MappingFactory
WITHOUT_CLASSIFICATION	// FunctionPair
WITHOUT_CLASSIFICATION	//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),
WITHOUT_CLASSIFICATION	//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),
WITHOUT_CLASSIFICATION	// This will deal with all the subcommands to modifying the root mapping tree. //
WITHOUT_CLASSIFICATION	// For each mapping being removed... //
WITHOUT_CLASSIFICATION	// Make sure the back pointers to this mapping from the mapped objects is set. //
WITHOUT_CLASSIFICATION	//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));
WITHOUT_CLASSIFICATION	// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //
WITHOUT_CLASSIFICATION	// Do we also have some non-input objects to copy? //
WITHOUT_CLASSIFICATION	// Just remember it; it's encoded later during execution, which is more efficient. //
WITHOUT_CLASSIFICATION	// Do the encoding. //
WITHOUT_CLASSIFICATION	// Record the records for the executed commands on the stack. //
WITHOUT_CLASSIFICATION	// If there is more than one exact match, we must get an index number; //
WITHOUT_CLASSIFICATION	// Iterate over the whole tree to do this. //
WITHOUT_CLASSIFICATION	//Resource resource = EcoreUtil.getURI(refObject).; FIX:::
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// Make sure the back pointers to this mapping from the mapped objects is set. //
WITHOUT_CLASSIFICATION	// Iterate over the whole tree to do this. //
WITHOUT_CLASSIFICATION	// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //
WITHOUT_CLASSIFICATION	// For each mapping being added... //
WITHOUT_CLASSIFICATION	// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //
WITHOUT_CLASSIFICATION	// If there are siblings that need to be reparented. //
WITHOUT_CLASSIFICATION	// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //
WITHOUT_CLASSIFICATION	//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));
WITHOUT_CLASSIFICATION	// Create commands to do mapping.getNested().addAll(siblingsToReparent). //
WITHOUT_CLASSIFICATION	// return false if iteration should continue.
WITHOUT_CLASSIFICATION	// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)
WITHOUT_CLASSIFICATION	//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));
WITHOUT_CLASSIFICATION	// Get the corresponding type. //
WITHOUT_CLASSIFICATION	// Create the copy from this corresponding type. //
WITHOUT_CLASSIFICATION	// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //
WITHOUT_CLASSIFICATION	// Type matching never matches inputs that are already mapped
WITHOUT_CLASSIFICATION	//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));
WITHOUT_CLASSIFICATION	// Copy the children references  //
WITHOUT_CLASSIFICATION	// this will create the mapping as well
WITHOUT_CLASSIFICATION	// Copy the name //
WITHOUT_CLASSIFICATION	// Copy the type //
WITHOUT_CLASSIFICATION	// We have done our preparation. Now ask the super to validate. //
WITHOUT_CLASSIFICATION	// Remove all the mappings from the root. //
WITHOUT_CLASSIFICATION	//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());
WITHOUT_CLASSIFICATION	// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //
WITHOUT_CLASSIFICATION	//domain.getMappingRoot().removeMapping(newMapping);
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// If eCore, return the ENamedElement name //
WITHOUT_CLASSIFICATION	// If there is an adapter of the correct type, return the item label //
WITHOUT_CLASSIFICATION	// If eCore, set the ENamedElement name //
WITHOUT_CLASSIFICATION	// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //
WITHOUT_CLASSIFICATION	// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //
WITHOUT_CLASSIFICATION	// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //
WITHOUT_CLASSIFICATION	// remove all sourceSeparator characters
WITHOUT_CLASSIFICATION	// sourceSeparator == LABEL_NO_SEPARATOR
WITHOUT_CLASSIFICATION	// add a targetSeparator in front of every upper case character
WITHOUT_CLASSIFICATION	// type-mappings
WITHOUT_CLASSIFICATION	// top-label-separator
WITHOUT_CLASSIFICATION	// bottom-label-separator
WITHOUT_CLASSIFICATION	// top-label-case
WITHOUT_CLASSIFICATION	// bottom-label-case
WITHOUT_CLASSIFICATION	// top-label-forms
WITHOUT_CLASSIFICATION	// bottom-label-forms
WITHOUT_CLASSIFICATION	//if // for // for
WITHOUT_CLASSIFICATION	/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */
WITHOUT_CLASSIFICATION	//Ecore2EcorePackage
WITHOUT_CLASSIFICATION	// Ecore2EcoreMappingRoot
WITHOUT_CLASSIFICATION	//Ecore2EcoreFactory
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	// Open an editor on the new file. //
WITHOUT_CLASSIFICATION	// Remember the file. //
WITHOUT_CLASSIFICATION	// Do the work within an operation. //
WITHOUT_CLASSIFICATION	// Create a resource set //
WITHOUT_CLASSIFICATION	// Get the URI of the model file. //
WITHOUT_CLASSIFICATION	// Create a resource for this file. //
WITHOUT_CLASSIFICATION	// Add the initial model object to the contents. //
WITHOUT_CLASSIFICATION	// Save the contents of the resource to the file system. //
WITHOUT_CLASSIFICATION	// Select the new file resource in the current view. //
WITHOUT_CLASSIFICATION	// Determine the values to be added and add them at the right position. //
WITHOUT_CLASSIFICATION	//Ecore2EcorePackageImpl
WITHOUT_CLASSIFICATION	//Ecore2EcoreFactoryImpl
WITHOUT_CLASSIFICATION	//Ecore2EcoreMappingRootImpl
WITHOUT_CLASSIFICATION	//Ecore2EcoreResourceFactoryImpl
WITHOUT_CLASSIFICATION	//Ecore2EcoreResourceFactoryImpl
WITHOUT_CLASSIFICATION	//Ecore2EcoreAdapterFactory
WITHOUT_CLASSIFICATION	//Ecore2EcoreSwitch
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ 
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	// Remember the file. //
WITHOUT_CLASSIFICATION	// Do the work within an operation. //
WITHOUT_CLASSIFICATION	// Create a resource set //
WITHOUT_CLASSIFICATION	// Create a page, set the title, and the initial model file name. //
WITHOUT_CLASSIFICATION	// Try and get the resource selection to determine a current directory for the file dialog. //
WITHOUT_CLASSIFICATION	// Get the resource... //
WITHOUT_CLASSIFICATION	// Get the resource parent, if its a file. //
WITHOUT_CLASSIFICATION	// This gives us a directory... //
WITHOUT_CLASSIFICATION	// Set this for the container. //
WITHOUT_CLASSIFICATION	// Make up a unique new name here. //
WITHOUT_CLASSIFICATION	// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //
WITHOUT_CLASSIFICATION	//Ecore2XMLPackage
WITHOUT_CLASSIFICATION	//Ecore2XMLFactory
WITHOUT_CLASSIFICATION	// XMLInfo
WITHOUT_CLASSIFICATION	// XMLMap
WITHOUT_CLASSIFICATION	// missing attribute
WITHOUT_CLASSIFICATION	// invalid element
WITHOUT_CLASSIFICATION	//XMLMapImpl
WITHOUT_CLASSIFICATION	//ENamedElementToXMLInfoMapEntryImpl
WITHOUT_CLASSIFICATION	//Ecore2XMLFactoryImpl
WITHOUT_CLASSIFICATION	//Ecore2XMLPackageImpl
WITHOUT_CLASSIFICATION	//XMLInfoImpl
WITHOUT_CLASSIFICATION	// Switch to the new selection provider. //
WITHOUT_CLASSIFICATION	// Fake a selection changed event to update the menus. //
WITHOUT_CLASSIFICATION	// Open an editor on the new file. //
WITHOUT_CLASSIFICATION	// Add the initial model object to the contents. //
WITHOUT_CLASSIFICATION	// Save the contents of the resource to the file system. //
WITHOUT_CLASSIFICATION	// Select the new file resource in the current view. //
WITHOUT_CLASSIFICATION	// Try and get the resource selection to determine a current directory for the file dialog. //
WITHOUT_CLASSIFICATION	// Get the resource... //
WITHOUT_CLASSIFICATION	// Get the resource parent, if its a file. //
WITHOUT_CLASSIFICATION	// This gives us a directory... //
WITHOUT_CLASSIFICATION	// Set this for the container. //
WITHOUT_CLASSIFICATION	// Force an update because Eclipse hides empty menus now. //
WITHOUT_CLASSIFICATION	// Remove any menu items for old selection. //
WITHOUT_CLASSIFICATION	// Query the new selection for appropriate new child/sibling descriptors //
WITHOUT_CLASSIFICATION	// Initialize all the fields from the command parameter. //
WITHOUT_CLASSIFICATION	// Initialize all the fields from the command parameter. //
WITHOUT_CLASSIFICATION	// Initialize all the fields from the command parameter. //
WITHOUT_CLASSIFICATION	// Initialize all the fields from the command parameter. //
WITHOUT_CLASSIFICATION	// Initialize all the fields from the command parameter. //
WITHOUT_CLASSIFICATION	// If the attribute is set, record it's old value. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Create the copy //
WITHOUT_CLASSIFICATION	// EATM Leave this disabled for now. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Set the range so that we re-check when we get into the other half. //
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// If the location indicates after, add one more. //
WITHOUT_CLASSIFICATION	// Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	// Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	// Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	// Try again. //
WITHOUT_CLASSIFICATION	// This is the name of the model. //
WITHOUT_CLASSIFICATION	// Create move commands for all the objects in the collection. //
WITHOUT_CLASSIFICATION	// Apply a redirection pattern, if specified. //
WITHOUT_CLASSIFICATION	// Apply a redirection pattern, if specified. //
WITHOUT_CLASSIFICATION	// Thread.dumpStack();
WITHOUT_CLASSIFICATION	// Apply a redirection pattern, if specified. //
WITHOUT_CLASSIFICATION	// Simply remove the object from the owner list. //
WITHOUT_CLASSIFICATION	// Insert the collection at the right place. //
WITHOUT_CLASSIFICATION	// We'd like the collection of replacements selected after this replace completes. //
WITHOUT_CLASSIFICATION	/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */
WITHOUT_CLASSIFICATION	/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */
WITHOUT_CLASSIFICATION	// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //
WITHOUT_CLASSIFICATION	// Invoke generator adapters for each object. //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //
WITHOUT_CLASSIFICATION	// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.
WITHOUT_CLASSIFICATION	// Add any remaining object-index pairs from either set. //
WITHOUT_CLASSIFICATION	// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object
WITHOUT_CLASSIFICATION	// This guards the switch. //
WITHOUT_CLASSIFICATION	// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// Make up a unique new name here. // //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //
WITHOUT_CLASSIFICATION	// These will be the children belonging to this feature. //
WITHOUT_CLASSIFICATION	// These will be the children belonging to this feature. //
WITHOUT_CLASSIFICATION	// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */
WITHOUT_CLASSIFICATION	// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)
WITHOUT_CLASSIFICATION	// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */
WITHOUT_CLASSIFICATION	/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */
WITHOUT_CLASSIFICATION	/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Attribute
WITHOUT_CLASSIFICATION	// If the workbench part changes... //
WITHOUT_CLASSIFICATION	// Discard the old editing domain. //
WITHOUT_CLASSIFICATION	// Convert the selection to a collection of the selected objects. //
WITHOUT_CLASSIFICATION	// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName
WITHOUT_CLASSIFICATION	// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //
WITHOUT_CLASSIFICATION	// this returns either "EAttribute" or "EReference"
WITHOUT_CLASSIFICATION	// this guard is for extra security, but should not be necessary
WITHOUT_CLASSIFICATION	// // EMF.Edit generation //
WITHOUT_CLASSIFICATION	// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //
WITHOUT_CLASSIFICATION	//  Remove any non-Java dependencies from being added. //
WITHOUT_CLASSIFICATION	// Get extra icon and bounds for first column of ExtendedTableTreeItem. //
WITHOUT_CLASSIFICATION	/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */
WITHOUT_CLASSIFICATION	// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //
WITHOUT_CLASSIFICATION	// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //
WITHOUT_CLASSIFICATION	// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.
WITHOUT_CLASSIFICATION	// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
WITHOUT_CLASSIFICATION	// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
WITHOUT_CLASSIFICATION	// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc) Method declared on Dialog.     */
WITHOUT_CLASSIFICATION	// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
WITHOUT_CLASSIFICATION	/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Determine the required plugins. //
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Include each required plugin of the starting project and the exported ones of all the required projects. //
WITHOUT_CLASSIFICATION	// Register package validator
WITHOUT_CLASSIFICATION	// Determine the inverse map from plugin IDs to their registered GenModel locations. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Walk the fields. //
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// We will create an EAttribute, EReference, or an EOperation. //
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// The method is not a structural feature, so it's modeled as an operation. //
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Create annotations // http://www.eclipse.org/emf/2002/Ecore
WITHOUT_CLASSIFICATION	// Don't overwrite exising file
WITHOUT_CLASSIFICATION	// Don't overwrite exising file
WITHOUT_CLASSIFICATION	// Look through the imports of the containing compilation unit. //
WITHOUT_CLASSIFICATION	// Use an alternate if we can't write to this one. //
WITHOUT_CLASSIFICATION	// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //
WITHOUT_CLASSIFICATION	//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes
WITHOUT_CLASSIFICATION	// Map to an EClass. //
WITHOUT_CLASSIFICATION	// Map to an EClass. //
WITHOUT_CLASSIFICATION	//FB TBD different objects for ecore model!
WITHOUT_CLASSIFICATION	//FB TBD different objects for ecore model!
WITHOUT_CLASSIFICATION	// Map to an eClass. //
WITHOUT_CLASSIFICATION	// generateColor();
WITHOUT_CLASSIFICATION	// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //
WITHOUT_CLASSIFICATION	// Strip off the array indices if any. //
WITHOUT_CLASSIFICATION	// process eStructuralFeatures for association end(Role) //
WITHOUT_CLASSIFICATION	// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.
WITHOUT_CLASSIFICATION	// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.
WITHOUT_CLASSIFICATION	// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //
WITHOUT_CLASSIFICATION	// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //
WITHOUT_CLASSIFICATION	// starting traverse file and build unit tree and table info
WITHOUT_CLASSIFICATION	/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/
WITHOUT_CLASSIFICATION	// Process the children of the UnitTreeNode recursively. //
WITHOUT_CLASSIFICATION	// If the flag will straddle two fields, bump it to the next one. //
WITHOUT_CLASSIFICATION	//************************************************************************ //*    class RoseToken                                                   * //************************************************************************
WITHOUT_CLASSIFICATION	// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //
WITHOUT_CLASSIFICATION	// This will deal with all the subcommands to modifying the root mapping tree. //
WITHOUT_CLASSIFICATION	// Like isStringType(), but still returns true even if multiplicity-many. //
WITHOUT_CLASSIFICATION	// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));
WITHOUT_CLASSIFICATION	// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //
WITHOUT_CLASSIFICATION	// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //
WITHOUT_CLASSIFICATION	//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));
WITHOUT_CLASSIFICATION	// Suppress default constructor for non-instantiability.
WITHOUT_CLASSIFICATION	// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //
WITHOUT_CLASSIFICATION	// See java.lang.Class.getName() javadoc for explanation of array encoding.
WITHOUT_CLASSIFICATION	// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //
WITHOUT_CLASSIFICATION	// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //
WITHOUT_CLASSIFICATION	// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //
WITHOUT_CLASSIFICATION	//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat
WITHOUT_CLASSIFICATION	// Ignore this soft dependency when it's not satisfied.
WITHOUT_CLASSIFICATION	// If it's the selection viewer, then we want it to select the same selection as this selection. //
WITHOUT_CLASSIFICATION	// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //
WITHOUT_CLASSIFICATION	//MappingPackageImpl
WITHOUT_CLASSIFICATION	// Iterate over the mappings in the tree. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }
WITHOUT_CLASSIFICATION	// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //
WITHOUT_CLASSIFICATION	// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //
WITHOUT_CLASSIFICATION	// Ensure that this is a touch notification so to resource aren't marked as dirty. //
WITHOUT_CLASSIFICATION	// Force the project to be setup properly. //
WITHOUT_CLASSIFICATION	/* EATM getDecoratedAdapterFactory().*/
WITHOUT_CLASSIFICATION	// This case happens when the IDE is brought up with the editor already open //
WITHOUT_CLASSIFICATION	// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// while
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// the first hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	// the first hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	// the second hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	// initialize the above 3 arrays
WITHOUT_CLASSIFICATION	// if it's not an ASCII character, break here, and use UTF-8 encoding
WITHOUT_CLASSIFICATION	// get UTF-8 bytes for the remaining sub-string
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();
WITHOUT_CLASSIFICATION	// Try to select the affected objects. //
WITHOUT_CLASSIFICATION	// this should never happen
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// && commandParameter instanceof MappingCommandParameter)
WITHOUT_CLASSIFICATION	// Creates the model from the editor input //
WITHOUT_CLASSIFICATION	// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;
WITHOUT_CLASSIFICATION	// Only creates the other pages if there is something that can be edited //
WITHOUT_CLASSIFICATION	// Only creates the other pages if there is something that can be edited //
WITHOUT_CLASSIFICATION	//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());
WITHOUT_CLASSIFICATION	// The content outline is just a tree. //
WITHOUT_CLASSIFICATION	// Set up the tree viewer. //
WITHOUT_CLASSIFICATION	// Select the root object in the view. //
WITHOUT_CLASSIFICATION	// This ensures that we handle selections correctly. //
WITHOUT_CLASSIFICATION	// Get the first selected element. //
WITHOUT_CLASSIFICATION	// Do the work within an operation because this is a long running activity that modifies the workbench. //
WITHOUT_CLASSIFICATION	// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    
WITHOUT_CLASSIFICATION	// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());
WITHOUT_CLASSIFICATION	// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	//)
WITHOUT_CLASSIFICATION	//)
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	// // Constructors //
WITHOUT_CLASSIFICATION	// // Constructors //
WITHOUT_CLASSIFICATION	//TestCase/isSetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	// Avoid unnecessary out.write("") statements...
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //
DESIGN	// I don't know if we should be run this deferred  // because we might have to give the editor a chance to process the viewer update events  // and hence to update the views first. //  //
DESIGN	//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));
DESIGN	//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));
DESIGN	//DMS this doesn't really produce nice output. //
DESIGN	// TODO factor up into GenBaseImpl? //
DESIGN	// TODO factor up into GenBaseImpl //
DESIGN	// //TBD rethink where exactly some of the following methods belong (GenModel or GenPackage) //
DESIGN	// TODO factor up into GenBaseImpl? //
DESIGN	// TODO deprecate (since no longer used by getEditPluginClass(), getEditorPluginClass(), getTestSuiteClass()) //
DESIGN	// TODO deprecate (since getPluginClass() is no longer called) //
DESIGN	// Do nothing for now, and avoid propagating the exception.   // How should builders handle cancel?
DESIGN	// if there are multiple variables in declaration,  // separate this variable fragment into a separate declaration    
DESIGN	// if there are multiple variables in declaration,  // separate this variable fragment into a separate declaration
DESIGN	// if there are multiple variables in declaration,  // separate this variable fragment into a separate declaration
DESIGN	// Only file-scheme URIs will be re-encoded. If a URI was decoded in the workaround // above, and Platform.resolve() didn't return a file-scheme URI, then this will return // an decoded URI. //
DESIGN	// If the delegate URI can be handled as a file,  // we'll hope that renaming it will be really efficient. //
DESIGN	// TODO // This assumes we only get a SET notification, which isn't a good assumption. //
DESIGN	// Ensure that this race condition is thread safe; it doesn't matter who wins the race. //
DESIGN	// TODO // I'm concerned that folders will often return 401 or even 403. // So should we consider something to exist even though access if unauthorized or forbidden? //
DESIGN	//REVISIT: do we really need to support block names as in Unicode 3.1 //         or we can just create all the names in IsBLOCKNAME format (XML Schema REC)? //
DESIGN	// This runs the operation, and shows progress. // (It appears to be a bad thing to fork this onto another thread.) //
DESIGN	// TODO This is really quite attrocious since there is code that will assume an iterator that returns strings!
DESIGN	// TODO This is really quite attrocious since there is code that will assume an iterator that returns strings!
DESIGN	// EATM Call the deprecated method which does the same thing  // but might have an override in older code.
DESIGN	// Per Schema 1.0 it is not clear if the result returned should be a valid URI.  // For the future if we plant to support IRIs then it is better not to massage // the initialValue.  // We should thought consider where would be the best way to validate anyURI values -- EL
DESIGN	// Note: Registry based authority is being removed from a // new spec for URI which would obsolete RFC 2396. If the // spec is added to XML errata, processing of reg_name // needs to be removed. - mrglavas.
DESIGN	//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));
DESIGN	//DMS  Do a better job with specific exceptions? Just use chained RuntimeExceptions?
DESIGN	//DMS should we let this exception out?
DESIGN	//DMS should we let this exception out?
DESIGN	//DMS should we let this exception out?
DESIGN	//DMS factor this into a method? Use a non-static subclass? 
DESIGN	// This functionality should eventually go away, as it is replaced by model exporters. // We'll just delegate to the deprecated GenPackage method. The monitor isn't used, so we won't pass it. //
DESIGN	//DMS handle this well.
DESIGN	// Unused?
DESIGN	// Unused?
DESIGN	//FB TBD can we come up with a better algorithm for choosing the default label feature?
DESIGN	//TBD return (user selected subset?) of referenced packages that contain super classes of classes in this package.
DESIGN	// TODO Hack that should be removed.
DESIGN	// TODO REMOVE THIS BOGUS EMPTY LINE
DESIGN	// TODO fix the space above
DESIGN	// call workaround
DESIGN	// this is a fall-back, however, this should never be called
DESIGN	// call workaround
DESIGN	// call the workaround
DESIGN	// TODO // Specialize this to return a resource locator for messages specific to this validator. // Ensure that you remove @generated or mark it @generated NOT
DESIGN	// EATM This might be better written as a single loop for the EObject case? //
DESIGN	// The eAnnotations and eGenericType are possible containment references.  // We'll move them instead of copying //
DESIGN	// EATM Kind of hacky.
DESIGN	// EATM Demand create metadata; needs to depend on processing mode...
DESIGN	// HACK: reading encoding
DESIGN	// temporary structure to hold node's attributes + namespaces in scope
DESIGN	// EATM this would be wrong.
DESIGN	// Bubble sort // Why? -- In many cases, //         this.ranges has few elements.
DESIGN	// REVISIT: Remove this code.
DESIGN	// REVISIT: Remove this code. // Store port value as string instead of integer.
DESIGN	// Note: Registry based authority is being removed from a // new spec for URI which would obsolete RFC 2396. If the // spec is added to XML errata, processing of reg_name // needs to be removed. - mrglavas.
DESIGN	// TODO // This is faster than many charAt() calls. //
DESIGN	// REVISIT: Remove this code.
DESIGN	// REVISIT: Remove this code. // Store port value as string instead of integer.
DESIGN	// This is copied from ItemProviderAdapterFactory. //
DESIGN	// This is a kludge to deal with enumerators, which crash the doSwitch. //
DESIGN	// This is a kludge to deal with enumerators, which crash the doSwitch. //
DESIGN	// This runs the operation, and shows progress. // (It appears to be a bad thing to fork this onto another thread.) //
DESIGN	// The label is not used. //
DESIGN	// Motif kludge: we would get something random instead of null. //
DESIGN	// TODO handle class cast exception better.
DESIGN	// TODO So what should be the eType be now? //
DESIGN	// Because of the old factoring approach in the create method,  // it might be the case that the state of the old value has changed by the time we get here, // and in that case, we don't want to duplicate the removals in this code. //
DESIGN	//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));
DESIGN	//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));
DESIGN	//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));
DESIGN	//DMS What if Eclipse is running, but an invalid facade has been specified?  We still should format code, use encoding,...
DESIGN	// Note that the way they are sorted, the values of index[i++] always increase, // so the objects are added from right to left in the list. // // EATM  TODO // // We could make this more efficient by grouping the adds when indices increment by one, // so that a single grouped notification would result. //
DESIGN	// This is a big festering hack to make the images the right size from the start. //
DESIGN	// Assume that it's an attribute for now. // It will/could become a reference if the type resolves to an EClass. //
DESIGN	// TODO factor up into GenBaseImpl //
DESIGN	// Second alternative should be getModelProject()?
WITHOUT_CLASSIFICATION	// MUST do this for background to show up.
WITHOUT_CLASSIFICATION	// XmlElement.printNode(item.getRoot(), "");
WITHOUT_CLASSIFICATION	// private MainInterface mainInterface;
WITHOUT_CLASSIFICATION	// retrieve list of all group members
WITHOUT_CLASSIFICATION	// example configuration (tree.xml): // // <filter description="gnome" enabled="true"> // <rules condition="matchany"> // <criteria criteria="contains" headerfield="To or Cc" pattern="gnome" type="To // or Cc"></criteria> // </rules> // <actionlist> // <action uid="120" type="Move Message"></action> // </actionlist> // </filter> //
WITHOUT_CLASSIFICATION	// if not specified return empty iterator
WITHOUT_CLASSIFICATION	// add all suffixes
WITHOUT_CLASSIFICATION	// list of prefixes
WITHOUT_CLASSIFICATION	// email addresses and phone numbers
WITHOUT_CLASSIFICATION	// ensure that we are currently in the contact component
WITHOUT_CLASSIFICATION	//	public String marshall(IStructureType type); //	public IStructureType unmarshall(String xmlString);
WITHOUT_CLASSIFICATION	/*   * public FilterCriteria getCriteria(int index) { return (FilterCriteria)   * list.get(index); }   */
WITHOUT_CLASSIFICATION	// passive: if not initialized do it now
WITHOUT_CLASSIFICATION	// passive: if not initialized do it now
WITHOUT_CLASSIFICATION	// still not ready, exit!
WITHOUT_CLASSIFICATION	// still not ready, exit!
WITHOUT_CLASSIFICATION	/*         * wait for stream threads to die         *          */
WITHOUT_CLASSIFICATION	// Set text, possibly with a mnemonic if defined using &
WITHOUT_CLASSIFICATION	// Set text, possibly with a mnemonic if defined using &
WITHOUT_CLASSIFICATION	// update table
WITHOUT_CLASSIFICATION	// set display text - possible with a mnemonic defined using &
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// close DB
WITHOUT_CLASSIFICATION	// get source reference
WITHOUT_CLASSIFICATION	// score message
WITHOUT_CLASSIFICATION	// if message is spam
WITHOUT_CLASSIFICATION	// mark message as spam
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// !!! Size = 12 // create filter configuration // -> check if <Subject> <contains> pattern <test>
WITHOUT_CLASSIFICATION	/*		 * xp[0] = x + 6; xp[1] = x + 12; xp[2] = x; yp[0] = y - (c.getHeight() /		 * 4); yp[1] = y + (c.getHeight() / 4); yp[2] = y + (c.getHeight() / 4);		 * 		 * g2.setColor(Color.white); g2.drawLine(xp[0], yp[0], xp[1], yp[1]);		 * g2.drawLine(xp[1], yp[1], xp[2], yp[2]); g2.setColor(Color.gray);		 * g2.drawLine(xp[2], yp[2], xp[0], yp[0]);		 */
WITHOUT_CLASSIFICATION	/*		 * l_year = new JLabel(); p1.add(l_year);		 */
WITHOUT_CLASSIFICATION	/*		 * JPanel p2 = new JPanel(); p2.setLayout(new		 * FlowLayout(FlowLayout.LEFT)); top.add("East", p2);		 * 		 * b_lyear = new JButton("<"); b_lyear.addActionListener( this );		 * //b_lyear.setMargin(KiwiUtils.emptyInsets);		 * b_lyear.setFocusPainted(false); b_lyear.setOpaque(false);		 * //b_lyear.addActionListener(this); p2.add(b_lyear);		 * 		 * l_year = new JLabel(); p2.add(l_year);		 * 		 * b_ryear = new JButton(">"); b_ryear.addActionListener( this );		 * //b_ryear.setMargin(KiwiUtils.emptyInsets);		 * b_ryear.setFocusPainted(false); b_ryear.setOpaque(false);		 * //b_ryear.addActionListener(this); p2.add(b_ryear);		 */
WITHOUT_CLASSIFICATION	// gc.draw3DRect(xp, yp, cellSize, cellSize, true); // if the cell is selected, fill it with the highlight color
WITHOUT_CLASSIFICATION	// apply transparent icon
WITHOUT_CLASSIFICATION	// search for mnemonic
WITHOUT_CLASSIFICATION	// mnemonic found // ...and not at the end of the string (which doesn't make sence)
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	// super(str); // set menu text incl. mnemonic if specified
WITHOUT_CLASSIFICATION	// icon (we can't use the setIcon-method this time, as it relies on the border being set)
WITHOUT_CLASSIFICATION	// Changing the Divider Border Visibility *********************************
WITHOUT_CLASSIFICATION	//if we stopped at line break, increase array index pointer
WITHOUT_CLASSIFICATION	// look and feel
WITHOUT_CLASSIFICATION	// look and feel
WITHOUT_CLASSIFICATION	// remember if Look And Feel has been changed
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// theme selection changed
WITHOUT_CLASSIFICATION	// Init PGP
WITHOUT_CLASSIFICATION	// get notified if search result arrived, to update view
WITHOUT_CLASSIFICATION	// use the collapse/expand icons from the JTree UI
WITHOUT_CLASSIFICATION	// use the collapse/expand icons from the JTree UI
WITHOUT_CLASSIFICATION	// if the collapsible is collapsed, we do not want its border to be // painted.
WITHOUT_CLASSIFICATION	//			g.setColor(borderColor2); //			g.drawLine(x, y + height - 1, x + width, y + height - 1);
WITHOUT_CLASSIFICATION	//		JScrollPane scrollPane = new JScrollPane(tree); //		scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED); //		 //		add(scrollPane, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	// Init Plugins
WITHOUT_CLASSIFICATION	//		titlebar.setMidColor(INACTIVE_MID_COLOR); //		titlebar.setFillColor(INACTIVE_FILL_COLOR); // //		titlebar.setTitleColor(INACTIVE_LABEL_COLOR, INACTIVE_MID_COLOR, false);
WITHOUT_CLASSIFICATION	// contentPanel.setBorder(new LineBorder(ACTIVE_BORDER_COLOR, 1));
WITHOUT_CLASSIFICATION	// setBorder(BorderFactory.createEmptyBorder(2, 5, 3, 0)); //setBorder(BorderFactory.createEmptyBorder(2, 2, 2, 2));
WITHOUT_CLASSIFICATION	// builder2.addFixedNarrow((JButton) leftButtonVector.get(i)); // builder2.addStrut(Sizes.pixel(2));
WITHOUT_CLASSIFICATION	// GradientPaint painter = new GradientPaint(0, 0, midColor.brighter(), // 0, 5, midColor); // g2.setPaint(painter); //		 // g2.fillRect(0,0,w,5); //		 // new GradientPaint(0, h-1, midColor, 0, h-1-5, Color.red); // g2.setPaint(painter); //		 // g2.fillRect(0,h-5,w,5);
WITHOUT_CLASSIFICATION	// GeneralPath path = generatePath(h, w); // g2.setColor(fillColor); // g2.fill(path); // // path = generateTopPath(w); // GradientPaint painter = new GradientPaint(0, 0, startColor, 0, 5, // midColor); // g2.setPaint(painter); // g2.fill(path); // // path = generatePath(h, w); // g2.setColor(UIManager.getColor("controlDkShadow")); // g2.draw(path);
WITHOUT_CLASSIFICATION	// the indent-number attribute causes an IllegalArgumentException under 1.4 
WITHOUT_CLASSIFICATION	//		titleBar.addButton(new PinIcon(), //				new PinAction(this.getPersistentId()), BorderLayout.EAST); //		titleBar.addButton(new MaximizeIcon(), new MaximizeAction(this //				.getPersistentId()), BorderLayout.EAST);
WITHOUT_CLASSIFICATION	// this is executed on shutdown: store all open frames so that they // can be restored on the next start
WITHOUT_CLASSIFICATION	// clear the tooltip message previously displayed in the status bar
WITHOUT_CLASSIFICATION	// overwrite this method
WITHOUT_CLASSIFICATION	// remove from old mediator's listener list
WITHOUT_CLASSIFICATION	// use new viewitem
WITHOUT_CLASSIFICATION	// use new viewitem
WITHOUT_CLASSIFICATION	// *20030831, karlpeder* Also location is restored
WITHOUT_CLASSIFICATION	// awt-event-thread
WITHOUT_CLASSIFICATION	// awt-event-thread
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// short cut key
WITHOUT_CLASSIFICATION	//		OptionsItem optionsItem = MailConfig.getInstance().getOptionsItem(); //		String selectedBrowser = optionsItem.getStringWithDefault( //				OptionsItem.MESSAGEVIEWER, OptionsItem.SELECTED_BROWSER, //				"Default");
WITHOUT_CLASSIFICATION	// in case of an error -> fall-back to Swing's built-in JTextPane
WITHOUT_CLASSIFICATION	// update tree model
WITHOUT_CLASSIFICATION	/*            PluginManager.getInstance().setEnabled(id,                ((Boolean) value).booleanValue());                */
WITHOUT_CLASSIFICATION	// mainPanel.add( topBorderPanel, BorderLayout.NORTH );
WITHOUT_CLASSIFICATION	/*		 * listView = new FilterListTable(filterList, this);		 * listView.getSelectionModel().addListSelectionListener(this);		 * JScrollPane scrollPane = new JScrollPane(listView);		 * scrollPane.setPreferredSize(new Dimension(300, 250));		 * scrollPane.getViewport().setBackground(Color.white);		 * centerPanel.add(scrollPane);		 */
WITHOUT_CLASSIFICATION	/*         * Component strut2 = Box.createRigidArea(new Dimension(30, 5));         * gridBagLayout.setConstraints(strut2, c); eastPanel.add(strut2);         *         * gridBagLayout.setConstraints(defaultButton, c);         * eastPanel.add(defaultButton);         */
WITHOUT_CLASSIFICATION	// save to profiles.xml
WITHOUT_CLASSIFICATION	// save to profiles.xml
WITHOUT_CLASSIFICATION	// save to profiles.xml
WITHOUT_CLASSIFICATION	//top.setBackground(titleBackground);
WITHOUT_CLASSIFICATION	// start a new search -> clear all previous search results
WITHOUT_CLASSIFICATION	// start a new search -> clear all previous search results
WITHOUT_CLASSIFICATION	// add result panel as listener for new search results
WITHOUT_CLASSIFICATION	// create list of search requests
WITHOUT_CLASSIFICATION	// create a rounded clip LARGER than the comp
WITHOUT_CLASSIFICATION	// fill the clipped area // g2d.setPaint(LIGHT_GRADIENT);
WITHOUT_CLASSIFICATION	// paint inner border // g2d.setPaint(INNER);
WITHOUT_CLASSIFICATION	// builder.append(moreButton);
WITHOUT_CLASSIFICATION	// get first provider //				ISearchProvider provider = searchPanel.getSearchManager() //						.getAllProviders().next(); //				ISearchCriteria defaultCriteria = null; // //				SearchBar.this.searchPanel.searchInCriteria( //						textField.getText(), provider.getTechnicalName(), //						provider.getDefaultCriteria(textField.getText()) //								.getTechnicalName(), searchInsideCheckBox //								.isSelected());
WITHOUT_CLASSIFICATION	// Map<String, ISearchProvider> historyMap = SearchHistoryList // .getInstance().getHistoryMap();
WITHOUT_CLASSIFICATION	// setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
WITHOUT_CLASSIFICATION	// layoutComponents();
WITHOUT_CLASSIFICATION	//		taskButton = new JButton(); //		taskButton.setIcon(ImageLoader.getImageIcon("group_small.png")); //		taskButton.setToolTipText("Show list of running tasks"); //		taskButton.setRolloverEnabled(true); //		taskButton.setActionCommand("TASKMANAGER"); //		taskButton.addActionListener(this); // //		taskButton.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
WITHOUT_CLASSIFICATION	// protected void layoutComponents() { // setLayout(new BorderLayout()); // // leftMainPanel = new JPanel(); // leftMainPanel.setLayout(new BorderLayout()); // // JPanel taskPanel = new JPanel(); // taskPanel.setLayout(new BorderLayout()); // // // Border border = getDefaultBorder(); // //Border margin = new EmptyBorder(0, 0, 0, 2); // // // taskPanel.setBorder(new CompoundBorder(border, margin)); // // taskPanel.add(taskButton, BorderLayout.CENTER); // // leftMainPanel.add(taskPanel, BorderLayout.WEST); // JPanel labelPanel = new JPanel(); // labelPanel.setLayout(new BorderLayout()); // // margin = new EmptyBorder(0, 10, 0, 10); // // labelPanel.setBorder(new CompoundBorder(border, margin)); // // // margin = new EmptyBorder(0, 0, 0, 2); // labelPanel.add(label, BorderLayout.CENTER); // // leftMainPanel.add(labelPanel, BorderLayout.CENTER); // // add(leftMainPanel, BorderLayout.CENTER); // // mainRightPanel = new JPanel(); // mainRightPanel.setLayout(new BorderLayout()); // // JPanel progressPanel = new JPanel(); // progressPanel.setLayout(new BorderLayout()); // // progressPanel.setBorder(new CompoundBorder(border, margin)); // // progressPanel.add(progressBar, BorderLayout.CENTER); // // JPanel rightPanel = new JPanel(); // rightPanel.setLayout(new BorderLayout()); // // rightPanel.add(progressPanel, BorderLayout.CENTER); // // JPanel onlinePanel = new JPanel(); // onlinePanel.setLayout(new BorderLayout()); // // onlinePanel.setBorder(new CompoundBorder(border, margin)); // // onlinePanel.add(onlineButton, BorderLayout.CENTER); // // rightPanel.add(onlinePanel, BorderLayout.EAST); // add(rightPanel, BorderLayout.EAST); // } // public Border getDefaultBorder() { // return UIManager.getBorder("TableHeader.cellBorder"); // }
WITHOUT_CLASSIFICATION	//	public static JButton createAnimatedIconButton() { //		ImageSequenceTimer button = new ImageSequenceTimer(); // //		return button; //	}
WITHOUT_CLASSIFICATION	// menu.add(new CMenuItem(new OpenNewMailWindowAction(null))); // menu.add(new CMenuItem(new // OpenNewAddressbookWindowAction(null))); // menu.addSeparator(); // menu.add(new CMenuItem(new AboutDialogAction(null))); // menu.add(new CMenuItem(new ShowHelpAction(null))); // menu.addSeparator(); // menu.add(new CMenuItem(new ExitAction(null)));
WITHOUT_CLASSIFICATION	// does not occur
WITHOUT_CLASSIFICATION	// does not occur
WITHOUT_CLASSIFICATION	// register interested on changes in the running worker list
WITHOUT_CLASSIFICATION	// register as configuration change listener
WITHOUT_CLASSIFICATION	// should we really overwrite the Look and Feel font settings
WITHOUT_CLASSIFICATION	/*        UIManager.put("Label.font", mainFont);        UIManager.put("Textfield.font", mainFont);        UIManager.put("TextArea.font", mainFont);        UIManager.put("MenuItem.font", mainFont);        UIManager.put("MenuItem.acceleratorFont", mainFont);        UIManager.put("Menu.font", mainFont);        UIManager.put("Menu.acceleratorFont", mainFont);        UIManager.put("MenuBar.font", mainFont);        UIManager.put("Tree.font", mainFont);        UIManager.put("Table.font", mainFont);        UIManager.put("Button.font", mainFont);        UIManager.put("CheckBoxButton.font", mainFont);        UIManager.put("RadioButton.font", mainFont);        UIManager.put("ComboBox.font", mainFont);        UIManager.put("ToggleButton.font", mainFont);        UIManager.put("CheckBoxMenuItem.font", mainFont);        UIManager.put("RadioButtonMenuItem.font", mainFont);        UIManager.put("TabbedPane.font", mainFont);        UIManager.put("List.font", mainFont);        */
WITHOUT_CLASSIFICATION	// mark found pattern (select) //text.grabFocus();				
WITHOUT_CLASSIFICATION	// attempt
WITHOUT_CLASSIFICATION	// If the fifo could not be restored initialize it
WITHOUT_CLASSIFICATION	// // we can't just load the first constructor // -> go find the correct constructor based // -> based on the arguments //
WITHOUT_CLASSIFICATION	// // we can't just load the first constructor // -> go find the correct constructor based // -> based on the arguments //
WITHOUT_CLASSIFICATION	// do nothinh here ... use finalClose
WITHOUT_CLASSIFICATION	// cancel
WITHOUT_CLASSIFICATION	// cancel
WITHOUT_CLASSIFICATION	// cancel
WITHOUT_CLASSIFICATION	// e.printStackTrace();
WITHOUT_CLASSIFICATION	// System.setProperty("javax.net.debug", // "ssl,handshake,data,trustmanager"); // init java.net.ssl // debugging
WITHOUT_CLASSIFICATION	// retrieve inputstream from resource
WITHOUT_CLASSIFICATION	// use default Java classlodaer
WITHOUT_CLASSIFICATION	// startup Columba
WITHOUT_CLASSIFICATION	// stop server when shutting down
WITHOUT_CLASSIFICATION	// we add every jar-file in /lib, too // plugin-directory
WITHOUT_CLASSIFICATION	// client isn't from local machine
WITHOUT_CLASSIFICATION	// "store" html in jTextPane container // reset starting position in y-direction
WITHOUT_CLASSIFICATION	// set Look & Feel
WITHOUT_CLASSIFICATION	/*             * *20030609, karlpeder* Introduced scaling             */
WITHOUT_CLASSIFICATION	/*             * *20030609, karlpeder* Introduced scaling             */
WITHOUT_CLASSIFICATION	//		 handle commandline parameters
WITHOUT_CLASSIFICATION	// child views exist - operate recursively on these
WITHOUT_CLASSIFICATION	// Add the tray icon to the System tray // ColumbaTrayIcon.getInstance().addToSystemTray( // FrameManager.getInstance().getActiveFrameMediator() // .getFrameMediator());
WITHOUT_CLASSIFICATION	// no childs - we have a leaf view (i.e. with contents)
WITHOUT_CLASSIFICATION	// call the postStartups of the modules // e.g. check for default mailclient
WITHOUT_CLASSIFICATION	/*         * calculate a new break height according to the contents, possibly         * smaller to break before some content (i.e. not to break in the         * middle of something         */
WITHOUT_CLASSIFICATION	// // following internal components plugin registration //
WITHOUT_CLASSIFICATION	// oops, something went wrong
WITHOUT_CLASSIFICATION	// Platform maintainers: add your platform here
WITHOUT_CLASSIFICATION	/*                 * If the height of a view exceeds the paperheight, there should                 * be no break before (since it will be impossible to fit it in                 * anywhere => an infinite loop). We don't have access to the                 * pageheight here, therefore an "educated guess" is made:                 * No breaks are inserted before views starting within the first                 * 1% (chosen to avoid round-off errors) of the available space                 * given by actBreakHeight. If the view starts after the first 1%,                 * a break is inserted and the view will start at the top of the                 * next page (i.e. withing the first 1% this time).                 */
WITHOUT_CLASSIFICATION	// no configuration available, create default config
WITHOUT_CLASSIFICATION	// no configuration available, create default config
WITHOUT_CLASSIFICATION	// create new locale xml treenode
WITHOUT_CLASSIFICATION	/*			 * classLoader = ClassLoader.getSystemClassLoader();			 */
WITHOUT_CLASSIFICATION	// use ResourceBundle's internal classloader
WITHOUT_CLASSIFICATION	// use ResourceBundle's internal classloader
WITHOUT_CLASSIFICATION	/*           * I specifically want this here to ensure that the directory exists and           * this method never returns null.           *           * Any files that were in the observation list have already been           * previously removed by checkFiles().           */
WITHOUT_CLASSIFICATION	/* remove from script list */
WITHOUT_CLASSIFICATION	// add toolbar button between last button and cancel button
WITHOUT_CLASSIFICATION	/*        * it's the script responsability to define the "metadata" by invoking        * .setName(), .setAuthor() and .setDescription()        */
WITHOUT_CLASSIFICATION	/*        * it's the script responsability to define the "metadata" by invoking        * .setName(), .setAuthor() and .setDescription()        */
WITHOUT_CLASSIFICATION	// stop background-manager so it doesn't interfere with // shutdown manager
WITHOUT_CLASSIFICATION	// wait 10 seconds and check for pending commands again // this is useful if a command causes a deadlock
WITHOUT_CLASSIFICATION	// clear
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// is true if the last search was successful // a position of the word after the last search ivokation; -1 if nothing found // a position of the word after the last replace ivokation; -1 if nothing was replaced
WITHOUT_CLASSIFICATION	// false if search/replace is currently working
WITHOUT_CLASSIFICATION	// some other version of the constructor
WITHOUT_CLASSIFICATION	// the implementation of the search function. It returns always the position of the FIRST found word.
WITHOUT_CLASSIFICATION	// Determine whether there are 1, 2, or 3 names specified. These names should be separated by spaces //	or commas. If a comma separates the first two names, assume that the last name is specified first,  //	Otherwise, assume the first name is specified first. Middle name is always specified after the first name.
WITHOUT_CLASSIFICATION	// Buffer for collecting data from // the "characters" SAX event.
WITHOUT_CLASSIFICATION	// setup and load constructor
WITHOUT_CLASSIFICATION	// Create the XML reader... // xr = XMLReaderFactory.createXMLReader();
WITHOUT_CLASSIFICATION	// Set the ContentHandler... // xr.setContentHandler( this );
WITHOUT_CLASSIFICATION	// Resetting contents buffer. // Assuming that tags either tag content or children, not both. // This is usually the case with XML that is representing // data strucutures in a programming language independant way. // This assumption is not typically valid where XML is being // used in the classical text mark up style where tagging // is used to style content and several styles may overlap // at once.
WITHOUT_CLASSIFICATION	/* * Test for int hashCode(). */
WITHOUT_CLASSIFICATION	/* * Test for boolean equals(Object) */
WITHOUT_CLASSIFICATION	/* * Test for boolean equals(Object) */
WITHOUT_CLASSIFICATION	// top-level structure
WITHOUT_CLASSIFICATION	// top-level structure
WITHOUT_CLASSIFICATION	// mandatory String-based attribute
WITHOUT_CLASSIFICATION	// remove configuration directory
WITHOUT_CLASSIFICATION	/*LinkedList testList = new LinkedList(listFull_I);ListTools.intersect(testList,listFull_I);assertTrue(testList.equals(listFull_I));testList = new LinkedList(listFull_I);ListTools.intersect(testList,new LinkedList());assertTrue(testList.size()==0);testList = new LinkedList(listFull_I);ListTools.intersect(testList,listPart1_I);assertTrue(testList.equals(listPart1_I));testList = new LinkedList(listFull_I);ListTools.intersect(testList,listPart2_I);assertTrue(testList.equals(listPart2_I));testList = new LinkedList(listPart1_I);ListTools.intersect(testList,listPart2_I);assertTrue(testList.size()==0);*/
WITHOUT_CLASSIFICATION	//mod: 20040629 SWITT for redirecting feature //If FROM value was set, take this as From, else take Identity
WITHOUT_CLASSIFICATION	/*			 * BufferedReader in = new BufferedReader( new InputStreamReader(			 * new FileInputStream(file), model.getCharsetName()));			 */
WITHOUT_CLASSIFICATION	// Set Default Charset or selected
WITHOUT_CLASSIFICATION	// check if the charset is US-ASCII then there is something wrong // -> switch to UTF-8 and write to log-file
WITHOUT_CLASSIFICATION	/*		 * *20030921, karlpeder* The old code was (accidentially!?) modifying		 * the attachment list of the model. This affects the composing when		 * called a second time for saving the message after sending!		 */
WITHOUT_CLASSIFICATION	// Set recipients from the recipients vector
WITHOUT_CLASSIFICATION	/*     * validates a hostname, i.e.:     * mail.myhost.com     * mail.us.myhost.com     * 127.0.0.1     * */
WITHOUT_CLASSIFICATION	// return default-account ImapItem instead 
WITHOUT_CLASSIFICATION	// return default-account ImapItem instead 
WITHOUT_CLASSIFICATION	// return default-account ImapItem instead 
WITHOUT_CLASSIFICATION	//private File file;
WITHOUT_CLASSIFICATION	/*public AdapterNode addEmptyFilterCriteria(AdapterNode filterRuleNode) {        Element child = createElementNode("filtercriteria");        Element subNode = createTextElementNode("headeritem", "Subject");        addElement(child, subNode);        subNode = createTextElementNode("criteria", "contains");        addElement(child, subNode);        subNode = createTextElementNode("pattern", "pattern");        addElement(child, subNode);        subNode = createTextElementNode("type", "Subject");        addElement(child, subNode);        filterRuleNode.domNode.appendChild(child);        return new AdapterNode(child);}*/
WITHOUT_CLASSIFICATION	//  // options.xml // //<options> // <gui> //  <messageviewer inline_attachments="false"> //   <smilies enabled="true" /> //   <quote color="0" enabled="true" /> //  </messageviewer> //  <tree> //   <sorting sorted="true" ascending="true" comparator="alphabetic" /> //  </tree> // </gui> // <html prefer="true" /> // <markasread delay="2" enabled="true" /> // <headerviewer style="0" headerfields="Subject Date Reply-To From To Cc Bcc" /> //</options>
WITHOUT_CLASSIFICATION	// Choice btw. text and html will be based on stored option
WITHOUT_CLASSIFICATION	// example: "columba://org.columba.mail/<folder-id>/<message-id>"
WITHOUT_CLASSIFICATION	// retrieve Command of filter action
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// if there is no search engine, try the default one
WITHOUT_CLASSIFICATION	// iterate through all foldertypes to find suitable ones
WITHOUT_CLASSIFICATION	// Add child to parent
WITHOUT_CLASSIFICATION	// register interest on tree node changes
WITHOUT_CLASSIFICATION	// no filterlist treenode found // -> create a new one
WITHOUT_CLASSIFICATION	// get message with UID
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// parse header
WITHOUT_CLASSIFICATION	// message is already cached // try to compare the headerfield count of // the actually parsed message with the cached // headerfield count
WITHOUT_CLASSIFICATION	// We need to parse // get message with UID
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	/*		 * // use wrapper class for easier handling of references array adapter =		 * new FolderCommandAdapter( (MailFolderCommandReference[])		 * getReferences());		 *  // get array of source references MailFolderCommandReference[] r =		 * adapter.getSourceFolderReferences();		 */
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// skip if message is *not* marked as spam
WITHOUT_CLASSIFICATION	// move message to user-configured folder (generally "Junk" // folder)
WITHOUT_CLASSIFICATION	// get color from factory // ->factory shares color objects to save memory
WITHOUT_CLASSIFICATION	// create virtual folder (is attached to parentFolder)
WITHOUT_CLASSIFICATION	// get destination foldedr
WITHOUT_CLASSIFICATION	// two different root folders // -> get inputstream from source-folder and add it to // -> destination-folder as inputstream // -----> moving of raw message source // (works also for copying from local to IMAP folders, etc.
WITHOUT_CLASSIFICATION	// We are done - clear the status message with a delay
WITHOUT_CLASSIFICATION	// setup dialog title, active filter and file name
WITHOUT_CLASSIFICATION	// save message
WITHOUT_CLASSIFICATION	// Does the user prefer html or plain text?
WITHOUT_CLASSIFICATION	// decode message body with respect to charset
WITHOUT_CLASSIFICATION	// decode message body with respect to charset
WITHOUT_CLASSIFICATION	// use body as is
WITHOUT_CLASSIFICATION	// insert into message right after <body...>
WITHOUT_CLASSIFICATION	// test on extension
WITHOUT_CLASSIFICATION	// check if virtual folder, if yes, do not use these uids, use the // real uids instead
WITHOUT_CLASSIFICATION	// DateFormat
WITHOUT_CLASSIFICATION	/*                 * *20031216, karlpeder* Changed handling of dates.                 * Previously columba.date header was used. Now we                 * use the Date header instead                 */
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// skip, if filter is disabled
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	// First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	// First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	// First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	// message size should be at least 1 KB
WITHOUT_CLASSIFICATION	// save boolean headerfields, compressing them to one int value
WITHOUT_CLASSIFICATION	// If we have new messages add them to the headerlist
WITHOUT_CLASSIFICATION	// -2 because of the decrement in line 317 // removedLocalUids = localUids.size() - 2 - position;
WITHOUT_CLASSIFICATION	// Find missing uids loop
WITHOUT_CLASSIFICATION	// Sanity tests
WITHOUT_CLASSIFICATION	// update headerlist of destination-folder // -> this is necessary to reflect the changes visually // but only do it if the target folder is still in sync!
WITHOUT_CLASSIFICATION	// super(node, folderItem); // super(getDefaultItem("IMAPRootFolder", getDefaultProperties()));
WITHOUT_CLASSIFICATION	// if have already a suitable folder skip the search
WITHOUT_CLASSIFICATION	// parse line by line
WITHOUT_CLASSIFICATION	// if line doesn't start with "From" or line length is 0 //  -> save everything in StringBuffer
WITHOUT_CLASSIFICATION	// setup filter configuration
WITHOUT_CLASSIFICATION	// only create new subfolders if we used the default "Search Folder"
WITHOUT_CLASSIFICATION	// update tree-node (for renaming the new folder)
WITHOUT_CLASSIFICATION	// if the parent is a virtual folder the search cannot be applied directly // look for the correct uids by finding the first non virtual folder
WITHOUT_CLASSIFICATION	// Now we can search this folder since no mail from // this folder will come in the list
WITHOUT_CLASSIFICATION	// get list of plugins
WITHOUT_CLASSIFICATION	// load plugin
WITHOUT_CLASSIFICATION	// notify observers (sorting state submenu)
WITHOUT_CLASSIFICATION	// String definitions for the charsetnames // NOTE: these are also used to look up the // menuentries from the resourceloader
WITHOUT_CLASSIFICATION	// simulate charset changed to initialize selectedMenuItem
WITHOUT_CLASSIFICATION	// set default html or text based on stored option // ... can be overridden by setting the composer model
WITHOUT_CLASSIFICATION	// default value is 200 pixel // int pos = // viewItem.getIntegerWithDefault("splitpanes","attachment", 200);
WITHOUT_CLASSIFICATION	/*		 * *20030906, karlpeder* Method signature changed to return an		 * AbstractEditorController		 */
WITHOUT_CLASSIFICATION	// don't prompt user if composer should be closed
WITHOUT_CLASSIFICATION	// close Columba, if composer is only visible frame
WITHOUT_CLASSIFICATION	// close Columba, if composer is only visible frame
WITHOUT_CLASSIFICATION	//setText(accountName);
WITHOUT_CLASSIFICATION	/*		 * int index = locationToIndex(new Point(x, y));		 * 		 * setSelectedIndex(index);		 */
WITHOUT_CLASSIFICATION	/*			 * model.setSignMessage(signMenuItem.isSelected());			 * model.setEncryptMessage(encryptMenuItem.isSelected());			 */
WITHOUT_CLASSIFICATION	// attachment controller doesn't support paste actions
WITHOUT_CLASSIFICATION	// attachment controller doesn't support redo operation
WITHOUT_CLASSIFICATION	// get first selected message
WITHOUT_CLASSIFICATION	// get first selected message
WITHOUT_CLASSIFICATION	// get headerfields
WITHOUT_CLASSIFICATION	// get headerfields
WITHOUT_CLASSIFICATION	// create composer model
WITHOUT_CLASSIFICATION	// set subject
WITHOUT_CLASSIFICATION	// setup to, references and account
WITHOUT_CLASSIFICATION	// Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	// Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	// Do decoding stuff
WITHOUT_CLASSIFICATION	// Quote original message - different methods for text and html
WITHOUT_CLASSIFICATION	// Html: Insertion of text before and after original message // get necessary headerfields
WITHOUT_CLASSIFICATION	// Html: Insertion of text before and after original message // get necessary headerfields
WITHOUT_CLASSIFICATION	// Remove duplicates or the mail address from the receiver account
WITHOUT_CLASSIFICATION	// select the account this mail was received from
WITHOUT_CLASSIFICATION	// remove the bodypart from the mimeparts // that are added to the attachment viewer
WITHOUT_CLASSIFICATION	// debug output
WITHOUT_CLASSIFICATION	// choose addressbook
WITHOUT_CLASSIFICATION	// try to fill the contact list
WITHOUT_CLASSIFICATION	// folder selection changed
WITHOUT_CLASSIFICATION	// register for text selection changes // controller.getEditorController().addObserver(this);
WITHOUT_CLASSIFICATION	// set initial enabled state of combo boxes // XmlElement optionsElement = MailConfig.getInstance().get( // "composer_options").getElement("/options"); // XmlElement htmlElement = optionsElement.getElement("html"); // String s = htmlElement.getAttribute("enable", "false"); // boolean enableHtml = Boolean.valueOf(s).booleanValue();
WITHOUT_CLASSIFICATION	// FormLayout layout = new FormLayout( // "default, 3dlu, default, 3dlu, default, 3dlu, " // + "default, 3dlu, default, 3dlu, default, 3dlu, " // + "default, 6dlu, default, 3dlu, default, 3dlu, " // + "default, 3dlu", "fill:default"); // PanelBuilder b = new PanelBuilder(this, layout); // // CellConstraints c = new CellConstraints(); // // b.add(paragraphComboBox, cc.xy(1, 1)); // b.add(sizeLabel, cc.xy(3, 1)); // b.add(sizeComboBox, cc.xy(5, 1)); // b.add(boldFormatButton, cc.xy(7, 1)); // b.add(italicFormatButton, cc.xy(9, 1)); // b.add(underlineFormatButton, cc.xy(11, 1)); // b.add(strikeoutFormatButton, cc.xy(13, 1)); // b.add(leftJustifyButton, cc.xy(15, 1)); // b.add(centerJustifyButton, cc.xy(17, 1)); // b.add(rightJustifyButton, cc.xy(19, 1));
WITHOUT_CLASSIFICATION	// Handling of paragraph combo box // select the item in the combo box corresponding to present format
WITHOUT_CLASSIFICATION	// this can throw a ChangedCharsetException
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// register interest on configuratin changes
WITHOUT_CLASSIFICATION	/*		 * *20030906, karlpeder* Method signature changed to take an		 * AbstractEditorController (instead of an TextEditorView) as parameter		 * since the view is no longer directly available		 */
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them // here)
WITHOUT_CLASSIFICATION	// Add components to the panel: //		builder.append(defaultAccountCheckBox, 7); //		builder.nextLine();
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need // to // define them here)
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need // to // define them here)
WITHOUT_CLASSIFICATION	/*		 * builder.append(sslLabel, 3); builder.nextLine();		 *		 * builder.append(disableSSLConnectionRadioButton, 2);		 * builder.nextLine(); builder.append(enableSSLConnectionRadioButton,		 * 2); builder.nextLine();		 * builder.append(enableSTARTTLSExtensionRadioButton, 2);		 * builder.nextLine();		 */
WITHOUT_CLASSIFICATION	// Account is an IMAP account -> change root folder name
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	// setBorder(selectedBorder);
WITHOUT_CLASSIFICATION	// list.repaint();
WITHOUT_CLASSIFICATION	// ask the user about the destination file
WITHOUT_CLASSIFICATION	// ask the user about the destination file
WITHOUT_CLASSIFICATION	/*	 * private JTextField textField; private JPanel leftPanel; private	 * JTabbedPane rightPanel; private JButton addButton; private JButton	 * removeButton; private JButton editButton; private JButton upButton;	 * private JButton downButton;	 * 	 * private JFrame frame;	 */
WITHOUT_CLASSIFICATION	// this probably means that the configuration // is wrong // -> change this to a sane default value
WITHOUT_CLASSIFICATION	// if it is in a table, then we need to insert it at the // selected position.
WITHOUT_CLASSIFICATION	/*		 * matchComboBox.addItem("is"); matchComboBox.addItem("is not");		 * matchComboBox.addItem("begins with"); matchComboBox.addItem("ends		 * with");		 */
WITHOUT_CLASSIFICATION	// remove all options
WITHOUT_CLASSIFICATION	/*		 * builder.append(quotedColorCheckBox, quotedColorButton);		 * builder.nextLine();		 */
WITHOUT_CLASSIFICATION	// add filter criteria
WITHOUT_CLASSIFICATION	// add filter criteria
WITHOUT_CLASSIFICATION	// add filter criteria
WITHOUT_CLASSIFICATION	// don't search in subfolders recursively
WITHOUT_CLASSIFICATION	// messageController.createPopupMenu();
WITHOUT_CLASSIFICATION	// Unregister/register as Folder listener
WITHOUT_CLASSIFICATION	// get selected row
WITHOUT_CLASSIFICATION	/*	 * protected XmlElement createDefaultConfiguration(String id) { XmlElement	 * child = super.createDefaultConfiguration(id);	 * 	 * XmlElement splitpanes = new XmlElement("splitpanes");	 * splitpanes.addAttribute("main", "200"); splitpanes.addAttribute("header",	 * "200"); splitpanes.addAttribute("attachment", "100");	 * child.addElement(splitpanes);	 * 	 * return child; }	 */
WITHOUT_CLASSIFICATION	// putValue(LARGE_ICON, ImageLoader.getIcon(IconKeys.DOCUMENT_SAVE_AS));
WITHOUT_CLASSIFICATION	// get selected message UID
WITHOUT_CLASSIFICATION	// if the message it not yet seen
WITHOUT_CLASSIFICATION	// date area grid line
WITHOUT_CLASSIFICATION	// horizontal grid lines
WITHOUT_CLASSIFICATION	// vertical light gray column separator line
WITHOUT_CLASSIFICATION	// horizontal light gray column separator line
WITHOUT_CLASSIFICATION	// define activity layout
WITHOUT_CLASSIFICATION	// dateAreaBean.setActivityDepositoryContext(); // dateAreaBean.getDateArea().setActivitiesSupported(true);
WITHOUT_CLASSIFICATION	// showing the week number
WITHOUT_CLASSIFICATION	// // activity setup // 
WITHOUT_CLASSIFICATION	// wrap with observable stream for progress bar updates
WITHOUT_CLASSIFICATION	// monthlyActivityAShapeBean = new ActivityAShapeBean();
WITHOUT_CLASSIFICATION	//      map selection to this temporary message
WITHOUT_CLASSIFICATION	// something really got wrong here -> show error dialog // JOptionPane.showMessageDialog(null, e.getMessage());
WITHOUT_CLASSIFICATION	// There is no charset info -> the default system charset is // used
WITHOUT_CLASSIFICATION	// enable timer
WITHOUT_CLASSIFICATION	/*	 * private String body;	 *	 * private URL url;	 */
WITHOUT_CLASSIFICATION	// if HTML stripping is enabled
WITHOUT_CLASSIFICATION	// read configuration from options.xml file // create css-stylesheet string // set font of html-element <P>
WITHOUT_CLASSIFICATION	// vertical // grid // lines
WITHOUT_CLASSIFICATION	// dark gray line at 12 and 13
WITHOUT_CLASSIFICATION	// vertical grid lines
WITHOUT_CLASSIFICATION	// light gray line every day
WITHOUT_CLASSIFICATION	// select current day
WITHOUT_CLASSIFICATION	// // activity setup // 
WITHOUT_CLASSIFICATION	// define activity layout
WITHOUT_CLASSIFICATION	/*		 * css = "<style type=\"text/css\">\n" + "body {font-family:\"" + name +		 * "\"; font-size:\"" + size + "pt; \"} \n" + "a { color: blue;		 * text-decoration: underline }\n" + "font.quoting {color:#949494;} \n" + "</style>\n";		 */
WITHOUT_CLASSIFICATION	// layout.setVisualDateRangeRounder(new BoundaryRounder(DateRangeI.RANGE_TYPE_DAY, true, false, false)); // DateRangeRounder for AllDay Events
WITHOUT_CLASSIFICATION	// convert special characters
WITHOUT_CLASSIFICATION	// set the start to 00:00:00
WITHOUT_CLASSIFICATION	// if the end is on 00:00:00, round it to 23:59:59.999
WITHOUT_CLASSIFICATION	// TextAShape titleText = new TextAShape(DEFAULT_TITLE_TEXT_SHAPE_NAME, //		"$startTime$ - $endTimeExcl$ ($timeZoneShort$)", //		titleTextAbsRect, TextAShape.TYPE_SINGE_LINE, textFont, //		textPaint, new AtStart(0), new AtStart(-3), GfxUtil.AA_HINT_ON);
WITHOUT_CLASSIFICATION	// different border for recurrent events // ActivityInteractor.setStaticOverride( // AShapeUtil.DEFAULT_OUTLINE_SHAPE_NAME, AShape.A_STROKE, // new OverrideFilter() { // public Object getOverride(Object subject, // Object defaultObject) { // return ((ActivityView) subject).getModel() // .isRecurrent() ? new BasicStroke(1.0f, // BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, // 0, new float[] { 9 }, 0) : defaultObject; // } // });
WITHOUT_CLASSIFICATION	// Color shadowPaint = new Color(0, 0, 0, 100);
WITHOUT_CLASSIFICATION	// bgAShape.addSubShape(mainText);
WITHOUT_CLASSIFICATION	// Drag, resize interactions
WITHOUT_CLASSIFICATION	// Block mouse moves to the underlaying component won't restore the // Cursor
WITHOUT_CLASSIFICATION	// all day events
WITHOUT_CLASSIFICATION	// AShapeUtil.addResizeBoxes(root, SwingConstants.HORIZONTAL, 4);
WITHOUT_CLASSIFICATION	// setBackground(UIManager.getColor("TextField.background"));
WITHOUT_CLASSIFICATION	// get header from folder
WITHOUT_CLASSIFICATION	// get header from folder
WITHOUT_CLASSIFICATION	// create a view more button, responsible for // opening the attachment viewer popup
WITHOUT_CLASSIFICATION	// remove old activity
WITHOUT_CLASSIFICATION	// TODO: re-enable feature, the following code violates our // design, accessing folders is only allowed in Command.execute()
WITHOUT_CLASSIFICATION	/*		 * TreeController treeController = (TreeController) ((TreeViewOwner)		 * frameController) .getTreeController();		 * 		 * TreeView treeView = treeController.getView();		 */
WITHOUT_CLASSIFICATION	// changing the selection to the first row
WITHOUT_CLASSIFICATION	// and getting the uid for this node
WITHOUT_CLASSIFICATION	//			 @author: fdietz never request focus //requestFocus();
WITHOUT_CLASSIFICATION	// com.miginfocom.util.LicenseValidator.setLicenseKey("Cu=Frederik_Dietz\nCo=OpenSource\nDm=false\nEx=0\nSignature=302C021408B54A0B041E79362B1951E9FDB9AFEAD0EBFBDD021409F4830B4AD832766388107CB1D38126A9473C0C");
WITHOUT_CLASSIFICATION	// enabled event-firing
WITHOUT_CLASSIFICATION	// we currently only support a single category per activity
WITHOUT_CLASSIFICATION	/* version 4 */
WITHOUT_CLASSIFICATION	/* IETF variant */
WITHOUT_CLASSIFICATION	/* multicast bit */
WITHOUT_CLASSIFICATION	// retrieve event from store
WITHOUT_CLASSIFICATION	// retrieve event from store
WITHOUT_CLASSIFICATION	// set new calendar id
WITHOUT_CLASSIFICATION	// set new calendar id
WITHOUT_CLASSIFICATION	// persist modified calendar
WITHOUT_CLASSIFICATION	// persist modified calendar
WITHOUT_CLASSIFICATION	// update start/end time
WITHOUT_CLASSIFICATION	// update store
WITHOUT_CLASSIFICATION	// update store
WITHOUT_CLASSIFICATION	// get Columba's top-level configuration directory
WITHOUT_CLASSIFICATION	// create top-level configuration directory
WITHOUT_CLASSIFICATION	// load configuration from persistence
WITHOUT_CLASSIFICATION	// make sure configuration is saved when exiting
WITHOUT_CLASSIFICATION	// we only use the first message
WITHOUT_CLASSIFICATION	// retrieve subject
WITHOUT_CLASSIFICATION	// generate default unique id
WITHOUT_CLASSIFICATION	// create new event with new UUID
WITHOUT_CLASSIFICATION	// copy all attributes
WITHOUT_CLASSIFICATION	// copy all attributes
WITHOUT_CLASSIFICATION	// java.util.Calendar stamp = event.getDtStamp();
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// FIXME r.setPos();
WITHOUT_CLASSIFICATION	// create recurrence
WITHOUT_CLASSIFICATION	// ensure tzid matches date-time timezone.. // Parameter tzId = // dtStart1.getParameters().getParameter( // Parameter.TZID);
WITHOUT_CLASSIFICATION	// we only update changes for events currently
WITHOUT_CLASSIFICATION	// ensure tzid matches date-time timezone.. // Parameter tzId = dtEnd1.getParameters().getParameter( // Parameter.TZID);
WITHOUT_CLASSIFICATION	// ensure tzid matches date-time timezone.. // Parameter tzId = // dtStamp1.getParameters().getParameter( // Parameter.TZID);
WITHOUT_CLASSIFICATION	// remove everything which is not A-Za-z0-9-_
WITHOUT_CLASSIFICATION	// create recurrence
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.store.api.ICalendarStoreFactory#getLocaleStore()	 */
WITHOUT_CLASSIFICATION	// RRULE:FREQ=YEARLY;COUNT=5;INTERVAL=1 // RRULE:FREQ=WEEKLY;UNTIL=20060725T215959;INTERVAL=1;BYDAY=TU // RRULE:FREQ=YEARLY;INTERVAL=1
WITHOUT_CLASSIFICATION	// MouseListener sorts table when clicking on a column header
WITHOUT_CLASSIFICATION	// RRULE:FREQ=WEEKLY;COUNT=8;INTERVAL=2;BYDAY=TU,TH // RRULE:FREQ=MONTHLY;UNTIL=20070627T215959;INTERVAL=2;BYDAY=4WE // RRULE:FREQ=YEARLY;INTERVAL=1 // RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=-1SU;BYMONTH=3 // RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=-1SU;BYMONTH=10
WITHOUT_CLASSIFICATION	// skip, if UID, dtStart or dtEnd is not defined
WITHOUT_CLASSIFICATION	// if there is no string given, return a number
WITHOUT_CLASSIFICATION	/*		 * DocType docType = factory .docType("iCalendar", "-//IETF//DTD		 * XCAL/iCalendar XML//EN",		 * "http://www.ietf.org/internet-drafts/draft-hare-xcalendar-01.txt");		 * doc.setDocType(docType);		 */
WITHOUT_CLASSIFICATION	// wrong xml-format
WITHOUT_CLASSIFICATION	// found category
WITHOUT_CLASSIFICATION	//Element child = getParentElement().getChild(ICALENDAR.CATEGORIES); //List list = child.getChildren();
WITHOUT_CLASSIFICATION	// find the property in the rrule string
WITHOUT_CLASSIFICATION	// no recurrency, so nothing in the string
WITHOUT_CLASSIFICATION	// build string
WITHOUT_CLASSIFICATION	// optional parts
WITHOUT_CLASSIFICATION	//UNTIL=20070627T215959
WITHOUT_CLASSIFICATION	// generate new UUID if it does not exist yet
WITHOUT_CLASSIFICATION	// remove old data
WITHOUT_CLASSIFICATION	// generate xml document
WITHOUT_CLASSIFICATION	// add new data to local store
WITHOUT_CLASSIFICATION	// builder.setValidation(true);
WITHOUT_CLASSIFICATION	// filename = "uuid.xcs"
WITHOUT_CLASSIFICATION	// remove ".xcs"
WITHOUT_CLASSIFICATION	// we only update changes for events currently
WITHOUT_CLASSIFICATION	//ICalendarStore store = (ICalendarStore) next.getSource();
WITHOUT_CLASSIFICATION	// retrieve event from store
WITHOUT_CLASSIFICATION	// retrieve event from store
WITHOUT_CLASSIFICATION	// update store
WITHOUT_CLASSIFICATION	// update store
WITHOUT_CLASSIFICATION	// remove old activity
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// create new activity
WITHOUT_CLASSIFICATION	// process all events collected until now
WITHOUT_CLASSIFICATION	// putValue(AbstractColumbaAction.LARGE_ICON, ResourceLoader // .getImageIcon("new_appointment-32.png")); // putValue(AbstractColumbaAction.SMALL_ICON, ResourceLoader // .getImageIcon("new_appointment.png"));
WITHOUT_CLASSIFICATION	// copy activity
WITHOUT_CLASSIFICATION	// enable all menuitems
WITHOUT_CLASSIFICATION	// enable all menuitems
WITHOUT_CLASSIFICATION	// retrieve selected activity
WITHOUT_CLASSIFICATION	// retrieve selected activity
WITHOUT_CLASSIFICATION	// activity belongs to calendar id ?
WITHOUT_CLASSIFICATION	// activity belongs to calendar id ?
WITHOUT_CLASSIFICATION	// disable this calendar's id
WITHOUT_CLASSIFICATION	// disable this calendar's id
WITHOUT_CLASSIFICATION	// get selected calendar id
WITHOUT_CLASSIFICATION	// get selected calendar
WITHOUT_CLASSIFICATION	// A recurring event
WITHOUT_CLASSIFICATION	// this is for the calendar component and only used internally
WITHOUT_CLASSIFICATION	// 2 columns
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// we need this for the focus manager
WITHOUT_CLASSIFICATION	// background
WITHOUT_CLASSIFICATION	// Drag, resize interactions
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// DocumentListener Methods
WITHOUT_CLASSIFICATION	// select first item
WITHOUT_CLASSIFICATION	// glocal grid line colors
WITHOUT_CLASSIFICATION	// activityAShapeBean = new ActivityAShapeBean();
WITHOUT_CLASSIFICATION	// general grid size - if we don't set this property there won't be // vertical scrollbars
WITHOUT_CLASSIFICATION	// west header
WITHOUT_CLASSIFICATION	// first row showing the hour
WITHOUT_CLASSIFICATION	// north header background
WITHOUT_CLASSIFICATION	// north header cell decorator
WITHOUT_CLASSIFICATION	// first header showing Day info
WITHOUT_CLASSIFICATION	// date area grid line
WITHOUT_CLASSIFICATION	// horizontal grid lines
WITHOUT_CLASSIFICATION	// dark gray line every hour
WITHOUT_CLASSIFICATION	// light gray line every 30 min
WITHOUT_CLASSIFICATION	// vertical grid lines
WITHOUT_CLASSIFICATION	// light gray line every day
WITHOUT_CLASSIFICATION	// horizontal light gray column separator line
WITHOUT_CLASSIFICATION	// select current day
WITHOUT_CLASSIFICATION	// select nodes
WITHOUT_CLASSIFICATION	// differnt outline color is selected
WITHOUT_CLASSIFICATION	// bold outline if selected
WITHOUT_CLASSIFICATION	// Color titleBgPaint = null;//new Color(200, 50, 50, 255);
WITHOUT_CLASSIFICATION	// Color selectedTitlePaint = new Color(200, 100, 100);
WITHOUT_CLASSIFICATION	// Color bulletPaint = new Color(100, 100, 100);
WITHOUT_CLASSIFICATION	// Color textPaint = new Color(0, 0, 0, 50);
WITHOUT_CLASSIFICATION	// even
WITHOUT_CLASSIFICATION	// First (left) tab
WITHOUT_CLASSIFICATION	// Second (right) tab
WITHOUT_CLASSIFICATION	// Fallback shape for small sizes
WITHOUT_CLASSIFICATION	// Resize events
WITHOUT_CLASSIFICATION	// **************************************** // * Static example shape creation // ****************************************
WITHOUT_CLASSIFICATION	// AShapeUtil.addMouseFireEvent(outlineAShape, trigger, // DefaultDateArea.AE_CATEGORY_DRAG_PRESSED, false, false, button);
WITHOUT_CLASSIFICATION	// END1 because the draw should be // correct
WITHOUT_CLASSIFICATION	// States
WITHOUT_CLASSIFICATION	// Shadow
WITHOUT_CLASSIFICATION	// Shadow
WITHOUT_CLASSIFICATION	// PlaceRect bgAbsRect = new AbsRect(new AtStart(0), new AtStart(0), new // AtEnd(0), new AtEnd(0), null, null, shadowInsets);
WITHOUT_CLASSIFICATION	// FillAShape filledShadow = new FillAShape("shadowShape", new // RoundRectangle(0, 0, 1, 1, 5, 5), bgAbsRect, new Color(0, 0, 0, 100), // GfxUtil.AA_HINT_ON);
WITHOUT_CLASSIFICATION	// SliceSpec shwSI = new SliceSpec(new Insets(10, 10, 10, 10), // SliceSpec.TYPE_TILE_CUT, SliceSpec.OPT_BORDER);
WITHOUT_CLASSIFICATION	// FeatherAShape shadow = new FeatherAShape("shadow", filledShadow, new // Color(255, 255, 255, 0), 5, shwSI);
WITHOUT_CLASSIFICATION	// AbsRect textRect = new AbsRect(new AtStart(4), AtStart.START0, new // AtEnd(-4), AtEnd.END0);
WITHOUT_CLASSIFICATION	// root.addSubShape(shadow);
WITHOUT_CLASSIFICATION	// root.addSubShape(shadow);
WITHOUT_CLASSIFICATION	// root.addSubShape(textShape);
WITHOUT_CLASSIFICATION	// root.addSubShape(textShape);
WITHOUT_CLASSIFICATION	// root.addSubShape(outlineShape);
WITHOUT_CLASSIFICATION	// root.setAttribute(AShape.A_REPORT_HIT_SHAPE, Boolean.TRUE);
WITHOUT_CLASSIFICATION	// Animations for text
WITHOUT_CLASSIFICATION	// textAShape.setAttribute(AShape.A_REPORT_HIT_SHAPE, Boolean.TRUE);
WITHOUT_CLASSIFICATION	// Title
WITHOUT_CLASSIFICATION	// Content
WITHOUT_CLASSIFICATION	// Outline
WITHOUT_CLASSIFICATION	// Build tree
WITHOUT_CLASSIFICATION	// Color moOutlinePaint = new Color(0, 0, 0);
WITHOUT_CLASSIFICATION	// private ThemeDateAreaContainer view;
WITHOUT_CLASSIFICATION	// every year?
WITHOUT_CLASSIFICATION	// for leap years!
WITHOUT_CLASSIFICATION	// start with week view
WITHOUT_CLASSIFICATION	// LOG.severe("no number!")
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// SliceSpec shwSI = new SliceSpec(new Insets(10, 10, 10, 10), // SliceSpec.TYPE_TILE_CUT, SliceSpec.OPT_BORDER);
WITHOUT_CLASSIFICATION	// FeatherAShape shadow = new FeatherAShape("shadow", filledShadow, new // Color(255, 255, 255, 0), 5, shwSI);
WITHOUT_CLASSIFICATION	// FillAShape filledShadow = new FillAShape("shadowShape", new // RoundRectangle(0, 0, 1, 1, 5, 5), bgAbsRect, new Color(0, 0, 0, 100), // Boolean.TRUE);
WITHOUT_CLASSIFICATION	// DrawAShape outlineShape = new DrawAShape("bgFill", new Rectangle(0, // 0, 1, 1), AbsRect.FILL, outlinePaint, new BasicStroke(1f), // Boolean.FALSE);
WITHOUT_CLASSIFICATION	// SizeConstraint sConstr1 = new SizeConstraint(new AtFixed(10), new // AtFraction(1), 1.0f);
WITHOUT_CLASSIFICATION	// SizeConstraint sConstr2 = new SizeConstraint(new AtFixed(0), new // AtFraction(0.5f), 1.0f);
WITHOUT_CLASSIFICATION	// SizeConstraint sConstr3 = new SizeConstraint(new AtFixed(0), new // AtFraction(1), 0.0f);
WITHOUT_CLASSIFICATION	// SizeConstraint sConstr4 = new SizeConstraint(new AtFixed(0), new // AtFraction(1), 0.0f);
WITHOUT_CLASSIFICATION	// ShapeGradientPaint bgPaint = new ShapeGradientPaint(new Color(235, // 235, 235), new Color(255, 255, 255), 180, 1f, 0.5f, false);
WITHOUT_CLASSIFICATION	// ShapeGradientPaint titlePaint = new ShapeGradientPaint(new Color(255, // 150, 150), new Color(255, 200, 200), 0, 0.7f, 0.7f, false);
WITHOUT_CLASSIFICATION	// addEnterExitOverride(outlineAShape, outlineAShape, AShape.A_PAINT, // moOutlinePaint, false, true);
WITHOUT_CLASSIFICATION	// toolTip.setForeground(Color.DARK_GRAY);
WITHOUT_CLASSIFICATION	// ((DefaultDateArea) localDateAreaBean.getDateArea()) // .addActivityMoveListener(this);
WITHOUT_CLASSIFICATION	// mouse hovers over activity
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// retrieve new selection
WITHOUT_CLASSIFICATION	// remember selected activity
WITHOUT_CLASSIFICATION	// notify all listeners
WITHOUT_CLASSIFICATION	// check if happens on the selected activity
WITHOUT_CLASSIFICATION	// check if happens in calendar, but not on activity
WITHOUT_CLASSIFICATION	// trigged if activity is moved or daterange is modified
WITHOUT_CLASSIFICATION	// the java methods return a nice week of year, we need hard facts
WITHOUT_CLASSIFICATION	// update modification timestamp
WITHOUT_CLASSIFICATION	// its always possible that no folder is currenlty selected
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// retrieve new selection
WITHOUT_CLASSIFICATION	// remember selected activity
WITHOUT_CLASSIFICATION	// notify all listeners
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#viewNext()	 */
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	// select activity before opening context context-menu // selectedInternalActivitiy.getStates().setStates( // GenericStates.SELECTED_BIT, true);
WITHOUT_CLASSIFICATION	// double-click on empty calendar // mediator.fireCreateActivity(null);
WITHOUT_CLASSIFICATION	// it will not be done correctly, if the first statement is // omitted
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// TimeSpan span = activityList.get(i);
WITHOUT_CLASSIFICATION	// clicked on calendar - not activity
WITHOUT_CLASSIFICATION	// table.put(item.getId(), item.getName());
WITHOUT_CLASSIFICATION	// custom renderer to convert from calendar id to calendar name
WITHOUT_CLASSIFICATION	// regexp for correct timestamp
WITHOUT_CLASSIFICATION	// check value before :
WITHOUT_CLASSIFICATION	// correct value!
WITHOUT_CLASSIFICATION	// correct value!
WITHOUT_CLASSIFICATION	// check value after :
WITHOUT_CLASSIFICATION	// both values are okay, so create a correct time
WITHOUT_CLASSIFICATION	// there is no :
WITHOUT_CLASSIFICATION	// no correct value!
WITHOUT_CLASSIFICATION	// in case we have to add another "0"
WITHOUT_CLASSIFICATION	// enable selection
WITHOUT_CLASSIFICATION	// click on this button will open the recurrence dialog
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// disable time pickers
WITHOUT_CLASSIFICATION	// disable time pickers
WITHOUT_CLASSIFICATION	// enable time pickers
WITHOUT_CLASSIFICATION	// enable time pickers
WITHOUT_CLASSIFICATION	// scrolling to the selected row
WITHOUT_CLASSIFICATION	// A recurring event
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// private Hashtable<String, String> table = new Hashtable<String, // String>(10);
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// disable time pickers
WITHOUT_CLASSIFICATION	// enable time pickers
WITHOUT_CLASSIFICATION	// it has to be set
WITHOUT_CLASSIFICATION	// check if the user entered valid data
WITHOUT_CLASSIFICATION	// enable button
WITHOUT_CLASSIFICATION	// disable button
WITHOUT_CLASSIFICATION	// frequency
WITHOUT_CLASSIFICATION	// no end
WITHOUT_CLASSIFICATION	// maximum occurrences
WITHOUT_CLASSIFICATION	// end date
WITHOUT_CLASSIFICATION	// enable all radio buttons
WITHOUT_CLASSIFICATION	// disable all
WITHOUT_CLASSIFICATION	// load options of newly selected folder
WITHOUT_CLASSIFICATION	// disable date picker
WITHOUT_CLASSIFICATION	// enable max occurrences
WITHOUT_CLASSIFICATION	// enable until
WITHOUT_CLASSIFICATION	// disable other
WITHOUT_CLASSIFICATION	// TestDataGenerator.generateTestData();
WITHOUT_CLASSIFICATION	// calendar list
WITHOUT_CLASSIFICATION	// create empty value
WITHOUT_CLASSIFICATION	// create identity value
WITHOUT_CLASSIFICATION	// summary
WITHOUT_CLASSIFICATION	// description
WITHOUT_CLASSIFICATION	// location
WITHOUT_CLASSIFICATION	// date range
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// glocal grid line colors
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// date area grid line
WITHOUT_CLASSIFICATION	// horizontal grid lines
WITHOUT_CLASSIFICATION	// dark gray line at 12 and 13
WITHOUT_CLASSIFICATION	// vertical grid lines
WITHOUT_CLASSIFICATION	// light gray line every day
WITHOUT_CLASSIFICATION	// vertical light gray column separator line
WITHOUT_CLASSIFICATION	// horizontal light gray column separator line
WITHOUT_CLASSIFICATION	// select current day
WITHOUT_CLASSIFICATION	// monthlyActivityAShapeBean = new ActivityAShapeBean();
WITHOUT_CLASSIFICATION	// showing the week number
WITHOUT_CLASSIFICATION	// enable selection
WITHOUT_CLASSIFICATION	// JScrollPane tableScrollPane = new JScrollPane(navigationController // .getView()); // tableScrollPane.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, // 0));
WITHOUT_CLASSIFICATION	//checkbox.setBackground(item.getColor());
WITHOUT_CLASSIFICATION	//item.setSelected(checkbox.isSelected());
WITHOUT_CLASSIFICATION	//Make the renderer reappear.
WITHOUT_CLASSIFICATION	// create default root nodes <Local> and <Web>
WITHOUT_CLASSIFICATION	// category filtering is disabled as default
WITHOUT_CLASSIFICATION	// calendar is selected as default
WITHOUT_CLASSIFICATION	// two column
WITHOUT_CLASSIFICATION	//setBorder(BorderFactory.createEmptyBorder(2, 4, 2, 4));
WITHOUT_CLASSIFICATION	//setBorder(BorderFactory.createEmptyBorder(2, 4, 2, 4));
WITHOUT_CLASSIFICATION	// private CheckableItemListTableModel model;
WITHOUT_CLASSIFICATION	// do not show header
WITHOUT_CLASSIFICATION	// no grid lines
WITHOUT_CLASSIFICATION	// setIntercellSpacing(new Dimension(2, 2));
WITHOUT_CLASSIFICATION	// setRowMargin(5);
WITHOUT_CLASSIFICATION	//setBackground(item.getColor());
WITHOUT_CLASSIFICATION	// showing the month number
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// // activity setup // 
WITHOUT_CLASSIFICATION	// vertical // grid // lines
WITHOUT_CLASSIFICATION	// monthlyWestDateHeaderBean // .setLabelRotation(TextAShape.TYPE_SINGE_LINE_ROT_CCW);
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// check if its a calendar component
WITHOUT_CLASSIFICATION	// get calendar ui component depository
WITHOUT_CLASSIFICATION	// add tag id as last
WITHOUT_CLASSIFICATION	// set all tags/categories to be *not* selected
WITHOUT_CLASSIFICATION	// retrieve tag/category to be selected
WITHOUT_CLASSIFICATION	// create new one
WITHOUT_CLASSIFICATION	// mark it as selected
WITHOUT_CLASSIFICATION	// update calendar viewer
WITHOUT_CLASSIFICATION	// check if calendar item is tagged
WITHOUT_CLASSIFICATION	// check three entries
WITHOUT_CLASSIFICATION	// Event: Anniversary
WITHOUT_CLASSIFICATION	// 204524
WITHOUT_CLASSIFICATION	// Event: All Day Event
WITHOUT_CLASSIFICATION	// Event: Normal Event
WITHOUT_CLASSIFICATION	// this is the expected cases
WITHOUT_CLASSIFICATION	// delete all data in directory
WITHOUT_CLASSIFICATION	// delete folder
WITHOUT_CLASSIFICATION	// int column = view.convertColumnIndexToModel(viewColumn); // int column2 = view.convertColumnIndexToView(viewColumn);
WITHOUT_CLASSIFICATION	// // mark all activities with the tag // 
WITHOUT_CLASSIFICATION	// example: // "columba://org.columba.contact/<folder-id>/<contact-id>"
WITHOUT_CLASSIFICATION	// // now change all global categories // 
WITHOUT_CLASSIFICATION	// that is the expected case
WITHOUT_CLASSIFICATION	// ************ // normal cases // ************
WITHOUT_CLASSIFICATION	// *********** // edge values // ***********
WITHOUT_CLASSIFICATION	// ****************** // more than one year // ******************
WITHOUT_CLASSIFICATION	// *************** // MONTH VIEW TEST // ***************
WITHOUT_CLASSIFICATION	// new vis range = Start: Sep 23, 2007 12:00:00 AM (RAW:1.0, DST:-1.0)   End: Nov 3, 2007 11:59:59 PM (RAW:1.0, DST:0.0)  Time zone: null  Locale: null // new vis range = Start: Oct 1, 2007 12:00:00 AM (RAW:1.0, DST:-1.0)   End: Nov 11, 2007 11:59:59 PM (RAW:1.0, DST:0.0)  Time zone: null  Locale: null // should be // new vis range = Start: Oct 1, 2007 12:00:00 AM (RAW:1.0, DST:-1.0)   End: Nov 10, 2007 11:59:59 PM (RAW:1.0, DST:0.0)  Time zone: null  Locale: null
WITHOUT_CLASSIFICATION	// valid inputs
WITHOUT_CLASSIFICATION	// recoverable inputs
WITHOUT_CLASSIFICATION	// unrecoverable inputs
WITHOUT_CLASSIFICATION	// city
WITHOUT_CLASSIFICATION	// state/province/county
WITHOUT_CLASSIFICATION	// This should never happen since superclass is Object
WITHOUT_CLASSIFICATION	/*AdapterNode name;AdapterNode uid;AdapterNode type;AdapterNode rootNode;*/
WITHOUT_CLASSIFICATION	/*this.rootNode = root;parse();createMissingElements();*/
WITHOUT_CLASSIFICATION	//filterList = new Vector();
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.addressbook.gui.tree.AddressbookTreeNode#getName() */
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// 
WITHOUT_CLASSIFICATION	//private File addressbookFile;
WITHOUT_CLASSIFICATION	// skip if contact item is not valid
WITHOUT_CLASSIFICATION	// check if contact with given email address exists already
WITHOUT_CLASSIFICATION	// check if it contains comma character
WITHOUT_CLASSIFICATION	// retrieve all contact items and add those to the list only
WITHOUT_CLASSIFICATION	// simply all all group items to the list
WITHOUT_CLASSIFICATION	// add group items
WITHOUT_CLASSIFICATION	// example: "columba://org.columba.contact/<folder-id>/<contact-id>"
WITHOUT_CLASSIFICATION	// modify card properties in folder
WITHOUT_CLASSIFICATION	// create list containing all contact item of this folder
WITHOUT_CLASSIFICATION	/*	 * public AddressbookTreeNode(String name) { super(name); this.name = name; }	 */
WITHOUT_CLASSIFICATION	// FAILURE!!!
WITHOUT_CLASSIFICATION	// public abstract Class getDefaultChild();
WITHOUT_CLASSIFICATION	// Put properties that should be copied from parent here
WITHOUT_CLASSIFICATION	// remove xml config
WITHOUT_CLASSIFICATION	// remove node
WITHOUT_CLASSIFICATION	// header file found
WITHOUT_CLASSIFICATION	// skip, if null
WITHOUT_CLASSIFICATION	// contact doesn't exist in parent folder anymore // -> remove it
WITHOUT_CLASSIFICATION	// start parsing line by line
WITHOUT_CLASSIFICATION	// empty line, means new contactcard
WITHOUT_CLASSIFICATION	// parse key:value lines
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// create URI representing the contact
WITHOUT_CLASSIFICATION	// if next node is null (the end of the list) return
WITHOUT_CLASSIFICATION	// start parsing line
WITHOUT_CLASSIFICATION	// found new token
WITHOUT_CLASSIFICATION	// backwards compatibility
WITHOUT_CLASSIFICATION	// protected AddressbookFolder tempFolder;
WITHOUT_CLASSIFICATION	// tempFolder = new AddressbookFolder(null,addressbookInterface);
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// add new group to folder
WITHOUT_CLASSIFICATION	// get parent
WITHOUT_CLASSIFICATION	// notify model
WITHOUT_CLASSIFICATION	// register interest on table selection changes
WITHOUT_CLASSIFICATION	// register interest on tree selection changes
WITHOUT_CLASSIFICATION	// register interest on tree selection changes
WITHOUT_CLASSIFICATION	// remember last selected folder treenode
WITHOUT_CLASSIFICATION	// remember last selected folder treenode
WITHOUT_CLASSIFICATION	// remember last selected folder treenode
WITHOUT_CLASSIFICATION	// enable, if more than zero treenodes selected
WITHOUT_CLASSIFICATION	// enable, if more than zero treenodes selected
WITHOUT_CLASSIFICATION	//		 get selected folder
WITHOUT_CLASSIFICATION	//		 get selected contact/group card
WITHOUT_CLASSIFICATION	// create open file dialog
WITHOUT_CLASSIFICATION	//if user pressed OK button
WITHOUT_CLASSIFICATION	// add contact to folder
WITHOUT_CLASSIFICATION	// register interest on contact selection changes
WITHOUT_CLASSIFICATION	// check if contact is tagged
WITHOUT_CLASSIFICATION	// modify card properties in folder
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get parent
WITHOUT_CLASSIFICATION	// notify model
WITHOUT_CLASSIFICATION	// remember last selected folder treenode
WITHOUT_CLASSIFICATION	// remember last selected folder treenode
WITHOUT_CLASSIFICATION	// enable, if more than zero treenodes selected
WITHOUT_CLASSIFICATION	// enable, if more than zero treenodes selected
WITHOUT_CLASSIFICATION	// create open file dialog
WITHOUT_CLASSIFICATION	//if user pressed OK button
WITHOUT_CLASSIFICATION	//		 register interest on tree selection changes
WITHOUT_CLASSIFICATION	// read VCARD file into string buffer
WITHOUT_CLASSIFICATION	// create contact card
WITHOUT_CLASSIFICATION	// add to folder
WITHOUT_CLASSIFICATION	// update table
WITHOUT_CLASSIFICATION	// get selected contact/group card
WITHOUT_CLASSIFICATION	//					 re-select folder
WITHOUT_CLASSIFICATION	// tree has focus
WITHOUT_CLASSIFICATION	// tree has focus
WITHOUT_CLASSIFICATION	// tree has focus
WITHOUT_CLASSIFICATION	// re-select folder
WITHOUT_CLASSIFICATION	// table has focus
WITHOUT_CLASSIFICATION	// table has focus
WITHOUT_CLASSIFICATION	// remove contacts/group cards from folder
WITHOUT_CLASSIFICATION	//		 re-select folder
WITHOUT_CLASSIFICATION	// remove folder from parent
WITHOUT_CLASSIFICATION	//_editor.moveCaretPosition(cursor_pos);
WITHOUT_CLASSIFICATION	// contacts item
WITHOUT_CLASSIFICATION	// group item
WITHOUT_CLASSIFICATION	// for each JComboBox item
WITHOUT_CLASSIFICATION	// to lower case
WITHOUT_CLASSIFICATION	// compare if item starts with str
WITHOUT_CLASSIFICATION	// initialize completer
WITHOUT_CLASSIFICATION	// can be only one
WITHOUT_CLASSIFICATION	// can be only one
WITHOUT_CLASSIFICATION	// ======== this ========
WITHOUT_CLASSIFICATION	// leave dialog empty if no source contact model specified
WITHOUT_CLASSIFICATION	// model -> view
WITHOUT_CLASSIFICATION	// fall back to default image
WITHOUT_CLASSIFICATION	// we support up to 4 email addresses
WITHOUT_CLASSIFICATION	// we support up to 4 email addresses
WITHOUT_CLASSIFICATION	// we support up to 4 phone entries
WITHOUT_CLASSIFICATION	// we support up to 4 im entries
WITHOUT_CLASSIFICATION	// we support up to 3 address entries (work/private/other)
WITHOUT_CLASSIFICATION	// view -> model
WITHOUT_CLASSIFICATION	// we support up to 4 phones
WITHOUT_CLASSIFICATION	// we support up to 4 im
WITHOUT_CLASSIFICATION	// we support 3 address types (work/home/other)
WITHOUT_CLASSIFICATION	// ======== dialogPane ========
WITHOUT_CLASSIFICATION	// ======== contentPane ========
WITHOUT_CLASSIFICATION	// ======== tabbedPane2 ========
WITHOUT_CLASSIFICATION	// ======== contactPanel ========
WITHOUT_CLASSIFICATION	// ======== panel7 ========
WITHOUT_CLASSIFICATION	// ---- pictureButton ----
WITHOUT_CLASSIFICATION	// ---- nicknameLabel ----
WITHOUT_CLASSIFICATION	// ---- fileunderLabel ----
WITHOUT_CLASSIFICATION	// ---- categoriesButton ----
WITHOUT_CLASSIFICATION	// ---- emailTextField1 ----
WITHOUT_CLASSIFICATION	// ---- emailTextField3 ----
WITHOUT_CLASSIFICATION	// ---- emailTextField4 ----
WITHOUT_CLASSIFICATION	// ---- preferHtmlCheckBox ----
WITHOUT_CLASSIFICATION	// ---- telephoneTextField1 ----
WITHOUT_CLASSIFICATION	// ---- telephoneTextField3 ----
WITHOUT_CLASSIFICATION	// ---- telephoneTextField4 ----
WITHOUT_CLASSIFICATION	// ---- imTextField1 ----
WITHOUT_CLASSIFICATION	// ---- imTextField2 ----
WITHOUT_CLASSIFICATION	// ---- imTextField3 ----
WITHOUT_CLASSIFICATION	// ======== personalInfoPanel ========
WITHOUT_CLASSIFICATION	// ---- homepageLabel ----
WITHOUT_CLASSIFICATION	// ======== panel1 ========
WITHOUT_CLASSIFICATION	// ---- homepageTextField ----
WITHOUT_CLASSIFICATION	// ---- weblogLabel ----
WITHOUT_CLASSIFICATION	// ======== panel5 ========
WITHOUT_CLASSIFICATION	// ---- weblogTextField ----
WITHOUT_CLASSIFICATION	// ---- weblogButton ----
WITHOUT_CLASSIFICATION	// ======== panel6 ========
WITHOUT_CLASSIFICATION	// ---- calendarTextField ----
WITHOUT_CLASSIFICATION	// ---- calendarButton ----
WITHOUT_CLASSIFICATION	// ---- freebusyLabel ----
WITHOUT_CLASSIFICATION	// ---- freebusyTextField ----
WITHOUT_CLASSIFICATION	// ---- freebusyButton ----
WITHOUT_CLASSIFICATION	// ---- professionLabel ----
WITHOUT_CLASSIFICATION	// ---- professionTextField ----
WITHOUT_CLASSIFICATION	// ---- titleLabel ----
WITHOUT_CLASSIFICATION	// ---- companyLabel ----
WITHOUT_CLASSIFICATION	// ---- departmentTextField ----
WITHOUT_CLASSIFICATION	// ---- companyTextField ----
WITHOUT_CLASSIFICATION	// ---- managerTextField ----
WITHOUT_CLASSIFICATION	// ---- departmentLabel ----
WITHOUT_CLASSIFICATION	// ---- officeTextField ----
WITHOUT_CLASSIFICATION	// ---- managerLabel ----
WITHOUT_CLASSIFICATION	// ---- notesLabel ----
WITHOUT_CLASSIFICATION	// ---- officeLabel ----
WITHOUT_CLASSIFICATION	// ======== mailingAddressPanel ========
WITHOUT_CLASSIFICATION	// ---- birthdayLabel ----
WITHOUT_CLASSIFICATION	// ---- notesTextArea ----
WITHOUT_CLASSIFICATION	// ======== scrollPane3 ========
WITHOUT_CLASSIFICATION	// ---- privateCityLabel ----
WITHOUT_CLASSIFICATION	// ======== scrollPane1 ========
WITHOUT_CLASSIFICATION	// ---- privateAddressLabel ----
WITHOUT_CLASSIFICATION	// ---- privateCityTextField ----
WITHOUT_CLASSIFICATION	// ---- privateZipPostalCodeLabel ----
WITHOUT_CLASSIFICATION	// ---- label1 ----
WITHOUT_CLASSIFICATION	// ---- privateStateProvinceCountyLabel ----
WITHOUT_CLASSIFICATION	// ---- privatePOBoxLabel ----
WITHOUT_CLASSIFICATION	// ---- privateCountryLabel ----
WITHOUT_CLASSIFICATION	// shortcut key //putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke("B"));
WITHOUT_CLASSIFICATION	// ---- workAddressLabel ----
WITHOUT_CLASSIFICATION	// ======== scrollPane2 ========
WITHOUT_CLASSIFICATION	// ---- workCityLabel ----
WITHOUT_CLASSIFICATION	// ---- workCityTextField ----
WITHOUT_CLASSIFICATION	// ---- workZipPostalCodeLabel ----
WITHOUT_CLASSIFICATION	// ---- label2 ----
WITHOUT_CLASSIFICATION	// ---- workStateProvinceCountyLabel ----
WITHOUT_CLASSIFICATION	// ---- workPOBoxLabel ----
WITHOUT_CLASSIFICATION	// ---- workCountryLabel ----
WITHOUT_CLASSIFICATION	// ---- otherAddressLabel ----
WITHOUT_CLASSIFICATION	// ======== scrollPane4 ========
WITHOUT_CLASSIFICATION	// ---- otherCityLabel ----
WITHOUT_CLASSIFICATION	// ---- otherZipPostalCodeLabel ----
WITHOUT_CLASSIFICATION	// ---- label3 ----
WITHOUT_CLASSIFICATION	// ---- otherStateProvinceCountyLabel ----
WITHOUT_CLASSIFICATION	// ---- otherPOBoxLabel ----
WITHOUT_CLASSIFICATION	// ---- otherCountryLabel ----
WITHOUT_CLASSIFICATION	// ======== buttonBar ========
WITHOUT_CLASSIFICATION	// ---- okButton ----
WITHOUT_CLASSIFICATION	// ---- cancelButton ----
WITHOUT_CLASSIFICATION	// contains "," comma character
WITHOUT_CLASSIFICATION	// contains "," comma character
WITHOUT_CLASSIFICATION	// set title
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	// gettext //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// settext //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//FocusOwner lost = (FocusOwner) map.get(event.getSource());
WITHOUT_CLASSIFICATION	// remove all children
WITHOUT_CLASSIFICATION	// scrollPane.setPreferredSize( new Dimension(200,200) );
WITHOUT_CLASSIFICATION	// add children
WITHOUT_CLASSIFICATION	// this is a headeritem from autocompletion
WITHOUT_CLASSIFICATION	// c.gridwidth = GridBagConstraints.RELATIVE;
WITHOUT_CLASSIFICATION	// in the future, it will be possible to also add new addresses
WITHOUT_CLASSIFICATION	//current = lost;
WITHOUT_CLASSIFICATION	//destinationButton.setText(destinationFolder.getTreePath());
WITHOUT_CLASSIFICATION	// adjust description field
WITHOUT_CLASSIFICATION	// id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	// associate ui component with FocusOwner
WITHOUT_CLASSIFICATION	// true if action is enabled, false otherwiese
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isCutActionEnabled() */
WITHOUT_CLASSIFICATION	//  no component has the focus // -> disable all actions
WITHOUT_CLASSIFICATION	// uncomment to enable action
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	// 
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// create empty value
WITHOUT_CLASSIFICATION	// create identity value
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// modify card properties in folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected contact/group card
WITHOUT_CLASSIFICATION	//					 re-select folder
WITHOUT_CLASSIFICATION	// define false < true
WITHOUT_CLASSIFICATION	// this is needed to update the titlebar
WITHOUT_CLASSIFICATION	// getContainer().setContentPane(this);
WITHOUT_CLASSIFICATION	// initPerspective(this.perspective);
WITHOUT_CLASSIFICATION	// retrieve contact model from folder
WITHOUT_CLASSIFICATION	// manipulateModel(TableModelPlugin.STRUCTURE_CHANGE);
WITHOUT_CLASSIFICATION	// Where, in the drag image, the mouse was clicked
WITHOUT_CLASSIFICATION	// debug messages for diagnostics
WITHOUT_CLASSIFICATION	/*			 * HeaderItem[] items = new HeaderItem[selection1.length]; items =			 * selection1;			 * HeaderItemDNDManager.getInstance().setHeaderItemList(items);			 */
WITHOUT_CLASSIFICATION	/*			 * HeaderItem[] items = new HeaderItem[selection2.length]; items =			 * selection2;			 * HeaderItemDNDManager.getInstance().setHeaderItemList(items);			 */
WITHOUT_CLASSIFICATION	/*		 * dragSource.startDrag( event, new Cursor(Cursor.DEFAULT_CURSOR),		 * ImageLoader.getImageIcon("contact_small","Add16").getImage(), new		 * Point(5, 5), new StringSelection("contact"), this);		 */
WITHOUT_CLASSIFICATION	// removeElement();
WITHOUT_CLASSIFICATION	//setCellRenderer(new AddressbookListRenderer());
WITHOUT_CLASSIFICATION	/*	   * does exactly the same thing as EditPropertiesAction when contact	   * table is focused	   * */
WITHOUT_CLASSIFICATION	// Plain text components don't fire these events
WITHOUT_CLASSIFICATION	// register as focus owner
WITHOUT_CLASSIFICATION	// define false < true
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// TreePath path = tree.getPathForRow(row);
WITHOUT_CLASSIFICATION	// we use the SortDecorator, because the indices are sorted
WITHOUT_CLASSIFICATION	// this.addressbookModel = addressbookModel;
WITHOUT_CLASSIFICATION	// set renderers for columns
WITHOUT_CLASSIFICATION	// return new DefaultHeaderRenderer(controller.getSortDecorator(), // name);
WITHOUT_CLASSIFICATION	// the model which is decorated
WITHOUT_CLASSIFICATION	//setBorder(selectedBorder);
WITHOUT_CLASSIFICATION	//setBorder(unselectedBorder);
WITHOUT_CLASSIFICATION	// create a virtual folder with all messages holding this tag
WITHOUT_CLASSIFICATION	// check if its a contact component
WITHOUT_CLASSIFICATION	// update folder selection
WITHOUT_CLASSIFICATION	// XmlElement.printNode(item.getRoot(), "");
WITHOUT_CLASSIFICATION	// now instanciate the folder classes
WITHOUT_CLASSIFICATION	//		 register as focus owner
WITHOUT_CLASSIFICATION	// private TreeView treeViewer;
WITHOUT_CLASSIFICATION	// public SelectFolderTree tree;
WITHOUT_CLASSIFICATION	/*		 * FolderTreeNode node = tree.getSelectedNode(); FolderItem item =		 * node.getFolderItem();		 */
WITHOUT_CLASSIFICATION	// return item.getUid();
WITHOUT_CLASSIFICATION	// init addressbook plugin handlers //		PluginManager.getInstance().addHandlers( //				"org/columba/addressbook/plugin/pluginhandler.xml");
WITHOUT_CLASSIFICATION	//mainInterface.addressbookInterface.
WITHOUT_CLASSIFICATION	//timer.start();
WITHOUT_CLASSIFICATION	// fall-back to formatted name
WITHOUT_CLASSIFICATION	// fall-back to email address
WITHOUT_CLASSIFICATION	// <sortstring>value</sortstring>
WITHOUT_CLASSIFICATION	// <fn>value</fn>
WITHOUT_CLASSIFICATION	// <nickname>value</nickname>
WITHOUT_CLASSIFICATION	/* multicast bit */
WITHOUT_CLASSIFICATION	// backwards compatibility
WITHOUT_CLASSIFICATION	// backwards compatibility
WITHOUT_CLASSIFICATION	// <email> // <work>value</work> // <home>value</home> // </email>
WITHOUT_CLASSIFICATION	// <n> // <family>value</family> // <given>value</given> // <prefix>value</prefix> // <suffix>value</suffix> // <additionalnames>value</additionalnames> // </n>
WITHOUT_CLASSIFICATION	// <org>value</org>
WITHOUT_CLASSIFICATION	// <url>value</url>
WITHOUT_CLASSIFICATION	// <office>value</office>
WITHOUT_CLASSIFICATION	// <department>value</department>
WITHOUT_CLASSIFICATION	// comma-separated category list // <category>value1,value2,value3</category>
WITHOUT_CLASSIFICATION	// <phone> // <business>value</business> // <home>value</home> // </phone>
WITHOUT_CLASSIFICATION	// <im> // <aol>value</aol> // <yahoo>value</yahoo> // <jabber>value</jabber> // </im>
WITHOUT_CLASSIFICATION	// <adr> // <work> // <pobox>value</pobox> // <street>value</street // .. // </work> // .. // </adr>
WITHOUT_CLASSIFICATION	// base64 encode photo byte[] to string
WITHOUT_CLASSIFICATION	// backwards compatiblity // -> its not possible anymore to create a contact model without email // address
WITHOUT_CLASSIFICATION	// comma-separated category list // <category>value1,value2,value3</category>
WITHOUT_CLASSIFICATION	// compatibility - using SORTSTRING internally
WITHOUT_CLASSIFICATION	// get first item
WITHOUT_CLASSIFICATION	//tstich: CA-41 bugfix
WITHOUT_CLASSIFICATION	// We need a place to store the color the JLabel should be returned // to after its foreground and background colors have been set // to the selection background color. // These ivars will be made protected when their names are finalized.
WITHOUT_CLASSIFICATION	// public String getAgent() { // return agent; // }
WITHOUT_CLASSIFICATION	// create <email> element, if it doesn't exist yet
WITHOUT_CLASSIFICATION	// create <type> element
WITHOUT_CLASSIFICATION	// create <type> element
WITHOUT_CLASSIFICATION	// if not specified return empty iterator
WITHOUT_CLASSIFICATION	// if not specified return empty iterator
WITHOUT_CLASSIFICATION	// if not specified return empty iterator
WITHOUT_CLASSIFICATION	// iterate over all type elements
WITHOUT_CLASSIFICATION	// create <adr>, if it doesn't exist
WITHOUT_CLASSIFICATION	// create a CDATA section for the label
WITHOUT_CLASSIFICATION	// exit immediately, nothing more to do
WITHOUT_CLASSIFICATION	// exit immediately, nothing more to do
WITHOUT_CLASSIFICATION	// create jpim contact instance
WITHOUT_CLASSIFICATION	// set sort-string/displayname
WITHOUT_CLASSIFICATION	// set first name
WITHOUT_CLASSIFICATION	// set formatted name
WITHOUT_CLASSIFICATION	// set last name
WITHOUT_CLASSIFICATION	// add all additional names (middle names)
WITHOUT_CLASSIFICATION	// add all nicknames
WITHOUT_CLASSIFICATION	// add all prefixes
WITHOUT_CLASSIFICATION	// set website/homepage
WITHOUT_CLASSIFICATION	// add email addresses
WITHOUT_CLASSIFICATION	// add all addresses
WITHOUT_CLASSIFICATION	// set name of organization
WITHOUT_CLASSIFICATION	// save contact to outputstream
WITHOUT_CLASSIFICATION	// sort-string
WITHOUT_CLASSIFICATION	// list of nick names
WITHOUT_CLASSIFICATION	// list of additional names (middle names)
WITHOUT_CLASSIFICATION	// list of suffices
WITHOUT_CLASSIFICATION	// formatted name
WITHOUT_CLASSIFICATION	// birthday
WITHOUT_CLASSIFICATION	// url to website/homepage
WITHOUT_CLASSIFICATION	// address list
WITHOUT_CLASSIFICATION	// not that the editor ui only supports max of 3 addresses to edit
WITHOUT_CLASSIFICATION	// name of organisation
WITHOUT_CLASSIFICATION	// dummy address
WITHOUT_CLASSIFICATION	// 2 columns
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	/*	 * @see TestCase#setUp()	 */
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// DocumentListener Methods
WITHOUT_CLASSIFICATION	// select first item
WITHOUT_CLASSIFICATION	// delete folder
WITHOUT_CLASSIFICATION	// update folder selection
WITHOUT_CLASSIFICATION	//setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
WITHOUT_CLASSIFICATION	//scrollPane.setBorder(null);
WITHOUT_CLASSIFICATION	// create list of contact folders
WITHOUT_CLASSIFICATION	// remember search result
WITHOUT_CLASSIFICATION	// doesn't support search inside yet
WITHOUT_CLASSIFICATION	/*	 * Class under test for HeaderItemList getHeaderItemList()	 */
WITHOUT_CLASSIFICATION	/*	 * Class under test for Object add(Contact)	 */
WITHOUT_CLASSIFICATION	//		 create config-folder
WITHOUT_CLASSIFICATION	//new Config(file);
WITHOUT_CLASSIFICATION	// now load all available plugins
WITHOUT_CLASSIFICATION	// delete all mails in folder
WITHOUT_CLASSIFICATION	/*	 * Class under test for void remove(Object)	 */
WITHOUT_CLASSIFICATION	// Condition
WITHOUT_CLASSIFICATION	// passive: if not initialized do it now
WITHOUT_CLASSIFICATION	//	public Object getObject(ILocator locator); //	public IStructureValue getChild(ILocator locator);
WITHOUT_CLASSIFICATION	//	String getProperty(String name); //	void setProperty(String name, String value); //	 //	Hashtable getProperties();
WITHOUT_CLASSIFICATION	// if path startsWith "/" -> skip
WITHOUT_CLASSIFICATION	// print attributes
WITHOUT_CLASSIFICATION	//Hashcode value should be buffered.
WITHOUT_CLASSIFICATION	// END public class XmlElement
WITHOUT_CLASSIFICATION	// needed for hibernate!
WITHOUT_CLASSIFICATION	// passive: if not initialized do it now
WITHOUT_CLASSIFICATION	// still not ready, exit!
WITHOUT_CLASSIFICATION	// still not ready, exit!
WITHOUT_CLASSIFICATION	// transaction is needed for the underlying jpa architecture
WITHOUT_CLASSIFICATION	// transaction is needed for the underlying jpa architecture
WITHOUT_CLASSIFICATION	// transaction is needed for the underlying jpa architecture
WITHOUT_CLASSIFICATION	// disable logging for the startup
WITHOUT_CLASSIFICATION	// set console handler to OFF
WITHOUT_CLASSIFICATION	//ShutdownManager.getInstance().register(this);
WITHOUT_CLASSIFICATION	// start HSQLDB
WITHOUT_CLASSIFICATION	// do not start a second time!
WITHOUT_CLASSIFICATION	// start JPA entity manager
WITHOUT_CLASSIFICATION	// restore log level
WITHOUT_CLASSIFICATION	// still not ready, exit!
WITHOUT_CLASSIFICATION	// creates a shallow // copy of this // object
WITHOUT_CLASSIFICATION	// passive: if not initialized do it now
WITHOUT_CLASSIFICATION	// more than one item, very strange! duplicate entries! remove // all
WITHOUT_CLASSIFICATION	// refers to the // entry in // persistence.xml
WITHOUT_CLASSIFICATION	// no item exists in table // -> nothing todo
WITHOUT_CLASSIFICATION	// shutdown hsql
WITHOUT_CLASSIFICATION	// if the database is not started, don't do it
WITHOUT_CLASSIFICATION	// shutdown entity manager
WITHOUT_CLASSIFICATION	// one second (=1000 ms)
WITHOUT_CLASSIFICATION	// sleep 5 minutes
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)         */
WITHOUT_CLASSIFICATION	// test if a task is already running
WITHOUT_CLASSIFICATION	// no java task running -> start background tasks
WITHOUT_CLASSIFICATION	// grab a part of aInput which does not include aOldPattern
WITHOUT_CLASSIFICATION	// add aNewPattern to take place of aOldPattern
WITHOUT_CLASSIFICATION	// the final chunk will go to the end of aInput
WITHOUT_CLASSIFICATION	// Check for no property
WITHOUT_CLASSIFICATION	// return true for new files
WITHOUT_CLASSIFICATION	// a < b
WITHOUT_CLASSIFICATION	// a < b
WITHOUT_CLASSIFICATION	// a == b
WITHOUT_CLASSIFICATION	// a == b
WITHOUT_CLASSIFICATION	// a > b
WITHOUT_CLASSIFICATION	// a > b
WITHOUT_CLASSIFICATION	// Platform identifiers: Windows, Linux, Mac OS, ...
WITHOUT_CLASSIFICATION	// Single OS identifiers: Window 95, Window 98, ...
WITHOUT_CLASSIFICATION	/* version 4 */
WITHOUT_CLASSIFICATION	/* IETF variant */
WITHOUT_CLASSIFICATION	// startIdx and idxOld delimit various chunks of aInput; these // chunks always end where aOldPattern begins
WITHOUT_CLASSIFICATION	// reset the startIdx to just after the current match, to see // if there are any further matches
WITHOUT_CLASSIFICATION	// threadVar;
WITHOUT_CLASSIFICATION	// following java guidelines I'm setting this to low priority // -> this should make the gui more responsive, because the // -> background worker has low priority whereas the gui worker // -> has normal priority
WITHOUT_CLASSIFICATION	// Is it already locked from locker ?
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.core.taskmanager.ITaskManager#register(org.columba.core.command.Worker)         */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.core.taskmanager.ITaskManager#unregister(org.columba.core.util.SwingWorker.ThreadVar)         */
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// see getValue(), setValue()
WITHOUT_CLASSIFICATION	// propagate
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// Check if locked
WITHOUT_CLASSIFICATION	// Initialize the cipher for encryption
WITHOUT_CLASSIFICATION	// Initialize the cipher for encryption
WITHOUT_CLASSIFICATION	// Encrypt the cleartext
WITHOUT_CLASSIFICATION	// Encrypt the cleartext
WITHOUT_CLASSIFICATION	// Return a String representation of the cipher text
WITHOUT_CLASSIFICATION	// Our cleartext as bytes
WITHOUT_CLASSIFICATION	// Wake up the others!
WITHOUT_CLASSIFICATION	//public int type;
WITHOUT_CLASSIFICATION	// gota go now
WITHOUT_CLASSIFICATION	// else keep waiting
WITHOUT_CLASSIFICATION	// exception handler should handle all error handling stuff
WITHOUT_CLASSIFICATION	// Must create a ExceptionProcessor
WITHOUT_CLASSIFICATION	// init event
WITHOUT_CLASSIFICATION	// "new value" is used to pass on the delay
WITHOUT_CLASSIFICATION	// fire event
WITHOUT_CLASSIFICATION	// Create the cipher //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Our cleartext as bytes //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Create the cipher //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Return a String representation of the cipher text //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// set display text stored here to an empty string (~ cleared) //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Remove bogus Operation
WITHOUT_CLASSIFICATION	// Create the workers
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.core.taskmanager.ITaskManager#addTaskManagerListener(org.columba.core.taskmanager.TaskManagerListener)         */
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// notify that a new worker is available
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$
WITHOUT_CLASSIFICATION	// make a deep copy
WITHOUT_CLASSIFICATION	// Sort in with respect to priority and synchronize: // Commands with higher priority will be processed // before commands with lower priority. // If there is a command that is of type synchronize // don't put this command in front.
WITHOUT_CLASSIFICATION	// retrieve plugin manager instance
WITHOUT_CLASSIFICATION	// We have to process this command first // -> break here!
WITHOUT_CLASSIFICATION	/*		 * XmlElement child = getRoot().getElement(pathToElement);		 * 		 * return child;		 */
WITHOUT_CLASSIFICATION	// nothing to do yet
WITHOUT_CLASSIFICATION	// nothing to do yet
WITHOUT_CLASSIFICATION	// nothing to do yet
WITHOUT_CLASSIFICATION	// load config-file from disk
WITHOUT_CLASSIFICATION	// fall back to default path
WITHOUT_CLASSIFICATION	// final String key = (String) keys.next();
WITHOUT_CLASSIFICATION	// this is no integer value
WITHOUT_CLASSIFICATION	// Do nothing if we are hovering over the root node
WITHOUT_CLASSIFICATION	// initialize default view options
WITHOUT_CLASSIFICATION	// tstich: Default values are set in the loadPostions() method
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.api.command.IStatusObservable#getCancelled()         */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.core.config.IConfig#getConfigDirectory()	 */
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// // views.xml // // <view header="100" header_enabled="true" id="ThreePaneMail" // infopanel="true" main="100"> // <window maximized="true" height="721" width="1034" y="26" x="0"></window> // <toolbars infopanel="true" main="true"></toolbars> // <splitpanes header="200" header_enabled="true" main="283" // attachment="100"></splitpanes> // </view>
WITHOUT_CLASSIFICATION	//  // options.xml: // //<gui> // <theme name="Plastic" theme="Experience Blue"></theme> // <fonts overwrite="false"> //  <text name="Default" size="12"></text> //  <main name="Default" size="12"></main> // </fonts> // <toolbar text_position="false" enable_icon="true" enable_text="true"></toolbar> //</gui>
WITHOUT_CLASSIFICATION	// callback
WITHOUT_CLASSIFICATION	// if everything worked out all right, we copy the tmp file to the destination file
WITHOUT_CLASSIFICATION	// create initial version from default configuration file
WITHOUT_CLASSIFICATION	// return plain document
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// load xml configuration from file
WITHOUT_CLASSIFICATION	// notify all listeners that search is finished
WITHOUT_CLASSIFICATION	// check if default value exists
WITHOUT_CLASSIFICATION	// remove old
WITHOUT_CLASSIFICATION	// contains already a single element
WITHOUT_CLASSIFICATION	// create empty list
WITHOUT_CLASSIFICATION	// create empty structure value
WITHOUT_CLASSIFICATION	// initialize context
WITHOUT_CLASSIFICATION	// identity definition
WITHOUT_CLASSIFICATION	// MULTIPLICITY.ZERO_TO_ONE is default
WITHOUT_CLASSIFICATION	// date time timezone definition
WITHOUT_CLASSIFICATION	// date range (start time, end time) definition
WITHOUT_CLASSIFICATION	// document definition
WITHOUT_CLASSIFICATION	// notify all listeners
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// register at shutdown manager // -> this will save all configuration data, when closing Columba
WITHOUT_CLASSIFICATION	// icons // putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("mail-read.png")); // putValue(LARGE_ICON, ImageLoader.getImageIcon("mail-read.png"));
WITHOUT_CLASSIFICATION	// notify all listeners that have a new search result // ensure this is called in the EDT
WITHOUT_CLASSIFICATION	// <context> // <core> // <identity> // </identity> // <datetime> // </datetime> // </core> // </context>
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// locale definition
WITHOUT_CLASSIFICATION	// list of attachments
WITHOUT_CLASSIFICATION	// single attachment
WITHOUT_CLASSIFICATION	// message
WITHOUT_CLASSIFICATION	// single sender - re-use identity type
WITHOUT_CLASSIFICATION	// re-use identity type for recipient list
WITHOUT_CLASSIFICATION	// message body
WITHOUT_CLASSIFICATION	// message contains list of attachments
WITHOUT_CLASSIFICATION	// replace "%1" parameter with file argument ...
WITHOUT_CLASSIFICATION	// ... or, add the file in case there was no "%1" used
WITHOUT_CLASSIFICATION	// Wait for external editor to quit
WITHOUT_CLASSIFICATION	// Try the built-in mime table
WITHOUT_CLASSIFICATION	// Try the built-in mime table
WITHOUT_CLASSIFICATION	// check if service is registered
WITHOUT_CLASSIFICATION	// retrieve service instance
WITHOUT_CLASSIFICATION	// load instance of service
WITHOUT_CLASSIFICATION	/*		 * int index = list.size() - 1;		 * 		 * remove(index);		 */
WITHOUT_CLASSIFICATION	// Condition
WITHOUT_CLASSIFICATION	/*	 * public FilterCriteria getCriteria(int index) { return (FilterCriteria)	 * list.get(index); }	 */
WITHOUT_CLASSIFICATION	// if win32 platform, prepend cmd.exe // necessary for system environment variables usage
WITHOUT_CLASSIFICATION	// check if there's already an instanciation available // we can reuse here
WITHOUT_CLASSIFICATION	/*		 * action.addAttribute( "class",		 * "org.columba.mail.filter.action.MarkMessageAsReadFilterAction");		 */
WITHOUT_CLASSIFICATION	// example configuration (tree.xml) // // <actionlist> //  <action uid="122" type="Move Message"></action> // </actionlist>
WITHOUT_CLASSIFICATION	// folder uid doesn't exist //  -> create default value
WITHOUT_CLASSIFICATION	// XmlElement.printNode(getRoot(),"");
WITHOUT_CLASSIFICATION	// condition: match all (AND) = 0, match any (OR) = 1 // private AdapterNode conditionNode;
WITHOUT_CLASSIFICATION	/*		 * setTextValue(conditionNode, s);		 */
WITHOUT_CLASSIFICATION	/*		 * //AdapterNode filterListNode = getFilterListNode();		 * 		 * AdapterNode node =		 * MailInterface.config.getFolderConfig().addEmptyFilterNode(		 * getFolder().getNode() ); Filter filter = new Filter( node );		 * 		 * add( filter );		 * 		 * return filter;		 */
WITHOUT_CLASSIFICATION	// list.add(f);
WITHOUT_CLASSIFICATION	// if folder creation failed // -> don't update tree ui
WITHOUT_CLASSIFICATION	// sorting is disabled
WITHOUT_CLASSIFICATION	//action.addAttribute("class", "org.columba.mail.filter.action.MarkMessageAsReadFilterAction");
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	// Set text, possibly with a mnemonic if defined using &
WITHOUT_CLASSIFICATION	// set display text - possible with a mnemonic defined using &
WITHOUT_CLASSIFICATION	//repaint(x, y, width, height);
WITHOUT_CLASSIFICATION	//setFont( UIManager.getFont("TextField.font") );
WITHOUT_CLASSIFICATION	//setIcon(ImageLoader.getImageIcon("stock_down-16.png"));
WITHOUT_CLASSIFICATION	//add( panel, BorderLayout.CENTER );
WITHOUT_CLASSIFICATION	//add( panel, BorderLayout.CENTER );
WITHOUT_CLASSIFICATION	// g.drawRect(0, 0, w - 3, h - 3);
WITHOUT_CLASSIFICATION	// left
WITHOUT_CLASSIFICATION	// top
WITHOUT_CLASSIFICATION	// right
WITHOUT_CLASSIFICATION	// right
WITHOUT_CLASSIFICATION	// bottom
WITHOUT_CLASSIFICATION	// bottom
WITHOUT_CLASSIFICATION	// //		 w+=1; //			h+=1; //		 g.setColor(edge); //		 // bottom //		 g.drawLine(x+2, h, x+w, h ); //		 // right //		 g.drawLine(x+w, y+ovalHeight+2, x+w , y+h);
WITHOUT_CLASSIFICATION	// Java 1.5 enumeration
WITHOUT_CLASSIFICATION	// paint original first
WITHOUT_CLASSIFICATION	// augment x.
WITHOUT_CLASSIFICATION	// augment y.
WITHOUT_CLASSIFICATION	// set display text - possibly with a mnemonic defined using &
WITHOUT_CLASSIFICATION	/* CEDRIC: not used right now. */
WITHOUT_CLASSIFICATION	// private ActionSupport asupport;
WITHOUT_CLASSIFICATION	// private JLabel l_date, l_year, l_month;
WITHOUT_CLASSIFICATION	// private JLabel l_date, l_year, l_month;
WITHOUT_CLASSIFICATION	// private JButton b_lyear, b_ryear, b_lmonth, b_rmonth;
WITHOUT_CLASSIFICATION	// private JButton b_lyear, b_ryear, b_lmonth, b_rmonth;
WITHOUT_CLASSIFICATION	// asupport = new ActionSupport(this);
WITHOUT_CLASSIFICATION	// Let's at least make a half-assed attempt at conforming to the Metal // PLAF colors.
WITHOUT_CLASSIFICATION	// top.setBorder( BorderFactory.createEtchedBorder() );
WITHOUT_CLASSIFICATION	// b_lmonth.setFocusPainted(false); // b_lmonth.setOpaque(false); // b_lmonth.addActionListener(this);
WITHOUT_CLASSIFICATION	// p1.add(l_month);
WITHOUT_CLASSIFICATION	/*		 * Font f = getFont(); setFont(new Font(f.getName(), Font.BOLD,		 * f.getSize()));		 */
WITHOUT_CLASSIFICATION	/* Copy the relevant portions of a date. */
WITHOUT_CLASSIFICATION	// asupport.addActionListener(listener);
WITHOUT_CLASSIFICATION	// asupport.removeActionListener(listener);
WITHOUT_CLASSIFICATION	/*		 * asupport.fireActionEvent(((o == b_lmonth) || (o == b_rmonth)) ?		 * MONTH_CHANGE_CMD : YEAR_CHANGE_CMD);		 */
WITHOUT_CLASSIFICATION	/*	 * Determine what day of week the first day of the month falls on. It's too	 * bad we have to resort to this hack; the Java API provides no means of	 * doing this any other way.	 */
WITHOUT_CLASSIFICATION	/*	 * This method is called whenever the month or year changes. It's job is to	 * repaint the labels and determine whether any selection range limits have	 * been reached.	 */
WITHOUT_CLASSIFICATION	// l_year.setText(String.valueOf(selectedDate.get(Calendar.YEAR)));
WITHOUT_CLASSIFICATION	// b_lyear.setEnabled(true); // b_ryear.setEnabled(true);
WITHOUT_CLASSIFICATION	// Disable anything that would cause the date to go out of range. This // logic is extremely sensitive so be very careful when making changes. // Every condition test in here is necessary, so don't remove anything.
WITHOUT_CLASSIFICATION	// b_lyear.setEnabled(y > y0);
WITHOUT_CLASSIFICATION	// allow out-of-range selection // selectedDate.set(Calendar.DATE, selectedDay);
WITHOUT_CLASSIFICATION	// allow out-of-range selection // selectedDate.set(Calendar.DATE, selectedDay);
WITHOUT_CLASSIFICATION	// b_ryear.setEnabled(y < y1);
WITHOUT_CLASSIFICATION	// repaint the calendar pane
WITHOUT_CLASSIFICATION	// figure out how many blank spaces there are before first day of // month, // and calculate coordinates of first drawn cell
WITHOUT_CLASSIFICATION	// paint the border
WITHOUT_CLASSIFICATION	// set the clip rect to exclude the border & insets
WITHOUT_CLASSIFICATION	// draw the weekday headings
WITHOUT_CLASSIFICATION	// find out how many days there are in the current month
WITHOUT_CLASSIFICATION	// draw all the day cells
WITHOUT_CLASSIFICATION	// draw the outline of the cell // gc.setColor(MetalLookAndFeel.getPrimaryControlShadow());
WITHOUT_CLASSIFICATION	// set the pen color depending on weekday or weekend, and paint // the // day number in the cell
WITHOUT_CLASSIFICATION	// advance to the next cell position
WITHOUT_CLASSIFICATION	/* Get the preferred size of the component. */
WITHOUT_CLASSIFICATION	/* Get the minimum size of the component. */
WITHOUT_CLASSIFICATION	/* Figure out which day the mouse click is on. */
WITHOUT_CLASSIFICATION	// check if totally out of range.
WITHOUT_CLASSIFICATION	/* mouse listener */
WITHOUT_CLASSIFICATION	// asupport.fireActionEvent(DATE_CHANGE_CMD);
WITHOUT_CLASSIFICATION	// border
WITHOUT_CLASSIFICATION	// Set text, possibly with a mnemonic if defined using &
WITHOUT_CLASSIFICATION	// set display text - possible with a mnemonic defined using &
WITHOUT_CLASSIFICATION	// setText(treeNode.getName()); // setIcon(getFolderIcon(treeNode, expanded));
WITHOUT_CLASSIFICATION	//setBackground(new Color(236, 233, 216));
WITHOUT_CLASSIFICATION	// don't override update(), get the default clear
WITHOUT_CLASSIFICATION	// Enable JavaHelp support if topic id is defined
WITHOUT_CLASSIFICATION	// apply transparent icon
WITHOUT_CLASSIFICATION	/*setIconTextGap(5);setVerticalAlignment(JLabel.CENTER);*/
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	// search for mnemonic
WITHOUT_CLASSIFICATION	// mnemonic found // ...and not at the end of the string (which doesn't make sence)
WITHOUT_CLASSIFICATION	// if mnemonic is first character of this string
WITHOUT_CLASSIFICATION	// if mnemonic is first character of this string
WITHOUT_CLASSIFICATION	// set display text
WITHOUT_CLASSIFICATION	// set display text
WITHOUT_CLASSIFICATION	// set mnemonic
WITHOUT_CLASSIFICATION	// set mnemonic
WITHOUT_CLASSIFICATION	// no mnemonic found - just set the text on the menu item
WITHOUT_CLASSIFICATION	// no mnemonic found - just set the text on the menu item
WITHOUT_CLASSIFICATION	//RGB values discovered using ZoomIn
WITHOUT_CLASSIFICATION	//Dimensions
WITHOUT_CLASSIFICATION	//Layout a row and column "grid"
WITHOUT_CLASSIFICATION	//Draw the white squares first, so the gray squares will overlap
WITHOUT_CLASSIFICATION	//draw the gray squares overlapping the white background squares
WITHOUT_CLASSIFICATION	// initialization
WITHOUT_CLASSIFICATION	// controller
WITHOUT_CLASSIFICATION	// draw horizontal lines
WITHOUT_CLASSIFICATION	// draw vertical lines
WITHOUT_CLASSIFICATION	// Add the default colors items.
WITHOUT_CLASSIFICATION	// The length is 1 if no item is selected
WITHOUT_CLASSIFICATION	//$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Instance Creation *****************************************************
WITHOUT_CLASSIFICATION	// Accessing Properties **************************************************
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	// Constructor...	
WITHOUT_CLASSIFICATION	//cache the old color //set the white color //draw the square //reset the old color
WITHOUT_CLASSIFICATION	//insets.top    += spacing; //insets.bottom += spacing;
WITHOUT_CLASSIFICATION	//if we stopped at line break, increase array index pointer
WITHOUT_CLASSIFICATION	//increase minimum height by line height and line spacing
WITHOUT_CLASSIFICATION	//add the component's border insets to our minimum dimension
WITHOUT_CLASSIFICATION	//check for line breaks
WITHOUT_CLASSIFICATION	//put them into the array
WITHOUT_CLASSIFICATION	//draw line
WITHOUT_CLASSIFICATION	//String userVisibleName = pluginHandler.getUserVisibleName(id);
WITHOUT_CLASSIFICATION	// button panel
WITHOUT_CLASSIFICATION	// button panel
WITHOUT_CLASSIFICATION	// look and feel
WITHOUT_CLASSIFICATION	// fonts
WITHOUT_CLASSIFICATION	// fonts
WITHOUT_CLASSIFICATION	// fonts
WITHOUT_CLASSIFICATION	// toolbar
WITHOUT_CLASSIFICATION	// language
WITHOUT_CLASSIFICATION	// language
WITHOUT_CLASSIFICATION	// HTTP proxy
WITHOUT_CLASSIFICATION	// ID of configuration plugin of this theme plugin
WITHOUT_CLASSIFICATION	// get theme plugin-handler
WITHOUT_CLASSIFICATION	// get config plugin-handler
WITHOUT_CLASSIFICATION	// enable/disable button, too
WITHOUT_CLASSIFICATION	// select Locale in ComboBox
WITHOUT_CLASSIFICATION	// get language configuration
WITHOUT_CLASSIFICATION	// set language config based on selected item
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// 3 columns
WITHOUT_CLASSIFICATION	// skip the first column
WITHOUT_CLASSIFICATION	// Add components to the panel:
WITHOUT_CLASSIFICATION	// init bottom panel with OK, Cancel buttons
WITHOUT_CLASSIFICATION	// switch to new theme
WITHOUT_CLASSIFICATION	// notify frame to update
WITHOUT_CLASSIFICATION	// set fonts
WITHOUT_CLASSIFICATION	// collapsible.getContentPane().setBackground(Color.WHITE);
WITHOUT_CLASSIFICATION	// use the collapse/expand icons from the JTree UI
WITHOUT_CLASSIFICATION	// link.setFont(link.getFont().deriveFont(Font.BOLD));
WITHOUT_CLASSIFICATION	// link.setBackground(titleBackground);
WITHOUT_CLASSIFICATION	//SystemColor.controlLtHighlight,
WITHOUT_CLASSIFICATION	// if the collapsible is collapsed, we do not want its border to be // painted.
WITHOUT_CLASSIFICATION	//			g.setColor(borderColor2); //			g.drawLine(x, y + height - 1, x + width, y + height - 1);
WITHOUT_CLASSIFICATION	/*         * bottomPanel.setBorder(new WizardTopBorder()); Border border =         * bottomPanel.getBorder(); Border margin =         * BorderFactory.createEmptyBorder(15, 10, 10, 10);         * bottomPanel.setBorder(new CompoundBorder(border, margin));         */
WITHOUT_CLASSIFICATION	// centerPanel.add(label, cc.xywh(3, 1, 1, 1));
WITHOUT_CLASSIFICATION	// buttonPanel.add(reportBugButton);
WITHOUT_CLASSIFICATION	/*		 * FormLayout layout = new FormLayout("default", "default, default");		 * IContainer c = getContentPane(); c.setLayout(layout);		 * 		 * CellConstraints cc = new CellConstraints();		 * c.add(createCenterPanel(detailsButton.isSelected()), cc.xy(1, 1));		 * c.add(bottomPanel, cc.xy(1, 2));		 */
WITHOUT_CLASSIFICATION	// Spacings
WITHOUT_CLASSIFICATION	// First Line with Labels
WITHOUT_CLASSIFICATION	// Second Line with Names
WITHOUT_CLASSIFICATION	// Third Line with Lists
WITHOUT_CLASSIFICATION	// 4. Line with PreviewLabel
WITHOUT_CLASSIFICATION	// 5. Line with Preview
WITHOUT_CLASSIFICATION	// 6. Line with Buttons
WITHOUT_CLASSIFICATION	//String envfonts[] = gEnv.getAvailableFontFamilyNames();
WITHOUT_CLASSIFICATION	//fill sizes string array with numbers from 7 to 18
WITHOUT_CLASSIFICATION	// this.contentPane = comp;
WITHOUT_CLASSIFICATION	// label.setFont(UIManager.getFont("Label.font").deriveFont(Font.PLAIN));
WITHOUT_CLASSIFICATION	// builder.addFixedNarrow((JButton) rightButtonVector.get(i));
WITHOUT_CLASSIFICATION	// ButtonBarBuilder builder2 = new ButtonBarBuilder(buttonWestPanel);
WITHOUT_CLASSIFICATION	// builder2.addGlue();
WITHOUT_CLASSIFICATION	// builder2.addStrut(Sizes.pixel(4));
WITHOUT_CLASSIFICATION	// ButtonBarBuilder builder = new ButtonBarBuilder(buttonEastPanel); // // builder.addGlue();
WITHOUT_CLASSIFICATION	// JPanel p = new JPanel(); // p.setLayout(new FlowLayout());
WITHOUT_CLASSIFICATION	// g2.setColor(fillColor); // g2.fillRect(0,0,w,h);
WITHOUT_CLASSIFICATION	/* If this is a unix-based system, check the 2 best-known areas for the * aspell binary. */
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	//setMargin(new Insets(0,0,0,0));
WITHOUT_CLASSIFICATION	// this property is ignored under java 1.5.
WITHOUT_CLASSIFICATION	// menu.setVisible(true);
WITHOUT_CLASSIFICATION	// DockingManager.(DockableView.this);
WITHOUT_CLASSIFICATION	// process exception -> show error dialog to user
WITHOUT_CLASSIFICATION	// Print the stacktrace to our log file.
WITHOUT_CLASSIFICATION	//does not happen
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	//does not happen
WITHOUT_CLASSIFICATION	// show error dialog, with exception message and stack-trace // -> dialog also provides a button for the user to easily // -> report a bug
WITHOUT_CLASSIFICATION	// result.append(", ");
WITHOUT_CLASSIFICATION	/* RIYAD: The Prefs API cannot be used to read the Window's registry, * it is coded to use the registry (if available) as a backing store * on in the SOFTWARE/JavaSoft/Prefs registry keys for HKEY_CURRENT_USER * and HKEY_LOCAL_MACHINE paths. I have seen a few java apps that use * the Windows registry and they all required a native lib to do it. */
WITHOUT_CLASSIFICATION	/* RIYAD: The Prefs API cannot be used to read the Window's registry, * it is coded to use the registry (if available) as a backing store * on in the SOFTWARE/JavaSoft/Prefs registry keys for HKEY_CURRENT_USER * and HKEY_LOCAL_MACHINE paths. I have seen a few java apps that use * the Windows registry and they all required a native lib to do it. */
WITHOUT_CLASSIFICATION	/* If this is windows, check the default installation location for the * aspell.exe binary. */
WITHOUT_CLASSIFICATION	/* Couldn't find anything, so return null and let the wizard ask the * user. */
WITHOUT_CLASSIFICATION	/* Couldn't find anything, so return null and let the wizard ask the * user. */
WITHOUT_CLASSIFICATION	// check configuration
WITHOUT_CLASSIFICATION	// create xml node
WITHOUT_CLASSIFICATION	// start the configuration wizard
WITHOUT_CLASSIFICATION	// ok, now the tool is initialized correctly
WITHOUT_CLASSIFICATION	// get location of executable
WITHOUT_CLASSIFICATION	// get plugin ID
WITHOUT_CLASSIFICATION	// get configuration
WITHOUT_CLASSIFICATION	// set configuration of this plugin
WITHOUT_CLASSIFICATION	// exit for-loop
WITHOUT_CLASSIFICATION	/* GPG for windows is an executable-only download, fortunately there is * a windows registry file included in the download and has this as the * default installation path in it. While users will probably install GPG * into many other places, this is atleast a best-guess start. */
WITHOUT_CLASSIFICATION	/* If this is a unix-based system, check the 2 best-known areas for the * gpg binary. */
WITHOUT_CLASSIFICATION	/* If this is windows, check the default installation location for the * gpg.exe binary. */
WITHOUT_CLASSIFICATION	// init component before querying for sourceFile
WITHOUT_CLASSIFICATION	// get plugin handler for handling frames
WITHOUT_CLASSIFICATION	// store every open frame in our temporary list
WITHOUT_CLASSIFICATION	// close every open frame
WITHOUT_CLASSIFICATION	// if not we haven't actually closed a frame, leave viewList as is
WITHOUT_CLASSIFICATION	// load all frames from configuration file
WITHOUT_CLASSIFICATION	// get element from view list
WITHOUT_CLASSIFICATION	// should not occur
WITHOUT_CLASSIFICATION	// fall-back
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// used to temporarily store the values while the original // viewList gets modified by the close method
WITHOUT_CLASSIFICATION	// we cannot use an iterator here because the close method // manipulates the list
WITHOUT_CLASSIFICATION	// the close method manipulates the viewList so we have to // remove the existing element and fill in our temporarily // stored ones
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// found cached instance // -> re-use this instance and remove it from cache
WITHOUT_CLASSIFICATION	// create new instance // -> get frame controller using the plugin handler found above
WITHOUT_CLASSIFICATION	// look for default view settings (if not found, null is returned)
WITHOUT_CLASSIFICATION	// look for default view settings (if not found, null is returned)
WITHOUT_CLASSIFICATION	// Create a frame controller for this view // view = null => defaults specified by frame controller is used
WITHOUT_CLASSIFICATION	// cancel, if we show already correct frame mediator
WITHOUT_CLASSIFICATION	// Create a frame controller for this view
WITHOUT_CLASSIFICATION	// save old framemediator in cache (use containers's old id)
WITHOUT_CLASSIFICATION	// If defaultViews doesn't exist, create it (backward compatibility)
WITHOUT_CLASSIFICATION	// search through defaultViews to get settings for given id
WITHOUT_CLASSIFICATION	// nothing to save
WITHOUT_CLASSIFICATION	// removed previous default values
WITHOUT_CLASSIFICATION	// store current view settings
WITHOUT_CLASSIFICATION	// Check if the frame controller has been registered, else do nothing
WITHOUT_CLASSIFICATION	// save in cache
WITHOUT_CLASSIFICATION	// this is the last frame so store its data in the viewList
WITHOUT_CLASSIFICATION	// shutdown Columba if no frame exists anymore
WITHOUT_CLASSIFICATION	//Can we use the Java way to maximize the window
WITHOUT_CLASSIFICATION	//We can use the Java way to maximize the window
WITHOUT_CLASSIFICATION	// clear the tooltip message previously displayed in the status bar
WITHOUT_CLASSIFICATION	// Menuitems use this to display a string in the statusbar
WITHOUT_CLASSIFICATION	// init selection handler
WITHOUT_CLASSIFICATION	// overwrite this method
WITHOUT_CLASSIFICATION	// overwrite this method
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// make sure there is nothing within the root dockingport
WITHOUT_CLASSIFICATION	// overwrite this method
WITHOUT_CLASSIFICATION	// overwrite this method
WITHOUT_CLASSIFICATION	// overwrite this method
WITHOUT_CLASSIFICATION	// createMenuBar();
WITHOUT_CLASSIFICATION	// load docking settings from last user session
WITHOUT_CLASSIFICATION	// JPanel panel = (JPanel) this.getContentPane();
WITHOUT_CLASSIFICATION	// convert region enum to flexdock string
WITHOUT_CLASSIFICATION	// create new default frame controller
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// create menu
WITHOUT_CLASSIFICATION	// add statusbar
WITHOUT_CLASSIFICATION	// Set the icon and the title
WITHOUT_CLASSIFICATION	// create toolbar
WITHOUT_CLASSIFICATION	// register statusbar at global taskmanager
WITHOUT_CLASSIFICATION	// contentPane.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
WITHOUT_CLASSIFICATION	// remove from old mediator's listener list
WITHOUT_CLASSIFICATION	// contentPane.add(dockingPort, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// add window listener
WITHOUT_CLASSIFICATION	// turn on floating support
WITHOUT_CLASSIFICATION	// enable flexdock ghost preview
WITHOUT_CLASSIFICATION	// update content-pane
WITHOUT_CLASSIFICATION	// update content-pane
WITHOUT_CLASSIFICATION	// add to new mediator's listener list
WITHOUT_CLASSIFICATION	// add to new mediator's listener list
WITHOUT_CLASSIFICATION	// default core menu
WITHOUT_CLASSIFICATION	// setJMenuBar(menubar);
WITHOUT_CLASSIFICATION	// default toolbar
WITHOUT_CLASSIFICATION	// *20030831, karlpeder* Also location is restored
WITHOUT_CLASSIFICATION	// if window is maximized -> ignore the window size properties // otherwise, use window size property // but ensure that the window is completly visible on the // desktop
WITHOUT_CLASSIFICATION	// *20030831, karlpeder* Now also location is stored
WITHOUT_CLASSIFICATION	// retrieve metadata
WITHOUT_CLASSIFICATION	// add action to menu
WITHOUT_CLASSIFICATION	// remove old content pane
WITHOUT_CLASSIFICATION	// contentPane.remove(mediator.getContentPane());
WITHOUT_CLASSIFICATION	// add animated icon to right-hand side corner of menubar
WITHOUT_CLASSIFICATION	// // add new componnet
WITHOUT_CLASSIFICATION	// show/hide new toolbar
WITHOUT_CLASSIFICATION	// getContentPane().validate();
WITHOUT_CLASSIFICATION	// save window position
WITHOUT_CLASSIFICATION	// hide window
WITHOUT_CLASSIFICATION	// don't do anything
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// if window is maximized -> ignore the window size properties // otherwise, use window size property // but ensure that the window is completly visible on the // desktop
WITHOUT_CLASSIFICATION	// Some error in the client/server communication // --> fall back to default login process
WITHOUT_CLASSIFICATION	// make window visible // LOG.finest("setVisible()");
WITHOUT_CLASSIFICATION	// load window position // loadPositions(getViewItem());
WITHOUT_CLASSIFICATION	// public ColumbaMenu getMenuBar() { // return menu; // }
WITHOUT_CLASSIFICATION	// // Tell frame model that frame is closing. If this frame hasn't been // opened using FrameManager methods, FrameManager.close does nothing. //
WITHOUT_CLASSIFICATION	// getContentPane().remove(this.toolbar);
WITHOUT_CLASSIFICATION	// remove old toolbar
WITHOUT_CLASSIFICATION	//searchToolBar.addSeparator();
WITHOUT_CLASSIFICATION	//searchBar.install(searchToolBar);
WITHOUT_CLASSIFICATION	// add search bar to main toolbar, in case its a managed frame mediator
WITHOUT_CLASSIFICATION	// // getContentPane().validate();
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// register for change of the frame mediator
WITHOUT_CLASSIFICATION	// check if mediator supports docking
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// awt-event-thread
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	/*	 * Uses the FrameManager instance in MainInterface to open a new addressbook	 * window.	 */
WITHOUT_CLASSIFICATION	//putValue(SMALL_ICON, ImageLoader.getIcon("script.png"));
WITHOUT_CLASSIFICATION	//putValue(SMALL_ICON, ImageLoader.getIcon("script.png"));
WITHOUT_CLASSIFICATION	//putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("mail-new.png"));
WITHOUT_CLASSIFICATION	/*	 * Opens a new mail window using the FrameManager instance in MainInterface.	 */
WITHOUT_CLASSIFICATION	// small icon for JMenuItem
WITHOUT_CLASSIFICATION	// big icon for JToolBar
WITHOUT_CLASSIFICATION	// set JavaHelp topic ID // setTopicID("cancel");
WITHOUT_CLASSIFICATION	// short cut key
WITHOUT_CLASSIFICATION	// FocusManager.getInstance().setDeleteAction(this);
WITHOUT_CLASSIFICATION	// enable/disable search bar during search
WITHOUT_CLASSIFICATION	// We need to sort the uids in order // to have the correct association // between the new and old uid
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// short cut key
WITHOUT_CLASSIFICATION	// check if this is a management frame instance // -> if so create submenu to switch perspectives // -> otherwise, don't create submenu
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// FocusManager.getInstance().delete();
WITHOUT_CLASSIFICATION	// create menuitems for all registered frame extensions
WITHOUT_CLASSIFICATION	// create menuitems for all registered new items
WITHOUT_CLASSIFICATION	/*     * Close all open frames, which leads to exiting Columba     */
WITHOUT_CLASSIFICATION	//FrameManager.getInstance().storeViews();
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)   */
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// short cut key
WITHOUT_CLASSIFICATION	// textPane.setMargin(new Insets(5, 5, 5, 5));
WITHOUT_CLASSIFICATION	// setup base url in order to be able to display images // in html-component
WITHOUT_CLASSIFICATION	// scroll window to the beginning
WITHOUT_CLASSIFICATION	// First find the beginning element
WITHOUT_CLASSIFICATION	// in case of an error -> fall-back to Swing's built-in JTextPane
WITHOUT_CLASSIFICATION	// we insert new menus between the "Edit" and the "Utilities, Help" menu
WITHOUT_CLASSIFICATION	// extend existing menu
WITHOUT_CLASSIFICATION	// extend existing menu
WITHOUT_CLASSIFICATION	// create new menu
WITHOUT_CLASSIFICATION	// create new menu
WITHOUT_CLASSIFICATION	// make sure that we don't end up with two separators
WITHOUT_CLASSIFICATION	// make sure that we don't end up with two separators
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// view -> model
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	//	This method is called when a cell value is edited by the user.
WITHOUT_CLASSIFICATION	// Configure the component with the specified value
WITHOUT_CLASSIFICATION	// Return the configured component
WITHOUT_CLASSIFICATION	// This method is called when editing is completed. // It must return the new value to be stored in the cell.
WITHOUT_CLASSIFICATION	// enable/disable tree node
WITHOUT_CLASSIFICATION	// enable/disable tree node
WITHOUT_CLASSIFICATION	/*// enable/disable pluginString id = currentNode.getId();MainInterface.pluginManager.setEnabled(id, b.booleanValue());*/
WITHOUT_CLASSIFICATION	// modal dialog
WITHOUT_CLASSIFICATION	// model->view
WITHOUT_CLASSIFICATION	// centerPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 5));
WITHOUT_CLASSIFICATION	// setContentPane(mainPanel);
WITHOUT_CLASSIFICATION	//int iconOffset = getHorizontalAlignment() + getIcon().getIconWidth() + 1;
WITHOUT_CLASSIFICATION	// ((DefaultTreeModel) // model.getTree().getModel()).setAsksAllowsChildren(true);
WITHOUT_CLASSIFICATION	// make "version" column fixed size
WITHOUT_CLASSIFICATION	// make "enabled" column fixed size
WITHOUT_CLASSIFICATION	// plugin wasn't correctly loaded
WITHOUT_CLASSIFICATION	// this plugin doesn't define a category to which it belongs
WITHOUT_CLASSIFICATION	// unknown category found // -> just add this plugin to "Uncategorized"
WITHOUT_CLASSIFICATION	// add node
WITHOUT_CLASSIFICATION	// notify tree model
WITHOUT_CLASSIFICATION	// make new node visible
WITHOUT_CLASSIFICATION	// notify tree
WITHOUT_CLASSIFICATION	// first column is a tree
WITHOUT_CLASSIFICATION	// third column is a JCheckBox column
WITHOUT_CLASSIFICATION	// checkbox pressed
WITHOUT_CLASSIFICATION	// enabled/disabled checkbox must be editable
WITHOUT_CLASSIFICATION	// tree must be editable, otherwise you can't collapse/expand tree nodes
WITHOUT_CLASSIFICATION	// modal JDialog
WITHOUT_CLASSIFICATION	// top panel
WITHOUT_CLASSIFICATION	// topPanel.setLayout( );
WITHOUT_CLASSIFICATION	// start search
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	// topBorderPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, // 0));
WITHOUT_CLASSIFICATION	// mainPanel.add( topBorderPanel, BorderLayout.NORTH );
WITHOUT_CLASSIFICATION	// c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	// get plugin directory
WITHOUT_CLASSIFICATION	// delete plugin from disk
WITHOUT_CLASSIFICATION	// remove plugin from view
WITHOUT_CLASSIFICATION	// this is just a folder // ->disable all actions
WITHOUT_CLASSIFICATION	// if plugin has config extension point
WITHOUT_CLASSIFICATION	// use user's config folder in his/her home-folder // all plugins reside in "<config-folder>/plugins"
WITHOUT_CLASSIFICATION	// extract plugin
WITHOUT_CLASSIFICATION	// the plugin directory is "<config-folder>/plugins/<plugin-id>"
WITHOUT_CLASSIFICATION	// the path to the plugin.xml descriptor file is: // "<config-folder>/plugins/<plugin-id>/plugin.xml
WITHOUT_CLASSIFICATION	// this node is category folder // -> don't make it editable
WITHOUT_CLASSIFICATION	//protected JButton defaultButton;
WITHOUT_CLASSIFICATION	//		 top panel
WITHOUT_CLASSIFICATION	//topPanel.setLayout( );
WITHOUT_CLASSIFICATION	//topBorderPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, // 0));
WITHOUT_CLASSIFICATION	//mainPanel.add( topBorderPanel, BorderLayout.NORTH );
WITHOUT_CLASSIFICATION	//c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	// add profile to profiles.xml
WITHOUT_CLASSIFICATION	// add profile to profiles.xml
WITHOUT_CLASSIFICATION	// add to listmodel
WITHOUT_CLASSIFICATION	// add to listmodel
WITHOUT_CLASSIFICATION	// rename profile in profiles.xml
WITHOUT_CLASSIFICATION	// rename profile in profiles.xml
WITHOUT_CLASSIFICATION	// modify listmodel
WITHOUT_CLASSIFICATION	// modify listmodel
WITHOUT_CLASSIFICATION	//defaultButton.setEnabled(enabled);
WITHOUT_CLASSIFICATION	// user's can't edit default account
WITHOUT_CLASSIFICATION	// protected JButton defaultButton;
WITHOUT_CLASSIFICATION	// can't delete currently running profile
WITHOUT_CLASSIFICATION	// delete directory recursivly
WITHOUT_CLASSIFICATION	// delete all files
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// get current list selection
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.profiles.IProfileManager#getProfileForName(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.profiles.IProfileManager#getSelectedProfile()	 */
WITHOUT_CLASSIFICATION	// user's can't delete default account
WITHOUT_CLASSIFICATION	// create directory, if it doesn't already exist
WITHOUT_CLASSIFICATION	// load profiles.xml
WITHOUT_CLASSIFICATION	// prompt user for profile
WITHOUT_CLASSIFICATION	// use commandline-specified location
WITHOUT_CLASSIFICATION	// try name first
WITHOUT_CLASSIFICATION	// try directory
WITHOUT_CLASSIFICATION	// create profile
WITHOUT_CLASSIFICATION	// save to profiles.xml
WITHOUT_CLASSIFICATION	// save to profiles.xml
WITHOUT_CLASSIFICATION	// save to profiles.xml
WITHOUT_CLASSIFICATION	// use preselected profile
WITHOUT_CLASSIFICATION	// fall back to default profile
WITHOUT_CLASSIFICATION	// show profile choosing dialog
WITHOUT_CLASSIFICATION	// create profile config file
WITHOUT_CLASSIFICATION	// load profile config file
WITHOUT_CLASSIFICATION	// Is the location still existing?
WITHOUT_CLASSIFICATION	// delete all directories
WITHOUT_CLASSIFICATION	// remove profile xml-element
WITHOUT_CLASSIFICATION	// do something with link
WITHOUT_CLASSIFICATION	// setPreferredSize(list.getPreferredSize());
WITHOUT_CLASSIFICATION	// private JLabel iconLabel = new JLabel();
WITHOUT_CLASSIFICATION	// titleLabel.setBackground(UIManager.getColor("Label.background"));
WITHOUT_CLASSIFICATION	// topPanel.add(iconLabel, BorderLayout.WEST);
WITHOUT_CLASSIFICATION	// initialization
WITHOUT_CLASSIFICATION	// controller
WITHOUT_CLASSIFICATION	// link.setFont(link.getFont().deriveFont(Font.BOLD));
WITHOUT_CLASSIFICATION	// if the collapsible is collapsed, we do not want its border to be // painted.
WITHOUT_CLASSIFICATION	//			g.setColor(borderColor2); //			g.drawLine(x, y + height - 1, x + width, y + height - 1);
WITHOUT_CLASSIFICATION	// if config-folder is really empty // -> delete folder
WITHOUT_CLASSIFICATION	// Border border = BorderFactory.createCompoundBorder(new // ShadowBorder(),BorderFactory.createEmptyBorder(10, 10, 10,10)); // ((JPanel) getContentPane()).setBorder(border);
WITHOUT_CLASSIFICATION	//		Border border = new CompoundBorder(BorderFactory.createEmptyBorder(2, //				4, 2, 4), border1);
WITHOUT_CLASSIFICATION	//iconLabel.setOpaque(true);
WITHOUT_CLASSIFICATION	//top.setOpaque(true);
WITHOUT_CLASSIFICATION	//		popupMenu.setFocusable( false ); //		popupMenu.setRequestFocusEnabled(false); 
WITHOUT_CLASSIFICATION	// icon (we can't use the setIcon-method this time, as it relies on the // border being set)
WITHOUT_CLASSIFICATION	//popupMenu.getSelectionModel().clearSelection();
WITHOUT_CLASSIFICATION	//popupMenu.getSelectionModel().setSelectedIndex(0);
WITHOUT_CLASSIFICATION	//collapsible.getContentPane().setBackground(Color.WHITE);
WITHOUT_CLASSIFICATION	//link.setBackground(titleBackground);
WITHOUT_CLASSIFICATION	//iconLabel.setBackground(titleBackground);
WITHOUT_CLASSIFICATION	// private SearchResultView searchResultView;
WITHOUT_CLASSIFICATION	//private StackedBox box;
WITHOUT_CLASSIFICATION	//box = new StackedBox();
WITHOUT_CLASSIFICATION	//topPanel.setBackground(UIManager.getColor("TextField.background"));
WITHOUT_CLASSIFICATION	//createDefaultStackedBox();
WITHOUT_CLASSIFICATION	// if in debug mode, register context debugger view
WITHOUT_CLASSIFICATION	// search individual provider and individual criteria
WITHOUT_CLASSIFICATION	// start a new search -> clear all previous search results
WITHOUT_CLASSIFICATION	// search individual provider
WITHOUT_CLASSIFICATION	// start a new search -> clear all previous search results
WITHOUT_CLASSIFICATION	//box.setBackground(new Color(248, 248, 248)); //		JScrollPane pane = new JScrollPane(box); //		pane.setBorder(null);
WITHOUT_CLASSIFICATION	// search across all providers
WITHOUT_CLASSIFICATION	// search across all providers
WITHOUT_CLASSIFICATION	// search across a few specific search criteria at once
WITHOUT_CLASSIFICATION	//remove(topPanel);
WITHOUT_CLASSIFICATION	//remove(topPanel);
WITHOUT_CLASSIFICATION	//remove(topPanel);
WITHOUT_CLASSIFICATION	// first, create bucket for each provider
WITHOUT_CLASSIFICATION	// now search through all buckets
WITHOUT_CLASSIFICATION	//defaultBox.removeAll();
WITHOUT_CLASSIFICATION	// clear previous search results
WITHOUT_CLASSIFICATION	// create new stacked box
WITHOUT_CLASSIFICATION	// search all criteria in specific provider only
WITHOUT_CLASSIFICATION	// search in specific criteria
WITHOUT_CLASSIFICATION	// query with only a single criteria
WITHOUT_CLASSIFICATION	// query only a single provider
WITHOUT_CLASSIFICATION	// query all criteria of all providers
WITHOUT_CLASSIFICATION	// repaint box
WITHOUT_CLASSIFICATION	// add result panel as listener for new search results
WITHOUT_CLASSIFICATION	// create visual container for result panel
WITHOUT_CLASSIFICATION	// create visual container for result panel
WITHOUT_CLASSIFICATION	// add to search panel
WITHOUT_CLASSIFICATION	// add to search panel
WITHOUT_CLASSIFICATION	// show search docking view
WITHOUT_CLASSIFICATION	// show docking view
WITHOUT_CLASSIFICATION	// execute background search
WITHOUT_CLASSIFICATION	//addRightComponent(taskButton, 30);
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// init result view //createContextStackedBox();
WITHOUT_CLASSIFICATION	// skip if user didn't specify search term for this criteria
WITHOUT_CLASSIFICATION	// execute search
WITHOUT_CLASSIFICATION	// toolbar container
WITHOUT_CLASSIFICATION	// user pressed "Search" button
WITHOUT_CLASSIFICATION	// show search dialog
WITHOUT_CLASSIFICATION	// on "RETURN" start seach
WITHOUT_CLASSIFICATION	// to enable button again after search is finished
WITHOUT_CLASSIFICATION	// skip "Search All"
WITHOUT_CLASSIFICATION	// intersect this with the existing clip
WITHOUT_CLASSIFICATION	// restore original clip
WITHOUT_CLASSIFICATION	// make it translucent
WITHOUT_CLASSIFICATION	// paint the text and icon
WITHOUT_CLASSIFICATION	// builder.append(moreButton);
WITHOUT_CLASSIFICATION	// builder.append(searchButton);
WITHOUT_CLASSIFICATION	// searchInsideCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	// paint outer border // g2d.setPaint(OUTER);
WITHOUT_CLASSIFICATION	// paint right outside border // g2d.setPaint(p1);
WITHOUT_CLASSIFICATION	// paint right inside border // g2d.setPaint(p2);
WITHOUT_CLASSIFICATION	// builder.append(contextButton); // builder.append(providerComboBox);
WITHOUT_CLASSIFICATION	// update popup menu based on searchterm
WITHOUT_CLASSIFICATION	// create all individual search criteria for this provider
WITHOUT_CLASSIFICATION	// create search history
WITHOUT_CLASSIFICATION	// search is finished // -> enable search button again
WITHOUT_CLASSIFICATION	// do layout again
WITHOUT_CLASSIFICATION	//private JButton taskButton;
WITHOUT_CLASSIFICATION	// layoutComponents();
WITHOUT_CLASSIFICATION	// update connection state
WITHOUT_CLASSIFICATION	// init update timer
WITHOUT_CLASSIFICATION	// updateTimer.start();
WITHOUT_CLASSIFICATION	// The Stream finished before the header was completely // read!
WITHOUT_CLASSIFICATION	// update text and progress bar
WITHOUT_CLASSIFICATION	// update text and progress bar
WITHOUT_CLASSIFICATION	// remember last message
WITHOUT_CLASSIFICATION	// immediately update text and progress bar // updateGui();
WITHOUT_CLASSIFICATION	// if only one task left
WITHOUT_CLASSIFICATION	// stop update timer
WITHOUT_CLASSIFICATION	// set text
WITHOUT_CLASSIFICATION	// clear text with delay
WITHOUT_CLASSIFICATION	// update timer event
WITHOUT_CLASSIFICATION	// clear label
WITHOUT_CLASSIFICATION	// stop clear timer
WITHOUT_CLASSIFICATION	// return super.getListCellRendererComponent(arg0, arg1, arg2, arg3, // arg4);
WITHOUT_CLASSIFICATION	// disabled Kill button, because feature is not supported
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	// get configuration
WITHOUT_CLASSIFICATION	// fall-back
WITHOUT_CLASSIFICATION	// create a panel with all 4 buttons of the window // columns  // rows
WITHOUT_CLASSIFICATION	/*		 * Component strut1 = Box.createRigidArea(new Dimension(30, 6));		 * gridBagLayout.setConstraints(strut1, c); eastPanel.add(strut1);		 * 		 * gridBagLayout.setConstraints(killButton, c);		 * eastPanel.add(killButton);		 */
WITHOUT_CLASSIFICATION	// force repaint
WITHOUT_CLASSIFICATION	// fill list model with tags
WITHOUT_CLASSIFICATION	// popup menu 
WITHOUT_CLASSIFICATION	// update tag list if mode changes
WITHOUT_CLASSIFICATION	// descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(Font.ITALIC));
WITHOUT_CLASSIFICATION	// update menu if tags are changed
WITHOUT_CLASSIFICATION	// fire callback to remove all tags from selected items
WITHOUT_CLASSIFICATION	// don't want to have two separators
WITHOUT_CLASSIFICATION	// add all existing tags to the menu
WITHOUT_CLASSIFICATION	// mark tag, if the current selection is tagged with it
WITHOUT_CLASSIFICATION	// listener updates menu in case the tags where changed
WITHOUT_CLASSIFICATION	// get plugin-handler
WITHOUT_CLASSIFICATION	// if no theme available -> set "Plastic" as default
WITHOUT_CLASSIFICATION	// instanciate theme
WITHOUT_CLASSIFICATION	// apply theme
WITHOUT_CLASSIFICATION	/*		 * Gets the platform specific default theme. This is in all cases but		 * MacOS X the Plastic theme. On MacOs X we use the System L&F.		 *		 */
WITHOUT_CLASSIFICATION	// try the system aqua look and feel
WITHOUT_CLASSIFICATION	// set the Quaqua Look and Feel in the UIManager
WITHOUT_CLASSIFICATION	// set UI manager properties here that affect Quaqua
WITHOUT_CLASSIFICATION	// UIManager.setLookAndFeel(lafName);
WITHOUT_CLASSIFICATION	// setFloatable(true);
WITHOUT_CLASSIFICATION	// no text!
WITHOUT_CLASSIFICATION	// apply transparent icon
WITHOUT_CLASSIFICATION	/* (non-Javadoc)		 * @see java.lang.Thread#run()		 */
WITHOUT_CLASSIFICATION	// replace with "MyListCellRenderer" for simple one-line renderer // replace with "MyComplexListCellRenderer" for an additional description line
WITHOUT_CLASSIFICATION	// JavaHelp support
WITHOUT_CLASSIFICATION	// toolbar buttons always need an icon
WITHOUT_CLASSIFICATION	// apply transparent icon //button.setDisabledIcon(ImageUtil.createTransparentIcon(icon));
WITHOUT_CLASSIFICATION	// deprecated config-file support
WITHOUT_CLASSIFICATION	// deprecated config-file support // -> skip creation of "Cancel" button
WITHOUT_CLASSIFICATION	// tray icon not supported on Mac
WITHOUT_CLASSIFICATION	//titleLabel.setAlignmentY(0);
WITHOUT_CLASSIFICATION	//IServiceManager.getInstance().createService("");
WITHOUT_CLASSIFICATION	// found email address
WITHOUT_CLASSIFICATION	//openWithBrowser(getLink());
WITHOUT_CLASSIFICATION	// Font font = MainInterface.columbaTheme.getControlTextFont();
WITHOUT_CLASSIFICATION	// does not occur
WITHOUT_CLASSIFICATION	// 50k
WITHOUT_CLASSIFICATION	// just the animation, if there are more than zero // workers running
WITHOUT_CLASSIFICATION	// columns  // rows
WITHOUT_CLASSIFICATION	// if some action was performed
WITHOUT_CLASSIFICATION	// setup the finder
WITHOUT_CLASSIFICATION	// find action performed
WITHOUT_CLASSIFICATION	// mark found pattern
WITHOUT_CLASSIFICATION	//text.grabFocus();
WITHOUT_CLASSIFICATION	// delete marks
WITHOUT_CLASSIFICATION	//replace action performed
WITHOUT_CLASSIFICATION	// grant "all-permissions"
WITHOUT_CLASSIFICATION	// columns  // rows
WITHOUT_CLASSIFICATION	// if some action was performed
WITHOUT_CLASSIFICATION	// create a panel with a border and 3 options // columns  // rows
WITHOUT_CLASSIFICATION	// create a panel with a border and 3 options // columns  // rows
WITHOUT_CLASSIFICATION	// create a panel with all 4 buttons of the window // columns  // rows
WITHOUT_CLASSIFICATION	//text.grabFocus();
WITHOUT_CLASSIFICATION	//text.grabFocus();
WITHOUT_CLASSIFICATION	// delete marks
WITHOUT_CLASSIFICATION	// get text where to find pattern
WITHOUT_CLASSIFICATION	//replaceall action performed
WITHOUT_CLASSIFICATION	// to mark a text in the JTextPane
WITHOUT_CLASSIFICATION	// register as configuration change listener
WITHOUT_CLASSIFICATION	// patch submitted by forum user Turbo Chen // FIXED: user wasn't able to enter chinese text in Composer Subject textfield
WITHOUT_CLASSIFICATION	// we got this from headerfieldtree
WITHOUT_CLASSIFICATION	//private JTextPane textpane;
WITHOUT_CLASSIFICATION	//list[2].setHorizontalTextPosition( JLabel.LEADING );
WITHOUT_CLASSIFICATION	// get position of the pattern in the text
WITHOUT_CLASSIFICATION	// mark found pattern //text.grabFocus();
WITHOUT_CLASSIFICATION	// find pattern
WITHOUT_CLASSIFICATION	// delete marks (unselect)
WITHOUT_CLASSIFICATION	// name of helpset resource
WITHOUT_CLASSIFICATION	// could not find it!
WITHOUT_CLASSIFICATION	// maybe based on HS?
WITHOUT_CLASSIFICATION	// don't instantiate this class
WITHOUT_CLASSIFICATION	// Open the ZIP file
WITHOUT_CLASSIFICATION	// Open the ZIP file
WITHOUT_CLASSIFICATION	// Get the first entry
WITHOUT_CLASSIFICATION	// Get the first entry
WITHOUT_CLASSIFICATION	// Open the output file
WITHOUT_CLASSIFICATION	// Transfer bytes from the ZIP file to the output file
WITHOUT_CLASSIFICATION	// Close the stream
WITHOUT_CLASSIFICATION	// Close the stream
WITHOUT_CLASSIFICATION	// Close the stream
WITHOUT_CLASSIFICATION	// don't instantiate this
WITHOUT_CLASSIFICATION	// ensureDirectory
WITHOUT_CLASSIFICATION	// saveStringInFile
WITHOUT_CLASSIFICATION	// shutdown Columba
WITHOUT_CLASSIFICATION	// saveStringInFile
WITHOUT_CLASSIFICATION	// JMenu options = (JMenu) menuBar.add(new JMenu("Options")); // options.setMnemonic('O');
WITHOUT_CLASSIFICATION	// deleteDirectory
WITHOUT_CLASSIFICATION	// emptyDirectory
WITHOUT_CLASSIFICATION	// getResourceStream
WITHOUT_CLASSIFICATION	// throws // java.io.IOException
WITHOUT_CLASSIFICATION	// url = ClassLoader.getSystemResource(path);
WITHOUT_CLASSIFICATION	// getResourceURL
WITHOUT_CLASSIFICATION	// setResourceRoot
WITHOUT_CLASSIFICATION	// copyFile
WITHOUT_CLASSIFICATION	// attempt
WITHOUT_CLASSIFICATION	// copyResource
WITHOUT_CLASSIFICATION	// Byte
WITHOUT_CLASSIFICATION	// try to restore from previous session
WITHOUT_CLASSIFICATION	// Never mind
WITHOUT_CLASSIFICATION	// Try again after shutdown
WITHOUT_CLASSIFICATION	// ignore this yet
WITHOUT_CLASSIFICATION	// do nothing here
WITHOUT_CLASSIFICATION	// make sure file is deleted automatically when closing VM
WITHOUT_CLASSIFICATION	// add a new inputstream to read from
WITHOUT_CLASSIFICATION	// only if tempfile was corrupted
WITHOUT_CLASSIFICATION	// Delete the tempfile immedietly
WITHOUT_CLASSIFICATION	// init console handler
WITHOUT_CLASSIFICATION	// create logging file in "<users config-folder>/log"
WITHOUT_CLASSIFICATION	// Setup file logging
WITHOUT_CLASSIFICATION	// don't use // standard // XML // formatting
WITHOUT_CLASSIFICATION	//create new client and try to connect to server
WITHOUT_CLASSIFICATION	//no server running, start our own
WITHOUT_CLASSIFICATION	//display error message
WITHOUT_CLASSIFICATION	// prompt user for profile
WITHOUT_CLASSIFICATION	// set global class loader to null
WITHOUT_CLASSIFICATION	// force object finalization
WITHOUT_CLASSIFICATION	// run garbage collector
WITHOUT_CLASSIFICATION	// initialize global class loader
WITHOUT_CLASSIFICATION	// use global class loader to bootstrap Columba
WITHOUT_CLASSIFICATION	// do nothing here, just continue
WITHOUT_CLASSIFICATION	// create random port number within range
WITHOUT_CLASSIFICATION	// store port number in file
WITHOUT_CLASSIFICATION	// port is in use, try next
WITHOUT_CLASSIFICATION	// only accept client from local machine
WITHOUT_CLASSIFICATION	// do something with the arguments..
WITHOUT_CLASSIFICATION	// through reflection
WITHOUT_CLASSIFICATION	// memorize all URLs
WITHOUT_CLASSIFICATION	// initialize configuration with selected profile
WITHOUT_CLASSIFICATION	// if user doesn't overwrite logger settings with commandline arguments // just initialize default logging // Logging.createDefaultHandler();
WITHOUT_CLASSIFICATION	// enable debugging of repaint manager to track down swing gui // access from outside the awt-event dispatcher thread
WITHOUT_CLASSIFICATION	// use heavy-weight popups to ensure they are always on top
WITHOUT_CLASSIFICATION	// keep track of active windows (used by dialogs which don't have a // direct parent)
WITHOUT_CLASSIFICATION	// show splash screen
WITHOUT_CLASSIFICATION	// register protocol handler
WITHOUT_CLASSIFICATION	// load user-customised language pack
WITHOUT_CLASSIFICATION	// init all components
WITHOUT_CLASSIFICATION	// initialize platform-dependant services
WITHOUT_CLASSIFICATION	// init font configuration
WITHOUT_CLASSIFICATION	// set application wide font
WITHOUT_CLASSIFICATION	// handle the commandline arguments of the modules
WITHOUT_CLASSIFICATION	// now load all available plugins // PluginManager.getInstance().initExternalPlugins();
WITHOUT_CLASSIFICATION	// restore frames of last session
WITHOUT_CLASSIFICATION	/* initialize services before dismissing the splash screen */
WITHOUT_CLASSIFICATION	// register shutdown manager
WITHOUT_CLASSIFICATION	// initialize tagging
WITHOUT_CLASSIFICATION	// register for cleanup
WITHOUT_CLASSIFICATION	// hide splash screen
WITHOUT_CLASSIFICATION	//$NON-NLS-2$
WITHOUT_CLASSIFICATION	/* everything is up and running, start services */
WITHOUT_CLASSIFICATION	// // first load all extension handlers //
WITHOUT_CLASSIFICATION	// load core extension handlers
WITHOUT_CLASSIFICATION	// load addressbook extension handler
WITHOUT_CLASSIFICATION	// load mail extension handler
WITHOUT_CLASSIFICATION	// load all internal core plugins
WITHOUT_CLASSIFICATION	// load all internal addressbook plugins
WITHOUT_CLASSIFICATION	// load all internal mail plugins
WITHOUT_CLASSIFICATION	// load all internal calendar plugins
WITHOUT_CLASSIFICATION	// // now load all external plugins residing in /plugins directory //
WITHOUT_CLASSIFICATION	// This is necessary because getArgList returns the path in // square brackets
WITHOUT_CLASSIFICATION	// Do not exit
WITHOUT_CLASSIFICATION	// Platform maintainers: add your platform here
WITHOUT_CLASSIFICATION	// Setup the path // Platform maintainers: add your platform here // see also initPlatformServices() method
WITHOUT_CLASSIFICATION	// Find all native jars
WITHOUT_CLASSIFICATION	// Get the current classpath from the sysloader // through reflection
WITHOUT_CLASSIFICATION	// add all native jars
WITHOUT_CLASSIFICATION	// add the old classpath
WITHOUT_CLASSIFICATION	// replace with the modified classpath
WITHOUT_CLASSIFICATION	// Initialise system dependent stuff
WITHOUT_CLASSIFICATION	// switch for restoring last session of Columba. // if true, restores all windows.
WITHOUT_CLASSIFICATION	// automatically generate the help statement
WITHOUT_CLASSIFICATION	// remove directories which don't contain a plugin
WITHOUT_CLASSIFICATION	/*	 * protected static ClassLoader loader = ClassLoader.getSystemClassLoader();	 */
WITHOUT_CLASSIFICATION	// couldn't find correct constructor
WITHOUT_CLASSIFICATION	// couldn't find correct constructor
WITHOUT_CLASSIFICATION	// we can't just load the first constructor // -> go find the correct constructor // -> based on the arguments
WITHOUT_CLASSIFICATION	// find all possible plugin directories
WITHOUT_CLASSIFICATION	// parse "/plugin.xml" file
WITHOUT_CLASSIFICATION	// cancel
WITHOUT_CLASSIFICATION	// register all extensions
WITHOUT_CLASSIFICATION	// register all extensions
WITHOUT_CLASSIFICATION	// loop through all extensions this plugin uses // -> search the corresponding extension handler // -> register the extension at the extension handler
WITHOUT_CLASSIFICATION	// we have a plugin-handler for this kind of extension
WITHOUT_CLASSIFICATION	// if extension wasn't already registered
WITHOUT_CLASSIFICATION	// if no plugin directory exists -> return
WITHOUT_CLASSIFICATION	// if no plugin directory exists -> return
WITHOUT_CLASSIFICATION	// try to load all plugins
WITHOUT_CLASSIFICATION	// skip if it doesn't exist
WITHOUT_CLASSIFICATION	// skip if it doesn't exist
WITHOUT_CLASSIFICATION	// try all possible version of readme files...
WITHOUT_CLASSIFICATION	// retrieve inputstream from resource
WITHOUT_CLASSIFICATION	// parse plugin metadata
WITHOUT_CLASSIFICATION	// remember plugin metadata // pluginMap.put(id, pluginMetadata);
WITHOUT_CLASSIFICATION	// try to load extensin handlers of all plugins
WITHOUT_CLASSIFICATION	// this constructor has the correct number // of arguments
WITHOUT_CLASSIFICATION	// skip non-matching elements
WITHOUT_CLASSIFICATION	// loop through all extensions this plugin uses
WITHOUT_CLASSIFICATION	// skip if no <extensionlist> element found
WITHOUT_CLASSIFICATION	// skip if no <extension> element found
WITHOUT_CLASSIFICATION	// retrieve JDom Document from inputstream
WITHOUT_CLASSIFICATION	// if external plugin, we need the directory of it
WITHOUT_CLASSIFICATION	// if available, load cached instance
WITHOUT_CLASSIFICATION	// couldn't find correct constructor
WITHOUT_CLASSIFICATION	// ok, we found a matching constructor // -> create correct list of arguments
WITHOUT_CLASSIFICATION	// use default Java classlodaer
WITHOUT_CLASSIFICATION	// // external plugin //				
WITHOUT_CLASSIFICATION	// just in case that someone who developers on a plugin // adds the plugin files to his classpath, we try to // load // them with the default classloader
WITHOUT_CLASSIFICATION	// use external Java URL classloader
WITHOUT_CLASSIFICATION	// remember instance
WITHOUT_CLASSIFICATION	// disable extension
WITHOUT_CLASSIFICATION	// disable extension
WITHOUT_CLASSIFICATION	// all Java plugins package their class-files in "plugin.jar"
WITHOUT_CLASSIFICATION	// append URLs to global classloader
WITHOUT_CLASSIFICATION	//plugin = instanciateJavaClass(className, arguments);
WITHOUT_CLASSIFICATION	// create new class loader using the global class loader as parent
WITHOUT_CLASSIFICATION	// use our global class loader
WITHOUT_CLASSIFICATION	// plugin-directory
WITHOUT_CLASSIFICATION	// jar-file found
WITHOUT_CLASSIFICATION	// get plugin id
WITHOUT_CLASSIFICATION	// disable plugin
WITHOUT_CLASSIFICATION	/*         * By using an instance of SyncHTMLEditorKit, the html should load         * synchroniously - so everything is loaded before printing starts         */
WITHOUT_CLASSIFICATION	// reset starting position in y-direction
WITHOUT_CLASSIFICATION	/*             * *20030609, karlpeder* Introduced scaling             */
WITHOUT_CLASSIFICATION	// get origin & size information (height as "total" height minus current pos.)
WITHOUT_CLASSIFICATION	// set size of mPane according to the available width // and fetch root view
WITHOUT_CLASSIFICATION	// scale the graphics
WITHOUT_CLASSIFICATION	// set clipping for the graphics object
WITHOUT_CLASSIFICATION	// translate g to line up with origin of print area (trans 1)
WITHOUT_CLASSIFICATION	// set allocation (defines print area together with the clipping // and translation made above), and print...
WITHOUT_CLASSIFICATION	// translate graphics object back to original position and reset clip and scaling
WITHOUT_CLASSIFICATION	// child views exist - operate recursively on these
WITHOUT_CLASSIFICATION	// handle child view by recursive call
WITHOUT_CLASSIFICATION	// no childs - we have a leaf view (i.e. with contents)
WITHOUT_CLASSIFICATION	// view starts on page - print it
WITHOUT_CLASSIFICATION	// resize jTextPane component to calculate height and get it
WITHOUT_CLASSIFICATION	// correct for starting position if printing should not start at the top
WITHOUT_CLASSIFICATION	// calculate size and return it
WITHOUT_CLASSIFICATION	// width unchanged
WITHOUT_CLASSIFICATION	// height of content // + top margin // + bottom margin // height corrected for scaling
WITHOUT_CLASSIFICATION	// ensure contents is layed out properly
WITHOUT_CLASSIFICATION	// calculate scaling and return it
WITHOUT_CLASSIFICATION	// do not scale up, i.e. no scale factor above 1.0
WITHOUT_CLASSIFICATION	// create remainder
WITHOUT_CLASSIFICATION	// modify "this" to start where remainder ends
WITHOUT_CLASSIFICATION	// this happends if there's nothing left for the next page
WITHOUT_CLASSIFICATION	// return (possibly) updated value
WITHOUT_CLASSIFICATION	// define allocation rectangle (startY is used to compensate for // different start point if printing shall not start from the top)
WITHOUT_CLASSIFICATION	// set initial value for height where this print object should be broken // in points, without scale
WITHOUT_CLASSIFICATION	// calculate break height for child, and use updated // value in the further processing
WITHOUT_CLASSIFICATION	// view starts on page and exceeds it
WITHOUT_CLASSIFICATION	// unchanged, i.e. no breaks before this view
WITHOUT_CLASSIFICATION	// view can be broken
WITHOUT_CLASSIFICATION	// break before start of view
WITHOUT_CLASSIFICATION	// unchanged
WITHOUT_CLASSIFICATION	// unchanged
WITHOUT_CLASSIFICATION	/*	 * Methods called by the Variable parsers	 */
WITHOUT_CLASSIFICATION	// For getHeight() to return the right Value
WITHOUT_CLASSIFICATION	// SizePolicy
WITHOUT_CLASSIFICATION	// Margins
WITHOUT_CLASSIFICATION	// Orientation
WITHOUT_CLASSIFICATION	// ensure that the text does not start with a newline
WITHOUT_CLASSIFICATION	// insert space btw. double newlines
WITHOUT_CLASSIFICATION	/* really delete file */
WITHOUT_CLASSIFICATION	// this is ok
WITHOUT_CLASSIFICATION	//does not occur
WITHOUT_CLASSIFICATION	// using default english language, shipped with Columba
WITHOUT_CLASSIFICATION	// use ResourceBundle's internal classloader
WITHOUT_CLASSIFICATION	//Find out if we already loaded the needed ResourceBundle //object in the hashtable.
WITHOUT_CLASSIFICATION	//should not occur, otherwise the static initializer should have thrown // a RuntimeException
WITHOUT_CLASSIFICATION	//retrieve new bundle // use ResourceBundle's internal classloader
WITHOUT_CLASSIFICATION	//overwrite old bundle
WITHOUT_CLASSIFICATION	/* check if script directory exists */
WITHOUT_CLASSIFICATION	/*           * initialize file observer thread with a reference to our           * beanshellScripts map           */
WITHOUT_CLASSIFICATION	/* nothing to dispose, yet... */
WITHOUT_CLASSIFICATION	/* start pooling thread */
WITHOUT_CLASSIFICATION	/*in case of a stop-start */
WITHOUT_CLASSIFICATION	// check current file list for changes
WITHOUT_CLASSIFICATION	// it isn't possible to undo whatever the script did
WITHOUT_CLASSIFICATION	/* check for new files in the scripts directory */
WITHOUT_CLASSIFICATION	// seconds
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// scripts should reside in <config-folder>/scripts/ directory
WITHOUT_CLASSIFICATION	// scripting.xml configuration file should reside in <config-folder>
WITHOUT_CLASSIFICATION	// oh oh! casting to a specific implementation here ;-)
WITHOUT_CLASSIFICATION	/*        * it's the script responsability to define the "metadata" by invoking        * .setName(), .setAuthor() and .setDescription()        */
WITHOUT_CLASSIFICATION	/* find out if the interpreter is already registered */
WITHOUT_CLASSIFICATION	/* if so, remove it */
WITHOUT_CLASSIFICATION	/* any errors that may occur cannot stop other scripts from running */
WITHOUT_CLASSIFICATION	// retrieving the instance for the first time // creates an instance in ExtensionHandler subclass //  // instance reference is kept in hashmap automatically
WITHOUT_CLASSIFICATION	// This method is called just after a new entry has been added
WITHOUT_CLASSIFICATION	// ensure map can be used by multiple threads
WITHOUT_CLASSIFICATION	// ensure map can be used by multiple threads
WITHOUT_CLASSIFICATION	// temporary hashtable to check for duplicated
WITHOUT_CLASSIFICATION	// if result is already in hashtable remove from result set
WITHOUT_CLASSIFICATION	// memorize location URI
WITHOUT_CLASSIFICATION	// fire up search command
WITHOUT_CLASSIFICATION	// fire up search command
WITHOUT_CLASSIFICATION	// fire up search command
WITHOUT_CLASSIFICATION	// first, create bucket for each provider
WITHOUT_CLASSIFICATION	// now search through all buckets
WITHOUT_CLASSIFICATION	// execute search
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// execute search
WITHOUT_CLASSIFICATION	// query using all criteria
WITHOUT_CLASSIFICATION	// query using all criteria
WITHOUT_CLASSIFICATION	// notify all listeners that new search results arrived
WITHOUT_CLASSIFICATION	// notify all listeners that new search results arrived
WITHOUT_CLASSIFICATION	// ensure this is called in the EDT
WITHOUT_CLASSIFICATION	// ensure this is called in the EDT
WITHOUT_CLASSIFICATION	// notify that search is finished
WITHOUT_CLASSIFICATION	// query provider
WITHOUT_CLASSIFICATION	// retrieve total result count
WITHOUT_CLASSIFICATION	// init Map
WITHOUT_CLASSIFICATION	// wait for 2 seconds until the dialog is openened
WITHOUT_CLASSIFICATION	// ask user to kill pending running commands or wait
WITHOUT_CLASSIFICATION	// create tag vector
WITHOUT_CLASSIFICATION	// ensure root exists
WITHOUT_CLASSIFICATION	// Do not allow an empty name
WITHOUT_CLASSIFICATION	// create uuid
WITHOUT_CLASSIFICATION	// very unlikely to happen
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// don't wait, just continue shutdown procedure, // commands will be killed
WITHOUT_CLASSIFICATION	// we don't need to check for running commands here because // there aren't any, shutdown plugins only use this thread
WITHOUT_CLASSIFICATION	// load xml configuration // -> will be automatically saved every couple of minutes and on // shutdown
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// this will overwrite the "old" tag with same id
WITHOUT_CLASSIFICATION	//private Hashtable properties = new Hashtable();
WITHOUT_CLASSIFICATION	//intern variable which is used for text replace purposes 
WITHOUT_CLASSIFICATION	// constructor for the class
WITHOUT_CLASSIFICATION	// some other version of the constructor
WITHOUT_CLASSIFICATION	// need to be called before search/replace to set up all the states we need
WITHOUT_CLASSIFICATION	// find backwards
WITHOUT_CLASSIFICATION	// match whole word
WITHOUT_CLASSIFICATION	// create pattern
WITHOUT_CLASSIFICATION	//	 need to be called after search/replace to make some changes in the states
WITHOUT_CLASSIFICATION	//lastreplaceposition = lastfoundposition;
WITHOUT_CLASSIFICATION	//lastreplaceposition = lastfoundposition; //+ replaceWith.length();
WITHOUT_CLASSIFICATION	// the implementation of the search next function. It returns always the  position of the NEXT found word.	
WITHOUT_CLASSIFICATION	// end of text was reached -> begin at the start
WITHOUT_CLASSIFICATION	//	the implementation of the replace function. It returns always the  position of the NEXT replaced word.
WITHOUT_CLASSIFICATION	//	the implementation of the replace all function.
WITHOUT_CLASSIFICATION	//$NON-NLS-2$
WITHOUT_CLASSIFICATION	// optional String-based attribute
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// text which we are looking for, or want to replace // replaced text which we want to have   // text where we make a search // search/replace is case sensitive  // search/replace matches whole words only // search/replace works backwards on the text
WITHOUT_CLASSIFICATION	//	private static final String[] SALUTATIONS = { "Mr.", "Mrs.", "Ms.", "Dr.", "Congressman", "Congresswoman", "Senator", "President", //		"Chancellor", "Minister", "Prime Minister" };
WITHOUT_CLASSIFICATION	//	private static final String[] TITLES = { "PhD", "Ph.D.", "PhD.", "Esq.", "Esquire" };
WITHOUT_CLASSIFICATION	// Initialize salutation strings
WITHOUT_CLASSIFICATION	// Initialize title strings
WITHOUT_CLASSIFICATION	// Treat a null name input string the same as an empty input string
WITHOUT_CLASSIFICATION	// Get the salutation if one is specified
WITHOUT_CLASSIFICATION	// Remove the salutation
WITHOUT_CLASSIFICATION	// Get the title if one is specified
WITHOUT_CLASSIFICATION	// Remove the title and the preceding comma
WITHOUT_CLASSIFICATION	// Assume last name only
WITHOUT_CLASSIFICATION	// More than 3 tokens. Assume the last token is the last name and take the rest of the names as the first name. // This handles names like this: "Sue & Gene Stark".
WITHOUT_CLASSIFICATION	// abort if not in debugging mode
WITHOUT_CLASSIFICATION	// abort if not in debugging mode
WITHOUT_CLASSIFICATION	// current time
WITHOUT_CLASSIFICATION	// store profiling point data
WITHOUT_CLASSIFICATION	// this profiling point is parent of the next one
WITHOUT_CLASSIFICATION	// store id
WITHOUT_CLASSIFICATION	// print all collected profile data
WITHOUT_CLASSIFICATION	// current path is the parent of the current element
WITHOUT_CLASSIFICATION	// Use static variables so the date is only updated once // during runtime
WITHOUT_CLASSIFICATION	// Top level element (Used to hold everything else)
WITHOUT_CLASSIFICATION	// The current element you are working on
WITHOUT_CLASSIFICATION	// For writing out the data // Indent for each level
WITHOUT_CLASSIFICATION	// Maximum data to put on a "one liner"
WITHOUT_CLASSIFICATION	/*	 * // Default constructor public XmlIO() { }	 */
WITHOUT_CLASSIFICATION	/*	 * // setup and load constructor public XmlIO(String FilePath) {	 * currentElement = null;	 *  }	 */
WITHOUT_CLASSIFICATION	// setup and load constructor
WITHOUT_CLASSIFICATION	// this.file = F;
WITHOUT_CLASSIFICATION	// Load a file. This is what starts things off.
WITHOUT_CLASSIFICATION	// Create the XML reader... // xr = XMLReaderFactory.createXMLReader();
WITHOUT_CLASSIFICATION	// Set the ContentHandler... // xr.setContentHandler( this );
WITHOUT_CLASSIFICATION	// Error
WITHOUT_CLASSIFICATION	// Error
WITHOUT_CLASSIFICATION	// XmlElement.printNode( getRoot(), "");
WITHOUT_CLASSIFICATION	// XmlElement.printNode( getRoot(), "");
WITHOUT_CLASSIFICATION	// element name
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// namespaceAware = false
WITHOUT_CLASSIFICATION	// Attr name
WITHOUT_CLASSIFICATION	// accumulate the contents into a buffer.
WITHOUT_CLASSIFICATION	// // Writer interface //
WITHOUT_CLASSIFICATION	// End class XmlIO
WITHOUT_CLASSIFICATION	// Important!! // -> replacing this character must happen first
WITHOUT_CLASSIFICATION	// *20030621, karlpeder*
WITHOUT_CLASSIFICATION	//builder.setValidation(true);
WITHOUT_CLASSIFICATION	//store.shutdown();
WITHOUT_CLASSIFICATION	// empty the worker list until one is left
WITHOUT_CLASSIFICATION	/* * Test for int hashCode(). */
WITHOUT_CLASSIFICATION	/* * Test for boolean equals(Object) */
WITHOUT_CLASSIFICATION	/* * Test for clone() */
WITHOUT_CLASSIFICATION	// top-level structure
WITHOUT_CLASSIFICATION	// top-level structure
WITHOUT_CLASSIFICATION	// mandatory String-based attribute
WITHOUT_CLASSIFICATION	// mandatory String-based attribute
WITHOUT_CLASSIFICATION	// mandatory String-based attribute
WITHOUT_CLASSIFICATION	// optional String-based attribute
WITHOUT_CLASSIFICATION	// optional String-based attribute
WITHOUT_CLASSIFICATION	// optional String-based attribute
WITHOUT_CLASSIFICATION	// should throw exception as attribute type "name2" is not defined in // type structure
WITHOUT_CLASSIFICATION	// user struct
WITHOUT_CLASSIFICATION	// identity definition
WITHOUT_CLASSIFICATION	// MULTIPLICITY.ZERO_TO_ONE is default
WITHOUT_CLASSIFICATION	// date time timezone definition
WITHOUT_CLASSIFICATION	// date range (start time, end time) definition
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	// document definition
WITHOUT_CLASSIFICATION	// locale definition
WITHOUT_CLASSIFICATION	// list of attachments
WITHOUT_CLASSIFICATION	// single attachment
WITHOUT_CLASSIFICATION	// message
WITHOUT_CLASSIFICATION	// single sender - re-use identity type
WITHOUT_CLASSIFICATION	// re-use identity type for recipient list
WITHOUT_CLASSIFICATION	// message body
WITHOUT_CLASSIFICATION	// message contains list of attachments
WITHOUT_CLASSIFICATION	// find all possible plugin directories
WITHOUT_CLASSIFICATION	/* * Test for clone() */
WITHOUT_CLASSIFICATION	// user struct
WITHOUT_CLASSIFICATION	/*(.*://.*?)"  "something" with ://          (could be .*? but then the Pattern would match whitespace)             (      (&gt;).*  a html-Encoded > followed by anything                                                  |  or(["+punc+"]*)"  any Punctuation        (<br>)? 0 or 1 trailing <br>             )$  end of String*/
WITHOUT_CLASSIFICATION	// create test userlist data
WITHOUT_CLASSIFICATION	// MULTIPLICITY.ONE is default
WITHOUT_CLASSIFICATION	/* * Test for getColor() */
WITHOUT_CLASSIFICATION	// create config-folder
WITHOUT_CLASSIFICATION	// create config-folder
WITHOUT_CLASSIFICATION	// remove configuration directory
WITHOUT_CLASSIFICATION	/*	 * Test method for 'org.columba.core.tagging.TagManager.addTag(String)'	 */
WITHOUT_CLASSIFICATION	/*	 * Test method for 'org.columba.core.tagging.TagManager.getAllTags()'	 */
WITHOUT_CLASSIFICATION	/*	 * Test method for 'org.columba.core.tagging.TagManager.getTag(String)'	 */
WITHOUT_CLASSIFICATION	// getByName
WITHOUT_CLASSIFICATION	/*	 * Test method for 'org.columba.core.tagging.TagManager.removeTag(String)'	 */
WITHOUT_CLASSIFICATION	// test if the size of self substracted list is 0
WITHOUT_CLASSIFICATION	// tests, if the list substracted with an empty list is equal to itself
WITHOUT_CLASSIFICATION	// tests, if the listPart substracted
WITHOUT_CLASSIFICATION	// Setup the XML that is to be written
WITHOUT_CLASSIFICATION	/* * Test for boolean not equals(Object) */
WITHOUT_CLASSIFICATION	/* * Test for hashCode() */
WITHOUT_CLASSIFICATION	/* * Test for XmlElement(String,String) */
WITHOUT_CLASSIFICATION	//AbstractFolderOptionsPlugin getPlugin(String name);
WITHOUT_CLASSIFICATION	//TableView getView();
WITHOUT_CLASSIFICATION	//MessageNode getRootNode();
WITHOUT_CLASSIFICATION	//MessageNode getMessageNode(Object uid);
WITHOUT_CLASSIFICATION	// get configuration
WITHOUT_CLASSIFICATION	// for example: "Re: this is a subject"
WITHOUT_CLASSIFICATION	//int getRow(MessageNode node);
WITHOUT_CLASSIFICATION	//MessageNode getMessageNodeAtRow(int index);
WITHOUT_CLASSIFICATION	// if subject doesn't start already with "Re:" prepend it
WITHOUT_CLASSIFICATION	// for example: "[columba-users]Re: this is a subject"
WITHOUT_CLASSIFICATION	// if subject doesn't start already with "Fwd:" prepend it
WITHOUT_CLASSIFICATION	// create To headerfield
WITHOUT_CLASSIFICATION	// Reply-To headerfield isn't specified, try to use From instead
WITHOUT_CLASSIFICATION	// Quote according model type (text/html)
WITHOUT_CLASSIFICATION	// if Reply-To headerfield isn't specified, try to use from
WITHOUT_CLASSIFICATION	// example: X-BeenThere: columba-devel@lists.sourceforge.net
WITHOUT_CLASSIFICATION	// plain text
WITHOUT_CLASSIFICATION	// *20040229, karlpeder* Use default account as fall back
WITHOUT_CLASSIFICATION	// RFC822 - Header
WITHOUT_CLASSIFICATION	// create html element, if it doesn't exist
WITHOUT_CLASSIFICATION	// get enable attribute
WITHOUT_CLASSIFICATION	// reply-to
WITHOUT_CLASSIFICATION	// date
WITHOUT_CLASSIFICATION	//attachments
WITHOUT_CLASSIFICATION	// copy flags
WITHOUT_CLASSIFICATION	// compose text part
WITHOUT_CLASSIFICATION	// compose html part
WITHOUT_CLASSIFICATION	// merge mimeparts and return
WITHOUT_CLASSIFICATION	// Init Mime-Header with Default-Values (text/html)
WITHOUT_CLASSIFICATION	// Set Default Charset or selected
WITHOUT_CLASSIFICATION	// insert link tags for urls and email addresses
WITHOUT_CLASSIFICATION	// for text comparisons
WITHOUT_CLASSIFICATION	// insert document type decl.
WITHOUT_CLASSIFICATION	// insert head section with charset def.
WITHOUT_CLASSIFICATION	// add <head> section
WITHOUT_CLASSIFICATION	// replace <head> section
WITHOUT_CLASSIFICATION	// add rest of body until start of </body>
WITHOUT_CLASSIFICATION	// add signature if defined
WITHOUT_CLASSIFICATION	// add the rest of the original body - and transfer back to body var.
WITHOUT_CLASSIFICATION	// add encoding if necessary
WITHOUT_CLASSIFICATION	// check if the charset is US-ASCII then there is something wrong // -> switch to UTF-8 and write to log-file
WITHOUT_CLASSIFICATION	// to allow empty messages
WITHOUT_CLASSIFICATION	// to allow empty messages
WITHOUT_CLASSIFICATION	// Init Mime-Header with Default-Values (text/plain)
WITHOUT_CLASSIFICATION	/*		 * *20030918, karlpeder* Tags are stripped if the model contains a html		 * message (since we are composing a plain text message here.		 */
WITHOUT_CLASSIFICATION	// write charset to header
WITHOUT_CLASSIFICATION	//List mimeParts = model.getAttachments();
WITHOUT_CLASSIFICATION	// *20030919, karlpeder* Added handling of html messages
WITHOUT_CLASSIFICATION	// compose message body as multipart/alternative
WITHOUT_CLASSIFICATION	// send as multipart/alternative
WITHOUT_CLASSIFICATION	// send as text/html
WITHOUT_CLASSIFICATION	// compose message body as text/plain
WITHOUT_CLASSIFICATION	// Create Multipart/Mixed if necessary
WITHOUT_CLASSIFICATION	// if the id not currently set (for example in the security panel in // the account-config
WITHOUT_CLASSIFICATION	//  Set id on from address
WITHOUT_CLASSIFICATION	// model -> view
WITHOUT_CLASSIFICATION	// size
WITHOUT_CLASSIFICATION	//Do not access the inputstream after this line!
WITHOUT_CLASSIFICATION	/*  	 * Add supported account formats here  	 * */
WITHOUT_CLASSIFICATION	//private boolean pop3;
WITHOUT_CLASSIFICATION	// return default-account ImapItem instead 
WITHOUT_CLASSIFICATION	// return default-account ImapItem instead 
WITHOUT_CLASSIFICATION	// create if not available
WITHOUT_CLASSIFICATION	// return default-account SpamItem instead 
WITHOUT_CLASSIFICATION	// return default-account identityItem instead
WITHOUT_CLASSIFICATION	// same object
WITHOUT_CLASSIFICATION	/*         * The fields on this object is in fact represented in the xml         * structure found as getRoot(). Therefore super.equals()         * should do the job         */
WITHOUT_CLASSIFICATION	/*         * The fields on this object is in fact represented in the xml         * structure found as getRoot(). Therefore super.hashCode()         * should do the job.         */
WITHOUT_CLASSIFICATION	//XmlElement.printNode(e,"");
WITHOUT_CLASSIFICATION	/*     * search for SecurityItem based on To headerfield     *     */
WITHOUT_CLASSIFICATION	// found match
WITHOUT_CLASSIFICATION	// path to account templates for POP3/IMAP
WITHOUT_CLASSIFICATION	// load xml document
WITHOUT_CLASSIFICATION	// get pop3 or imap account xml node
WITHOUT_CLASSIFICATION	// Default signature
WITHOUT_CLASSIFICATION	//Do nothing
WITHOUT_CLASSIFICATION	// fall back to first account as default
WITHOUT_CLASSIFICATION	//private File file;
WITHOUT_CLASSIFICATION	// example: "columba://org.columba.mail/<folder-id>/<message-id>"
WITHOUT_CLASSIFICATION	// found mail component frame
WITHOUT_CLASSIFICATION	// // composer_options.xml: // //<options> //<gui> //  <view id="0"> //    <window maximized="false" height="700" width="600" y="0" x="0" /> //    <toolbars infopanel="true" main="true" /> //    <splitpanes header="200" attachment="100" main="200" /> //    <addressbook enabled="false" /> //  </view> //</gui> //<spellcheck executable="/usr/bin/aspell" /> //<external_editor enabled="false" /> //<forward style="attachment" /> //<subject ask_if_empty="true" /> //<html send_as_multipart="true" enable="false" /> //</options>
WITHOUT_CLASSIFICATION	//apply initial version information
WITHOUT_CLASSIFICATION	// add initial messageframe treenode
WITHOUT_CLASSIFICATION	//      use global table options
WITHOUT_CLASSIFICATION	// Choice btw. text and html will be based on stored option
WITHOUT_CLASSIFICATION	// dismiss char
WITHOUT_CLASSIFICATION	// model -> view
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// Choice btw. text and html will be based on stored option
WITHOUT_CLASSIFICATION	// type-cast here is safe
WITHOUT_CLASSIFICATION	//	 header-item
WITHOUT_CLASSIFICATION	// get plugin handler for filter actions
WITHOUT_CLASSIFICATION	// get list of all filter actions
WITHOUT_CLASSIFICATION	// interate through all filter actions
WITHOUT_CLASSIFICATION	// name is used to load plugin
WITHOUT_CLASSIFICATION	// try to get instance of FilterAction
WITHOUT_CLASSIFICATION	// add command to CompoundCommand
WITHOUT_CLASSIFICATION	// get headerfield to search in (for example: Subject)
WITHOUT_CLASSIFICATION	// get headerfield to search in (for example: Subject)
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// get message header
WITHOUT_CLASSIFICATION	// cancel if headerfield doesn't exist
WITHOUT_CLASSIFICATION	// decode headerfield
WITHOUT_CLASSIFICATION	// see if theirs a match
WITHOUT_CLASSIFICATION	// skip if message doesn't contain the requested headerfield
WITHOUT_CLASSIFICATION	// get condition and convert it to constant as defined in // FilterCriteria
WITHOUT_CLASSIFICATION	// we don't need any configuration here
WITHOUT_CLASSIFICATION	// match all matches
WITHOUT_CLASSIFICATION	// transform string to Date representation
WITHOUT_CLASSIFICATION	// get date
WITHOUT_CLASSIFICATION	//      convert criteria into int-value
WITHOUT_CLASSIFICATION	// get message body
WITHOUT_CLASSIFICATION	// if something goes wrong here, fall back to "mark as read"
WITHOUT_CLASSIFICATION	// create reference
WITHOUT_CLASSIFICATION	// create command
WITHOUT_CLASSIFICATION	// implement your own search-engine here
WITHOUT_CLASSIFICATION	// used by virtual folder only
WITHOUT_CLASSIFICATION	// only used by VirtualFolder
WITHOUT_CLASSIFICATION	// update treenode
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// update treenode
WITHOUT_CLASSIFICATION	// update treenode
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	/*                    case '\'':                        sb.append("&apos;");                        i++;                        break;*/
WITHOUT_CLASSIFICATION	// @author fdietz // -> Moved code for updating mailfolderinfo to markMessage() // intentionally! //
WITHOUT_CLASSIFICATION	// on startup, there's shouldn't be any recent messages // -> we simply remember 0 recent messages here // property.addAttribute("recent", "0");
WITHOUT_CLASSIFICATION	// Check if the MessageFolderInfo is sane
WITHOUT_CLASSIFICATION	// get list of all uids
WITHOUT_CLASSIFICATION	// if message with uid doesn't exist -> skip
WITHOUT_CLASSIFICATION	// move message to trash if marked as expunged
WITHOUT_CLASSIFICATION	// remove message
WITHOUT_CLASSIFICATION	// remove from header-list
WITHOUT_CLASSIFICATION	// public abstract IHeaderListStorage getHeaderListStorage();
WITHOUT_CLASSIFICATION	// set folder changed flag // -> if not, the header cache wouldn't notice that something // -> has changed. And wouldn't save the changes.
WITHOUT_CLASSIFICATION	// if there is no search engine, try the default one
WITHOUT_CLASSIFICATION	// Sanity checks
WITHOUT_CLASSIFICATION	//protected RemoteSearchEngine searchEngine;
WITHOUT_CLASSIFICATION	// Groups are separated by at least one WS character
WITHOUT_CLASSIFICATION	// parent directory for mail folders // for example: ".columba/mail/"
WITHOUT_CLASSIFICATION	// Get the handler
WITHOUT_CLASSIFICATION	// which parents are possible ?
WITHOUT_CLASSIFICATION	// the group of the given parent
WITHOUT_CLASSIFICATION	// iterate through all foldertypes to find suitable ones
WITHOUT_CLASSIFICATION	// Add child to parent
WITHOUT_CLASSIFICATION	// Add child to parent
WITHOUT_CLASSIFICATION	// get root folder
WITHOUT_CLASSIFICATION	// create mandatory IMAP Inbox folder
WITHOUT_CLASSIFICATION	// associate inbox with root folder
WITHOUT_CLASSIFICATION	// notify folder tree model
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// the next new folder will get this UID
WITHOUT_CLASSIFICATION	// folderitem wraps xml configuration from tree.xml
WITHOUT_CLASSIFICATION	// locking mechanism
WITHOUT_CLASSIFICATION	// Root folder cache
WITHOUT_CLASSIFICATION	// register interest on tree node changes
WITHOUT_CLASSIFICATION	// register interest on tree node changes
WITHOUT_CLASSIFICATION	/*	public MailFolderCommandReference getCommandReference(MailFolderCommandReference r) {		return r;	}	*/
WITHOUT_CLASSIFICATION	// remove XmlElement
WITHOUT_CLASSIFICATION	// Check the type
WITHOUT_CLASSIFICATION	// do the same for the XmlElement node
WITHOUT_CLASSIFICATION	// do the same for the XmlElement of child
WITHOUT_CLASSIFICATION	// If rootFolder is not cached traverse the tree
WITHOUT_CLASSIFICATION	// There is no parent
WITHOUT_CLASSIFICATION	// no filterlist treenode found // -> create a new one
WITHOUT_CLASSIFICATION	// create filterlist datastructure
WITHOUT_CLASSIFICATION	// delete folder from your harddrive
WITHOUT_CLASSIFICATION	// if this worked, remove it from tree.xml configuration, too
WITHOUT_CLASSIFICATION	// get message with UID
WITHOUT_CLASSIFICATION	// get message with UID
WITHOUT_CLASSIFICATION	// get tree-like structure of mimeparts
WITHOUT_CLASSIFICATION	// Get the mimepart
WITHOUT_CLASSIFICATION	// Get the mimepart
WITHOUT_CLASSIFICATION	// skip this message, if it doesn't exist in source folder
WITHOUT_CLASSIFICATION	/*			 * ((AbstractLocalFolder) destFolder).setFlags(destuid, (Flags)			 * getFlags( uids[i]).clone());			 */
WITHOUT_CLASSIFICATION	// destFolder.fireMessageAdded(uids[i]);
WITHOUT_CLASSIFICATION	// we are done - clear the progress bar
WITHOUT_CLASSIFICATION	// generate UID for new message
WITHOUT_CLASSIFICATION	// save message stream to file
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// save header and attributes. Copy the flags!
WITHOUT_CLASSIFICATION	// Check if the message is already cached
WITHOUT_CLASSIFICATION	// this message is already cached
WITHOUT_CLASSIFICATION	// Parse Message from DataStorage
WITHOUT_CLASSIFICATION	// number of headerfields
WITHOUT_CLASSIFICATION	// number of headerfields
WITHOUT_CLASSIFICATION	// get header from cache
WITHOUT_CLASSIFICATION	// message doesn't exist (this shouldn't happen here)
WITHOUT_CLASSIFICATION	// if header contains more fields than the cached header
WITHOUT_CLASSIFICATION	// message isn't cached // -> just return header from cache
WITHOUT_CLASSIFICATION	// remove message from disk
WITHOUT_CLASSIFICATION	// fireMessageRemoved(uid, getFlags(uid));
WITHOUT_CLASSIFICATION	// update MessageFolderInfo
WITHOUT_CLASSIFICATION	// cached headerfield list
WITHOUT_CLASSIFICATION	// make sure to close all file handles // to the currently cached message // -> necessary for windows to be able to delete the local file
WITHOUT_CLASSIFICATION	// header cache is stored in "headerlist" subfolder
WITHOUT_CLASSIFICATION	// Must be out of sync!
WITHOUT_CLASSIFICATION	// Check if still consistent
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// create output stream
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// initialize progressbar with total number of messages
WITHOUT_CLASSIFICATION	// for each message in folder i
WITHOUT_CLASSIFICATION	// get message source from folder
WITHOUT_CLASSIFICATION	// prepend From line
WITHOUT_CLASSIFICATION	// write message source to file
WITHOUT_CLASSIFICATION	// append newline
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// close output stream
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// which kind of mark?
WITHOUT_CLASSIFICATION	// add check box for incl. of headers
WITHOUT_CLASSIFICATION	// create command
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// un-mark messages
WITHOUT_CLASSIFICATION	// train bayesian filter
WITHOUT_CLASSIFICATION	// train bayesian filter
WITHOUT_CLASSIFICATION	// mark messages
WITHOUT_CLASSIFICATION	// mark as spam /as not spam // for each message
WITHOUT_CLASSIFICATION	// increase progressbar value
WITHOUT_CLASSIFICATION	// cancel here if user requests
WITHOUT_CLASSIFICATION	// message belongs to which account?
WITHOUT_CLASSIFICATION	// skip if account information is not available
WITHOUT_CLASSIFICATION	// if spam filter is not enabled -> return
WITHOUT_CLASSIFICATION	// execute command
WITHOUT_CLASSIFICATION	// skip if user didn't enable this option
WITHOUT_CLASSIFICATION	// move message to user-configured folder (generally "Junk" // folder)
WITHOUT_CLASSIFICATION	// move message to trash
WITHOUT_CLASSIFICATION	// get array of source references
WITHOUT_CLASSIFICATION	// which kind of color?
WITHOUT_CLASSIFICATION	// saving last selected Message to the folder
WITHOUT_CLASSIFICATION	// for each message
WITHOUT_CLASSIFICATION	// set columba.color flag
WITHOUT_CLASSIFICATION	//vfolder.showFilterDialog((AbstractMailFrameController) getFrameMediator());
WITHOUT_CLASSIFICATION	// get references to selected folder and message
WITHOUT_CLASSIFICATION	// uid for messages to save
WITHOUT_CLASSIFICATION	// no message selected.
WITHOUT_CLASSIFICATION	//register for status events
WITHOUT_CLASSIFICATION	// get value of Subject, From or To header
WITHOUT_CLASSIFICATION	// create virtual folder
WITHOUT_CLASSIFICATION	// should be virtual
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// for each message
WITHOUT_CLASSIFICATION	// uid for messages to save
WITHOUT_CLASSIFICATION	// set properties for virtual folder // default is inbox if parent is null
WITHOUT_CLASSIFICATION	// define filter rule
WITHOUT_CLASSIFICATION	// define criteria
WITHOUT_CLASSIFICATION	// get folder that is going to be moved
WITHOUT_CLASSIFICATION	// get destination folder
WITHOUT_CLASSIFICATION	// AbstractFolder.append also automatically removes the folder // from its parent
WITHOUT_CLASSIFICATION	// get reference
WITHOUT_CLASSIFICATION	// get header of message
WITHOUT_CLASSIFICATION	// get sender
WITHOUT_CLASSIFICATION	// add sender to addressbook
WITHOUT_CLASSIFICATION	// add contact to addressbook
WITHOUT_CLASSIFICATION	// skip if no reference available
WITHOUT_CLASSIFICATION	// if folder is message folder // ->TODO (@author fdietz):  there should be an interface, instead of the AbstractMessageFolder // class
WITHOUT_CLASSIFICATION	// save headercache
WITHOUT_CLASSIFICATION	//	register for status events
WITHOUT_CLASSIFICATION	// Save message source for each selected message
WITHOUT_CLASSIFICATION	//setup save dialog
WITHOUT_CLASSIFICATION	// show dialog
WITHOUT_CLASSIFICATION	// file exists, user needs to confirm overwrite
WITHOUT_CLASSIFICATION	// save message source under selected filename
WITHOUT_CLASSIFICATION	// end of loop over selected messages
WITHOUT_CLASSIFICATION	// remove source folder
WITHOUT_CLASSIFICATION	// setting lastSelection for srcFolder to null
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// which kind of mark?
WITHOUT_CLASSIFICATION	// uid for messages to save
WITHOUT_CLASSIFICATION	//	register for status events
WITHOUT_CLASSIFICATION	// initialize progress bar with total number of messages
WITHOUT_CLASSIFICATION	// add source to destination folder
WITHOUT_CLASSIFICATION	//retry copy
WITHOUT_CLASSIFICATION	// update progress bar
WITHOUT_CLASSIFICATION	//reset progress bar
WITHOUT_CLASSIFICATION	// We are done - clear the status message with a delay
WITHOUT_CLASSIFICATION	/*		 * // use wrapper class for easier handling of references array adapter =		 * new FolderCommandAdapter( (MailFolderCommandReference[])		 * getReferences()); // get array of source references		 * MailFolderCommandReference[] r = adapter.getSourceFolderReferences();		 */
WITHOUT_CLASSIFICATION	// saving last selected message to the folder
WITHOUT_CLASSIFICATION	// mark message
WITHOUT_CLASSIFICATION	// get name of folder
WITHOUT_CLASSIFICATION	// rename folder
WITHOUT_CLASSIFICATION	// get source references
WITHOUT_CLASSIFICATION	// expunge folder
WITHOUT_CLASSIFICATION	//System.getProperty("line.separator");
WITHOUT_CLASSIFICATION	// save each message
WITHOUT_CLASSIFICATION	// determine type of body part
WITHOUT_CLASSIFICATION	// setup filters and filename for file chooser dialog
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get array of source references
WITHOUT_CLASSIFICATION	// show dialog
WITHOUT_CLASSIFICATION	// file exists, user needs to confirm overwrite
WITHOUT_CLASSIFICATION	// dismiss char
WITHOUT_CLASSIFICATION	// substitute special characters like: <,>,&,\t,\n
WITHOUT_CLASSIFICATION	// Add default extension if no extension is given by the user
WITHOUT_CLASSIFICATION	// store whether all headers should be incl.
WITHOUT_CLASSIFICATION	// save message
WITHOUT_CLASSIFICATION	// save message
WITHOUT_CLASSIFICATION	// end of for loop over uids to save
WITHOUT_CLASSIFICATION	// default value
WITHOUT_CLASSIFICATION	// create new
WITHOUT_CLASSIFICATION	// Does the user prefer html or plain text?
WITHOUT_CLASSIFICATION	// Get body of message depending on user preferences
WITHOUT_CLASSIFICATION	// First determine which charset to use
WITHOUT_CLASSIFICATION	// get charset from message
WITHOUT_CLASSIFICATION	// decode using default charset
WITHOUT_CLASSIFICATION	// test on extension
WITHOUT_CLASSIFICATION	// parse for urls / email adr. and substite with HTML-code
WITHOUT_CLASSIFICATION	// mark quotings with special font
WITHOUT_CLASSIFICATION	// encapsulate bodytext in html-code
WITHOUT_CLASSIFICATION	// use body as is
WITHOUT_CLASSIFICATION	// headers
WITHOUT_CLASSIFICATION	// headers
WITHOUT_CLASSIFICATION	// read configuration from options.xml file
WITHOUT_CLASSIFICATION	// create css-stylesheet string
WITHOUT_CLASSIFICATION	// create header table
WITHOUT_CLASSIFICATION	// process header value
WITHOUT_CLASSIFICATION	// strip tags //body = parser.stripHTMLTags(decodedBody, true); //body = parser.restoreSpecialCharacters(body);
WITHOUT_CLASSIFICATION	// message composed of headers and body
WITHOUT_CLASSIFICATION	// loop over all headers
WITHOUT_CLASSIFICATION	// ignore - columba.date is used instead
WITHOUT_CLASSIFICATION	// all headers should be included
WITHOUT_CLASSIFICATION	// add from, to, date, subj so they are the last elements
WITHOUT_CLASSIFICATION	// create array and return
WITHOUT_CLASSIFICATION	// get original folder
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	//register for status events
WITHOUT_CLASSIFICATION	// get reference
WITHOUT_CLASSIFICATION	// get header of message
WITHOUT_CLASSIFICATION	// add sender to addressbook
WITHOUT_CLASSIFICATION	// add contact to addressbook
WITHOUT_CLASSIFICATION	// Get body of message depending on user preferences
WITHOUT_CLASSIFICATION	// First determine which charset to use
WITHOUT_CLASSIFICATION	// get charset from message
WITHOUT_CLASSIFICATION	// decode using default charset
WITHOUT_CLASSIFICATION	// decode message body with respect to charset
WITHOUT_CLASSIFICATION	// check if virtual folder, if yes, do not use these uids, use the // real uids instead
WITHOUT_CLASSIFICATION	// selected messages
WITHOUT_CLASSIFICATION	// selected folder
WITHOUT_CLASSIFICATION	// for every message
WITHOUT_CLASSIFICATION	// the header key for date field
WITHOUT_CLASSIFICATION	// Header
WITHOUT_CLASSIFICATION	// Footer
WITHOUT_CLASSIFICATION	/*                 * *20030604, karlpeder* Fixed minor flaws to be able to print text                 * messages. Further more added support for html messages.                 */
WITHOUT_CLASSIFICATION	// uid for messages to print
WITHOUT_CLASSIFICATION	// Print each message
WITHOUT_CLASSIFICATION	// Setup print document for message
WITHOUT_CLASSIFICATION	// Add header information to print
WITHOUT_CLASSIFICATION	// *20030531, karlpeder* setting headerKeys to lowercase for // lookup!
WITHOUT_CLASSIFICATION	// special handling for dates
WITHOUT_CLASSIFICATION	// ignore leading weekday name (e.g. "Mon,"), since this // seems to give problems during parsing
WITHOUT_CLASSIFICATION	// fall back to use the Date header contents directly
WITHOUT_CLASSIFICATION	// Add list of attachments if applicable
WITHOUT_CLASSIFICATION	// Add body of message to print
WITHOUT_CLASSIFICATION	// print the print document (i.e. the message)
WITHOUT_CLASSIFICATION	// end of for loop over uids to print
WITHOUT_CLASSIFICATION	// create a print object and return it
WITHOUT_CLASSIFICATION	// create new local xml treenode
WITHOUT_CLASSIFICATION	// add to options if possible (so it will be saved)
WITHOUT_CLASSIFICATION	// try to fix broken html-strings
WITHOUT_CLASSIFICATION	// create temporary file and save validated body
WITHOUT_CLASSIFICATION	// true ~ scaling allowed
WITHOUT_CLASSIFICATION	// if we have a result
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// process all events collected until now
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// get references to selected folder and message
WITHOUT_CLASSIFICATION	// uid for messages to save
WITHOUT_CLASSIFICATION	// no message selected.
WITHOUT_CLASSIFICATION	// get value of Subject, From or To header
WITHOUT_CLASSIFICATION	// get folder that is going to be moved
WITHOUT_CLASSIFICATION	// get reference
WITHOUT_CLASSIFICATION	// get destination foldedr
WITHOUT_CLASSIFICATION	// expunge folder
WITHOUT_CLASSIFICATION	// cancel, if source equals destination folder
WITHOUT_CLASSIFICATION	// calling CopyMessageCommand.execute() here! //super.execute(worker);
WITHOUT_CLASSIFICATION	// get messgae UIDs
WITHOUT_CLASSIFICATION	// setting lastSelection to null
WITHOUT_CLASSIFICATION	// mark all messages as expunged
WITHOUT_CLASSIFICATION	// We are done - clear the status message after a delay
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// get filter list from folder
WITHOUT_CLASSIFICATION	// initialize progressbar
WITHOUT_CLASSIFICATION	// for each filter
WITHOUT_CLASSIFICATION	// update progressbar
WITHOUT_CLASSIFICATION	// get filter
WITHOUT_CLASSIFICATION	// search all messages which match this filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	// Collect the uids for one folder
WITHOUT_CLASSIFICATION	// Collect the uids for one folder
WITHOUT_CLASSIFICATION	// new folder, fire to the old folder
WITHOUT_CLASSIFICATION	// new folder, fire to the old folder
WITHOUT_CLASSIFICATION	// clear list and collect uids for new folder
WITHOUT_CLASSIFICATION	// clear list and collect uids for new folder
WITHOUT_CLASSIFICATION	// If there is still a parent -> remove it
WITHOUT_CLASSIFICATION	// add child to this node
WITHOUT_CLASSIFICATION	// perform other environment configurations
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// date
WITHOUT_CLASSIFICATION	// make sure that we have a Message-ID
WITHOUT_CLASSIFICATION	// add command to scheduler //MainInterface.processor.addOp(command);
WITHOUT_CLASSIFICATION	// size of message
WITHOUT_CLASSIFICATION	// perform other database configurations
WITHOUT_CLASSIFICATION	// message size should be at least 1 KB
WITHOUT_CLASSIFICATION	// parse all message files to recreate the header cache
WITHOUT_CLASSIFICATION	// we are done
WITHOUT_CLASSIFICATION	// headerList.clear();
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	//	true/false
WITHOUT_CLASSIFICATION	// set the attachment flag
WITHOUT_CLASSIFICATION	//Update is unnecessary
WITHOUT_CLASSIFICATION	// Can't happen
WITHOUT_CLASSIFICATION	// was this message already fetched from the server?
WITHOUT_CLASSIFICATION	// message flags
WITHOUT_CLASSIFICATION	// priority as integer value
WITHOUT_CLASSIFICATION	//	true, if message has attachments, false otherwise
WITHOUT_CLASSIFICATION	// properly decoded subject
WITHOUT_CLASSIFICATION	// short from, containing only name of person
WITHOUT_CLASSIFICATION	// Cc
WITHOUT_CLASSIFICATION	// host from which this message was downloaded
WITHOUT_CLASSIFICATION	// show attachment panel
WITHOUT_CLASSIFICATION	// message color
WITHOUT_CLASSIFICATION	// these are cached by default
WITHOUT_CLASSIFICATION	// account ID
WITHOUT_CLASSIFICATION	//return h;
WITHOUT_CLASSIFICATION	// to
WITHOUT_CLASSIFICATION	// POP3 message UID
WITHOUT_CLASSIFICATION	//		copy all internally used headerfields
WITHOUT_CLASSIFICATION	// header cache is stored in "headerlist" subfolder
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// internally used headerfields // these are all boolean values, which are saved using // a single int value
WITHOUT_CLASSIFICATION	// this internally used headerfields can be of every basic // type, including String, Integer, Boolean, Date, etc.
WITHOUT_CLASSIFICATION	// load boolean headerfields, which are compressed in one int value
WITHOUT_CLASSIFICATION	// load other internal headerfields, non-boolean type
WITHOUT_CLASSIFICATION	//load default headerfields, as defined in RFC822
WITHOUT_CLASSIFICATION	// if value doesn't exist, use false as default
WITHOUT_CLASSIFICATION	// save other internal headerfields, of non-boolean type
WITHOUT_CLASSIFICATION	// save default headerfields, as defined in RFC822
WITHOUT_CLASSIFICATION	// only called by FolderFactory
WITHOUT_CLASSIFICATION	// if creating new folder
WITHOUT_CLASSIFICATION	// Trigger Synchronization
WITHOUT_CLASSIFICATION	// Check if the mailbox has changed
WITHOUT_CLASSIFICATION	// Sort the uid list
WITHOUT_CLASSIFICATION	// Seems to be no change!
WITHOUT_CLASSIFICATION	// Ensure sizes are correct
WITHOUT_CLASSIFICATION	// Compute the number of new messages
WITHOUT_CLASSIFICATION	// Find the index of the largest local Uid
WITHOUT_CLASSIFICATION	// Still not found -> do a binary search
WITHOUT_CLASSIFICATION	// removedLocalUids = localUids.size() - 1 - position;
WITHOUT_CLASSIFICATION	// Check if all local uids have been deleted
WITHOUT_CLASSIFICATION	// all messages are new
WITHOUT_CLASSIFICATION	// all messages are new
WITHOUT_CLASSIFICATION	// Find the messages that have been deleted
WITHOUT_CLASSIFICATION	// Pack size is min 10, max 200 else mailboxsize / 10
WITHOUT_CLASSIFICATION	// Fetch Pack outer loop
WITHOUT_CLASSIFICATION	// Compare inner loop
WITHOUT_CLASSIFICATION	// next position in the local uid list
WITHOUT_CLASSIFICATION	// All the other local mails are deleted
WITHOUT_CLASSIFICATION	// Build a list of the new uids
WITHOUT_CLASSIFICATION	// Update the list of new and local uids
WITHOUT_CLASSIFICATION	// Fetch the headers of the new messages ...
WITHOUT_CLASSIFICATION	// .. and set the flags
WITHOUT_CLASSIFICATION	// fire message added updates
WITHOUT_CLASSIFICATION	// cached headerfield list
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// Trigger Synchronization
WITHOUT_CLASSIFICATION	// Sort the uid list
WITHOUT_CLASSIFICATION	// Build the remote lists of messages that are UNSEEN, FLAGGED, DELETED, // JUNK
WITHOUT_CLASSIFICATION	// Number of deleted messages is computed from exists on imap and // local // newMessages
WITHOUT_CLASSIFICATION	// First deleted all local uids that // are larger than the largest remote uid
WITHOUT_CLASSIFICATION	// Fetch these uids and compare them to the // local list
WITHOUT_CLASSIFICATION	// Search in packs beginning from newest to oldest // -> in most cases this should save us a lot of uid fetchings to // find the deleted messages
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.Folder#getObservable()	 */
WITHOUT_CLASSIFICATION	// Copy the header
WITHOUT_CLASSIFICATION	// We found the uid of a deleted message // -> remove it from the headerlist
WITHOUT_CLASSIFICATION	// Check if maybe no message at all got copied // In this case we are finished here
WITHOUT_CLASSIFICATION	// update the local flags and ensure that the MailboxInfo is correct
WITHOUT_CLASSIFICATION	// get IMAP rootfolder
WITHOUT_CLASSIFICATION	// Junk flag
WITHOUT_CLASSIFICATION	// Was this message actually copied?
WITHOUT_CLASSIFICATION	// update the HeaderList
WITHOUT_CLASSIFICATION	// We need IMAPFlags
WITHOUT_CLASSIFICATION	// update the HeaderList
WITHOUT_CLASSIFICATION	// Parser the header
WITHOUT_CLASSIFICATION	// Apply filter if enabled
WITHOUT_CLASSIFICATION	// get header with UID
WITHOUT_CLASSIFICATION	// Reenable Updating the mailbox
WITHOUT_CLASSIFICATION	// remember parent path // (this is necessary for IMAPRootFolder sync operations)
WITHOUT_CLASSIFICATION	// IMAP Folders have no own lock ,but share the lock from the Root // to ensure that only one operation can be processed simultanous
WITHOUT_CLASSIFICATION	// Since JUNK is a non-system Flag we have to set it with // an addtitional STORE command
WITHOUT_CLASSIFICATION	// Number of deleted messages is computed from exists on imap and local // newMessages
WITHOUT_CLASSIFICATION	// if "automatically apply filter" is selected & there // are // new // messages
WITHOUT_CLASSIFICATION	//cache.clear();
WITHOUT_CLASSIFICATION	// private ImapOperator operator;
WITHOUT_CLASSIFICATION	// super(node, folderItem);
WITHOUT_CLASSIFICATION	// delimiter found // -> recursively create all necessary folders to create // -> the final folder
WITHOUT_CLASSIFICATION	// if folder doesn't exist already
WITHOUT_CLASSIFICATION	// this is the final folder // subFolder = addIMAPChildFolder(parent, info, subchild);
WITHOUT_CLASSIFICATION	// recursively go on
WITHOUT_CLASSIFICATION	// no delimiter found // -> this is already the final folder // if folder doesn't exist already
WITHOUT_CLASSIFICATION	// Check the Noselect flag
WITHOUT_CLASSIFICATION	// Check the Noinferior flag
WITHOUT_CLASSIFICATION	// first remove all subfolders recursively
WITHOUT_CLASSIFICATION	// A child got removed -> stay at this position to // get the next
WITHOUT_CLASSIFICATION	// maybe remove this folder
WITHOUT_CLASSIFICATION	// Find special
WITHOUT_CLASSIFICATION	// search for a folder thats on the IMAP account // first try to find the local translation of special
WITHOUT_CLASSIFICATION	// fall back to the english version
WITHOUT_CLASSIFICATION	// we found a suitable folder -> set it
WITHOUT_CLASSIFICATION	// first clear all flags
WITHOUT_CLASSIFICATION	// create and tag all subfolders on server
WITHOUT_CLASSIFICATION	// don't care
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// fire event
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// get references
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// This fixes the strange behaviour of the courier imapserver // which sets the \Noselect flag on INBOX
WITHOUT_CLASSIFICATION	// If we are online sync the subscribed folders on first // connection
WITHOUT_CLASSIFICATION	// MainInterface.processor.addOp(c);
WITHOUT_CLASSIFICATION	// Trigger synchronization of the selected Folder
WITHOUT_CLASSIFICATION	// Trigger synchronization of the IMAPFolder
WITHOUT_CLASSIFICATION	// has the imap account no trash folder using the default trash folder
WITHOUT_CLASSIFICATION	// Find old numbers
WITHOUT_CLASSIFICATION	// check for new headers
WITHOUT_CLASSIFICATION	// Get the new numbers
WITHOUT_CLASSIFICATION	// fire new message event to interested listeners
WITHOUT_CLASSIFICATION	// create reference of newly arrived messages
WITHOUT_CLASSIFICATION	// Reenable the action
WITHOUT_CLASSIFICATION	// Trigger any pending Flag syncs
WITHOUT_CLASSIFICATION	// parse line by line
WITHOUT_CLASSIFICATION	// parse line by line
WITHOUT_CLASSIFICATION	// if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	// if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	// found new message
WITHOUT_CLASSIFICATION	// this is necessary to do!
WITHOUT_CLASSIFICATION	// Do not take existing link tags into account
WITHOUT_CLASSIFICATION	// parse line by line
WITHOUT_CLASSIFICATION	// if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	// found new message
WITHOUT_CLASSIFICATION	// line contains "@" (evolution mbox style) or //  -> import message in Columba
WITHOUT_CLASSIFICATION	// found new message
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.mail.folder.mailboximport.AbstractMailboxImporter#importMailbox(java.io.File, org.columba.api.command.IWorkerStatusController) */
WITHOUT_CLASSIFICATION	// MATCH ANY
WITHOUT_CLASSIFICATION	// save last message, because while loop aborted before being able to // save message
WITHOUT_CLASSIFICATION	// save last message, because while loop aborted before being able to // save message
WITHOUT_CLASSIFICATION	// line contains "-" (mozilla mbox style) //  -> import message in Columba
WITHOUT_CLASSIFICATION	// if line doesn't start with "From ???@???" or line length is 0 //  -> save everything in StringBuffer
WITHOUT_CLASSIFICATION	// enable lucene search index by default
WITHOUT_CLASSIFICATION	// enable lucene search index by default
WITHOUT_CLASSIFICATION	// update message starts of following messages
WITHOUT_CLASSIFICATION	//delete the file containing the message in the file system
WITHOUT_CLASSIFICATION	// Could not delete the file - possibly someone has a lock on it
WITHOUT_CLASSIFICATION	// ... delete it when Columba exists instead
WITHOUT_CLASSIFICATION	// try to re-use already instanciated class
WITHOUT_CLASSIFICATION	// setup filter configuration
WITHOUT_CLASSIFICATION	// MATCH_ALL
WITHOUT_CLASSIFICATION	// Add all found virtual uids to the result
WITHOUT_CLASSIFICATION	// initialisation
WITHOUT_CLASSIFICATION	// selecting the message
WITHOUT_CLASSIFICATION	// get header with UID
WITHOUT_CLASSIFICATION	// save last message, because while loop aborted before being able to // save message
WITHOUT_CLASSIFICATION	/*		 * worker.setDisplayText( "Search Result: " +		 * notDefaultEngineResult.size() + " messages found in " +		 * (System.currentTimeMillis() - startTime) + " ms");		 */
WITHOUT_CLASSIFICATION	// A list of all files that seem to be messages (only numbers in the name) //new Object[list.length];
WITHOUT_CLASSIFICATION	// MATCH_ALL
WITHOUT_CLASSIFICATION	// result = mergeFilterResult(v, uids, match); // only for debugging purpose // printList( result );
WITHOUT_CLASSIFICATION	// filter is disabled
WITHOUT_CLASSIFICATION	// this search request is covered by the query engine
WITHOUT_CLASSIFICATION	// clear status bar message now we are done (with a delay)
WITHOUT_CLASSIFICATION	// MATCH_ANY
WITHOUT_CLASSIFICATION	// method is not needed by IMAP
WITHOUT_CLASSIFICATION	// return searchMessages(filter, null);
WITHOUT_CLASSIFICATION	// method is not needed by IMAP
WITHOUT_CLASSIFICATION	//  This list is reduced, because most search requests can be  // answered anyway, using locally cached headerfields
WITHOUT_CLASSIFICATION	// pass the work to IMAPStore
WITHOUT_CLASSIFICATION	// method is not needed by IMAP
WITHOUT_CLASSIFICATION	// method is not needed by IMAP
WITHOUT_CLASSIFICATION	// If there is an existing lock then it must be from a // previous crash -> remove it!
WITHOUT_CLASSIFICATION	// pass the work to IMAPStore
WITHOUT_CLASSIFICATION	// Check if index is consitent with mailbox
WITHOUT_CLASSIFICATION	// Remove of lock didn't work -> delete by hand
WITHOUT_CLASSIFICATION	// Search again
WITHOUT_CLASSIFICATION	// Find all VirtualFolders and rewrite the FolderReference
WITHOUT_CLASSIFICATION	// show neat error dialog here
WITHOUT_CLASSIFICATION	// Find the body text part
WITHOUT_CLASSIFICATION	// current position in s
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// already handled
WITHOUT_CLASSIFICATION	//super.removeFolder(); // do nothing
WITHOUT_CLASSIFICATION	// Check if the parentfolder is remote & we are online				
WITHOUT_CLASSIFICATION	// only called by FolderTreeModel.createDirectories() and FolderTreeModel.add()
WITHOUT_CLASSIFICATION	// Analyze the Filter
WITHOUT_CLASSIFICATION	// If no flags filter the seach is still valid
WITHOUT_CLASSIFICATION	// redo the seach for the flags criteria
WITHOUT_CLASSIFICATION	// (tstich) reduced to 3 because all need to be // search when activated on startup // we only want 3 subfolders // -> if more children exist remove them
WITHOUT_CLASSIFICATION	// create new subfolder
WITHOUT_CLASSIFICATION	// if creation failed
WITHOUT_CLASSIFICATION	// copy all properties to the subfolder
WITHOUT_CLASSIFICATION	// lets find a good name for our new vfolder
WITHOUT_CLASSIFICATION	// update tree-view
WITHOUT_CLASSIFICATION	// get source folder reference
WITHOUT_CLASSIFICATION	// get source folder reference
WITHOUT_CLASSIFICATION	// VirtualMessage m = new VirtualMessage(f, uid, index);
WITHOUT_CLASSIFICATION	// Check if all uids are still exisiting
WITHOUT_CLASSIFICATION	// change to new folder
WITHOUT_CLASSIFICATION	// remove from source folder
WITHOUT_CLASSIFICATION	// remove from virtual folder
WITHOUT_CLASSIFICATION	// Now we can search this folder since no mail from // this folder will come in the list
WITHOUT_CLASSIFICATION	// Create a src uid array
WITHOUT_CLASSIFICATION	// Create a src uid array
WITHOUT_CLASSIFICATION	// search the src folder with the src uid array
WITHOUT_CLASSIFICATION	// search the src folder with the src uid array
WITHOUT_CLASSIFICATION	// Convert the src uids back to virtual uids
WITHOUT_CLASSIFICATION	// Convert the src uids back to virtual uids
WITHOUT_CLASSIFICATION	// Add all found virtual uids to the result
WITHOUT_CLASSIFICATION	// Add this header to the list for later searching
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// get header with UID
WITHOUT_CLASSIFICATION	// Check if all uids are still exisiting
WITHOUT_CLASSIFICATION	// change to new folder
WITHOUT_CLASSIFICATION	// can be an email address in a link BUG CA-174 // fix that with looking for an open link in the same line before // on the way from left to the current position of the email at s1 // find the last open link <a
WITHOUT_CLASSIFICATION	// First try to get the lock of the virtual folder
WITHOUT_CLASSIFICATION	/*		 * ColumbaHeader header = (ColumbaHeader) headerList.get(uid);		 * header.getAttributes().put(key, value);		 */
WITHOUT_CLASSIFICATION	// We need to get the locks of all folders
WITHOUT_CLASSIFICATION	// not supported
WITHOUT_CLASSIFICATION	// not supported
WITHOUT_CLASSIFICATION	// deactivate the folder
WITHOUT_CLASSIFICATION	// Copy the rest
WITHOUT_CLASSIFICATION	// Update the Virtual Header
WITHOUT_CLASSIFICATION	// fire updates
WITHOUT_CLASSIFICATION	// create scrollapen
WITHOUT_CLASSIFICATION	// don't care
WITHOUT_CLASSIFICATION	// shall we insert a link?
WITHOUT_CLASSIFICATION	// not supported by virtual folder
WITHOUT_CLASSIFICATION	// global option
WITHOUT_CLASSIFICATION	// use folder specific options
WITHOUT_CLASSIFICATION	// create element if not available
WITHOUT_CLASSIFICATION	// check if this folder is overwriting global options
WITHOUT_CLASSIFICATION	// use folder-based options
WITHOUT_CLASSIFICATION	// use global options
WITHOUT_CLASSIFICATION	// only local options have overwrite attribute
WITHOUT_CLASSIFICATION	// check if there are columns which need to be saved
WITHOUT_CLASSIFICATION	// remove all child nodes
WITHOUT_CLASSIFICATION	// save width
WITHOUT_CLASSIFICATION	// add columns
WITHOUT_CLASSIFICATION	// add column to JTable column model
WITHOUT_CLASSIFICATION	//tc.setModelIndex(position);
WITHOUT_CLASSIFICATION	// resize column width
WITHOUT_CLASSIFICATION	// these are the items, enabled as default
WITHOUT_CLASSIFICATION	// TableView view = tableController.getView();
WITHOUT_CLASSIFICATION	// should we re-use the last remembered selection?
WITHOUT_CLASSIFICATION	// sorting order
WITHOUT_CLASSIFICATION	// row count
WITHOUT_CLASSIFICATION	// row count == 0 --> empty table
WITHOUT_CLASSIFICATION	// if the last selection for the current folder is null, then we show // the // first/last message in the table and scroll to it.
WITHOUT_CLASSIFICATION	// changing the selection to the first/last row based on ascending // state
WITHOUT_CLASSIFICATION	// no messages in this folder
WITHOUT_CLASSIFICATION	// no messages in this folder
WITHOUT_CLASSIFICATION	// if a lastSelection for this folder is set // getting the last selected uid
WITHOUT_CLASSIFICATION	// this message doesn't exit in this folder anymore
WITHOUT_CLASSIFICATION	// init plugin handler
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// use folder specific options
WITHOUT_CLASSIFICATION	// check if this folder is overwriting global options
WITHOUT_CLASSIFICATION	// use folder-based options
WITHOUT_CLASSIFICATION	// use global options
WITHOUT_CLASSIFICATION	// get list of plugins
WITHOUT_CLASSIFICATION	// get list of plugins
WITHOUT_CLASSIFICATION	// if no folder was passed as argument, use global options
WITHOUT_CLASSIFICATION	// load plugin
WITHOUT_CLASSIFICATION	// create default configuration
WITHOUT_CLASSIFICATION	// use global settings
WITHOUT_CLASSIFICATION	// notify observers (sorting state submenu)
WITHOUT_CLASSIFICATION	// if we search in The MessageConroller
WITHOUT_CLASSIFICATION	// get the message controller
WITHOUT_CLASSIFICATION	// *20030614, karlpeder* In main view only enabled when // message(s) selected
WITHOUT_CLASSIFICATION	// check if we should use the folder-based configuration // or the global table configuration
WITHOUT_CLASSIFICATION	// toolbar text
WITHOUT_CLASSIFICATION	// check for new messages
WITHOUT_CLASSIFICATION	// send all unsent messages found in Outbox
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// model -> view
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// set small icon for menu // putValue(SMALL_ICON, ImageLoader.getImageIcon("stock_convert-16.png"));
WITHOUT_CLASSIFICATION	// "menu_edit_findagain_tooltip").replaceAll("&", ""));
WITHOUT_CLASSIFICATION	// @author Erich Schaer, Dmytro Podalyuk
WITHOUT_CLASSIFICATION	// if no account exists, return
WITHOUT_CLASSIFICATION	// Global # 1
WITHOUT_CLASSIFICATION	// West Europe # 4
WITHOUT_CLASSIFICATION	// East Europe # 10
WITHOUT_CLASSIFICATION	// East Asian # 17
WITHOUT_CLASSIFICATION	// West Asian # 30
WITHOUT_CLASSIFICATION	// protected CharsetMenuItem selectedMenuItem = new CharsetMenuItem(null);
WITHOUT_CLASSIFICATION	//setIcon(ImageLoader.getImageIcon("stock_font_16.png"));
WITHOUT_CLASSIFICATION	// Automatic Generation of Groups
WITHOUT_CLASSIFICATION	// selectedMenuItem.setCharset(e.getCharset());
WITHOUT_CLASSIFICATION	// init model (defaults to empty plain text message)
WITHOUT_CLASSIFICATION	// init controllers for different parts of the composer
WITHOUT_CLASSIFICATION	// listen to changes in the Subject to update the title bar // of the message composer window
WITHOUT_CLASSIFICATION	// composer can either edit in html or plain text mode // listen for configuration changes
WITHOUT_CLASSIFICATION	// init controller for the editor depending on message type
WITHOUT_CLASSIFICATION	// add JPanel with useful HTML related actions.
WITHOUT_CLASSIFICATION	// Hack to ensure charset is set correctly at start-up
WITHOUT_CLASSIFICATION	// ignore this
WITHOUT_CLASSIFICATION	// Setup DnD for the text and attachment list control.
WITHOUT_CLASSIFICATION	// create default element if not available
WITHOUT_CLASSIFICATION	// set model based on configuration
WITHOUT_CLASSIFICATION	// remove all components from container
WITHOUT_CLASSIFICATION	// re-add all top components like recipient editor/subject editor
WITHOUT_CLASSIFICATION	// if message contains attachments
WITHOUT_CLASSIFICATION	// show signature viewer
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// create splitpane containing the bodytext editor and the // attachment panel
WITHOUT_CLASSIFICATION	// add splitpane to the center
WITHOUT_CLASSIFICATION	// ViewItem viewItem = getViewItem();
WITHOUT_CLASSIFICATION	// no attachments // -> only show bodytext editor
WITHOUT_CLASSIFICATION	// no attachments // -> only show bodytext editor
WITHOUT_CLASSIFICATION	// re-paint composer-view
WITHOUT_CLASSIFICATION	// update panel
WITHOUT_CLASSIFICATION	/*		 * return isToolbarEnabled(ACCOUNTINFOPANEL);		 */
WITHOUT_CLASSIFICATION	// update ComposerModel based on user-changes in ComposerView
WITHOUT_CLASSIFICATION	// show attachment panel if necessary
WITHOUT_CLASSIFICATION	// Update all component according to the new model
WITHOUT_CLASSIFICATION	// sync model with the current (old) view
WITHOUT_CLASSIFICATION	// convert body text to comply with new editor format
WITHOUT_CLASSIFICATION	// switch editor and resync view with model
WITHOUT_CLASSIFICATION	// sync view with new update to date model
WITHOUT_CLASSIFICATION	// change ui container
WITHOUT_CLASSIFICATION	// enable/disable html toolbar
WITHOUT_CLASSIFICATION	// only prompt user, if composer contains some text
WITHOUT_CLASSIFICATION	// close Columba, if composer is only visible frame
WITHOUT_CLASSIFICATION	// default button title
WITHOUT_CLASSIFICATION	// save changes
WITHOUT_CLASSIFICATION	// close composer
WITHOUT_CLASSIFICATION	// close composer
WITHOUT_CLASSIFICATION	// cancel question dialog and don't close composer
WITHOUT_CLASSIFICATION	// save charset
WITHOUT_CLASSIFICATION	// save html state
WITHOUT_CLASSIFICATION	// hide signature viewer
WITHOUT_CLASSIFICATION	// original: "^[a-zA-Z0-9]+@[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,4}+$";
WITHOUT_CLASSIFICATION	// make sure that JFrame is not closed automatically // -> we want to prompt the user to save his work
WITHOUT_CLASSIFICATION	// Display error ? // As it is inmutable
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.frapuccino.addresscombobox.PatternSeparatedAutoCompleter#acceptedListItem(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	//private ImageIcon image2 = null; //private ImageIcon image3 = null;
WITHOUT_CLASSIFICATION	// default ~ plain text
WITHOUT_CLASSIFICATION	// set message
WITHOUT_CLASSIFICATION	// set whether the model should handle html or plain text
WITHOUT_CLASSIFICATION	// more initialization
WITHOUT_CLASSIFICATION	// notifyListeners();
WITHOUT_CLASSIFICATION	// notifyListeners();
WITHOUT_CLASSIFICATION	/*			 * *20030917, karlpeder* Set the model to html or text based on the			 * body specified on the command line. This is done using a simple			 * check: Does the body contain <html> and </html>			 */
WITHOUT_CLASSIFICATION	// set the body text
WITHOUT_CLASSIFICATION	// if this is no URI
WITHOUT_CLASSIFICATION	// Remove leading space after the separator character so that it is not removed from the text component's document, below. 
WITHOUT_CLASSIFICATION	// Surround the selected element with double-quotes, if necessary
WITHOUT_CLASSIFICATION	// clear autocomplete hashmap
WITHOUT_CLASSIFICATION	// fill hashmap with all available contacts and groups
WITHOUT_CLASSIFICATION	// view.table.getModel().addTableModelListener(this);
WITHOUT_CLASSIFICATION	// skip empty strings
WITHOUT_CLASSIFICATION	//setText(accountName);
WITHOUT_CLASSIFICATION	//view.setSelectedItem( model.getHeaderField("X-Priority") );
WITHOUT_CLASSIFICATION	//model.setHeaderField("X-Priority",(String) view.getSelectedItem());
WITHOUT_CLASSIFICATION	//setModel(listModel);
WITHOUT_CLASSIFICATION	//setCellRenderer(new ListRenderer());
WITHOUT_CLASSIFICATION	//      Get Tooltip for Icon
WITHOUT_CLASSIFICATION	// remove from model
WITHOUT_CLASSIFICATION	// remove from view
WITHOUT_CLASSIFICATION	// clear model
WITHOUT_CLASSIFICATION	// clear view
WITHOUT_CLASSIFICATION	// pass contact data along to AddressComboBox
WITHOUT_CLASSIFICATION	/*			 * encryptMenuItem.setSelected(model.isEncryptMessage());			 * signMenuItem.setSelected(model.isSignMessage());			 */
WITHOUT_CLASSIFICATION	// view.addListSelectionListener(this);
WITHOUT_CLASSIFICATION	// transfer attachments from model to view
WITHOUT_CLASSIFICATION	/*			 * clear existing attachments from the view *20031105, karlpeder*			 * Added to avoid dupplicating attachments when switching btw. html			 * and plain text.			 */
WITHOUT_CLASSIFICATION	// add attachments (mimeparts) from model to the view
WITHOUT_CLASSIFICATION	// transfer attachments from view to model // clear existing attachments from the model
WITHOUT_CLASSIFICATION	// add attachments (mimeparts) from view to the model
WITHOUT_CLASSIFICATION	// hide/show attachment panel
WITHOUT_CLASSIFICATION	// attachment controller doesn't support copy-operation
WITHOUT_CLASSIFICATION	// attachment controller doesn't support copy actions
WITHOUT_CLASSIFICATION	// attachment controller doesn't support paste actions
WITHOUT_CLASSIFICATION	// attachment controller doesn't support redo operation
WITHOUT_CLASSIFICATION	// attachment controller doesn't support undo operation
WITHOUT_CLASSIFICATION	// attachment controller doesn't support undo operation
WITHOUT_CLASSIFICATION	// view.setSelectionInterval(0, view.count() - 1);
WITHOUT_CLASSIFICATION	// FocusManager.getInstance().updateActions();
WITHOUT_CLASSIFICATION	//	name of font
WITHOUT_CLASSIFICATION	// size of font
WITHOUT_CLASSIFICATION	// currently used font
WITHOUT_CLASSIFICATION	// font configuration
WITHOUT_CLASSIFICATION	// overwrite look and feel font settings
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// fonts
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	/*     * Gets fired if configuration has changed.     *     * @see org.columba.mail.gui.config.general.MailOptionsDialog     *     * @see java.util.Observer#update(java.util.Observable, java.lang.Object)     */
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// "menu_edit_findagain_tooltip").replaceAll("&", ""));
WITHOUT_CLASSIFICATION	// @author Erich Schaer, Dmytro Podalyuk
WITHOUT_CLASSIFICATION	// overwrite look and feel font settings
WITHOUT_CLASSIFICATION	// register for configuration changes
WITHOUT_CLASSIFICATION	// ********** Methods necessary to hide view from clients ********
WITHOUT_CLASSIFICATION	// use default font settings
WITHOUT_CLASSIFICATION	// setBorder(BorderFactory.createCompoundBorder(BorderFactory // .createEmptyBorder(5, 5, 5, 5), BorderFactory // .createCompoundBorder(new RoundedBorder( // new Color(220, 220, 220)), BorderFactory // .createEmptyBorder(5, 5, 5, 5))));
WITHOUT_CLASSIFICATION	// textPane.setEnabled(false);
WITHOUT_CLASSIFICATION	// register interest on configuration changes
WITHOUT_CLASSIFICATION	// if account selection changes, reload signature file
WITHOUT_CLASSIFICATION	// add listener to changes
WITHOUT_CLASSIFICATION	// add listener to changes
WITHOUT_CLASSIFICATION	// remove listener from old account selection
WITHOUT_CLASSIFICATION	//SubjectDialog dialog = new SubjectDialog(composerInterface.composerFrame);
WITHOUT_CLASSIFICATION	// view data ->model
WITHOUT_CLASSIFICATION	// get selected account
WITHOUT_CLASSIFICATION	// get "Drafts" folder of account
WITHOUT_CLASSIFICATION	// check if we are currently editing a draft message
WITHOUT_CLASSIFICATION	// -> we need to replace old message
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// Add components to the panel:
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// large icon for toolbar
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// create command
WITHOUT_CLASSIFICATION	// toolbar text
WITHOUT_CLASSIFICATION	// toolbar text
WITHOUT_CLASSIFICATION	// view data ->model
WITHOUT_CLASSIFICATION	// delete source message
WITHOUT_CLASSIFICATION	// mark as read, mark as draft
WITHOUT_CLASSIFICATION	// create command reference
WITHOUT_CLASSIFICATION	// disable text in toolbar
WITHOUT_CLASSIFICATION	// disable text in toolbar
WITHOUT_CLASSIFICATION	//shortcut key
WITHOUT_CLASSIFICATION	//shortcut key
WITHOUT_CLASSIFICATION	//String checked = //	composerController.getComposerSpellCheck().checkText( //		composerController.getEditorController().getView().getText());
WITHOUT_CLASSIFICATION	//composerController.getEditorController().getView().setText(checked);
WITHOUT_CLASSIFICATION	// update view accordingly
WITHOUT_CLASSIFICATION	// small icon for menu //putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("send-later-16.png"));
WITHOUT_CLASSIFICATION	//      -> get source reference of message // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// mark message as answered
WITHOUT_CLASSIFICATION	// close composer view
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// Runs on the event-dispatching thread.
WITHOUT_CLASSIFICATION	// required for SwingWorker 3
WITHOUT_CLASSIFICATION	//setEnabled(false);
WITHOUT_CLASSIFICATION	//setEnabled(false);
WITHOUT_CLASSIFICATION	//getFrameController().close();
WITHOUT_CLASSIFICATION	/*        composerInterface.composerController.saveWindowPosition();        composerInterface.composerController.hideComposerWindow();        */
WITHOUT_CLASSIFICATION	//ComposerModel model = (ComposerModel) // ((ComposerController)getFrameController()).getModel();
WITHOUT_CLASSIFICATION	// open composer frame
WITHOUT_CLASSIFICATION	// apply model
WITHOUT_CLASSIFICATION	// model->view update
WITHOUT_CLASSIFICATION	// get first selected message
WITHOUT_CLASSIFICATION	// get headerfields
WITHOUT_CLASSIFICATION	// create composer model
WITHOUT_CLASSIFICATION	// create composer model
WITHOUT_CLASSIFICATION	//      ->set source reference in composermodel // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// set subject
WITHOUT_CLASSIFICATION	// initialize MimeHeader as RFC822-compliant-message
WITHOUT_CLASSIFICATION	// add mimepart to model
WITHOUT_CLASSIFICATION	// setup to, references and account
WITHOUT_CLASSIFICATION	// get mimeparts
WITHOUT_CLASSIFICATION	// setup charset and html
WITHOUT_CLASSIFICATION	/*			 * *20040210, karlpeder* Remove html comments - they are not			 * displayed properly in the composer			 */
WITHOUT_CLASSIFICATION	//  add all attachments
WITHOUT_CLASSIFICATION	// skip if bodypart (already added as quoted text)
WITHOUT_CLASSIFICATION	// add attachment
WITHOUT_CLASSIFICATION	// builder.setLeadingColumnOffset(2);
WITHOUT_CLASSIFICATION	// get first selected message
WITHOUT_CLASSIFICATION	// get headerfields
WITHOUT_CLASSIFICATION	// create composer model
WITHOUT_CLASSIFICATION	// set subject
WITHOUT_CLASSIFICATION	// set subject
WITHOUT_CLASSIFICATION	// setup to, references and account
WITHOUT_CLASSIFICATION	// get mimeparts
WITHOUT_CLASSIFICATION	// Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	// setup charset and html
WITHOUT_CLASSIFICATION	// Select the charset of the original message
WITHOUT_CLASSIFICATION	// Stick with the default charset
WITHOUT_CLASSIFICATION	// Do decoding stuff
WITHOUT_CLASSIFICATION	// Quote original message - different methods for text and html
WITHOUT_CLASSIFICATION	// build "quoted" message
WITHOUT_CLASSIFICATION	// comments are not displayed // correctly in composer
WITHOUT_CLASSIFICATION	// Text: Addition of > before each line
WITHOUT_CLASSIFICATION	// ->set source reference in composermodel // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// get answer from template
WITHOUT_CLASSIFICATION	// template folder has uid=107
WITHOUT_CLASSIFICATION	// retrieve headerlist of tempate folder
WITHOUT_CLASSIFICATION	// choose template
WITHOUT_CLASSIFICATION	// user pressed OK
WITHOUT_CLASSIFICATION	// get bodytext of template message
WITHOUT_CLASSIFICATION	// *20030926, karlpeder* Added html support // MimePart mp = tree.getFirstTextPart("plain");
WITHOUT_CLASSIFICATION	// Add all recipients to the collected addresses
WITHOUT_CLASSIFICATION	// From which account is this mail?
WITHOUT_CLASSIFICATION	// remove duplicates
WITHOUT_CLASSIFICATION	// Add addresses to the addressbook
WITHOUT_CLASSIFICATION	// create In-Reply-To:, References: headerfields
WITHOUT_CLASSIFICATION	// select the account this mail was received from
WITHOUT_CLASSIFICATION	// open composer frame
WITHOUT_CLASSIFICATION	// apply model
WITHOUT_CLASSIFICATION	// model->view update
WITHOUT_CLASSIFICATION	// get first selected message
WITHOUT_CLASSIFICATION	// get headerfields
WITHOUT_CLASSIFICATION	// create composer model
WITHOUT_CLASSIFICATION	// set subject
WITHOUT_CLASSIFICATION	// setup to, references and account
WITHOUT_CLASSIFICATION	// get mimeparts
WITHOUT_CLASSIFICATION	// Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	// setup charset and html
WITHOUT_CLASSIFICATION	/*			 * *20040210, karlpeder* Remove html comments - they are not			 * displayed properly in the composer			 */
WITHOUT_CLASSIFICATION	// skip if bodypart (already added as quoted text)
WITHOUT_CLASSIFICATION	// add attachment
WITHOUT_CLASSIFICATION	// Select the charset of the original message
WITHOUT_CLASSIFICATION	// Stick with the default charset
WITHOUT_CLASSIFICATION	// Do decoding stuff
WITHOUT_CLASSIFICATION	// ->set source reference in composermodel // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// create In-Reply-To:, References: headerfields
WITHOUT_CLASSIFICATION	// select the account this mail was received from
WITHOUT_CLASSIFICATION	// Use reply-to field if given, else use from
WITHOUT_CLASSIFICATION	// get selected messages
WITHOUT_CLASSIFICATION	// we only need the first message
WITHOUT_CLASSIFICATION	// get message flags
WITHOUT_CLASSIFICATION	// store reference to source message
WITHOUT_CLASSIFICATION	// html
WITHOUT_CLASSIFICATION	// copy every headerfield the original message contains
WITHOUT_CLASSIFICATION	// Get all MimeParts
WITHOUT_CLASSIFICATION	// add all attachments
WITHOUT_CLASSIFICATION	// set subject ; mod:20040629 SWITT
WITHOUT_CLASSIFICATION	// set From for redirecting; new: 20040629 SWITT
WITHOUT_CLASSIFICATION	// Html: Insertion of text before and after original message
WITHOUT_CLASSIFICATION	// build message orginal ; mod:2004629 SWITT
WITHOUT_CLASSIFICATION	// Text: take org. message; mod:20040629 SWITT
WITHOUT_CLASSIFICATION	// open composer frame
WITHOUT_CLASSIFICATION	// apply model
WITHOUT_CLASSIFICATION	// model->view update
WITHOUT_CLASSIFICATION	// get first selected message
WITHOUT_CLASSIFICATION	// get headerfields
WITHOUT_CLASSIFICATION	// create composer model
WITHOUT_CLASSIFICATION	//      ->set source reference in composermodel // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// set subject
WITHOUT_CLASSIFICATION	// initialize MimeHeader as RFC822-compliant-message
WITHOUT_CLASSIFICATION	// add mimepart to model
WITHOUT_CLASSIFICATION	// setup to, references and account
WITHOUT_CLASSIFICATION	// get mimeparts
WITHOUT_CLASSIFICATION	// Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	// setup charset and html
WITHOUT_CLASSIFICATION	// Select the charset of the original message
WITHOUT_CLASSIFICATION	// Stick with the default charset
WITHOUT_CLASSIFICATION	// Quote original message - different methods for text and html
WITHOUT_CLASSIFICATION	// build "quoted" message
WITHOUT_CLASSIFICATION	// Text: Addition of > before each line
WITHOUT_CLASSIFICATION	// ->set source reference in composermodel // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// Add addresses to the addressbook
WITHOUT_CLASSIFICATION	// create In-Reply-To:, References: headerfields
WITHOUT_CLASSIFICATION	// select the account this mail was received from
WITHOUT_CLASSIFICATION	// Use reply-to field if given, else use from
WITHOUT_CLASSIFICATION	// Set the focus to the editor pane and set cursor to the top
WITHOUT_CLASSIFICATION	// 	Stick with the default charset
WITHOUT_CLASSIFICATION	// recipient lists
WITHOUT_CLASSIFICATION	// addressbook list
WITHOUT_CLASSIFICATION	// action buttons for moving contacts
WITHOUT_CLASSIFICATION	// labels
WITHOUT_CLASSIFICATION	// models for addressbook/recipients lists
WITHOUT_CLASSIFICATION	// b2.nextLine();
WITHOUT_CLASSIFICATION	// comments are not displayed // correctly in composer
WITHOUT_CLASSIFICATION	/*	 * public IHeaderItemList[] getHeaderItemLists() { return headerItemList; }	 */
WITHOUT_CLASSIFICATION	//			toListModel.clear(); //			ccListModel.clear(); //			bccListModel.clear();
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// register for changes to the editor // controller.addContainerListenerForEditor(this);
WITHOUT_CLASSIFICATION	// register for changes to editor type (text / html)
WITHOUT_CLASSIFICATION	// CellConstraints cc = new CellConstraints();
WITHOUT_CLASSIFICATION	// we generate most buttons using the actions already instanciated
WITHOUT_CLASSIFICATION	// paragraphComboBox.setEnabled(enableHtml);
WITHOUT_CLASSIFICATION	// builder.add(paraLabel, cc.xy(1, 7));
WITHOUT_CLASSIFICATION	// builder.add(panel, cc.xy(1, 7));
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// need to change selection // Set ignore flag
WITHOUT_CLASSIFICATION	// clear ignore flag
WITHOUT_CLASSIFICATION	// selection in the paragraph combo box
WITHOUT_CLASSIFICATION	// only do something if ignore flag is not set
WITHOUT_CLASSIFICATION	// set paragraph formatting according to the selection
WITHOUT_CLASSIFICATION	// int selectedIndex = sizeComboBox.getSelectedIndex();
WITHOUT_CLASSIFICATION	// select the "Normal" entry as default
WITHOUT_CLASSIFICATION	// enable controls if we are not in html edit mode
WITHOUT_CLASSIFICATION	// private JTextPane view;
WITHOUT_CLASSIFICATION	// view = editor.getView();
WITHOUT_CLASSIFICATION	// // This doesn't handle ChangedCharsetExceptions correctly. // view.setText(text);
WITHOUT_CLASSIFICATION	// try again, but ignore charset specification in the html
WITHOUT_CLASSIFICATION	// other IOExceptions than ChangedCharsetException
WITHOUT_CLASSIFICATION	// clear existing text
WITHOUT_CLASSIFICATION	// delete old contents
WITHOUT_CLASSIFICATION	// if no text is specified, we are done now
WITHOUT_CLASSIFICATION	// load contents into document
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// select the "Normal" entry as default
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	// register for model changes to enable/disable when // user switches between html or text plain mode
WITHOUT_CLASSIFICATION	// register for text cursor/caret and formatting changes // to select/deselect action
WITHOUT_CLASSIFICATION	// register for text cursor/caret and formatting changes // to select/deselect action
WITHOUT_CLASSIFICATION	//  view.addCaretListener(this);
WITHOUT_CLASSIFICATION	// set paragraph formatting according to the given action
WITHOUT_CLASSIFICATION	// Enable when implemented
WITHOUT_CLASSIFICATION	// select the menu item corresponding to present format
WITHOUT_CLASSIFICATION	// Update the composer
WITHOUT_CLASSIFICATION	// reset
WITHOUT_CLASSIFICATION	// group item
WITHOUT_CLASSIFICATION	// to lower case
WITHOUT_CLASSIFICATION	// compare if item starts with str
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// END public ExternalEditor()
WITHOUT_CLASSIFICATION	// END public ExternalEditor(String EditorCommand)
WITHOUT_CLASSIFICATION	// write text to file
WITHOUT_CLASSIFICATION	// remember old font properties
WITHOUT_CLASSIFICATION	// create big size font to display in the composer textfield
WITHOUT_CLASSIFICATION	// execute application, enabling blocking
WITHOUT_CLASSIFICATION	// rafter the user saved the file and closed the // external text editor, we read the new text from the file
WITHOUT_CLASSIFICATION	// set old font properties
WITHOUT_CLASSIFICATION	// set new text
WITHOUT_CLASSIFICATION	// END public boolean startExternalEditor()
WITHOUT_CLASSIFICATION	// END public class ExternalEditor
WITHOUT_CLASSIFICATION	//dialog.getContentPane().setLayout( new BoxLayout( dialog.getContentPane(), BoxLayout.Y_AXIS ) );
WITHOUT_CLASSIFICATION	//centerPanel.setLayout( new BoxLayout( centerPanel, BoxLayout.Y_AXIS ) );
WITHOUT_CLASSIFICATION	/*TitledBorder etched = javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), " Login ");centerPanel.setBorder( etched );*/
WITHOUT_CLASSIFICATION	//centerPanel.add( Box.createRigidArea( new java.awt.Dimension(0,5) ) );
WITHOUT_CLASSIFICATION	/*JPanel panel = new JPanel();panel.setLayout( new BoxLayout( panel, BoxLayout.X_AXIS ) );panel.add( hostLabel );centerPanel.add( panel );*/
WITHOUT_CLASSIFICATION	//centerPanel.add( Box.createRigidArea( new java.awt.Dimension(0,5) ) ); //centerPanel.add( Box.createRigidArea( new java.awt.Dimension(0,5) ) );
WITHOUT_CLASSIFICATION	//Plain text components don't fire these events
WITHOUT_CLASSIFICATION	// First print a quote
WITHOUT_CLASSIFICATION	// Do we have to insert a quoteprefix?
WITHOUT_CLASSIFICATION	//		 for each JComboBox item
WITHOUT_CLASSIFICATION	//$NON-NLS-1$		
WITHOUT_CLASSIFICATION	//$NON-NLS-1$			
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// check if the user entered valid data
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// defaultAccountCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	// attributPanel.add(imapPanel, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	/*		 * mainConstraints.fill = GridBagConstraints.BOTH;		 * mainConstraints.insets = new Insets(0, 0, 0, 0);		 * mainConstraints.gridwidth = GridBagConstraints.REMAINDER;		 * mainConstraints.weightx = 1.0; mainConstraints.weighty = 1.0;		 */
WITHOUT_CLASSIFICATION	// disable components
WITHOUT_CLASSIFICATION	// update configuration
WITHOUT_CLASSIFICATION	// update signature -> will notify all listeners that signature changed
WITHOUT_CLASSIFICATION	// mainPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 10, 0));
WITHOUT_CLASSIFICATION	// update tree label
WITHOUT_CLASSIFICATION	// @author: fdietz
WITHOUT_CLASSIFICATION	// notify all observers
WITHOUT_CLASSIFICATION	// here)
WITHOUT_CLASSIFICATION	// restart timer
WITHOUT_CLASSIFICATION	//Create the file
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them
WITHOUT_CLASSIFICATION	// user didn't select any folder // -> make Inbox the default folder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// skip the first column
WITHOUT_CLASSIFICATION	// skip the first column
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them // here)
WITHOUT_CLASSIFICATION	/*		 * mainConstraints.fill = GridBagConstraints.BOTH;		 * mainConstraints.insets = new Insets(0, 0, 0, 0);		 * mainConstraints.gridwidth = GridBagConstraints.REMAINDER;		 * mainConstraints.weightx = 1.0; mainConstraints.weighty = 1.0;		 */
WITHOUT_CLASSIFICATION	// defaultAccountCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	// defaultAccountCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	// user didn't select any folder // -> make Inbox the default folder
WITHOUT_CLASSIFICATION	// Add components to the panel: //		builder.append(defaultAccountCheckBox, 7); //		builder.nextLine();
WITHOUT_CLASSIFICATION	// builder.setLeadingColumnOffset(1);
WITHOUT_CLASSIFICATION	// builder.setLeadingColumnOffset(1);
WITHOUT_CLASSIFICATION	// builder.setLeadingColumnOffset(1);
WITHOUT_CLASSIFICATION	// builder.nextLine();
WITHOUT_CLASSIFICATION	// builder.nextLine();
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need // to // define them here)
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need // to // define them here)
WITHOUT_CLASSIFICATION	// b.nextLine(); // b.append(loginLabel, loginTextField);
WITHOUT_CLASSIFICATION	// authenticationComboBox.addActionListener(this);
WITHOUT_CLASSIFICATION	// Add previously fetch authentication modes
WITHOUT_CLASSIFICATION	// Add previously fetch authentication modes
WITHOUT_CLASSIFICATION	// let exception handler process other errors
WITHOUT_CLASSIFICATION	// Save the authentication modes
WITHOUT_CLASSIFICATION	// private ConfigFrame frame;
WITHOUT_CLASSIFICATION	// disable the actionlistener for this period // to avoid an unwanted port check
WITHOUT_CLASSIFICATION	// reactivate
WITHOUT_CLASSIFICATION	// if securest write DEFAULT
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to // define them here)
WITHOUT_CLASSIFICATION	// Update the Port
WITHOUT_CLASSIFICATION	// Default Port
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// skip the first column
WITHOUT_CLASSIFICATION	// skip the first column
WITHOUT_CLASSIFICATION	// Add components to the panel:
WITHOUT_CLASSIFICATION	// Add components to the panel:
WITHOUT_CLASSIFICATION	//does not occur
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them // here)
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them // here)
WITHOUT_CLASSIFICATION	// let exception handler process other errors
WITHOUT_CLASSIFICATION	// let exception handler process other errors
WITHOUT_CLASSIFICATION	// Save the authentication modes
WITHOUT_CLASSIFICATION	// POP3s / IMAPs
WITHOUT_CLASSIFICATION	// Check for default Ports
WITHOUT_CLASSIFICATION	/* accountItem.getPopItem() */
WITHOUT_CLASSIFICATION	//private ConfigFrame frame;
WITHOUT_CLASSIFICATION	//this.frame = frame;
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	// 3 columns // rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	//b.append(selectSignatureButton);
WITHOUT_CLASSIFICATION	/*         * JPanel innerPanel = builder.getPanel();         * FormDebugUtils.dumpAll(innerPanel); setLayout(new BorderLayout());         * add(innerPanel, BorderLayout.CENTER);         */
WITHOUT_CLASSIFICATION	//enableCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	/*		 * builder.append(alwaysEncryptCheckBox, 3); builder.nextLine();		 */
WITHOUT_CLASSIFICATION	//typeComboBox.setMargin( new Insets( 0,0,0,0 ) );
WITHOUT_CLASSIFICATION	//pathButton.setMargin( new Insets( 0,0,0,0 ) );
WITHOUT_CLASSIFICATION	//typeComboBox.setEnabled(b);
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// MUST do this for background to show up.
WITHOUT_CLASSIFICATION	// top panel
WITHOUT_CLASSIFICATION	// topPanel.setLayout( );
WITHOUT_CLASSIFICATION	// mainPanel.add( topBorderPanel, BorderLayout.NORTH );
WITHOUT_CLASSIFICATION	// c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	// notify all observers
WITHOUT_CLASSIFICATION	// String value = (String) theList.getSelectedValue();
WITHOUT_CLASSIFICATION	// remove mail-checking stuff
WITHOUT_CLASSIFICATION	//MUST do this for background to show up.
WITHOUT_CLASSIFICATION	//setBorder( BorderFactory.createEmptyBorder(0,1,0,0) );
WITHOUT_CLASSIFICATION	// setBorder(unselectedBorder);
WITHOUT_CLASSIFICATION	// this should not happen, the templates seem to be missing
WITHOUT_CLASSIFICATION	//				IMAPRootFolder parentFolder = FolderFactory.getInstance() //						.createIMAPRootFolder(account); //				IMailFolder inbox = FolderFactory.getInstance() //						.createIMAPFolder(parentFolder, "INBOX");
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	// execute the command
WITHOUT_CLASSIFICATION	// top panel
WITHOUT_CLASSIFICATION	// topPanel.setLayout( );
WITHOUT_CLASSIFICATION	// topBorderPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, // 0));
WITHOUT_CLASSIFICATION	// c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	// notify all observers
WITHOUT_CLASSIFICATION	// add welcome message to new account inbox
WITHOUT_CLASSIFICATION	// add account to mail-checking manager
WITHOUT_CLASSIFICATION	// generally we can just use the same login for both servers
WITHOUT_CLASSIFICATION	// get column of list
WITHOUT_CLASSIFICATION	// find colum
WITHOUT_CLASSIFICATION	// remove disabled column
WITHOUT_CLASSIFICATION	// make sure this configuration is also visually working immediately
WITHOUT_CLASSIFICATION	// list.repaint();
WITHOUT_CLASSIFICATION	// disable selected item
WITHOUT_CLASSIFICATION	// ask the user about the destination file
WITHOUT_CLASSIFICATION	// get list of all folders
WITHOUT_CLASSIFICATION	// get list of all selected folders
WITHOUT_CLASSIFICATION	// create command reference array for the command
WITHOUT_CLASSIFICATION	// TreePath path = tree.getSelectionPath();
WITHOUT_CLASSIFICATION	// I need revalidate if node is root. but why?
WITHOUT_CLASSIFICATION	// private AdapterNode actNode;
WITHOUT_CLASSIFICATION	// private Filter filter; // private JDialog dialog;
WITHOUT_CLASSIFICATION	/*	 * private JButton enableButton; private JButton disableButton;	 */
WITHOUT_CLASSIFICATION	// Must go backwards or else the list will remove the wrong filters.
WITHOUT_CLASSIFICATION	/*	 * private TitledBorderLabel m_titledborderlabel1 = new TitledBorderLabel();	 * 	 * private TitledBorderLabel m_titledborderlabel2 = new TitledBorderLabel();	 */
WITHOUT_CLASSIFICATION	// jpanel1.add(addCriteriaButton, cc.xy(1, 1));
WITHOUT_CLASSIFICATION	// jpanel1.add(addActionButton, cc.xy(1, 1));
WITHOUT_CLASSIFICATION	// description
WITHOUT_CLASSIFICATION	// id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	// id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	//String userVisibleName = pluginHandler.getUserVisibleName(id);
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// cancel
WITHOUT_CLASSIFICATION	// user didn't select any folder // -> make Inbox the default folder
WITHOUT_CLASSIFICATION	// set component values
WITHOUT_CLASSIFICATION	// filter description JTextField
WITHOUT_CLASSIFICATION	// all / match any JComboBox
WITHOUT_CLASSIFICATION	// get values from components
WITHOUT_CLASSIFICATION	// frame.listView.update();
WITHOUT_CLASSIFICATION	// int type = action.getActionInt();
WITHOUT_CLASSIFICATION	// maybe the plugin wasn't loaded correctly // -> use default // row = new MarkActionRow(this,action);
WITHOUT_CLASSIFICATION	/*				 * c.gridx = GridBagConstraints.REMAINDER; c.anchor =				 * GridBagConstraints.NORTHEAST; gridbag.setConstraints(				 * removeButton, c ); panel.add( removeButton );				 */
WITHOUT_CLASSIFICATION	// fall-back if error occurs
WITHOUT_CLASSIFICATION	// block transfer to self!
WITHOUT_CLASSIFICATION	// if it is in a scroll pane, then we add to the end of the // list.
WITHOUT_CLASSIFICATION	// enabled/disabled
WITHOUT_CLASSIFICATION	/*		 * matchComboBox.addItem("is"); matchComboBox.addItem("is not");		 * matchComboBox.addItem("begins with"); matchComboBox.addItem("ends		 * with");		 */
WITHOUT_CLASSIFICATION	// Fall back to today
WITHOUT_CLASSIFICATION	// textField.setText(criteria.getPattern());
WITHOUT_CLASSIFICATION	// criteria.setPattern((String) textField.getText());
WITHOUT_CLASSIFICATION	// Ok
WITHOUT_CLASSIFICATION	// couldn't find folder associated with this uid // -> open the select folder dialog
WITHOUT_CLASSIFICATION	// treePathButton.setMargin(new Insets(0,0,0,0));
WITHOUT_CLASSIFICATION	// use "mark as read" as default fallback mechanism
WITHOUT_CLASSIFICATION	// Add the custom color item.
WITHOUT_CLASSIFICATION	// String userVisibleName = pluginHandler.getUserVisibleName(id);
WITHOUT_CLASSIFICATION	//private JLabel enableTextIndexingLabel;
WITHOUT_CLASSIFICATION	// JCheckBox overwriteOptionsCheckBox;
WITHOUT_CLASSIFICATION	// focus name textfield
WITHOUT_CLASSIFICATION	// 3 columns //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Create a FormLayout instance. //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// Add components to the panel:
WITHOUT_CLASSIFICATION	//enableTextIndexingLabel.setEnabled(false);
WITHOUT_CLASSIFICATION	// @author tstich: Added Lucene gui element here //builder.add(enableTextIndexingLabel, cc.xy(2, 13));
WITHOUT_CLASSIFICATION	/*		 * builder.addSeparator("Full-text indexing");		 * 		 * builder.add(enableLabel, cc.xywh(1, 7, 5, 1));		 * builder.add(enableTextIndexingCheckBox, cc.xywh(2, 9, 4, 1));		 */
WITHOUT_CLASSIFICATION	/*		 * JPanel panel= new JPanel(); panel.setLayout(new BorderLayout());		 * panel.add(resetButton, BorderLayout.EAST); builder.add(panel,		 * cc.xywh(5, 7, 1, 1));		 */
WITHOUT_CLASSIFICATION	/*		 * overwriteOptionsCheckBox = new JCheckBox("Overwrite global		 * settings"); overwriteOptionsCheckBox.addActionListener(this);		 * overwriteOptionsCheckBox.setActionCommand("OVERWRITE");		 */
WITHOUT_CLASSIFICATION	// user changed folder name
WITHOUT_CLASSIFICATION	// bottom.add( Box.createHorizontalGlue() );
WITHOUT_CLASSIFICATION	// only local folders have an full-text indexing capability
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// enable lucene search index by default //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// c.gridwidth = GridBagConstraints.RELATIVE;
WITHOUT_CLASSIFICATION	// adjust description field
WITHOUT_CLASSIFICATION	// debug messages for diagnostics
WITHOUT_CLASSIFICATION	// notify configuration changes listeners // @see org.columba.mail.gui.table.util.MarkAsReadTimer
WITHOUT_CLASSIFICATION	// notify configuration changes listeners // @see org.columba.mail.gui.message.TextViewer
WITHOUT_CLASSIFICATION	// send notification event // @see org.columba.mail.gui.message.TextViewer
WITHOUT_CLASSIFICATION	// notify listeners // @see org.columba.mail.gui.composer.SubjectController
WITHOUT_CLASSIFICATION	// general
WITHOUT_CLASSIFICATION	// button panel
WITHOUT_CLASSIFICATION	// Create a FormLayout instance.
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// skip the first column
WITHOUT_CLASSIFICATION	// Add components to the panel:
WITHOUT_CLASSIFICATION	// init bottom panel with OK, Cancel buttons
WITHOUT_CLASSIFICATION	// notify listeners
WITHOUT_CLASSIFICATION	// ask the user about the destination file
WITHOUT_CLASSIFICATION	// only local folders have an full-text indexing capability
WITHOUT_CLASSIFICATION	// bottom.setBorder(new SingleSideEtchedBorder(SwingConstants.TOP)); // bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) ); // bottom.add( Box.createHorizontalStrut());
WITHOUT_CLASSIFICATION	// Create the closing boundary
WITHOUT_CLASSIFICATION	// remove all old elements
WITHOUT_CLASSIFICATION	// add new element
WITHOUT_CLASSIFICATION	// cast to Local AbstractMessageFolder is safe here
WITHOUT_CLASSIFICATION	// execute resyncing command
WITHOUT_CLASSIFICATION	// restore settings
WITHOUT_CLASSIFICATION	// re-select folder to make changes visible to the user
WITHOUT_CLASSIFICATION	// create new default options
WITHOUT_CLASSIFICATION	// update list view
WITHOUT_CLASSIFICATION	// if size > than 1000 KB, transform to MB
WITHOUT_CLASSIFICATION	// composer
WITHOUT_CLASSIFICATION	//builder.nextLine();
WITHOUT_CLASSIFICATION	//layout.setRowGroups(new int[][]{ {1, 3, 5, 7, 9, 11, 13, 15} });
WITHOUT_CLASSIFICATION	/*		 * builder.append(spellLabel, spellButton); builder.nextLine();		 */
WITHOUT_CLASSIFICATION	//Set up color chooser for setting quoted color
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// model -> view
WITHOUT_CLASSIFICATION	// view -> model
WITHOUT_CLASSIFICATION	// id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	// Where, in the drag image, the mouse was clicked
WITHOUT_CLASSIFICATION	// centerpanel
WITHOUT_CLASSIFICATION	// top panel
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList,	 *      java.lang.Object, int, boolean, boolean)	 */
WITHOUT_CLASSIFICATION	// topPanel.setLayout( );
WITHOUT_CLASSIFICATION	// c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	// 3 columns // rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	// get values from components
WITHOUT_CLASSIFICATION	// If f==null because of deleted AbstractMessageFolder fallback to // Inbox
WITHOUT_CLASSIFICATION	//		builder.append(showAttachmentsInlineCheckBox, 4); //		builder.nextLine();
WITHOUT_CLASSIFICATION	// Create list of unsubscribed folders
WITHOUT_CLASSIFICATION	// Deactivate this vFolder because changes are about to happen // and the search needs to be redone.
WITHOUT_CLASSIFICATION	// create default namespace
WITHOUT_CLASSIFICATION	// Process shared namespaces
WITHOUT_CLASSIFICATION	// Does the server support the namespace extension?
WITHOUT_CLASSIFICATION	// Process personal namespaces
WITHOUT_CLASSIFICATION	// Process other users namespaces
WITHOUT_CLASSIFICATION	// Handle special case in which INBOX has a NIL delimiter // -> there might exist a pseudo hierarchy under INBOX+delimiter
WITHOUT_CLASSIFICATION	// Now we have the subscribed folders in subscribedFolders // and the unsubscribed folders in unsubscribedFolders // Next step: Create a treestructure
WITHOUT_CLASSIFICATION	// INBOX is always subscribed
WITHOUT_CLASSIFICATION	//bottom.add( Box.createHorizontalGlue() );
WITHOUT_CLASSIFICATION	// split the hierarchical name with at the delimiters
WITHOUT_CLASSIFICATION	// Create the header of the multipart
WITHOUT_CLASSIFICATION	// can be only one
WITHOUT_CLASSIFICATION	// manipulateModel(TableModelPlugin.STRUCTURE_CHANGE);
WITHOUT_CLASSIFICATION	/*			 * HeaderItem[] items = new HeaderItem[selection2.length]; items =			 * selection2;			 * HeaderItemDNDManager.getInstance().setHeaderItemList(items);			 */
WITHOUT_CLASSIFICATION	/*		 * dragSource.startDrag( event, new Cursor(Cursor.DEFAULT_CURSOR),		 * ImageLoader.getImageIcon("contact_small","Add16").getImage(), new		 * Point(5, 5), new StringSelection("contact"), this);		 */
WITHOUT_CLASSIFICATION	// removeElement();
WITHOUT_CLASSIFICATION	// Plain text components don't fire these events
WITHOUT_CLASSIFICATION	/*JSCFDriverManager.registerJSCFDriver(new GPGDriver());JSCFConnection con = JSCFDriverManager.getConnection("jscf:gpg:"+pgpItem.get("path"));*/
WITHOUT_CLASSIFICATION	// show all search results
WITHOUT_CLASSIFICATION	// select search folder
WITHOUT_CLASSIFICATION	// select search folder
WITHOUT_CLASSIFICATION	// get selected search criteria
WITHOUT_CLASSIFICATION	// create filter criteria based on selected type
WITHOUT_CLASSIFICATION	// set criteria for search folder
WITHOUT_CLASSIFICATION	// add search to history
WITHOUT_CLASSIFICATION	// get search folder
WITHOUT_CLASSIFICATION	// remove old filters
WITHOUT_CLASSIFICATION	// add filter criteria
WITHOUT_CLASSIFICATION	// set source folder UID
WITHOUT_CLASSIFICATION	// execute custom search
WITHOUT_CLASSIFICATION	// enable/disable textfield in-dependency of selected criteria
WITHOUT_CLASSIFICATION	// directly execute search
WITHOUT_CLASSIFICATION	// get currently selected folder
WITHOUT_CLASSIFICATION	// create selection handlers
WITHOUT_CLASSIFICATION	// double-click mouse listener
WITHOUT_CLASSIFICATION	// table registers interest in tree selection events
WITHOUT_CLASSIFICATION	// Register F2 hotkey for renaming folder when the message panel has // focus
WITHOUT_CLASSIFICATION	// Register F2 hotkey for renaming folder when the folder tree itself // has focus
WITHOUT_CLASSIFICATION	// Register Alt-Up hotkey for moving up folder when folder tree or // table have focus
WITHOUT_CLASSIFICATION	// Register Alt-Down hotkey for moving up folder when folder tree or // table have focus
WITHOUT_CLASSIFICATION	// public JComponent getContentPane() { // JComponent c = super.getContentPane(); // // // // return c; // }
WITHOUT_CLASSIFICATION	// public IContentPane getContentPane() { // return this; // }
WITHOUT_CLASSIFICATION	// tree selection event
WITHOUT_CLASSIFICATION	// view headerlist in message list viewer
WITHOUT_CLASSIFICATION	// update frame title
WITHOUT_CLASSIFICATION	// show message content
WITHOUT_CLASSIFICATION	// update message list view title
WITHOUT_CLASSIFICATION	// simply demonstration of how to change the docking title
WITHOUT_CLASSIFICATION	// get selected row
WITHOUT_CLASSIFICATION	// get message node at selected row
WITHOUT_CLASSIFICATION	// is the message marked as draft ?
WITHOUT_CLASSIFICATION	// edit message in composer
WITHOUT_CLASSIFICATION	// open message in new message-frame
WITHOUT_CLASSIFICATION	// select node
WITHOUT_CLASSIFICATION	// folder-based configuration
WITHOUT_CLASSIFICATION	// mail folder tree
WITHOUT_CLASSIFICATION	// message list
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// small icon for menu
WITHOUT_CLASSIFICATION	// short cut key
WITHOUT_CLASSIFICATION	// add contact to addressbook
WITHOUT_CLASSIFICATION	// apply model
WITHOUT_CLASSIFICATION	// Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	//		TagList tagList = new MailTagList(this); //		JScrollPane tagListScrollPane = new JScrollPane(tagList); //		tagListScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER); //		tagListScrollPane //				.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	// fire in EDT
WITHOUT_CLASSIFICATION	// needs to be private so that subclasses won't forget calling // fireCharsetChanged
WITHOUT_CLASSIFICATION	//splitPane.setDividerSize(1); //setDividerSize(5);
WITHOUT_CLASSIFICATION	// this has to be set by themes //setDividerSize( 5 );
WITHOUT_CLASSIFICATION	// bottom.add(c, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	// if necessary decrypt/verify message
WITHOUT_CLASSIFICATION	// map to new reference
WITHOUT_CLASSIFICATION	// notify all interested listeners
WITHOUT_CLASSIFICATION	// exit immediately
WITHOUT_CLASSIFICATION	// create Address from URL
WITHOUT_CLASSIFICATION	// copy selected URL to clipboard as string
WITHOUT_CLASSIFICATION	// putValue(LARGE_ICON, ImageLoader.getIcon(IconKeys.FOLDER_OPEN));
WITHOUT_CLASSIFICATION	// putValue(LARGE_ICON, ImageLoader.getSmallIcon(IconKeys.FOLDER_OPEN));
WITHOUT_CLASSIFICATION	// some server have a bogus apop // try user/pass to check if the password is // correct
WITHOUT_CLASSIFICATION	// create empty value
WITHOUT_CLASSIFICATION	// create identity value
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// putValue(LARGE_ICON, ImageLoader.getIcon(IconKeys.DOCUMENT_SAVE_AS));
WITHOUT_CLASSIFICATION	// this has to be set by themes //splitPane.setDividerSize( 5 );
WITHOUT_CLASSIFICATION	//splitPane.resetToPreferredSizes(); //hideAttachmentViewer();
WITHOUT_CLASSIFICATION	// JPanel bottom = new JPanel(); // bottom.setBackground(backgroundColor); // // bottom.setLayout(new BorderLayout());
WITHOUT_CLASSIFICATION	// ensure that there is an HTML part in the email, otherwise JTextPanel // throws a RuntimeException
WITHOUT_CLASSIFICATION	// login and get # of messages on server
WITHOUT_CLASSIFICATION	// show selected message
WITHOUT_CLASSIFICATION	// clear message viewer
WITHOUT_CLASSIFICATION	// Update only if the selection did not change
WITHOUT_CLASSIFICATION	// display changes
WITHOUT_CLASSIFICATION	// create message value
WITHOUT_CLASSIFICATION	// set value
WITHOUT_CLASSIFICATION	// get command reference
WITHOUT_CLASSIFICATION	// get selected message UID
WITHOUT_CLASSIFICATION	// get flags
WITHOUT_CLASSIFICATION	// get messagecontroller of frame
WITHOUT_CLASSIFICATION	// fill semantic context
WITHOUT_CLASSIFICATION	// Synchronize the complete folder
WITHOUT_CLASSIFICATION	// from email address
WITHOUT_CLASSIFICATION	// old command-specific selection
WITHOUT_CLASSIFICATION	// new selection
WITHOUT_CLASSIFICATION	// abort if nothing selected
WITHOUT_CLASSIFICATION	// if attachment can't be opened, save it only
WITHOUT_CLASSIFICATION	// wrap with observable stream for progress bar updates
WITHOUT_CLASSIFICATION	// write to temporary file
WITHOUT_CLASSIFICATION	// substitute special characters like: // <,>,&,\t,\n
WITHOUT_CLASSIFICATION	// cancel command execution/updateGUI methods, if folder or message // selection // has been modified
WITHOUT_CLASSIFICATION	// in case no attachment handler was executed correctly // -> fall back to default handler
WITHOUT_CLASSIFICATION	// rename "*.part" file to destination file
WITHOUT_CLASSIFICATION	// reset progress bar
WITHOUT_CLASSIFICATION	// decode filename
WITHOUT_CLASSIFICATION	// add message to temporary folder
WITHOUT_CLASSIFICATION	// create reference to this message
WITHOUT_CLASSIFICATION	// this is needed to be able to open attachments of the decrypted // message
WITHOUT_CLASSIFICATION	//messageController.setAttachmentSelectionReference(local);
WITHOUT_CLASSIFICATION	// Check if the message still exists // or has been moved by e.g. a filter
WITHOUT_CLASSIFICATION	// the second child must be the encrypted message
WITHOUT_CLASSIFICATION	// return null;
WITHOUT_CLASSIFICATION	// just show the encrypted raw message
WITHOUT_CLASSIFICATION	// if the pgp mode is active we should get the decrypted part
WITHOUT_CLASSIFICATION	// check if the returned String is has a length != 0
WITHOUT_CLASSIFICATION	// else we set the body to the i18n String
WITHOUT_CLASSIFICATION	// construct new Message from decrypted string
WITHOUT_CLASSIFICATION	// call AbstractFilter to do the tricky part
WITHOUT_CLASSIFICATION	// header = (ColumbaHeader) message.getHeaderInterface();
WITHOUT_CLASSIFICATION	// the first child must be the signed part
WITHOUT_CLASSIFICATION	// the second child must be the pgp-signature
WITHOUT_CLASSIFICATION	/* * * make quotes font-color darkgray * */
WITHOUT_CLASSIFICATION	//layoutComponents(isSpam);
WITHOUT_CLASSIFICATION	// only show view if message is marked as spam
WITHOUT_CLASSIFICATION	// get selected message
WITHOUT_CLASSIFICATION	// mark as not spam
WITHOUT_CLASSIFICATION	// pass command to scheduler
WITHOUT_CLASSIFICATION	// register as configuration change listener
WITHOUT_CLASSIFICATION	// encapsulate bodytext in html-code
WITHOUT_CLASSIFICATION	// register for configuration changes
WITHOUT_CLASSIFICATION	// register interest on configuratin changes
WITHOUT_CLASSIFICATION	// parse for urls and substite with HTML-code
WITHOUT_CLASSIFICATION	// parse for email addresses and substite with HTML-code
WITHOUT_CLASSIFICATION	// parse for quotings and color the darkgray
WITHOUT_CLASSIFICATION	// add smilies
WITHOUT_CLASSIFICATION	/*	 * 	 * encapsulate bodytext in HTML code	 * 	 */
WITHOUT_CLASSIFICATION	// prepend
WITHOUT_CLASSIFICATION	// append
WITHOUT_CLASSIFICATION	// default encoding is plain
WITHOUT_CLASSIFICATION	// ((CharsetOwnerInterface) mediator).setCharset(charset);
WITHOUT_CLASSIFICATION	// updateBackground();
WITHOUT_CLASSIFICATION	// set double-click action for attachment viewer
WITHOUT_CLASSIFICATION	// Display resulting MimeParts
WITHOUT_CLASSIFICATION	// Get Text for Icon
WITHOUT_CLASSIFICATION	// Get Tooltip for Icon
WITHOUT_CLASSIFICATION	// definition of a second
WITHOUT_CLASSIFICATION	// timer to use
WITHOUT_CLASSIFICATION	// Singleton
WITHOUT_CLASSIFICATION	// listen for configuration changes
WITHOUT_CLASSIFICATION	// get interval value
WITHOUT_CLASSIFICATION	// stylesheet is created dynamically because // user configurable fonts are used
WITHOUT_CLASSIFICATION	// enable/disable smilies configuration
WITHOUT_CLASSIFICATION	// name of font
WITHOUT_CLASSIFICATION	// Shall we use the HTML-IViewer?
WITHOUT_CLASSIFICATION	// Which Charset shall we use ?
WITHOUT_CLASSIFICATION	// Read Stream in String
WITHOUT_CLASSIFICATION	// strip HTML message -> remove all HTML tags
WITHOUT_CLASSIFICATION	// this is a HTML message
WITHOUT_CLASSIFICATION	// Download any CIDs in the html mail
WITHOUT_CLASSIFICATION	// FocusManager.getInstance().updateActions();
WITHOUT_CLASSIFICATION	// default
WITHOUT_CLASSIFICATION	// apply model
WITHOUT_CLASSIFICATION	// get inbox-folder from pop3-server preferences
WITHOUT_CLASSIFICATION	// XmlElement selectedBrowser = // messageviewer.getElement(OptionsItem.SELECTED_BROWSER); // selectedBrowser.addObserver(this);
WITHOUT_CLASSIFICATION	// this is a text/plain message
WITHOUT_CLASSIFICATION	// setText(body);
WITHOUT_CLASSIFICATION	// remove old renderer
WITHOUT_CLASSIFICATION	// init new renderer
WITHOUT_CLASSIFICATION	// add new renderer
WITHOUT_CLASSIFICATION	// open composer
WITHOUT_CLASSIFICATION	// final URL url = extractURL(ev);
WITHOUT_CLASSIFICATION	// open context-menu // -> this has to happen in the awt-event dispatcher thread
WITHOUT_CLASSIFICATION	// builder.setDefaultButtonBarGapBorder();
WITHOUT_CLASSIFICATION	// TODO i18n "Close" button
WITHOUT_CLASSIFICATION	// TODO i18n "Help" button
WITHOUT_CLASSIFICATION	// scale image
WITHOUT_CLASSIFICATION	// convert special characters
WITHOUT_CLASSIFICATION	// buf.append("<b>" + title + "</b><br>");
WITHOUT_CLASSIFICATION	// contains headerfields which are to be displayed
WITHOUT_CLASSIFICATION	// TODO (@author fdietz): this should be changed into a "real" window
WITHOUT_CLASSIFICATION	// top.setBackground(UIManager.getColor("TextField.background"));
WITHOUT_CLASSIFICATION	// add headerfields which are about to show up
WITHOUT_CLASSIFICATION	// get header from folder
WITHOUT_CLASSIFICATION	// get header from folder
WITHOUT_CLASSIFICATION	// transform headers if necessary
WITHOUT_CLASSIFICATION	// transform headers if necessary
WITHOUT_CLASSIFICATION	// transform headers if necessary
WITHOUT_CLASSIFICATION	// custom headers
WITHOUT_CLASSIFICATION	// TODO i18n "attachments" label
WITHOUT_CLASSIFICATION	// Display resulting MimeParts
WITHOUT_CLASSIFICATION	// Get Text for Icon
WITHOUT_CLASSIFICATION	// Get Tooltip for Icon
WITHOUT_CLASSIFICATION	// builder.setDefaultButtonBarGapBorder();
WITHOUT_CLASSIFICATION	// TODO i18n "Close" button
WITHOUT_CLASSIFICATION	// TODO i18n "Help" button
WITHOUT_CLASSIFICATION	// scale image
WITHOUT_CLASSIFICATION	// setBackground(UIManager.getColor("TextField.background"));
WITHOUT_CLASSIFICATION	// substitute special characters like: // <,>,&,\t,\n,"
WITHOUT_CLASSIFICATION	// remove body part if already shown in text viewer
WITHOUT_CLASSIFICATION	// // create a view more button, responsible for // // opening the attachment viewer popup // JButton moreButton = createAttachmentMoreButton();
WITHOUT_CLASSIFICATION	// vector.add(moreButton);
WITHOUT_CLASSIFICATION	// button.setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 0));
WITHOUT_CLASSIFICATION	// Remove the BodyPart(s) if any
WITHOUT_CLASSIFICATION	// message doesn't contain this headerfield
WITHOUT_CLASSIFICATION	// headerfield is empty
WITHOUT_CLASSIFICATION	// substitute special characters like: // <,>,&,\t,\n,"
WITHOUT_CLASSIFICATION	// substitute special characters like: // <,>,&,\t,\n,"
WITHOUT_CLASSIFICATION	// create search folder
WITHOUT_CLASSIFICATION	// button.setOpaque(false);
WITHOUT_CLASSIFICATION	// button.addMouseListener(new LinkMouseListener());
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// setPreferredSize(list.getPreferredSize());
WITHOUT_CLASSIFICATION	// Get all MimeParts
WITHOUT_CLASSIFICATION	// Remove the BodyPart(s) if any
WITHOUT_CLASSIFICATION	// create search folder
WITHOUT_CLASSIFICATION	// Color backgroundColor = // UIManager.getColor("TextField.background");
WITHOUT_CLASSIFICATION	// button.addMouseListener(new LabelMouseListener());
WITHOUT_CLASSIFICATION	// If the same message is still shown // Mark it as read
WITHOUT_CLASSIFICATION	// pass it along to parent frame
WITHOUT_CLASSIFICATION	//	public JComponent getComponent() { //		JPanel panel = new JPanel(); //		panel.setLayout(new BorderLayout()); // //		panel.add(messageController, BorderLayout.CENTER); // //		 // //		return panel; //	}
WITHOUT_CLASSIFICATION	//super.dock(messageViewerDockable, IDock.REGION.CENTER);
WITHOUT_CLASSIFICATION	// Current column whose tooltip is being displayed. // This variable is used to minimize the calls to setToolTipText().
WITHOUT_CLASSIFICATION	// Maps TableColumn objects to tooltips
WITHOUT_CLASSIFICATION	// If tooltip is null, removes any tooltip text.
WITHOUT_CLASSIFICATION	// Return if not clicked on any column header
WITHOUT_CLASSIFICATION	// copy
WITHOUT_CLASSIFICATION	// UnsupportedFlavorException, IOException
WITHOUT_CLASSIFICATION	/*		 * AbstractMessageFolder destFolder = (AbstractMessageFolder) treeView		 * .getDropTargetFolder();		 */
WITHOUT_CLASSIFICATION	// move
WITHOUT_CLASSIFICATION	// load plugin handler used for the columns
WITHOUT_CLASSIFICATION	// disable subject column renderer, use tree-cellrenderer instead
WITHOUT_CLASSIFICATION	// tc.setCellEditor(new CustomTreeTableCellEditor());
WITHOUT_CLASSIFICATION	// change subject column renderer back to default
WITHOUT_CLASSIFICATION	// set name of column
WITHOUT_CLASSIFICATION	// no specific renderer found // -> use default renderer
WITHOUT_CLASSIFICATION	// Logging.log.info("setting size =" + size);
WITHOUT_CLASSIFICATION	// if there are entries in the table
WITHOUT_CLASSIFICATION	// if there are entries in the table
WITHOUT_CLASSIFICATION	// changing the selection to the first row
WITHOUT_CLASSIFICATION	// getting the node
WITHOUT_CLASSIFICATION	// getting the node
WITHOUT_CLASSIFICATION	// and getting the uid for this node
WITHOUT_CLASSIFICATION	// scrolling to the first row
WITHOUT_CLASSIFICATION	// scrolling to the first row
WITHOUT_CLASSIFICATION	//			 @author: fdietz never request focus //requestFocus();
WITHOUT_CLASSIFICATION	// expand all rows
WITHOUT_CLASSIFICATION	// select all rows
WITHOUT_CLASSIFICATION	//		 @author: fdietz never request focus //requestFocus();
WITHOUT_CLASSIFICATION	/*			 * // scrolling to the first row			 * scrollRectToVisible(getCellRect(row, 0, false)); requestFocus();			 */
WITHOUT_CLASSIFICATION	// don't clear selection
WITHOUT_CLASSIFICATION	// init table model
WITHOUT_CLASSIFICATION	// init threaded-view model
WITHOUT_CLASSIFICATION	// init sorting model
WITHOUT_CLASSIFICATION	// init view
WITHOUT_CLASSIFICATION	// pass tree to model, used by the threaded-view
WITHOUT_CLASSIFICATION	// clear model
WITHOUT_CLASSIFICATION	// register interest on folder events
WITHOUT_CLASSIFICATION	// Assign a tooltip for each of the columns
WITHOUT_CLASSIFICATION	// column IDs are all lower case
WITHOUT_CLASSIFICATION	// append "_tooltip"
WITHOUT_CLASSIFICATION	// get translation
WITHOUT_CLASSIFICATION	// selected rows before updating the model // -> used later to restore the selection
WITHOUT_CLASSIFICATION	// folder in which the update occurs
WITHOUT_CLASSIFICATION	// get current selection
WITHOUT_CLASSIFICATION	// update infopanel (gray panel below the toolbar) // showing total/unread/recent messages count
WITHOUT_CLASSIFICATION	// only update table if, this folder is the same // as the currently selected
WITHOUT_CLASSIFICATION	// when marking messages, don't touch selection
WITHOUT_CLASSIFICATION	// re-select previous selection
WITHOUT_CLASSIFICATION	// only re-select if only a single row was formerly selected
WITHOUT_CLASSIFICATION	// if message was removed from JTable
WITHOUT_CLASSIFICATION	// select row
WITHOUT_CLASSIFICATION	// save previously selected folder options
WITHOUT_CLASSIFICATION	// load options of newly selected folder
WITHOUT_CLASSIFICATION	// remember previously selected folder
WITHOUT_CLASSIFICATION	// enable/disable cut/copy/paste/selectall actions // FocusManager.getInstance().updateActions();
WITHOUT_CLASSIFICATION	// if user is currently changing selection, don't do anything // -> wait until the final selection is available
WITHOUT_CLASSIFICATION	// selected nodes
WITHOUT_CLASSIFICATION	// expand all unread message nodes
WITHOUT_CLASSIFICATION	// remove all columns from table model
WITHOUT_CLASSIFICATION	// reset row height
WITHOUT_CLASSIFICATION	// remove all columns for column model
WITHOUT_CLASSIFICATION	// if new columns were added, we have to initialize the tooltips
WITHOUT_CLASSIFICATION	// remember selected node
WITHOUT_CLASSIFICATION	// repaint table header
WITHOUT_CLASSIFICATION	// clear messagenode cache
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// notify observers (sorting state submenu)
WITHOUT_CLASSIFICATION	//setEnabled(false);
WITHOUT_CLASSIFICATION	// remember selected node
WITHOUT_CLASSIFICATION	// for some weird reason the table loses its inter-cell spacing // property, when changing the underlying column model // -> setting this to (0,0) again
WITHOUT_CLASSIFICATION	// int column = view.convertColumnIndexToModel(viewColumn); // int column2 = view.convertColumnIndexToView(viewColumn);
WITHOUT_CLASSIFICATION	// disable every icon // -> set appropriate icon for selected column
WITHOUT_CLASSIFICATION	// disable every icon // -> set appropriate icon for selected column
WITHOUT_CLASSIFICATION	// repaint table header
WITHOUT_CLASSIFICATION	// notify the model to sort the table // sorter.sort(column);
WITHOUT_CLASSIFICATION	// notify the model to sort the table // sorter.sort(column);
WITHOUT_CLASSIFICATION	// make selected row visible again
WITHOUT_CLASSIFICATION	// make selected row visible again
WITHOUT_CLASSIFICATION	//      putValue(LARGE_ICON, ImageLoader.getImageIcon("reply_small.png"));
WITHOUT_CLASSIFICATION	//    shortcut key
WITHOUT_CLASSIFICATION	// getting last selection
WITHOUT_CLASSIFICATION	// getting current uid
WITHOUT_CLASSIFICATION	// getting current node (under the selection)
WITHOUT_CLASSIFICATION	// getting next node
WITHOUT_CLASSIFICATION	// getting from the next node the uid
WITHOUT_CLASSIFICATION	// and set this to the actual ref
WITHOUT_CLASSIFICATION	// check if the node is not null
WITHOUT_CLASSIFICATION	// if the node is not null
WITHOUT_CLASSIFICATION	// select it
WITHOUT_CLASSIFICATION	// saving the last selection for the current folder
WITHOUT_CLASSIFICATION	// view the message under the new node
WITHOUT_CLASSIFICATION	/*		 * ((MailFrameMediator)		 * frameMediator).registerTableSelectionListener(this);		 */
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// toolbar text
WITHOUT_CLASSIFICATION	// toolbar text
WITHOUT_CLASSIFICATION	// getting last selection
WITHOUT_CLASSIFICATION	// getting current uid
WITHOUT_CLASSIFICATION	// getting current node (under the selection)
WITHOUT_CLASSIFICATION	// check if the node is not null
WITHOUT_CLASSIFICATION	// if the node is not null
WITHOUT_CLASSIFICATION	// select it
WITHOUT_CLASSIFICATION	// saving the last selection for the current folder
WITHOUT_CLASSIFICATION	// view the message under the new node
WITHOUT_CLASSIFICATION	//		 necessary for the message-frame only
WITHOUT_CLASSIFICATION	//		 select message in message list
WITHOUT_CLASSIFICATION	// clear message list
WITHOUT_CLASSIFICATION	// clear message-list selection
WITHOUT_CLASSIFICATION	// clear message-viewer
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// add command for execution
WITHOUT_CLASSIFICATION	// add command for execution
WITHOUT_CLASSIFICATION	// icon for menu
WITHOUT_CLASSIFICATION	// icon for toolbar
WITHOUT_CLASSIFICATION	//      shortcut key
WITHOUT_CLASSIFICATION	// set toolbar text
WITHOUT_CLASSIFICATION	// getting prev node
WITHOUT_CLASSIFICATION	// create new search folder, but re-use old search folder
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// add command for execution
WITHOUT_CLASSIFICATION	// add command for execution
WITHOUT_CLASSIFICATION	// do the search
WITHOUT_CLASSIFICATION	//mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	// toolbar text is usually a bit shorter ;mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	// tooltip text ;mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	// icons ;mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	/*        putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("redirect_small.png"));        putValue(LARGE_ICON, ImageLoader.getImageIcon("redirect.png"));        */
WITHOUT_CLASSIFICATION	// shortcut key is STRG-E ;mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	// icons //        putValue(SMALL_ICON, //            MailImageLoader.getIcon("email_edit.png")); //        putValue(LARGE_ICON, MailImageLoader.getIcon("email_edit.png"));
WITHOUT_CLASSIFICATION	//		 putValue(SMALL_ICON, //		            MailImageLoader.getIcon("email_open.png"));
WITHOUT_CLASSIFICATION	/*		 * folder.getConfiguration().set("property", "enable_threaded_view",		 * enableThreadedView);		 */
WITHOUT_CLASSIFICATION	// get current message list selection
WITHOUT_CLASSIFICATION	// pass command to scheduler
WITHOUT_CLASSIFICATION	// pass command to scheduler
WITHOUT_CLASSIFICATION	// which menuitem was selected?
WITHOUT_CLASSIFICATION	// add color selection to reference
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// toolbar text
WITHOUT_CLASSIFICATION	//setEnabled(false);
WITHOUT_CLASSIFICATION	// listen for configuration changes
WITHOUT_CLASSIFICATION	// uncomment to enable action
WITHOUT_CLASSIFICATION	/*		 * ((MailFrameMediator)		 * frameMediator).registerTableSelectionListener(this);		 */
WITHOUT_CLASSIFICATION	//		 necessary for the message-frame only
WITHOUT_CLASSIFICATION	//		 select message in message list
WITHOUT_CLASSIFICATION	// icon for menu
WITHOUT_CLASSIFICATION	// icon for menu
WITHOUT_CLASSIFICATION	// icon for toolbar
WITHOUT_CLASSIFICATION	// icon for toolbar
WITHOUT_CLASSIFICATION	// get current message list selection
WITHOUT_CLASSIFICATION	// shortcut key //putValue(ACCELERATOR_KEY, // KeyStroke.getKeyStroke(KeyEvent.VK_BRACELEFT, 0));
WITHOUT_CLASSIFICATION	// remove color //			add color selection to reference
WITHOUT_CLASSIFICATION	// remember search folder for "show total results" action
WITHOUT_CLASSIFICATION	// register as Observer
WITHOUT_CLASSIFICATION	// createSubMenu();
WITHOUT_CLASSIFICATION	// *20040510, karlpeder* columns may be null (first time we visit a // folder!?)
WITHOUT_CLASSIFICATION	// all headerfields are lowercase in property file
WITHOUT_CLASSIFICATION	// update(observable, null);
WITHOUT_CLASSIFICATION	// update(observable, null);
WITHOUT_CLASSIFICATION	// *20040510, karlpeder* columns may be null (first time we // visit a folder!?) // IDefaultItem item = new DefaultItem(xmlElement);
WITHOUT_CLASSIFICATION	// Mark the messages as deleted
WITHOUT_CLASSIFICATION	// -> move messages to trash
WITHOUT_CLASSIFICATION	// close window
WITHOUT_CLASSIFICATION	// toolbar text is usually a bit shorter
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// disable toolbar text
WITHOUT_CLASSIFICATION	// get original folder
WITHOUT_CLASSIFICATION	// should be virtual
WITHOUT_CLASSIFICATION	//setEnabled(false);
WITHOUT_CLASSIFICATION	// uncomment to enable action
WITHOUT_CLASSIFICATION	/*		 * ((MailFrameMediator)		 * frameMediator).registerTableSelectionListener(this);		 */
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// add command for execution
WITHOUT_CLASSIFICATION	//      shortcut key
WITHOUT_CLASSIFICATION	//      shortcut key
WITHOUT_CLASSIFICATION	// get current message list selection
WITHOUT_CLASSIFICATION	// get current message list selection
WITHOUT_CLASSIFICATION	// get current message list selection
WITHOUT_CLASSIFICATION	// pass command to scheduler
WITHOUT_CLASSIFICATION	//        putValue(LARGE_ICON, ImageLoader.getImageIcon("drafts-16.png"));
WITHOUT_CLASSIFICATION	// trash folder is selected // -> delete message
WITHOUT_CLASSIFICATION	// listener updates selection status, when ever a message selection changes
WITHOUT_CLASSIFICATION	// if this is a message-viewer frame viewing a message only // the window should be closed, too
WITHOUT_CLASSIFICATION	//		putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_L, //				Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()));
WITHOUT_CLASSIFICATION	// if all messages are tagged with tag, then return true, else false
WITHOUT_CLASSIFICATION	// necessary for the message-frame only
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	//setEnabled(false);
WITHOUT_CLASSIFICATION	// uncomment to enable action
WITHOUT_CLASSIFICATION	//		 necessary for the message-frame only
WITHOUT_CLASSIFICATION	//		 select message in message list
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// get selected stuff
WITHOUT_CLASSIFICATION	// add command for execution
WITHOUT_CLASSIFICATION	//      shortcut key
WITHOUT_CLASSIFICATION	// toolbar text is usually a bit shorter
WITHOUT_CLASSIFICATION	// shortcut key //putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_F, 0));
WITHOUT_CLASSIFICATION	// select message in message list
WITHOUT_CLASSIFICATION	// Shortcut key //putValue(ACCELERATOR_KEY, // KeyStroke.getKeyStroke(KeyEvent.VK_BRACELEFT,0));
WITHOUT_CLASSIFICATION	/*		 * ( ( AbstractMailFrameController) frameMediator)		 * .registerTableSelectionListener( this);		 */
WITHOUT_CLASSIFICATION	// *20030614, karlpeder* only enabled when message(s) selected
WITHOUT_CLASSIFICATION	// get active charset - necessary to decode msg for saving
WITHOUT_CLASSIFICATION	// view message list
WITHOUT_CLASSIFICATION	// clear message list viewer
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// Register as listener to the SelectionManger // to check for selection changes
WITHOUT_CLASSIFICATION	// Update only if the selection did not change
WITHOUT_CLASSIFICATION	// old command-specific selection
WITHOUT_CLASSIFICATION	// new selection
WITHOUT_CLASSIFICATION	// abort if nothing selected
WITHOUT_CLASSIFICATION	// add every header from HeaderList to the table as MessageNode
WITHOUT_CLASSIFICATION	// Register as SelectionListener to track the selection // of the tree
WITHOUT_CLASSIFICATION	// add array to vector
WITHOUT_CLASSIFICATION	// fetch the headerlist
WITHOUT_CLASSIFICATION	// add array to vector
WITHOUT_CLASSIFICATION	// Reset the selection
WITHOUT_CLASSIFICATION	// add this node to cache
WITHOUT_CLASSIFICATION	// cancel command execution/updateGUI methods, if folder selection // has been modified
WITHOUT_CLASSIFICATION	// update treemodel
WITHOUT_CLASSIFICATION	// get unique id
WITHOUT_CLASSIFICATION	// remove all children from tree
WITHOUT_CLASSIFICATION	// create tree structure
WITHOUT_CLASSIFICATION	// add node to tree
WITHOUT_CLASSIFICATION	// get header
WITHOUT_CLASSIFICATION	// if no Message-Id: available create bogus
WITHOUT_CLASSIFICATION	// create MessageNode
WITHOUT_CLASSIFICATION	// save every MessageNode in hashmap for later reference
WITHOUT_CLASSIFICATION	// the last element is the direct parent
WITHOUT_CLASSIFICATION	// save every message-id in hashtable for later reference
WITHOUT_CLASSIFICATION	// send from address and recipient list to SMTP server // ->all addresses have to be normalized
WITHOUT_CLASSIFICATION	// save every message in a list
WITHOUT_CLASSIFICATION	// table is empty // -> just display empty table			
WITHOUT_CLASSIFICATION	// for each element in the message-header-reference or in-reply-to // headerfield: - find a container whose message-id matches and add // message, otherwise create empty container
WITHOUT_CLASSIFICATION	// has children
WITHOUT_CLASSIFICATION	// check if there are messages marked as recent //  -> in case underline parent node
WITHOUT_CLASSIFICATION	// recent found
WITHOUT_CLASSIFICATION	//		 go through whole tree and sort the siblings after date
WITHOUT_CLASSIFICATION	// observable connects the sorting table with the sort menu (View->Sort // Messages)
WITHOUT_CLASSIFICATION	// get a list of MessageNode objects of the first // hierachy level
WITHOUT_CLASSIFICATION	// do the sorting
WITHOUT_CLASSIFICATION	//      notify tree //getRealModel().getTreeModel().nodeStructureChanged(getRootNode()); //}
WITHOUT_CLASSIFICATION	// define false < true
WITHOUT_CLASSIFICATION	// setOpaque(true); //MUST do this for background to show up.
WITHOUT_CLASSIFICATION	// setOpaque(true); //MUST do this for background to show up.
WITHOUT_CLASSIFICATION	// use local date settings
WITHOUT_CLASSIFICATION	// private Border unselectedBorder = null; // // private Border selectedBorder = null; // // private Color background; // // private Color foreground;
WITHOUT_CLASSIFICATION	// private boolean isBordered = true;
WITHOUT_CLASSIFICATION	// TreePath path = tree.getPathForRow(row);
WITHOUT_CLASSIFICATION	// mark as bold if message is unseen
WITHOUT_CLASSIFICATION	// mark as bold if message is unseen
WITHOUT_CLASSIFICATION	// p2.setBorder(BorderFactory.createEmptyBorder(0,0,2,0));
WITHOUT_CLASSIFICATION	// setBorder(UIManager.getBorder("Table.focusCellHighlightBorder"));
WITHOUT_CLASSIFICATION	// setBorder(noFocusBorder);
WITHOUT_CLASSIFICATION	//setForeground( Color.red );
WITHOUT_CLASSIFICATION	//setText("!");
WITHOUT_CLASSIFICATION	//setText("!");
WITHOUT_CLASSIFICATION	//eteTextForeground( Color.blue );
WITHOUT_CLASSIFICATION	//setForeground( Color.blue );
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// create a virtual folder with all messages holding this tag
WITHOUT_CLASSIFICATION	//setForeground( Color.red ); //setText("!!");
WITHOUT_CLASSIFICATION	//setText("!!");
WITHOUT_CLASSIFICATION	// if this is set to true, we use the local selection, instead // of using the table selection
WITHOUT_CLASSIFICATION	// user is still manipulating the selection
WITHOUT_CLASSIFICATION	// no rows are selected
WITHOUT_CLASSIFICATION	// setBackground(list.getSelectionBackground()); // setForeground(list.getSelectionForeground());
WITHOUT_CLASSIFICATION	// setBackground(list.getSelectionBackground()); // setForeground(list.getSelectionForeground());
WITHOUT_CLASSIFICATION	// do not only update the tag search result when click on a different // tag, also do a refresh of the same tag when double click on it
WITHOUT_CLASSIFICATION	// if there is nothing selected return
WITHOUT_CLASSIFICATION	// create a virtual folder
WITHOUT_CLASSIFICATION	// should be a MutableTreeNode
WITHOUT_CLASSIFICATION	// skip all non-mail component items
WITHOUT_CLASSIFICATION	// ensure that we are currently in the mail component
WITHOUT_CLASSIFICATION	// select invisible virtual folder
WITHOUT_CLASSIFICATION	// update message list
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// copy
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// now instanciate the folder classes
WITHOUT_CLASSIFICATION	// get search folder
WITHOUT_CLASSIFICATION	// set source folder UID
WITHOUT_CLASSIFICATION	// UnsupportedFlavorException, IOException
WITHOUT_CLASSIFICATION	// move
WITHOUT_CLASSIFICATION	// search in subfolders recursively
WITHOUT_CLASSIFICATION	// We're always doing a MOVE // and this is handled in the exportDone method.
WITHOUT_CLASSIFICATION	/*		 * // copy CopyMessageCommand command = new CopyMessageCommand(result);		 * CommandProcessor.getInstance().addOp(command);		 */
WITHOUT_CLASSIFICATION	//setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 0));
WITHOUT_CLASSIFICATION	// get configuration from tree.xml file
WITHOUT_CLASSIFICATION	// expand folder
WITHOUT_CLASSIFICATION	// recursivly expand all children
WITHOUT_CLASSIFICATION	// Do nothing if we are hovering over the root node
WITHOUT_CLASSIFICATION	/*		 * view.setLeadSelectionPath(path); view.setAnchorSelectionPath(path);		 */
WITHOUT_CLASSIFICATION	// save expanded state
WITHOUT_CLASSIFICATION	// save expanded state
WITHOUT_CLASSIFICATION	// no sorting
WITHOUT_CLASSIFICATION	// safe to cast to IMailFolder here, because only those are visible to the user
WITHOUT_CLASSIFICATION	// create temporary folder in "<your-config-folder>/mail/"
WITHOUT_CLASSIFICATION	// i18n stuff
WITHOUT_CLASSIFICATION	// warn user
WITHOUT_CLASSIFICATION	// warn user in any other cases
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// icons
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// parent directory for mail folders // for example: ".columba/mail/"
WITHOUT_CLASSIFICATION	// icons //		putValue(SMALL_ICON, ImageLoader.getIcon("folder_delete.png")); //		putValue(LARGE_ICON, ImageLoader.getIcon("folder_delete.png"));
WITHOUT_CLASSIFICATION	// Note: we negate the expanded state because this is // a will-expand/collapse listener
WITHOUT_CLASSIFICATION	// register at shutdownmanager // -> when closing Columba, this will automatically save all folder data
WITHOUT_CLASSIFICATION	// icon for menu //		putValue(SMALL_ICON, ImageLoader //				.getSmallImageIcon("16_configure_folder.png"));
WITHOUT_CLASSIFICATION	// it is safe here to cast to AbstractMailFrameControlller
WITHOUT_CLASSIFICATION	// calculate mailbox size in background worker
WITHOUT_CLASSIFICATION	// cast to Folder
WITHOUT_CLASSIFICATION	// only use the first selected folder
WITHOUT_CLASSIFICATION	// set parent folder uid
WITHOUT_CLASSIFICATION	// ok pressed
WITHOUT_CLASSIFICATION	// ok pressed
WITHOUT_CLASSIFICATION	// open search dialog
WITHOUT_CLASSIFICATION	// cancel pressed
WITHOUT_CLASSIFICATION	// select folder again after move operation
WITHOUT_CLASSIFICATION	//  -> uncomment to enable/disable action
WITHOUT_CLASSIFICATION	/*        ((MailFrameController) frameMediator).registerTreeSelectionListener(                this);        */
WITHOUT_CLASSIFICATION	// we are done - clear status text with a delay // (if this is not done, the initial text will stay in // case no messages were sent)
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// button panel
WITHOUT_CLASSIFICATION	// create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	// init bottom panel with OK, Cancel buttons
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// shortcut key
WITHOUT_CLASSIFICATION	// select folder again after move operation
WITHOUT_CLASSIFICATION	// select node in JTree
WITHOUT_CLASSIFICATION	// implement this
WITHOUT_CLASSIFICATION	// show error message
WITHOUT_CLASSIFICATION	// icon //		putValue(SMALL_ICON, ImageLoader //				.getSmallImageIcon("apply-filters-16.png"));
WITHOUT_CLASSIFICATION	// BUGFIX but don't know why that bug occurs
WITHOUT_CLASSIFICATION	//Folder folder = (AbstractMessageFolder) r[0].getFolder();
WITHOUT_CLASSIFICATION	/*			 * MailInterface.treeModel.nodeStructureChanged(parentFolder);			 */
WITHOUT_CLASSIFICATION	// get global sorting state
WITHOUT_CLASSIFICATION	// try to set selection
WITHOUT_CLASSIFICATION	// layout center panel
WITHOUT_CLASSIFICATION	// apply sorting state
WITHOUT_CLASSIFICATION	// Init components
WITHOUT_CLASSIFICATION	// We have a special Command for VFolders
WITHOUT_CLASSIFICATION	// sorting is enabled
WITHOUT_CLASSIFICATION	// if the character / is found shows the user a error message
WITHOUT_CLASSIFICATION	// sorting is disabled
WITHOUT_CLASSIFICATION	/*		 * RIYAD: Even though we don't do anything with this value, what it is		 * doing is setting up the selection colors and such as implemented per		 * the default cell rendered.		 */
WITHOUT_CLASSIFICATION	// If no exception happened we have successfully logged // in
WITHOUT_CLASSIFICATION	// successfully connected and autenthenticated to SMTP server
WITHOUT_CLASSIFICATION	// ok pressed
WITHOUT_CLASSIFICATION	// cancel pressed
WITHOUT_CLASSIFICATION	// get global sorting state
WITHOUT_CLASSIFICATION	// If it isnt a message folder, then it must be a root, and those // should not be sorted.
WITHOUT_CLASSIFICATION	// If the tree is in a DND action then we dont need to update all // listeners, since this only a temporary folder selection.
WITHOUT_CLASSIFICATION	// skip the first column // builder.setLeadingColumnOffset(1); // Add components to the panel:
WITHOUT_CLASSIFICATION	// sorting is enabled
WITHOUT_CLASSIFICATION	// apply sorting state
WITHOUT_CLASSIFICATION	// sorting is disabled
WITHOUT_CLASSIFICATION	// setting default Values // setFont(plainFont); // setToolTipText("");
WITHOUT_CLASSIFICATION	// getting folder info
WITHOUT_CLASSIFICATION	// get folder item configuration
WITHOUT_CLASSIFICATION	// set tooltip text
WITHOUT_CLASSIFICATION	// set label text
WITHOUT_CLASSIFICATION	// set label text
WITHOUT_CLASSIFICATION	// name of folder
WITHOUT_CLASSIFICATION	// append unseen count to folder name
WITHOUT_CLASSIFICATION	// if IMAP selectable folder
WITHOUT_CLASSIFICATION	// if mediator contains a sortable treemodel
WITHOUT_CLASSIFICATION	// default selection is local Inbox
WITHOUT_CLASSIFICATION	// add selection listener
WITHOUT_CLASSIFICATION	// name = textField.getText();
WITHOUT_CLASSIFICATION	// Constants...
WITHOUT_CLASSIFICATION	// Member variables...
WITHOUT_CLASSIFICATION	// Set the width, height and image type
WITHOUT_CLASSIFICATION	// Create a graphics context for this buffered image
WITHOUT_CLASSIFICATION	//SystemColor.controlLtHighlight,
WITHOUT_CLASSIFICATION	// The type of DnD object being dragged...
WITHOUT_CLASSIFICATION	// Transferable interface methods...
WITHOUT_CLASSIFICATION	// DataFlavor.javaJVMLocalObjectMimeType))
WITHOUT_CLASSIFICATION	// create message
WITHOUT_CLASSIFICATION	// convert to inputstream
WITHOUT_CLASSIFICATION	// result.append(", ");
WITHOUT_CLASSIFICATION	// don't care
WITHOUT_CLASSIFICATION	// bottom.add( Box.createHorizontalGlue() );
WITHOUT_CLASSIFICATION	//bottom.add( Box.createHorizontalGlue() );
WITHOUT_CLASSIFICATION	// if IMAP selectable folder // -> lightgray font color and italic
WITHOUT_CLASSIFICATION	// draw folder name and unseen count // -> using bold font
WITHOUT_CLASSIFICATION	// append recent message count // -> using blue font
WITHOUT_CLASSIFICATION	//tstich: Someone added <html> tags here. This is not the right place!
WITHOUT_CLASSIFICATION	// only update if timestamp is equal
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getDelimiter()	 */
WITHOUT_CLASSIFICATION	// implemented for completeness. // Time-out for clearing text is ignored here.
WITHOUT_CLASSIFICATION	/*				 * case WorkerStatusChangedEvent.FINISHED : setVisible(false);				 * break;				 */
WITHOUT_CLASSIFICATION	// send cancel event to worker
WITHOUT_CLASSIFICATION	// private JFrame frame;
WITHOUT_CLASSIFICATION	// private JTextField loginTextField;
WITHOUT_CLASSIFICATION	// bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) );
WITHOUT_CLASSIFICATION	// bottom.add( Box.createHorizontalStrut());
WITHOUT_CLASSIFICATION	// JButton[] buttons = new JButton[2];
WITHOUT_CLASSIFICATION	// user = loginTextField.getText();
WITHOUT_CLASSIFICATION	// loginMethod = (String) loginMethodComboBox.getSelectedItem();
WITHOUT_CLASSIFICATION	//bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) );
WITHOUT_CLASSIFICATION	//bottom.add( Box.createHorizontalStrut());
WITHOUT_CLASSIFICATION	// create IMAP protocol
WITHOUT_CLASSIFICATION	// register interest on status updates
WITHOUT_CLASSIFICATION	// try to determine delimiter
WITHOUT_CLASSIFICATION	// open a port to the server
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// reopen the port
WITHOUT_CLASSIFICATION	// reopen the port
WITHOUT_CLASSIFICATION	// shall we switch to SSL?
WITHOUT_CLASSIFICATION	// if CAPA was not support just give it a try...
WITHOUT_CLASSIFICATION	// CAPAs say that SSL is not supported
WITHOUT_CLASSIFICATION	// Just use the default as fallback
WITHOUT_CLASSIFICATION	// LOGIN is always supported
WITHOUT_CLASSIFICATION	// private JComboBox loginMethodComboBox; // String loginMethod;
WITHOUT_CLASSIFICATION	// AUTH?
WITHOUT_CLASSIFICATION	// Used to control the state in which // the automatic updated mechanism is
WITHOUT_CLASSIFICATION	// Login loop until authenticated
WITHOUT_CLASSIFICATION	// combine them to one string
WITHOUT_CLASSIFICATION	// CAPA not supported
WITHOUT_CLASSIFICATION	// remove // the // 'AUTH='
WITHOUT_CLASSIFICATION	// Show the password dialog
WITHOUT_CLASSIFICATION	// On the first try check if we need to show the password dialog // -> not necessary when password was stored
WITHOUT_CLASSIFICATION	// Try to get Password from Configuration
WITHOUT_CLASSIFICATION	// ensure that we are logged in already
WITHOUT_CLASSIFICATION	// User cancelled authentication
WITHOUT_CLASSIFICATION	// User pressed OK
WITHOUT_CLASSIFICATION	// AUTH
WITHOUT_CLASSIFICATION	// Save or Clear the password in the configuration
WITHOUT_CLASSIFICATION	// From this point we have a username and password // from configuration of from the dialog
WITHOUT_CLASSIFICATION	// Convert to a MailboxStatus
WITHOUT_CLASSIFICATION	// login failed?
WITHOUT_CLASSIFICATION	// Here we get the new mailboxinfo for the folder
WITHOUT_CLASSIFICATION	// if mailbox is not already selected select it
WITHOUT_CLASSIFICATION	// Set the readOnly flag
WITHOUT_CLASSIFICATION	// delete any cached information
WITHOUT_CLASSIFICATION	// if none selected select this folder instead of getting the status
WITHOUT_CLASSIFICATION	// No response means zero!
WITHOUT_CLASSIFICATION	// make sure we are already logged in
WITHOUT_CLASSIFICATION	// -> get source reference of message // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// make sure we are already logged in
WITHOUT_CLASSIFICATION	// close the mailbox if it is selected
WITHOUT_CLASSIFICATION	// make sure we are logged in
WITHOUT_CLASSIFICATION	// concate the full name of the new mailbox
WITHOUT_CLASSIFICATION	// check if the mailbox already exists -> subscribe only
WITHOUT_CLASSIFICATION	// set the attachment flag
WITHOUT_CLASSIFICATION	// If no exception happened we have successfully logged // in
WITHOUT_CLASSIFICATION	// load database from file
WITHOUT_CLASSIFICATION	// If the cause is a IMAPExcpetion then only password // wrong // else bogus authentication mechanism
WITHOUT_CLASSIFICATION	// We don't need to issue a additional NOOP // here since the ensureLogin() call above // ensures also the correct Status in a // MIN_IDLE interval timeframe.
WITHOUT_CLASSIFICATION	// Some error in the client/server communication // --> fall back to default login process
WITHOUT_CLASSIFICATION	// make sure we are already logged in
WITHOUT_CLASSIFICATION	// This exception is not because wrong username or // password
WITHOUT_CLASSIFICATION	// make sure we are already logged in
WITHOUT_CLASSIFICATION	// Sync subscribed folders if this is the first login // in this session
WITHOUT_CLASSIFICATION	// make sure we are already logged in
WITHOUT_CLASSIFICATION	// make sure we are already logged in
WITHOUT_CLASSIFICATION	// subscribe to the new mailbox
WITHOUT_CLASSIFICATION	// create the mailbox on the server
WITHOUT_CLASSIFICATION	// divide in packs
WITHOUT_CLASSIFICATION	// the UIDS start UIDNext till UIDNext + uids.length
WITHOUT_CLASSIFICATION	// make sure this mailbox is selected
WITHOUT_CLASSIFICATION	// update the progress
WITHOUT_CLASSIFICATION	// update the progress
WITHOUT_CLASSIFICATION	// update the progress
WITHOUT_CLASSIFICATION	// update the progress
WITHOUT_CLASSIFICATION	// dont forget the rest
WITHOUT_CLASSIFICATION	// store the intermediate results in a list
WITHOUT_CLASSIFICATION	// get list of user-defined headerfields
WITHOUT_CLASSIFICATION	// Combine the results in one array
WITHOUT_CLASSIFICATION	// add it to the headerlist
WITHOUT_CLASSIFICATION	// make sure that we have a Message-ID
WITHOUT_CLASSIFICATION	// One or many arguments?
WITHOUT_CLASSIFICATION	// Entry does not exist on server // -> add nothing
WITHOUT_CLASSIFICATION	// Now the state of the procotol is more certain correct
WITHOUT_CLASSIFICATION	// One is the easiest case
WITHOUT_CLASSIFICATION	// update this point of time as last communication // since every functio calls this before communicating with // the server
WITHOUT_CLASSIFICATION	// AFTER
WITHOUT_CLASSIFICATION	// Use a caching mechanism for this
WITHOUT_CLASSIFICATION	// AND or OR ? -> AND is implicit, OR must be specified
WITHOUT_CLASSIFICATION	// something else is wrong
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// non-ascii
WITHOUT_CLASSIFICATION	// AND : simply create a list of arguments
WITHOUT_CLASSIFICATION	// OR : the arguments must be glued by a OR SearchKey
WITHOUT_CLASSIFICATION	// Also set the delimiter
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// contains not
WITHOUT_CLASSIFICATION	// split key/value pairs
WITHOUT_CLASSIFICATION	// Show first time Account Wizard
WITHOUT_CLASSIFICATION	// get inputstream of message body
WITHOUT_CLASSIFICATION	// account ID
WITHOUT_CLASSIFICATION	// account ID
WITHOUT_CLASSIFICATION	// restart timer
WITHOUT_CLASSIFICATION	// remove all items
WITHOUT_CLASSIFICATION	// If this also does not work // -> fall back to no charset specified
WITHOUT_CLASSIFICATION	// recreate menu
WITHOUT_CLASSIFICATION	// calculate rest
WITHOUT_CLASSIFICATION	// offline -> go online
WITHOUT_CLASSIFICATION	//private POP3ServerCollection popServer;
WITHOUT_CLASSIFICATION	// get list of all accounts
WITHOUT_CLASSIFICATION	// register interest on account changes
WITHOUT_CLASSIFICATION	// menuitem/toolbar button action
WITHOUT_CLASSIFICATION	// for each account that is enabled and in the fetchalllist
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// for each account
WITHOUT_CLASSIFICATION	// for each account
WITHOUT_CLASSIFICATION	// system peep on new messages 
WITHOUT_CLASSIFICATION	//system beep
WITHOUT_CLASSIFICATION	// found matching account
WITHOUT_CLASSIFICATION	// remove whitespaces
WITHOUT_CLASSIFICATION	// remove this account
WITHOUT_CLASSIFICATION	//	generate label for menuitem
WITHOUT_CLASSIFICATION	//  check if we are online
WITHOUT_CLASSIFICATION	// new message
WITHOUT_CLASSIFICATION	// recreate name of menuitem
WITHOUT_CLASSIFICATION	// timer action
WITHOUT_CLASSIFICATION	// only do checking if we are in online state
WITHOUT_CLASSIFICATION	// found new message
WITHOUT_CLASSIFICATION	// remove whitespaces
WITHOUT_CLASSIFICATION	// Check Internet Connection
WITHOUT_CLASSIFICATION	// check if the optional value exists
WITHOUT_CLASSIFICATION	//uid = o;
WITHOUT_CLASSIFICATION	// new NewMessageAction().actionPerformed(null);
WITHOUT_CLASSIFICATION	// Activate all Virtual Folders
WITHOUT_CLASSIFICATION	// Check default mail client
WITHOUT_CLASSIFICATION	// We save only the first item in the cc-list
WITHOUT_CLASSIFICATION	// remove leading or trailing whitespaces
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// skip
WITHOUT_CLASSIFICATION	// Check if Columba is the default mail client
WITHOUT_CLASSIFICATION	// message colour should be black as default
WITHOUT_CLASSIFICATION	// Copy the commandline from the client info to the Classes mailto entry
WITHOUT_CLASSIFICATION	// We save only the first item in the to-list
WITHOUT_CLASSIFICATION	// use default account
WITHOUT_CLASSIFICATION	// Remote double-quotes
WITHOUT_CLASSIFICATION	// Create a emtpy header an back off
WITHOUT_CLASSIFICATION	// Create a emtpy header an back off
WITHOUT_CLASSIFICATION	// Remove the ending separator and whitespace, if any exist
WITHOUT_CLASSIFICATION	// do the parsing
WITHOUT_CLASSIFICATION	// the next token is an token with the whole Mailaddress
WITHOUT_CLASSIFICATION	// Remove the double-quote characters from around the addresses in the string 
WITHOUT_CLASSIFICATION	// If address contains a comma, enclose the display name portion in double-quotes
WITHOUT_CLASSIFICATION	// Convert to MessageOptions
WITHOUT_CLASSIFICATION	// found contact item in contact component
WITHOUT_CLASSIFICATION	// check if its a group item
WITHOUT_CLASSIFICATION	// the first token is irrelevant
WITHOUT_CLASSIFICATION	// The Stream finished before the header was completely // read!
WITHOUT_CLASSIFICATION	// just look if the first character alrady an < // so can use this mailaddress as the correct address
WITHOUT_CLASSIFICATION	// due to bug CA-174 changed: return EMAIL_PATTERN.matcher(s).replaceAll("<A HREF=\"mailto:$1\">$1</A>");
WITHOUT_CLASSIFICATION	/*             \\b  Start at word boundary         ((\\w*(:\\S*)?@)?  [user:[pass]]@ - Constructprot + "://  protocol and ://       ["+any+"]  match literaly anything...         ) (?=\\s|$)  ...until we find whitespace or end of String*/
WITHOUT_CLASSIFICATION	// The form of the entities must be a regexp!
WITHOUT_CLASSIFICATION	// initial check of input:
WITHOUT_CLASSIFICATION	// initial check of input:
WITHOUT_CLASSIFICATION	// remove header
WITHOUT_CLASSIFICATION	// remove extra whitespace
WITHOUT_CLASSIFICATION	// replace br, p and heading tags with newlines
WITHOUT_CLASSIFICATION	// strip remaining tags
WITHOUT_CLASSIFICATION	// tag stripping can leave some double spaces at line beginnings
WITHOUT_CLASSIFICATION	// replace <br> and </br> with newline
WITHOUT_CLASSIFICATION	// replace </p> with double newline
WITHOUT_CLASSIFICATION	// strip tags
WITHOUT_CLASSIFICATION	//First replace all special entities
WITHOUT_CLASSIFICATION	//replace the other entities
WITHOUT_CLASSIFICATION	//Convert 4 WS in a row to a tab
WITHOUT_CLASSIFICATION	// stripHtmlTags called with true ~ p & br => newlines
WITHOUT_CLASSIFICATION	// insert surrounding html tags
WITHOUT_CLASSIFICATION	//sb.append("&nbsp;");
WITHOUT_CLASSIFICATION	// error
WITHOUT_CLASSIFICATION	// error
WITHOUT_CLASSIFICATION	/* * *20030623, karlpeder* " and space handled also */
WITHOUT_CLASSIFICATION	// Check for missing  <html> tag
WITHOUT_CLASSIFICATION	// Check for missing  </html> tag
WITHOUT_CLASSIFICATION	// remove characters after </html> tag
WITHOUT_CLASSIFICATION	// Do not take existing link tags into account
WITHOUT_CLASSIFICATION	// found an url with links - is it the same?
WITHOUT_CLASSIFICATION	// initialisation
WITHOUT_CLASSIFICATION	// current position in s
WITHOUT_CLASSIFICATION	// an email adress was found - check whether its already a link
WITHOUT_CLASSIFICATION	// found an email address with links - is it the same?
WITHOUT_CLASSIFICATION	// same email adress - just append and continue
WITHOUT_CLASSIFICATION	// already handled
WITHOUT_CLASSIFICATION	// already handled
WITHOUT_CLASSIFICATION	// not the same
WITHOUT_CLASSIFICATION	// not the same
WITHOUT_CLASSIFICATION	// no match with mailto link tags
WITHOUT_CLASSIFICATION	// found an open link
WITHOUT_CLASSIFICATION	// check if it is closed
WITHOUT_CLASSIFICATION	// if the closing mark is after the s1 mark do not insert a link
WITHOUT_CLASSIFICATION	// shall we insert a link?
WITHOUT_CLASSIFICATION	// no more matches - append rest of string
WITHOUT_CLASSIFICATION	// no more matches - append rest of string
WITHOUT_CLASSIFICATION	// return result
WITHOUT_CLASSIFICATION	// return result
WITHOUT_CLASSIFICATION	// Test if there is a trailing html tag
WITHOUT_CLASSIFICATION	// an url - check whether its already a link
WITHOUT_CLASSIFICATION	// locate body start- and end tags
WITHOUT_CLASSIFICATION	// no match with link tags
WITHOUT_CLASSIFICATION	// same url - just append and continue
WITHOUT_CLASSIFICATION	// search for closing bracket separately to account for attributes in tag
WITHOUT_CLASSIFICATION	// correct limits if body tags where not found
WITHOUT_CLASSIFICATION	// return body
WITHOUT_CLASSIFICATION	// remove comments
WITHOUT_CLASSIFICATION	// Create boundary to separate the mime-parts
WITHOUT_CLASSIFICATION	// Create the header and body of the multipart
WITHOUT_CLASSIFICATION	// Add the MimePart that will be signed
WITHOUT_CLASSIFICATION	// Add the signature
WITHOUT_CLASSIFICATION	// set the attachment flag
WITHOUT_CLASSIFICATION	// Create boundary to separate the mime-parts
WITHOUT_CLASSIFICATION	// Add pgp-specific content-parameters // we take as default hash-algo SHA1
WITHOUT_CLASSIFICATION	// Create the closing boundary
WITHOUT_CLASSIFICATION	// loop until signing was sucessful or the user cancels the passphrase // dialog
WITHOUT_CLASSIFICATION	// save passphrase in hash map
WITHOUT_CLASSIFICATION	// at the moment we are only supporting gpg. So let us code hard // here the gpg driver
WITHOUT_CLASSIFICATION	// let us hard coding the gpg for each connection. Later we should // support also other variants (like smime)
WITHOUT_CLASSIFICATION	// getting the path to gpg
WITHOUT_CLASSIFICATION	// Add pgp-specific content-parameters
WITHOUT_CLASSIFICATION	// Add the ControlMimePart
WITHOUT_CLASSIFICATION	// Add the encrypted MimePart
WITHOUT_CLASSIFICATION	//con.getProperties().put("USERID", pgpItem.get("id"));
WITHOUT_CLASSIFICATION	/*		 * notifyListeners(new ModelChangedEvent(ModelChangedEvent.ADDED,		 * server));		 */
WITHOUT_CLASSIFICATION	/*		 * notifyListeners(new ModelChangedEvent(ModelChangedEvent.REMOVED));		 */
WITHOUT_CLASSIFICATION	// Get the uids from the headercache
WITHOUT_CLASSIFICATION	// Get the list of the uids on the server // Important: Use a clone of the List since // we must not change it!
WITHOUT_CLASSIFICATION	// substract the uids that we already downloaded -> // newUids contains all uids to fetch from the server
WITHOUT_CLASSIFICATION	// substract the uids on the server from the downloaded uids -> // headerUids are the uids that have been removed from the server
WITHOUT_CLASSIFICATION	// update the cache
WITHOUT_CLASSIFICATION	// return the uids that are new
WITHOUT_CLASSIFICATION	// set dirty flag
WITHOUT_CLASSIFICATION	// Message already deleted from server
WITHOUT_CLASSIFICATION	// Store the complete stream in a source so that we can parse it
WITHOUT_CLASSIFICATION	// set headercache dirty flag
WITHOUT_CLASSIFICATION	// add status information observable
WITHOUT_CLASSIFICATION	// ok pressed
WITHOUT_CLASSIFICATION	// open a port to the server
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// reopen the port
WITHOUT_CLASSIFICATION	// reopen the port
WITHOUT_CLASSIFICATION	// shall we switch to SSL?
WITHOUT_CLASSIFICATION	// if CAPA was not support just give it a try...
WITHOUT_CLASSIFICATION	// CAPAs say that SSL is not supported
WITHOUT_CLASSIFICATION	// AUTH?
WITHOUT_CLASSIFICATION	// CAPA not supported
WITHOUT_CLASSIFICATION	// Just use the default as fallback
WITHOUT_CLASSIFICATION	// AUTH
WITHOUT_CLASSIFICATION	// If the cause is a IMAPExcpetion then only password // wrong // else bogus authentication mechanism
WITHOUT_CLASSIFICATION	// Some error in the client/server communication // --> fall back to default login process
WITHOUT_CLASSIFICATION	// fill with nulls
WITHOUT_CLASSIFICATION	// put size at the specified place
WITHOUT_CLASSIFICATION	// user/pass worked -> this is indeed // a bogus server.
WITHOUT_CLASSIFICATION	// USER/PASS is always supported
WITHOUT_CLASSIFICATION	// APOP?
WITHOUT_CLASSIFICATION	// APOP not supported
WITHOUT_CLASSIFICATION	// register interest on status bar information
WITHOUT_CLASSIFICATION	// synchronize local UID list with server UID list
WITHOUT_CLASSIFICATION	// only download new messages
WITHOUT_CLASSIFICATION	// Delete old message from server if the feature is enabled
WITHOUT_CLASSIFICATION	// logout cleanly
WITHOUT_CLASSIFICATION	// display downloaded message count in statusbar
WITHOUT_CLASSIFICATION	// get inbox-folder from pop3-server preferences
WITHOUT_CLASSIFICATION	// clear statusbar message
WITHOUT_CLASSIFICATION	// clear statusbar message
WITHOUT_CLASSIFICATION	/*			 * // always enable the menuitem again			 * r[0].getPOP3ServerController().enableActions(true);			 */
WITHOUT_CLASSIFICATION	// important for cancel
WITHOUT_CLASSIFICATION	// download message
WITHOUT_CLASSIFICATION	// not needed anymore
WITHOUT_CLASSIFICATION	// try to authenticate
WITHOUT_CLASSIFICATION	// message belongs to which account?
WITHOUT_CLASSIFICATION	// if spam filter is not enabled -> return
WITHOUT_CLASSIFICATION	// move message to trash
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// remove old filters
WITHOUT_CLASSIFICATION	// add filter criteria
WITHOUT_CLASSIFICATION	// set source folder UID
WITHOUT_CLASSIFICATION	// search in subfolders recursively
WITHOUT_CLASSIFICATION	// NOTE if SSL is possible we just need the plain login // since SSL does the encryption for us.
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// server message numbers start with 1 // whereas List numbers start with 0 // -> always increase fetch number
WITHOUT_CLASSIFICATION	// which UID should be downloaded next
WITHOUT_CLASSIFICATION	// check if message isn't too big to download
WITHOUT_CLASSIFICATION	// if message-size is bigger skip download of this message
WITHOUT_CLASSIFICATION	// now download the message
WITHOUT_CLASSIFICATION	// delete message from server
WITHOUT_CLASSIFICATION	// synchronize local UID-list with server
WITHOUT_CLASSIFICATION	// mark message as recent
WITHOUT_CLASSIFICATION	// apply spam filter
WITHOUT_CLASSIFICATION	// apply filter on message
WITHOUT_CLASSIFICATION	// score message and mark as "spam" or "not spam"
WITHOUT_CLASSIFICATION	// is message marked as spam
WITHOUT_CLASSIFICATION	// create search folder
WITHOUT_CLASSIFICATION	// create search folder
WITHOUT_CLASSIFICATION	// check if string is a number
WITHOUT_CLASSIFICATION	// create search criteria
WITHOUT_CLASSIFICATION	// remember request id for "search in results"
WITHOUT_CLASSIFICATION	// remove memorized search folders
WITHOUT_CLASSIFICATION	//searchFolders.remove(searchRequestId);
WITHOUT_CLASSIFICATION	// use local date settings
WITHOUT_CLASSIFICATION	// ensure that we are currently in the mail component
WITHOUT_CLASSIFICATION	// select invisible virtual folder
WITHOUT_CLASSIFICATION	// update message list
WITHOUT_CLASSIFICATION	// create search criteria
WITHOUT_CLASSIFICATION	// remember request id for "search in results"
WITHOUT_CLASSIFICATION	// return empty result, in case the criteria doesn't match the search // term
WITHOUT_CLASSIFICATION	// create virtual folder for criteria
WITHOUT_CLASSIFICATION	// get first one
WITHOUT_CLASSIFICATION	// do the search
WITHOUT_CLASSIFICATION	// retrieve the actual search result data
WITHOUT_CLASSIFICATION	// retrieve the actual search result data
WITHOUT_CLASSIFICATION	// sort all the results
WITHOUT_CLASSIFICATION	// sort all the results
WITHOUT_CLASSIFICATION	// remember search folder for "show total results" action
WITHOUT_CLASSIFICATION	// memorize total result count
WITHOUT_CLASSIFICATION	// memorize total result count
WITHOUT_CLASSIFICATION	// remove all memorized search folders
WITHOUT_CLASSIFICATION	// create virtual folder for each criteria
WITHOUT_CLASSIFICATION	// ensure we are in existing result range
WITHOUT_CLASSIFICATION	// gather result results
WITHOUT_CLASSIFICATION	// if complex use the last search folder
WITHOUT_CLASSIFICATION	// initialise protocol layer
WITHOUT_CLASSIFICATION	// Start login procedure
WITHOUT_CLASSIFICATION	// Init Values // user's email address
WITHOUT_CLASSIFICATION	// no esmtp - use POP3-before-SMTP instead
WITHOUT_CLASSIFICATION	// ask password from user
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// turn off SSL for the future
WITHOUT_CLASSIFICATION	// NOTE if SSL is possible we just need the plain login // since SSL does the encryption for us.
WITHOUT_CLASSIFICATION	// offline -> go online
WITHOUT_CLASSIFICATION	// there seems to be no username set in the smtp-options //  -> use username from pop3 or imap options
WITHOUT_CLASSIFICATION	// Authentication is not supported
WITHOUT_CLASSIFICATION	//Turn off authentication for the future
WITHOUT_CLASSIFICATION	// Some error in the client/server communication //  --> fall back to default login process
WITHOUT_CLASSIFICATION	// authentication was successful // -> save name/password
WITHOUT_CLASSIFICATION	// Add a default PLAIN login as fallback
WITHOUT_CLASSIFICATION	// EHLO not supported -> AUTH not supported
WITHOUT_CLASSIFICATION	//Fallback to Securest Login method
WITHOUT_CLASSIFICATION	// No Authentication available
WITHOUT_CLASSIFICATION	// Close Port
WITHOUT_CLASSIFICATION	// now send message source
WITHOUT_CLASSIFICATION	// icon
WITHOUT_CLASSIFICATION	// shortcut key // no shortcut here, because F10 conflicts with system accelerator key // putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_F10, // 0));
WITHOUT_CLASSIFICATION	// check if we are online
WITHOUT_CLASSIFICATION	// get outbox folder
WITHOUT_CLASSIFICATION	// create referenc
WITHOUT_CLASSIFICATION	// start command
WITHOUT_CLASSIFICATION	// get Outbox folder from reference
WITHOUT_CLASSIFICATION	// get UID list of messages
WITHOUT_CLASSIFICATION	// send all messages
WITHOUT_CLASSIFICATION	// get account information from message
WITHOUT_CLASSIFICATION	// use the default account
WITHOUT_CLASSIFICATION	// skip message if there's no account // available to send it
WITHOUT_CLASSIFICATION	// Sent folder
WITHOUT_CLASSIFICATION	// open connection to SMTP server
WITHOUT_CLASSIFICATION	// move all successfully send messages to the Sent folder
WITHOUT_CLASSIFICATION	// start move command
WITHOUT_CLASSIFICATION	/*	 * validate command parameters. At the moment only checks if there are any	 * invalid email addresses	 *	 */
WITHOUT_CLASSIFICATION	// mark message as answered
WITHOUT_CLASSIFICATION	// close composer view
WITHOUT_CLASSIFICATION	// important for cancel
WITHOUT_CLASSIFICATION	// not needed anymore
WITHOUT_CLASSIFICATION	//String invalidRecipient = null;
WITHOUT_CLASSIFICATION	// get composer controller // -> get all the account information from the controller
WITHOUT_CLASSIFICATION	// sent folder
WITHOUT_CLASSIFICATION	// get the SendableMessage object
WITHOUT_CLASSIFICATION	// compose the message suitable for sending
WITHOUT_CLASSIFICATION	// user cancelled sending operation // open composer view
WITHOUT_CLASSIFICATION	// open composer view
WITHOUT_CLASSIFICATION	// open connection
WITHOUT_CLASSIFICATION	// send message
WITHOUT_CLASSIFICATION	// mark as read
WITHOUT_CLASSIFICATION	// save message in Sent folder
WITHOUT_CLASSIFICATION	// does not occur
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// display status message
WITHOUT_CLASSIFICATION	// set dirty flag
WITHOUT_CLASSIFICATION	// set dirty flag
WITHOUT_CLASSIFICATION	// open composer view
WITHOUT_CLASSIFICATION	// close connection to server
WITHOUT_CLASSIFICATION	// can no longer assume that sendMessageDialog has been displayed
WITHOUT_CLASSIFICATION	// close send message dialog
WITHOUT_CLASSIFICATION	// re-open composer view
WITHOUT_CLASSIFICATION	// do not prompt user if composer should be really closed
WITHOUT_CLASSIFICATION	// save composer window state
WITHOUT_CLASSIFICATION	// create directory <config-folder>/mail/spamdb
WITHOUT_CLASSIFICATION	// make Columba logger parent of macchiato logger
WITHOUT_CLASSIFICATION	// load database from file
WITHOUT_CLASSIFICATION	// load database from file
WITHOUT_CLASSIFICATION	// get inputstream of message body
WITHOUT_CLASSIFICATION	// get inputstream of message body
WITHOUT_CLASSIFICATION	// get stream
WITHOUT_CLASSIFICATION	// apply additional handcrafted rules
WITHOUT_CLASSIFICATION	// get headers
WITHOUT_CLASSIFICATION	// get headers
WITHOUT_CLASSIFICATION	// put headers in list
WITHOUT_CLASSIFICATION	// put headers in list
WITHOUT_CLASSIFICATION	// get new inputstream
WITHOUT_CLASSIFICATION	// get new inputstream
WITHOUT_CLASSIFICATION	// check if this message was already learned // -> only add if this is not the case
WITHOUT_CLASSIFICATION	// message already exists // --> correct token data
WITHOUT_CLASSIFICATION	// new message
WITHOUT_CLASSIFICATION	// check if this message was already learned
WITHOUT_CLASSIFICATION	// message already exists
WITHOUT_CLASSIFICATION	// --> correct token data
WITHOUT_CLASSIFICATION	// only save if changes exist
WITHOUT_CLASSIFICATION	// cleanup DB -> remove old tokens
WITHOUT_CLASSIFICATION	// mark message as *not* spam
WITHOUT_CLASSIFICATION	// train message as spam or non spam
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//does not happen
WITHOUT_CLASSIFICATION	//does not happen
WITHOUT_CLASSIFICATION	//does not happen
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get source folder
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// get array of message UIDs
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// update status message
WITHOUT_CLASSIFICATION	// register for status events
WITHOUT_CLASSIFICATION	// message belongs to which account?
WITHOUT_CLASSIFICATION	// get array of source references
WITHOUT_CLASSIFICATION	// get array of source references
WITHOUT_CLASSIFICATION	// mark spam messages
WITHOUT_CLASSIFICATION	// mark non spam messages
WITHOUT_CLASSIFICATION	// calculate message score
WITHOUT_CLASSIFICATION	// check if sender is already in addressbook
WITHOUT_CLASSIFICATION	// add this message to frequency database
WITHOUT_CLASSIFICATION	// train message as spam
WITHOUT_CLASSIFICATION	// train message as ham
WITHOUT_CLASSIFICATION	// try to get the account using the email address
WITHOUT_CLASSIFICATION	// use default account as fallback
WITHOUT_CLASSIFICATION	// if 1/3 of all characters are digits
WITHOUT_CLASSIFICATION	// convert to lower-case
WITHOUT_CLASSIFICATION	// whitespace detected
WITHOUT_CLASSIFICATION	// if already detected before
WITHOUT_CLASSIFICATION	/*     * wait for stream threads to die     *     */
WITHOUT_CLASSIFICATION	// spam found
WITHOUT_CLASSIFICATION	// --no-rebuild option is deprecated in recent SpamAssassin versions
WITHOUT_CLASSIFICATION	/*		ipcHelper.executeCommand(ExternalToolsHelper.getSALearn()				+ " --no-rebuild --spam --single");				*/
WITHOUT_CLASSIFICATION	// don't need this
WITHOUT_CLASSIFICATION	// don't need this
WITHOUT_CLASSIFICATION	/*         * If this is a unix-based system, check the 2 best-known areas for the         * aspell binary.         */
WITHOUT_CLASSIFICATION	/* * Test for boolean equals(Object) */
WITHOUT_CLASSIFICATION	// -- Text Fields
WITHOUT_CLASSIFICATION	// save current location statically for next time
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// -- Buttons
WITHOUT_CLASSIFICATION	// -- Other components
WITHOUT_CLASSIFICATION	// suggestionsJScrollPane.setPreferredSize(
WITHOUT_CLASSIFICATION	// new Dimension( suggestionsJScrollPane.getPreferredSize().width, 75 ) // );
WITHOUT_CLASSIFICATION	// -- Overall Dialog box
WITHOUT_CLASSIFICATION	// suggestionsJScrollPane.setMinimumSize( new Dimension( 200, 300 ) );
WITHOUT_CLASSIFICATION	// suggestionsJScrollPane.setMaximumSize( new Dimension( // Integer.MAX_VALUE, Integer.MAX_VALUE ) );
WITHOUT_CLASSIFICATION	// setSize( 750, getPreferredSize().height );
WITHOUT_CLASSIFICATION	// -- Availables Actions
WITHOUT_CLASSIFICATION	// skip '#'
WITHOUT_CLASSIFICATION	// skip '#'
WITHOUT_CLASSIFICATION	//How to retrieve the mime part's contentID: String contentID = url.getRef(); //initialize stuff here
WITHOUT_CLASSIFICATION	// Default
WITHOUT_CLASSIFICATION	// Protocol defined Mechanisms
WITHOUT_CLASSIFICATION	//SMTP
WITHOUT_CLASSIFICATION	// SASL Mechanisms
WITHOUT_CLASSIFICATION	// We compare three classes: plain, md5 and popbeforesmtp
WITHOUT_CLASSIFICATION	//$JUnit-END$	
WITHOUT_CLASSIFICATION	// first account item
WITHOUT_CLASSIFICATION	// first account item
WITHOUT_CLASSIFICATION	// second account item
WITHOUT_CLASSIFICATION	// second account item
WITHOUT_CLASSIFICATION	// third item, a bit different from the first
WITHOUT_CLASSIFICATION	// third item, a bit different from the first
WITHOUT_CLASSIFICATION	// should have the same hashcodes...
WITHOUT_CLASSIFICATION	// expect a different hashcode from a newly created item...
WITHOUT_CLASSIFICATION	// expect a different hashcode for item and item3
WITHOUT_CLASSIFICATION	// test self equality...
WITHOUT_CLASSIFICATION	// item and item2 should be equal...
WITHOUT_CLASSIFICATION	// item and item2 should be two different objects
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// item should not be equal to a newly created item or null
WITHOUT_CLASSIFICATION	// item and item3 should not be equal
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// !!! Subject: test // create filter configuration // -> check if <Subject> <contains> pattern <test>
WITHOUT_CLASSIFICATION	// !!! Subject: test // create filter configuration // -> check if <Subject> <contains> pattern <test>
WITHOUT_CLASSIFICATION	// !!! Subject: test // create filter configuration // -> check if <Subject> <contains> pattern <test>
WITHOUT_CLASSIFICATION	// !!! From: alice@mail.org // create filter configuration // -> check if <From> <contains> pattern <alice@mail.org>
WITHOUT_CLASSIFICATION	// !!! From: alice@mail.org // create filter configuration // -> check if <From> <contains> pattern <alice@mail.org>
WITHOUT_CLASSIFICATION	// add message to folder
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	//		 create MH folder // -> use homeDirectory as top-level folder // -> this has to be an absolute path
WITHOUT_CLASSIFICATION	/*		 * sourceFolder = new CachedMHFolder("test", "CachedMHFolder",		 * FolderTstHelper.homeDirectory + "/folders/");		 */
WITHOUT_CLASSIFICATION	// delete all files in folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// disabled IMAP folder tests as they require connection // to remote IMAP server // setup(suite, new IMAPTstFactory());
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// delete all files in folder
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add message "1.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// get inputstream of mimepart 0 from folder
WITHOUT_CLASSIFICATION	// create string from inputstream
WITHOUT_CLASSIFICATION	// create string from inputstream
WITHOUT_CLASSIFICATION	// create string from inputstream
WITHOUT_CLASSIFICATION	// compare both messages
WITHOUT_CLASSIFICATION	// compare both messages
WITHOUT_CLASSIFICATION	// compare both messages
WITHOUT_CLASSIFICATION	//      add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// get inputstream of this message from folder
WITHOUT_CLASSIFICATION	// get inputstream of this message from folder
WITHOUT_CLASSIFICATION	//		 add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	//		 add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	//		 add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	//		 add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// get flags of message
WITHOUT_CLASSIFICATION	// set flags
WITHOUT_CLASSIFICATION	// set flags
WITHOUT_CLASSIFICATION	// get message source stream
WITHOUT_CLASSIFICATION	// get message attributes
WITHOUT_CLASSIFICATION	// close inpustream
WITHOUT_CLASSIFICATION	// disabled IMAP folder tests as they require connection // to remote IMAP server //setup(suite, new IMAPTstFactory());
WITHOUT_CLASSIFICATION	//      get flags of message
WITHOUT_CLASSIFICATION	// mark message as read
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// create string from inputstream
WITHOUT_CLASSIFICATION	// compare both messages
WITHOUT_CLASSIFICATION	// get inputstream of this message from folder
WITHOUT_CLASSIFICATION	//		 add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// An individual 3 digit number
WITHOUT_CLASSIFICATION	//      create Command reference
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	//    	 create Command reference
WITHOUT_CLASSIFICATION	//    	 create Command reference
WITHOUT_CLASSIFICATION	//   	 create Command reference
WITHOUT_CLASSIFICATION	// create folders, etc.
WITHOUT_CLASSIFICATION	// delete folders
WITHOUT_CLASSIFICATION	// ask the user
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// disabled IMAP folder tests as they require connection // to remote IMAP server // setup(suite, new IMAPTstFactory());
WITHOUT_CLASSIFICATION	// create string from inputstream
WITHOUT_CLASSIFICATION	// compare both messages
WITHOUT_CLASSIFICATION	// get inputstream of this message from folder
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// get flags of message
WITHOUT_CLASSIFICATION	// set flags
WITHOUT_CLASSIFICATION	//      create Command reference
WITHOUT_CLASSIFICATION	//      create Command reference
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// create Command reference
WITHOUT_CLASSIFICATION	// create Command reference
WITHOUT_CLASSIFICATION	// create Command reference
WITHOUT_CLASSIFICATION	//  add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	/*		 * oldFlags.setRecent(true); oldFlags.setFlagged(true);		 * oldFlags.setExpunged(false);		 */
WITHOUT_CLASSIFICATION	/*		 * assertEquals("copied message should be marked as recent", true, flags		 * .getRecent()); assertEquals("copied message should be marked as		 * flagged", true, flags .getFlagged()); assertEquals("copied message		 * should be marked as not expunged", false, flags.getExpunged());		 */
WITHOUT_CLASSIFICATION	// Add some messages
WITHOUT_CLASSIFICATION	// Add some messages
WITHOUT_CLASSIFICATION	// Add some messages
WITHOUT_CLASSIFICATION	// Check for the new messages
WITHOUT_CLASSIFICATION	// Check for the new messages
WITHOUT_CLASSIFICATION	// Check for success
WITHOUT_CLASSIFICATION	// Check for success
WITHOUT_CLASSIFICATION	// Check for success
WITHOUT_CLASSIFICATION	// Add some new messages // and remove the same number of old messages
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	//		 create Command reference
WITHOUT_CLASSIFICATION	// remove configuration directory
WITHOUT_CLASSIFICATION	// try to get account using the account ID
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// disabled IMAP folder tests as they require connection // to remote IMAP server // setup(suite, new IMAPTstFactory());
WITHOUT_CLASSIFICATION	//      create Command reference
WITHOUT_CLASSIFICATION	//      create Command reference
WITHOUT_CLASSIFICATION	//      create Command reference
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	// model should contain the data
WITHOUT_CLASSIFICATION	//  execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	//  execute command -> use mock object class as worker which does // nothing 
WITHOUT_CLASSIFICATION	//AccountList list = MailConfig.getInstance().getAccountList(); //list.addEmptyAccount("pop3");
WITHOUT_CLASSIFICATION	// 3 columns table
WITHOUT_CLASSIFICATION	// create sample headerlist
WITHOUT_CLASSIFICATION	// check number of tree nodes
WITHOUT_CLASSIFICATION	// check number of tree nodes
WITHOUT_CLASSIFICATION	// check number of cached MessageNodes //assertEquals(2, model.getMap().size());
WITHOUT_CLASSIFICATION	// check number of JTable rows
WITHOUT_CLASSIFICATION	// check number of JTable rows
WITHOUT_CLASSIFICATION	// check number of JTree rows
WITHOUT_CLASSIFICATION	// check number of JTree rows
WITHOUT_CLASSIFICATION	// remove MessageNode with uid=0
WITHOUT_CLASSIFICATION	// check number of cached MessageNodes //assertEquals(1, model.getMap().size());
WITHOUT_CLASSIFICATION	// if this is the last token, check if the last element // is the same than in the array
WITHOUT_CLASSIFICATION	// if this is the last token, check if the last element // is the same than in the array
WITHOUT_CLASSIFICATION	// check for at least 10 whitespaces
WITHOUT_CLASSIFICATION	// if this is the last token, check if the last element // is the same than in the array
WITHOUT_CLASSIFICATION	// if this is the last token, check if the last element // is the same than in the array
WITHOUT_CLASSIFICATION	/*	 * test with null list	 */
WITHOUT_CLASSIFICATION	// create group with two contacts
WITHOUT_CLASSIFICATION	/*	 * test with empty list	 */
WITHOUT_CLASSIFICATION	// url decode
WITHOUT_CLASSIFICATION	/*	 * Test with all kinds of input data	 */
WITHOUT_CLASSIFICATION	// first group contains first contact item
WITHOUT_CLASSIFICATION	// create group containing first contact
WITHOUT_CLASSIFICATION	// first group contains first contact item
WITHOUT_CLASSIFICATION	// add contact to roaster, nickname="", group=null
WITHOUT_CLASSIFICATION	/*	 * Test method for	 * 'org.columba.mail.parser.ListBuilder.createStringListFromItemList(List<IHeaderItem>)'	 */
WITHOUT_CLASSIFICATION	//public abstract IChatMediator getChatMediator();
WITHOUT_CLASSIFICATION	// mock folder class, only returns folder id
WITHOUT_CLASSIFICATION	// mock object folder facade, only returns folder list
WITHOUT_CLASSIFICATION	//public abstract void setChatMediator(IChatMediator mediator);
WITHOUT_CLASSIFICATION	// we are only interested on subscription requests
WITHOUT_CLASSIFICATION	// if already in roster
WITHOUT_CLASSIFICATION	// create chat connection, if not available yet
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// get Columba's top-level configuration directory
WITHOUT_CLASSIFICATION	// create top-level configuration directory
WITHOUT_CLASSIFICATION	// fall-back to global resource loader
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// close stream
WITHOUT_CLASSIFICATION	// --no-rebuild option is deprecated in recent SpamAssassin versions
WITHOUT_CLASSIFICATION	// and add it to the buddylist
WITHOUT_CLASSIFICATION	// example: fdietz@jabber.org/Jabber-client // -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// add all contacts as leafs of group folders
WITHOUT_CLASSIFICATION	// add all groups as folder to JTree
WITHOUT_CLASSIFICATION	// buddy already exists
WITHOUT_CLASSIFICATION	// add "Uncategorized" note
WITHOUT_CLASSIFICATION	// add to global buddy list
WITHOUT_CLASSIFICATION	// update status information
WITHOUT_CLASSIFICATION	// create new buddy
WITHOUT_CLASSIFICATION	// found group for buddy
WITHOUT_CLASSIFICATION	// get presence
WITHOUT_CLASSIFICATION	// persist changes on exit
WITHOUT_CLASSIFICATION	// check if this buddy belongs to a group
WITHOUT_CLASSIFICATION	// add to "Uncategorized" node
WITHOUT_CLASSIFICATION	// didn't find any group for this buddy
WITHOUT_CLASSIFICATION	// load configuraation
WITHOUT_CLASSIFICATION	// create account object
WITHOUT_CLASSIFICATION	// use key/value properties file
WITHOUT_CLASSIFICATION	// load properties from stream
WITHOUT_CLASSIFICATION	// open stream to file
WITHOUT_CLASSIFICATION	// save properties to file
WITHOUT_CLASSIFICATION	// create stream to file
WITHOUT_CLASSIFICATION	// store account data in properties
WITHOUT_CLASSIFICATION	// selected buddy in buddylist
WITHOUT_CLASSIFICATION	// selected buddy in buddylist
WITHOUT_CLASSIFICATION	// use selected buddy
WITHOUT_CLASSIFICATION	// use selected buddy
WITHOUT_CLASSIFICATION	// prompt for jabber id
WITHOUT_CLASSIFICATION	// prompt for jabber id
WITHOUT_CLASSIFICATION	// prompt for jabber id
WITHOUT_CLASSIFICATION	// if user cancelled action
WITHOUT_CLASSIFICATION	// awt-event-thread
WITHOUT_CLASSIFICATION	// send message
WITHOUT_CLASSIFICATION	/*         * If this is a unix-based system, check the 2 best-known areas for the         * aspell binary.         */
WITHOUT_CLASSIFICATION	/*         * If this is a unix-based system, check the 2 best-known areas for the         * aspell binary.         */
WITHOUT_CLASSIFICATION	// example: fdietz@jabber.org/Jabber-client // -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	// example: fdietz@jabber.org/Jabber-client // -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	// example: fdietz@jabber.org/Jabber-client // -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	//DateFormat format = DateFormat.getTimeInstance(DateFormat.SHORT); // green color
WITHOUT_CLASSIFICATION	//DateFormat format = DateFormat.getTimeInstance(DateFormat.SHORT);
WITHOUT_CLASSIFICATION	// private SendButtonController sendButton;
WITHOUT_CLASSIFICATION	// JPanel mainPanel = new JPanel(mainLayout); // mainPanel.setBorder(Borders.DIALOG_BORDER);
WITHOUT_CLASSIFICATION	// create message object
WITHOUT_CLASSIFICATION	// set message body
WITHOUT_CLASSIFICATION	// clear text box
WITHOUT_CLASSIFICATION	// return (ChatMediator) chatList.get(index);
WITHOUT_CLASSIFICATION	// private JPasswordField passwordTextField;
WITHOUT_CLASSIFICATION	// passwordTextField.setText(account.getPassword());
WITHOUT_CLASSIFICATION	// b.addSeparator("Account Options");
WITHOUT_CLASSIFICATION	// b.append("Pass&word:", passwordTextField);
WITHOUT_CLASSIFICATION	// passwordTextField = new JPasswordField(10);
WITHOUT_CLASSIFICATION	/*	 * public String getPassword() { return passwordTextField.getText(); }	 */
WITHOUT_CLASSIFICATION	// comboBox.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	/*			 * setIconTextGap(5); setVerticalAlignment(JLabel.CENTER);			 */
WITHOUT_CLASSIFICATION	// IAccount account = object.getAccount();
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	// Force that the last line in buffer does NOT have a newline
WITHOUT_CLASSIFICATION	// example: fdietz@jabber.org/Jabber-client // -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	// example: fdietz@jabber.org/Jabber-client // -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	// connect to server // new ConnectAction(this).actionPerformed(null);
WITHOUT_CLASSIFICATION	// checkBox.addItem("Custom Message...", null); // checkBox.addItem("Leave...");
WITHOUT_CLASSIFICATION	// private void addStatus(String tooltip, ImageIcon icon) { // JLabel label = new JLabel(icon); // label.setToolTipText(tooltip); // // comboBox.addItem(tooltip); // }
WITHOUT_CLASSIFICATION	// just ignore unknown people
WITHOUT_CLASSIFICATION	//IAccount account = object.getAccount();
WITHOUT_CLASSIFICATION	// contact
WITHOUT_CLASSIFICATION	// group
WITHOUT_CLASSIFICATION	// Set bean properties
WITHOUT_CLASSIFICATION	// The following methods override the defaults for performance reasons
WITHOUT_CLASSIFICATION	// Make sure we get all log info as fast as we can get ahold of it.
WITHOUT_CLASSIFICATION	//notifyTableListeners(new TableModelEvent(this, 0, logMessages.size()));
WITHOUT_CLASSIFICATION	//notifyTableListeners(new TableModelEvent(this, logMessages.size(), logMessages.size(), TableModelEvent.ALL_COLUMNS, TableModelEvent.INSERT));
WITHOUT_CLASSIFICATION	//"right:max(40dlu;pref),3dlu,
WITHOUT_CLASSIFICATION	//private JTable logTable;
WITHOUT_CLASSIFICATION	//bottomPanel.add(closeButton);
WITHOUT_CLASSIFICATION	// open configuration file 
WITHOUT_CLASSIFICATION	// navigate to treenode "text"
WITHOUT_CLASSIFICATION	// read attribute "value"
WITHOUT_CLASSIFICATION	// start parsing line
WITHOUT_CLASSIFICATION	// found new token
WITHOUT_CLASSIFICATION	// open file
WITHOUT_CLASSIFICATION	// add contact to addressbook
WITHOUT_CLASSIFICATION	// parse line by line
WITHOUT_CLASSIFICATION	// if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	// if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	// found new message
WITHOUT_CLASSIFICATION	// save last message, because while loop aborted before being able to // save message
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// model -> view // read configuration and set gui elements appropriately
WITHOUT_CLASSIFICATION	// view -> model // write configuration given the data the user entered in the gui
WITHOUT_CLASSIFICATION	// create new contact card
WITHOUT_CLASSIFICATION	// the boundary parameter
WITHOUT_CLASSIFICATION	// parameters ~ rest of string
WITHOUT_CLASSIFICATION	// strip "'s
WITHOUT_CLASSIFICATION	// Lines not starting with "From ???@???" is part of the message // (headers or body)
WITHOUT_CLASSIFICATION	// we reached "From ..." (start of new message)
WITHOUT_CLASSIFICATION	// reset for new message
WITHOUT_CLASSIFICATION	// save last message (while loop terminated before last msg was saved)
WITHOUT_CLASSIFICATION	// ** End of method importMailboxFile
WITHOUT_CLASSIFICATION	// invalid date format - not enough tokens in it!!
WITHOUT_CLASSIFICATION	// ** End of method getDateHeader
WITHOUT_CLASSIFICATION	// divide message into headers and body
WITHOUT_CLASSIFICATION	// loop over headers and modify them as needed
WITHOUT_CLASSIFICATION	// a header
WITHOUT_CLASSIFICATION	// Logging.log.severe( // "Not enough tokens in \"" // + dateStr // + "\" to create Date: header. Returning null", // e);
WITHOUT_CLASSIFICATION	// day of week // month // day of month // time // year
WITHOUT_CLASSIFICATION	// handle header
WITHOUT_CLASSIFICATION	// parse // Content-Type
WITHOUT_CLASSIFICATION	// boundary not found - Content-Type must be changed
WITHOUT_CLASSIFICATION	// just convert it to text/plain or text/html
WITHOUT_CLASSIFICATION	/*							 * mixed or unknown multipart type (to be treated as							 * mixed). This is typically a message with							 * attachments. Eudora just stores links to them -							 * therefore we create a new multipart/mixed message							 * with 2nd part = html page with links to							 * attachments							 */
WITHOUT_CLASSIFICATION	// no attachments found - just convert it to // text/plain or text/html
WITHOUT_CLASSIFICATION	/*					 * Such a header is used by Eudora to indicate attachments					 * for outgoing messages. Outgoing messages have no					 * Content-Type specified. Therefore the Content-Type header					 * can be safely set here without risk of conflicts with the					 * modifications made above					 */
WITHOUT_CLASSIFICATION	// attachments found
WITHOUT_CLASSIFICATION	// no attachments found - just insert a // Content-Type header // extra // header // necessary // X-Attachments header is // replaced
WITHOUT_CLASSIFICATION	// get unique boundary (not checked against att. // list part - but guess its ok)
WITHOUT_CLASSIFICATION	// extra // header // necessary // X-Attachments header is // replaced
WITHOUT_CLASSIFICATION	// we have now added // such a header
WITHOUT_CLASSIFICATION	// ** End of while loop over headers
WITHOUT_CLASSIFICATION	/*		 * If no Content-Type header was found, it is necessary to construct a		 * new one (for outgoing msg Eudora never includes a Content-Type =>		 * html msg is not shown correctly).		 */
WITHOUT_CLASSIFICATION	// save message to destination folder
WITHOUT_CLASSIFICATION	// ** End of method convertAndSavemessage
WITHOUT_CLASSIFICATION	// create full msg from headers and body
WITHOUT_CLASSIFICATION	// ... and save it
WITHOUT_CLASSIFICATION	// NB: This is the saveMessage method def. in // DefaultMessageImporter
WITHOUT_CLASSIFICATION	// Logging.log.severe("Error saving converted message", e);
WITHOUT_CLASSIFICATION	// ** End of method saveMessage
WITHOUT_CLASSIFICATION	// build new message body
WITHOUT_CLASSIFICATION	// initial guess
WITHOUT_CLASSIFICATION	// unique boundary found
WITHOUT_CLASSIFICATION	// ** End of method divideMessage
WITHOUT_CLASSIFICATION	// is it HTML or plain text
WITHOUT_CLASSIFICATION	// Logging.log.severe("Error while looking for charset", e);
WITHOUT_CLASSIFICATION	// for easier search / // matching
WITHOUT_CLASSIFICATION	// meta tag with content definition found
WITHOUT_CLASSIFICATION	// charset is specified - find it
WITHOUT_CLASSIFICATION	// step // past // spaces // find position of '>', '"'. or ' ' which is = end // of charset name
WITHOUT_CLASSIFICATION	// charset is found from line, not lcLine => not // forced lower case
WITHOUT_CLASSIFICATION	// we found what we were looking for
WITHOUT_CLASSIFICATION	// Logging.log.severe( // "Error while looking for charset", // e);
WITHOUT_CLASSIFICATION	// this will terminate the loop
WITHOUT_CLASSIFICATION	// end of while loop
WITHOUT_CLASSIFICATION	// ** End of method guessBodyContentType
WITHOUT_CLASSIFICATION	// handle attachment (by creating a link)
WITHOUT_CLASSIFICATION	// no attachments found - should in fact have been checked by the // caller
WITHOUT_CLASSIFICATION	// string to search
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// Server does not support UTF-8 // -> fall back to System default
WITHOUT_CLASSIFICATION	// We trigger an update only when the exists changed // which should be equal with a Recent change.
WITHOUT_CLASSIFICATION	// we are using this inpustream multiple times // --> istream will be closed by CloneStreamMaster
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// handle attachment (by creating a link)
WITHOUT_CLASSIFICATION	// *20030515, kpo* '\n' appended
WITHOUT_CLASSIFICATION	// body untouched
WITHOUT_CLASSIFICATION	// attachments found... // insert start and end for html
WITHOUT_CLASSIFICATION	// insert header for attachment list
WITHOUT_CLASSIFICATION	// build new body part
WITHOUT_CLASSIFICATION	// build new body part
WITHOUT_CLASSIFICATION	// return parts
WITHOUT_CLASSIFICATION	// ** End of method createAttachmentListFromHeader
WITHOUT_CLASSIFICATION	// part of body
WITHOUT_CLASSIFICATION	// insert start and end for html
WITHOUT_CLASSIFICATION	// no attachments found
WITHOUT_CLASSIFICATION	// Logging.log.severe("Error parsing body for attachments", e);
WITHOUT_CLASSIFICATION	// ** End of method createAttachmentListFromAttachmentConverted
WITHOUT_CLASSIFICATION	// ** End of class EudoraMailImportFilter
WITHOUT_CLASSIFICATION	// This Method frees a given String from Comments defined in Rfc822 
WITHOUT_CLASSIFICATION	// This Method delivers the next line
WITHOUT_CLASSIFICATION	// just a simple example
WITHOUT_CLASSIFICATION	// you need a sound.wav in your program folder
WITHOUT_CLASSIFICATION	// get the header of the message
WITHOUT_CLASSIFICATION	// convert the condition string to an int which is easier to handle
WITHOUT_CLASSIFICATION	// get the "To" headerfield from the header
WITHOUT_CLASSIFICATION	// get the "Cc" headerfield from the header
WITHOUT_CLASSIFICATION	// test if our To headerfield contains or contains not the search // string
WITHOUT_CLASSIFICATION	// do the same for the Cc headerfield and OR the results
WITHOUT_CLASSIFICATION	// return the result as boolean value true or false
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// parse for urls / email adresses and substite with HTML-code // html = HtmlParser.substituteURL(html); // html = HtmlParser.substituteEmailAddress(html);
WITHOUT_CLASSIFICATION	// since the indices on the pop server start with 1 we add // a dummy null for the 0 element in the list
WITHOUT_CLASSIFICATION	// start command which adds message to folder // and calls apply-filter on this specific message
WITHOUT_CLASSIFICATION	// If the cause is a SMTPExcpetion then only password // wrong // else bogus authentication mechanism
WITHOUT_CLASSIFICATION	// VALIDATION DISABLE ! Sebastian Witt 25.07.04, // "NAME" <email@somewhat.de> isnt true, which should :( // root@localhost is valid, but not with this check. :( // root is also valid (with local mailserver), but not with this check // :(
WITHOUT_CLASSIFICATION	// "-L" use local tests only // String cmd = "spamassassin -L"; // String cmd = "spamc -c -L";
WITHOUT_CLASSIFICATION	// --
WITHOUT_CLASSIFICATION	// if this is the last token, check if the last element // is the same than in the array
WITHOUT_CLASSIFICATION	// create config-folder //		File file = new File("test_config"); //		file.mkdir(); // //		new Config(file); // //		Logging.DEBUG = true; //		Logging.createDefaultHandler(); // //		// init mail component //		new MailMain().init(); //		new AddressbookMain().init(); // //		// now load all available plugins //		PluginManager.getInstance().initExternalPlugins();
WITHOUT_CLASSIFICATION	// @author: fdietz // Disabled this testcase, as it doesn't really fit into // this category of message operations // It fails because we would have to create a folder-hierarchy // including parent folders to execute the move
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// mock objects contact facade, only returns getContactItem() and // getAllGroups()
WITHOUT_CLASSIFICATION	// public IChatMediator getChatMediator() { // return mediator; // }
WITHOUT_CLASSIFICATION	// // Logging stuff //
WITHOUT_CLASSIFICATION	// if line doesn't start with "From" or line length is 0 // -> save everything in StringBuffer
WITHOUT_CLASSIFICATION	// Date header // we got a date header (store this // fact for later use
WITHOUT_CLASSIFICATION	// append the new Date // header
WITHOUT_CLASSIFICATION	// PlaceRect bgAbsRect = new AbsRect(new AtStart(0), new AtStart(0), new // AtEnd(0), new AtEnd(0), null, null, shadowInsets);
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// check if firstname, middlename or lastname contain only valid // characters
WITHOUT_CLASSIFICATION	//		TagList tagList = new ContactTagList(this); //		JScrollPane tagListScrollPane = new JScrollPane(tagList); //		tagListScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER); //		tagListScrollPane //				.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	// commandline arguments which can't be handled by the core // are passed along to other subcomponents
WITHOUT_CLASSIFICATION	// register at shutdown manager // -> this will save all configuration data, when closing Columba
WITHOUT_CLASSIFICATION	// g.setColor(bg); // g.fillRect(0, h - 3, 3, 3); // g.fillRect(w - 3, 0, 3, 3); // g.fillRect(w - 3, h - 3, 3, 3);
WITHOUT_CLASSIFICATION	// b_rmonth.setFocusPainted(false); // b_rmonth.setOpaque(false); // b_rmonth.addActionListener(this);
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// create filter configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// add toolbar // panel.add(toolbar, BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	// finally, add all external extension menu additions // for example: Hello World Plugin
WITHOUT_CLASSIFICATION	// small icon for menu // putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("stock_about-16.png"));
WITHOUT_CLASSIFICATION	// update popup menu with search term before its made visible // textField.addPopupMenuListener(this);
WITHOUT_CLASSIFICATION	//textField.showPopup(); //textField.requestFocus();
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// init configuration
WITHOUT_CLASSIFICATION	// Implement the content hander methods that // will delegate SAX events to the tag tracker network.
WITHOUT_CLASSIFICATION	//Integer priority = Integer.valueOf(pattern); //return priority;
WITHOUT_CLASSIFICATION	// We use the attributes and flags from the cache // but the parsed header from the parsed message
WITHOUT_CLASSIFICATION	// create one list containing the marked items, which have to be "unmarked" // and another list containing the items remained to be marked
WITHOUT_CLASSIFICATION	// resync search engine // -> this is only needed for Lucene right now
WITHOUT_CLASSIFICATION	// folders have same root folder // -> for example: two IMAP folders on the same server // -----> this means we use server-side copying which // -----> is much faster than using inputstreams here // // also used for local folders, which saves some parsing work
WITHOUT_CLASSIFICATION	//DocumentParser parser = new DocumentParser(); // decode message body with respect to charset
WITHOUT_CLASSIFICATION	// one line is added to the header for each attachment // (which has a filename defined)
WITHOUT_CLASSIFICATION	// create a Command for every action of this filter // -> create a compound object which encapsulates all commands
WITHOUT_CLASSIFICATION	// First remove all headers that are in the headerlist but // not the Folder
WITHOUT_CLASSIFICATION	// There are still more messages to update // -> issue another fetch messages command
WITHOUT_CLASSIFICATION	// Something is wrong // Sync again
WITHOUT_CLASSIFICATION	// remember parent path // (this is necessary for IMAPRootFolder sync operations)
WITHOUT_CLASSIFICATION	// if line doesn't start with "From" or line length is 0 //  -> save everything in StringBuffer
WITHOUT_CLASSIFICATION	// search request isn't covered by query engine // -> fall back to default search engine
WITHOUT_CLASSIFICATION	// clear message viewer // /tableController.valueChanged(new // ListSelectionEvent(this,-1,-1,false));
WITHOUT_CLASSIFICATION	// register Component as FocusOwner // FocusManager.getInstance().registerComponent(this);
WITHOUT_CLASSIFICATION	// NOTE if SSL is possible we just need the plain login // since SSL does the encryption for us.
WITHOUT_CLASSIFICATION	// this is save because the only shutdown plugin // to stop this server, the configuration isn't touched
WITHOUT_CLASSIFICATION	// register for configuration changes for the html(enabled/disabled) // state
WITHOUT_CLASSIFICATION	// get size of content (width, height is size without scaling) // scaled size
WITHOUT_CLASSIFICATION	//should not occur, otherwise the bundlePath would not be in the // hashtable
WITHOUT_CLASSIFICATION	// small icon for menu //		putValue(SMALL_ICON, ImageLoader //				.getSmallImageIcon("configure_16_mail.png"));
WITHOUT_CLASSIFICATION	// we assume user cancelled search // -> remove cached command
WITHOUT_CLASSIFICATION	// small icon for menu //putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("16_sign.png"));
WITHOUT_CLASSIFICATION	//	public VirtualFolder(FolderItem item) { //		super(item); // //		headerList = new MemoryHeaderList(); // //		ensureValidFilterElement(); //	}
WITHOUT_CLASSIFICATION	//DefaultItem item = new DefaultItem(element); //item.set("header_enabled", getState());
WITHOUT_CLASSIFICATION	//      ->set source reference in composermodel // when replying this is the original sender's message // you selected and replied to
WITHOUT_CLASSIFICATION	// the following lines add cut/copy/paste/undo/redo/selectall // actions support using the Columba action objects. // // This means that we only have a single instance of these // specific actions, which is shared by all menuitems and // toolbar buttons.
WITHOUT_CLASSIFICATION	// 2 columns // rows are added dynamically (no need to define them // here)
WITHOUT_CLASSIFICATION	// Must go backwards or else the filters will swap places with each // other.
WITHOUT_CLASSIFICATION	// comments are not // displayed // correctly in composer
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// execute filter
WITHOUT_CLASSIFICATION	// this action is disabled when the text/plain editor is used // -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// user may have changed hostname. use dialog settings instead of // stored settings
WITHOUT_CLASSIFICATION	// super.getTableCellRendererComponent( table, value, isSelected, // hasFocus, row, column );
WITHOUT_CLASSIFICATION	//bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) ); //bottom.add( Box.createHorizontalStrut());
WITHOUT_CLASSIFICATION	// also register interest in tree seleciton events // for updating the title
WITHOUT_CLASSIFICATION	// Register as listener to the SelectionManger // to check for selection changes
WITHOUT_CLASSIFICATION	// if we don't use this here - actions like reply would only work // on the // the encrypted message
WITHOUT_CLASSIFICATION	// no charset specified -> automatic mode // -> try to determine charset based on content parameter
WITHOUT_CLASSIFICATION	// create attachment component with text, icon // tooltip, context menu and double-click action
WITHOUT_CLASSIFICATION	// changing the selection to the specified row // changeSelection(row, 0, true, false);
WITHOUT_CLASSIFICATION	// at any time i get here uids of length 0. If this is so we should // return and do nothing
WITHOUT_CLASSIFICATION	// *20040510, karlpeder* columns may be null (first time we // visit a folder!?)
WITHOUT_CLASSIFICATION	// Folder trash = (AbstractMessageFolder) // MainInterface.treeModel.getTrashFolder(); // trash folder has uid==105
WITHOUT_CLASSIFICATION	//        putValue(LARGE_ICON, ImageLoader //                .getImageIcon("mark-as-important-16.png"));
WITHOUT_CLASSIFICATION	// table is empty // -> just display empty table
WITHOUT_CLASSIFICATION	// @author: fdietz never request focus //view.requestFocus();
WITHOUT_CLASSIFICATION	// folder.showFilterDialog(((AbstractMailFrameController) // getFrameMediator()));
WITHOUT_CLASSIFICATION	// IMAP folder specific // - Is this folder selectable (does it contain messages?)
WITHOUT_CLASSIFICATION	// minimal unchecked time is 30 Seconds // in ms
WITHOUT_CLASSIFICATION	// create config-folder //		File file = new File("test_config"); //		file.mkdir(); // //		new Config(file); // //		Logging.DEBUG = true; //		Logging.createDefaultHandler(); // //		//		 init mail component //		new MailMain().init(); // //		new AddressbookMain().init(); // //		// now load all available plugins //		PluginManager.getInstance().initExternalPlugins();
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// create stream from string
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// add stream to folder
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	// close streams
WITHOUT_CLASSIFICATION	/*		((AbstractFolder)MailInterface.treeModel.getRoot()).add(cyrusRoot);		((AbstractFolder) MailInterface.treeModel.getRoot())        .getConfiguration().getRoot().addElement(        		cyrusRoot.getConfiguration().getRoot());		MailInterface.treeModel.nodeStructureChanged(cyrusRoot.getParent());		*/
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// create copy command
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// execute command -> use mock object class as worker which does // nothing
WITHOUT_CLASSIFICATION	// setPreferredSize(new Dimension(250, 300));
WITHOUT_CLASSIFICATION	/*         * buffer.append(getShortClassName(record.getSourceClassName()));         * buffer.append("."); buffer.append(record.getSourceMethodName());         * buffer.append(" - ");         */
WITHOUT_CLASSIFICATION	// // Table model stuff //
WITHOUT_CLASSIFICATION	// // LIST model stuff //
WITHOUT_CLASSIFICATION	// -> import message in Columba
WITHOUT_CLASSIFICATION	// counts how many messages has been // processed // date fetched from "From ???@??? ..."
WITHOUT_CLASSIFICATION	// If a msg has been read, import it into Columba
WITHOUT_CLASSIFICATION	// fetch date from // "From ???@??? // ..."
WITHOUT_CLASSIFICATION	/*					 * For multipart Content-Types we need to take action (if					 * boundary is nonexistent): Eudora stores content type =					 * multipart even though the message is not really multipart -					 * e.g. because an attachment already has has been decoded					 * by Eudora)					 */
WITHOUT_CLASSIFICATION	// attachments found
WITHOUT_CLASSIFICATION	// store header after processing
WITHOUT_CLASSIFICATION	/*		 * If no Date header was found, it is necessary to contruct a new one		 * (this is the case for outgoing messages from Eudora)		 */
WITHOUT_CLASSIFICATION	/*			 * It is HTML, try to find out which charset from meta tag: NB: The			 * seach for charset below is very simple. It assumes that the meta			 * tag to find is on ITS OWN LINE, i.e. " <meta" can be found at the			 * beginning of the line, and all the content of the tag is found on			 * the same line! Could be better, but this is first shot...			 */
WITHOUT_CLASSIFICATION	// body untouched
WITHOUT_CLASSIFICATION	// insert header for attachment list
WITHOUT_CLASSIFICATION	// system beep
WITHOUT_CLASSIFICATION	// for time consuming tasks you need to create // your own Command
WITHOUT_CLASSIFICATION	// border
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //nameLabel.setFont(boldFont);
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //enableLabel.setFont(boldFont);
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	/*	 * @see TestCase#setUp()	 */
WITHOUT_CLASSIFICATION	/*	 * @see TestCase#setUp()	 */
WITHOUT_CLASSIFICATION	/*	 * @see TestCase#tearDown()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#remove(int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.store.api.IStoreListener#itemAdded(org.columba.calendar.store.api.StoreEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.store.api.IStoreListener#itemRemoved(org.columba.calendar.store.api.StoreEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.store.api.IStoreListener#itemChanged(org.columba.calendar.store.api.StoreEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.ui.calendar.api.IActivitySelectionChangedListener#selectionChanged(org.columba.calendar.ui.calendar.api.ActivitySelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#getSelectedActivity()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#getView()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#setViewMode(int)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#recreateFilterRows()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see com.miginfocom.ashape.interaction.InteractionListener#interactionOccured(com.miginfocom.ashape.interaction.InteractionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see com.miginfocom.calendar.datearea.ActivityMoveListener#activityMoved(com.miginfocom.calendar.datearea.ActivityMoveEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#viewToday()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#viewPrevious()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.calendar.ui.calendar.api.ICalendarView#setVisibleDateRange(org.columba.calendar.model.api.IDateRange)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see com.miginfocom.calendar.datearea.ActivityDragResizeListener#activityDragResized(com.miginfocom.calendar.datearea.ActivityDragResizeEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.ui.list.api.ICalendarListView#getView()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.calendar.ui.list.api.ICalendarListView#getSelected()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.facade.IHeaderItem#setId(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.facade.IGroupItem#getContacts()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.facade.IGroupItem#setContacts(java.util.List)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.facade.IGroupItem#addContact(org.columba.addressbook.facade.IContactItem)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.facade.IGroupItem#removeContact(org.columba.addressbook.facade.IContactItem)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.facade.IGroupItem#getContactCount()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isCopyActionEnabled() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isPasteActionEnabled() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isDeleteActionEnabled() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isSelectAllActionEnabled() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isUndoActionEnabled() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#isRedoActionEnabled() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#cut() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#copy() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#paste() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#delete() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#undo() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#redo() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#selectAll() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.frame.focus.FocusOwner#getComponent() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.gui.table.model.TableModelDecorator#getRowCount()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#getFilterActionList()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#getFilterRule()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#getEnabled()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#setEnabled(boolean)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#setName(java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#getName()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilter#clone()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.model.IEmailModel#getAddress()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.addressbook.model.IEmailModel#getType()	 */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.core.taskmanager.ITaskManager#removeTaskManagerListener(org.columba.core.taskmanager.TaskManagerListener)         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.command.ICommand#updateGUI()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.command.ICommand#execute(org.columba.api.command.IWorkerStatusController)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.command.ICommand#getReference()	 */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.api.command.IWorkerStatusController#removeWorkerStatusChangeListener(org.columba.core.gui.statusbar.event.WorkerStatusChangeListener)         */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.api.command.IWorkerStatusController#addWorkerStatusChangeListener(org.columba.core.gui.statusbar.event.WorkerStatusChangeListener)         */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see org.columba.api.command.IWorkerStatusController#getTimeStamp()         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterAction#getUid()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterAction#setUid(java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterAction#getAction()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterAction#setAction(java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#addEmptyCriteria()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#add(org.columba.core.filter.FilterCriteria)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#remove(int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#removeAll()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#removeLast()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#get(int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#count()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#getCondition()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#setCondition(java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#setCondition(int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterRule#getConditionInt()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#add(org.columba.core.filter.Filter)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#addAll(org.columba.core.filter.FilterList)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#remove(org.columba.core.filter.Filter)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#insert(org.columba.core.filter.Filter, int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#moveUp(org.columba.core.filter.Filter)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#moveDown(org.columba.core.filter.Filter)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#move(org.columba.core.filter.Filter, int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#move(int, int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#indexOf(org.columba.core.filter.Filter)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#count()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterList#get(int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterCriteria#setCriteria(int)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.columba.core.filter.IFilterCriteria#getCriteria()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.filter.IFilterActionList#get(int)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.filter.IFilterActionList#remove(int)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.filter.IFilterActionList#addEmptyAction()     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList,	 *      java.lang.Object, int, boolean, boolean)	 */
WITHOUT_CLASSIFICATION	// notify all listeners // @see org.columba.core.gui.util.FontProperties // @see org.columba.mail.gui.message.TextViewer // @see org.columba.mail.gui.composer.text.TextEditorController
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see net.javaprog.ui.wizard.AbstractStep#createComponent()         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see net.javaprog.ui.wizard.Step#prepareRendering() */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see net.javaprog.ui.wizard.AbstractStep#createComponent() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see net.javaprog.ui.wizard.Step#prepareRendering() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see net.javaprog.ui.wizard.AbstractStep#createComponent() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see net.javaprog.ui.wizard.Step#prepareRendering() */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.frame.IFrameManager#getActiveFrameMediator()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.frame.IFrameManager#openView(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.frame.IFrameManager#switchView(org.columba.core.gui.frame.IContainer,	 *      java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IFrameMediator#getContentPane()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IFrameMediator#loadPositions()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IFrameMediator#savePositions()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IFrameMediator#isInitialized()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#registerDockable(org.columba.api.gui.frame.IDockable)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#registerDockable(java.lang.String, java.lang.String, javax.swing.JComponent, javax.swing.JPopupMenu)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#getDockableIterator()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#dock(org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDock.REGION, float)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#dock(org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDock.REGION)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#dock(org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDock.REGION, float)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.api.gui.frame.IDock#setSplitProportion(org.columba.api.gui.frame.IDockable, float)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see junit.framework.TestCase#setUp() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*Overwrite the method to maintain line breaks when copying 		 * messages form the MessageViewer.		 * @author aoki-y		 * @see javax.swing.text.html.HTMLDocument#getReader(int)		 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see javax.swing.table.TableCellRenderer#getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.table.TableCellRenderer#getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int) */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int) */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.table.TableModel#isCellEditable(int, int) */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.table.TableCellRenderer#getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int) */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.profiles.IProfileManager#getProfile(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.profiles.IProfileManager#getProfiles()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.profiles.IProfileManager#getCurrentProfile()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList,	 *      java.lang.Object, int, boolean, boolean)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.plugin.AbstractConfigPlugin#createPanel()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.plugin.AbstractConfigPlugin#updateComponents(boolean)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see java.net.URLClassLoader#findResource(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.print.cParagraph#print(java.awt.Graphics2D)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.search.api.ISearchResult#getTitle()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.search.api.ISearchResult#getDescription()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.search.api.ISearchResult#getLocation()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.shutdown.IShutdownManager#register(java.lang.Runnable)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.shutdown.IShutdownManager#shutdown(int)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.gui.table.model.TableModelModifier#remove(java.lang.Object[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.gui.table.model.TableModelModifier#set(org.columba.mail.message.HeaderList)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.message.HeaderInterface#count()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.message.HeaderInterface#getFlags()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.message.HeaderInterface#set(java.lang.String, java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#getHeader()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#getBodyPart()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#getMimePart(int)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#getMimePartCount()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#getSource()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.message.Message#setSource(org.columba.ristretto.message.io.Source)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.mail.folder.FolderTreeNode#getName() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.mail.folder.RootFolder#getTrashFolder() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.mail.folder.RootFolder#getInbox() */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.folder.AbstractMessageFolder#loadMessageFolderInfo()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#add(org.columba.mail.message.IColumbaHeader, java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#clear()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#containsValue(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#count()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#get(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#getUids()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#keySet()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#remove(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.PersistantHeaderList#persist()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#headerIterator()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#keyIterator()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.folder.headercache.HeaderList#update(java.lang.Object, org.columba.mail.message.IColumbaHeader)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.message.ICloseableIterator#close()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see java.util.Iterator#hasNext()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see java.util.Iterator#next()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see java.util.Iterator#remove()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.FolderTreeNode#addSubfolder(org.columba.mail.folder.FolderTreeNode)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getHeaderFields(java.lang.Object,	 *      java.lang.String[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getMessageSourceStream(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getMimePartSourceStream(java.lang.Object,	 *      java.lang.Integer[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.Folder#isInboxFolder()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.Folder#isTrashFolder()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream,	 *      org.columba.ristretto.message.Attributes)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.AbstractMessageFolder#save()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.FolderTreeNode#addSubfolder(org.columba.mail.folder.FolderTreeNode)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.Folder#save()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.RootFolder#getTrashFolder()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.RootFolder#getInbox()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.mail.folder.IDataStorage#getMessages()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.mail.folder.IDataStorage#getFileSource(java.lang.Object)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.mail.folder.IDataStorage#saveInputStream(java.lang.Object, java.io.InputStream)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.columba.mail.folder.IMailbox#getAttribute(java.lang.Object,     *      java.lang.String)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.columba.mail.folder.IMailbox#getFlags(java.lang.Object)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.columba.mail.folder.IMailbox#getHeaderFields(java.lang.Object,     *      java.lang.String[])     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.columba.mail.folder.IMailbox#getMessageSourceStream(java.lang.Object)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.columba.mail.folder.IMailbox#getMimePartBodyStream(java.lang.Object,     *      java.lang.Integer[])     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.columba.mail.folder.IMailbox#getMimePartSourceStream(java.lang.Object,     *      java.lang.Integer[])     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream, org.columba.ristretto.message.Attributes)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.Folder#getUids(org.columba.api.command.IWorkerStatusController)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getAttribute(java.lang.Object,	 *      java.lang.String)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getFlags(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getHeaderFields(java.lang.Object,	 *      java.lang.String[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getMessageSourceStream(java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getMimePartBodyStream(java.lang.Object,	 *      java.lang.Integer[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#getMimePartSourceStream(java.lang.Object,	 *      java.lang.Integer[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream,	 *      org.columba.ristretto.message.Attributes)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailFolder#getRootFolder()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.event.IFolderListener#messageAdded(org.columba.mail.folder.event.IFolderEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.event.IFolderListener#messageRemoved(org.columba.mail.folder.event.IFolderEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.event.IFolderListener#messageFlagChanged(org.columba.mail.folder.event.IFolderEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.event.IFolderListener#folderPropertyChanged(org.columba.mail.folder.event.IFolderEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.event.IFolderListener#folderAdded(org.columba.mail.folder.event.IFolderEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.event.IFolderListener#folderRemoved(org.columba.mail.folder.event.IFolderEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.folder.IMailFolder#removeFolder()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.folderoptions.AbstractFolderOptionsPlugin#restoreUISettings()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.mail.gui.composer.AbstractEditorController#setViewText(java.lang.String)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.io.InputStream#read()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.io.InputStream#read(byte[], int, int)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList,	 *      java.lang.Object, int, boolean, boolean)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList,	 *      java.lang.Object, int, boolean, boolean)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#updateGUI()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#updateGUI()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.api.command.Command#updateGUI()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent) */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.selection.ISelectionListener#selectionChanged(org.columba.core.gui.selection.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.util.Observer#update(java.util.Observable, java.lang.Object)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.mail.gui.config.general.MailOptionsDialog	 *	 * @see java.util.Observer#update(java.util.Observable, java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.selection.SelectionHandler#getSelection()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.selection.SelectionHandler#setSelection(org.columba.api.command.DefaultCommandReference[])	 */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)   */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.selection.ISelectionListener#selectionChanged(org.columba.core.gui.selection.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.util.Observer#update(java.util.Observable, java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.selection.ISelectionListener#selectionChanged(org.columba.core.gui.selection.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.gui.table.model.TableModelModifier#modify(java.lang.Object[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.gui.table.model.TableModelModifier#remove(java.lang.Object[])	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.gui.table.model.TableModelModifier#set(org.columba.mail.message.HeaderList)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.util.SelectionHandler#getSelection()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#logout()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#checkSupportedAuthenticationMethods()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#isSupported(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#setFirstLoginAction(org.columba.mail.imap.IFirstLoginAction)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#ensureSelectedState(org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getStatus(org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#list(java.lang.String, java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#append(java.io.InputStream, org.columba.ristretto.imap.IMAPFlags, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#append(java.io.InputStream, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#createMailbox(java.lang.String, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#deleteFolder(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#renameFolder(java.lang.String, java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#subscribeFolder(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#unsubscribeFolder(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#expunge(org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#copy(org.columba.mail.folder.imap.IMAPFolder, java.lang.Object[], org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchUid(org.columba.ristretto.imap.SequenceSet, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchUids(org.columba.ristretto.imap.SequenceSet, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchFlagsListStartFrom(int, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchFlagsListStartFrom2(int, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchNamespaces()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchHeaderList(org.columba.mail.message.IHeaderList, java.util.List, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getMimeTree(java.lang.Object, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getMimePartBodyStream(java.lang.Object, java.lang.Integer[], org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getHeaders(java.lang.Object, java.lang.String[], org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getAllHeaders(java.lang.Object, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getMimePartSourceStream(java.lang.Object, java.lang.Integer[], org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getMessageSourceStream(java.lang.Object, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#markMessage(java.lang.Object[], int, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#setFlags(java.lang.Object[], org.columba.ristretto.imap.IMAPFlags, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#search(java.lang.Object[], org.columba.core.filter.FilterRule, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getIndex(java.lang.Integer, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#search(org.columba.ristretto.imap.SearchKey, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#search(org.columba.core.filter.FilterRule, org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getMessageFolderInfo(org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#fetchSubscribedFolders()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#isSelected(org.columba.mail.folder.imap.IMAPFolder)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#alertMessage(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#connectionClosed(java.lang.String, java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#existsChanged(java.lang.String, int)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#flagsChanged(java.lang.String, org.columba.ristretto.imap.IMAPFlags)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#parseError(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#recentChanged(java.lang.String, int)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#warningMessage(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#getItem()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#update(java.util.Observable, java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#setExistsChangedAction(org.columba.mail.imap.IExistsChangedAction)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#setUpdateFlagAction(org.columba.mail.imap.IUpdateFlagAction)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.mail.imap.IImapServer#setObservable(org.columba.api.command.IStatusObservable)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see java.util.Iterator#hasNext() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see java.util.Iterator#next() */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see java.util.Iterator#remove() */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.message.HeaderInterface#count()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.message.HeaderInterface#getFlags()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.message.HeaderInterface#set(java.lang.String,	 *      java.lang.Object)	 */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#getHeader()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#getBodyPart()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#getMimePart(int)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#getMimePartCount()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#getSource()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.columba.ristretto.message.Message#setSource(org.columba.ristretto.message.io.Source)     */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.ristretto.composer.MimePartRenderer#render(org.columba.ristretto.message.StreamableMimePart)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc) * @see org.columba.ristretto.composer.MimePartRenderer#render(org.columba.ristretto.message.StreamableMimePart) */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#getJabberId()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#getPresenceMode()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#isSignedOn()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#getStatusMessage()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#getChatMediator()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#setChatMediator(org.columba.chat.api.IChatMediator)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#setPresenceMode(org.jivesoftware.smack.packet.Presence.Mode)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#setSignedOn(boolean)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#setStatusMessage(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.jabber.IBuddyStatus#getName()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.ui.conversation.IConversationController#addChat(java.lang.String)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.ui.conversation.IConversationController#getSelected()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.ui.conversation.IConversationController#get(int)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.chat.ui.conversation.IConversationController#closeSelected()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.chat.ui.roaster.IRoasterTree#getSelected()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 *	 * @see org.columba.chat.ui.roaster.IRoasterTree#updateBuddyPresence(org.columba.chat.api.IBuddyStatus)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.gui.plugin.AbstractConfigPlugin#updateComponents(boolean)	 */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)	 * @see org.columba.core.gui.plugin.AbstractConfigPlugin#createPanel()	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)	 */
WITHOUT_CLASSIFICATION	/*	 * (non-Javadoc)	 * 	 * @see org.columba.mail.folder.mailboximport.DefaultMailboxImporter#getDescription()	 */
WITHOUT_CLASSIFICATION	// size // -> @see org.columba.mail.folder.cache.CachedHeaderfields for a // -> complete // -> list of possible attributes
WITHOUT_CLASSIFICATION	// notify listeners // @see org.columba.mail.gui.table.action.ForwardAction
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Process the listeners last to first, notifying // those that are interested in this event
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// 
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	//$JUnit-END$
WITHOUT_CLASSIFICATION	// retrieve event from store
WITHOUT_CLASSIFICATION	// create new event with new UUID
WITHOUT_CLASSIFICATION	//v.getEndDate().getParameters().add(Value.DATE);
WITHOUT_CLASSIFICATION	// FIXME r.setPos();
WITHOUT_CLASSIFICATION	// only import VEVENT and VTODO for now
WITHOUT_CLASSIFICATION	// ensure tzid matches date-time timezone.. // Parameter tzId = // dtStart1.getParameters().getParameter( // Parameter.TZID);
WITHOUT_CLASSIFICATION	// ensure tzid matches date-time timezone.. // Parameter tzId = dtEnd1.getParameters().getParameter( // Parameter.TZID);
WITHOUT_CLASSIFICATION	// ensure tzid matches date-time timezone.. // Parameter tzId = // dtStamp1.getParameters().getParameter( // Parameter.TZID);
WITHOUT_CLASSIFICATION	// RRULE:FREQ=YEARLY;COUNT=5;INTERVAL=1 // RRULE:FREQ=WEEKLY;UNTIL=20060725T215959;INTERVAL=1;BYDAY=TU // RRULE:FREQ=YEARLY;INTERVAL=1
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// wrong xml-format
WITHOUT_CLASSIFICATION	// fall-back to global resource loader
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// Process the events
WITHOUT_CLASSIFICATION	// 2 columns
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-1$//$NON-NLS-2$
WITHOUT_CLASSIFICATION	// 3 columns //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// create a form builder
WITHOUT_CLASSIFICATION	// check if a single entry is selected
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// select new item
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	// show context menu
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //totalLabel.setFont(boldFont); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //unreadLabel.setFont(boldFont); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //recentLabel.setFont(boldFont); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //sizeLabel.setFont(boldFont); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //locationLabel.setFont(boldFont); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// second row showing the minutes
WITHOUT_CLASSIFICATION	// dark gray line at 12 and 13
WITHOUT_CLASSIFICATION	// light gray line every day
WITHOUT_CLASSIFICATION	// light gray line every day
WITHOUT_CLASSIFICATION	// vertical light gray column separator line
WITHOUT_CLASSIFICATION	// defaultShapeFactory.setShape(AShapeCreator.createTraslucentShapeHorizontal(), // null);
WITHOUT_CLASSIFICATION	// else set it to 23:59:59.999
WITHOUT_CLASSIFICATION	// Drag, resize interactions
WITHOUT_CLASSIFICATION	// Drag, resize interactions
WITHOUT_CLASSIFICATION	// Drag, resize interactions
WITHOUT_CLASSIFICATION	// Color bgPaint = new Color(255, 150, 150);
WITHOUT_CLASSIFICATION	// Edges of the poly shape
WITHOUT_CLASSIFICATION	// END1 because the draw should be // correct
WITHOUT_CLASSIFICATION	// Shadow
WITHOUT_CLASSIFICATION	// AShape textShape = new TextAShape("text", "$" + GridRow.NAME + "$", // textRect, TextAShape.TYPE_SINGE_LINE, font, fgColor, // AtFraction.CENTER, AtStart.START0, Boolean.FALSE);
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// roll correctly over years
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// associate with JavaHelp
WITHOUT_CLASSIFICATION	// check if the user entered valid data
WITHOUT_CLASSIFICATION	// it has to be set
WITHOUT_CLASSIFICATION	// disable max occurrences
WITHOUT_CLASSIFICATION	// set background of scrollpane, in case the list is smaller than the // dockable
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//		TagList tagList = new CalendarTagList(this); //		JScrollPane tagListScrollPane = new JScrollPane(tagList); //		tagListScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER); //		tagListScrollPane //				.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	// if mouse button was pressed twice times
WITHOUT_CLASSIFICATION	// if mouse button was pressed twice times
WITHOUT_CLASSIFICATION	// if mouse button was pressed twice times
WITHOUT_CLASSIFICATION	//checkbox.setBorder(BorderFactory.createEmptyBorder(2,4,2,4));
WITHOUT_CLASSIFICATION	// public CalendarItem getSelected() { // int row = getSelectedRow(); // // return ((CheckableItemListTableModel) getModel()).getElement(row); // }
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// return if selection change is in flux
WITHOUT_CLASSIFICATION	// example: // "columba://org.columba.contact/<folder-id>/<contact-id>"
WITHOUT_CLASSIFICATION	// create URI representing the contact
WITHOUT_CLASSIFICATION	// check three entries
WITHOUT_CLASSIFICATION	// check if it contains comma character
WITHOUT_CLASSIFICATION	// modify card properties in folder
WITHOUT_CLASSIFICATION	/*		 * XmlElement filter = new XmlElement("filter");		 * defaultElement.addElement(filter);		 */
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// tooltip text
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// get selected folder
WITHOUT_CLASSIFICATION	// register interest on tree selection changes
WITHOUT_CLASSIFICATION	// add to folder
WITHOUT_CLASSIFICATION	//		 register interest on tree selection changes
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// get selected contact/group card
WITHOUT_CLASSIFICATION	// get selected contact/group card
WITHOUT_CLASSIFICATION	// tree has focus
WITHOUT_CLASSIFICATION	// contacts item
WITHOUT_CLASSIFICATION	// initialize completer
WITHOUT_CLASSIFICATION	// ======== this ========
WITHOUT_CLASSIFICATION	// leave dialog empty if no source contact model specified
WITHOUT_CLASSIFICATION	// model -> view
WITHOUT_CLASSIFICATION	// fill formatted textfield
WITHOUT_CLASSIFICATION	// ---- fullnameButton ----
WITHOUT_CLASSIFICATION	// ---- emailTextField2 ----
WITHOUT_CLASSIFICATION	// ---- telephoneTextField2 ----
WITHOUT_CLASSIFICATION	// ---- imTextField4 ----
WITHOUT_CLASSIFICATION	// ---- homepageButton ----
WITHOUT_CLASSIFICATION	// ---- calendarLabel ----
WITHOUT_CLASSIFICATION	// ======== panel8 ========
WITHOUT_CLASSIFICATION	// ---- titleTextField ----
WITHOUT_CLASSIFICATION	// contains "," comma character
WITHOUT_CLASSIFICATION	// default
WITHOUT_CLASSIFICATION	// concrete implementation of actions
WITHOUT_CLASSIFICATION	// table should be updated when tree selection changes
WITHOUT_CLASSIFICATION	/*			 * HeaderItem[] items = new HeaderItem[selection1.length]; items =			 * selection1;			 * HeaderItemDNDManager.getInstance().setHeaderItemList(items);			 */
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//setCellRenderer(new AddressbookListRenderer());
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Plain text components don't fire these events
DESIGN	//TODO (@author fdietz): i18n
DESIGN	// TODO (@author fdietz): i18n
DESIGN	// // @author: fdietz // using shutdown-manager is wrong here, because this // automatically also calls the FrameManager, which  // also starts a second shutdown thread // -> This leads into two parallel shutdown thread which // -> is why sometimes config-files, etc. get messed up //        
DESIGN	// TODO @author fdietz: no paging used currently // show only first 5 results
DESIGN	// TODO: use UndoableEditEvent to make this really work
DESIGN	// The JavaHelp can't be added to a BorderLayout because it // isnt' a component. For this demo we'll use the embeded method // since we don't want a Frame to be created.
DESIGN	// @author: fdietz // // PROBLEM: Extensions don't run using Java Webstart (JWS) //  // Even though we assign "all-permission" in our columba.jnlp file, this // only applies // to the initial Java Webstart classloader. But, we create our own // classloaders for // loading extensions. These classloaders don't have the same permission // settings anymore.
DESIGN	//  // Note: We intentionally don't remember internal plugins, because // we don't want them to appear in the plugin manager currently. //  // TODO: improve plugin manager dialog to support internal plugins // which can't be removed, etc.
DESIGN	// WORKAROUND: //  // System.setSecurityManager(null); // // This call effectly disables the sandbox mode and seems to work fine. // // Below I use another way. The policy for all classloaders is set to // "all-permissions". // Don't really know the difference though.
DESIGN	// // @author: fdietz // WORKAROUND: // we simply append URLs to the existing global class loader // and use the same as parent //  // Note, that we create a new URL classloader for every class // we instanciate. We might want to support hot-swapping // of changed classes later.
DESIGN	// TODO @author hubms have this flags, until the speed of the entitymanager // is improved
DESIGN	// @author: fdietz // // The following line is not working - just don't know why // Main.mainClassLoader.addURLs((URL[]) urlList.toArray(new URL[0])); // // WORKAROUND: // // Modify the system class loader instead - horrible! But it works!
DESIGN	// TODO: Should we take some action to ensure signature is valid // html?
DESIGN	/**	 * this regular expression should cover anything from a@a.pt or a@a.com to	 * a@a.info. Permits usage of invalid top domains though.	 * <p>	 * [bug] fdietz: added "." and "-" as regular characters	 * (example:mail@toplevel.mail.de)	 * <p>	 * TODO: see if we can replace the matching code with Ristretto stuff	 *	 */
DESIGN	// TODO (@author fdietz): All this code for creating a new // IMAPRootFolder should // be moved to a FolderFactory // -> this way "path" would be handled in the factory, too // parent directory for mail folders // for example: ".columba/mail/" // String path = // MailConfig.getInstance().getConfigDirectory().getPath();
DESIGN	// TODO (@author waffel): encrypt AND sign dosN#t work. The message is // always only // encrypted. We need a function that knows, here // is an encrypted AND signed Message. Thus first encyrpt and then // verifySign the message // if this message is signed/encrypted we have to use // GnuPG to extract the decrypted bodypart // - multipart/encrypted // - multipart/signed
DESIGN	// hack: if start and end time is at 00:00:00:000 it is // an all day event
DESIGN	// hack: if start and end time is at 00:00:00:000 it is // an all day event
DESIGN	// TODO categoryEnumeration
DESIGN	// FIXME calendar?
DESIGN	// FIXME is this correct for
DESIGN	// TODO: replace view with more detailed info view
DESIGN	// TODO: fix layout to look good, even if there's not enough information provided
DESIGN	// TODO: real IM status here
DESIGN	// TODO: fix updateActions //enableActions(getCurrentOwner());
DESIGN	// FIXME: ugly cast to ContactModel
DESIGN	// TODO: throw IllegalArgumentException in case a variable == null
DESIGN	// TODO: throw IllegalArgumentException in case a variable == null
DESIGN	// FIXME -- This will most likely not work. //          You want the element removed if the contents are the same //          Not just if the element reference is the same.
DESIGN	// wait, if there is an active transaction // TODO @author hubms retrycount!
DESIGN	// manually rewrite the connection url, because // if there is no rewrite the database files are created // in the starting directory, we don't want that!
DESIGN	//TODO externalize string //$NON-NLS-1$
DESIGN	/** * A Command uses the information provided from {@link DefaultCommandReference} * to execute itself. * <p> * TODO: remove IFrameMediator dependency *  * @author Timo Stich <tstich@users.sourceforge.net> */
DESIGN	// TODO: @author hubms check what is neccessary // remove old filters // searchFolder.getFilter().getFilterRule().removeAll(); // add filter criteria // searchFolder.getFilter().getFilterRule().add(c);
DESIGN	// TODO: multiplicity checks
DESIGN	/* TODO must get polling interval from config file */
DESIGN	//TODO (@author fdietz): associate help with button and root pane
DESIGN	// TODO (@author fdietz): until we can get all the settings update // immediately // we just open a message box, telling the user to restart
DESIGN	//TODO (@author fdietz): i18n
DESIGN	// TODO (@author fdietz): i18n
DESIGN	// TODO (@author fdietz): i18n
DESIGN	// FIXME: should we align the menu to the left instead? // menu.show(b, b.getWidth() - menu.getWidth(), b.getHeight());
DESIGN	// TODO (@author fdietz): i18n
DESIGN	// TODO (@author fdietz): i18n
DESIGN	// TODO (@author fdietz): i18n
DESIGN	// TODO (@author fdietz): i18n
DESIGN	// FIXME remove method // toolbarPane.add(c);
DESIGN	// @author fdietz: hackish way of creating a search toolbar //JToolBar searchToolBar = new ExtendableToolBar();
DESIGN	/* TODO should come up with a better name for the menu item */
DESIGN	// @author: tstich // Its better to call the Shutdownmanager // since the above is called automatically from it. // ShutdownManager is modified to allow one shutdown // call only, so we never should have multi-shutdown // problems again.
DESIGN	/*TODO before inserting, find out if there's already a menu item     * with the same action command. if so, replace it, otherwise insert new     */
DESIGN	// turn of focus stealing (workaround should be removed in the // future!)
DESIGN	// TODO (@author fdietz): add import feature
DESIGN	// TODO (@author fdietz): add export feature
DESIGN	/*TODO move resources to a resource file */
DESIGN	// TODO @author fdietz: no paging used currently // show only first 5 results
DESIGN	// TODO @author fdietz: no paging used currently // show only first 5 results
DESIGN	// TODO @author fdietz: no paging used currently // show only first 5 results
DESIGN	// TODO (@author fdietz): i18n
DESIGN	// TODO (@author fdietz): i18n
DESIGN	// TODO (@author hubms): implement custom menuitem renderer
DESIGN	// real stupid recreation of whole menu model
DESIGN	//TODO (@author fdietz): i18n
DESIGN	// real stupid recreation of whole list model // -> replace with id-based listmodel update
DESIGN	// TODO: use UndoableEditEvent to make this really work
DESIGN	// Since Columba is doing its own logging handlers, we should not // use handlers in the parent logger.
DESIGN	// TODO Ristretto should handle the logging of streams in another // way.
DESIGN	// what to do here? we could start a new server...
DESIGN	// cleanup: remove port number file
DESIGN	// something is very wrong here
DESIGN	// kids - don't do this at home
DESIGN	// For the Mac ScreenBarMenus to work, this must be declared before // *ANY* AWT / Swing gets initialised. Do *NOT* move it to plugin init // location because that is too late...
DESIGN	// TODO: There's probably a better way to do this hack...
DESIGN	/*         * TODO (@author karlpeder): Guess that right thing to do is to get height as getDrawingSize().getHeight(),         * since this should take top- and bottom margin of this print         * object into account. But the height seems not to be set         * correctly in computePositionAndSize() (*20030604, karlpeder*)         */
DESIGN	//TODO: Should this be renamed to cLoc or something more appropriate than clock?
DESIGN	//TODO: Should this be renamed to cLoc or something more appropriate than clock?
DESIGN	/*TODO stop polling thread?! */
DESIGN	/* XXX should this be fired by a different thread? */
DESIGN	/* TODO create exception for this */
DESIGN	/*XXX this is not thread-safe, though luck. It isn't supposed to be. */
DESIGN	/**	 * Command executes the search.	 * <p>	 * In case new result results arrive, it ensures that all interested	 * listeners are notified from inside the EDT.	 * <p>	 * FIXME: fdietz: No locking of folders currently implemented! TODO: fdietz:	 * create new Command for every provider to introduce real "parallel" search	 * 	 * @author fdietz	 */
DESIGN	// TODO (@author javaprog): better exception handling
DESIGN	// FIXME (@author karlpeder): Is 3.2 the proper version of html to refer to?
DESIGN	// TODO (@author karlpeder): If existing meta tags are to be kept, code changes are // necessary
DESIGN	// TODO (@author fdietz): move this to AbstractMessageFolder constructor
DESIGN	// TODO (@author fdietz): move this to AbstractMessageFolder constructor // create filterlist datastructure
DESIGN	// TODO @author hubms: copied from frederiks search builder
DESIGN	/**     * Transforms email-addresses into HTML just as     * substituteEmailAddress(String), but tries to ignore email-addresses,     * which are already links, if the ignore links flag is set.     * <br>     * This extended functionality is necessary when parsing a text which     * is already (partly) html.     * <br>     * FIXME: Can this be done smarter, i.e. directly with reg. expr. without manual parsing??     *     * @param         s                                input text     * @param        ignoreLinks                if true link tags are ignored. This gives a     *                                                         wrong result if some e-mail adresses are     *                                                         already links (but uses reg. expr. directly,     *                                                         and is therefore faster)     * @return        text with email-adresses transformed to links     */
DESIGN	//TODO:add a configuration of the cache size
DESIGN	//TODO (@author fdietz): i18n
DESIGN	//TODO (@author fdietz): i18n
DESIGN	//TODO (@author fdietz): i18n
DESIGN	//TODO (@author fdietz): i18n
DESIGN	//TODO (@author fdietz): i18n
DESIGN	// @TODO dont use deprecated method
DESIGN	// @TODO dont use deprecated method
DESIGN	// FIXME (@author fdietz): Do we need this implementation in a TempFolder? // If not, just put an empty method here, just like in VirtualFolder.
DESIGN	// TODO (@author fdietz): fix account info panel check
DESIGN	//TODO Let the AttachmentViewer get the focus so that this works
DESIGN	//TODO: Open in message frame //TODO: Handle also message attachments from OpenInComposer action
DESIGN	//      TODO: reactivate when feature is supported
DESIGN	/**     * Transforms urls into HTML just as substituteURL(String),     * but tries to ignore urls, which are already links, if the ignore     * links flag is set.     * <br>     * This extended functionality is necessary when parsing a text which     * is already (partly) html.     * <br>     * FIXME: Can this be done smarter, i.e. directly with reg. expr. without manual parsing??     *     * @param         s                                input text     * @param        ignoreLinks                if true link tags are ignored. This gives a     *                                                         wrong result if some urls are already links     *                                                         (but uses reg. expr. directly, and is     *                                                         therefore faster)     * @return        text with urls     */
DESIGN	// its maybe better to leave this option out of the dialog // -> make it configurable in the xml file anyway
DESIGN	// If this folder has children add them // TODO: In the future we should try to fetch additional children on demand // when the tree of the dialog is opened
DESIGN	// TODO (@author fdietz): should be removed if we only use // Streams!
DESIGN	// TODO (@author fdietz): implement custom menuitem renderer
DESIGN	// TODO (@author fdietz): add central place, which keeps a list of all possible //       colors, and provides a custom color configuration possibility
DESIGN	// TODO @author fdietz: ensure that we don't fetch individual // headers // to reduce client/server roundtrips
DESIGN	// TODO @author hubms: bad: if there is a icon it is tagged or // not
DESIGN	//TODO (@author tstich): do something
DESIGN	// TODO (@author fdietz): Add more special entities - e.g. accenture chars such as ?
DESIGN	// TODO (@author karlpeder): Extend handling of special entities as in restoreSpecialCharacters
DESIGN	// TODO (@author fdietz): i18n
DESIGN	// TODO (@author fdietz): i18n
DESIGN	// ??? bad to have release hardocoded here. Fix later...right.
DESIGN	//TODO: Return content type according to the mime part in the mail
DESIGN	//TODO: Return content encoding according to the mime part in the mail
DESIGN	//TODO: Open stream from the mime part specified by contentID of the  //currently viewed mail
DESIGN	// register interest on store changes // TODO the dependency should be the other way around
DESIGN	// @author: fdietz // This is a workaround. Generally, the contact dialog editor // should ensure that all necessary fields are available // 
DESIGN	// TODO we should check if we need an vector or better another list // implementation; checking also, if the list // must be syncronized or not (performance)
DESIGN	// we can't use SystemClassLoader here, because that doesn't work // with java webstart // -> instead we use this.getClass().getClassLoader() // -> which seems to work perfectly
DESIGN	// we can't use SystemClassLoader here, because that // wouldn't work with java webstart, // ResourceBundle uses its own internal classloader // if no classloader is given //  -> set classloader = null
DESIGN	// TODO: Make this hack more i18n compatible
DESIGN	// hack to support dockable view title update // TODO replace with listener pattern
DESIGN	// this is a hack for the multiline column
