// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999994688925481	WITHOUT_CLASSIFICATION	5.311074519452703E-7	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999873731402388	WITHOUT_CLASSIFICATION	1.2626859761199935E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999156685018192	WITHOUT_CLASSIFICATION	8.433149818076117E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999156685018192	WITHOUT_CLASSIFICATION	8.433149818076117E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997071758750677	WITHOUT_CLASSIFICATION	2.928241249323011E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997071758750677	WITHOUT_CLASSIFICATION	2.928241249323011E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999367520142207	WITHOUT_CLASSIFICATION	6.32479857792987E-4	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999888052606667	WITHOUT_CLASSIFICATION	1.1194739333347937E-5	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999905611627268	WITHOUT_CLASSIFICATION	9.438837273190067E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999947422499811	WITHOUT_CLASSIFICATION	5.257750018972758E-6	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9954581730842543	WITHOUT_CLASSIFICATION	0.00454182691574568	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9954581730842543	WITHOUT_CLASSIFICATION	0.00454182691574568	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999862735914413	WITHOUT_CLASSIFICATION	1.3726408558695561E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9921829753898319	WITHOUT_CLASSIFICATION	0.007817024610167977	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9921829753898319	WITHOUT_CLASSIFICATION	0.007817024610167977	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999842576156505	WITHOUT_CLASSIFICATION	1.5742384349588146E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999967477195145	WITHOUT_CLASSIFICATION	3.252280485503126E-6	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996397689065255	WITHOUT_CLASSIFICATION	3.602310934745538E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996397689065255	WITHOUT_CLASSIFICATION	3.602310934745538E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996397689065255	WITHOUT_CLASSIFICATION	3.602310934745538E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996397689065255	WITHOUT_CLASSIFICATION	3.602310934745538E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996397689065255	WITHOUT_CLASSIFICATION	3.602310934745538E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996397689065255	WITHOUT_CLASSIFICATION	3.602310934745538E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996397689065255	WITHOUT_CLASSIFICATION	3.602310934745538E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999839740843236	WITHOUT_CLASSIFICATION	1.6025915676405323E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999839740843236	WITHOUT_CLASSIFICATION	1.6025915676405323E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999839740843236	WITHOUT_CLASSIFICATION	1.6025915676405323E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999839740843236	WITHOUT_CLASSIFICATION	1.6025915676405323E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999839740843236	WITHOUT_CLASSIFICATION	1.6025915676405323E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999839740843236	WITHOUT_CLASSIFICATION	1.6025915676405323E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999839740843236	WITHOUT_CLASSIFICATION	1.6025915676405323E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9949657930842668	WITHOUT_CLASSIFICATION	0.005034206915733171	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9949657930842668	WITHOUT_CLASSIFICATION	0.005034206915733171	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9949657930842668	WITHOUT_CLASSIFICATION	0.005034206915733171	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9949657930842668	WITHOUT_CLASSIFICATION	0.005034206915733171	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9949657930842668	WITHOUT_CLASSIFICATION	0.005034206915733171	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9949657930842668	WITHOUT_CLASSIFICATION	0.005034206915733171	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9974670236265639	WITHOUT_CLASSIFICATION	0.002532976373436121	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9974670236265639	WITHOUT_CLASSIFICATION	0.002532976373436121	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9974670236265639	WITHOUT_CLASSIFICATION	0.002532976373436121	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9974670236265639	WITHOUT_CLASSIFICATION	0.002532976373436121	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9974670236265639	WITHOUT_CLASSIFICATION	0.002532976373436121	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9974670236265639	WITHOUT_CLASSIFICATION	0.002532976373436121	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9956340928333453	WITHOUT_CLASSIFICATION	0.0043659071666547035	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9956340928333453	WITHOUT_CLASSIFICATION	0.0043659071666547035	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9956340928333453	WITHOUT_CLASSIFICATION	0.0043659071666547035	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9956340928333453	WITHOUT_CLASSIFICATION	0.0043659071666547035	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9956340928333453	WITHOUT_CLASSIFICATION	0.0043659071666547035	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9956340928333453	WITHOUT_CLASSIFICATION	0.0043659071666547035	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9956340928333453	WITHOUT_CLASSIFICATION	0.0043659071666547035	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9869826463451377	WITHOUT_CLASSIFICATION	0.013017353654862243	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9869826463451377	WITHOUT_CLASSIFICATION	0.013017353654862243	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9869826463451377	WITHOUT_CLASSIFICATION	0.013017353654862243	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9869826463451377	WITHOUT_CLASSIFICATION	0.013017353654862243	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999993982549807	WITHOUT_CLASSIFICATION	6.017450193420155E-7	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999993982549807	WITHOUT_CLASSIFICATION	6.017450193420155E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999964891709466	WITHOUT_CLASSIFICATION	3.5108290533641553E-6	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999984186715958	WITHOUT_CLASSIFICATION	1.581328404231106E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999110204483738	WITHOUT_CLASSIFICATION	8.897955162624555E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999555674309213	WITHOUT_CLASSIFICATION	4.4432569078755776E-5	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999780119148906	WITHOUT_CLASSIFICATION	2.198808510953145E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.999903264134729	WITHOUT_CLASSIFICATION	9.673586527103695E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.999903264134729	WITHOUT_CLASSIFICATION	9.673586527103695E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.999903264134729	WITHOUT_CLASSIFICATION	9.673586527103695E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.999903264134729	WITHOUT_CLASSIFICATION	9.673586527103695E-5	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999958684184385	WITHOUT_CLASSIFICATION	4.131581561619634E-6	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9992860033927509	WITHOUT_CLASSIFICATION	7.13996607249139E-4	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999999909403497	WITHOUT_CLASSIFICATION	9.059650275112047E-9	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9998744617619383	WITHOUT_CLASSIFICATION	1.2553823806178116E-4	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999945189855943	WITHOUT_CLASSIFICATION	5.481014405678903E-6	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9998412804258195	WITHOUT_CLASSIFICATION	1.587195741803731E-4	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999976877781762	WITHOUT_CLASSIFICATION	2.3122218238747726E-6	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999950883776249	WITHOUT_CLASSIFICATION	4.911622375077457E-6	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9910922064253426	WITHOUT_CLASSIFICATION	0.008907793574657402	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9957706562678847	WITHOUT_CLASSIFICATION	0.004229343732115302	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999808851901317	WITHOUT_CLASSIFICATION	1.9114809868343368E-5	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9909581342682825	WITHOUT_CLASSIFICATION	0.009041865731717428	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9992456601063131	WITHOUT_CLASSIFICATION	7.543398936868253E-4	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999989712476861	WITHOUT_CLASSIFICATION	1.0287523138874963E-6	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999975350112523	WITHOUT_CLASSIFICATION	2.464988747694531E-5	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999940850216237	WITHOUT_CLASSIFICATION	5.914978376249968E-6	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.7812018400730174	WITHOUT_CLASSIFICATION	0.2187981599269826	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.999903264134729	WITHOUT_CLASSIFICATION	9.673586527103695E-5	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9985030386743343	WITHOUT_CLASSIFICATION	0.0014969613256657739	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999987910169629	WITHOUT_CLASSIFICATION	1.2089830371827863E-6	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999954082768928	WITHOUT_CLASSIFICATION	4.591723107137233E-6	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999437141212404	WITHOUT_CLASSIFICATION	5.6285878759589016E-5	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9439748827075665	WITHOUT_CLASSIFICATION	0.05602511729243355	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999785166926471	WITHOUT_CLASSIFICATION	2.148330735276957E-5	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999546206652762	WITHOUT_CLASSIFICATION	4.537933472384947E-5	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999846660965136	WITHOUT_CLASSIFICATION	1.5333903486467573E-5	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9987437251015594	WITHOUT_CLASSIFICATION	0.0012562748984405309	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999982640708444	WITHOUT_CLASSIFICATION	1.7359291556479234E-6	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9995986966470909	WITHOUT_CLASSIFICATION	4.013033529091616E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999922944570625	WITHOUT_CLASSIFICATION	7.705542937484373E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999970968302626	WITHOUT_CLASSIFICATION	2.903169737468388E-6	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.999996451885278	WITHOUT_CLASSIFICATION	3.5481147220400983E-6	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999995366932299	WITHOUT_CLASSIFICATION	4.633067700486414E-7	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999992486472776	WITHOUT_CLASSIFICATION	7.51352722433158E-7	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999995148227008	WITHOUT_CLASSIFICATION	4.851772992277337E-7	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999950016720218	WITHOUT_CLASSIFICATION	4.9983279782127185E-6	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999989929123702	WITHOUT_CLASSIFICATION	1.0070876298916307E-6	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999031694873	WITHOUT_CLASSIFICATION	9.683051263353214E-8	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9754464566027604	WITHOUT_CLASSIFICATION	0.024553543397239492	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.999997431908685	WITHOUT_CLASSIFICATION	2.568091315057721E-6	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999957084526426	WITHOUT_CLASSIFICATION	4.291547357448984E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999513562486494	WITHOUT_CLASSIFICATION	4.864375135064222E-5	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9993880548737621	WITHOUT_CLASSIFICATION	6.119451262378793E-4	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9991271630040526	WITHOUT_CLASSIFICATION	8.728369959474189E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9995519024418951	WITHOUT_CLASSIFICATION	4.4809755810490344E-4	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999559687150061	WITHOUT_CLASSIFICATION	4.403128499392599E-5	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.999998557012358	WITHOUT_CLASSIFICATION	1.4429876421138322E-6	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.999999919557847	WITHOUT_CLASSIFICATION	8.044215308818085E-8	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999987853065447	WITHOUT_CLASSIFICATION	1.2146934552856302E-6	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999921490476741	WITHOUT_CLASSIFICATION	7.8509523258391E-6	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999999580750764	WITHOUT_CLASSIFICATION	4.1924923533587166E-8	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999961686191002	WITHOUT_CLASSIFICATION	3.831380899702051E-6	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999973275761866	WITHOUT_CLASSIFICATION	2.6724238133327123E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9987057946798373	WITHOUT_CLASSIFICATION	0.001294205320162731	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999999644032284	WITHOUT_CLASSIFICATION	3.559677165123568E-8	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999633734972	WITHOUT_CLASSIFICATION	3.662650277060134E-8	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999999904672444	WITHOUT_CLASSIFICATION	9.532755597626853E-9	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999929918473048	WITHOUT_CLASSIFICATION	7.0081526951567215E-6	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999997812621819	WITHOUT_CLASSIFICATION	2.1873781798505126E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998977181798411	WITHOUT_CLASSIFICATION	1.0228182015901522E-4	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9896992311114442	WITHOUT_CLASSIFICATION	0.010300768888555837	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999029262530539	WITHOUT_CLASSIFICATION	9.707374694611898E-5	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999029262530539	WITHOUT_CLASSIFICATION	9.707374694611898E-5	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9988102814750582	WITHOUT_CLASSIFICATION	0.0011897185249418198	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999926792810064	WITHOUT_CLASSIFICATION	7.320718993548538E-6	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999842074437406	WITHOUT_CLASSIFICATION	1.5792556259488335E-5	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9764744630991689	WITHOUT_CLASSIFICATION	0.023525536900831163	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9964968889843877	WITHOUT_CLASSIFICATION	0.0035031110156122872	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9880291692897507	WITHOUT_CLASSIFICATION	0.011970830710249241	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9994015624044962	WITHOUT_CLASSIFICATION	5.984375955037672E-4	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999731988882203	WITHOUT_CLASSIFICATION	2.6801111779570568E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998977181798411	WITHOUT_CLASSIFICATION	1.0228182015901522E-4	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999286161343	WITHOUT_CLASSIFICATION	7.138386579494749E-8	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999867580855607	WITHOUT_CLASSIFICATION	1.3241914439256076E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999993571655	WITHOUT_CLASSIFICATION	6.428343915445785E-10	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999772485547	WITHOUT_CLASSIFICATION	2.2751445374043995E-8	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999990156593992	WITHOUT_CLASSIFICATION	9.84340600831559E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999855583701	WITHOUT_CLASSIFICATION	1.4441629813427953E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999855583701	WITHOUT_CLASSIFICATION	1.4441629813427953E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999855583701	WITHOUT_CLASSIFICATION	1.4441629813427953E-8	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9887948152963723	WITHOUT_CLASSIFICATION	0.011205184703627713	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999784695538	WITHOUT_CLASSIFICATION	2.153044614687938E-8	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999957332398037	WITHOUT_CLASSIFICATION	4.2667601962497955E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9974991184374835	WITHOUT_CLASSIFICATION	0.002500881562516492	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9831187438236317	WITHOUT_CLASSIFICATION	0.016881256176368174	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9998093055295725	WITHOUT_CLASSIFICATION	1.9069447042746498E-4	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.999937424374922	WITHOUT_CLASSIFICATION	6.257562507805529E-5	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999991356187	WITHOUT_CLASSIFICATION	8.643814496757815E-10	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999951956125711	WITHOUT_CLASSIFICATION	4.804387428906214E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999951956125711	WITHOUT_CLASSIFICATION	4.804387428906214E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999927707415631	WITHOUT_CLASSIFICATION	7.229258436930458E-6	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999720057701	WITHOUT_CLASSIFICATION	2.7994229892309352E-8	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999970754654663	WITHOUT_CLASSIFICATION	2.924534533704755E-5	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999970754654663	WITHOUT_CLASSIFICATION	2.924534533704755E-5	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999983736735619	WITHOUT_CLASSIFICATION	1.626326438088473E-6	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999332513023	WITHOUT_CLASSIFICATION	6.674869766121624E-8	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999909298700049	WITHOUT_CLASSIFICATION	9.070129995079374E-6	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.999992811223195	WITHOUT_CLASSIFICATION	7.188776804960928E-6	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999932080772975	WITHOUT_CLASSIFICATION	6.7919227024066306E-6	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999999725749408	WITHOUT_CLASSIFICATION	2.742505912794838E-8	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999985495875284	WITHOUT_CLASSIFICATION	1.4504124715515914E-6	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999994128511271	WITHOUT_CLASSIFICATION	5.871488728390862E-7	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9999856066623332	WITHOUT_CLASSIFICATION	1.4393337666836152E-5	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999963428291111	WITHOUT_CLASSIFICATION	3.6571708890233117E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998977181798411	WITHOUT_CLASSIFICATION	1.0228182015901522E-4	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.999999989928787	WITHOUT_CLASSIFICATION	1.0071213086000201E-8	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999996585644335	WITHOUT_CLASSIFICATION	3.414355664490538E-7	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9998800838035644	WITHOUT_CLASSIFICATION	1.1991619643554873E-4	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.7250321233040965	WITHOUT_CLASSIFICATION	0.2749678766959035	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999261058587081	WITHOUT_CLASSIFICATION	7.38941412919532E-5	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.999648817041327	WITHOUT_CLASSIFICATION	3.5118295867298395E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999537719405898	WITHOUT_CLASSIFICATION	4.622805941013746E-5	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999853636121193	WITHOUT_CLASSIFICATION	1.4636387880636322E-5	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999831081567135	WITHOUT_CLASSIFICATION	1.6891843286426404E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999763083762998	WITHOUT_CLASSIFICATION	2.3691623700280818E-5	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999999628033492	WITHOUT_CLASSIFICATION	3.7196650785201924E-8	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9997629587853268	WITHOUT_CLASSIFICATION	2.3704121467308528E-4	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999527575824437	WITHOUT_CLASSIFICATION	4.724241755633743E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999585527508	WITHOUT_CLASSIFICATION	4.144724918023126E-8	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999986720586	WITHOUT_CLASSIFICATION	1.3279414049510055E-9	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999856000873639	WITHOUT_CLASSIFICATION	1.4399912636120678E-5	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999996678263042	WITHOUT_CLASSIFICATION	3.321736957953074E-7	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999697954125181	WITHOUT_CLASSIFICATION	3.0204587481976722E-5	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999837272754059	WITHOUT_CLASSIFICATION	1.6272724594195635E-5	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999738319775253	WITHOUT_CLASSIFICATION	2.6168022474672447E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999993112789853	WITHOUT_CLASSIFICATION	6.8872101466347E-7	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999555849482947	WITHOUT_CLASSIFICATION	4.4415051705319186E-5	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999994987254728	WITHOUT_CLASSIFICATION	5.012745272405065E-7	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999916721020027	WITHOUT_CLASSIFICATION	8.327897997257024E-6	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999954336913496	WITHOUT_CLASSIFICATION	4.5663086503961095E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9888516861137225	WITHOUT_CLASSIFICATION	0.011148313886277477	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999979204328573	WITHOUT_CLASSIFICATION	2.079567142646452E-6	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999998351799662	WITHOUT_CLASSIFICATION	1.648200337947E-6	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9998968492267135	WITHOUT_CLASSIFICATION	1.031507732864974E-4	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999994767343118	WITHOUT_CLASSIFICATION	5.232656882782419E-7	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999015947804202	WITHOUT_CLASSIFICATION	9.840521957990222E-5	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9999898382336886	WITHOUT_CLASSIFICATION	1.016176631136812E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999858284695026	WITHOUT_CLASSIFICATION	1.4171530497494836E-5	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9993870235862652	WITHOUT_CLASSIFICATION	6.129764137349247E-4	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999700391921033	WITHOUT_CLASSIFICATION	2.996080789675295E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.999996220333359	WITHOUT_CLASSIFICATION	3.7796666409247877E-6	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9993090660505485	WITHOUT_CLASSIFICATION	6.909339494514665E-4	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999998582232922	WITHOUT_CLASSIFICATION	1.41776707927209E-7	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999943558262354	WITHOUT_CLASSIFICATION	5.6441737645273485E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999992563186487	WITHOUT_CLASSIFICATION	7.436813513014724E-7	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999980215171681	WITHOUT_CLASSIFICATION	1.978482831891361E-6	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999997614407236	WITHOUT_CLASSIFICATION	2.385592764457121E-7	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9995942996813967	WITHOUT_CLASSIFICATION	4.057003186033196E-4	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999993325167305	WITHOUT_CLASSIFICATION	6.674832695949352E-7	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999630695318504	WITHOUT_CLASSIFICATION	3.693046814949035E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999999614942983	WITHOUT_CLASSIFICATION	3.850570170825059E-8	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999996538725326	WITHOUT_CLASSIFICATION	3.461274672995096E-7	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999999984520456	WITHOUT_CLASSIFICATION	1.547954399286828E-8	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.999989901471139	WITHOUT_CLASSIFICATION	1.0098528861075752E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9997415413060411	WITHOUT_CLASSIFICATION	2.5845869395895734E-4	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9965355994401734	WITHOUT_CLASSIFICATION	0.0034644005598265166	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999918814211874	WITHOUT_CLASSIFICATION	8.118578812644675E-6	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.999998950967451	WITHOUT_CLASSIFICATION	1.0490325490429997E-6	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999952820650553	WITHOUT_CLASSIFICATION	4.717934944699074E-6	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9995117107174777	WITHOUT_CLASSIFICATION	4.88289282522357E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9896961042711819	WITHOUT_CLASSIFICATION	0.010303895728818076	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9992525274675951	WITHOUT_CLASSIFICATION	7.474725324049696E-4	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999927140879807	WITHOUT_CLASSIFICATION	7.285912019150251E-6	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999977616654437	WITHOUT_CLASSIFICATION	2.2383345563382967E-6	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999992473630173	WITHOUT_CLASSIFICATION	7.526369828226262E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999957682262264	WITHOUT_CLASSIFICATION	4.231773773565863E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999957682262264	WITHOUT_CLASSIFICATION	4.231773773565863E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999982420997799	WITHOUT_CLASSIFICATION	1.7579002200334424E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999982420997799	WITHOUT_CLASSIFICATION	1.7579002200334424E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999969654807712	WITHOUT_CLASSIFICATION	3.0345192288051758E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999969654807712	WITHOUT_CLASSIFICATION	3.0345192288051758E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999992574684761	WITHOUT_CLASSIFICATION	7.425315239641132E-7	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999992574684761	WITHOUT_CLASSIFICATION	7.425315239641132E-7	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999991748194025	WITHOUT_CLASSIFICATION	8.251805975349694E-7	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999931431452626	WITHOUT_CLASSIFICATION	6.856854737339349E-6	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999926894652914	WITHOUT_CLASSIFICATION	7.3105347086286465E-6	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999977633631832	WITHOUT_CLASSIFICATION	2.2366368167907544E-6	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999997248594746	WITHOUT_CLASSIFICATION	2.7514052545597987E-7	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999998767809092	WITHOUT_CLASSIFICATION	1.232190908336184E-7	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999996622322797	WITHOUT_CLASSIFICATION	3.377677203458547E-7	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999840686025	WITHOUT_CLASSIFICATION	1.5931397509119416E-8	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999972444194654	WITHOUT_CLASSIFICATION	2.755580534696499E-6	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999999522847574	WITHOUT_CLASSIFICATION	4.771524272607269E-8	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999588204915658	WITHOUT_CLASSIFICATION	4.117950843413554E-5	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.99999997526847	WITHOUT_CLASSIFICATION	2.4731529999557367E-8	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999976606676299	WITHOUT_CLASSIFICATION	2.339332370122946E-6	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999990045934566	WITHOUT_CLASSIFICATION	9.954065434303331E-7	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999999574521358	WITHOUT_CLASSIFICATION	4.254786419108536E-8	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999994734343348	WITHOUT_CLASSIFICATION	5.265656651419314E-7	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999997514981442	WITHOUT_CLASSIFICATION	2.4850185570723264E-7	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999952390247	WITHOUT_CLASSIFICATION	4.760975289492667E-9	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999987316512111	WITHOUT_CLASSIFICATION	1.2683487889242755E-6	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.8231430301818367	WITHOUT_CLASSIFICATION	0.17685696981816335	DESIGN
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999973599277551	WITHOUT_CLASSIFICATION	2.640072244864274E-6	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999995632048893	WITHOUT_CLASSIFICATION	4.367951107237141E-7	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9998661316997318	WITHOUT_CLASSIFICATION	1.3386830026804403E-4	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999975365480281	WITHOUT_CLASSIFICATION	2.4634519717728483E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999990565921638	WITHOUT_CLASSIFICATION	9.434078362029479E-7	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999913913986732	WITHOUT_CLASSIFICATION	8.608601326714953E-6	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999999766724658	WITHOUT_CLASSIFICATION	2.3327534317848312E-8	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999993812370833	WITHOUT_CLASSIFICATION	6.187629166829828E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999993812370833	WITHOUT_CLASSIFICATION	6.187629166829828E-7	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999997468789337	WITHOUT_CLASSIFICATION	2.5312106641565334E-7	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999977138809314	WITHOUT_CLASSIFICATION	2.2861190685691694E-6	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999761714977776	WITHOUT_CLASSIFICATION	2.3828502222395947E-5	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9988000692026824	WITHOUT_CLASSIFICATION	0.001199930797317606	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999825452314086	WITHOUT_CLASSIFICATION	1.7454768591384424E-5	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999981617498653	WITHOUT_CLASSIFICATION	1.8382501346836966E-6	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999953136232942	WITHOUT_CLASSIFICATION	4.68637670584047E-6	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999953136232942	WITHOUT_CLASSIFICATION	4.68637670584047E-6	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999961162065125	WITHOUT_CLASSIFICATION	3.883793487496329E-6	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.7635242669500821	WITHOUT_CLASSIFICATION	0.23647573304991787	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999546426232067	WITHOUT_CLASSIFICATION	4.535737679344324E-5	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999546426232067	WITHOUT_CLASSIFICATION	4.535737679344324E-5	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999955448024797	WITHOUT_CLASSIFICATION	4.4551975202534895E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999913718988461	WITHOUT_CLASSIFICATION	8.628101153939106E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999913718988461	WITHOUT_CLASSIFICATION	8.628101153939106E-6	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.999990783966126	WITHOUT_CLASSIFICATION	9.216033873967519E-6	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.999990783966126	WITHOUT_CLASSIFICATION	9.216033873967519E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999976758516742	WITHOUT_CLASSIFICATION	2.3241483257403197E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999976758516742	WITHOUT_CLASSIFICATION	2.3241483257403197E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999864562805337	WITHOUT_CLASSIFICATION	1.3543719466276112E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999986217810004	WITHOUT_CLASSIFICATION	1.3782189995698175E-6	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999915684303265	WITHOUT_CLASSIFICATION	8.431569673407816E-6	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999995738189116	WITHOUT_CLASSIFICATION	4.2618108850311083E-7	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999998211071534	WITHOUT_CLASSIFICATION	1.788928465936796E-7	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999983915186546	WITHOUT_CLASSIFICATION	1.6084813454524828E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999098647387245	WITHOUT_CLASSIFICATION	9.013526127558455E-5	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999650938917833	WITHOUT_CLASSIFICATION	3.49061082166813E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999098647387245	WITHOUT_CLASSIFICATION	9.013526127558455E-5	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9988663916818737	WITHOUT_CLASSIFICATION	0.0011336083181263121	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999933572640957	WITHOUT_CLASSIFICATION	6.642735904414115E-6	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999999941192066	WITHOUT_CLASSIFICATION	5.8807934046715957E-8	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999999141081334	WITHOUT_CLASSIFICATION	8.589186665917331E-8	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999996846746096	WITHOUT_CLASSIFICATION	3.153253903672654E-7	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999969793543014	WITHOUT_CLASSIFICATION	3.0206456985903132E-6	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999853593912064	WITHOUT_CLASSIFICATION	1.4640608793557925E-5	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999970695088609	WITHOUT_CLASSIFICATION	2.9304911391945655E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999999750969693	WITHOUT_CLASSIFICATION	2.4903030703657536E-7	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999817758490684	WITHOUT_CLASSIFICATION	1.8224150931535164E-5	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999988900273256	WITHOUT_CLASSIFICATION	1.1099726744113575E-6	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999566193441922	WITHOUT_CLASSIFICATION	4.338065580772173E-5	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.999999569869037	WITHOUT_CLASSIFICATION	4.3013096284510007E-7	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.999985596886352	WITHOUT_CLASSIFICATION	1.4403113648056224E-5	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999999778774644	WITHOUT_CLASSIFICATION	2.212253554101656E-8	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999964637032573	WITHOUT_CLASSIFICATION	3.5362967425489203E-6	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999999056774634	WITHOUT_CLASSIFICATION	9.432253649649198E-8	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999099048437763	WITHOUT_CLASSIFICATION	9.009515622368988E-5	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999866264176829	WITHOUT_CLASSIFICATION	1.3373582317083707E-5	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999970977967735	WITHOUT_CLASSIFICATION	2.9022032263964876E-6	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999997801267957	WITHOUT_CLASSIFICATION	2.198732043593601E-7	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999997774239322	WITHOUT_CLASSIFICATION	2.2257606777388204E-7	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9996770913934574	WITHOUT_CLASSIFICATION	3.229086065425924E-4	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9944714666379532	WITHOUT_CLASSIFICATION	0.005528533362046889	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999999598072957	WITHOUT_CLASSIFICATION	4.0192704292675645E-8	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9995367805507158	WITHOUT_CLASSIFICATION	4.6321944928417335E-4	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.999347324299563	WITHOUT_CLASSIFICATION	6.526757004370357E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.999999762156338	WITHOUT_CLASSIFICATION	2.378436619368518E-7	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999980851641515	WITHOUT_CLASSIFICATION	1.9148358485323842E-6	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999997913113661	WITHOUT_CLASSIFICATION	2.0868863394848242E-7	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999994463231449	WITHOUT_CLASSIFICATION	5.536768550667407E-7	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999998773998775	WITHOUT_CLASSIFICATION	1.2260012239685825E-7	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999696099950452	WITHOUT_CLASSIFICATION	3.0390004954661937E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999987742552775	WITHOUT_CLASSIFICATION	1.2257447225434159E-6	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999998906528649	WITHOUT_CLASSIFICATION	1.0934713508984058E-7	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999998820404367	WITHOUT_CLASSIFICATION	1.1795956345035354E-7	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.999999290694087	WITHOUT_CLASSIFICATION	7.093059130425523E-7	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999982830952565	WITHOUT_CLASSIFICATION	1.7169047435691816E-6	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999446967200101	WITHOUT_CLASSIFICATION	5.530327999002578E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999969634324104	WITHOUT_CLASSIFICATION	3.0365675894775723E-6	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999913278329441	WITHOUT_CLASSIFICATION	8.672167055962592E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999985021653307	WITHOUT_CLASSIFICATION	1.4978346693338519E-6	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999991653208468	WITHOUT_CLASSIFICATION	8.346791532311467E-7	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999997243331634	WITHOUT_CLASSIFICATION	2.756668365609684E-7	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.999999601906727	WITHOUT_CLASSIFICATION	3.980932729686125E-7	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999846017946753	WITHOUT_CLASSIFICATION	1.539820532475046E-5	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999919773774304	WITHOUT_CLASSIFICATION	8.02262256966057E-6	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999632035077599	WITHOUT_CLASSIFICATION	3.679649224007735E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998884756084	WITHOUT_CLASSIFICATION	1.1152439171666064E-7	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999997913138945	WITHOUT_CLASSIFICATION	2.086861056387708E-7	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999808930464096	WITHOUT_CLASSIFICATION	1.9106953590433054E-5	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.999999999622515	WITHOUT_CLASSIFICATION	3.7748508885621575E-10	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999879335036063	WITHOUT_CLASSIFICATION	1.2066496393654994E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.5492967844725993	WITHOUT_CLASSIFICATION	0.4507032155274006	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999983564459799	WITHOUT_CLASSIFICATION	1.6435540200679626E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999983564459799	WITHOUT_CLASSIFICATION	1.6435540200679626E-6	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999596659099	WITHOUT_CLASSIFICATION	4.033409000482525E-8	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999997075452014	WITHOUT_CLASSIFICATION	2.9245479860195565E-7	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999750952877	WITHOUT_CLASSIFICATION	2.4904712272152534E-8	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999656869625142	WITHOUT_CLASSIFICATION	3.431303748579685E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9998187443411408	WITHOUT_CLASSIFICATION	1.812556588592173E-4	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999999910126474	WITHOUT_CLASSIFICATION	8.987352539625854E-9	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999203563304473	WITHOUT_CLASSIFICATION	7.964366955273504E-5	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999329612520806	WITHOUT_CLASSIFICATION	6.703874791931554E-5	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999258081173948	WITHOUT_CLASSIFICATION	7.419188260513731E-5	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999950206840552	WITHOUT_CLASSIFICATION	4.9793159447899016E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999977575499776	WITHOUT_CLASSIFICATION	2.2424500224635853E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999977575499776	WITHOUT_CLASSIFICATION	2.2424500224635853E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.6966841003090397	WITHOUT_CLASSIFICATION	0.30331589969096046	DESIGN
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.995393961216531	WITHOUT_CLASSIFICATION	0.004606038783469063	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999160961002229	WITHOUT_CLASSIFICATION	8.390389977710279E-5	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999977267738435	WITHOUT_CLASSIFICATION	2.273226156582275E-6	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.99999999376614	WITHOUT_CLASSIFICATION	6.2338599271891155E-9	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999976044738543	WITHOUT_CLASSIFICATION	2.3955261455328676E-6	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999996392869542	WITHOUT_CLASSIFICATION	3.607130457587118E-7	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999954939090516	WITHOUT_CLASSIFICATION	4.5060909483843375E-6	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.999999876284417	WITHOUT_CLASSIFICATION	1.2371558298038308E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.999894471050176	WITHOUT_CLASSIFICATION	1.0552894982401234E-4	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999975772302349	WITHOUT_CLASSIFICATION	2.4227697651803543E-6	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999996680881208	WITHOUT_CLASSIFICATION	3.3191187919892066E-7	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999970733977604	WITHOUT_CLASSIFICATION	2.9266022396188578E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999970733977604	WITHOUT_CLASSIFICATION	2.9266022396188578E-6	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999767824392973	WITHOUT_CLASSIFICATION	2.3217560702619454E-5	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9914111198970524	WITHOUT_CLASSIFICATION	0.008588880102947515	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999980239336187	WITHOUT_CLASSIFICATION	1.9760663813084135E-6	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9970199077039763	WITHOUT_CLASSIFICATION	0.0029800922960236493	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999950082836985	WITHOUT_CLASSIFICATION	4.991716301503016E-6	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9998077722833659	WITHOUT_CLASSIFICATION	1.9222771663399623E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999998420383641	WITHOUT_CLASSIFICATION	1.5796163589297074E-7	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999570314944	WITHOUT_CLASSIFICATION	4.2968505562238914E-8	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.999978932443204	WITHOUT_CLASSIFICATION	2.1067556795982842E-5	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999649747869681	WITHOUT_CLASSIFICATION	3.5025213031917144E-5	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999160961002229	WITHOUT_CLASSIFICATION	8.390389977710279E-5	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9995737983429654	WITHOUT_CLASSIFICATION	4.2620165703459635E-4	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999704214365673	WITHOUT_CLASSIFICATION	2.9578563432772132E-5	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999998598243509	WITHOUT_CLASSIFICATION	1.4017564914413499E-7	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999961151196	WITHOUT_CLASSIFICATION	3.884880330575205E-9	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9998392667363785	WITHOUT_CLASSIFICATION	1.6073326362164004E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999987774498817	WITHOUT_CLASSIFICATION	1.2225501182831433E-6	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9966893967053101	WITHOUT_CLASSIFICATION	0.003310603294689962	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999815291364729	WITHOUT_CLASSIFICATION	1.8470863527120243E-5	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999998146601081	WITHOUT_CLASSIFICATION	1.853398919547888E-7	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.999956047591753	WITHOUT_CLASSIFICATION	4.395240824693203E-5	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999794723199275	WITHOUT_CLASSIFICATION	2.0527680072531728E-5	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9996296324371498	WITHOUT_CLASSIFICATION	3.7036756285021E-4	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999999612624352	WITHOUT_CLASSIFICATION	3.8737564902820733E-8	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999216589788206	WITHOUT_CLASSIFICATION	7.834102117941002E-5	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9988139466302324	WITHOUT_CLASSIFICATION	0.0011860533697675233	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9996232087920887	WITHOUT_CLASSIFICATION	3.767912079113383E-4	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999970344044884	WITHOUT_CLASSIFICATION	2.965595511683243E-6	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999997784455924	WITHOUT_CLASSIFICATION	2.215544076903489E-7	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999906295368944	WITHOUT_CLASSIFICATION	9.370463105645959E-6	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9999963672445985	WITHOUT_CLASSIFICATION	3.632755401573972E-6	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999059319972068	WITHOUT_CLASSIFICATION	9.406800279325312E-5	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999867426984018	WITHOUT_CLASSIFICATION	1.3257301598198908E-5	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9993022625676746	WITHOUT_CLASSIFICATION	6.977374323254347E-4	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9998311641039381	WITHOUT_CLASSIFICATION	1.688358960619063E-4	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999973726326467	WITHOUT_CLASSIFICATION	2.6273673533079093E-6	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999991238115109	WITHOUT_CLASSIFICATION	8.76188489158998E-7	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9997352809757993	WITHOUT_CLASSIFICATION	2.6471902420068444E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999992469640062	WITHOUT_CLASSIFICATION	7.530359937094884E-7	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999983651993585	WITHOUT_CLASSIFICATION	1.6348006415526883E-6	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999996306716125	WITHOUT_CLASSIFICATION	3.693283875232375E-7	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999982733831605	WITHOUT_CLASSIFICATION	1.7266168394468386E-6	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999982733831605	WITHOUT_CLASSIFICATION	1.7266168394468386E-6	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.999998575330699	WITHOUT_CLASSIFICATION	1.424669300960532E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999739247737888	WITHOUT_CLASSIFICATION	2.607522621129771E-5	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999755236253	WITHOUT_CLASSIFICATION	2.4476374685641176E-8	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999968233845951	WITHOUT_CLASSIFICATION	3.176615404894361E-6	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9925772046028554	WITHOUT_CLASSIFICATION	0.007422795397144702	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998562380139	WITHOUT_CLASSIFICATION	1.4376198620524153E-7	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9998977181798411	WITHOUT_CLASSIFICATION	1.0228182015901522E-4	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999998070801825	WITHOUT_CLASSIFICATION	1.929198174576658E-7	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999829831692045	WITHOUT_CLASSIFICATION	1.7016830795451973E-5	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999997393253225	WITHOUT_CLASSIFICATION	2.6067467757932886E-7	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999919960701594	WITHOUT_CLASSIFICATION	8.003929840595067E-6	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.999999964425312	WITHOUT_CLASSIFICATION	3.557468802496066E-8	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999995580037365	WITHOUT_CLASSIFICATION	4.419962634634602E-7	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999992563186487	WITHOUT_CLASSIFICATION	7.436813513014724E-7	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999979463365586	WITHOUT_CLASSIFICATION	2.0536634413916784E-6	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999990005875085	WITHOUT_CLASSIFICATION	9.99412491514908E-7	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999914811687133	WITHOUT_CLASSIFICATION	8.518831286722591E-6	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999866087234	WITHOUT_CLASSIFICATION	1.3391276740828055E-8	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999874977881522	WITHOUT_CLASSIFICATION	1.2502211847671295E-5	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9970619888277297	WITHOUT_CLASSIFICATION	0.002938011172270388	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999776988617094	WITHOUT_CLASSIFICATION	2.230113829056858E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999776988617094	WITHOUT_CLASSIFICATION	2.230113829056858E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999473414154941	WITHOUT_CLASSIFICATION	5.2658584505897415E-5	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999999428554992	WITHOUT_CLASSIFICATION	5.7144500763320866E-8	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999411133248933	WITHOUT_CLASSIFICATION	5.8886675106687315E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999982424118803	WITHOUT_CLASSIFICATION	1.7575881196105986E-6	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999397745477	WITHOUT_CLASSIFICATION	6.0225452205875E-8	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999997143654836	WITHOUT_CLASSIFICATION	2.856345164060959E-7	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999997568134974	WITHOUT_CLASSIFICATION	2.4318650264332794E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999866591	WITHOUT_CLASSIFICATION	1.3340783634632218E-11	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999970986244212	WITHOUT_CLASSIFICATION	2.9013755788471236E-6	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9995203369436464	WITHOUT_CLASSIFICATION	4.79663056353582E-4	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999977254663068	WITHOUT_CLASSIFICATION	2.2745336931196893E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999740379743468	WITHOUT_CLASSIFICATION	2.596202565319237E-5	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999930090138963	WITHOUT_CLASSIFICATION	6.990986103662965E-6	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999537131454	WITHOUT_CLASSIFICATION	4.6286854587193086E-8	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999997966359994	WITHOUT_CLASSIFICATION	2.0336400062698522E-7	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.5879483580309802	WITHOUT_CLASSIFICATION	0.4120516419690198	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999901418881594	WITHOUT_CLASSIFICATION	9.858111840699246E-6	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999936339269649	WITHOUT_CLASSIFICATION	6.3660730350606955E-6	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999988340738232	WITHOUT_CLASSIFICATION	1.165926176916863E-6	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999973707601166	WITHOUT_CLASSIFICATION	2.629239883283212E-6	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9972259547376949	WITHOUT_CLASSIFICATION	0.002774045262304951	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999991918365324	WITHOUT_CLASSIFICATION	8.081634675548267E-7	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999988509820243	WITHOUT_CLASSIFICATION	1.149017975628647E-6	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999337996943756	WITHOUT_CLASSIFICATION	6.620030562438943E-5	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.999994712320831	WITHOUT_CLASSIFICATION	5.2876791688690524E-6	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999996242295353	WITHOUT_CLASSIFICATION	3.757704646811864E-7	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9997027139920662	WITHOUT_CLASSIFICATION	2.972860079338145E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999687942127574	WITHOUT_CLASSIFICATION	3.120578724255799E-5	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.999996791198915	WITHOUT_CLASSIFICATION	3.208801085010882E-6	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9998625078208931	WITHOUT_CLASSIFICATION	1.374921791068733E-4	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.999624025216604	WITHOUT_CLASSIFICATION	3.7597478339605945E-4	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9997898209854891	WITHOUT_CLASSIFICATION	2.1017901451088678E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999597267242606	WITHOUT_CLASSIFICATION	4.027327573953925E-5	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.999849325632418	WITHOUT_CLASSIFICATION	1.5067436758201374E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.99998437218125	WITHOUT_CLASSIFICATION	1.5627818749933287E-5	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999981859692905	WITHOUT_CLASSIFICATION	1.814030709522157E-6	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999988250239213	WITHOUT_CLASSIFICATION	1.1749760786368904E-6	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999991180523059	WITHOUT_CLASSIFICATION	8.819476942083848E-7	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999672048716711	WITHOUT_CLASSIFICATION	3.279512832887661E-5	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999146719431325	WITHOUT_CLASSIFICATION	8.532805686752055E-5	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999968241651618	WITHOUT_CLASSIFICATION	3.1758348382070357E-6	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999996055278588	WITHOUT_CLASSIFICATION	3.944721411611103E-7	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999662062501	WITHOUT_CLASSIFICATION	3.3793749877565766E-8	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999302480880534	WITHOUT_CLASSIFICATION	6.975191194657924E-5	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999987864265272	WITHOUT_CLASSIFICATION	1.213573472882864E-6	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999302480880534	WITHOUT_CLASSIFICATION	6.975191194657924E-5	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999973240974561	DESIGN	2.675902543778633E-6	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.8978046027499084	DESIGN	0.10219539725009169	WITHOUT_CLASSIFICATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999815873589784	WITHOUT_CLASSIFICATION	1.8412641021703094E-5	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.8512907644908505	DESIGN	0.1487092355091495	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999985958732169	WITHOUT_CLASSIFICATION	1.4041267830037721E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999987065530795	WITHOUT_CLASSIFICATION	1.2934469204037498E-6	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999948274512656	WITHOUT_CLASSIFICATION	5.172548734456445E-6	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9994002797265242	WITHOUT_CLASSIFICATION	5.997202734758475E-4	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999934850345458	WITHOUT_CLASSIFICATION	6.514965454244764E-6	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9453191292004712	WITHOUT_CLASSIFICATION	0.054680870799528714	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9918696914405678	WITHOUT_CLASSIFICATION	0.008130308559432189	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999933817908597	WITHOUT_CLASSIFICATION	6.618209140245533E-6	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9959484906960582	WITHOUT_CLASSIFICATION	0.004051509303941812	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999998880558462	WITHOUT_CLASSIFICATION	1.1194415390667579E-7	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9992545219727638	WITHOUT_CLASSIFICATION	7.454780272361154E-4	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9555309709777206	WITHOUT_CLASSIFICATION	0.04446902902227949	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999898067557172	WITHOUT_CLASSIFICATION	1.019324428273743E-5	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9999998200276392	WITHOUT_CLASSIFICATION	1.7997236085306877E-7	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999965656117515	WITHOUT_CLASSIFICATION	3.4343882483956697E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9996724006297419	WITHOUT_CLASSIFICATION	3.2759937025805174E-4	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999559904677547	WITHOUT_CLASSIFICATION	4.400953224526736E-5	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999993236821895	WITHOUT_CLASSIFICATION	6.763178105955836E-7	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999982880457641	WITHOUT_CLASSIFICATION	1.711954235860213E-6	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999874184766798	WITHOUT_CLASSIFICATION	1.2581523320271695E-5	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999807616770241	WITHOUT_CLASSIFICATION	1.923832297583256E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999362102552077	WITHOUT_CLASSIFICATION	6.37897447922349E-5	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999733640991785	WITHOUT_CLASSIFICATION	2.6635900821492848E-5	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999820346639882	WITHOUT_CLASSIFICATION	1.796533601187581E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999808851901317	WITHOUT_CLASSIFICATION	1.9114809868343368E-5	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999999443927174	WITHOUT_CLASSIFICATION	5.5607282498950594E-8	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999984061075169	WITHOUT_CLASSIFICATION	1.5938924831371226E-6	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999983273306793	WITHOUT_CLASSIFICATION	1.6726693207538714E-6	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999993495193485	WITHOUT_CLASSIFICATION	6.504806514970365E-7	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9999508172123825	WITHOUT_CLASSIFICATION	4.918278761750773E-5	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999998542617817	WITHOUT_CLASSIFICATION	1.457382182331439E-7	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999904395836723	WITHOUT_CLASSIFICATION	9.560416327732919E-6	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999876902358883	WITHOUT_CLASSIFICATION	1.2309764111677105E-5	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999939585228489	WITHOUT_CLASSIFICATION	6.041477151204992E-6	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999259683620288	WITHOUT_CLASSIFICATION	7.403163797106257E-5	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.999999944383579	WITHOUT_CLASSIFICATION	5.561642088917764E-8	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999991412666	WITHOUT_CLASSIFICATION	8.587334860042309E-10	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999782914137624	WITHOUT_CLASSIFICATION	2.1708586237612063E-5	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999907652525365	WITHOUT_CLASSIFICATION	9.234747463523771E-6	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9995124189380519	WITHOUT_CLASSIFICATION	4.875810619481097E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9995124189380519	WITHOUT_CLASSIFICATION	4.875810619481097E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9930205166424273	WITHOUT_CLASSIFICATION	0.006979483357572676	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999664063002647	WITHOUT_CLASSIFICATION	3.359369973522151E-5	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9997528729953571	WITHOUT_CLASSIFICATION	2.471270046429736E-4	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.999997062878561	WITHOUT_CLASSIFICATION	2.9371214389926937E-6	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999035139008	WITHOUT_CLASSIFICATION	9.648609916539647E-8	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999451489985	WITHOUT_CLASSIFICATION	5.485100149102523E-8	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999971955682414	WITHOUT_CLASSIFICATION	2.8044317586680972E-6	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999983683783433	WITHOUT_CLASSIFICATION	1.6316216566751284E-6	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9992111478224864	WITHOUT_CLASSIFICATION	7.888521775136564E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999321266701041	WITHOUT_CLASSIFICATION	6.78733298958032E-5	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998298134548	WITHOUT_CLASSIFICATION	1.7018654518538426E-7	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999986378433122	WITHOUT_CLASSIFICATION	1.3621566878061062E-6	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999415297104604	WITHOUT_CLASSIFICATION	5.8470289539640406E-5	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9991117607664175	WITHOUT_CLASSIFICATION	8.882392335825211E-4	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9998705435543883	WITHOUT_CLASSIFICATION	1.2945644561176351E-4	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9841574261009626	WITHOUT_CLASSIFICATION	0.015842573899037503	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999991377863708	WITHOUT_CLASSIFICATION	8.62213629215733E-7	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999848695271625	WITHOUT_CLASSIFICATION	1.5130472837493356E-5	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9985286365764955	WITHOUT_CLASSIFICATION	0.0014713634235045832	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.999997743203122	WITHOUT_CLASSIFICATION	2.256796878039921E-6	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9533566027846699	WITHOUT_CLASSIFICATION	0.04664339721533004	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.9975957036437415	WITHOUT_CLASSIFICATION	0.0024042963562584145	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9998921024306164	WITHOUT_CLASSIFICATION	1.0789756938355009E-4	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9974742637223737	WITHOUT_CLASSIFICATION	0.0025257362776263882	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.8801001619739902	DESIGN	0.11989983802600976	WITHOUT_CLASSIFICATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999989762249	WITHOUT_CLASSIFICATION	1.0237751381556021E-9	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999923696071501	WITHOUT_CLASSIFICATION	7.630392849914444E-6	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9998307120819853	WITHOUT_CLASSIFICATION	1.692879180147286E-4	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999978640257928	WITHOUT_CLASSIFICATION	2.1359742072130937E-6	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999976952573844	WITHOUT_CLASSIFICATION	2.30474261561982E-6	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.993896426395571	WITHOUT_CLASSIFICATION	0.006103573604429043	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999946379542526	WITHOUT_CLASSIFICATION	5.362045747491117E-6	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999998946847692	WITHOUT_CLASSIFICATION	1.0531523079347381E-7	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9996157424448966	WITHOUT_CLASSIFICATION	3.842575551034189E-4	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.999999999093978	WITHOUT_CLASSIFICATION	9.060219886268585E-10	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999997798967	WITHOUT_CLASSIFICATION	2.2010326401110288E-10	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999995855727993	WITHOUT_CLASSIFICATION	4.1442720058912517E-7	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999985820934609	WITHOUT_CLASSIFICATION	1.4179065390408445E-6	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.8107288218406985	WITHOUT_CLASSIFICATION	0.18927117815930156	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999995449740536	WITHOUT_CLASSIFICATION	4.550259464294348E-7	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.999253081760602	WITHOUT_CLASSIFICATION	7.469182393979104E-4	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9982505779941834	WITHOUT_CLASSIFICATION	0.001749422005816609	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.995743844445173	WITHOUT_CLASSIFICATION	0.004256155554826882	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.999998960525671	WITHOUT_CLASSIFICATION	1.0394743288922258E-6	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999790248283023	WITHOUT_CLASSIFICATION	2.097517169775448E-5	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999999995102899	WITHOUT_CLASSIFICATION	4.897100957215295E-9	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999248812235	WITHOUT_CLASSIFICATION	7.511877646446997E-8	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999991759864273	WITHOUT_CLASSIFICATION	8.240135728425703E-7	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9994483106257678	WITHOUT_CLASSIFICATION	5.516893742322935E-4	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999967024962353	WITHOUT_CLASSIFICATION	3.2975037647468E-6	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999999248783703	WITHOUT_CLASSIFICATION	7.512162969591969E-7	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999942707289387	WITHOUT_CLASSIFICATION	5.7292710613913E-6	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999997168578626	WITHOUT_CLASSIFICATION	2.831421373947649E-7	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999995930870318	WITHOUT_CLASSIFICATION	4.0691296812817255E-7	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999786725233479	WITHOUT_CLASSIFICATION	2.1327476652122287E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9996585602846697	WITHOUT_CLASSIFICATION	3.414397153302891E-4	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999730215372833	WITHOUT_CLASSIFICATION	2.6978462716710652E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9988388336709488	WITHOUT_CLASSIFICATION	0.0011611663290510687	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999858488205434	WITHOUT_CLASSIFICATION	1.415117945660222E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999994857979857	WITHOUT_CLASSIFICATION	5.142020142601175E-7	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999414373047922	WITHOUT_CLASSIFICATION	5.8562695207873324E-5	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999998842603595	WITHOUT_CLASSIFICATION	1.1573964063625755E-7	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999999634351173	WITHOUT_CLASSIFICATION	3.656488270011434E-7	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999934921652665	WITHOUT_CLASSIFICATION	6.507834733564341E-6	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999939762161775	WITHOUT_CLASSIFICATION	6.02378382261408E-6	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999996230495651	WITHOUT_CLASSIFICATION	3.769504348699129E-7	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999989929417967	WITHOUT_CLASSIFICATION	1.0070582033106038E-6	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.99999999976726	WITHOUT_CLASSIFICATION	2.3274014433814512E-10	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999665724376622	WITHOUT_CLASSIFICATION	3.342756233777987E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999871555456984	WITHOUT_CLASSIFICATION	1.2844454301547546E-5	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999667602084616	WITHOUT_CLASSIFICATION	3.323979153838976E-5	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9942000214693776	WITHOUT_CLASSIFICATION	0.005799978530622417	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999647299408175	WITHOUT_CLASSIFICATION	3.527005918238731E-5	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999933413007419	WITHOUT_CLASSIFICATION	6.658699258178917E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999654679359858	WITHOUT_CLASSIFICATION	3.4532064014112256E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999773321061629	WITHOUT_CLASSIFICATION	2.2667893837094426E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.999984120115246	WITHOUT_CLASSIFICATION	1.5879884754010037E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999530007356003	WITHOUT_CLASSIFICATION	4.69992643996392E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999623155170548	WITHOUT_CLASSIFICATION	3.768448294518266E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999708225449231	WITHOUT_CLASSIFICATION	2.917745507698568E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.999949441490655	WITHOUT_CLASSIFICATION	5.055850934496246E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999717845378735	WITHOUT_CLASSIFICATION	2.8215462126464567E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.999979073630736	WITHOUT_CLASSIFICATION	2.0926369263962275E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999651288611647	WITHOUT_CLASSIFICATION	3.487113883524316E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999913977649172	WITHOUT_CLASSIFICATION	8.602235082842502E-6	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999948750030653	WITHOUT_CLASSIFICATION	5.124996934633769E-6	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999834563741046	WITHOUT_CLASSIFICATION	1.6543625895443574E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999912584767847	WITHOUT_CLASSIFICATION	8.74152321519232E-6	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.999977217165211	WITHOUT_CLASSIFICATION	2.2782834788914027E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999921874604886	WITHOUT_CLASSIFICATION	7.812539511415578E-6	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999910719053392	WITHOUT_CLASSIFICATION	8.928094660821158E-6	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999906420044213	WITHOUT_CLASSIFICATION	9.357995578576253E-6	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999944172524962	WITHOUT_CLASSIFICATION	5.582747503825061E-6	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999985340998108	WITHOUT_CLASSIFICATION	1.4659001892778342E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9716271989911687	WITHOUT_CLASSIFICATION	0.028372801008831303	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999373658744909	WITHOUT_CLASSIFICATION	6.263412550902342E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999981403792412	WITHOUT_CLASSIFICATION	1.8596207588802892E-6	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9990878827911195	WITHOUT_CLASSIFICATION	9.121172088804565E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9994912350559143	WITHOUT_CLASSIFICATION	5.087649440857046E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999735574946879	WITHOUT_CLASSIFICATION	2.6442505312136954E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.7482343003385308	WITHOUT_CLASSIFICATION	0.2517656996614691	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999965733936316	WITHOUT_CLASSIFICATION	3.4266063683475873E-6	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.999999081807229	WITHOUT_CLASSIFICATION	9.18192771107207E-7	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9459226070408057	DESIGN	0.054077392959194344	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.999982928466147	WITHOUT_CLASSIFICATION	1.7071533853007238E-5	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999969239771284	WITHOUT_CLASSIFICATION	3.0760228717074164E-6	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999025329358234	WITHOUT_CLASSIFICATION	9.746706417649155E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999025329358234	WITHOUT_CLASSIFICATION	9.746706417649155E-5	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999119611044633	WITHOUT_CLASSIFICATION	8.803889553659659E-5	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9995285306961975	WITHOUT_CLASSIFICATION	4.714693038025321E-4	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999817020702	WITHOUT_CLASSIFICATION	1.8297929769244065E-8	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999735027894768	WITHOUT_CLASSIFICATION	2.6497210523227063E-5	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9883459576266826	WITHOUT_CLASSIFICATION	0.011654042373317405	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9971855549369482	WITHOUT_CLASSIFICATION	0.0028144450630518533	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999969934794342	WITHOUT_CLASSIFICATION	3.0065205659373257E-6	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999999728110615	WITHOUT_CLASSIFICATION	2.7188938508313864E-7	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999977810652293	WITHOUT_CLASSIFICATION	2.218934770625165E-6	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999994595478412	WITHOUT_CLASSIFICATION	5.404521588207803E-7	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.999941474845192	WITHOUT_CLASSIFICATION	5.8525154807923905E-5	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9996069686441693	WITHOUT_CLASSIFICATION	3.930313558305848E-4	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9998861923909389	WITHOUT_CLASSIFICATION	1.1380760906114253E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9989982300753002	WITHOUT_CLASSIFICATION	0.0010017699246997992	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999930833965035	WITHOUT_CLASSIFICATION	6.916603496611881E-6	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999941823707691	WITHOUT_CLASSIFICATION	5.817629230861936E-6	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999785166926471	WITHOUT_CLASSIFICATION	2.148330735276957E-5	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9784251000703611	WITHOUT_CLASSIFICATION	0.021574899929638867	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999900746544857	WITHOUT_CLASSIFICATION	9.925345514308747E-6	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9980787989789657	WITHOUT_CLASSIFICATION	0.0019212010210342622	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999992259599836	WITHOUT_CLASSIFICATION	7.740400164779779E-7	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.6049079659527932	DESIGN	0.3950920340472068	WITHOUT_CLASSIFICATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999815334345973	WITHOUT_CLASSIFICATION	1.8466565402796897E-5	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999998302065806	WITHOUT_CLASSIFICATION	1.6979341940145946E-6	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.999999894433992	WITHOUT_CLASSIFICATION	1.0556600795439013E-7	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9997853189605117	WITHOUT_CLASSIFICATION	2.1468103948818745E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999989219861192	WITHOUT_CLASSIFICATION	1.0780138808326347E-6	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999892533607392	WITHOUT_CLASSIFICATION	1.0746639260815973E-5	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999889988384021	WITHOUT_CLASSIFICATION	1.1001161597827884E-5	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999923058845746	WITHOUT_CLASSIFICATION	7.69411542556399E-6	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999870490664595	WITHOUT_CLASSIFICATION	1.2950933540454216E-5	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9993963783634018	WITHOUT_CLASSIFICATION	6.036216365982488E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999939611890651	WITHOUT_CLASSIFICATION	6.03881093485714E-6	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999994221127124	WITHOUT_CLASSIFICATION	5.778872876610793E-7	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999930933779136	WITHOUT_CLASSIFICATION	6.906622086261526E-6	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999886616399433	WITHOUT_CLASSIFICATION	1.1338360056781382E-5	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999872157093095	WITHOUT_CLASSIFICATION	1.2784290690463821E-5	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999937492243	WITHOUT_CLASSIFICATION	6.250775710742805E-9	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999386359673256	WITHOUT_CLASSIFICATION	6.136403267445073E-5	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999993548993642	WITHOUT_CLASSIFICATION	6.451006357620526E-7	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9714618987174185	WITHOUT_CLASSIFICATION	0.02853810128258147	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9998598641841889	WITHOUT_CLASSIFICATION	1.4013581581113533E-4	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999999934835812	WITHOUT_CLASSIFICATION	6.516418839935242E-9	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999916498487289	WITHOUT_CLASSIFICATION	8.350151271044498E-6	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999916498487289	WITHOUT_CLASSIFICATION	8.350151271044498E-6	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999998843060611	WITHOUT_CLASSIFICATION	1.1569393885614315E-7	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9998468260820392	WITHOUT_CLASSIFICATION	1.531739179608467E-4	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999604150392062	WITHOUT_CLASSIFICATION	3.958496079386213E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999967218716131	WITHOUT_CLASSIFICATION	3.2781283867989666E-6	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999961056637754	WITHOUT_CLASSIFICATION	3.8943362246049715E-6	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999999107750567	WITHOUT_CLASSIFICATION	8.922494320747777E-8	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999999260454792	WITHOUT_CLASSIFICATION	7.395452077787505E-8	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999873715860972	WITHOUT_CLASSIFICATION	1.2628413902889164E-5	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9984273951254403	WITHOUT_CLASSIFICATION	0.001572604874559706	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998595749560241	WITHOUT_CLASSIFICATION	1.4042504397597814E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999100976413241	WITHOUT_CLASSIFICATION	8.990235867593905E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9997477643433459	WITHOUT_CLASSIFICATION	2.5223565665413527E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999998227443274	WITHOUT_CLASSIFICATION	1.7725567269928352E-7	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999981096276016	WITHOUT_CLASSIFICATION	1.890372398430656E-6	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9376298467512435	WITHOUT_CLASSIFICATION	0.06237015324875652	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.90585764464406	WITHOUT_CLASSIFICATION	0.09414235535594002	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999887266916758	WITHOUT_CLASSIFICATION	1.1273308324272194E-5	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999852623361085	WITHOUT_CLASSIFICATION	1.4737663891589105E-5	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999612126198	WITHOUT_CLASSIFICATION	3.878738022625978E-8	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999998582232922	WITHOUT_CLASSIFICATION	1.41776707927209E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999994023110742	WITHOUT_CLASSIFICATION	5.976889258695533E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999994023110742	WITHOUT_CLASSIFICATION	5.976889258695533E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999876571745	WITHOUT_CLASSIFICATION	1.2342825656434137E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999876571745	WITHOUT_CLASSIFICATION	1.2342825656434137E-8	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999030995109	WITHOUT_CLASSIFICATION	9.690048901357396E-8	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999973467106549	WITHOUT_CLASSIFICATION	2.653289345229431E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999553403271675	WITHOUT_CLASSIFICATION	4.465967283256759E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999998589335498	WITHOUT_CLASSIFICATION	1.410664502030037E-7	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999915684303265	WITHOUT_CLASSIFICATION	8.431569673407816E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999304926758	WITHOUT_CLASSIFICATION	6.95073242158768E-8	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9978656601909012	DESIGN	0.0021343398090987154	WITHOUT_CLASSIFICATION
// Profile	WITHOUT_CLASSIFICATION	0.9999883810661069	WITHOUT_CLASSIFICATION	1.1618933893204381E-5	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999810460437782	WITHOUT_CLASSIFICATION	1.895395622175776E-5	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999999726155053	WITHOUT_CLASSIFICATION	2.738449466295329E-8	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999206886338462	WITHOUT_CLASSIFICATION	7.931136615379913E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999859358687676	WITHOUT_CLASSIFICATION	1.4064131232449869E-5	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999996678169423	WITHOUT_CLASSIFICATION	3.321830576760353E-7	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9986379225049444	WITHOUT_CLASSIFICATION	0.001362077495055628	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999588375934597	WITHOUT_CLASSIFICATION	4.1162406540282114E-5	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999998576654209	WITHOUT_CLASSIFICATION	1.423345790410562E-7	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.999996283443982	WITHOUT_CLASSIFICATION	3.7165560180485287E-6	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999986131830247	WITHOUT_CLASSIFICATION	1.3868169751700138E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9998892024109921	WITHOUT_CLASSIFICATION	1.1079758900796185E-4	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9994082086774666	WITHOUT_CLASSIFICATION	5.917913225334419E-4	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999909955776144	WITHOUT_CLASSIFICATION	9.004422385690979E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999939705704471	WITHOUT_CLASSIFICATION	6.029429552899915E-6	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999998607326317	WITHOUT_CLASSIFICATION	1.3926736830035715E-7	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999733640991785	WITHOUT_CLASSIFICATION	2.6635900821492848E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999451489985	WITHOUT_CLASSIFICATION	5.485100149102523E-8	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.999976793993872	WITHOUT_CLASSIFICATION	2.320600612799724E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9996995127666563	WITHOUT_CLASSIFICATION	3.004872333436861E-4	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999997052451247	WITHOUT_CLASSIFICATION	2.947548752311877E-7	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9572632203006094	WITHOUT_CLASSIFICATION	0.04273677969939065	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999993737826783	WITHOUT_CLASSIFICATION	6.262173216752571E-7	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999993737826783	WITHOUT_CLASSIFICATION	6.262173216752571E-7	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9998006297526209	WITHOUT_CLASSIFICATION	1.9937024737925693E-4	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999293358763	WITHOUT_CLASSIFICATION	7.06641236878204E-8	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999996951879878	WITHOUT_CLASSIFICATION	3.0481201225533685E-7	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999923136664746	WITHOUT_CLASSIFICATION	7.686333525429856E-6	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999990559990475	WITHOUT_CLASSIFICATION	9.440009524782086E-7	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9999962562184719	WITHOUT_CLASSIFICATION	3.743781528200573E-6	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999547560208659	WITHOUT_CLASSIFICATION	4.524397913399625E-5	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999980648688107	WITHOUT_CLASSIFICATION	1.9351311892253856E-6	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999708281274895	WITHOUT_CLASSIFICATION	2.9171872510438664E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999978571027455	WITHOUT_CLASSIFICATION	2.142897254511182E-6	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999667126740508	WITHOUT_CLASSIFICATION	3.328732594919621E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999986022976264	WITHOUT_CLASSIFICATION	1.3977023737352197E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999996203488063	WITHOUT_CLASSIFICATION	3.7965119362918436E-7	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999999827811209	WITHOUT_CLASSIFICATION	1.7218879101528196E-8	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999993773514332	WITHOUT_CLASSIFICATION	6.226485668525488E-7	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999926894652914	WITHOUT_CLASSIFICATION	7.3105347086286465E-6	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.929047036374495	WITHOUT_CLASSIFICATION	0.07095296362550489	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999794268105142	WITHOUT_CLASSIFICATION	2.0573189485828152E-5	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999995586809933	WITHOUT_CLASSIFICATION	4.4131900660568703E-7	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.999991335257683	WITHOUT_CLASSIFICATION	8.664742316919232E-6	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999998711335809	WITHOUT_CLASSIFICATION	1.2886641906250433E-7	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999998403762711	WITHOUT_CLASSIFICATION	1.5962372879896565E-7	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999985876390053	WITHOUT_CLASSIFICATION	1.4123609947020173E-6	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999671376993376	WITHOUT_CLASSIFICATION	3.286230066236006E-5	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999948814112946	WITHOUT_CLASSIFICATION	5.118588705487065E-6	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.999996628760373	WITHOUT_CLASSIFICATION	3.3712396270173153E-6	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999785420319213	WITHOUT_CLASSIFICATION	2.1457968078743526E-5	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9997397821525634	WITHOUT_CLASSIFICATION	2.6021784743658085E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999998678257148	WITHOUT_CLASSIFICATION	1.321742851364955E-7	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999820859722457	WITHOUT_CLASSIFICATION	1.7914027754275452E-5	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9994774920770468	WITHOUT_CLASSIFICATION	5.22507922953199E-4	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9997473597443662	WITHOUT_CLASSIFICATION	2.5264025563386135E-4	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999997764294742	WITHOUT_CLASSIFICATION	2.2357052579698077E-7	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9999897735547589	WITHOUT_CLASSIFICATION	1.0226445241062435E-5	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999690610929644	WITHOUT_CLASSIFICATION	3.093890703567157E-5	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9994193692649422	WITHOUT_CLASSIFICATION	5.806307350578744E-4	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999685853524856	WITHOUT_CLASSIFICATION	3.1414647514487586E-5	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9977163149625117	WITHOUT_CLASSIFICATION	0.002283685037488293	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999849282732	WITHOUT_CLASSIFICATION	1.5071726789100482E-8	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999994083035247	WITHOUT_CLASSIFICATION	5.916964752977176E-7	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999998886535819	WITHOUT_CLASSIFICATION	1.1134641809995977E-7	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999640689800112	WITHOUT_CLASSIFICATION	3.593101998886103E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999722351729502	WITHOUT_CLASSIFICATION	2.776482704986787E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999952151383267	WITHOUT_CLASSIFICATION	4.784861673306216E-6	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999830372928059	WITHOUT_CLASSIFICATION	1.6962707194082135E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999498278438157	WITHOUT_CLASSIFICATION	5.0172156184417226E-5	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999992389368877	WITHOUT_CLASSIFICATION	7.610631122203358E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999906298024106	WITHOUT_CLASSIFICATION	9.370197589398145E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999559296407261	WITHOUT_CLASSIFICATION	4.407035927393098E-5	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9999566160715039	WITHOUT_CLASSIFICATION	4.33839284960962E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999919205751902	WITHOUT_CLASSIFICATION	8.079424809821892E-6	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999990013364762	WITHOUT_CLASSIFICATION	9.986635236665846E-7	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999988371147382	WITHOUT_CLASSIFICATION	1.1628852617180943E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999984491540659	WITHOUT_CLASSIFICATION	1.550845934130031E-6	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999965037289746	WITHOUT_CLASSIFICATION	3.496271025407069E-6	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999978268525243	WITHOUT_CLASSIFICATION	2.173147475711272E-6	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999943133762437	WITHOUT_CLASSIFICATION	5.686623756350805E-6	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999992161794043	WITHOUT_CLASSIFICATION	7.838205956245185E-7	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999904663528443	WITHOUT_CLASSIFICATION	9.533647155716836E-6	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.6972532401991189	WITHOUT_CLASSIFICATION	0.30274675980088106	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999949702750092	WITHOUT_CLASSIFICATION	5.029724990843058E-6	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999919205751902	WITHOUT_CLASSIFICATION	8.079424809821892E-6	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999988371147382	WITHOUT_CLASSIFICATION	1.1628852617180943E-6	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999990013364762	WITHOUT_CLASSIFICATION	9.986635236665846E-7	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999852206301068	WITHOUT_CLASSIFICATION	1.4779369893272259E-5	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999958346054441	WITHOUT_CLASSIFICATION	4.165394555990501E-6	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999990801539126	WITHOUT_CLASSIFICATION	9.19846087494014E-7	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999957959802963	WITHOUT_CLASSIFICATION	4.204019703694242E-6	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.994662220032795	WITHOUT_CLASSIFICATION	0.0053377799672050235	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999996257548068	WITHOUT_CLASSIFICATION	3.7424519317632604E-7	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999966812290366	WITHOUT_CLASSIFICATION	3.318770963309215E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999997353637742	WITHOUT_CLASSIFICATION	2.6463622581673345E-7	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.999997218343674	WITHOUT_CLASSIFICATION	2.781656325992799E-6	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999792972236	WITHOUT_CLASSIFICATION	2.0702776381898282E-8	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999698099351	WITHOUT_CLASSIFICATION	3.019006489959076E-8	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9917049709512511	WITHOUT_CLASSIFICATION	0.008295029048748959	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999985486802699	WITHOUT_CLASSIFICATION	1.451319730137974E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999988888718542	WITHOUT_CLASSIFICATION	1.1111281458573826E-6	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999966515575538	WITHOUT_CLASSIFICATION	3.3484424460973084E-6	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9995482233999489	WITHOUT_CLASSIFICATION	4.517766000511888E-4	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9996525549176791	WITHOUT_CLASSIFICATION	3.4744508232082376E-4	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9846161841388978	WITHOUT_CLASSIFICATION	0.015383815861102112	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9846161841388978	WITHOUT_CLASSIFICATION	0.015383815861102112	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999979968448426	WITHOUT_CLASSIFICATION	2.00315515734996E-6	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999986984977424	WITHOUT_CLASSIFICATION	1.301502257550149E-6	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999995652391238	WITHOUT_CLASSIFICATION	4.347608762271502E-7	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999980441929704	WITHOUT_CLASSIFICATION	1.9558070294851537E-6	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999738185274414	WITHOUT_CLASSIFICATION	2.618147255863807E-5	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999965331995271	WITHOUT_CLASSIFICATION	3.466800472947585E-6	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999942696399909	WITHOUT_CLASSIFICATION	5.730360009000998E-6	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999805562282251	WITHOUT_CLASSIFICATION	1.944377177481729E-5	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999998381081064	WITHOUT_CLASSIFICATION	1.6189189355692677E-7	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999875446079488	WITHOUT_CLASSIFICATION	1.2455392051228528E-5	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999996058381379	WITHOUT_CLASSIFICATION	3.941618621240169E-7	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999916800305702	WITHOUT_CLASSIFICATION	8.31996942990602E-6	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9997773471842286	WITHOUT_CLASSIFICATION	2.2265281577147443E-4	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999999679537929	WITHOUT_CLASSIFICATION	3.204620713475365E-8	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9990844723596598	WITHOUT_CLASSIFICATION	9.155276403403307E-4	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999990457126081	WITHOUT_CLASSIFICATION	9.542873918874674E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999987914484683	WITHOUT_CLASSIFICATION	1.208551531776331E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999510310801814	WITHOUT_CLASSIFICATION	4.896891981858362E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999510310801814	WITHOUT_CLASSIFICATION	4.896891981858362E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.999995620114175	WITHOUT_CLASSIFICATION	4.379885824980478E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999876739324215	WITHOUT_CLASSIFICATION	1.2326067578469656E-5	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9997586443677915	WITHOUT_CLASSIFICATION	2.4135563220843218E-4	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999998255888782	WITHOUT_CLASSIFICATION	1.7441112172560276E-7	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999893211003428	WITHOUT_CLASSIFICATION	1.0678899657260112E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999510310801814	WITHOUT_CLASSIFICATION	4.896891981858362E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999510310801814	WITHOUT_CLASSIFICATION	4.896891981858362E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997697982254617	WITHOUT_CLASSIFICATION	2.3020177453822924E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997697982254617	WITHOUT_CLASSIFICATION	2.3020177453822924E-4	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999922347785386	WITHOUT_CLASSIFICATION	7.765221461505468E-6	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999998457987928	WITHOUT_CLASSIFICATION	1.54201207278206E-7	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9966872786080535	WITHOUT_CLASSIFICATION	0.003312721391946576	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9893149076582408	WITHOUT_CLASSIFICATION	0.010685092341759144	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999569777528392	WITHOUT_CLASSIFICATION	4.302224716082602E-5	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999569777528392	WITHOUT_CLASSIFICATION	4.302224716082602E-5	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.999999851036571	WITHOUT_CLASSIFICATION	1.48963429010582E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999999135857038	WITHOUT_CLASSIFICATION	8.641429611642281E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999861243536422	WITHOUT_CLASSIFICATION	1.3875646357697996E-5	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9998271455214832	WITHOUT_CLASSIFICATION	1.7285447851667714E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997380858518945	WITHOUT_CLASSIFICATION	2.6191414810553817E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999107580824	WITHOUT_CLASSIFICATION	8.924191759018089E-8	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999536634207684	WITHOUT_CLASSIFICATION	4.633657923172372E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999992863324269	WITHOUT_CLASSIFICATION	7.13667573222726E-7	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999155189365432	WITHOUT_CLASSIFICATION	8.448106345670223E-5	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.999998421411551	WITHOUT_CLASSIFICATION	1.5785884489455749E-6	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.8238614824981234	WITHOUT_CLASSIFICATION	0.17613851750187653	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999989553157708	WITHOUT_CLASSIFICATION	1.0446842291852145E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9998811914812976	WITHOUT_CLASSIFICATION	1.188085187024095E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999905747238	WITHOUT_CLASSIFICATION	9.425276163357651E-9	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999990457126081	WITHOUT_CLASSIFICATION	9.542873918874674E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999510310801814	WITHOUT_CLASSIFICATION	4.896891981858362E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997697982254617	WITHOUT_CLASSIFICATION	2.3020177453822924E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999107580824	WITHOUT_CLASSIFICATION	8.924191759018089E-8	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9983676495192839	WITHOUT_CLASSIFICATION	0.0016323504807160352	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9983676495192839	WITHOUT_CLASSIFICATION	0.0016323504807160352	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999888668575302	WITHOUT_CLASSIFICATION	1.1133142469895427E-5	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999998611112019	WITHOUT_CLASSIFICATION	1.3888879803613234E-7	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999894808514395	WITHOUT_CLASSIFICATION	1.0519148560488793E-5	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999994165750841	WITHOUT_CLASSIFICATION	5.834249159401271E-7	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.999801099023859	WITHOUT_CLASSIFICATION	1.9890097614080733E-4	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999995940915289	WITHOUT_CLASSIFICATION	4.059084711389844E-7	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999985427102427	WITHOUT_CLASSIFICATION	1.4572897572663267E-6	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.99689253502627	WITHOUT_CLASSIFICATION	0.003107464973730172	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998062852277244	WITHOUT_CLASSIFICATION	1.9371477227561078E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9986977215548152	WITHOUT_CLASSIFICATION	0.0013022784451848625	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9991207681749962	WITHOUT_CLASSIFICATION	8.792318250039361E-4	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.999999974263419	WITHOUT_CLASSIFICATION	2.573658094045294E-8	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999997328163367	WITHOUT_CLASSIFICATION	2.6718366338146276E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999987914484683	WITHOUT_CLASSIFICATION	1.208551531776331E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997697982254617	WITHOUT_CLASSIFICATION	2.3020177453822924E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999999135857038	WITHOUT_CLASSIFICATION	8.641429611642281E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999861243536422	WITHOUT_CLASSIFICATION	1.3875646357697996E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999861243536422	WITHOUT_CLASSIFICATION	1.3875646357697996E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997380858518945	WITHOUT_CLASSIFICATION	2.6191414810553817E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999107580824	WITHOUT_CLASSIFICATION	8.924191759018089E-8	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999107580824	WITHOUT_CLASSIFICATION	8.924191759018089E-8	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9983676495192839	WITHOUT_CLASSIFICATION	0.0016323504807160352	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9997765458648463	WITHOUT_CLASSIFICATION	2.2345413515359458E-4	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9997210617949134	WITHOUT_CLASSIFICATION	2.7893820508661084E-4	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999980788805986	WITHOUT_CLASSIFICATION	1.92111940147116E-6	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997731789782559	WITHOUT_CLASSIFICATION	2.268210217439929E-4	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999919069662924	WITHOUT_CLASSIFICATION	8.093033707519288E-6	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999998530990085	WITHOUT_CLASSIFICATION	1.469009914554598E-7	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999965395087986	WITHOUT_CLASSIFICATION	3.460491201396801E-6	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.999990559954481	WITHOUT_CLASSIFICATION	9.440045518986998E-6	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999450631857	WITHOUT_CLASSIFICATION	5.493681430755499E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999999135857038	WITHOUT_CLASSIFICATION	8.641429611642281E-8	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999861243536422	WITHOUT_CLASSIFICATION	1.3875646357697996E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999861243536422	WITHOUT_CLASSIFICATION	1.3875646357697996E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997380858518945	WITHOUT_CLASSIFICATION	2.6191414810553817E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.99689253502627	WITHOUT_CLASSIFICATION	0.003107464973730172	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9986977215548152	WITHOUT_CLASSIFICATION	0.0013022784451848625	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.999994829900653	WITHOUT_CLASSIFICATION	5.170099347040118E-6	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999999942374954	WITHOUT_CLASSIFICATION	5.7625046121257325E-9	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999996711931841	WITHOUT_CLASSIFICATION	3.2880681591338726E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999996711931841	WITHOUT_CLASSIFICATION	3.2880681591338726E-7	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9994254857792442	WITHOUT_CLASSIFICATION	5.745142207558857E-4	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999995154525602	WITHOUT_CLASSIFICATION	4.845474397688181E-7	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999366997954	WITHOUT_CLASSIFICATION	6.330020464892771E-8	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999786757413678	WITHOUT_CLASSIFICATION	2.1324258632310675E-5	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999960981339633	WITHOUT_CLASSIFICATION	3.901866036751398E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999960981339633	WITHOUT_CLASSIFICATION	3.901866036751398E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999968538767238	WITHOUT_CLASSIFICATION	3.146123276197382E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999968538767238	WITHOUT_CLASSIFICATION	3.146123276197382E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999866062435592	WITHOUT_CLASSIFICATION	1.339375644067595E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999866062435592	WITHOUT_CLASSIFICATION	1.339375644067595E-5	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999534265163159	WITHOUT_CLASSIFICATION	4.657348368403549E-5	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9998827319577056	WITHOUT_CLASSIFICATION	1.172680422943648E-4	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9967392923156222	WITHOUT_CLASSIFICATION	0.003260707684377761	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999957632761436	WITHOUT_CLASSIFICATION	4.23672385644245E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9979117699665743	WITHOUT_CLASSIFICATION	0.0020882300334257283	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999998646094421	WITHOUT_CLASSIFICATION	1.3539055792987246E-7	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999988270349707	WITHOUT_CLASSIFICATION	1.1729650293011358E-6	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999914269053849	WITHOUT_CLASSIFICATION	8.57309461516776E-6	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999642288063838	WITHOUT_CLASSIFICATION	3.577119361616539E-5	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999792828406175	WITHOUT_CLASSIFICATION	2.0717159382464032E-5	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9962997278140469	WITHOUT_CLASSIFICATION	0.003700272185953244	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9981944058356741	WITHOUT_CLASSIFICATION	0.001805594164325789	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9995401070855091	WITHOUT_CLASSIFICATION	4.5989291449100207E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999959373496499	WITHOUT_CLASSIFICATION	4.062650350174277E-6	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999959373496499	WITHOUT_CLASSIFICATION	4.062650350174277E-6	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9983611584148709	WITHOUT_CLASSIFICATION	0.0016388415851290264	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999304926758	WITHOUT_CLASSIFICATION	6.95073242158768E-8	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999844637304288	WITHOUT_CLASSIFICATION	1.5536269571199193E-4	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999983117274	WITHOUT_CLASSIFICATION	1.6882725613547817E-9	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9998456454721067	WITHOUT_CLASSIFICATION	1.5435452789329537E-4	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999818720370536	WITHOUT_CLASSIFICATION	1.8127962946511227E-5	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999977424789331	WITHOUT_CLASSIFICATION	2.2575210668803522E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999965118854552	WITHOUT_CLASSIFICATION	3.4881145447169888E-6	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999566719653	WITHOUT_CLASSIFICATION	4.3328034689553085E-8	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999993355532922	WITHOUT_CLASSIFICATION	6.644467077269701E-7	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999995096974077	WITHOUT_CLASSIFICATION	4.903025923553901E-7	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.999954649734614	WITHOUT_CLASSIFICATION	4.5350265385921136E-5	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9998037665974306	WITHOUT_CLASSIFICATION	1.9623340256933716E-4	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.8147578662952298	DESIGN	0.18524213370477025	WITHOUT_CLASSIFICATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9950297781460838	WITHOUT_CLASSIFICATION	0.0049702218539161855	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999994052653299	WITHOUT_CLASSIFICATION	5.947346701633199E-7	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999957949775535	WITHOUT_CLASSIFICATION	4.205022446474593E-6	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999879120853614	WITHOUT_CLASSIFICATION	1.2087914638697018E-5	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999451609995	WITHOUT_CLASSIFICATION	5.4839000500395056E-8	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999451609995	WITHOUT_CLASSIFICATION	5.4839000500395056E-8	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9819265880811975	WITHOUT_CLASSIFICATION	0.01807341191880244	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999930511059043	WITHOUT_CLASSIFICATION	6.948894095641025E-6	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9992557735973774	WITHOUT_CLASSIFICATION	7.442264026226264E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9992557735973774	WITHOUT_CLASSIFICATION	7.442264026226264E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999999856987342	WITHOUT_CLASSIFICATION	1.430126575326705E-8	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999799221577135	WITHOUT_CLASSIFICATION	2.0077842286552914E-5	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.999891632501535	WITHOUT_CLASSIFICATION	1.0836749846496174E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999879017110084	WITHOUT_CLASSIFICATION	1.2098288991598655E-5	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999561792611515	WITHOUT_CLASSIFICATION	4.382073884834914E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.999998648769674	WITHOUT_CLASSIFICATION	1.3512303258929998E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.999998648769674	WITHOUT_CLASSIFICATION	1.3512303258929998E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999987405665496	WITHOUT_CLASSIFICATION	1.259433450350119E-6	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999699842497692	WITHOUT_CLASSIFICATION	3.00157502307872E-5	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9994368951053417	WITHOUT_CLASSIFICATION	5.63104894658352E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999897606370007	WITHOUT_CLASSIFICATION	1.0239362999283797E-5	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999930511059043	WITHOUT_CLASSIFICATION	6.948894095641025E-6	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999823468204092	WITHOUT_CLASSIFICATION	1.76531795908845E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999981444496273	WITHOUT_CLASSIFICATION	1.8555503726709257E-6	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999981444496273	WITHOUT_CLASSIFICATION	1.8555503726709257E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999954799872281	WITHOUT_CLASSIFICATION	4.520012771899292E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996270332577	WITHOUT_CLASSIFICATION	3.729667421810238E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996270332577	WITHOUT_CLASSIFICATION	3.729667421810238E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999951943940062	WITHOUT_CLASSIFICATION	4.805605993849802E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999951943940062	WITHOUT_CLASSIFICATION	4.805605993849802E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999951943940062	WITHOUT_CLASSIFICATION	4.805605993849802E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996270332577	WITHOUT_CLASSIFICATION	3.729667421810238E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996270332577	WITHOUT_CLASSIFICATION	3.729667421810238E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999954799872281	WITHOUT_CLASSIFICATION	4.520012771899292E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999833980416237	WITHOUT_CLASSIFICATION	1.6601958376187308E-5	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999828850700534	WITHOUT_CLASSIFICATION	1.711492994658036E-5	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999989192521811	WITHOUT_CLASSIFICATION	1.08074781889779E-6	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999949254871837	WITHOUT_CLASSIFICATION	5.074512816255272E-6	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999997550970187	WITHOUT_CLASSIFICATION	2.449029812971948E-7	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9992293757763809	WITHOUT_CLASSIFICATION	7.706242236189663E-4	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.999999694399662	WITHOUT_CLASSIFICATION	3.0560033799602084E-7	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999607417257892	WITHOUT_CLASSIFICATION	3.925827421089508E-5	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999995096974077	WITHOUT_CLASSIFICATION	4.903025923553901E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996270332577	WITHOUT_CLASSIFICATION	3.729667421810238E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996270332577	WITHOUT_CLASSIFICATION	3.729667421810238E-7	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999928214258	WITHOUT_CLASSIFICATION	7.178574160707657E-9	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999940945626619	WITHOUT_CLASSIFICATION	5.905437338137377E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999997162395435	WITHOUT_CLASSIFICATION	2.8376045648945747E-7	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999045510073	WITHOUT_CLASSIFICATION	9.54489927401966E-8	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.99999522371812	WITHOUT_CLASSIFICATION	4.776281879956151E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9915194570445046	WITHOUT_CLASSIFICATION	0.008480542955495373	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999998469437659	WITHOUT_CLASSIFICATION	1.530562341852869E-7	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999223495407	WITHOUT_CLASSIFICATION	7.765045927818987E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999569423891	WITHOUT_CLASSIFICATION	4.305761093959614E-8	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999755130304764	WITHOUT_CLASSIFICATION	2.4486969523675263E-5	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999358556631668	WITHOUT_CLASSIFICATION	6.414433683317718E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999983799426536	WITHOUT_CLASSIFICATION	1.6200573463847285E-6	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999426095943982	WITHOUT_CLASSIFICATION	5.739040560192478E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9996635457195764	WITHOUT_CLASSIFICATION	3.3645428042356374E-4	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999995340515853	WITHOUT_CLASSIFICATION	4.659484146657759E-7	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999869238783498	WITHOUT_CLASSIFICATION	1.3076121650178039E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999869238783498	WITHOUT_CLASSIFICATION	1.3076121650178039E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999869238783498	WITHOUT_CLASSIFICATION	1.3076121650178039E-5	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.999877886595464	WITHOUT_CLASSIFICATION	1.2211340453605892E-4	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999804476908	WITHOUT_CLASSIFICATION	1.9552309257262406E-8	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999999955705458	WITHOUT_CLASSIFICATION	4.4294542132170896E-8	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9975152780816857	WITHOUT_CLASSIFICATION	0.0024847219183143543	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999999510247782	WITHOUT_CLASSIFICATION	4.897522179443536E-8	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999318475633725	WITHOUT_CLASSIFICATION	6.815243662751747E-5	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999997377597603	WITHOUT_CLASSIFICATION	2.6224023975591445E-7	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999981215118933	WITHOUT_CLASSIFICATION	1.8784881067443047E-6	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999863678268248	WITHOUT_CLASSIFICATION	1.3632173175273903E-5	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999995872067454	WITHOUT_CLASSIFICATION	4.127932545028993E-7	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9984400745165114	WITHOUT_CLASSIFICATION	0.0015599254834886484	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.999831847120304	WITHOUT_CLASSIFICATION	1.6815287969591762E-4	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999987405665496	WITHOUT_CLASSIFICATION	1.259433450350119E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996270332577	WITHOUT_CLASSIFICATION	3.729667421810238E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999996270332577	WITHOUT_CLASSIFICATION	3.729667421810238E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999954799872281	WITHOUT_CLASSIFICATION	4.520012771899292E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9992293757763809	WITHOUT_CLASSIFICATION	7.706242236189663E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999940945626619	WITHOUT_CLASSIFICATION	5.905437338137377E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999045510073	WITHOUT_CLASSIFICATION	9.54489927401966E-8	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9915194570445046	WITHOUT_CLASSIFICATION	0.008480542955495373	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999997162395435	WITHOUT_CLASSIFICATION	2.8376045648945747E-7	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999998469437659	WITHOUT_CLASSIFICATION	1.530562341852869E-7	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999755130304764	WITHOUT_CLASSIFICATION	2.4486969523675263E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999569423891	WITHOUT_CLASSIFICATION	4.305761093959614E-8	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999983799426536	WITHOUT_CLASSIFICATION	1.6200573463847285E-6	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9961930922797843	WITHOUT_CLASSIFICATION	0.0038069077202156835	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9954689549944775	WITHOUT_CLASSIFICATION	0.0045310450055225104	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.996548010392661	WITHOUT_CLASSIFICATION	0.003451989607338869	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999998564520803	WITHOUT_CLASSIFICATION	1.4354791970247572E-7	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9982560251821974	WITHOUT_CLASSIFICATION	0.0017439748178027007	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999999151599878	WITHOUT_CLASSIFICATION	8.484001226051033E-8	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9993376349786852	WITHOUT_CLASSIFICATION	6.623650213147253E-4	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999910616856	WITHOUT_CLASSIFICATION	8.938314401254656E-9	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.999999818994187	WITHOUT_CLASSIFICATION	1.8100581309950722E-7	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999997624512659	WITHOUT_CLASSIFICATION	2.375487341745828E-7	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999856222272117	WITHOUT_CLASSIFICATION	1.4377772788218891E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998330985785954	WITHOUT_CLASSIFICATION	1.669014214046056E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999989572215373	WITHOUT_CLASSIFICATION	1.0427784626450215E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999956125828395	WITHOUT_CLASSIFICATION	4.387417160437403E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999995922785432	WITHOUT_CLASSIFICATION	4.0772145675563067E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999986155067813	WITHOUT_CLASSIFICATION	1.3844932186966207E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9983501332670556	WITHOUT_CLASSIFICATION	0.0016498667329444788	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999997207877233	WITHOUT_CLASSIFICATION	2.792122768355655E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999801749009848	WITHOUT_CLASSIFICATION	1.982509901518287E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999649638699267	WITHOUT_CLASSIFICATION	3.503613007324914E-5	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9997515662719223	WITHOUT_CLASSIFICATION	2.484337280777331E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997011122911794	WITHOUT_CLASSIFICATION	2.988877088205796E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997011122911794	WITHOUT_CLASSIFICATION	2.988877088205796E-4	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9557529490485747	WITHOUT_CLASSIFICATION	0.04424705095142539	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.99999866328738	WITHOUT_CLASSIFICATION	1.3367126199758493E-6	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998947516782286	WITHOUT_CLASSIFICATION	1.0524832177137393E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998947516782286	WITHOUT_CLASSIFICATION	1.0524832177137393E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998947516782286	WITHOUT_CLASSIFICATION	1.0524832177137393E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999178610863968	WITHOUT_CLASSIFICATION	8.213891360322076E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999178610863968	WITHOUT_CLASSIFICATION	8.213891360322076E-5	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999232956348775	WITHOUT_CLASSIFICATION	7.670436512248108E-5	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9998639770196616	WITHOUT_CLASSIFICATION	1.3602298033840544E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.99999866328738	WITHOUT_CLASSIFICATION	1.3367126199758493E-6	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999874540534293	WITHOUT_CLASSIFICATION	1.2545946570718617E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998947516782286	WITHOUT_CLASSIFICATION	1.0524832177137393E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998947516782286	WITHOUT_CLASSIFICATION	1.0524832177137393E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999178610863968	WITHOUT_CLASSIFICATION	8.213891360322076E-5	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9998639770196616	WITHOUT_CLASSIFICATION	1.3602298033840544E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999430878697452	WITHOUT_CLASSIFICATION	5.691213025479307E-5	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999430878697452	WITHOUT_CLASSIFICATION	5.691213025479307E-5	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999666304666	WITHOUT_CLASSIFICATION	3.33695333208447E-8	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999666304666	WITHOUT_CLASSIFICATION	3.33695333208447E-8	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999542859273255	WITHOUT_CLASSIFICATION	4.571407267453384E-5	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999542859273255	WITHOUT_CLASSIFICATION	4.571407267453384E-5	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999999528383717	WITHOUT_CLASSIFICATION	4.7161628287091014E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999994150976523	WITHOUT_CLASSIFICATION	5.849023477073676E-7	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999994150976523	WITHOUT_CLASSIFICATION	5.849023477073676E-7	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999997470307097	WITHOUT_CLASSIFICATION	2.529692902380988E-7	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999997470307097	WITHOUT_CLASSIFICATION	2.529692902380988E-7	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999999995265103	WITHOUT_CLASSIFICATION	4.7348969359898196E-9	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.999999208600441	WITHOUT_CLASSIFICATION	7.913995589561226E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.999999208600441	WITHOUT_CLASSIFICATION	7.913995589561226E-7	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999979285402032	WITHOUT_CLASSIFICATION	2.071459796779206E-6	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999999521928059	WITHOUT_CLASSIFICATION	4.78071942193868E-8	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999998131987349	WITHOUT_CLASSIFICATION	1.8680126506049805E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999979285402032	WITHOUT_CLASSIFICATION	2.071459796779206E-6	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999999359278401	WITHOUT_CLASSIFICATION	6.407215995856789E-8	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999988828416284	WITHOUT_CLASSIFICATION	1.1171583716097262E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999988828416284	WITHOUT_CLASSIFICATION	1.1171583716097262E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999988828416284	WITHOUT_CLASSIFICATION	1.1171583716097262E-6	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.999994286407095	WITHOUT_CLASSIFICATION	5.713592904905779E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.999998812692187	WITHOUT_CLASSIFICATION	1.187307812886893E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999944214513505	WITHOUT_CLASSIFICATION	5.578548649473247E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999944214513505	WITHOUT_CLASSIFICATION	5.578548649473247E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999987052545736	WITHOUT_CLASSIFICATION	1.2947454265185577E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999902424074332	WITHOUT_CLASSIFICATION	9.757592566898512E-6	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999997494219701	WITHOUT_CLASSIFICATION	2.505780298673024E-7	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999963633492366	WITHOUT_CLASSIFICATION	3.6366507635245557E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999989902253241	WITHOUT_CLASSIFICATION	1.0097746758651023E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999989912380857	WITHOUT_CLASSIFICATION	1.0087619143287922E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999989912380857	WITHOUT_CLASSIFICATION	1.0087619143287922E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9998510873727425	WITHOUT_CLASSIFICATION	1.4891262725749184E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998978106788732	WITHOUT_CLASSIFICATION	1.0218932112683638E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998978106788732	WITHOUT_CLASSIFICATION	1.0218932112683638E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999988828416284	WITHOUT_CLASSIFICATION	1.1171583716097262E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.999998812692187	WITHOUT_CLASSIFICATION	1.187307812886893E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999944214513505	WITHOUT_CLASSIFICATION	5.578548649473247E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999987052545736	WITHOUT_CLASSIFICATION	1.2947454265185577E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999902424074332	WITHOUT_CLASSIFICATION	9.757592566898512E-6	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999997494219701	WITHOUT_CLASSIFICATION	2.505780298673024E-7	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999963633492366	WITHOUT_CLASSIFICATION	3.6366507635245557E-6	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998978106788732	WITHOUT_CLASSIFICATION	1.0218932112683638E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999841432340167	WITHOUT_CLASSIFICATION	1.585676598324711E-5	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9996141966418277	WITHOUT_CLASSIFICATION	3.858033581722567E-4	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999975618634998	WITHOUT_CLASSIFICATION	2.4381365001318083E-6	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999981450436163	WITHOUT_CLASSIFICATION	1.8549563836287588E-6	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9986017593868268	WITHOUT_CLASSIFICATION	0.0013982406131732344	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999987199621073	WITHOUT_CLASSIFICATION	1.2800378927683023E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999925028943957	WITHOUT_CLASSIFICATION	7.4971056042603315E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999925028943957	WITHOUT_CLASSIFICATION	7.4971056042603315E-6	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999956839814561	WITHOUT_CLASSIFICATION	4.316018543916191E-6	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999926636947912	WITHOUT_CLASSIFICATION	7.336305208709949E-6	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999284426918542	WITHOUT_CLASSIFICATION	7.155730814584171E-5	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999993237235174	WITHOUT_CLASSIFICATION	6.762764826774789E-7	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999718856493496	WITHOUT_CLASSIFICATION	2.8114350650319123E-5	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999718856493496	WITHOUT_CLASSIFICATION	2.8114350650319123E-5	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.99994954621201	WITHOUT_CLASSIFICATION	5.0453787990036624E-5	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.99996916344486	WITHOUT_CLASSIFICATION	3.0836555140012045E-5	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999978560248904	WITHOUT_CLASSIFICATION	2.143975109621373E-6	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999978560248904	WITHOUT_CLASSIFICATION	2.143975109621373E-6	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999981651738156	WITHOUT_CLASSIFICATION	1.834826184448896E-6	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999784861639116	WITHOUT_CLASSIFICATION	2.15138360883734E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999989902253241	WITHOUT_CLASSIFICATION	1.0097746758651023E-6	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.999498900935988	WITHOUT_CLASSIFICATION	5.010990640119675E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997721587107	WITHOUT_CLASSIFICATION	2.2784128930031736E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999793499433113	WITHOUT_CLASSIFICATION	2.065005668871156E-5	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999876618484	WITHOUT_CLASSIFICATION	1.2338151555423248E-8	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.999997234447206	WITHOUT_CLASSIFICATION	2.7655527939217574E-6	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999999405588533	WITHOUT_CLASSIFICATION	5.944114670870747E-8	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999994951636589	WITHOUT_CLASSIFICATION	5.048363409574097E-7	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999400051730731	WITHOUT_CLASSIFICATION	5.999482692697001E-5	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999969148702347	WITHOUT_CLASSIFICATION	3.08512976524437E-6	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999969148702347	WITHOUT_CLASSIFICATION	3.08512976524437E-6	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999995006830303	WITHOUT_CLASSIFICATION	4.99316969709032E-6	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999995006830303	WITHOUT_CLASSIFICATION	4.99316969709032E-6	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999971341521453	WITHOUT_CLASSIFICATION	2.8658478547214945E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999976581245313	WITHOUT_CLASSIFICATION	2.341875468642544E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999976581245313	WITHOUT_CLASSIFICATION	2.341875468642544E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999976581245313	WITHOUT_CLASSIFICATION	2.341875468642544E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999940257931	WITHOUT_CLASSIFICATION	5.974206977997233E-9	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999976874567753	WITHOUT_CLASSIFICATION	2.3125432246387014E-6	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999976874567753	WITHOUT_CLASSIFICATION	2.3125432246387014E-6	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999999714945954	WITHOUT_CLASSIFICATION	2.85054046017818E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.999994513621728	WITHOUT_CLASSIFICATION	5.486378272111696E-6	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999991599563987	WITHOUT_CLASSIFICATION	8.400436013962572E-7	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999995968842679	WITHOUT_CLASSIFICATION	4.0311573213456585E-7	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999165899017634	WITHOUT_CLASSIFICATION	8.341009823660334E-5	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9966274825725825	WITHOUT_CLASSIFICATION	0.003372517427417589	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999999353109119	WITHOUT_CLASSIFICATION	6.468908806410968E-8	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999989572215373	WITHOUT_CLASSIFICATION	1.0427784626450215E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999989572215373	WITHOUT_CLASSIFICATION	1.0427784626450215E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999940257931	WITHOUT_CLASSIFICATION	5.974206977997233E-9	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999999714945954	WITHOUT_CLASSIFICATION	2.85054046017818E-7	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998433200701	WITHOUT_CLASSIFICATION	1.5667992985478346E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.999994513621728	WITHOUT_CLASSIFICATION	5.486378272111696E-6	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999991599563987	WITHOUT_CLASSIFICATION	8.400436013962572E-7	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9973702477786753	WITHOUT_CLASSIFICATION	0.002629752221324644	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999993750143412	WITHOUT_CLASSIFICATION	6.249856587874248E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978045401394	WITHOUT_CLASSIFICATION	2.1954598604751974E-6	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9986610350366026	WITHOUT_CLASSIFICATION	0.0013389649633973393	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999995660846221	WITHOUT_CLASSIFICATION	4.3391537784276154E-7	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9998493469910448	WITHOUT_CLASSIFICATION	1.5065300895520018E-4	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9992890716349975	WITHOUT_CLASSIFICATION	7.109283650025991E-4	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9973702477786753	WITHOUT_CLASSIFICATION	0.002629752221324644	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999730555373	WITHOUT_CLASSIFICATION	2.6944462723638E-8	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999730555373	WITHOUT_CLASSIFICATION	2.6944462723638E-8	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999250926171457	WITHOUT_CLASSIFICATION	7.49073828542358E-5	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.999926460178377	WITHOUT_CLASSIFICATION	7.353982162294087E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.99918618219058	WITHOUT_CLASSIFICATION	8.138178094199583E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9992220325905506	WITHOUT_CLASSIFICATION	7.779674094493999E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999868676674	WITHOUT_CLASSIFICATION	1.3132332478659691E-8	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9991090314486366	WITHOUT_CLASSIFICATION	8.909685513633516E-4	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.999996397312515	WITHOUT_CLASSIFICATION	3.602687484922212E-6	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9982294262949671	WITHOUT_CLASSIFICATION	0.0017705737050328783	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9967862484936394	WITHOUT_CLASSIFICATION	0.0032137515063606166	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999999275928516	WITHOUT_CLASSIFICATION	7.240714841876896E-8	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999989855869215	WITHOUT_CLASSIFICATION	1.0144130785356556E-6	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9992220325905506	WITHOUT_CLASSIFICATION	7.779674094493999E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999868676674	WITHOUT_CLASSIFICATION	1.3132332478659691E-8	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999766556256214	WITHOUT_CLASSIFICATION	2.3344374378486723E-5	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999999674102144	WITHOUT_CLASSIFICATION	3.258978568805361E-8	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9996205426678361	WITHOUT_CLASSIFICATION	3.794573321639768E-4	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.99999930849193	WITHOUT_CLASSIFICATION	6.915080701476189E-7	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999977517052	WITHOUT_CLASSIFICATION	2.248294846242667E-9	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999973942560826	WITHOUT_CLASSIFICATION	2.60574391736252E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9994885387016612	WITHOUT_CLASSIFICATION	5.11461298338836E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999985855028243	WITHOUT_CLASSIFICATION	1.4144971756955078E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999993215954528	WITHOUT_CLASSIFICATION	6.784045472187303E-7	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999514395992877	WITHOUT_CLASSIFICATION	4.85604007124156E-5	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999698297975887	WITHOUT_CLASSIFICATION	3.0170202411203095E-5	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9997715137637884	WITHOUT_CLASSIFICATION	2.2848623621175406E-4	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999947083026833	WITHOUT_CLASSIFICATION	5.291697316672096E-6	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999996832559598	WITHOUT_CLASSIFICATION	3.1674404022725254E-7	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9796282906856799	DESIGN	0.02037170931432001	WITHOUT_CLASSIFICATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999912819272713	WITHOUT_CLASSIFICATION	8.718072728728629E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999969877792233	WITHOUT_CLASSIFICATION	3.0122207766791698E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9999949853962392	WITHOUT_CLASSIFICATION	5.014603760755323E-6	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999965848798417	WITHOUT_CLASSIFICATION	3.4151201583192495E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9986359628016749	WITHOUT_CLASSIFICATION	0.0013640371983251142	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999969877792233	WITHOUT_CLASSIFICATION	3.0122207766791698E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9999949853962392	WITHOUT_CLASSIFICATION	5.014603760755323E-6	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999965848798417	WITHOUT_CLASSIFICATION	3.4151201583192495E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999995482178302	WITHOUT_CLASSIFICATION	4.517821698415384E-7	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999898241926836	WITHOUT_CLASSIFICATION	1.0175807316341025E-5	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999951102584493	WITHOUT_CLASSIFICATION	4.889741550693008E-6	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999777519056541	WITHOUT_CLASSIFICATION	2.22480943458833E-5	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9579215553495813	WITHOUT_CLASSIFICATION	0.04207844465041875	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999808586620518	WITHOUT_CLASSIFICATION	1.9141337948254232E-5	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999656708039203	WITHOUT_CLASSIFICATION	3.432919607975737E-5	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999844167466031	WITHOUT_CLASSIFICATION	1.5583253396808087E-5	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9998923749432471	WITHOUT_CLASSIFICATION	1.0762505675289103E-4	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999897802482275	WITHOUT_CLASSIFICATION	1.021975177253858E-5	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.8404629593417811	DESIGN	0.15953704065821886	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9998689650852521	WITHOUT_CLASSIFICATION	1.3103491474784041E-4	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999986350211837	WITHOUT_CLASSIFICATION	1.3649788163428574E-6	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999865665424311	WITHOUT_CLASSIFICATION	1.343345756886426E-5	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999792387355	WITHOUT_CLASSIFICATION	2.0761264537133517E-8	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999093780053913	WITHOUT_CLASSIFICATION	9.062199460879383E-5	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9998680421556967	WITHOUT_CLASSIFICATION	1.3195784430330667E-4	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.999999011296555	WITHOUT_CLASSIFICATION	9.88703445028075E-7	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999961286518964	WITHOUT_CLASSIFICATION	3.871348103705803E-6	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999992755531952	WITHOUT_CLASSIFICATION	7.24446804805811E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999995995004346	WITHOUT_CLASSIFICATION	4.0049956542563186E-7	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999940908506029	WITHOUT_CLASSIFICATION	5.9091493970976945E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999940908506029	WITHOUT_CLASSIFICATION	5.9091493970976945E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999997796230222	WITHOUT_CLASSIFICATION	2.2037697790464044E-7	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999997796230222	WITHOUT_CLASSIFICATION	2.2037697790464044E-7	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999982930371263	WITHOUT_CLASSIFICATION	1.7069628736503655E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999982930371263	WITHOUT_CLASSIFICATION	1.7069628736503655E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999824546329483	WITHOUT_CLASSIFICATION	1.7545367051667786E-5	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999477178302798	WITHOUT_CLASSIFICATION	5.2282169720330975E-5	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999996807217039	WITHOUT_CLASSIFICATION	3.1927829610937726E-7	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.999999996145113	WITHOUT_CLASSIFICATION	3.854886905204382E-9	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999972305963	WITHOUT_CLASSIFICATION	2.7694037781125346E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999954527286	WITHOUT_CLASSIFICATION	4.547271445901138E-9	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999966175874	WITHOUT_CLASSIFICATION	3.3824126909234267E-9	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.999999886670273	WITHOUT_CLASSIFICATION	1.1332972700447082E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999989572215373	WITHOUT_CLASSIFICATION	1.0427784626450215E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999824546329483	WITHOUT_CLASSIFICATION	1.7545367051667786E-5	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999477178302798	WITHOUT_CLASSIFICATION	5.2282169720330975E-5	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999996807217039	WITHOUT_CLASSIFICATION	3.1927829610937726E-7	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999972305963	WITHOUT_CLASSIFICATION	2.7694037781125346E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999954527286	WITHOUT_CLASSIFICATION	4.547271445901138E-9	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999999009807279	WITHOUT_CLASSIFICATION	9.901927207047232E-8	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999999636392799	WITHOUT_CLASSIFICATION	3.6360720097503E-8	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999734312373052	WITHOUT_CLASSIFICATION	2.65687626947522E-5	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999734312373052	WITHOUT_CLASSIFICATION	2.65687626947522E-5	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998497873472644	WITHOUT_CLASSIFICATION	1.502126527356165E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999660144153895	WITHOUT_CLASSIFICATION	3.3985584610575716E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9997996738072378	WITHOUT_CLASSIFICATION	2.0032619276218438E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999343290336	WITHOUT_CLASSIFICATION	6.567096638033954E-8	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999343290336	WITHOUT_CLASSIFICATION	6.567096638033954E-8	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999998185080584	WITHOUT_CLASSIFICATION	1.8149194151281812E-7	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999967185172905	WITHOUT_CLASSIFICATION	3.2814827094967786E-5	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999957170190267	WITHOUT_CLASSIFICATION	4.28298097338559E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999996599121702	WITHOUT_CLASSIFICATION	3.4008782978963983E-6	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9998997249102723	WITHOUT_CLASSIFICATION	1.00275089727643E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999956125828395	WITHOUT_CLASSIFICATION	4.387417160437403E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999995922785432	WITHOUT_CLASSIFICATION	4.0772145675563067E-7	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999986155067813	WITHOUT_CLASSIFICATION	1.3844932186966207E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9983501332670556	WITHOUT_CLASSIFICATION	0.0016498667329444788	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999649638699267	WITHOUT_CLASSIFICATION	3.503613007324914E-5	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9997515662719223	WITHOUT_CLASSIFICATION	2.484337280777331E-4	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999998185080584	WITHOUT_CLASSIFICATION	1.8149194151281812E-7	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999967185172905	WITHOUT_CLASSIFICATION	3.2814827094967786E-5	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999996599121702	WITHOUT_CLASSIFICATION	3.4008782978963983E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999746776011135	WITHOUT_CLASSIFICATION	2.5322398886551908E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9997996738072378	WITHOUT_CLASSIFICATION	2.0032619276218438E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9997996738072378	WITHOUT_CLASSIFICATION	2.0032619276218438E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999989855869215	WITHOUT_CLASSIFICATION	1.0144130785356556E-6	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999989855869215	WITHOUT_CLASSIFICATION	1.0144130785356556E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9869036961737981	WITHOUT_CLASSIFICATION	0.013096303826201826	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9869036961737981	WITHOUT_CLASSIFICATION	0.013096303826201826	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999990422063404	WITHOUT_CLASSIFICATION	9.577936596282618E-7	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999585117387453	WITHOUT_CLASSIFICATION	4.1488261254716096E-5	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999600542771305	WITHOUT_CLASSIFICATION	3.994572286934267E-5	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999755678759448	WITHOUT_CLASSIFICATION	2.4432124055263237E-5	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999041184466739	WITHOUT_CLASSIFICATION	9.588155332617568E-5	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999945062097289	WITHOUT_CLASSIFICATION	5.493790271094848E-6	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998605173812986	WITHOUT_CLASSIFICATION	1.3948261870145911E-4	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999273757183	WITHOUT_CLASSIFICATION	7.262428165543058E-8	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999997540711885	WITHOUT_CLASSIFICATION	2.4592881150167856E-7	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999183868530249	WITHOUT_CLASSIFICATION	8.161314697514625E-5	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.999998165607807	WITHOUT_CLASSIFICATION	1.8343921930081755E-6	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999433570150865	WITHOUT_CLASSIFICATION	5.664298491336252E-5	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9998942580323448	WITHOUT_CLASSIFICATION	1.0574196765529818E-4	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999971380027927	WITHOUT_CLASSIFICATION	2.8619972072583726E-6	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999490130969	WITHOUT_CLASSIFICATION	5.0986903061132264E-8	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999963375098727	WITHOUT_CLASSIFICATION	3.66249012727292E-6	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999207954585225	WITHOUT_CLASSIFICATION	7.920454147753076E-5	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999979235465732	WITHOUT_CLASSIFICATION	2.0764534266749084E-6	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9990200714589547	WITHOUT_CLASSIFICATION	9.799285410453556E-4	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999995922785432	WITHOUT_CLASSIFICATION	4.0772145675563067E-7	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9983501332670556	WITHOUT_CLASSIFICATION	0.0016498667329444788	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997011122911794	WITHOUT_CLASSIFICATION	2.988877088205796E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999944214513505	WITHOUT_CLASSIFICATION	5.578548649473247E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999944214513505	WITHOUT_CLASSIFICATION	5.578548649473247E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999746776011135	WITHOUT_CLASSIFICATION	2.5322398886551908E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9997996738072378	WITHOUT_CLASSIFICATION	2.0032619276218438E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999989855869215	WITHOUT_CLASSIFICATION	1.0144130785356556E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9869036961737981	WITHOUT_CLASSIFICATION	0.013096303826201826	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9649230886154785	DESIGN	0.03507691138452157	WITHOUT_CLASSIFICATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.5399906506405273	WITHOUT_CLASSIFICATION	0.4600093493594727	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999971700078518	WITHOUT_CLASSIFICATION	2.829992148166726E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9845136558166842	WITHOUT_CLASSIFICATION	0.015486344183315879	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9990005619015793	WITHOUT_CLASSIFICATION	9.994380984207317E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9990005619015793	WITHOUT_CLASSIFICATION	9.994380984207317E-4	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9993926458777411	WITHOUT_CLASSIFICATION	6.073541222588403E-4	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999979284633	WITHOUT_CLASSIFICATION	2.0715366089644258E-9	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999995917324661	WITHOUT_CLASSIFICATION	4.0826753390748276E-7	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999999958205298	WITHOUT_CLASSIFICATION	4.179470308399797E-9	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999998416906052	WITHOUT_CLASSIFICATION	1.5830939479975963E-7	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999998416906052	WITHOUT_CLASSIFICATION	1.5830939479975963E-7	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999488405999305	WITHOUT_CLASSIFICATION	5.1159400069604055E-5	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999996447715119	WITHOUT_CLASSIFICATION	3.5522848801323696E-7	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999937005684	WITHOUT_CLASSIFICATION	6.299431583151764E-9	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999888190407664	WITHOUT_CLASSIFICATION	1.1180959233656667E-5	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9998196921007957	WITHOUT_CLASSIFICATION	1.8030789920440537E-4	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999991734796188	WITHOUT_CLASSIFICATION	8.265203812259597E-7	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999935796241674	WITHOUT_CLASSIFICATION	6.420375832665203E-6	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999769425689	WITHOUT_CLASSIFICATION	2.3057431167070953E-8	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9997874179473862	WITHOUT_CLASSIFICATION	2.1258205261378576E-4	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9583357848142596	WITHOUT_CLASSIFICATION	0.041664215185740386	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.7743330892020178	WITHOUT_CLASSIFICATION	0.22566691079798223	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.998075007119185	WITHOUT_CLASSIFICATION	0.001924992880815009	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999167723572	WITHOUT_CLASSIFICATION	8.322764275440282E-8	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.6273747867043545	WITHOUT_CLASSIFICATION	0.37262521329564546	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999926743995902	WITHOUT_CLASSIFICATION	7.325600409764959E-6	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999896849938334	WITHOUT_CLASSIFICATION	1.0315006166477099E-5	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999974968363424	WITHOUT_CLASSIFICATION	2.5031636576986415E-6	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999554598797875	WITHOUT_CLASSIFICATION	4.4540120212507135E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999996519239516	WITHOUT_CLASSIFICATION	3.480760483878443E-7	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.999980830939176	WITHOUT_CLASSIFICATION	1.9169060824062078E-5	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999922094147957	WITHOUT_CLASSIFICATION	7.790585204344029E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999530569023929	WITHOUT_CLASSIFICATION	4.6943097607017705E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999530569023929	WITHOUT_CLASSIFICATION	4.6943097607017705E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999941175838941	WITHOUT_CLASSIFICATION	5.882416105926048E-6	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999390162384042	WITHOUT_CLASSIFICATION	6.098376159578926E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999965118854552	WITHOUT_CLASSIFICATION	3.4881145447169888E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999965118854552	WITHOUT_CLASSIFICATION	3.4881145447169888E-6	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9994372368425513	DESIGN	5.627631574487287E-4	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999697937453405	WITHOUT_CLASSIFICATION	3.0206254659603072E-5	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999967094530011	WITHOUT_CLASSIFICATION	3.2905469989788716E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999856513994476	WITHOUT_CLASSIFICATION	1.434860055225508E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999856513994476	WITHOUT_CLASSIFICATION	1.434860055225508E-5	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9994747344658444	WITHOUT_CLASSIFICATION	5.252655341554691E-4	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.999999911768558	WITHOUT_CLASSIFICATION	8.823144198205027E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999998962534652	WITHOUT_CLASSIFICATION	1.0374653488442223E-7	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999997337574626	WITHOUT_CLASSIFICATION	2.662425373310008E-7	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999997922591725	WITHOUT_CLASSIFICATION	2.0774082746366326E-7	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999716586163732	WITHOUT_CLASSIFICATION	2.8341383626739528E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998991447669433	WITHOUT_CLASSIFICATION	1.0085523305664491E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9996951897280733	WITHOUT_CLASSIFICATION	3.048102719266739E-4	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999988788970935	WITHOUT_CLASSIFICATION	1.121102906517444E-6	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999075761952771	WITHOUT_CLASSIFICATION	9.242380472294734E-5	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999998175798206	WITHOUT_CLASSIFICATION	1.8242017953581012E-7	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9998862367198561	WITHOUT_CLASSIFICATION	1.1376328014394302E-4	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999950058215225	WITHOUT_CLASSIFICATION	4.994178477479183E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.99972190197102	WITHOUT_CLASSIFICATION	2.780980289800042E-4	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.8745946519379926	DESIGN	0.12540534806200745	WITHOUT_CLASSIFICATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999383767882577	WITHOUT_CLASSIFICATION	6.162321174231065E-5	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999992542085	WITHOUT_CLASSIFICATION	7.457914642914901E-10	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999997542958539	WITHOUT_CLASSIFICATION	2.4570414615073697E-7	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999875745977687	WITHOUT_CLASSIFICATION	1.2425402231461374E-5	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999679905635164	WITHOUT_CLASSIFICATION	3.200943648356784E-5	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999226093477768	WITHOUT_CLASSIFICATION	7.739065222318566E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999941599952802	WITHOUT_CLASSIFICATION	5.840004719777016E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.999922528086896	WITHOUT_CLASSIFICATION	7.747191310408199E-5	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9997302906259423	WITHOUT_CLASSIFICATION	2.6970937405761374E-4	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.999999580441425	WITHOUT_CLASSIFICATION	4.1955857502365477E-7	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999983944012218	WITHOUT_CLASSIFICATION	1.6055987780934476E-6	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999586600796204	WITHOUT_CLASSIFICATION	4.133992037948313E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999990884606551	WITHOUT_CLASSIFICATION	9.115393447881562E-7	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999996887268716	WITHOUT_CLASSIFICATION	3.112731283163066E-7	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999995085001346	WITHOUT_CLASSIFICATION	4.914998653694841E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999998556193527	WITHOUT_CLASSIFICATION	1.443806473235125E-7	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.99972190197102	WITHOUT_CLASSIFICATION	2.780980289800042E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999990884606551	WITHOUT_CLASSIFICATION	9.115393447881562E-7	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999996887268716	WITHOUT_CLASSIFICATION	3.112731283163066E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999998556193527	WITHOUT_CLASSIFICATION	1.443806473235125E-7	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999960370677805	WITHOUT_CLASSIFICATION	3.962932219495618E-6	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999853095640873	WITHOUT_CLASSIFICATION	1.4690435912732062E-5	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999852977390185	WITHOUT_CLASSIFICATION	1.4702260981596342E-5	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999935013063	WITHOUT_CLASSIFICATION	6.49869369178125E-9	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999996676638269	WITHOUT_CLASSIFICATION	3.3233617312121874E-7	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.999999645601984	WITHOUT_CLASSIFICATION	3.543980159624378E-7	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999899164742172	WITHOUT_CLASSIFICATION	1.0083525782825144E-5	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999991220092554	WITHOUT_CLASSIFICATION	8.779907445908945E-7	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.999998017758342	WITHOUT_CLASSIFICATION	1.982241658024673E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.7352635298920641	WITHOUT_CLASSIFICATION	0.26473647010793583	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999996526442138	WITHOUT_CLASSIFICATION	3.4735578627693024E-7	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999996526442138	WITHOUT_CLASSIFICATION	3.4735578627693024E-7	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.99999663446691	WITHOUT_CLASSIFICATION	3.365533089952462E-6	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999998754439812	WITHOUT_CLASSIFICATION	1.2455601881944964E-7	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999880564466	WITHOUT_CLASSIFICATION	1.1943553319630782E-8	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999873981530889	WITHOUT_CLASSIFICATION	1.260184691116022E-5	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999755810174412	WITHOUT_CLASSIFICATION	2.441898255879276E-5	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999487040711984	WITHOUT_CLASSIFICATION	5.1295928801589814E-5	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999996968902335	WITHOUT_CLASSIFICATION	3.031097664962003E-7	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999829001998081	WITHOUT_CLASSIFICATION	1.7099800191896185E-4	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999310856543	WITHOUT_CLASSIFICATION	6.8914345689925E-8	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9752942961390704	WITHOUT_CLASSIFICATION	0.024705703860929653	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9998119934347328	WITHOUT_CLASSIFICATION	1.880065652670574E-4	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9879479338972007	WITHOUT_CLASSIFICATION	0.012052066102799366	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999996663925168	WITHOUT_CLASSIFICATION	3.3360748321108417E-7	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999983756593619	WITHOUT_CLASSIFICATION	1.6243406380055183E-6	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999975774737787	WITHOUT_CLASSIFICATION	2.42252622133667E-6	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999104383876056	WITHOUT_CLASSIFICATION	8.956161239444606E-5	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999987117869799	WITHOUT_CLASSIFICATION	1.2882130201973627E-6	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999954812630412	WITHOUT_CLASSIFICATION	4.518736958790122E-6	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9998597158246014	WITHOUT_CLASSIFICATION	1.4028417539853507E-4	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999918113243867	WITHOUT_CLASSIFICATION	8.188675613314561E-6	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999985295402615	WITHOUT_CLASSIFICATION	1.4704597385112968E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999776618419013	WITHOUT_CLASSIFICATION	2.2338158098703188E-5	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.999999797667689	WITHOUT_CLASSIFICATION	2.023323110767691E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9998499807313107	WITHOUT_CLASSIFICATION	1.5001926868921006E-4	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9998815733332012	WITHOUT_CLASSIFICATION	1.1842666679888972E-4	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999999456551782	WITHOUT_CLASSIFICATION	5.434482173638121E-8	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9979205250444338	WITHOUT_CLASSIFICATION	0.0020794749555661965	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9948923617350176	WITHOUT_CLASSIFICATION	0.00510763826498242	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9999707291609421	WITHOUT_CLASSIFICATION	2.9270839057929333E-5	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999967521690115	WITHOUT_CLASSIFICATION	3.2478309884802065E-6	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999971914880219	WITHOUT_CLASSIFICATION	2.808511978074225E-6	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999996832938567	WITHOUT_CLASSIFICATION	3.1670614333573333E-7	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999759368975879	WITHOUT_CLASSIFICATION	2.4063102412071438E-5	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9621170607827831	WITHOUT_CLASSIFICATION	0.0378829392172169	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999988540753664	WITHOUT_CLASSIFICATION	1.1459246335584105E-6	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999976536360639	WITHOUT_CLASSIFICATION	2.346363936238562E-6	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999995182714393	WITHOUT_CLASSIFICATION	4.817285607642254E-7	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999520409025797	WITHOUT_CLASSIFICATION	4.795909742027132E-5	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.999950954336405	WITHOUT_CLASSIFICATION	4.904566359498462E-5	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999880498648593	WITHOUT_CLASSIFICATION	1.1950135140664136E-5	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999186519111823	WITHOUT_CLASSIFICATION	8.134808881772174E-5	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8897151923421656	WITHOUT_CLASSIFICATION	0.11028480765783437	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9999963651295349	WITHOUT_CLASSIFICATION	3.634870465209026E-6	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.999818174339263	WITHOUT_CLASSIFICATION	1.8182566073711242E-4	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999997907567127	WITHOUT_CLASSIFICATION	2.0924328717115365E-7	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.999999883758527	WITHOUT_CLASSIFICATION	1.1624147301092095E-7	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9997306239245421	WITHOUT_CLASSIFICATION	2.6937607545790034E-4	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999977841667391	WITHOUT_CLASSIFICATION	2.2158332608039524E-6	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999520772449043	WITHOUT_CLASSIFICATION	4.7922755095609316E-5	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999651755497688	WITHOUT_CLASSIFICATION	3.482445023117055E-5	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9996542358967392	WITHOUT_CLASSIFICATION	3.457641032608455E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9987849909737112	WITHOUT_CLASSIFICATION	0.0012150090262888229	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9984990157092062	WITHOUT_CLASSIFICATION	0.0015009842907937705	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999954305127398	WITHOUT_CLASSIFICATION	4.569487260214712E-6	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9955600113367297	WITHOUT_CLASSIFICATION	0.004439988663270281	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999978999480283	WITHOUT_CLASSIFICATION	2.1000519716469743E-6	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.999987720578589	WITHOUT_CLASSIFICATION	1.2279421410925638E-5	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999952070431815	WITHOUT_CLASSIFICATION	4.792956818552113E-6	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.7213123715046519	WITHOUT_CLASSIFICATION	0.2786876284953481	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997321356138318	WITHOUT_CLASSIFICATION	2.678643861682487E-4	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997321356138318	WITHOUT_CLASSIFICATION	2.678643861682487E-4	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999597423514629	WITHOUT_CLASSIFICATION	4.0257648537197176E-5	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999965090536975	WITHOUT_CLASSIFICATION	3.4909463025060174E-6	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999977496707353	WITHOUT_CLASSIFICATION	2.25032926464588E-6	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999992564421835	WITHOUT_CLASSIFICATION	7.435578165004092E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999701895825	WITHOUT_CLASSIFICATION	2.981041746631657E-8	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9987923428102161	WITHOUT_CLASSIFICATION	0.0012076571897838414	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999764221787867	WITHOUT_CLASSIFICATION	2.3577821213241683E-5	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999539781891219	WITHOUT_CLASSIFICATION	4.602181087810713E-5	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.999980104095254	WITHOUT_CLASSIFICATION	1.989590474600805E-5	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9998296398966694	WITHOUT_CLASSIFICATION	1.703601033306766E-4	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999663455958404	WITHOUT_CLASSIFICATION	3.365440415953469E-5	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999983082784223	WITHOUT_CLASSIFICATION	1.691721577771488E-6	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999991618648036	WITHOUT_CLASSIFICATION	8.38135196470187E-7	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999324510052243	WITHOUT_CLASSIFICATION	6.754899477566092E-5	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998879990783339	WITHOUT_CLASSIFICATION	1.1200092166612632E-4	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999984466162894	WITHOUT_CLASSIFICATION	1.5533837106173504E-6	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999978054977239	WITHOUT_CLASSIFICATION	2.1945022760061432E-6	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999829196291695	WITHOUT_CLASSIFICATION	1.7080370830433336E-5	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999957180533773	WITHOUT_CLASSIFICATION	4.281946622748465E-6	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999716305324028	WITHOUT_CLASSIFICATION	2.8369467597133833E-5	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999977628548592	WITHOUT_CLASSIFICATION	2.2371451406959875E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9968659656366797	WITHOUT_CLASSIFICATION	0.0031340343633201565	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999924858228291	WITHOUT_CLASSIFICATION	7.514177170950994E-6	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9895422467189104	WITHOUT_CLASSIFICATION	0.010457753281089575	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999863325372571	WITHOUT_CLASSIFICATION	1.3667462742837968E-5	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999465186298266	WITHOUT_CLASSIFICATION	5.3481370173459565E-5	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999150985535602	WITHOUT_CLASSIFICATION	8.490144643976954E-5	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999739426552	WITHOUT_CLASSIFICATION	2.6057344820035076E-8	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999225499048834	WITHOUT_CLASSIFICATION	7.745009511659728E-5	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9970507215070359	WITHOUT_CLASSIFICATION	0.002949278492964127	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9997566233186999	WITHOUT_CLASSIFICATION	2.4337668130017771E-4	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999998771882518	WITHOUT_CLASSIFICATION	1.2281174825381232E-7	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999922958924062	WITHOUT_CLASSIFICATION	7.70410759372592E-6	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999435223139347	WITHOUT_CLASSIFICATION	5.6477686065401363E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999922958924062	WITHOUT_CLASSIFICATION	7.70410759372592E-6	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9998531867530438	WITHOUT_CLASSIFICATION	1.4681324695611575E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999994954975298	WITHOUT_CLASSIFICATION	5.045024702008039E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999994954975298	WITHOUT_CLASSIFICATION	5.045024702008039E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999994954975298	WITHOUT_CLASSIFICATION	5.045024702008039E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999999405587447	WITHOUT_CLASSIFICATION	5.944125521125899E-8	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999999405587447	WITHOUT_CLASSIFICATION	5.944125521125899E-8	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.999999881523633	WITHOUT_CLASSIFICATION	1.1847636699324153E-7	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9982137800484785	WITHOUT_CLASSIFICATION	0.001786219951521538	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999984504211	WITHOUT_CLASSIFICATION	1.5495788898454624E-9	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9996611199231837	WITHOUT_CLASSIFICATION	3.38880076816364E-4	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999981312723571	WITHOUT_CLASSIFICATION	1.868727642761516E-6	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9998044428283501	WITHOUT_CLASSIFICATION	1.955571716498869E-4	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9997609504425806	WITHOUT_CLASSIFICATION	2.3904955741947572E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999987660643122	WITHOUT_CLASSIFICATION	1.2339356878172635E-6	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.999970594701605	WITHOUT_CLASSIFICATION	2.9405298394973438E-5	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999995123027785	WITHOUT_CLASSIFICATION	4.876972213850765E-7	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999999077754003	WITHOUT_CLASSIFICATION	9.222459972483538E-8	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999845025297807	WITHOUT_CLASSIFICATION	1.5497470219328932E-5	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999964508854746	WITHOUT_CLASSIFICATION	3.5491145253531993E-6	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999880096483248	WITHOUT_CLASSIFICATION	1.1990351675243338E-5	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999967612660725	WITHOUT_CLASSIFICATION	3.238733927540226E-6	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999999088144611	WITHOUT_CLASSIFICATION	9.118553892337174E-8	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999989053822342	WITHOUT_CLASSIFICATION	1.09461776576518E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999978169124911	WITHOUT_CLASSIFICATION	2.1830875087783626E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999978169124911	WITHOUT_CLASSIFICATION	2.1830875087783626E-6	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999984539837012	WITHOUT_CLASSIFICATION	1.546016298818765E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999993786038609	WITHOUT_CLASSIFICATION	6.213961391476511E-7	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999993786038609	WITHOUT_CLASSIFICATION	6.213961391476511E-7	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999801593089852	WITHOUT_CLASSIFICATION	1.9840691014821677E-5	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999990728457757	WITHOUT_CLASSIFICATION	9.271542243367224E-7	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999953795663133	WITHOUT_CLASSIFICATION	4.620433686740304E-6	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999908798488406	WITHOUT_CLASSIFICATION	9.120151159437778E-6	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999998215532164	WITHOUT_CLASSIFICATION	1.784467836088766E-7	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.999992388387543	WITHOUT_CLASSIFICATION	7.611612457049053E-6	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999994376019145	WITHOUT_CLASSIFICATION	5.62398085471651E-7	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9967435356114502	WITHOUT_CLASSIFICATION	0.0032564643885496947	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999509286512	WITHOUT_CLASSIFICATION	4.907134889683983E-8	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9981776107988106	WITHOUT_CLASSIFICATION	0.0018223892011893276	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9998015190286412	WITHOUT_CLASSIFICATION	1.9848097135874519E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999491303751087	WITHOUT_CLASSIFICATION	5.0869624891281905E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.999976793993872	WITHOUT_CLASSIFICATION	2.320600612799724E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999905852712	WITHOUT_CLASSIFICATION	9.41472872068493E-9	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999987660643122	WITHOUT_CLASSIFICATION	1.2339356878172635E-6	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998898380945663	WITHOUT_CLASSIFICATION	1.1016190543365968E-4	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999431644558	WITHOUT_CLASSIFICATION	5.6835544178524595E-8	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999854702715163	WITHOUT_CLASSIFICATION	1.4529728483713187E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999854702715163	WITHOUT_CLASSIFICATION	1.4529728483713187E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999951606020058	WITHOUT_CLASSIFICATION	4.839397994245681E-6	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999953608815204	WITHOUT_CLASSIFICATION	4.639118479660731E-6	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999987205982652	WITHOUT_CLASSIFICATION	1.279401734761868E-6	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999982337084138	WITHOUT_CLASSIFICATION	1.766291586277456E-6	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999640640496031	WITHOUT_CLASSIFICATION	3.593595039685575E-5	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999656963003938	WITHOUT_CLASSIFICATION	3.430369960616183E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999995564946499	WITHOUT_CLASSIFICATION	4.435053499870768E-7	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999985593713826	WITHOUT_CLASSIFICATION	1.4406286173894295E-5	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.999825508219857	WITHOUT_CLASSIFICATION	1.7449178014281497E-4	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999872643610557	WITHOUT_CLASSIFICATION	1.273563894437141E-5	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999546395904194	WITHOUT_CLASSIFICATION	4.536040958048188E-5	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999934712209337	WITHOUT_CLASSIFICATION	6.528779066233358E-6	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8060952352074013	WITHOUT_CLASSIFICATION	0.19390476479259858	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.999851901892045	WITHOUT_CLASSIFICATION	1.4809810795498855E-4	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999928398594996	WITHOUT_CLASSIFICATION	7.160140500468448E-6	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999999922185883	WITHOUT_CLASSIFICATION	7.781411712567554E-9	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999996423496894	WITHOUT_CLASSIFICATION	3.5765031056259837E-7	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999942745603231	WITHOUT_CLASSIFICATION	5.7254396769721226E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999024271625984	WITHOUT_CLASSIFICATION	9.757283740166718E-5	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999996256612672	WITHOUT_CLASSIFICATION	3.743387327390905E-7	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999624681326	WITHOUT_CLASSIFICATION	3.7531867484421486E-8	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999686347633756	WITHOUT_CLASSIFICATION	3.1365236624420574E-5	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999922585723551	WITHOUT_CLASSIFICATION	7.741427644859226E-6	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999997079998	WITHOUT_CLASSIFICATION	2.9200022036392005E-10	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999998743531113	WITHOUT_CLASSIFICATION	1.256468886250287E-7	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999949322811436	WITHOUT_CLASSIFICATION	5.0677188564399646E-6	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999665290813571	WITHOUT_CLASSIFICATION	3.347091864293534E-5	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9987543778614426	WITHOUT_CLASSIFICATION	0.0012456221385573612	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999459206103612	WITHOUT_CLASSIFICATION	5.407938963886231E-5	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999175440872909	WITHOUT_CLASSIFICATION	8.245591270905767E-5	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9995804091231544	WITHOUT_CLASSIFICATION	4.195908768455943E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999998761478852	WITHOUT_CLASSIFICATION	1.2385211479577408E-6	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999831029789611	WITHOUT_CLASSIFICATION	1.6897021038928698E-5	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9997301875440043	WITHOUT_CLASSIFICATION	2.6981245599560296E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999976444693952	WITHOUT_CLASSIFICATION	2.3555306048023886E-6	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999994681288692	WITHOUT_CLASSIFICATION	5.318711306901671E-7	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9987543778614426	WITHOUT_CLASSIFICATION	0.0012456221385573612	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999998042631486	WITHOUT_CLASSIFICATION	1.957368514186283E-7	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999976444693952	WITHOUT_CLASSIFICATION	2.3555306048023886E-6	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999801275224519	WITHOUT_CLASSIFICATION	1.987247754805199E-5	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999995405727905	WITHOUT_CLASSIFICATION	4.594272094777691E-7	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999450337493	WITHOUT_CLASSIFICATION	5.496625064270965E-8	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999776663953562	WITHOUT_CLASSIFICATION	2.2333604643779013E-5	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999973648520648	WITHOUT_CLASSIFICATION	2.6351479352195407E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999987139842987	WITHOUT_CLASSIFICATION	1.286015701168576E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999987139842987	WITHOUT_CLASSIFICATION	1.286015701168576E-6	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998912305676294	WITHOUT_CLASSIFICATION	1.0876943237063212E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999996779108326	WITHOUT_CLASSIFICATION	3.220891674133049E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998578143047	WITHOUT_CLASSIFICATION	1.421856953229458E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998578143047	WITHOUT_CLASSIFICATION	1.421856953229458E-7	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999886591420423	WITHOUT_CLASSIFICATION	1.1340857957760381E-5	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997802943856173	WITHOUT_CLASSIFICATION	2.1970561438256324E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9997305672706379	WITHOUT_CLASSIFICATION	2.694327293620669E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9997305672706379	WITHOUT_CLASSIFICATION	2.694327293620669E-4	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.999959205244009	WITHOUT_CLASSIFICATION	4.079475599106211E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999911624809495	WITHOUT_CLASSIFICATION	8.837519050433114E-6	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999998254644358	WITHOUT_CLASSIFICATION	1.7453556417294923E-7	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999951435792237	WITHOUT_CLASSIFICATION	4.8564207762711824E-6	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9995487055191895	WITHOUT_CLASSIFICATION	4.512944808104475E-4	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9984581679696135	WITHOUT_CLASSIFICATION	0.0015418320303865005	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9961997651624039	WITHOUT_CLASSIFICATION	0.003800234837595907	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999994392393469	WITHOUT_CLASSIFICATION	5.607606530806605E-7	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9997838089086508	WITHOUT_CLASSIFICATION	2.161910913491787E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9998819325729271	WITHOUT_CLASSIFICATION	1.180674270728529E-4	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9996746068395106	WITHOUT_CLASSIFICATION	3.2539316048940165E-4	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996289793724576	WITHOUT_CLASSIFICATION	3.7102062754235685E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999745133286344	WITHOUT_CLASSIFICATION	2.5486671365617792E-5	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9991190261820848	WITHOUT_CLASSIFICATION	8.809738179151204E-4	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999998391553192	WITHOUT_CLASSIFICATION	1.6084468087090187E-7	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9998739368285391	WITHOUT_CLASSIFICATION	1.2606317146096277E-4	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9993199059024555	WITHOUT_CLASSIFICATION	6.800940975445634E-4	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999059169606024	WITHOUT_CLASSIFICATION	9.408303939769878E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9900607574987245	WITHOUT_CLASSIFICATION	0.009939242501275522	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9998935200272955	WITHOUT_CLASSIFICATION	1.0647997270442033E-4	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999911862728027	WITHOUT_CLASSIFICATION	8.813727197189233E-6	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999986639517535	WITHOUT_CLASSIFICATION	1.3360482464585778E-6	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999975662389944	WITHOUT_CLASSIFICATION	2.433761005513675E-6	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999989275135528	WITHOUT_CLASSIFICATION	1.0724864471513059E-6	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999990139674894	WITHOUT_CLASSIFICATION	9.86032510665884E-7	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999945949436958	WITHOUT_CLASSIFICATION	5.405056304152741E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9006409957830759	WITHOUT_CLASSIFICATION	0.09935900421692408	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999877490426505	WITHOUT_CLASSIFICATION	1.2250957349410915E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999994857979857	WITHOUT_CLASSIFICATION	5.142020142601175E-7	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999994857979857	WITHOUT_CLASSIFICATION	5.142020142601175E-7	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999992286521051	WITHOUT_CLASSIFICATION	7.713478948242759E-7	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999567404299	WITHOUT_CLASSIFICATION	4.325957013596999E-8	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999913274396327	WITHOUT_CLASSIFICATION	8.672560367289377E-6	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9996582566661377	WITHOUT_CLASSIFICATION	3.4174333386230655E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999993143555289	WITHOUT_CLASSIFICATION	6.856444711967908E-7	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9998126512718211	WITHOUT_CLASSIFICATION	1.8734872817883643E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9544138001772514	WITHOUT_CLASSIFICATION	0.04558619982274864	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999966014319848	WITHOUT_CLASSIFICATION	3.3985680151449956E-6	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999609349597371	WITHOUT_CLASSIFICATION	3.906504026289831E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999874971813933	WITHOUT_CLASSIFICATION	1.2502818606698274E-5	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999778479854	WITHOUT_CLASSIFICATION	2.2152014579499424E-8	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999999084760032	WITHOUT_CLASSIFICATION	9.152399689761292E-8	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999815546110314	WITHOUT_CLASSIFICATION	1.844538896859404E-5	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999841581175121	WITHOUT_CLASSIFICATION	1.5841882488018584E-5	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9991487012734458	WITHOUT_CLASSIFICATION	8.512987265542282E-4	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999787572189793	WITHOUT_CLASSIFICATION	2.1242781020596132E-5	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999898143826461	WITHOUT_CLASSIFICATION	1.0185617353834325E-5	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999998225555543	WITHOUT_CLASSIFICATION	1.7744444569379662E-7	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9999017094948188	WITHOUT_CLASSIFICATION	9.82905051812048E-5	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9998537828559007	WITHOUT_CLASSIFICATION	1.4621714409927824E-4	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999979543743711	WITHOUT_CLASSIFICATION	2.0456256288819656E-6	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999886803199813	WITHOUT_CLASSIFICATION	1.1319680018608038E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999961311046216	WITHOUT_CLASSIFICATION	3.868895378436388E-6	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999949435565	WITHOUT_CLASSIFICATION	5.056443467648189E-9	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999820893557	WITHOUT_CLASSIFICATION	1.7910644346945496E-8	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999898142303231	WITHOUT_CLASSIFICATION	1.0185769676984615E-5	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.8396834100575702	WITHOUT_CLASSIFICATION	0.1603165899424297	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995620127467594	WITHOUT_CLASSIFICATION	4.379872532407099E-4	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.99999932249575	WITHOUT_CLASSIFICATION	6.775042499787345E-7	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999987738759653	WITHOUT_CLASSIFICATION	1.2261240347807977E-6	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999995881250339	WITHOUT_CLASSIFICATION	4.118749661040082E-7	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999976411500449	WITHOUT_CLASSIFICATION	2.3588499551246754E-6	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999977239737619	WITHOUT_CLASSIFICATION	2.2760262382129305E-6	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999977157142995	WITHOUT_CLASSIFICATION	2.284285700544348E-6	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999978678942911	WITHOUT_CLASSIFICATION	2.1321057089150347E-6	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999371587041055	WITHOUT_CLASSIFICATION	6.284129589449454E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999980363828522	WITHOUT_CLASSIFICATION	1.9636171476753366E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9955723137263287	WITHOUT_CLASSIFICATION	0.004427686273671236	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999947586092	WITHOUT_CLASSIFICATION	5.241390762750865E-9	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9980956297048963	WITHOUT_CLASSIFICATION	0.0019043702951037007	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.8776138200934511	WITHOUT_CLASSIFICATION	0.12238617990654886	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999968124076387	WITHOUT_CLASSIFICATION	3.1875923612080414E-6	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999742267394175	WITHOUT_CLASSIFICATION	2.5773260582486164E-5	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999742267394175	WITHOUT_CLASSIFICATION	2.5773260582486164E-5	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999900089465348	WITHOUT_CLASSIFICATION	9.991053465228304E-6	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999928216171016	WITHOUT_CLASSIFICATION	7.1783828983935884E-6	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999928764756322	WITHOUT_CLASSIFICATION	7.123524367895642E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999933555821517	WITHOUT_CLASSIFICATION	6.644417848295266E-6	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999961286518964	WITHOUT_CLASSIFICATION	3.871348103705803E-6	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999992755531952	WITHOUT_CLASSIFICATION	7.24446804805811E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999989474769702	WITHOUT_CLASSIFICATION	1.0525230298466925E-6	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999799509581818	WITHOUT_CLASSIFICATION	2.004904181813284E-5	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999291976363263	WITHOUT_CLASSIFICATION	7.080236367381286E-5	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999745355766215	WITHOUT_CLASSIFICATION	2.5464423378494713E-5	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999746102418975	WITHOUT_CLASSIFICATION	2.5389758102463848E-5	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999958387338597	WITHOUT_CLASSIFICATION	4.161266140329674E-6	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.99999362612603	WITHOUT_CLASSIFICATION	6.373873969937051E-6	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999576565970181	WITHOUT_CLASSIFICATION	4.234340298193357E-5	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999992302925272	WITHOUT_CLASSIFICATION	7.697074727459929E-7	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999984272079705	WITHOUT_CLASSIFICATION	1.5727920295329773E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999995687549409	WITHOUT_CLASSIFICATION	4.3124505917733325E-7	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999966212434193	WITHOUT_CLASSIFICATION	3.378756580651302E-6	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999982342439484	WITHOUT_CLASSIFICATION	1.7657560516677866E-6	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.99999605803182	WITHOUT_CLASSIFICATION	3.941968180051452E-6	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999985997236904	WITHOUT_CLASSIFICATION	1.4002763094619456E-6	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999964251601758	WITHOUT_CLASSIFICATION	3.5748398240853505E-6	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999702084068456	WITHOUT_CLASSIFICATION	2.9791593154407935E-5	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999452447978513	WITHOUT_CLASSIFICATION	5.475520214875556E-5	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999909735001	WITHOUT_CLASSIFICATION	9.02649985986829E-9	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999764579671	WITHOUT_CLASSIFICATION	2.3542032902761134E-8	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999655441006	WITHOUT_CLASSIFICATION	3.4455899304337024E-8	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999942291323	WITHOUT_CLASSIFICATION	5.770867692284719E-9	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999984721555577	WITHOUT_CLASSIFICATION	1.5278444422231662E-6	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999980489634598	WITHOUT_CLASSIFICATION	1.9510365403008894E-6	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999997052305123	WITHOUT_CLASSIFICATION	2.9476948771644183E-7	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9997101783253675	WITHOUT_CLASSIFICATION	2.898216746324703E-4	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999966923962474	WITHOUT_CLASSIFICATION	3.307603752442907E-6	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999529162710957	WITHOUT_CLASSIFICATION	4.708372890417606E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9955723137263287	WITHOUT_CLASSIFICATION	0.004427686273671236	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999944125942919	WITHOUT_CLASSIFICATION	5.587405708137161E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999804099919988	WITHOUT_CLASSIFICATION	1.959000800125303E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999804099919988	WITHOUT_CLASSIFICATION	1.959000800125303E-5	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999999642875358	WITHOUT_CLASSIFICATION	3.571246419367112E-8	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999850620762211	WITHOUT_CLASSIFICATION	1.4937923779077055E-5	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999963370875726	WITHOUT_CLASSIFICATION	3.6629124274471034E-6	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9999216733324255	WITHOUT_CLASSIFICATION	7.832666757456718E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9998770086892218	WITHOUT_CLASSIFICATION	1.2299131077827974E-4	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999726510753834	WITHOUT_CLASSIFICATION	2.7348924616525708E-5	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9998192547390031	WITHOUT_CLASSIFICATION	1.8074526099686987E-4	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999329823972783	WITHOUT_CLASSIFICATION	6.701760272160025E-5	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999414514219729	WITHOUT_CLASSIFICATION	5.854857802698727E-5	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9997264003478435	WITHOUT_CLASSIFICATION	2.7359965215640355E-4	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9998565352081213	WITHOUT_CLASSIFICATION	1.434647918786112E-4	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9995888978759017	WITHOUT_CLASSIFICATION	4.1110212409831306E-4	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999822968687015	WITHOUT_CLASSIFICATION	1.7703131298400483E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9989471581822225	WITHOUT_CLASSIFICATION	0.0010528418177775517	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999065201884839	WITHOUT_CLASSIFICATION	9.347981151611244E-5	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9995295036853197	WITHOUT_CLASSIFICATION	4.704963146803068E-4	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999827940747225	WITHOUT_CLASSIFICATION	1.7205925277510026E-5	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999744411899444	WITHOUT_CLASSIFICATION	2.55588100555949E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999924261916882	WITHOUT_CLASSIFICATION	7.573808311911328E-6	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999646006877401	WITHOUT_CLASSIFICATION	3.5399312260000495E-5	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999817064854278	WITHOUT_CLASSIFICATION	1.8293514572101803E-5	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999706048687259	WITHOUT_CLASSIFICATION	2.9395131274133053E-5	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999252993149578	WITHOUT_CLASSIFICATION	7.470068504214519E-5	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.999977577220751	WITHOUT_CLASSIFICATION	2.242277924906599E-5	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999998583714729	WITHOUT_CLASSIFICATION	1.4162852706890918E-7	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9996716283474393	WITHOUT_CLASSIFICATION	3.2837165256082015E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999988995178003	WITHOUT_CLASSIFICATION	1.1004821996818016E-6	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999753831836437	WITHOUT_CLASSIFICATION	2.4616816356399926E-5	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999999588499435	WITHOUT_CLASSIFICATION	4.1150056494499324E-7	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.999945984923742	WITHOUT_CLASSIFICATION	5.401507625807392E-5	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9999966342278193	WITHOUT_CLASSIFICATION	3.3657721807886473E-6	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999868071638526	WITHOUT_CLASSIFICATION	1.319283614753038E-5	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999685740495051	WITHOUT_CLASSIFICATION	3.142595049497457E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999669185779172	WITHOUT_CLASSIFICATION	3.308142208268777E-5	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9989755259240637	WITHOUT_CLASSIFICATION	0.001024474075936331	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999440300050462	WITHOUT_CLASSIFICATION	5.596999495395497E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999987280303596	WITHOUT_CLASSIFICATION	1.2719696404751284E-6	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9996716283474393	WITHOUT_CLASSIFICATION	3.2837165256082015E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999988995178003	WITHOUT_CLASSIFICATION	1.1004821996818016E-6	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999753831836437	WITHOUT_CLASSIFICATION	2.4616816356399926E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.999945984923742	WITHOUT_CLASSIFICATION	5.401507625807392E-5	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9985435634777496	WITHOUT_CLASSIFICATION	0.0014564365222503655	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999959060655849	WITHOUT_CLASSIFICATION	4.093934415143126E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999934166941312	WITHOUT_CLASSIFICATION	6.583305868795024E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999950728956069	WITHOUT_CLASSIFICATION	4.927104393186266E-6	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9997530858020593	WITHOUT_CLASSIFICATION	2.469141979407352E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999996208042	WITHOUT_CLASSIFICATION	3.791958259909985E-10	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999808013722036	WITHOUT_CLASSIFICATION	1.9198627796453974E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999973337695216	WITHOUT_CLASSIFICATION	2.666230478377916E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999992245767454	WITHOUT_CLASSIFICATION	7.754232547363508E-7	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999998144687615	WITHOUT_CLASSIFICATION	1.8553123842310297E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999999980194006	WITHOUT_CLASSIFICATION	1.9805993937426305E-8	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999978673695166	WITHOUT_CLASSIFICATION	2.132630483364259E-6	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999549087379928	WITHOUT_CLASSIFICATION	4.509126200723314E-5	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999719197717224	WITHOUT_CLASSIFICATION	2.8080228277517175E-5	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999971187755183	WITHOUT_CLASSIFICATION	2.8812244816180183E-6	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999932047033526	WITHOUT_CLASSIFICATION	6.795296647333859E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9998625505668508	WITHOUT_CLASSIFICATION	1.374494331492393E-4	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999794435983984	WITHOUT_CLASSIFICATION	2.0556401601599924E-5	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999946895953744	WITHOUT_CLASSIFICATION	5.310404625592073E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999987280303596	WITHOUT_CLASSIFICATION	1.2719696404751284E-6	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999959060655849	WITHOUT_CLASSIFICATION	4.093934415143126E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999934166941312	WITHOUT_CLASSIFICATION	6.583305868795024E-5	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9997530858020593	WITHOUT_CLASSIFICATION	2.469141979407352E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999996208042	WITHOUT_CLASSIFICATION	3.791958259909985E-10	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999808013722036	WITHOUT_CLASSIFICATION	1.9198627796453974E-5	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999973337695216	WITHOUT_CLASSIFICATION	2.666230478377916E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999808644377073	WITHOUT_CLASSIFICATION	1.9135562292689243E-5	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9986248342545297	WITHOUT_CLASSIFICATION	0.0013751657454701856	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999967992305	WITHOUT_CLASSIFICATION	3.200769518973601E-9	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999975579782	WITHOUT_CLASSIFICATION	2.4420218594761732E-9	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999904037463568	WITHOUT_CLASSIFICATION	9.59625364313737E-6	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999904037463568	WITHOUT_CLASSIFICATION	9.59625364313737E-6	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999933437884828	WITHOUT_CLASSIFICATION	6.656211517178818E-6	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9989536934088895	WITHOUT_CLASSIFICATION	0.0010463065911105766	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999999857708093	WITHOUT_CLASSIFICATION	1.4229190669002385E-8	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999993126468286	WITHOUT_CLASSIFICATION	6.873531713940696E-7	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999965938419868	WITHOUT_CLASSIFICATION	3.406158013136905E-6	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999994510620517	WITHOUT_CLASSIFICATION	5.489379483269139E-7	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999940145380827	WITHOUT_CLASSIFICATION	5.9854619173209666E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9998436464560501	WITHOUT_CLASSIFICATION	1.5635354394995019E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999932352768	WITHOUT_CLASSIFICATION	6.7647232865576144E-9	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9998289518933242	WITHOUT_CLASSIFICATION	1.7104810667590678E-4	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9724538296502111	WITHOUT_CLASSIFICATION	0.027546170349788894	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9993901679400625	WITHOUT_CLASSIFICATION	6.098320599375142E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999952027590941	WITHOUT_CLASSIFICATION	4.797240905867822E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9997028467845156	WITHOUT_CLASSIFICATION	2.9715321548436156E-4	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999995937430882	WITHOUT_CLASSIFICATION	4.06256911757465E-7	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999960171284835	WITHOUT_CLASSIFICATION	3.982871516532023E-6	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999258595405859	WITHOUT_CLASSIFICATION	7.414045941412735E-5	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999576301491	WITHOUT_CLASSIFICATION	4.236985080169886E-8	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999999984535607	WITHOUT_CLASSIFICATION	1.546439296737792E-8	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9998573804277737	WITHOUT_CLASSIFICATION	1.4261957222627854E-4	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9785106065163091	DESIGN	0.021489393483690944	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999602661624	WITHOUT_CLASSIFICATION	3.973383762104754E-8	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999996204142	WITHOUT_CLASSIFICATION	3.795857940117312E-10	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9644780023974983	DESIGN	0.03552199760250169	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999568632808	WITHOUT_CLASSIFICATION	4.313671917997073E-8	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9998935376713389	WITHOUT_CLASSIFICATION	1.0646232866114928E-4	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999953511984531	WITHOUT_CLASSIFICATION	4.64880154687842E-6	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9997196290907978	WITHOUT_CLASSIFICATION	2.803709092021702E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999807276964847	WITHOUT_CLASSIFICATION	1.9272303515344735E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999568632808	WITHOUT_CLASSIFICATION	4.313671917997073E-8	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9998935376713389	WITHOUT_CLASSIFICATION	1.0646232866114928E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9997028467845156	WITHOUT_CLASSIFICATION	2.9715321548436156E-4	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9996145845888627	WITHOUT_CLASSIFICATION	3.8541541113736093E-4	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999991352903884	WITHOUT_CLASSIFICATION	8.647096115209515E-7	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999791862017833	WITHOUT_CLASSIFICATION	2.0813798216796096E-5	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9921259332624642	WITHOUT_CLASSIFICATION	0.007874066737535735	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999992987118849	WITHOUT_CLASSIFICATION	7.012881151080161E-7	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999997049266921	WITHOUT_CLASSIFICATION	2.950733079025488E-6	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999945023689177	WITHOUT_CLASSIFICATION	5.4976310822498345E-6	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999994269683142	WITHOUT_CLASSIFICATION	5.730316857740593E-7	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.780570296351107	WITHOUT_CLASSIFICATION	0.219429703648893	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9990775439217396	WITHOUT_CLASSIFICATION	9.224560782603987E-4	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9996527919157683	WITHOUT_CLASSIFICATION	3.4720808423177797E-4	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999475016391869	WITHOUT_CLASSIFICATION	5.249836081318964E-5	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999949307905401	WITHOUT_CLASSIFICATION	5.069209459960031E-6	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999715355153	WITHOUT_CLASSIFICATION	2.8464484697051584E-8	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9988312972680289	WITHOUT_CLASSIFICATION	0.001168702731971084	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999494838525537	WITHOUT_CLASSIFICATION	5.051614744633718E-5	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999215811191655	WITHOUT_CLASSIFICATION	7.841888083450991E-5	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9931908662660167	WITHOUT_CLASSIFICATION	0.006809133733983287	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9995660713671995	WITHOUT_CLASSIFICATION	4.339286328004974E-4	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9980457188601686	WITHOUT_CLASSIFICATION	0.001954281139831371	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999782763254905	WITHOUT_CLASSIFICATION	2.1723674509534935E-5	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.991936250443898	WITHOUT_CLASSIFICATION	0.008063749556101948	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999761129028351	WITHOUT_CLASSIFICATION	2.3887097164939414E-5	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9003913845438112	WITHOUT_CLASSIFICATION	0.09960861545618886	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999963427712932	WITHOUT_CLASSIFICATION	3.6572287067458062E-6	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9998424500519837	WITHOUT_CLASSIFICATION	1.5754994801633025E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9995883627262295	WITHOUT_CLASSIFICATION	4.116372737705123E-4	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9793926004595707	WITHOUT_CLASSIFICATION	0.02060739954042936	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9994232626356392	WITHOUT_CLASSIFICATION	5.76737364360803E-4	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9991278007045744	WITHOUT_CLASSIFICATION	8.721992954256592E-4	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9998887232007644	WITHOUT_CLASSIFICATION	1.112767992356361E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999995903629956	WITHOUT_CLASSIFICATION	4.096370043809148E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999995903629956	WITHOUT_CLASSIFICATION	4.096370043809148E-7	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999952027590941	WITHOUT_CLASSIFICATION	4.797240905867822E-6	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999996487965757	WITHOUT_CLASSIFICATION	3.512034242745579E-7	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998640259066	WITHOUT_CLASSIFICATION	1.3597409333631866E-7	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999976648753542	WITHOUT_CLASSIFICATION	2.3351246457755783E-6	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999994444327852	WITHOUT_CLASSIFICATION	5.555672147864123E-7	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999994444327852	WITHOUT_CLASSIFICATION	5.555672147864123E-7	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999941563940838	WITHOUT_CLASSIFICATION	5.84360591620367E-6	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999990056319574	WITHOUT_CLASSIFICATION	9.94368042654877E-7	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999992103552119	WITHOUT_CLASSIFICATION	7.896447880109288E-7	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999965628648674	WITHOUT_CLASSIFICATION	3.4371351325597207E-6	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999612605273607	WITHOUT_CLASSIFICATION	3.873947263928763E-5	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999995310215477	WITHOUT_CLASSIFICATION	4.6897845225624076E-7	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999343474122855	WITHOUT_CLASSIFICATION	6.56525877145353E-5	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999989751415107	WITHOUT_CLASSIFICATION	1.0248584892091051E-6	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999964950007	WITHOUT_CLASSIFICATION	3.5049992830670855E-9	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999975918814968	WITHOUT_CLASSIFICATION	2.408118503136397E-6	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999899425016338	WITHOUT_CLASSIFICATION	1.005749836633122E-5	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999999731294204	WITHOUT_CLASSIFICATION	2.687057959927231E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998503895301	WITHOUT_CLASSIFICATION	1.4961046989822577E-7	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9998673044876387	WITHOUT_CLASSIFICATION	1.3269551236121447E-4	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999765709940369	WITHOUT_CLASSIFICATION	2.3429005963037446E-5	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9998479082445766	WITHOUT_CLASSIFICATION	1.5209175542341775E-4	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999736451285	WITHOUT_CLASSIFICATION	2.6354871520568293E-8	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999736451285	WITHOUT_CLASSIFICATION	2.6354871520568293E-8	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998854088996	WITHOUT_CLASSIFICATION	1.1459110044219323E-7	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998854088996	WITHOUT_CLASSIFICATION	1.1459110044219323E-7	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999932080064	WITHOUT_CLASSIFICATION	6.791993643480272E-9	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9998937649185922	WITHOUT_CLASSIFICATION	1.0623508140782121E-4	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999987249313275	WITHOUT_CLASSIFICATION	1.2750686725317376E-6	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9995776497205325	WITHOUT_CLASSIFICATION	4.223502794674379E-4	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.998770246994912	WITHOUT_CLASSIFICATION	0.001229753005087971	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999872417744068	WITHOUT_CLASSIFICATION	1.2758225593212016E-5	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999954895909884	WITHOUT_CLASSIFICATION	4.510409011671684E-6	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999999731294204	WITHOUT_CLASSIFICATION	2.687057959927231E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998503895301	WITHOUT_CLASSIFICATION	1.4961046989822577E-7	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999765709940369	WITHOUT_CLASSIFICATION	2.3429005963037446E-5	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999998968261826	WITHOUT_CLASSIFICATION	1.0317381737475225E-7	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.8056278867005843	DESIGN	0.19437211329941578	WITHOUT_CLASSIFICATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9977307408180668	WITHOUT_CLASSIFICATION	0.0022692591819332007	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9924034500223164	WITHOUT_CLASSIFICATION	0.007596549977683511	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999990376465486	WITHOUT_CLASSIFICATION	9.623534513438527E-7	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999768044636724	WITHOUT_CLASSIFICATION	2.319553632761641E-5	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999993703455745	WITHOUT_CLASSIFICATION	6.296544255624824E-7	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.999987350187164	WITHOUT_CLASSIFICATION	1.2649812835932816E-5	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999995834162402	WITHOUT_CLASSIFICATION	4.165837598261363E-7	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999998112395666	WITHOUT_CLASSIFICATION	1.887604333723251E-7	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9819231763819979	DESIGN	0.01807682361800209	WITHOUT_CLASSIFICATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999845660880131	WITHOUT_CLASSIFICATION	1.543391198681555E-5	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999806059913985	WITHOUT_CLASSIFICATION	1.9394008601525187E-5	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9992561808579219	WITHOUT_CLASSIFICATION	7.438191420781195E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9991907614489978	WITHOUT_CLASSIFICATION	8.092385510022991E-4	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999982063847946	WITHOUT_CLASSIFICATION	1.7936152053552537E-6	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999927285094481	WITHOUT_CLASSIFICATION	7.2714905519913545E-6	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999975762192	WITHOUT_CLASSIFICATION	2.4237809176202726E-9	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999737051567	WITHOUT_CLASSIFICATION	2.6294843359251953E-8	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999379150395	WITHOUT_CLASSIFICATION	6.208496053514052E-8	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999996562473152	WITHOUT_CLASSIFICATION	3.437526848280914E-7	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999972453114231	WITHOUT_CLASSIFICATION	2.754688576926784E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9973287689299363	WITHOUT_CLASSIFICATION	0.002671231070063733	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999913581836657	WITHOUT_CLASSIFICATION	8.641816334365995E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999935629416363	WITHOUT_CLASSIFICATION	6.437058363630085E-6	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999955292978193	WITHOUT_CLASSIFICATION	4.470702180693205E-6	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999975274674024	WITHOUT_CLASSIFICATION	2.4725325975191863E-6	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9991595458703818	WITHOUT_CLASSIFICATION	8.404541296181889E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999982953073914	WITHOUT_CLASSIFICATION	1.704692608654338E-6	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999999290935379	WITHOUT_CLASSIFICATION	7.09064620916201E-8	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9996252069784506	WITHOUT_CLASSIFICATION	3.747930215493069E-4	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999939469063726	WITHOUT_CLASSIFICATION	6.053093627424552E-6	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999989838487996	WITHOUT_CLASSIFICATION	1.0161512004912608E-6	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9988874372062001	WITHOUT_CLASSIFICATION	0.0011125627937998797	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999997048218181	WITHOUT_CLASSIFICATION	2.951781819553938E-7	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9998555410848623	WITHOUT_CLASSIFICATION	1.4445891513773518E-4	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999910409973084	WITHOUT_CLASSIFICATION	8.959002691541065E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.999972154976618	WITHOUT_CLASSIFICATION	2.784502338204453E-5	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999992097105734	WITHOUT_CLASSIFICATION	7.902894265281691E-7	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9941751281773958	WITHOUT_CLASSIFICATION	0.005824871822604193	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9991298662174682	WITHOUT_CLASSIFICATION	8.701337825317083E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998640259066	WITHOUT_CLASSIFICATION	1.3597409333631866E-7	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999910409973084	WITHOUT_CLASSIFICATION	8.959002691541065E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999952701354216	WITHOUT_CLASSIFICATION	4.7298645784746555E-6	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9956272971917037	WITHOUT_CLASSIFICATION	0.004372702808296305	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9996695703438364	WITHOUT_CLASSIFICATION	3.304296561635436E-4	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999988831014568	WITHOUT_CLASSIFICATION	1.1168985431934354E-6	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999988831014568	WITHOUT_CLASSIFICATION	1.1168985431934354E-6	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9990352274109796	WITHOUT_CLASSIFICATION	9.647725890202781E-4	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9977144475022333	WITHOUT_CLASSIFICATION	0.002285552497766818	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9818443830693784	WITHOUT_CLASSIFICATION	0.018155616930621673	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999926997561184	WITHOUT_CLASSIFICATION	7.300243881591708E-6	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9995332763984851	WITHOUT_CLASSIFICATION	4.667236015150013E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999998917922766	WITHOUT_CLASSIFICATION	1.0820772344586693E-7	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.999999915936773	WITHOUT_CLASSIFICATION	8.406322701430019E-8	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999148498015895	WITHOUT_CLASSIFICATION	8.515019841057635E-5	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999098619735	WITHOUT_CLASSIFICATION	9.013802649810588E-8	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999098619735	WITHOUT_CLASSIFICATION	9.013802649810588E-8	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999995716477403	WITHOUT_CLASSIFICATION	4.2835225973635225E-7	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999991569161452	WITHOUT_CLASSIFICATION	8.430838548646392E-7	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999998137033331	WITHOUT_CLASSIFICATION	1.862966668267184E-7	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9987243580817489	WITHOUT_CLASSIFICATION	0.001275641918251159	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9995165893140099	WITHOUT_CLASSIFICATION	4.834106859901992E-4	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999827331330131	WITHOUT_CLASSIFICATION	1.7266866986882633E-5	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999997514475609	WITHOUT_CLASSIFICATION	2.485524390386934E-7	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999998720110147	WITHOUT_CLASSIFICATION	1.2798898522292858E-7	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9999955530165665	WITHOUT_CLASSIFICATION	4.446983433516199E-6	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9993778808915313	WITHOUT_CLASSIFICATION	6.221191084686754E-4	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9993904008907476	WITHOUT_CLASSIFICATION	6.095991092524844E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999895753080625	WITHOUT_CLASSIFICATION	1.0424691937491615E-5	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999853675894534	WITHOUT_CLASSIFICATION	1.4632410546525956E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998793990807995	WITHOUT_CLASSIFICATION	1.2060091920052057E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998793990807995	WITHOUT_CLASSIFICATION	1.2060091920052057E-4	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999995154525602	WITHOUT_CLASSIFICATION	4.845474397688181E-7	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999973337695216	WITHOUT_CLASSIFICATION	2.666230478377916E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999815997133383	WITHOUT_CLASSIFICATION	1.8400286661679857E-5	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999039986694154	WITHOUT_CLASSIFICATION	9.600133058459926E-5	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9992116536458772	WITHOUT_CLASSIFICATION	7.88346354122767E-4	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9906811508985752	WITHOUT_CLASSIFICATION	0.009318849101424744	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999989002089021	WITHOUT_CLASSIFICATION	1.0997910977942368E-6	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999851960152236	WITHOUT_CLASSIFICATION	1.4803984776344577E-5	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.999999231201809	WITHOUT_CLASSIFICATION	7.687981909456948E-7	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9999850070853027	WITHOUT_CLASSIFICATION	1.499291469727125E-5	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999999058974004	WITHOUT_CLASSIFICATION	9.410259970993573E-8	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999979326510555	WITHOUT_CLASSIFICATION	2.067348944475801E-6	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9998282940827651	WITHOUT_CLASSIFICATION	1.7170591723487345E-4	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9996955809352962	WITHOUT_CLASSIFICATION	3.044190647038447E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9995072377356452	WITHOUT_CLASSIFICATION	4.927622643548892E-4	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999645959475448	WITHOUT_CLASSIFICATION	3.540405245517672E-5	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999418259473768	WITHOUT_CLASSIFICATION	5.817405262313603E-5	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999991352602899	WITHOUT_CLASSIFICATION	8.647397101198309E-7	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.999999934308031	WITHOUT_CLASSIFICATION	6.56919689748835E-8	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999984157683741	WITHOUT_CLASSIFICATION	1.5842316259517134E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9999285017478496	WITHOUT_CLASSIFICATION	7.149825215032373E-5	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999987200579862	WITHOUT_CLASSIFICATION	1.2799420138176562E-6	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9996496512692926	WITHOUT_CLASSIFICATION	3.5034873070737633E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9956258919650068	WITHOUT_CLASSIFICATION	0.004374108034993182	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.5962634624435318	DESIGN	0.4037365375564682	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999237541637729	WITHOUT_CLASSIFICATION	7.624583622705077E-5	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.999993936010628	WITHOUT_CLASSIFICATION	6.063989371946937E-6	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999878327241893	WITHOUT_CLASSIFICATION	1.21672758107053E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.999999928523586	WITHOUT_CLASSIFICATION	7.147641407522519E-8	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9992291744669212	WITHOUT_CLASSIFICATION	7.708255330788841E-4	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999957122530588	WITHOUT_CLASSIFICATION	4.287746941095513E-6	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9999779032166383	WITHOUT_CLASSIFICATION	2.209678336177167E-5	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999995300013022	WITHOUT_CLASSIFICATION	4.699986979156309E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9984897681951513	WITHOUT_CLASSIFICATION	0.0015102318048486306	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9997019567772384	WITHOUT_CLASSIFICATION	2.980432227615699E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999792348477585	WITHOUT_CLASSIFICATION	2.076515224150104E-5	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999997776787418	WITHOUT_CLASSIFICATION	2.2232125821238221E-7	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9992675244716346	WITHOUT_CLASSIFICATION	7.324755283653507E-4	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999871121313139	WITHOUT_CLASSIFICATION	1.2887868686216068E-5	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9991835614374507	WITHOUT_CLASSIFICATION	8.164385625493944E-4	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999991108813031	WITHOUT_CLASSIFICATION	8.8911869694025E-7	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9997812263565401	WITHOUT_CLASSIFICATION	2.1877364345996425E-4	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999881241375961	WITHOUT_CLASSIFICATION	1.1875862403945439E-5	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9977767487642785	WITHOUT_CLASSIFICATION	0.0022232512357214214	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999983585409448	WITHOUT_CLASSIFICATION	1.6414590552370634E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999553403271675	WITHOUT_CLASSIFICATION	4.465967283256759E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999998589335498	WITHOUT_CLASSIFICATION	1.410664502030037E-7	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998062852277244	WITHOUT_CLASSIFICATION	1.9371477227561078E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997731789782559	WITHOUT_CLASSIFICATION	2.268210217439929E-4	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999568632808	WITHOUT_CLASSIFICATION	4.313671917997073E-8	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999568632808	WITHOUT_CLASSIFICATION	4.313671917997073E-8	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999884980601234	WITHOUT_CLASSIFICATION	1.1501939876735444E-5	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9998943566691344	WITHOUT_CLASSIFICATION	1.0564333086552789E-4	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999995838418518	WITHOUT_CLASSIFICATION	4.161581481627962E-7	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9974189850164114	WITHOUT_CLASSIFICATION	0.002581014983588736	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999876049731203	WITHOUT_CLASSIFICATION	1.2395026879612948E-5	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999204126909071	WITHOUT_CLASSIFICATION	7.958730909297308E-5	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999514852033443	WITHOUT_CLASSIFICATION	4.851479665574098E-5	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999998625707	WITHOUT_CLASSIFICATION	1.3742939675275323E-10	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999949802802	WITHOUT_CLASSIFICATION	5.019719770180005E-9	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9997619096034551	WITHOUT_CLASSIFICATION	2.3809039654483296E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9998795507621889	WITHOUT_CLASSIFICATION	1.2044923781105615E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9998795507621889	WITHOUT_CLASSIFICATION	1.2044923781105615E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9998795507621889	WITHOUT_CLASSIFICATION	1.2044923781105615E-4	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999987110915	WITHOUT_CLASSIFICATION	1.2889084588891066E-9	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9993536037962221	WITHOUT_CLASSIFICATION	6.463962037778591E-4	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9999994472961604	WITHOUT_CLASSIFICATION	5.527038396169884E-7	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999880321292	WITHOUT_CLASSIFICATION	1.1967870836511215E-8	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999880321292	WITHOUT_CLASSIFICATION	1.1967870836511215E-8	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999993004041126	WITHOUT_CLASSIFICATION	6.995958874097332E-7	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9998523255851443	WITHOUT_CLASSIFICATION	1.4767441485569996E-4	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999998929554983	WITHOUT_CLASSIFICATION	1.0704450168103145E-7	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999991044371028	WITHOUT_CLASSIFICATION	8.955628972610638E-7	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9996741553678558	WITHOUT_CLASSIFICATION	3.2584463214429036E-4	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999972711531627	WITHOUT_CLASSIFICATION	2.7288468372041913E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999981190035281	WITHOUT_CLASSIFICATION	1.8809964719991595E-6	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999946857094189	WITHOUT_CLASSIFICATION	5.314290581181412E-6	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999897313157	WITHOUT_CLASSIFICATION	1.0268684446413646E-8	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999730002349106	WITHOUT_CLASSIFICATION	2.699976508938348E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999730002349106	WITHOUT_CLASSIFICATION	2.699976508938348E-5	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999977225764504	WITHOUT_CLASSIFICATION	2.2774235497246343E-6	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999274051097473	WITHOUT_CLASSIFICATION	7.259489025267819E-5	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999998546818245	WITHOUT_CLASSIFICATION	1.4531817542482062E-7	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999963894107247	WITHOUT_CLASSIFICATION	3.6105892754327224E-6	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999945059919835	WITHOUT_CLASSIFICATION	5.4940080165335855E-6	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999948989389684	WITHOUT_CLASSIFICATION	5.101061031518529E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.999999782354138	WITHOUT_CLASSIFICATION	2.1764586185232136E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999931284805361	WITHOUT_CLASSIFICATION	6.871519463803318E-6	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999619718611797	WITHOUT_CLASSIFICATION	3.802813882033189E-5	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999946274537287	WITHOUT_CLASSIFICATION	5.372546271363241E-6	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9997054966819711	WITHOUT_CLASSIFICATION	2.9450331802896053E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999974667670501	WITHOUT_CLASSIFICATION	2.533232949750818E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999950280882174	WITHOUT_CLASSIFICATION	4.971911782653271E-6	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9994718219318985	WITHOUT_CLASSIFICATION	5.281780681013714E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999196948674136	WITHOUT_CLASSIFICATION	8.030513258634147E-5	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999852614983255	WITHOUT_CLASSIFICATION	1.47385016745228E-5	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999827643172984	WITHOUT_CLASSIFICATION	1.72356827015947E-5	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.999901192963272	WITHOUT_CLASSIFICATION	9.880703672807373E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999630987240683	WITHOUT_CLASSIFICATION	3.69012759317495E-5	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999859534323	WITHOUT_CLASSIFICATION	1.4046567647069908E-8	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.8487518097003018	DESIGN	0.15124819029969824	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9994517493642788	WITHOUT_CLASSIFICATION	5.482506357211324E-4	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999994236393737	WITHOUT_CLASSIFICATION	5.763606262594741E-7	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999936966848891	WITHOUT_CLASSIFICATION	6.303315110889048E-6	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999989311782155	WITHOUT_CLASSIFICATION	1.0688217845287553E-6	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9895701484700784	WITHOUT_CLASSIFICATION	0.01042985152992161	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999954819006355	WITHOUT_CLASSIFICATION	4.5180993644317545E-6	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999987233010635	WITHOUT_CLASSIFICATION	1.276698936471556E-6	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9651896775276126	DESIGN	0.03481032247238746	WITHOUT_CLASSIFICATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999968172473072	WITHOUT_CLASSIFICATION	3.1827526929380557E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999968445535096	WITHOUT_CLASSIFICATION	3.1554464904785746E-6	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999867416228657	WITHOUT_CLASSIFICATION	1.3258377134312206E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.999998259841371	WITHOUT_CLASSIFICATION	1.7401586289272067E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999968445535096	WITHOUT_CLASSIFICATION	3.1554464904785746E-6	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999995837183783	WITHOUT_CLASSIFICATION	4.162816216881004E-7	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999837615365467	WITHOUT_CLASSIFICATION	1.6238463453338843E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.999819784946699	WITHOUT_CLASSIFICATION	1.8021505330112215E-4	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.999660760015036	WITHOUT_CLASSIFICATION	3.3923998496399694E-4	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999998683022748	WITHOUT_CLASSIFICATION	1.3169772517289475E-7	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999952375203748	WITHOUT_CLASSIFICATION	4.762479625182561E-6	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999998694090972	WITHOUT_CLASSIFICATION	1.3059090270188945E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999975482272944	WITHOUT_CLASSIFICATION	2.4517727057347235E-6	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999945588132853	WITHOUT_CLASSIFICATION	5.441186714708247E-6	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999959384777771	WITHOUT_CLASSIFICATION	4.061522222913011E-6	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999148356497971	WITHOUT_CLASSIFICATION	8.516435020290698E-5	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9995094259502441	WITHOUT_CLASSIFICATION	4.905740497559781E-4	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999260579656677	WITHOUT_CLASSIFICATION	7.394203433231762E-5	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9998798804373203	WITHOUT_CLASSIFICATION	1.2011956267974505E-4	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.999347395538134	WITHOUT_CLASSIFICATION	6.526044618659059E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999734928938304	WITHOUT_CLASSIFICATION	2.6507106169547938E-5	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.999941013030407	WITHOUT_CLASSIFICATION	5.898696959288822E-5	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999143865357915	WITHOUT_CLASSIFICATION	8.561346420857582E-5	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999979144589606	WITHOUT_CLASSIFICATION	2.085541039476979E-6	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999847803808086	WITHOUT_CLASSIFICATION	1.5219619191407438E-5	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999994509691159	WITHOUT_CLASSIFICATION	5.490308840763295E-7	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999998295475614	WITHOUT_CLASSIFICATION	1.704524385614014E-7	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999992452773624	WITHOUT_CLASSIFICATION	7.547226375566006E-7	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999982180867429	WITHOUT_CLASSIFICATION	1.7819132571546127E-6	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999996695979843	WITHOUT_CLASSIFICATION	3.3040201575695226E-7	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999520739942193	WITHOUT_CLASSIFICATION	4.792600578067861E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999998680769183	WITHOUT_CLASSIFICATION	1.3192308179620969E-7	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999997700081232	WITHOUT_CLASSIFICATION	2.2999187672012122E-7	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999957012601131	WITHOUT_CLASSIFICATION	4.2987398869377376E-6	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999927108532921	WITHOUT_CLASSIFICATION	7.289146707922134E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9999246359127213	WITHOUT_CLASSIFICATION	7.536408727868086E-5	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.986145189955666	WITHOUT_CLASSIFICATION	0.013854810044334032	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.6674125040500469	WITHOUT_CLASSIFICATION	0.332587495949953	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9992404420095317	WITHOUT_CLASSIFICATION	7.595579904682964E-4	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999981841041772	WITHOUT_CLASSIFICATION	1.8158958227888487E-6	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999985456818586	WITHOUT_CLASSIFICATION	1.4543181413726854E-6	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999991553672244	WITHOUT_CLASSIFICATION	8.446327756704235E-7	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999913476406906	WITHOUT_CLASSIFICATION	8.652359309350959E-6	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.99999807287424	WITHOUT_CLASSIFICATION	1.9271257599343744E-6	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999997093264589	WITHOUT_CLASSIFICATION	2.906735410220465E-7	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9997787107504681	WITHOUT_CLASSIFICATION	2.2128924953185137E-4	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999531237563167	WITHOUT_CLASSIFICATION	4.6876243683292196E-5	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999957910344854	WITHOUT_CLASSIFICATION	4.208965514508283E-6	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999965367909875	WITHOUT_CLASSIFICATION	3.463209012469793E-6	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999962492170921	WITHOUT_CLASSIFICATION	3.7507829080227445E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999991537375599	WITHOUT_CLASSIFICATION	8.462624400831323E-7	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.999831738973838	WITHOUT_CLASSIFICATION	1.6826102616191498E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999994746513144	WITHOUT_CLASSIFICATION	5.253486854641596E-7	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999918023636541	WITHOUT_CLASSIFICATION	8.197636345935707E-6	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999955724536856	WITHOUT_CLASSIFICATION	4.427546314349784E-6	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999990921334819	WITHOUT_CLASSIFICATION	9.078665181671912E-7	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999973707663827	WITHOUT_CLASSIFICATION	2.6292336172467E-6	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999090007531926	WITHOUT_CLASSIFICATION	9.099924680741131E-5	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999918023636541	WITHOUT_CLASSIFICATION	8.197636345935707E-6	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.8447765505224265	DESIGN	0.15522344947757355	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.8447765505224265	DESIGN	0.15522344947757355	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999995642486708	WITHOUT_CLASSIFICATION	4.3575132925746003E-7	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999905884547988	WITHOUT_CLASSIFICATION	9.411545201214368E-6	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9996731793950416	WITHOUT_CLASSIFICATION	3.268206049583395E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999247729415464	WITHOUT_CLASSIFICATION	7.522705845363556E-5	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999330161600404	WITHOUT_CLASSIFICATION	6.698383995960075E-5	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999714937167716	WITHOUT_CLASSIFICATION	2.8506283228312166E-5	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999916038304202	WITHOUT_CLASSIFICATION	8.396169579731507E-6	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.6996092485084972	DESIGN	0.30039075149150285	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999939837075656	WITHOUT_CLASSIFICATION	6.0162924343662695E-6	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.999939491891276	WITHOUT_CLASSIFICATION	6.050810872405404E-5	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9998189522044039	WITHOUT_CLASSIFICATION	1.8104779559615275E-4	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999990733333	WITHOUT_CLASSIFICATION	9.266667732729175E-10	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999931843854183	WITHOUT_CLASSIFICATION	6.81561458168002E-6	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999571607178324	WITHOUT_CLASSIFICATION	4.2839282167687694E-5	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9505425162087304	WITHOUT_CLASSIFICATION	0.04945748379126945	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9929183187759942	WITHOUT_CLASSIFICATION	0.007081681224005756	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999886245181	WITHOUT_CLASSIFICATION	1.137548186896524E-8	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998009698375475	WITHOUT_CLASSIFICATION	1.990301624524688E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998009698375475	WITHOUT_CLASSIFICATION	1.990301624524688E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998009698375475	WITHOUT_CLASSIFICATION	1.990301624524688E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998009698375475	WITHOUT_CLASSIFICATION	1.990301624524688E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998009698375475	WITHOUT_CLASSIFICATION	1.990301624524688E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999881147941415	WITHOUT_CLASSIFICATION	1.1885205858542876E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999804183243904	WITHOUT_CLASSIFICATION	1.9581675609575613E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983529913975725	WITHOUT_CLASSIFICATION	0.0016470086024275444	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999826048423945	WITHOUT_CLASSIFICATION	1.7395157605528494E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9953393151482639	WITHOUT_CLASSIFICATION	0.004660684851736138	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999979623071446	WITHOUT_CLASSIFICATION	2.0376928554978966E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999464426101105	WITHOUT_CLASSIFICATION	5.355738988949293E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999606998190554	WITHOUT_CLASSIFICATION	3.930018094456386E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998497073713344	WITHOUT_CLASSIFICATION	1.5029262866568608E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999974081702813	WITHOUT_CLASSIFICATION	2.591829718779859E-6	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999958294217709	WITHOUT_CLASSIFICATION	4.170578229026393E-6	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999734733835004	WITHOUT_CLASSIFICATION	2.652661649954407E-5	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999843124298174	WITHOUT_CLASSIFICATION	1.5687570182553764E-5	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999859147412267	WITHOUT_CLASSIFICATION	1.4085258773223098E-5	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999917650417796	WITHOUT_CLASSIFICATION	8.234958220462402E-6	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999932969203247	WITHOUT_CLASSIFICATION	6.703079675289606E-6	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999902134682536	WITHOUT_CLASSIFICATION	9.786531746318663E-6	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999863235831331	WITHOUT_CLASSIFICATION	1.367641686675212E-5	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999835285076089	WITHOUT_CLASSIFICATION	1.6471492391069363E-5	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999919435167228	WITHOUT_CLASSIFICATION	8.056483277236138E-6	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999930810430246	WITHOUT_CLASSIFICATION	6.918956975437193E-6	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999786643136878	WITHOUT_CLASSIFICATION	2.1335686312314263E-5	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999947422499811	WITHOUT_CLASSIFICATION	5.257750018972758E-6	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999934294727494	WITHOUT_CLASSIFICATION	6.5705272505460885E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999962905437358	WITHOUT_CLASSIFICATION	3.709456264121888E-6	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999897726985824	WITHOUT_CLASSIFICATION	1.0227301417531355E-5	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999863762233335	WITHOUT_CLASSIFICATION	1.3623776666549033E-5	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999900675706096	WITHOUT_CLASSIFICATION	9.932429390321696E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999928997631469	WITHOUT_CLASSIFICATION	7.100236853127835E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999947391160278	WITHOUT_CLASSIFICATION	5.260883972203851E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999841171040873	WITHOUT_CLASSIFICATION	1.588289591268189E-5	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.999981436985243	WITHOUT_CLASSIFICATION	1.8563014757012935E-5	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999737746395241	WITHOUT_CLASSIFICATION	2.6225360475869837E-5	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999787874703634	WITHOUT_CLASSIFICATION	2.1212529636578426E-5	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999947571948942	WITHOUT_CLASSIFICATION	5.2428051058005E-6	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999888041293593	WITHOUT_CLASSIFICATION	1.1195870640789805E-5	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999799365895989	WITHOUT_CLASSIFICATION	2.0063410401010543E-5	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.999982260891614	WITHOUT_CLASSIFICATION	1.773910838596494E-5	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999921014302916	WITHOUT_CLASSIFICATION	7.898569708300802E-6	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999864592951206	WITHOUT_CLASSIFICATION	1.3540704879359899E-5	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999912784965982	WITHOUT_CLASSIFICATION	8.721503401740426E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999861512106297	WITHOUT_CLASSIFICATION	1.3848789370423158E-5	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999950515323501	WITHOUT_CLASSIFICATION	4.9484676499588404E-6	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999932014187904	WITHOUT_CLASSIFICATION	6.798581209567258E-6	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999910382284417	WITHOUT_CLASSIFICATION	8.961771558244325E-6	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999845187134223	WITHOUT_CLASSIFICATION	1.5481286577768975E-5	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999915415018997	WITHOUT_CLASSIFICATION	8.458498100310348E-6	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999976925063723	WITHOUT_CLASSIFICATION	2.307493627628547E-6	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999948538285086	WITHOUT_CLASSIFICATION	5.146171491429129E-6	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.999994421050138	WITHOUT_CLASSIFICATION	5.5789498620068126E-6	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983529913975725	WITHOUT_CLASSIFICATION	0.0016470086024275444	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999885629332084	WITHOUT_CLASSIFICATION	1.1437066791659613E-5	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.999992321056463	WITHOUT_CLASSIFICATION	7.678943537088101E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999750371763467	WITHOUT_CLASSIFICATION	2.4962823653276465E-5	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999798108703487	WITHOUT_CLASSIFICATION	2.018912965128203E-5	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999822670147958	WITHOUT_CLASSIFICATION	1.773298520418246E-5	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.999989749846197	WITHOUT_CLASSIFICATION	1.0250153802946563E-5	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999504497818267	WITHOUT_CLASSIFICATION	4.95502181733727E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999801842081151	WITHOUT_CLASSIFICATION	1.981579188490182E-5	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999795640795415	WITHOUT_CLASSIFICATION	2.043592045851355E-5	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999921478316207	WITHOUT_CLASSIFICATION	7.852168379365996E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999958040726794	WITHOUT_CLASSIFICATION	4.195927320555516E-6	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999950401280469	WITHOUT_CLASSIFICATION	4.95987195324089E-6	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999844068723277	WITHOUT_CLASSIFICATION	1.5593127672246332E-5	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999663711773485	WITHOUT_CLASSIFICATION	3.36288226514949E-5	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999816023921864	WITHOUT_CLASSIFICATION	1.8397607813647026E-5	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999959265221465	WITHOUT_CLASSIFICATION	4.073477853546543E-6	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999799273873928	WITHOUT_CLASSIFICATION	2.007261260725716E-5	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999877899123985	WITHOUT_CLASSIFICATION	1.2210087601608949E-5	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999685097912453	WITHOUT_CLASSIFICATION	3.1490208754725445E-5	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.999980011756009	WITHOUT_CLASSIFICATION	1.9988243991058086E-5	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999621818527015	WITHOUT_CLASSIFICATION	3.781814729851074E-5	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999807818161378	WITHOUT_CLASSIFICATION	1.9218183862225566E-5	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999865508286506	WITHOUT_CLASSIFICATION	1.344917134928134E-5	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999863716706631	WITHOUT_CLASSIFICATION	1.3628329336980153E-5	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999862318668329	WITHOUT_CLASSIFICATION	1.3768133167164518E-5	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999917738622367	WITHOUT_CLASSIFICATION	8.22613776320089E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999944400167873	WITHOUT_CLASSIFICATION	5.559983212778141E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999831678394546	WITHOUT_CLASSIFICATION	1.6832160545375768E-5	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999948269338215	WITHOUT_CLASSIFICATION	5.1730661785040706E-6	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999947496523665	WITHOUT_CLASSIFICATION	5.250347633528744E-6	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999962611370441	WITHOUT_CLASSIFICATION	3.7388629558931233E-6	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999864994615285	WITHOUT_CLASSIFICATION	1.350053847142385E-5	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999930244344103	WITHOUT_CLASSIFICATION	6.975565589602987E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999943551564044	WITHOUT_CLASSIFICATION	5.644843595566491E-6	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999893665719987	WITHOUT_CLASSIFICATION	1.0633428001268378E-5	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.99999175849451	WITHOUT_CLASSIFICATION	8.241505489938484E-6	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999945647426314	WITHOUT_CLASSIFICATION	5.435257368598847E-6	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999908622125699	WITHOUT_CLASSIFICATION	9.137787429948996E-6	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999920027427533	WITHOUT_CLASSIFICATION	7.997257246669321E-6	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999874977405988	WITHOUT_CLASSIFICATION	1.2502259401213917E-5	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999659403127625	WITHOUT_CLASSIFICATION	3.40596872375401E-5	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999842623139068	WITHOUT_CLASSIFICATION	1.573768609312372E-5	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999962607588154	WITHOUT_CLASSIFICATION	3.7392411845938574E-6	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999925097168395	WITHOUT_CLASSIFICATION	7.4902831604475925E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999981123210944	WITHOUT_CLASSIFICATION	1.887678905638555E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999957170207285	WITHOUT_CLASSIFICATION	4.282979271467149E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999924653431049	WITHOUT_CLASSIFICATION	7.534656895009374E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999889683639089	WITHOUT_CLASSIFICATION	1.1031636091070131E-5	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.99999026776559	WITHOUT_CLASSIFICATION	9.7322344099484E-6	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999809010646316	WITHOUT_CLASSIFICATION	1.9098935368437303E-5	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999843685168881	WITHOUT_CLASSIFICATION	1.5631483111950282E-5	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999920961336657	WITHOUT_CLASSIFICATION	7.903866334331828E-6	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999966687386336	WITHOUT_CLASSIFICATION	3.3312613663065277E-6	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999975760855491	WITHOUT_CLASSIFICATION	2.423914450966225E-6	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999965752697751	WITHOUT_CLASSIFICATION	3.4247302248910197E-6	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999957970018137	WITHOUT_CLASSIFICATION	4.202998186229381E-6	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999944912638493	WITHOUT_CLASSIFICATION	5.508736150619458E-6	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999858353703951	WITHOUT_CLASSIFICATION	1.4164629604877575E-5	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999821243797263	WITHOUT_CLASSIFICATION	1.787562027363181E-5	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999872899091353	WITHOUT_CLASSIFICATION	1.2710090864578069E-5	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999966789174927	WITHOUT_CLASSIFICATION	3.321082507282661E-6	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999918088443657	WITHOUT_CLASSIFICATION	8.191155634297598E-6	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999977996047142	WITHOUT_CLASSIFICATION	2.2003952857470008E-6	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999948188395175	WITHOUT_CLASSIFICATION	5.181160482553625E-6	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999919242759309	WITHOUT_CLASSIFICATION	8.075724069135017E-6	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999902699461553	WITHOUT_CLASSIFICATION	9.73005384479913E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999961987453303	WITHOUT_CLASSIFICATION	3.8012546697105926E-6	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999908409308164	WITHOUT_CLASSIFICATION	9.1590691836531E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999939844582069	WITHOUT_CLASSIFICATION	6.0155417930935486E-6	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999871125390656	WITHOUT_CLASSIFICATION	1.2887460934398184E-5	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999878224322699	WITHOUT_CLASSIFICATION	1.2177567730202082E-5	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999897862831952	WITHOUT_CLASSIFICATION	1.0213716804880384E-5	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999934263954352	WITHOUT_CLASSIFICATION	6.573604564903224E-6	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999726998075502	WITHOUT_CLASSIFICATION	2.730019244977468E-5	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999936062218587	WITHOUT_CLASSIFICATION	6.3937781412813495E-6	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999942924055476	WITHOUT_CLASSIFICATION	5.707594452301631E-6	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999960845998445	WITHOUT_CLASSIFICATION	3.915400155465369E-6	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999879298316937	WITHOUT_CLASSIFICATION	1.207016830621357E-5	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999881854488922	WITHOUT_CLASSIFICATION	1.1814551107880376E-5	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999930482720555	WITHOUT_CLASSIFICATION	6.951727944430194E-6	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.999972202334539	WITHOUT_CLASSIFICATION	2.779766546099305E-5	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.99999218698152	WITHOUT_CLASSIFICATION	7.81301847990391E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999875312460403	WITHOUT_CLASSIFICATION	1.246875395969648E-5	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999925912843041	WITHOUT_CLASSIFICATION	7.4087156958876005E-6	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.999983562744763	WITHOUT_CLASSIFICATION	1.6437255236952073E-5	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.999985364319112	WITHOUT_CLASSIFICATION	1.4635680888074338E-5	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999799166637843	WITHOUT_CLASSIFICATION	2.0083336215795057E-5	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9999852402783239	WITHOUT_CLASSIFICATION	1.4759721675999778E-5	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999963738867942	WITHOUT_CLASSIFICATION	3.6261132056881103E-6	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999954546633525	WITHOUT_CLASSIFICATION	4.54533664754355E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999963399044531	WITHOUT_CLASSIFICATION	3.6600955467807226E-6	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.999992311220537	WITHOUT_CLASSIFICATION	7.68877946296579E-6	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999898517070724	WITHOUT_CLASSIFICATION	1.0148292927512362E-5	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999820273642552	WITHOUT_CLASSIFICATION	1.7972635744749423E-5	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999763246164337	WITHOUT_CLASSIFICATION	2.3675383566267272E-5	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999729032075371	WITHOUT_CLASSIFICATION	2.7096792462887503E-5	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999904606309136	WITHOUT_CLASSIFICATION	9.539369086483054E-6	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999478287104635	WITHOUT_CLASSIFICATION	5.2171289536433815E-5	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999851468375053	WITHOUT_CLASSIFICATION	1.4853162494595845E-5	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.999985249958918	WITHOUT_CLASSIFICATION	1.4750041081963106E-5	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999621501874704	WITHOUT_CLASSIFICATION	3.784981252950387E-5	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999786083589826	WITHOUT_CLASSIFICATION	2.139164101736279E-5	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999854971946159	WITHOUT_CLASSIFICATION	1.4502805384022519E-5	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999846520745093	WITHOUT_CLASSIFICATION	1.5347925490835733E-5	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999927013376417	WITHOUT_CLASSIFICATION	7.298662358372815E-6	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999925933713578	WITHOUT_CLASSIFICATION	7.406628642263412E-6	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999758209556656	WITHOUT_CLASSIFICATION	2.4179044334376072E-5	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999786693796464	WITHOUT_CLASSIFICATION	2.1330620353560477E-5	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999859738299188	WITHOUT_CLASSIFICATION	1.4026170081249243E-5	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999961387226681	WITHOUT_CLASSIFICATION	3.861277331893587E-6	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999897954329798	WITHOUT_CLASSIFICATION	1.0204567020173848E-5	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999830348311332	WITHOUT_CLASSIFICATION	1.6965168866865252E-5	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.999996016234525	WITHOUT_CLASSIFICATION	3.983765474928456E-6	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999819871450157	WITHOUT_CLASSIFICATION	1.8012854984210034E-5	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999953024161651	WITHOUT_CLASSIFICATION	4.6975838350000335E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.999983358496872	WITHOUT_CLASSIFICATION	1.6641503127999016E-5	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999807921142819	WITHOUT_CLASSIFICATION	1.9207885718106423E-5	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999922275938374	WITHOUT_CLASSIFICATION	7.772406162610333E-6	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.999991303698258	WITHOUT_CLASSIFICATION	8.696301742134603E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999924137748468	WITHOUT_CLASSIFICATION	7.586225153207145E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999805679563939	WITHOUT_CLASSIFICATION	1.9432043606159844E-5	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999884095204541	WITHOUT_CLASSIFICATION	1.1590479545890181E-5	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999875627354428	WITHOUT_CLASSIFICATION	1.243726455717742E-5	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.999992445271511	WITHOUT_CLASSIFICATION	7.554728489060315E-6	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999909739848206	WITHOUT_CLASSIFICATION	9.026015179345366E-6	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999907124441153	WITHOUT_CLASSIFICATION	9.287555884695333E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999956704143815	WITHOUT_CLASSIFICATION	4.329585618419849E-6	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999795819495813	WITHOUT_CLASSIFICATION	2.041805041878864E-5	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999942556565627	WITHOUT_CLASSIFICATION	5.74434343715348E-6	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999963740063719	WITHOUT_CLASSIFICATION	3.625993628154637E-6	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999969990847448	WITHOUT_CLASSIFICATION	3.000915255299363E-6	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999964616041158	WITHOUT_CLASSIFICATION	3.5383958841354967E-6	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999841522711193	WITHOUT_CLASSIFICATION	1.5847728880839585E-5	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999927800702897	WITHOUT_CLASSIFICATION	7.219929710360833E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999960521752255	WITHOUT_CLASSIFICATION	3.94782477451281E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999972351847847	WITHOUT_CLASSIFICATION	2.7648152153807002E-6	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999893203129828	WITHOUT_CLASSIFICATION	1.06796870170982E-5	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999923712581841	WITHOUT_CLASSIFICATION	7.628741815940292E-6	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999895643228109	WITHOUT_CLASSIFICATION	1.043567718912672E-5	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.999987380485414	WITHOUT_CLASSIFICATION	1.2619514586082059E-5	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999941896065407	WITHOUT_CLASSIFICATION	5.810393459328684E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999946365785277	WITHOUT_CLASSIFICATION	5.363421472291618E-6	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999773591565915	WITHOUT_CLASSIFICATION	2.2640843408493957E-5	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999895385916144	WITHOUT_CLASSIFICATION	1.0461408385583455E-5	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999980270825594	WITHOUT_CLASSIFICATION	1.9729174406128655E-6	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999931251904944	WITHOUT_CLASSIFICATION	6.874809505600783E-6	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999970455232023	WITHOUT_CLASSIFICATION	2.9544767976173767E-6	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999904647028817	WITHOUT_CLASSIFICATION	9.535297118193783E-6	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999938630315774	WITHOUT_CLASSIFICATION	6.1369684225405534E-6	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999928684370307	WITHOUT_CLASSIFICATION	7.1315629693634155E-6	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999801831661462	WITHOUT_CLASSIFICATION	1.9816833853843936E-5	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.999976083817329	WITHOUT_CLASSIFICATION	2.391618267095687E-5	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999845167382462	WITHOUT_CLASSIFICATION	1.548326175377176E-5	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999926082827211	WITHOUT_CLASSIFICATION	7.391717279013148E-6	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999937387990767	WITHOUT_CLASSIFICATION	6.2612009231832E-6	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999856365927416	WITHOUT_CLASSIFICATION	1.4363407258479339E-5	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999887894597713	WITHOUT_CLASSIFICATION	1.1210540228653601E-5	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999943505561674	WITHOUT_CLASSIFICATION	5.649443832616909E-6	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999920693914819	WITHOUT_CLASSIFICATION	7.930608518075993E-6	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999835468822721	WITHOUT_CLASSIFICATION	1.645311772791738E-5	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999853525243634	WITHOUT_CLASSIFICATION	1.4647475636688471E-5	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999901928687716	WITHOUT_CLASSIFICATION	9.807131228511018E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999926519949609	WITHOUT_CLASSIFICATION	7.348005039150189E-6	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999873008372182	WITHOUT_CLASSIFICATION	1.2699162781812987E-5	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999693620798525	WITHOUT_CLASSIFICATION	3.0637920147400357E-5	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999792858294188	WITHOUT_CLASSIFICATION	2.0714170581184952E-5	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999908667117935	WITHOUT_CLASSIFICATION	9.133288206434047E-6	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.999970257602152	WITHOUT_CLASSIFICATION	2.9742397848119027E-5	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999770103428758	WITHOUT_CLASSIFICATION	2.2989657124281814E-5	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999759614520892	WITHOUT_CLASSIFICATION	2.4038547910819843E-5	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999912464976697	WITHOUT_CLASSIFICATION	8.753502330355518E-6	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999802940086867	WITHOUT_CLASSIFICATION	1.9705991313294634E-5	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999904084029615	WITHOUT_CLASSIFICATION	9.59159703853062E-6	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999856416357552	WITHOUT_CLASSIFICATION	1.4358364244866388E-5	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999943426211733	WITHOUT_CLASSIFICATION	5.657378826761843E-6	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.9999923952868723	WITHOUT_CLASSIFICATION	7.604713127732966E-6	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999919055111248	WITHOUT_CLASSIFICATION	8.09448887519545E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999750291284256	WITHOUT_CLASSIFICATION	2.497087157440604E-5	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.999995440980671	WITHOUT_CLASSIFICATION	4.5590193290602935E-6	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999964216949162	WITHOUT_CLASSIFICATION	3.5783050838531816E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999823735128253	WITHOUT_CLASSIFICATION	1.7626487174724834E-5	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999829410747492	WITHOUT_CLASSIFICATION	1.7058925250861484E-5	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999830379751755	WITHOUT_CLASSIFICATION	1.6962024824486323E-5	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999937293011691	WITHOUT_CLASSIFICATION	6.270698830938174E-6	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999836178919328	WITHOUT_CLASSIFICATION	1.6382108067131974E-5	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999832030036301	WITHOUT_CLASSIFICATION	1.6796996369880715E-5	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999838155935298	WITHOUT_CLASSIFICATION	1.6184406470199868E-5	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.999991088150329	WITHOUT_CLASSIFICATION	8.911849671066852E-6	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999911777678658	WITHOUT_CLASSIFICATION	8.822232134141314E-6	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999913113564718	WITHOUT_CLASSIFICATION	8.688643528232002E-6	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.999992105691318	WITHOUT_CLASSIFICATION	7.894308681971002E-6	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999952911929822	WITHOUT_CLASSIFICATION	4.708807017756546E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999911318063197	WITHOUT_CLASSIFICATION	8.868193680401805E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999954453728148	WITHOUT_CLASSIFICATION	4.554627185124141E-6	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999753306858224	WITHOUT_CLASSIFICATION	2.466931417752378E-5	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999535377878914	WITHOUT_CLASSIFICATION	4.6462212108529366E-5	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999689372194321	WITHOUT_CLASSIFICATION	3.1062780567944314E-5	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.999980575250245	WITHOUT_CLASSIFICATION	1.9424749754989903E-5	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999808887711352	WITHOUT_CLASSIFICATION	1.911122886479435E-5	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999768062105397	WITHOUT_CLASSIFICATION	2.319378946026845E-5	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999592270162078	WITHOUT_CLASSIFICATION	4.0772983792220094E-5	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999576652683843	WITHOUT_CLASSIFICATION	4.2334731615782725E-5	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999688365555413	WITHOUT_CLASSIFICATION	3.1163444458834475E-5	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999655937959013	WITHOUT_CLASSIFICATION	3.440620409865647E-5	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999770485532704	WITHOUT_CLASSIFICATION	2.295144672955066E-5	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999868912462874	WITHOUT_CLASSIFICATION	1.3108753712619314E-5	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999662971283749	WITHOUT_CLASSIFICATION	3.370287162501701E-5	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999906592090569	WITHOUT_CLASSIFICATION	9.340790943184094E-6	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999768429737448	WITHOUT_CLASSIFICATION	2.315702625511461E-5	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999865231580861	WITHOUT_CLASSIFICATION	1.3476841913837518E-5	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999682606122157	WITHOUT_CLASSIFICATION	3.17393877843152E-5	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999943331908688	WITHOUT_CLASSIFICATION	5.666809131164494E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999953104625222	WITHOUT_CLASSIFICATION	4.689537477707708E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999956790551479	WITHOUT_CLASSIFICATION	4.320944852146949E-6	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999832077677037	WITHOUT_CLASSIFICATION	1.6792232296342665E-5	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999961559903396	WITHOUT_CLASSIFICATION	3.844009660390141E-6	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999916583008199	WITHOUT_CLASSIFICATION	8.341699180029708E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999895037605271	WITHOUT_CLASSIFICATION	1.0496239472904715E-5	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999925303465862	WITHOUT_CLASSIFICATION	7.469653413838867E-6	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999851762319195	WITHOUT_CLASSIFICATION	1.4823768080555116E-5	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999964779062711	WITHOUT_CLASSIFICATION	3.5220937288511184E-6	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999929446955168	WITHOUT_CLASSIFICATION	7.055304483219696E-6	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999940306054438	WITHOUT_CLASSIFICATION	5.969394556256946E-6	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999958237019118	WITHOUT_CLASSIFICATION	4.1762980882624E-6	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999930641875711	WITHOUT_CLASSIFICATION	6.935812429017538E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999953427303955	WITHOUT_CLASSIFICATION	4.6572696046355235E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999982334129193	WITHOUT_CLASSIFICATION	1.7665870808018373E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999993461629355	WITHOUT_CLASSIFICATION	6.538370644660536E-7	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9998976612417193	WITHOUT_CLASSIFICATION	1.0233875828070874E-4	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999908462249458	WITHOUT_CLASSIFICATION	9.153775054125517E-6	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999896132265276	WITHOUT_CLASSIFICATION	1.038677347244448E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999988690785265	WITHOUT_CLASSIFICATION	1.13092147347376E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9900917873384354	WITHOUT_CLASSIFICATION	0.009908212661564568	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9977644281878991	WITHOUT_CLASSIFICATION	0.0022355718121008995	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9968871508292069	WITHOUT_CLASSIFICATION	0.003112849170793134	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999986810099467	WITHOUT_CLASSIFICATION	1.3189900533031532E-5	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9993815864930101	WITHOUT_CLASSIFICATION	6.184135069898713E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9997705480621355	WITHOUT_CLASSIFICATION	2.294519378644849E-4	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999917479384504	WITHOUT_CLASSIFICATION	8.252061549656508E-6	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999918836934296	WITHOUT_CLASSIFICATION	8.116306570368614E-6	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999847301721372	WITHOUT_CLASSIFICATION	1.5269827862857198E-5	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999990411988575	WITHOUT_CLASSIFICATION	9.588011424545096E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9994764642931551	WITHOUT_CLASSIFICATION	5.235357068448457E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9997066552176573	WITHOUT_CLASSIFICATION	2.9334478234268544E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997575366323249	WITHOUT_CLASSIFICATION	2.4246336767501183E-4	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999890964929	WITHOUT_CLASSIFICATION	1.0903507166254647E-8	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996890270619	WITHOUT_CLASSIFICATION	3.109729380522049E-7	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999975486906633	WITHOUT_CLASSIFICATION	2.45130933668195E-6	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999944779718232	WITHOUT_CLASSIFICATION	5.522028176869125E-6	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999966627812787	WITHOUT_CLASSIFICATION	3.337218721286981E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999993856850816	WITHOUT_CLASSIFICATION	6.1431491840251435E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999993856850816	WITHOUT_CLASSIFICATION	6.1431491840251435E-6	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9982254661649538	WITHOUT_CLASSIFICATION	0.0017745338350462357	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9844071400594893	WITHOUT_CLASSIFICATION	0.015592859940510701	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999275377431298	WITHOUT_CLASSIFICATION	7.246225687021515E-5	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.999999758445211	WITHOUT_CLASSIFICATION	2.4155478890453615E-7	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9986377347761707	WITHOUT_CLASSIFICATION	0.0013622652238293891	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999488106504	WITHOUT_CLASSIFICATION	5.118934964098272E-8	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9995783468374022	WITHOUT_CLASSIFICATION	4.216531625977136E-4	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999998948774644	WITHOUT_CLASSIFICATION	1.051225355073295E-7	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9873035092523894	WITHOUT_CLASSIFICATION	0.012696490747610669	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999989102489847	WITHOUT_CLASSIFICATION	1.0897510152992722E-5	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999999272251788	WITHOUT_CLASSIFICATION	7.277482112812067E-8	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999999532477881	WITHOUT_CLASSIFICATION	4.675221178474608E-8	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9998389838762064	WITHOUT_CLASSIFICATION	1.610161237935234E-4	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999999256129947	WITHOUT_CLASSIFICATION	7.438700530641787E-7	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999994581589587	WITHOUT_CLASSIFICATION	5.418410412796369E-7	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999997938156676	WITHOUT_CLASSIFICATION	2.061843323796828E-7	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999992859902949	WITHOUT_CLASSIFICATION	7.140097052102945E-7	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9998784330058522	WITHOUT_CLASSIFICATION	1.2156699414770617E-4	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9993543300514252	WITHOUT_CLASSIFICATION	6.456699485749417E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999994870734874	WITHOUT_CLASSIFICATION	5.129265126015055E-7	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999996802165	WITHOUT_CLASSIFICATION	3.1978344061577463E-10	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999616144863056	WITHOUT_CLASSIFICATION	3.838551369438258E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9831138930866558	DESIGN	0.016886106913344197	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999733726621133	WITHOUT_CLASSIFICATION	2.662733788667961E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9831138930866558	DESIGN	0.016886106913344197	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999695775147397	WITHOUT_CLASSIFICATION	3.042248526029228E-5	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9996915764547165	WITHOUT_CLASSIFICATION	3.084235452834999E-4	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.6959392268671146	WITHOUT_CLASSIFICATION	0.3040607731328853	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9996619600593207	WITHOUT_CLASSIFICATION	3.380399406792507E-4	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999971033771194	WITHOUT_CLASSIFICATION	2.8966228804660514E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999974931211063	WITHOUT_CLASSIFICATION	2.5068788936285692E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999974931211063	WITHOUT_CLASSIFICATION	2.5068788936285692E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999974931211063	WITHOUT_CLASSIFICATION	2.5068788936285692E-6	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999603714095562	WITHOUT_CLASSIFICATION	3.9628590443836165E-5	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999732482035283	WITHOUT_CLASSIFICATION	2.6751796471755846E-5	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999865147219041	WITHOUT_CLASSIFICATION	1.3485278095913877E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999539566014182	WITHOUT_CLASSIFICATION	4.6043398581904304E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999539566014182	WITHOUT_CLASSIFICATION	4.6043398581904304E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999539566014182	WITHOUT_CLASSIFICATION	4.6043398581904304E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999539566014182	WITHOUT_CLASSIFICATION	4.6043398581904304E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999539566014182	WITHOUT_CLASSIFICATION	4.6043398581904304E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999539566014182	WITHOUT_CLASSIFICATION	4.6043398581904304E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999156685018192	WITHOUT_CLASSIFICATION	8.433149818076117E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999156685018192	WITHOUT_CLASSIFICATION	8.433149818076117E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999156685018192	WITHOUT_CLASSIFICATION	8.433149818076117E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999156685018192	WITHOUT_CLASSIFICATION	8.433149818076117E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999156685018192	WITHOUT_CLASSIFICATION	8.433149818076117E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997071758750677	WITHOUT_CLASSIFICATION	2.928241249323011E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997071758750677	WITHOUT_CLASSIFICATION	2.928241249323011E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997071758750677	WITHOUT_CLASSIFICATION	2.928241249323011E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997071758750677	WITHOUT_CLASSIFICATION	2.928241249323011E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997071758750677	WITHOUT_CLASSIFICATION	2.928241249323011E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999367520142207	WITHOUT_CLASSIFICATION	6.32479857792987E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999367520142207	WITHOUT_CLASSIFICATION	6.32479857792987E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999367520142207	WITHOUT_CLASSIFICATION	6.32479857792987E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999367520142207	WITHOUT_CLASSIFICATION	6.32479857792987E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999367520142207	WITHOUT_CLASSIFICATION	6.32479857792987E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999367520142207	WITHOUT_CLASSIFICATION	6.32479857792987E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9954581730842543	WITHOUT_CLASSIFICATION	0.00454182691574568	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9954581730842543	WITHOUT_CLASSIFICATION	0.00454182691574568	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9954581730842543	WITHOUT_CLASSIFICATION	0.00454182691574568	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9954581730842543	WITHOUT_CLASSIFICATION	0.00454182691574568	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9954581730842543	WITHOUT_CLASSIFICATION	0.00454182691574568	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9921829753898319	WITHOUT_CLASSIFICATION	0.007817024610167977	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9921829753898319	WITHOUT_CLASSIFICATION	0.007817024610167977	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9921829753898319	WITHOUT_CLASSIFICATION	0.007817024610167977	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9921829753898319	WITHOUT_CLASSIFICATION	0.007817024610167977	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9921829753898319	WITHOUT_CLASSIFICATION	0.007817024610167977	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983529913975725	WITHOUT_CLASSIFICATION	0.0016470086024275444	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983529913975725	WITHOUT_CLASSIFICATION	0.0016470086024275444	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983529913975725	WITHOUT_CLASSIFICATION	0.0016470086024275444	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983529913975725	WITHOUT_CLASSIFICATION	0.0016470086024275444	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983529913975725	WITHOUT_CLASSIFICATION	0.0016470086024275444	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999826048423945	WITHOUT_CLASSIFICATION	1.7395157605528494E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999979623071446	WITHOUT_CLASSIFICATION	2.0376928554978966E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999464426101105	WITHOUT_CLASSIFICATION	5.355738988949293E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999606998190554	WITHOUT_CLASSIFICATION	3.930018094456386E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998497073713344	WITHOUT_CLASSIFICATION	1.5029262866568608E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999911624809495	WITHOUT_CLASSIFICATION	8.837519050433114E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999919435167228	WITHOUT_CLASSIFICATION	8.056483277236138E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999962905437358	WITHOUT_CLASSIFICATION	3.709456264121888E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999928997631469	WITHOUT_CLASSIFICATION	7.100236853127835E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999947391160278	WITHOUT_CLASSIFICATION	5.260883972203851E-6	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999836546496254	WITHOUT_CLASSIFICATION	1.6345350374645848E-5	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999841171040873	WITHOUT_CLASSIFICATION	1.588289591268189E-5	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999984861574844	WITHOUT_CLASSIFICATION	1.5138425155750297E-6	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999947228384928	WITHOUT_CLASSIFICATION	5.27716150719754E-6	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999925764898981	WITHOUT_CLASSIFICATION	7.423510101803778E-6	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999891541732016	WITHOUT_CLASSIFICATION	1.0845826798410747E-5	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999909146965967	WITHOUT_CLASSIFICATION	9.085303403288686E-6	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999864639306361	WITHOUT_CLASSIFICATION	1.3536069364005461E-5	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999794660507524	WITHOUT_CLASSIFICATION	2.0533949247655108E-5	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999731965769098	WITHOUT_CLASSIFICATION	2.6803423090325287E-5	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999933527479417	WITHOUT_CLASSIFICATION	6.647252058338417E-6	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999861303182389	WITHOUT_CLASSIFICATION	1.386968176112286E-5	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999902195048728	WITHOUT_CLASSIFICATION	9.780495127209648E-6	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999854784894658	WITHOUT_CLASSIFICATION	1.452151053417718E-5	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999863293124913	WITHOUT_CLASSIFICATION	1.3670687508549051E-5	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999869652804246	WITHOUT_CLASSIFICATION	1.3034719575413204E-5	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999913716241711	WITHOUT_CLASSIFICATION	8.628375828982582E-6	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999935924986073	WITHOUT_CLASSIFICATION	6.407501392756973E-6	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999856363495627	WITHOUT_CLASSIFICATION	1.4363650437296401E-5	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999901771941486	WITHOUT_CLASSIFICATION	9.822805851499532E-6	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999913516920431	WITHOUT_CLASSIFICATION	8.648307956889714E-6	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999654184470014	WITHOUT_CLASSIFICATION	3.4581552998556946E-5	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999887021966372	WITHOUT_CLASSIFICATION	1.1297803362871871E-5	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.999992218828117	WITHOUT_CLASSIFICATION	7.781171882981823E-6	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999868899922054	WITHOUT_CLASSIFICATION	1.311000779463234E-5	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.99998616163808	WITHOUT_CLASSIFICATION	1.3838361920186603E-5	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999785677176368	WITHOUT_CLASSIFICATION	2.143228236316819E-5	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999778970026529	WITHOUT_CLASSIFICATION	2.2102997347011594E-5	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999938387570365	WITHOUT_CLASSIFICATION	6.1612429634506195E-6	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999937439197142	WITHOUT_CLASSIFICATION	6.2560802857850594E-6	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999927368907644	WITHOUT_CLASSIFICATION	7.263109235548538E-6	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999869131483945	WITHOUT_CLASSIFICATION	1.3086851605478144E-5	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999887284067809	WITHOUT_CLASSIFICATION	1.1271593219075702E-5	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999675389860408	WITHOUT_CLASSIFICATION	3.246101395916878E-5	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999734959063927	WITHOUT_CLASSIFICATION	2.6504093607325175E-5	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999859302074301	WITHOUT_CLASSIFICATION	1.4069792569923828E-5	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999980197825796	WITHOUT_CLASSIFICATION	1.9802174204629113E-6	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999946010479144	WITHOUT_CLASSIFICATION	5.3989520856247554E-6	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999882596471505	WITHOUT_CLASSIFICATION	1.174035284945641E-5	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.999992321056463	WITHOUT_CLASSIFICATION	7.678943537088101E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999750371763467	WITHOUT_CLASSIFICATION	2.4962823653276465E-5	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999798108703487	WITHOUT_CLASSIFICATION	2.018912965128203E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999801842081151	WITHOUT_CLASSIFICATION	1.981579188490182E-5	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999959265221465	WITHOUT_CLASSIFICATION	4.073477853546543E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999944400167873	WITHOUT_CLASSIFICATION	5.559983212778141E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999870962200935	WITHOUT_CLASSIFICATION	1.2903779906508076E-5	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999831678394546	WITHOUT_CLASSIFICATION	1.6832160545375768E-5	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999962607588154	WITHOUT_CLASSIFICATION	3.7392411845938574E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999981123210944	WITHOUT_CLASSIFICATION	1.887678905638555E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999958785360241	WITHOUT_CLASSIFICATION	4.121463975830654E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999957170207285	WITHOUT_CLASSIFICATION	4.282979271467149E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999924653431049	WITHOUT_CLASSIFICATION	7.534656895009374E-6	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999853892136805	WITHOUT_CLASSIFICATION	1.4610786319360714E-5	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999864709477712	WITHOUT_CLASSIFICATION	1.3529052228905663E-5	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999961166329348	WITHOUT_CLASSIFICATION	3.883367065285426E-6	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999945564843814	WITHOUT_CLASSIFICATION	5.4435156186724935E-6	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999853604883026	WITHOUT_CLASSIFICATION	1.4639511697544825E-5	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.999994310914842	WITHOUT_CLASSIFICATION	5.68908515802436E-6	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999908455676051	WITHOUT_CLASSIFICATION	9.154432394948769E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999909969484101	WITHOUT_CLASSIFICATION	9.003051589932355E-6	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999902364317932	WITHOUT_CLASSIFICATION	9.763568206857709E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999941501737871	WITHOUT_CLASSIFICATION	5.849826212841367E-6	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999965478871348	WITHOUT_CLASSIFICATION	3.4521128652168785E-6	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999909051589709	WITHOUT_CLASSIFICATION	9.094841029041623E-6	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.999995400756421	WITHOUT_CLASSIFICATION	4.5992435790367025E-6	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999815101249908	WITHOUT_CLASSIFICATION	1.8489875009137756E-5	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999918489282679	WITHOUT_CLASSIFICATION	8.151071732196131E-6	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999838561004408	WITHOUT_CLASSIFICATION	1.6143899559130833E-5	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999616910148732	WITHOUT_CLASSIFICATION	3.830898512681776E-5	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999656248061044	WITHOUT_CLASSIFICATION	3.4375193895650406E-5	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999889606287002	WITHOUT_CLASSIFICATION	1.1039371299714538E-5	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999883031565154	WITHOUT_CLASSIFICATION	1.1696843484504996E-5	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999877072383755	WITHOUT_CLASSIFICATION	1.2292761624495266E-5	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999833450804632	WITHOUT_CLASSIFICATION	1.665491953686509E-5	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999933290252618	WITHOUT_CLASSIFICATION	6.670974738228326E-6	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999964363293994	WITHOUT_CLASSIFICATION	3.563670600535132E-6	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999917217473355	WITHOUT_CLASSIFICATION	8.278252664457564E-6	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999827005712577	WITHOUT_CLASSIFICATION	1.7299428742291447E-5	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999719175078757	WITHOUT_CLASSIFICATION	2.8082492124387167E-5	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999950274988892	WITHOUT_CLASSIFICATION	4.972501110745692E-6	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999938304315926	WITHOUT_CLASSIFICATION	6.169568407306789E-6	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999859156281347	WITHOUT_CLASSIFICATION	1.4084371865371994E-5	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999864815351103	WITHOUT_CLASSIFICATION	1.3518464889721113E-5	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999899658092525	WITHOUT_CLASSIFICATION	1.0034190747482871E-5	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999947272552759	WITHOUT_CLASSIFICATION	5.272744723995409E-6	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999940690220113	WITHOUT_CLASSIFICATION	5.930977988746978E-6	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999936880563774	WITHOUT_CLASSIFICATION	6.311943622564198E-6	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999966866531974	WITHOUT_CLASSIFICATION	3.3133468025999317E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999966789174927	WITHOUT_CLASSIFICATION	3.321082507282661E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.999992800936764	WITHOUT_CLASSIFICATION	7.199063235920009E-6	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999918088443657	WITHOUT_CLASSIFICATION	8.191155634297598E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999878224322699	WITHOUT_CLASSIFICATION	1.2177567730202082E-5	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999934263954352	WITHOUT_CLASSIFICATION	6.573604564903224E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999930482720555	WITHOUT_CLASSIFICATION	6.951727944430194E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999875312460403	WITHOUT_CLASSIFICATION	1.246875395969648E-5	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.999985364319112	WITHOUT_CLASSIFICATION	1.4635680888074338E-5	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999963399044531	WITHOUT_CLASSIFICATION	3.6600955467807226E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999729032075371	WITHOUT_CLASSIFICATION	2.7096792462887503E-5	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.999978599744919	WITHOUT_CLASSIFICATION	2.1400255081014184E-5	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.999997531329284	WITHOUT_CLASSIFICATION	2.4686707158977918E-6	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999925526965506	WITHOUT_CLASSIFICATION	7.447303449357026E-6	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999953967774228	WITHOUT_CLASSIFICATION	4.603222577199615E-6	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999955149694962	WITHOUT_CLASSIFICATION	4.4850305037541664E-6	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999960626313165	WITHOUT_CLASSIFICATION	3.937368683510714E-6	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999953010982506	WITHOUT_CLASSIFICATION	4.6989017493616E-6	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999910474561741	WITHOUT_CLASSIFICATION	8.952543825984953E-6	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999755889792848	WITHOUT_CLASSIFICATION	2.4411020715111796E-5	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999890726127106	WITHOUT_CLASSIFICATION	1.0927387289430114E-5	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999887430992307	WITHOUT_CLASSIFICATION	1.125690076927929E-5	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.999995509546647	WITHOUT_CLASSIFICATION	4.490453353041313E-6	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999922276944528	WITHOUT_CLASSIFICATION	7.77230554708854E-6	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999947886835014	WITHOUT_CLASSIFICATION	5.2113164985191405E-6	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999969572300127	WITHOUT_CLASSIFICATION	3.042769987288018E-6	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999959314672182	WITHOUT_CLASSIFICATION	4.068532781849419E-6	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999887093698713	WITHOUT_CLASSIFICATION	1.1290630128688025E-5	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999975573461254	WITHOUT_CLASSIFICATION	2.442653874605608E-6	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999864227031487	WITHOUT_CLASSIFICATION	1.3577296851344593E-5	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999960060571003	WITHOUT_CLASSIFICATION	3.993942899739893E-6	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999966839779167	WITHOUT_CLASSIFICATION	3.316022083135441E-6	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999896327606445	WITHOUT_CLASSIFICATION	1.036723935548177E-5	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999883056296914	WITHOUT_CLASSIFICATION	1.1694370308664265E-5	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999935328124462	WITHOUT_CLASSIFICATION	6.467187553740479E-6	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999911257301208	WITHOUT_CLASSIFICATION	8.874269879262687E-6	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999853003802457	WITHOUT_CLASSIFICATION	1.4699619754422345E-5	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999816211713494	WITHOUT_CLASSIFICATION	1.837882865056951E-5	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.999990995627746	WITHOUT_CLASSIFICATION	9.004372253997923E-6	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.999987251035126	WITHOUT_CLASSIFICATION	1.274896487391907E-5	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999229720977465	WITHOUT_CLASSIFICATION	7.702790225355231E-5	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.999975858080127	WITHOUT_CLASSIFICATION	2.414191987295207E-5	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999723888793339	WITHOUT_CLASSIFICATION	2.7611120666168437E-5	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999651354506902	WITHOUT_CLASSIFICATION	3.486454930981487E-5	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999502475699421	WITHOUT_CLASSIFICATION	4.9752430057997935E-5	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999843434198937	WITHOUT_CLASSIFICATION	1.565658010627107E-5	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999888860882453	WITHOUT_CLASSIFICATION	1.1113911754620459E-5	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999521996315203	WITHOUT_CLASSIFICATION	4.780036847970958E-5	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999565210070159	WITHOUT_CLASSIFICATION	4.3478992984077863E-5	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999895297892438	WITHOUT_CLASSIFICATION	1.0470210756152759E-5	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999955221506175	WITHOUT_CLASSIFICATION	4.477849382504198E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.999983358496872	WITHOUT_CLASSIFICATION	1.6641503127999016E-5	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999967331875966	WITHOUT_CLASSIFICATION	3.266812403345584E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999924137748468	WITHOUT_CLASSIFICATION	7.586225153207145E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.999992445271511	WITHOUT_CLASSIFICATION	7.554728489060315E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999956704143815	WITHOUT_CLASSIFICATION	4.329585618419849E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999927800702897	WITHOUT_CLASSIFICATION	7.219929710360833E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999960521752255	WITHOUT_CLASSIFICATION	3.94782477451281E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999941896065407	WITHOUT_CLASSIFICATION	5.810393459328684E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999946365785277	WITHOUT_CLASSIFICATION	5.363421472291618E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999877526280735	WITHOUT_CLASSIFICATION	1.224737192651554E-5	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999935293288923	WITHOUT_CLASSIFICATION	6.470671107732078E-6	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999870367576198	WITHOUT_CLASSIFICATION	1.296324238014378E-5	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.999991308155086	WITHOUT_CLASSIFICATION	8.691844914016342E-6	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999897588402255	WITHOUT_CLASSIFICATION	1.0241159774441833E-5	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999594527486158	WITHOUT_CLASSIFICATION	4.0547251384291994E-5	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999869898801983	WITHOUT_CLASSIFICATION	1.3010119801810932E-5	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999814105953087	WITHOUT_CLASSIFICATION	1.8589404691320183E-5	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999966317108334	WITHOUT_CLASSIFICATION	3.368289166502899E-6	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999947338750784	WITHOUT_CLASSIFICATION	5.266124921564057E-6	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999906444744823	WITHOUT_CLASSIFICATION	9.355525517669092E-6	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999910167237356	WITHOUT_CLASSIFICATION	8.983276264413756E-6	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999877465294068	WITHOUT_CLASSIFICATION	1.2253470593148447E-5	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999866913343157	WITHOUT_CLASSIFICATION	1.3308665684281353E-5	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999924194999078	WITHOUT_CLASSIFICATION	7.580500092171817E-6	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999933586715508	WITHOUT_CLASSIFICATION	6.64132844921119E-6	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999865880756156	WITHOUT_CLASSIFICATION	1.3411924384336433E-5	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999920949403095	WITHOUT_CLASSIFICATION	7.905059690410327E-6	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999986668734295	WITHOUT_CLASSIFICATION	1.3331265705175228E-6	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999964472584753	WITHOUT_CLASSIFICATION	3.552741524742811E-6	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.999986684491804	WITHOUT_CLASSIFICATION	1.3315508196093347E-5	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999863777221621	WITHOUT_CLASSIFICATION	1.3622277837917069E-5	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999942823025554	WITHOUT_CLASSIFICATION	5.717697444583691E-6	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999892198716807	WITHOUT_CLASSIFICATION	1.0780128319256025E-5	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.999986648148853	WITHOUT_CLASSIFICATION	1.3351851147079087E-5	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999938048485922	WITHOUT_CLASSIFICATION	6.195151407851706E-6	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999944800287812	WITHOUT_CLASSIFICATION	5.519971218709043E-6	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.999997426576077	WITHOUT_CLASSIFICATION	2.573423922881074E-6	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999885757299308	WITHOUT_CLASSIFICATION	1.1424270069273837E-5	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999967980318647	WITHOUT_CLASSIFICATION	3.201968135322929E-6	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999902257313721	WITHOUT_CLASSIFICATION	9.77426862789774E-6	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.999990852270868	WITHOUT_CLASSIFICATION	9.147729131934734E-6	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999937841798975	WITHOUT_CLASSIFICATION	6.2158201025140585E-6	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999978462910439	WITHOUT_CLASSIFICATION	2.1537089561833794E-6	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999967212230676	WITHOUT_CLASSIFICATION	3.2787769324252288E-6	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999963176902508	WITHOUT_CLASSIFICATION	3.6823097492205004E-6	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999952399581329	WITHOUT_CLASSIFICATION	4.760041867081928E-6	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999970990622935	WITHOUT_CLASSIFICATION	2.9009377063985216E-6	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999881677031264	WITHOUT_CLASSIFICATION	1.1832296873581768E-5	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999887894597713	WITHOUT_CLASSIFICATION	1.1210540228653601E-5	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999901928687716	WITHOUT_CLASSIFICATION	9.807131228511018E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999926519949609	WITHOUT_CLASSIFICATION	7.348005039150189E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999910311533239	WITHOUT_CLASSIFICATION	8.968846676101606E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999912464976697	WITHOUT_CLASSIFICATION	8.753502330355518E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999904084029615	WITHOUT_CLASSIFICATION	9.59159703853062E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999750291284256	WITHOUT_CLASSIFICATION	2.497087157440604E-5	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.999995440980671	WITHOUT_CLASSIFICATION	4.5590193290602935E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999911318063197	WITHOUT_CLASSIFICATION	8.868193680401805E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999954453728148	WITHOUT_CLASSIFICATION	4.554627185124141E-6	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999911643841881	WITHOUT_CLASSIFICATION	8.835615811755927E-6	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.999970663240761	WITHOUT_CLASSIFICATION	2.9336759239002338E-5	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.99998460000176	WITHOUT_CLASSIFICATION	1.5399998240040087E-5	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999856346756509	WITHOUT_CLASSIFICATION	1.4365324349127293E-5	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999776288911317	WITHOUT_CLASSIFICATION	2.2371108868339812E-5	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.999986203748307	WITHOUT_CLASSIFICATION	1.3796251693054192E-5	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999845872244442	WITHOUT_CLASSIFICATION	1.541277555584681E-5	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999923808232835	WITHOUT_CLASSIFICATION	7.619176716535177E-6	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999841023863973	WITHOUT_CLASSIFICATION	1.5897613602750953E-5	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999833552531793	WITHOUT_CLASSIFICATION	1.6644746820747132E-5	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999850883268203	WITHOUT_CLASSIFICATION	1.4911673179722764E-5	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999704533932496	WITHOUT_CLASSIFICATION	2.9546606750256322E-5	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999695287513618	WITHOUT_CLASSIFICATION	3.0471248638277417E-5	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999819490955509	WITHOUT_CLASSIFICATION	1.8050904449131507E-5	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999850510517663	WITHOUT_CLASSIFICATION	1.4948948233722704E-5	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999843053570563	WITHOUT_CLASSIFICATION	1.5694642943676444E-5	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999789815783525	WITHOUT_CLASSIFICATION	2.101842164751806E-5	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999795272386214	WITHOUT_CLASSIFICATION	2.0472761378533964E-5	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999639117451895	WITHOUT_CLASSIFICATION	3.608825481053143E-5	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999873691290199	WITHOUT_CLASSIFICATION	1.2630870980024954E-5	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999914870427962	WITHOUT_CLASSIFICATION	8.512957203816665E-6	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999919583655151	WITHOUT_CLASSIFICATION	8.0416344847495E-6	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999881134225012	WITHOUT_CLASSIFICATION	1.1886577498917415E-5	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.99996952205625	WITHOUT_CLASSIFICATION	3.0477943750029422E-5	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.999961411071024	WITHOUT_CLASSIFICATION	3.858892897595891E-5	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.999994089089502	WITHOUT_CLASSIFICATION	5.910910497929107E-6	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999871870422737	WITHOUT_CLASSIFICATION	1.2812957726373256E-5	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999927557431112	WITHOUT_CLASSIFICATION	7.244256888823781E-6	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999776208700284	WITHOUT_CLASSIFICATION	2.2379129971672026E-5	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999907527260428	WITHOUT_CLASSIFICATION	9.247273957149517E-6	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999702739152061	WITHOUT_CLASSIFICATION	2.9726084793911543E-5	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999920287086959	WITHOUT_CLASSIFICATION	7.97129130410706E-6	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999920196777138	WITHOUT_CLASSIFICATION	7.98032228613812E-6	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999946292034246	WITHOUT_CLASSIFICATION	5.370796575418162E-6	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999921586038139	WITHOUT_CLASSIFICATION	7.841396186148382E-6	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999955440098605	WITHOUT_CLASSIFICATION	4.455990139545972E-6	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999921394429279	WITHOUT_CLASSIFICATION	7.860557072042571E-6	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999852696845573	WITHOUT_CLASSIFICATION	1.473031544280689E-5	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999880288082311	WITHOUT_CLASSIFICATION	1.1971191768932612E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999777052420774	WITHOUT_CLASSIFICATION	2.229475792263977E-5	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999808887711352	WITHOUT_CLASSIFICATION	1.911122886479435E-5	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999768062105397	WITHOUT_CLASSIFICATION	2.319378946026845E-5	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999943331908688	WITHOUT_CLASSIFICATION	5.666809131164494E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.99998384883935	WITHOUT_CLASSIFICATION	1.6151160649984213E-5	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999956790551479	WITHOUT_CLASSIFICATION	4.320944852146949E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999961559903396	WITHOUT_CLASSIFICATION	3.844009660390141E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999895037605271	WITHOUT_CLASSIFICATION	1.0496239472904715E-5	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999953427303955	WITHOUT_CLASSIFICATION	4.6572696046355235E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999982334129193	WITHOUT_CLASSIFICATION	1.7665870808018373E-6	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.999969044777883	WITHOUT_CLASSIFICATION	3.09552221170275E-5	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999888187299176	WITHOUT_CLASSIFICATION	1.1181270082398275E-5	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999895535106055	WITHOUT_CLASSIFICATION	1.0446489394577495E-5	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999874318237428	WITHOUT_CLASSIFICATION	1.2568176257281488E-5	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999417023205135	WITHOUT_CLASSIFICATION	5.829767948640174E-5	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999342735668768	WITHOUT_CLASSIFICATION	6.57264331232792E-5	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999709009496457	WITHOUT_CLASSIFICATION	2.909905035436972E-5	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999726720537104	WITHOUT_CLASSIFICATION	2.7327946289495653E-5	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999800389328425	WITHOUT_CLASSIFICATION	1.996106715757524E-5	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999771309407387	WITHOUT_CLASSIFICATION	2.286905926131319E-5	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999376993343652	WITHOUT_CLASSIFICATION	6.230066563478168E-5	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999887927479353	WITHOUT_CLASSIFICATION	1.1207252064742535E-5	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999961432324563	WITHOUT_CLASSIFICATION	3.856767543730035E-6	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999883959485786	WITHOUT_CLASSIFICATION	1.1604051421476665E-5	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999926275767183	WITHOUT_CLASSIFICATION	7.372423281764219E-6	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999964084970799	WITHOUT_CLASSIFICATION	3.5915029200274983E-6	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.999983119625347	WITHOUT_CLASSIFICATION	1.688037465290979E-5	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999865951703218	WITHOUT_CLASSIFICATION	1.3404829678255824E-5	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.999992237098128	WITHOUT_CLASSIFICATION	7.762901872035142E-6	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999843377518229	WITHOUT_CLASSIFICATION	1.5662248177089306E-5	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999870817230406	WITHOUT_CLASSIFICATION	1.2918276959353664E-5	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999960165847344	WITHOUT_CLASSIFICATION	3.983415265564814E-6	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999826437690553	WITHOUT_CLASSIFICATION	1.7356230944779154E-5	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999843333127779	WITHOUT_CLASSIFICATION	1.5666687222054466E-5	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999856095043249	WITHOUT_CLASSIFICATION	1.4390495675192546E-5	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999982219437066	WITHOUT_CLASSIFICATION	1.778056293382594E-6	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999961178800648	WITHOUT_CLASSIFICATION	3.882119935183538E-6	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.999995965744341	WITHOUT_CLASSIFICATION	4.034255658960399E-6	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999882214408167	WITHOUT_CLASSIFICATION	1.1778559183243598E-5	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.999990688359021	WITHOUT_CLASSIFICATION	9.311640979010898E-6	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999970312420415	WITHOUT_CLASSIFICATION	2.968757958508607E-6	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999865514324692	WITHOUT_CLASSIFICATION	1.3448567530815882E-5	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999889930597425	WITHOUT_CLASSIFICATION	1.100694025746571E-5	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999944344893555	WITHOUT_CLASSIFICATION	5.56551064450248E-6	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999958564701743	WITHOUT_CLASSIFICATION	4.143529825788795E-6	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999978737112327	WITHOUT_CLASSIFICATION	2.1262887673230273E-6	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999975362832998	WITHOUT_CLASSIFICATION	2.4637167000852147E-6	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.999990008446361	WITHOUT_CLASSIFICATION	9.991553638970843E-6	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999946002960485	WITHOUT_CLASSIFICATION	5.399703951501932E-6	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9977644281878991	WITHOUT_CLASSIFICATION	0.0022355718121008995	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9968871508292069	WITHOUT_CLASSIFICATION	0.003112849170793134	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999918836934296	WITHOUT_CLASSIFICATION	8.116306570368614E-6	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999990411988575	WITHOUT_CLASSIFICATION	9.588011424545096E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9994764642931551	WITHOUT_CLASSIFICATION	5.235357068448457E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9997066552176573	WITHOUT_CLASSIFICATION	2.9334478234268544E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997575366323249	WITHOUT_CLASSIFICATION	2.4246336767501183E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999995172563481	WITHOUT_CLASSIFICATION	4.827436519236604E-7	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9999953855918773	WITHOUT_CLASSIFICATION	4.614408122765699E-6	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999921009911719	WITHOUT_CLASSIFICATION	7.8990088280455E-6	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999984270048887	WITHOUT_CLASSIFICATION	1.572995111309906E-6	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999961002973047	WITHOUT_CLASSIFICATION	3.899702695408591E-6	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999928046638937	WITHOUT_CLASSIFICATION	7.195336106273972E-6	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999966637218204	WITHOUT_CLASSIFICATION	3.336278179679202E-6	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999969027927963	WITHOUT_CLASSIFICATION	3.097207203725613E-6	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999948353915082	WITHOUT_CLASSIFICATION	5.1646084917972935E-6	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.999984244151631	WITHOUT_CLASSIFICATION	1.5755848368943927E-5	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999963963438839	WITHOUT_CLASSIFICATION	3.6036561161424485E-6	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999882600730062	WITHOUT_CLASSIFICATION	1.1739926993768964E-5	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999909015439478	WITHOUT_CLASSIFICATION	9.098456052256845E-6	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999954757336288	WITHOUT_CLASSIFICATION	4.5242663711065535E-6	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999933587419187	WITHOUT_CLASSIFICATION	6.641258081257766E-6	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999868339626936	WITHOUT_CLASSIFICATION	1.3166037306480697E-5	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999642585331193	WITHOUT_CLASSIFICATION	3.574146688060474E-5	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999915074990793	WITHOUT_CLASSIFICATION	8.492500920685366E-6	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.999996762897858	WITHOUT_CLASSIFICATION	3.237102142036068E-6	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999979477834127	WITHOUT_CLASSIFICATION	2.052216587382421E-6	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999920027599576	WITHOUT_CLASSIFICATION	7.997240042526348E-6	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999953503017517	WITHOUT_CLASSIFICATION	4.6496982482944415E-6	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999791069974077	WITHOUT_CLASSIFICATION	2.089300259238975E-5	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999982869865175	WITHOUT_CLASSIFICATION	1.7130134824398292E-6	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999741545461992	WITHOUT_CLASSIFICATION	2.5845453800820893E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999974421566482	WITHOUT_CLASSIFICATION	2.5578433518915828E-6	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999815087221536	WITHOUT_CLASSIFICATION	1.849127784626416E-5	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9998653958786676	WITHOUT_CLASSIFICATION	1.346041213323403E-4	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999996635831884	WITHOUT_CLASSIFICATION	3.3641681162914554E-7	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999546388531828	WITHOUT_CLASSIFICATION	4.536114681715409E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996890270619	WITHOUT_CLASSIFICATION	3.109729380522049E-7	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999975486906633	WITHOUT_CLASSIFICATION	2.45130933668195E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999993856850816	WITHOUT_CLASSIFICATION	6.1431491840251435E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999993856850816	WITHOUT_CLASSIFICATION	6.1431491840251435E-6	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.8910687032714648	WITHOUT_CLASSIFICATION	0.10893129672853517	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999989830019989	WITHOUT_CLASSIFICATION	1.0169980011389437E-6	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.999999939458212	WITHOUT_CLASSIFICATION	6.05417880416597E-8	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999943872513922	WITHOUT_CLASSIFICATION	5.6127486076988575E-6	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9995529202350141	WITHOUT_CLASSIFICATION	4.470797649858742E-4	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999969689826278	WITHOUT_CLASSIFICATION	3.031017372233167E-6	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9832527603495523	WITHOUT_CLASSIFICATION	0.01674723965044765	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999994656231259	WITHOUT_CLASSIFICATION	5.343768740932733E-7	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999973193546086	WITHOUT_CLASSIFICATION	2.6806453913940825E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999988328509729	WITHOUT_CLASSIFICATION	1.167149027142137E-6	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9927259562498411	WITHOUT_CLASSIFICATION	0.0072740437501589966	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9997508107659105	WITHOUT_CLASSIFICATION	2.4918923408954346E-4	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999898662183401	WITHOUT_CLASSIFICATION	1.0133781659906255E-5	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999746374226268	WITHOUT_CLASSIFICATION	2.5362577373221087E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999220950668094	WITHOUT_CLASSIFICATION	7.790493319049689E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999220950668094	WITHOUT_CLASSIFICATION	7.790493319049689E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9799542906425182	WITHOUT_CLASSIFICATION	0.020045709357481754	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999993368717157	WITHOUT_CLASSIFICATION	6.631282843638954E-7	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999999719638	WITHOUT_CLASSIFICATION	2.803627637903889E-11	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999415081173658	WITHOUT_CLASSIFICATION	5.849188263403918E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999977742832505	WITHOUT_CLASSIFICATION	2.2257167494968867E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999690572933	WITHOUT_CLASSIFICATION	3.094270675849361E-8	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999773406454346	WITHOUT_CLASSIFICATION	2.265935456531266E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999690572933	WITHOUT_CLASSIFICATION	3.094270675849361E-8	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9998898321285904	WITHOUT_CLASSIFICATION	1.1016787140956219E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9994955014672322	WITHOUT_CLASSIFICATION	5.044985327678025E-4	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.5542828357314148	WITHOUT_CLASSIFICATION	0.4457171642685853	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.8901340954886009	DESIGN	0.10986590451139906	WITHOUT_CLASSIFICATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9926276441501309	WITHOUT_CLASSIFICATION	0.00737235584986917	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.8875757721842482	WITHOUT_CLASSIFICATION	0.11242422781575181	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999498837976248	WITHOUT_CLASSIFICATION	5.0116202375259236E-5	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999994606068197	WITHOUT_CLASSIFICATION	5.393931802639613E-7	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999997141388222	WITHOUT_CLASSIFICATION	2.858611779374827E-7	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.6081334178462833	WITHOUT_CLASSIFICATION	0.3918665821537167	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.5945756101400042	WITHOUT_CLASSIFICATION	0.4054243898599959	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999980192466471	WITHOUT_CLASSIFICATION	1.9807533528964063E-5	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999817626729153	WITHOUT_CLASSIFICATION	1.8237327084745744E-5	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999135553549958	WITHOUT_CLASSIFICATION	8.644464500428822E-5	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999987568994	WITHOUT_CLASSIFICATION	1.243100657286232E-9	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999987568994	WITHOUT_CLASSIFICATION	1.243100657286232E-9	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999480004845276	WITHOUT_CLASSIFICATION	5.199951547246579E-5	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.999999982060978	WITHOUT_CLASSIFICATION	1.793902205182657E-8	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999941374184335	WITHOUT_CLASSIFICATION	5.862581566535347E-6	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999996733186345	WITHOUT_CLASSIFICATION	3.2668136549989723E-7	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999837689627472	WITHOUT_CLASSIFICATION	1.6231037252697913E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999690572933	WITHOUT_CLASSIFICATION	3.094270675849361E-8	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999968425130656	WITHOUT_CLASSIFICATION	3.1574869344438238E-6	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999998618096986	WITHOUT_CLASSIFICATION	1.3819030146737206E-7	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999475615821912	WITHOUT_CLASSIFICATION	5.2438417808766664E-5	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999879632153799	WITHOUT_CLASSIFICATION	1.2036784620129523E-5	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999519738938	WITHOUT_CLASSIFICATION	4.802610618484856E-8	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999984901918673	WITHOUT_CLASSIFICATION	1.5098081327970773E-6	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999996021922961	WITHOUT_CLASSIFICATION	3.978077039588217E-7	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999939853457367	WITHOUT_CLASSIFICATION	6.014654263325323E-6	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9846117561752548	DESIGN	0.015388243824745218	WITHOUT_CLASSIFICATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9810994106410339	WITHOUT_CLASSIFICATION	0.018900589358966078	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999985823726185	WITHOUT_CLASSIFICATION	1.4176273815899554E-6	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999971898319795	WITHOUT_CLASSIFICATION	2.8101680203891996E-6	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9054165229617438	WITHOUT_CLASSIFICATION	0.09458347703825623	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999989859185239	WITHOUT_CLASSIFICATION	1.0140814761153319E-6	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.8094372542160937	DESIGN	0.1905627457839063	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.999994367115818	WITHOUT_CLASSIFICATION	5.632884182011669E-6	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999996108455933	WITHOUT_CLASSIFICATION	3.891544066746517E-7	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9997499380680718	WITHOUT_CLASSIFICATION	2.500619319282294E-4	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999972209443987	WITHOUT_CLASSIFICATION	2.7790556014167686E-6	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999700793024011	WITHOUT_CLASSIFICATION	2.9920697598854894E-5	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999704272808788	WITHOUT_CLASSIFICATION	2.9572719121284053E-5	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999599792422165	WITHOUT_CLASSIFICATION	4.0020757783568045E-5	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999804110394046	WITHOUT_CLASSIFICATION	1.9588960595413186E-5	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999993752892775	WITHOUT_CLASSIFICATION	6.247107224315314E-7	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999978474567001	WITHOUT_CLASSIFICATION	2.152543299845308E-6	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999742968266252	WITHOUT_CLASSIFICATION	2.5703173374767716E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.999476251043592	WITHOUT_CLASSIFICATION	5.237489564080186E-4	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999960642576903	WITHOUT_CLASSIFICATION	3.935742309702045E-6	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.999711599750241	WITHOUT_CLASSIFICATION	2.8840024975886714E-4	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999771260494842	WITHOUT_CLASSIFICATION	2.287395051573333E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999810276329315	WITHOUT_CLASSIFICATION	1.8972367068525404E-5	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999995678236255	WITHOUT_CLASSIFICATION	4.321763744546468E-7	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999992965746524	WITHOUT_CLASSIFICATION	7.034253476221002E-7	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999789582876432	WITHOUT_CLASSIFICATION	2.1041712356765315E-5	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999752184782154	WITHOUT_CLASSIFICATION	2.478152178474252E-5	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9974913612703536	WITHOUT_CLASSIFICATION	0.002508638729646356	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999974752620485	WITHOUT_CLASSIFICATION	2.524737951489962E-6	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9999964824046172	WITHOUT_CLASSIFICATION	3.517595382872413E-6	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9991949839832039	WITHOUT_CLASSIFICATION	8.050160167961386E-4	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999381118832782	WITHOUT_CLASSIFICATION	6.188811672182058E-5	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999995172563481	WITHOUT_CLASSIFICATION	4.827436519236604E-7	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999999994475614	WITHOUT_CLASSIFICATION	5.524385990946797E-9	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999973467106549	WITHOUT_CLASSIFICATION	2.653289345229431E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999553403271675	WITHOUT_CLASSIFICATION	4.465967283256759E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999998589335498	WITHOUT_CLASSIFICATION	1.410664502030037E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9994955014672322	WITHOUT_CLASSIFICATION	5.044985327678025E-4	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9951243053637537	WITHOUT_CLASSIFICATION	0.004875694636246282	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9735706290473265	WITHOUT_CLASSIFICATION	0.02642937095267357	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9966520571143527	WITHOUT_CLASSIFICATION	0.003347942885647424	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998912807298231	WITHOUT_CLASSIFICATION	1.0871927017682366E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998912807298231	WITHOUT_CLASSIFICATION	1.0871927017682366E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998412293218027	WITHOUT_CLASSIFICATION	1.5877067819719976E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998412293218027	WITHOUT_CLASSIFICATION	1.5877067819719976E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998412293218027	WITHOUT_CLASSIFICATION	1.5877067819719976E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999999203073164	WITHOUT_CLASSIFICATION	7.969268360558334E-7	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999999203073164	WITHOUT_CLASSIFICATION	7.969268360558334E-7	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999999819807832	WITHOUT_CLASSIFICATION	1.8019216860733176E-8	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999999819807832	WITHOUT_CLASSIFICATION	1.8019216860733176E-8	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999997549543833	WITHOUT_CLASSIFICATION	2.4504561664361133E-7	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999931532911336	WITHOUT_CLASSIFICATION	6.846708866480114E-6	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999985054545228	WITHOUT_CLASSIFICATION	1.4945454772201836E-6	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999985054545228	WITHOUT_CLASSIFICATION	1.4945454772201836E-6	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9996861374907937	WITHOUT_CLASSIFICATION	3.138625092063667E-4	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999260686556899	WITHOUT_CLASSIFICATION	7.393134431007633E-5	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999951595864353	WITHOUT_CLASSIFICATION	4.840413564814807E-6	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998106515798206	WITHOUT_CLASSIFICATION	1.8934842017940325E-4	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999670536531067	WITHOUT_CLASSIFICATION	3.294634689338412E-5	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9921947348345708	WITHOUT_CLASSIFICATION	0.0078052651654292515	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999897007796041	WITHOUT_CLASSIFICATION	1.0299220395846112E-5	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999073708670432	WITHOUT_CLASSIFICATION	9.26291329567686E-5	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999986317969951	WITHOUT_CLASSIFICATION	1.368203004905188E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999915331099192	WITHOUT_CLASSIFICATION	8.466890080904152E-6	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9987328307535152	WITHOUT_CLASSIFICATION	0.0012671692464848027	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.999997900293589	WITHOUT_CLASSIFICATION	2.099706411049239E-6	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999923133063968	WITHOUT_CLASSIFICATION	7.686693603241166E-6	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9999931476692888	WITHOUT_CLASSIFICATION	6.8523307112009685E-6	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9998419662139568	WITHOUT_CLASSIFICATION	1.580337860431514E-4	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9868817070605589	WITHOUT_CLASSIFICATION	0.013118292939441164	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.795513248327164	WITHOUT_CLASSIFICATION	0.20448675167283617	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999973398511572	WITHOUT_CLASSIFICATION	2.660148842631802E-6	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999985780975561	WITHOUT_CLASSIFICATION	1.4219024439174355E-6	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9870779798191762	WITHOUT_CLASSIFICATION	0.012922020180823725	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999998191288902	WITHOUT_CLASSIFICATION	1.8087110979159277E-7	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999993573197246	WITHOUT_CLASSIFICATION	6.426802753754511E-7	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999995824344683	WITHOUT_CLASSIFICATION	4.1756553175175147E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999851428996093	WITHOUT_CLASSIFICATION	1.4857100390726358E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999974622257258	WITHOUT_CLASSIFICATION	2.5377742742625194E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999961142479783	WITHOUT_CLASSIFICATION	3.885752021805915E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998932692987	WITHOUT_CLASSIFICATION	1.0673070126458051E-7	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999995460001574	WITHOUT_CLASSIFICATION	4.539998425428442E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999963332298847	WITHOUT_CLASSIFICATION	3.666770115409059E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999993736766746	WITHOUT_CLASSIFICATION	6.263233254979577E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999990409944557	WITHOUT_CLASSIFICATION	9.590055443519327E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983961426816	WITHOUT_CLASSIFICATION	1.6038573184601407E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997260445843	WITHOUT_CLASSIFICATION	2.7395541563889016E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993412702922	WITHOUT_CLASSIFICATION	6.587297076854216E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997260445843	WITHOUT_CLASSIFICATION	2.7395541563889016E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997260445843	WITHOUT_CLASSIFICATION	2.7395541563889016E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997260445843	WITHOUT_CLASSIFICATION	2.7395541563889016E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997260445843	WITHOUT_CLASSIFICATION	2.7395541563889016E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997260445843	WITHOUT_CLASSIFICATION	2.7395541563889016E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997260445843	WITHOUT_CLASSIFICATION	2.7395541563889016E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993412702922	WITHOUT_CLASSIFICATION	6.587297076854216E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993412702922	WITHOUT_CLASSIFICATION	6.587297076854216E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993412702922	WITHOUT_CLASSIFICATION	6.587297076854216E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993412702922	WITHOUT_CLASSIFICATION	6.587297076854216E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993412702922	WITHOUT_CLASSIFICATION	6.587297076854216E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993412702922	WITHOUT_CLASSIFICATION	6.587297076854216E-7	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9998381280765369	WITHOUT_CLASSIFICATION	1.6187192346300163E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999996286124476	WITHOUT_CLASSIFICATION	3.713875524118017E-7	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999997329141515	WITHOUT_CLASSIFICATION	2.6708584855971235E-7	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999824174168771	WITHOUT_CLASSIFICATION	1.7582583122803105E-5	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999406568397203	WITHOUT_CLASSIFICATION	5.934316027963595E-5	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999993877470883	WITHOUT_CLASSIFICATION	6.122529116965789E-6	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999996675023713	WITHOUT_CLASSIFICATION	3.3249762863510844E-7	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999999646546404	WITHOUT_CLASSIFICATION	3.534535959523068E-7	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999941122418634	WITHOUT_CLASSIFICATION	5.887758136664096E-6	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999899216003191	WITHOUT_CLASSIFICATION	1.007839968090589E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999205793520757	WITHOUT_CLASSIFICATION	7.942064792434564E-5	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.999999229394349	WITHOUT_CLASSIFICATION	7.706056509722146E-7	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999999020595652	WITHOUT_CLASSIFICATION	9.794043476639584E-8	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9970934650583914	WITHOUT_CLASSIFICATION	0.002906534941608523	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999799704169077	WITHOUT_CLASSIFICATION	2.0029583092344734E-5	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9894903845802027	WITHOUT_CLASSIFICATION	0.01050961541979724	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9998598181235583	WITHOUT_CLASSIFICATION	1.4018187644166536E-4	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9996885660079645	WITHOUT_CLASSIFICATION	3.114339920355916E-4	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9701195900348982	WITHOUT_CLASSIFICATION	0.029880409965101842	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.99997913031717	WITHOUT_CLASSIFICATION	2.0869682829938767E-5	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999979733036	WITHOUT_CLASSIFICATION	2.0266962967035625E-9	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999983544484626	WITHOUT_CLASSIFICATION	1.645551537277249E-6	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999773406454346	WITHOUT_CLASSIFICATION	2.265935456531266E-5	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.924338674073192	WITHOUT_CLASSIFICATION	0.07566132592680797	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9533368828690134	DESIGN	0.04666311713098664	WITHOUT_CLASSIFICATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999823416962225	WITHOUT_CLASSIFICATION	1.7658303777473946E-5	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999091436197	WITHOUT_CLASSIFICATION	9.085638029139288E-8	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999929968003862	WITHOUT_CLASSIFICATION	7.003199613737255E-6	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999936542510282	WITHOUT_CLASSIFICATION	6.345748971839486E-6	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999711648236298	WITHOUT_CLASSIFICATION	2.8835176370183273E-5	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999965255547045	WITHOUT_CLASSIFICATION	3.4744452953992945E-6	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.999999868554128	WITHOUT_CLASSIFICATION	1.3144587194351165E-7	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9998525000508431	WITHOUT_CLASSIFICATION	1.474999491567746E-4	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999989797746202	WITHOUT_CLASSIFICATION	1.0202253797641688E-6	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.994009310324206	WITHOUT_CLASSIFICATION	0.005990689675793918	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999870498889866	WITHOUT_CLASSIFICATION	1.2950111013532502E-5	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9995995943149216	WITHOUT_CLASSIFICATION	4.004056850783472E-4	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999629248477084	WITHOUT_CLASSIFICATION	3.7075152291460624E-5	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999919190096	WITHOUT_CLASSIFICATION	8.080990469019833E-9	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999637213605	WITHOUT_CLASSIFICATION	3.6278639487889274E-8	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999843979047631	WITHOUT_CLASSIFICATION	1.560209523686009E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999971443175132	WITHOUT_CLASSIFICATION	2.855682486879881E-6	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.999999540472192	WITHOUT_CLASSIFICATION	4.5952780805538635E-7	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999960652931528	WITHOUT_CLASSIFICATION	3.9347068472164505E-6	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999960652931528	WITHOUT_CLASSIFICATION	3.9347068472164505E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999928578854438	WITHOUT_CLASSIFICATION	7.14211455617037E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999928578854438	WITHOUT_CLASSIFICATION	7.14211455617037E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999992696757755	WITHOUT_CLASSIFICATION	7.303242245728402E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999992696757755	WITHOUT_CLASSIFICATION	7.303242245728402E-7	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999956193631	WITHOUT_CLASSIFICATION	4.380636760471388E-9	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9996974618875707	WITHOUT_CLASSIFICATION	3.0253811242923756E-4	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999816249995	WITHOUT_CLASSIFICATION	1.8375000487996808E-8	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999996351809636	WITHOUT_CLASSIFICATION	3.648190364051852E-7	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999659599170978	WITHOUT_CLASSIFICATION	3.4040082902161663E-5	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9731338188454989	WITHOUT_CLASSIFICATION	0.02686618115450109	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9999914360812603	WITHOUT_CLASSIFICATION	8.563918739623866E-6	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999784007434	WITHOUT_CLASSIFICATION	2.1599256701389016E-8	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999595459729449	WITHOUT_CLASSIFICATION	4.0454027055056155E-5	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999998531509253	WITHOUT_CLASSIFICATION	1.4684907472505157E-7	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9869473287949055	WITHOUT_CLASSIFICATION	0.01305267120509454	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999749433556113	WITHOUT_CLASSIFICATION	2.5056644388716183E-5	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.999993795976232	WITHOUT_CLASSIFICATION	6.204023768024267E-6	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.996178415040123	WITHOUT_CLASSIFICATION	0.003821584959876798	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999706639779414	WITHOUT_CLASSIFICATION	2.933602205856595E-5	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999991656469831	WITHOUT_CLASSIFICATION	8.343530169036396E-7	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9907123784988678	WITHOUT_CLASSIFICATION	0.009287621501132055	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999826626940009	WITHOUT_CLASSIFICATION	1.7337305999087367E-5	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999849073345427	WITHOUT_CLASSIFICATION	1.5092665457313305E-5	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999882151838853	WITHOUT_CLASSIFICATION	1.1784816114720889E-5	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999840370794832	WITHOUT_CLASSIFICATION	1.5962920516755967E-5	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999982750998101	WITHOUT_CLASSIFICATION	1.7249001899278163E-6	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999962045805166	WITHOUT_CLASSIFICATION	3.7954194834068928E-6	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999993457078403	WITHOUT_CLASSIFICATION	6.542921596733455E-7	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9998782623656071	WITHOUT_CLASSIFICATION	1.217376343929876E-4	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999998218193066	WITHOUT_CLASSIFICATION	1.7818069346561872E-7	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.999980642731838	WITHOUT_CLASSIFICATION	1.935726816214042E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999968993304	WITHOUT_CLASSIFICATION	3.100669507558473E-9	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999968993304	WITHOUT_CLASSIFICATION	3.100669507558473E-9	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999968993304	WITHOUT_CLASSIFICATION	3.100669507558473E-9	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999786059500949	WITHOUT_CLASSIFICATION	2.139404990502583E-5	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999786059500949	WITHOUT_CLASSIFICATION	2.139404990502583E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999989859185239	WITHOUT_CLASSIFICATION	1.0140814761153319E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999989859185239	WITHOUT_CLASSIFICATION	1.0140814761153319E-6	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.999999999852811	WITHOUT_CLASSIFICATION	1.471890417932916E-10	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9939016553901233	WITHOUT_CLASSIFICATION	0.006098344609876615	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999937898538235	WITHOUT_CLASSIFICATION	6.210146176530323E-6	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999996463849687	WITHOUT_CLASSIFICATION	3.53615031351E-7	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999968993304	WITHOUT_CLASSIFICATION	3.100669507558473E-9	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999968993304	WITHOUT_CLASSIFICATION	3.100669507558473E-9	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999968993304	WITHOUT_CLASSIFICATION	3.100669507558473E-9	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999786059500949	WITHOUT_CLASSIFICATION	2.139404990502583E-5	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999786059500949	WITHOUT_CLASSIFICATION	2.139404990502583E-5	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999786059500949	WITHOUT_CLASSIFICATION	2.139404990502583E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999989859185239	WITHOUT_CLASSIFICATION	1.0140814761153319E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999989859185239	WITHOUT_CLASSIFICATION	1.0140814761153319E-6	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999990662888	WITHOUT_CLASSIFICATION	9.337112205276303E-10	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9997578450066137	WITHOUT_CLASSIFICATION	2.4215499338641017E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998546433653	WITHOUT_CLASSIFICATION	1.453566348272751E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998546433653	WITHOUT_CLASSIFICATION	1.453566348272751E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998546433653	WITHOUT_CLASSIFICATION	1.453566348272751E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998546433653	WITHOUT_CLASSIFICATION	1.453566348272751E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998546433653	WITHOUT_CLASSIFICATION	1.453566348272751E-7	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999418916100203	WITHOUT_CLASSIFICATION	5.810838997976178E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999993337262494	WITHOUT_CLASSIFICATION	6.662737506523531E-7	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999685692917247	WITHOUT_CLASSIFICATION	3.143070827529368E-5	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.999998026516669	WITHOUT_CLASSIFICATION	1.97348333103478E-6	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999862251050354	WITHOUT_CLASSIFICATION	1.3774894964473565E-5	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9998883131425179	WITHOUT_CLASSIFICATION	1.1168685748208043E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.99995596577818	WITHOUT_CLASSIFICATION	4.40342218199013E-5	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999994411356131	WITHOUT_CLASSIFICATION	5.588643869865724E-7	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999952353572782	WITHOUT_CLASSIFICATION	4.7646427217822785E-6	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999559822144333	WITHOUT_CLASSIFICATION	4.401778556662472E-5	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999650754170796	WITHOUT_CLASSIFICATION	3.492458292035776E-5	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999835577844	WITHOUT_CLASSIFICATION	1.6442215560133394E-8	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999727874185483	WITHOUT_CLASSIFICATION	2.7212581451707677E-5	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999625738651773	WITHOUT_CLASSIFICATION	3.74261348227304E-5	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9997085408965505	WITHOUT_CLASSIFICATION	2.9145910344952487E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9983426516098793	WITHOUT_CLASSIFICATION	0.0016573483901206577	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9983426516098793	WITHOUT_CLASSIFICATION	0.0016573483901206577	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9983426516098793	WITHOUT_CLASSIFICATION	0.0016573483901206577	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998387407252245	WITHOUT_CLASSIFICATION	1.6125927477538948E-4	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998399716963636	WITHOUT_CLASSIFICATION	1.6002830363624637E-4	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999996375519986	WITHOUT_CLASSIFICATION	3.6244800140683376E-7	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999989025375786	WITHOUT_CLASSIFICATION	1.0974624213649196E-6	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999956869951934	WITHOUT_CLASSIFICATION	4.31300480665282E-6	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.999999037979686	WITHOUT_CLASSIFICATION	9.620203140265946E-7	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.999999786741167	WITHOUT_CLASSIFICATION	2.1325883310183003E-7	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9999992880077982	WITHOUT_CLASSIFICATION	7.119922017215119E-7	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999994783524303	WITHOUT_CLASSIFICATION	5.216475697402873E-7	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998377304521	WITHOUT_CLASSIFICATION	1.622695479981131E-7	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999551394227	WITHOUT_CLASSIFICATION	4.486057721164209E-8	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999998279765967	WITHOUT_CLASSIFICATION	1.7202340322815495E-7	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999968167310962	WITHOUT_CLASSIFICATION	3.1832689038410987E-6	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999999645913356	WITHOUT_CLASSIFICATION	3.540866453284683E-8	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999999638224223	WITHOUT_CLASSIFICATION	3.617757771491083E-8	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999995723048669	WITHOUT_CLASSIFICATION	4.276951330881736E-7	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999999066226994	WITHOUT_CLASSIFICATION	9.337730051751822E-8	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999997576479125	WITHOUT_CLASSIFICATION	2.423520875005908E-7	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999984155097176	WITHOUT_CLASSIFICATION	1.584490282403485E-6	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999952635311362	WITHOUT_CLASSIFICATION	4.736468863724541E-6	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999977312031592	WITHOUT_CLASSIFICATION	2.2687968407554985E-6	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999973943213268	WITHOUT_CLASSIFICATION	2.605678673210907E-6	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9371007573333456	WITHOUT_CLASSIFICATION	0.06289924266665442	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999547218298824	WITHOUT_CLASSIFICATION	4.5278170117501685E-5	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999993810224755	WITHOUT_CLASSIFICATION	6.189775245603982E-7	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999998085114069	WITHOUT_CLASSIFICATION	1.9148859300666862E-7	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999999037358782	WITHOUT_CLASSIFICATION	9.626412177235567E-8	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999995337103716	WITHOUT_CLASSIFICATION	4.66289628359735E-7	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999706048155166	WITHOUT_CLASSIFICATION	2.9395184483441567E-5	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999979771972758	WITHOUT_CLASSIFICATION	2.0228027242933716E-6	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999952597633791	WITHOUT_CLASSIFICATION	4.740236620809713E-6	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999924289596771	WITHOUT_CLASSIFICATION	7.571040322902855E-6	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999942309998913	WITHOUT_CLASSIFICATION	5.769000108627091E-6	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999968292570541	WITHOUT_CLASSIFICATION	3.1707429458000483E-6	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999951691052487	WITHOUT_CLASSIFICATION	4.830894751278152E-6	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999963111754848	WITHOUT_CLASSIFICATION	3.6888245152446767E-6	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999840809718594	WITHOUT_CLASSIFICATION	1.591902814055915E-5	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999306586611425	WITHOUT_CLASSIFICATION	6.93413388575557E-5	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999999943629814	WITHOUT_CLASSIFICATION	5.637018595643353E-8	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999584644320964	WITHOUT_CLASSIFICATION	4.153556790368337E-5	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999817484012	WITHOUT_CLASSIFICATION	1.825159883372689E-8	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9777362293473333	WITHOUT_CLASSIFICATION	0.022263770652666735	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9547472147642201	WITHOUT_CLASSIFICATION	0.045252785235779885	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999347275299844	WITHOUT_CLASSIFICATION	6.527247001566854E-5	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.999955521734361	WITHOUT_CLASSIFICATION	4.4478265639072E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9976861473972201	WITHOUT_CLASSIFICATION	0.0023138526027799465	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999929133745439	WITHOUT_CLASSIFICATION	7.086625456059875E-6	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999929133745439	WITHOUT_CLASSIFICATION	7.086625456059875E-6	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9985394333514371	WITHOUT_CLASSIFICATION	0.0014605666485628286	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.999975770557629	WITHOUT_CLASSIFICATION	2.4229442371030403E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9937177952906134	WITHOUT_CLASSIFICATION	0.006282204709386611	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9996626287313893	WITHOUT_CLASSIFICATION	3.373712686106997E-4	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.999887098063192	WITHOUT_CLASSIFICATION	1.1290193680805898E-4	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999998461803784	WITHOUT_CLASSIFICATION	1.5381962155981968E-7	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9980981338484243	WITHOUT_CLASSIFICATION	0.0019018661515758243	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999599250936	WITHOUT_CLASSIFICATION	4.0074906366827725E-8	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.999995100673864	WITHOUT_CLASSIFICATION	4.899326136048347E-6	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.999993780513373	WITHOUT_CLASSIFICATION	6.219486627070818E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999588927925172	WITHOUT_CLASSIFICATION	4.1107207482847605E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999588927925172	WITHOUT_CLASSIFICATION	4.1107207482847605E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999588927925172	WITHOUT_CLASSIFICATION	4.1107207482847605E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999588927925172	WITHOUT_CLASSIFICATION	4.1107207482847605E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999978494671165	WITHOUT_CLASSIFICATION	2.15053288354925E-6	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999722931591912	WITHOUT_CLASSIFICATION	2.7706840808816982E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9998037638369075	WITHOUT_CLASSIFICATION	1.9623616309249193E-4	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9991574531689842	WITHOUT_CLASSIFICATION	8.425468310156793E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9155607920066118	DESIGN	0.08443920799338825	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999988966993792	WITHOUT_CLASSIFICATION	1.1033006207081185E-6	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999999464183336	WITHOUT_CLASSIFICATION	5.358166650690919E-8	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998734151573	WITHOUT_CLASSIFICATION	1.26584842688937E-7	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998734151573	WITHOUT_CLASSIFICATION	1.26584842688937E-7	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999714080674	WITHOUT_CLASSIFICATION	2.859193254092527E-8	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999887453291879	WITHOUT_CLASSIFICATION	1.1254670812103486E-5	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999989909532	WITHOUT_CLASSIFICATION	1.0090468469252482E-9	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999441238755	WITHOUT_CLASSIFICATION	5.587612449732368E-7	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999441238755	WITHOUT_CLASSIFICATION	5.587612449732368E-7	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999865192156	WITHOUT_CLASSIFICATION	1.3480784328102395E-8	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999972639730142	WITHOUT_CLASSIFICATION	2.7360269857461734E-6	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999972639730142	WITHOUT_CLASSIFICATION	2.7360269857461734E-6	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999863752442529	WITHOUT_CLASSIFICATION	1.3624755746952942E-5	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999609136858	WITHOUT_CLASSIFICATION	3.908631410007805E-8	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.999999997357971	WITHOUT_CLASSIFICATION	2.6420290707839906E-9	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999899853323883	WITHOUT_CLASSIFICATION	1.0014667611719075E-5	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999457724108864	WITHOUT_CLASSIFICATION	5.422758911348364E-5	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999897753191219	WITHOUT_CLASSIFICATION	1.0224680878145503E-5	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.7798608062532091	WITHOUT_CLASSIFICATION	0.2201391937467909	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9998210249097871	WITHOUT_CLASSIFICATION	1.7897509021286244E-4	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999996242805	WITHOUT_CLASSIFICATION	3.757194996597054E-10	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999999297097842	WITHOUT_CLASSIFICATION	7.029021567946942E-8	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999993608342204	WITHOUT_CLASSIFICATION	6.391657797592595E-7	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999900460798417	WITHOUT_CLASSIFICATION	9.953920158400453E-6	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9998274447273677	WITHOUT_CLASSIFICATION	1.7255527263222E-4	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9998958502271479	WITHOUT_CLASSIFICATION	1.041497728520902E-4	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999126525384693	WITHOUT_CLASSIFICATION	8.734746153063344E-5	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.804288890244581	WITHOUT_CLASSIFICATION	0.1957111097554191	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999950479753158	WITHOUT_CLASSIFICATION	4.952024684212522E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999977228926029	WITHOUT_CLASSIFICATION	2.277107397058005E-6	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999997215411451	WITHOUT_CLASSIFICATION	2.784588548490974E-7	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.7889779242414692	WITHOUT_CLASSIFICATION	0.21102207575853088	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9998974132882699	WITHOUT_CLASSIFICATION	1.0258671173008444E-4	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999993860551752	WITHOUT_CLASSIFICATION	6.139448246397377E-7	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.999999406482509	WITHOUT_CLASSIFICATION	5.935174910339534E-7	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.999988656753967	WITHOUT_CLASSIFICATION	1.134324603304814E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9946496212082357	WITHOUT_CLASSIFICATION	0.005350378791764217	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9966590168739626	WITHOUT_CLASSIFICATION	0.003340983126037349	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999977989402569	WITHOUT_CLASSIFICATION	2.2010597431933714E-6	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999996890892223	WITHOUT_CLASSIFICATION	3.109107776789966E-7	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999990208763616	WITHOUT_CLASSIFICATION	9.791236384033614E-7	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999860493708982	WITHOUT_CLASSIFICATION	1.3950629101748377E-5	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999820631084888	WITHOUT_CLASSIFICATION	1.7936891511253132E-5	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999999946285993	WITHOUT_CLASSIFICATION	5.371400687528092E-9	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9973882566150242	DESIGN	0.0026117433849758105	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9995380976929847	WITHOUT_CLASSIFICATION	4.619023070152102E-4	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999879511858978	WITHOUT_CLASSIFICATION	1.2048814102341787E-5	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9697481371790794	WITHOUT_CLASSIFICATION	0.03025186282092067	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999999701136321	WITHOUT_CLASSIFICATION	2.988636790835733E-7	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999218883189	WITHOUT_CLASSIFICATION	7.811168110083007E-8	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999994854247419	WITHOUT_CLASSIFICATION	5.14575258058399E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9697481371790794	WITHOUT_CLASSIFICATION	0.03025186282092067	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999999701136321	WITHOUT_CLASSIFICATION	2.988636790835733E-7	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.99999784385263	WITHOUT_CLASSIFICATION	2.1561473700296733E-6	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999989006851685	WITHOUT_CLASSIFICATION	1.0993148315181996E-6	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999989006851685	WITHOUT_CLASSIFICATION	1.0993148315181996E-6	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999997591411414	WITHOUT_CLASSIFICATION	2.408588586047102E-6	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.8159036479345769	WITHOUT_CLASSIFICATION	0.184096352065423	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999375498748	WITHOUT_CLASSIFICATION	6.245012516979162E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999998057604382	WITHOUT_CLASSIFICATION	1.9423956174649664E-7	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9994401806276503	WITHOUT_CLASSIFICATION	5.598193723496775E-4	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9900030648794547	WITHOUT_CLASSIFICATION	0.009996935120545258	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999855354048012	WITHOUT_CLASSIFICATION	1.4464595198809812E-5	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999651366970315	WITHOUT_CLASSIFICATION	3.4863302968492275E-5	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996801116873623	WITHOUT_CLASSIFICATION	3.198883126377886E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999944589138571	WITHOUT_CLASSIFICATION	5.541086142942443E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.999999635019897	WITHOUT_CLASSIFICATION	3.6498010302154575E-7	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999999011572424	WITHOUT_CLASSIFICATION	9.884275756710821E-8	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999993735979296	WITHOUT_CLASSIFICATION	6.26402070487168E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998400978823	WITHOUT_CLASSIFICATION	1.5990211756043686E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998400978823	WITHOUT_CLASSIFICATION	1.5990211756043686E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9908376178269946	WITHOUT_CLASSIFICATION	0.009162382173005332	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9908376178269946	WITHOUT_CLASSIFICATION	0.009162382173005332	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999999609728919	WITHOUT_CLASSIFICATION	3.902710810961056E-8	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999970690645605	WITHOUT_CLASSIFICATION	2.9309354393914733E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999961873021569	WITHOUT_CLASSIFICATION	3.81269784299645E-6	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999963397043895	WITHOUT_CLASSIFICATION	3.6602956104173025E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999995401634585	WITHOUT_CLASSIFICATION	4.5983654143960763E-7	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999998575864057	WITHOUT_CLASSIFICATION	1.42413594211443E-7	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999375498748	WITHOUT_CLASSIFICATION	6.245012516979162E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999998057604382	WITHOUT_CLASSIFICATION	1.9423956174649664E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996801116873623	WITHOUT_CLASSIFICATION	3.198883126377886E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999944589138571	WITHOUT_CLASSIFICATION	5.541086142942443E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998305840058569	WITHOUT_CLASSIFICATION	1.694159941431845E-4	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999998086554045	WITHOUT_CLASSIFICATION	1.9134459563602165E-7	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999866022475893	WITHOUT_CLASSIFICATION	1.339775241075209E-5	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999999759207486	WITHOUT_CLASSIFICATION	2.407925144372562E-8	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999998090023682	WITHOUT_CLASSIFICATION	1.909976318819883E-7	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999990047900444	WITHOUT_CLASSIFICATION	9.952099556135185E-7	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9998991530293645	WITHOUT_CLASSIFICATION	1.0084697063546098E-4	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999982703727877	WITHOUT_CLASSIFICATION	1.7296272124639947E-6	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.999999978818834	WITHOUT_CLASSIFICATION	2.1181166119836894E-8	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999882922417349	WITHOUT_CLASSIFICATION	1.1707758265137091E-5	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999185598142	WITHOUT_CLASSIFICATION	8.144018586051986E-8	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999935456922	WITHOUT_CLASSIFICATION	6.454307818696797E-9	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9230125592289739	WITHOUT_CLASSIFICATION	0.07698744077102618	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999140515129872	WITHOUT_CLASSIFICATION	8.594848701279276E-5	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.999987151789399	WITHOUT_CLASSIFICATION	1.2848210600880323E-5	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9917894494679053	WITHOUT_CLASSIFICATION	0.008210550532094739	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999940824832786	WITHOUT_CLASSIFICATION	5.9175167213556095E-6	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999971274287855	WITHOUT_CLASSIFICATION	2.8725712144419757E-6	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999976350101337	WITHOUT_CLASSIFICATION	2.3649898662633757E-6	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999260520591	WITHOUT_CLASSIFICATION	7.394794098358582E-8	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999998431810525	WITHOUT_CLASSIFICATION	1.5681894753550592E-7	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999998431810525	WITHOUT_CLASSIFICATION	1.5681894753550592E-7	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999995957883008	WITHOUT_CLASSIFICATION	4.04211699174302E-7	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999998848423564	WITHOUT_CLASSIFICATION	1.1515764366860709E-7	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9991292760214254	WITHOUT_CLASSIFICATION	8.707239785745824E-4	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999995123680109	WITHOUT_CLASSIFICATION	4.876319891344471E-7	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999995123680109	WITHOUT_CLASSIFICATION	4.876319891344471E-7	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999866022475893	WITHOUT_CLASSIFICATION	1.339775241075209E-5	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999569317048258	WITHOUT_CLASSIFICATION	4.306829517415909E-5	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999973654489401	WITHOUT_CLASSIFICATION	2.6345510598737693E-6	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999995934068783	WITHOUT_CLASSIFICATION	4.0659312176955763E-7	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999993941861037	WITHOUT_CLASSIFICATION	6.058138961970055E-7	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999996277246815	WITHOUT_CLASSIFICATION	3.722753184800554E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999171281932088	WITHOUT_CLASSIFICATION	8.287180679119473E-4	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999998073624966	WITHOUT_CLASSIFICATION	1.9263750337777988E-7	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999235823219574	WITHOUT_CLASSIFICATION	7.641767804255466E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999997842660038	WITHOUT_CLASSIFICATION	2.15733996137198E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999160914574737	WITHOUT_CLASSIFICATION	8.390854252630166E-5	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999808113053418	WITHOUT_CLASSIFICATION	1.9188694658226466E-5	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9998401287596477	WITHOUT_CLASSIFICATION	1.598712403523478E-4	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999975079901937	WITHOUT_CLASSIFICATION	2.492009806299472E-6	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9894584340453845	WITHOUT_CLASSIFICATION	0.010541565954615483	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999985105686036	WITHOUT_CLASSIFICATION	1.4894313963926083E-6	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999782736068552	WITHOUT_CLASSIFICATION	2.1726393144808854E-5	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999993052650737	WITHOUT_CLASSIFICATION	6.947349261980166E-7	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999902455070342	WITHOUT_CLASSIFICATION	9.754492965787716E-6	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999975969348	WITHOUT_CLASSIFICATION	2.4030651060445997E-9	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999998819712	WITHOUT_CLASSIFICATION	1.1802881996262004E-10	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999979174971422	WITHOUT_CLASSIFICATION	2.0825028578877384E-6	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9951726692847279	WITHOUT_CLASSIFICATION	0.0048273307152721205	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999996026382865	WITHOUT_CLASSIFICATION	3.973617135539673E-7	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999966280306	WITHOUT_CLASSIFICATION	3.371969413730255E-9	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999996885105894	WITHOUT_CLASSIFICATION	3.114894105527319E-7	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999994734150974	WITHOUT_CLASSIFICATION	5.265849024602906E-7	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999998291884516	WITHOUT_CLASSIFICATION	1.7081154832538647E-7	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999987869329667	WITHOUT_CLASSIFICATION	1.2130670332403814E-6	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999604821708385	WITHOUT_CLASSIFICATION	3.951782916134888E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999776288752	WITHOUT_CLASSIFICATION	2.237112477733274E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999776288752	WITHOUT_CLASSIFICATION	2.237112477733274E-8	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999997569559288	WITHOUT_CLASSIFICATION	2.4304407126035456E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999995011316767	WITHOUT_CLASSIFICATION	4.988683232996766E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999995011316767	WITHOUT_CLASSIFICATION	4.988683232996766E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999985030272728	WITHOUT_CLASSIFICATION	1.4969727271647965E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999985030272728	WITHOUT_CLASSIFICATION	1.4969727271647965E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999996130778631	WITHOUT_CLASSIFICATION	3.8692213691626E-7	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999983025362	WITHOUT_CLASSIFICATION	1.6974638899192273E-9	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999930091493257	WITHOUT_CLASSIFICATION	6.990850674367103E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.999999754271387	WITHOUT_CLASSIFICATION	2.457286129609516E-7	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999995108783872	WITHOUT_CLASSIFICATION	4.891216128116878E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999944214513505	WITHOUT_CLASSIFICATION	5.578548649473247E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999944214513505	WITHOUT_CLASSIFICATION	5.578548649473247E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999966280306	WITHOUT_CLASSIFICATION	3.371969413730255E-9	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999966280306	WITHOUT_CLASSIFICATION	3.371969413730255E-9	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999966280306	WITHOUT_CLASSIFICATION	3.371969413730255E-9	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999996885105894	WITHOUT_CLASSIFICATION	3.114894105527319E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999776288752	WITHOUT_CLASSIFICATION	2.237112477733274E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999776288752	WITHOUT_CLASSIFICATION	2.237112477733274E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999776288752	WITHOUT_CLASSIFICATION	2.237112477733274E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999996130778631	WITHOUT_CLASSIFICATION	3.8692213691626E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999996130778631	WITHOUT_CLASSIFICATION	3.8692213691626E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999996130778631	WITHOUT_CLASSIFICATION	3.8692213691626E-7	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.999999754271387	WITHOUT_CLASSIFICATION	2.457286129609516E-7	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.999999754271387	WITHOUT_CLASSIFICATION	2.457286129609516E-7	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.999818662770117	WITHOUT_CLASSIFICATION	1.8133722988301578E-4	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999990490376658	WITHOUT_CLASSIFICATION	9.509623341508273E-7	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999993012566156	WITHOUT_CLASSIFICATION	6.987433843190982E-7	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9353376890464612	DESIGN	0.06466231095353873	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999327996576088	WITHOUT_CLASSIFICATION	6.720034239116159E-5	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.999967933064689	WITHOUT_CLASSIFICATION	3.206693531105599E-5	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.999967933064689	WITHOUT_CLASSIFICATION	3.206693531105599E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999890497122828	WITHOUT_CLASSIFICATION	1.0950287717206496E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999171281932088	WITHOUT_CLASSIFICATION	8.287180679119473E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999171281932088	WITHOUT_CLASSIFICATION	8.287180679119473E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999171281932088	WITHOUT_CLASSIFICATION	8.287180679119473E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999171281932088	WITHOUT_CLASSIFICATION	8.287180679119473E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999171281932088	WITHOUT_CLASSIFICATION	8.287180679119473E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998707770885	WITHOUT_CLASSIFICATION	1.292229114706252E-7	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998707770885	WITHOUT_CLASSIFICATION	1.292229114706252E-7	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998707770885	WITHOUT_CLASSIFICATION	1.292229114706252E-7	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999818830357	WITHOUT_CLASSIFICATION	1.8116964159573276E-8	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999979645050775	WITHOUT_CLASSIFICATION	2.0354949225463246E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999996885105894	WITHOUT_CLASSIFICATION	3.114894105527319E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999996130778631	WITHOUT_CLASSIFICATION	3.8692213691626E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999996130778631	WITHOUT_CLASSIFICATION	3.8692213691626E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999171281932088	WITHOUT_CLASSIFICATION	8.287180679119473E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999171281932088	WITHOUT_CLASSIFICATION	8.287180679119473E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998707770885	WITHOUT_CLASSIFICATION	1.292229114706252E-7	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999890497122828	WITHOUT_CLASSIFICATION	1.0950287717206496E-4	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999996748410649	WITHOUT_CLASSIFICATION	3.2515893506587797E-7	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999998632982319	WITHOUT_CLASSIFICATION	1.3670176811312218E-7	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999995451230811	WITHOUT_CLASSIFICATION	4.548769188907442E-7	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9832097804541176	WITHOUT_CLASSIFICATION	0.016790219545882442	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999996029266821	WITHOUT_CLASSIFICATION	3.970733178946721E-7	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999997301339192	WITHOUT_CLASSIFICATION	2.698660807823313E-7	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999737885589396	WITHOUT_CLASSIFICATION	2.6211441060428814E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999709621849776	WITHOUT_CLASSIFICATION	2.9037815022429533E-5	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.999949747692477	WITHOUT_CLASSIFICATION	5.0252307523108235E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999975086460223	WITHOUT_CLASSIFICATION	2.4913539777318524E-6	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9611986732204535	WITHOUT_CLASSIFICATION	0.038801326779546494	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.999999940921484	WITHOUT_CLASSIFICATION	5.907851585511793E-8	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999626416500339	WITHOUT_CLASSIFICATION	3.735834996602429E-5	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999992730503539	WITHOUT_CLASSIFICATION	7.269496461620345E-7	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999994075980918	WITHOUT_CLASSIFICATION	5.924019081895029E-7	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9997420171515261	WITHOUT_CLASSIFICATION	2.5798284847395686E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.999983070681244	WITHOUT_CLASSIFICATION	1.6929318755932273E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999223334621753	WITHOUT_CLASSIFICATION	7.766653782465602E-5	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9984466204985262	WITHOUT_CLASSIFICATION	0.0015533795014738036	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999997043517065	WITHOUT_CLASSIFICATION	2.95648293524873E-7	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999976660018902	WITHOUT_CLASSIFICATION	2.3339981097463434E-6	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999981446688356	WITHOUT_CLASSIFICATION	1.8553311644487149E-6	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999997614526257	WITHOUT_CLASSIFICATION	2.3854737427201805E-7	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999983525930833	WITHOUT_CLASSIFICATION	1.6474069166772947E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999909362487884	WITHOUT_CLASSIFICATION	9.063751211551992E-6	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9988686403645477	WITHOUT_CLASSIFICATION	0.0011313596354522982	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9999551007312492	WITHOUT_CLASSIFICATION	4.489926875082965E-5	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999595540043	WITHOUT_CLASSIFICATION	4.044599565076294E-8	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999696094026939	WITHOUT_CLASSIFICATION	3.039059730611381E-5	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9998537009733008	WITHOUT_CLASSIFICATION	1.462990266991551E-4	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999995828087144	WITHOUT_CLASSIFICATION	4.171912856745256E-7	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999745050275	WITHOUT_CLASSIFICATION	2.549497246148086E-8	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999996721279434	WITHOUT_CLASSIFICATION	3.2787205656938913E-7	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999755938866	WITHOUT_CLASSIFICATION	2.4406113294342953E-8	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999996748410649	WITHOUT_CLASSIFICATION	3.2515893506587797E-7	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999891423264	WITHOUT_CLASSIFICATION	1.0857673607587679E-8	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.999999444161602	WITHOUT_CLASSIFICATION	5.558383979355432E-7	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9961785942426964	WITHOUT_CLASSIFICATION	0.0038214057573036156	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999982020816133	WITHOUT_CLASSIFICATION	1.7979183867171908E-6	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999982020816133	WITHOUT_CLASSIFICATION	1.7979183867171908E-6	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9998826411148612	WITHOUT_CLASSIFICATION	1.1735888513882657E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9998826411148612	WITHOUT_CLASSIFICATION	1.1735888513882657E-4	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999781994632	WITHOUT_CLASSIFICATION	2.1800536786403747E-8	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999999725289166	WITHOUT_CLASSIFICATION	2.74710833886503E-7	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999999721848115	WITHOUT_CLASSIFICATION	2.7815188493629083E-7	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999426319578213	WITHOUT_CLASSIFICATION	5.736804217856414E-5	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999996048839801	WITHOUT_CLASSIFICATION	3.951160198375912E-7	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9957322372663236	WITHOUT_CLASSIFICATION	0.004267762733676327	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999998766541407	WITHOUT_CLASSIFICATION	1.233458593164457E-7	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999991474179612	WITHOUT_CLASSIFICATION	8.525820388112397E-6	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9993846380841559	WITHOUT_CLASSIFICATION	6.153619158440848E-4	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999998221668079	WITHOUT_CLASSIFICATION	1.7783319213131595E-7	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.999999986205846	WITHOUT_CLASSIFICATION	1.3794154163434023E-8	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999999081910325	WITHOUT_CLASSIFICATION	9.18089676001054E-8	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999999081910325	WITHOUT_CLASSIFICATION	9.18089676001054E-8	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999982253667	WITHOUT_CLASSIFICATION	1.7746332257524077E-9	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999989792304097	WITHOUT_CLASSIFICATION	1.0207695903527651E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999997948526239	WITHOUT_CLASSIFICATION	2.0514737617944802E-7	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999997948526239	WITHOUT_CLASSIFICATION	2.0514737617944802E-7	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999994804	WITHOUT_CLASSIFICATION	5.195999847318636E-10	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999994506204684	WITHOUT_CLASSIFICATION	5.493795316864991E-7	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9996473920410326	WITHOUT_CLASSIFICATION	3.5260795896734987E-4	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999939809823262	WITHOUT_CLASSIFICATION	6.019017673925236E-6	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999997306291138	WITHOUT_CLASSIFICATION	2.693708862234986E-7	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9253074719283227	WITHOUT_CLASSIFICATION	0.07469252807167723	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999870553832539	WITHOUT_CLASSIFICATION	1.2944616746193609E-5	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999932551690073	WITHOUT_CLASSIFICATION	6.744830992751083E-6	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999929976390575	WITHOUT_CLASSIFICATION	7.0023609426106956E-6	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.999999957098993	WITHOUT_CLASSIFICATION	4.290100697793932E-8	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999996538395554	WITHOUT_CLASSIFICATION	3.461604446721665E-7	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9997213870922212	WITHOUT_CLASSIFICATION	2.7861290777873106E-4	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999989519119328	WITHOUT_CLASSIFICATION	1.0480880673159852E-6	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999993653873888	WITHOUT_CLASSIFICATION	6.346126112049307E-7	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999988423884745	WITHOUT_CLASSIFICATION	1.1576115256273602E-6	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999983292684663	WITHOUT_CLASSIFICATION	1.670731533635685E-6	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998580095572593	WITHOUT_CLASSIFICATION	1.4199044274075244E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9995699078892711	WITHOUT_CLASSIFICATION	4.3009211072886865E-4	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999880319262	WITHOUT_CLASSIFICATION	1.196807378894929E-8	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999877836247902	WITHOUT_CLASSIFICATION	1.2216375209867175E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999972890411049	DESIGN	2.710958895115909E-6	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999856831959609	WITHOUT_CLASSIFICATION	1.4316804039144161E-5	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999952941011112	WITHOUT_CLASSIFICATION	4.705898888734906E-6	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999998807748459	WITHOUT_CLASSIFICATION	1.1922515411989297E-7	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999996286241596	WITHOUT_CLASSIFICATION	3.713758404015734E-7	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999775942264341	WITHOUT_CLASSIFICATION	2.2405773565896618E-5	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.999999675514997	WITHOUT_CLASSIFICATION	3.244850029741934E-7	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999928335867561	WITHOUT_CLASSIFICATION	7.166413243892472E-6	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.992827857057334	WITHOUT_CLASSIFICATION	0.007172142942666017	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999999974783665	WITHOUT_CLASSIFICATION	2.52163350582945E-8	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999157334211	WITHOUT_CLASSIFICATION	8.426657893668174E-8	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999668269712	WITHOUT_CLASSIFICATION	3.31730286946055E-8	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999990774976008	WITHOUT_CLASSIFICATION	9.225023992525258E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999999726161204	WITHOUT_CLASSIFICATION	2.73838795977044E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999999726161204	WITHOUT_CLASSIFICATION	2.73838795977044E-7	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999886340772198	WITHOUT_CLASSIFICATION	1.1365922780213174E-5	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999448894582766	WITHOUT_CLASSIFICATION	5.51105417233383E-5	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999959625747	WITHOUT_CLASSIFICATION	4.0374252997359415E-9	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.999996166245136	WITHOUT_CLASSIFICATION	3.833754864010668E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999195813236085	WITHOUT_CLASSIFICATION	8.041867639152351E-5	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9994296931661714	WITHOUT_CLASSIFICATION	5.70306833828672E-4	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9998031006795657	WITHOUT_CLASSIFICATION	1.9689932043434567E-4	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9997082825306949	WITHOUT_CLASSIFICATION	2.91717469305121E-4	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999555439589567	WITHOUT_CLASSIFICATION	4.4456041043306025E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999691010981051	WITHOUT_CLASSIFICATION	3.0898901894802E-5	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9835226494247764	WITHOUT_CLASSIFICATION	0.016477350575223634	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9977112675250025	WITHOUT_CLASSIFICATION	0.002288732474997579	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.999998447127672	WITHOUT_CLASSIFICATION	1.5528723279556904E-6	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999176901471375	WITHOUT_CLASSIFICATION	8.230985286252999E-5	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999937505428099	WITHOUT_CLASSIFICATION	6.249457190135191E-6	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999990334627207	WITHOUT_CLASSIFICATION	9.665372793067653E-7	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9964661904752096	WITHOUT_CLASSIFICATION	0.003533809524790449	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999937549570495	WITHOUT_CLASSIFICATION	6.245042950610308E-6	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9998889551322213	WITHOUT_CLASSIFICATION	1.110448677786361E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9998843032855657	WITHOUT_CLASSIFICATION	1.1569671443435873E-4	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9995953653801092	WITHOUT_CLASSIFICATION	4.0463461989088267E-4	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999913913986732	WITHOUT_CLASSIFICATION	8.608601326714953E-6	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9591932154661696	WITHOUT_CLASSIFICATION	0.04080678453383041	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999973148696131	WITHOUT_CLASSIFICATION	2.6851303869504796E-6	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9998858871740246	WITHOUT_CLASSIFICATION	1.1411282597537789E-4	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999990948950549	WITHOUT_CLASSIFICATION	9.051049452305856E-7	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999942160234	WITHOUT_CLASSIFICATION	5.783976541509826E-9	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999899463333	WITHOUT_CLASSIFICATION	1.0053666596921326E-8	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9997979925577493	WITHOUT_CLASSIFICATION	2.0200744225068215E-4	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9997811840416172	WITHOUT_CLASSIFICATION	2.1881595838285495E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999217977394	WITHOUT_CLASSIFICATION	7.820226055188104E-8	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999999838378248	WITHOUT_CLASSIFICATION	1.6162175172794962E-8	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.999999954260286	WITHOUT_CLASSIFICATION	4.573971396478209E-8	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999999881857021	WITHOUT_CLASSIFICATION	1.1814297785373443E-8	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999990927280041	WITHOUT_CLASSIFICATION	9.072719957673677E-7	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999997681106809	WITHOUT_CLASSIFICATION	2.3188931902379221E-7	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999729645552428	WITHOUT_CLASSIFICATION	2.703544475721845E-5	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999986711609338	WITHOUT_CLASSIFICATION	1.328839066144528E-6	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999939884464474	WITHOUT_CLASSIFICATION	6.0115535526464185E-6	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999993505101619	WITHOUT_CLASSIFICATION	6.494898380859595E-7	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999988339163073	WITHOUT_CLASSIFICATION	1.166083692745918E-6	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999240660851	WITHOUT_CLASSIFICATION	7.593391491622126E-8	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999240660851	WITHOUT_CLASSIFICATION	7.593391491622126E-8	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999998444752035	WITHOUT_CLASSIFICATION	1.5552479643914676E-7	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999998430804401	WITHOUT_CLASSIFICATION	1.5691955997546635E-7	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999998986073573	WITHOUT_CLASSIFICATION	1.0139264260875143E-7	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9997038243491221	WITHOUT_CLASSIFICATION	2.9617565087786086E-4	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999985309335826	WITHOUT_CLASSIFICATION	1.4690664174669302E-6	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999998891292643	WITHOUT_CLASSIFICATION	1.1087073573950107E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997011122911794	WITHOUT_CLASSIFICATION	2.988877088205796E-4	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9996193990581624	WITHOUT_CLASSIFICATION	3.806009418374531E-4	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999999201582809	WITHOUT_CLASSIFICATION	7.984171913660634E-8	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999878645438178	WITHOUT_CLASSIFICATION	1.2135456182205192E-5	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999897606370007	WITHOUT_CLASSIFICATION	1.0239362999283797E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999874540534293	WITHOUT_CLASSIFICATION	1.2545946570718617E-5	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.6075627797289951	WITHOUT_CLASSIFICATION	0.39243722027100486	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999986025943299	WITHOUT_CLASSIFICATION	1.397405670026282E-6	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999275063879518	WITHOUT_CLASSIFICATION	7.249361204826047E-5	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.8948332880398077	DESIGN	0.10516671196019231	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9956272971917037	WITHOUT_CLASSIFICATION	0.004372702808296305	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999960147089613	WITHOUT_CLASSIFICATION	3.9852910386765876E-6	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999995376123407	WITHOUT_CLASSIFICATION	4.623876592404156E-7	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9974058401092085	DESIGN	0.002594159890791533	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999950695949171	WITHOUT_CLASSIFICATION	4.930405082883377E-6	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999993662479058	WITHOUT_CLASSIFICATION	6.337520942242746E-7	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999996422434295	WITHOUT_CLASSIFICATION	3.5775657048208244E-7	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.5476718703633747	WITHOUT_CLASSIFICATION	0.45232812963662516	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999964950007	WITHOUT_CLASSIFICATION	3.5049992830670855E-9	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999848255813671	WITHOUT_CLASSIFICATION	1.5174418632898338E-5	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9994081441161721	WITHOUT_CLASSIFICATION	5.918558838279433E-4	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9998759646261216	WITHOUT_CLASSIFICATION	1.2403537387842902E-4	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999982925692996	WITHOUT_CLASSIFICATION	1.7074307003721176E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999971560414508	WITHOUT_CLASSIFICATION	2.843958549159156E-6	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999981352343082	WITHOUT_CLASSIFICATION	1.8647656917676159E-6	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999732777566	WITHOUT_CLASSIFICATION	2.67222433464165E-8	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999971560414508	WITHOUT_CLASSIFICATION	2.843958549159156E-6	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999996137967989	WITHOUT_CLASSIFICATION	3.862032010873291E-7	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9946496212082357	WITHOUT_CLASSIFICATION	0.005350378791764217	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999995996211282	WITHOUT_CLASSIFICATION	4.003788718755678E-7	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9989297959732918	DESIGN	0.001070204026708217	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999996794275945	WITHOUT_CLASSIFICATION	3.2057240542176953E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998546433653	WITHOUT_CLASSIFICATION	1.453566348272751E-7	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999997957098631	WITHOUT_CLASSIFICATION	2.042901369120324E-7	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9998571256772061	WITHOUT_CLASSIFICATION	1.4287432279386998E-4	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.8159036479345769	WITHOUT_CLASSIFICATION	0.184096352065423	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999877836247902	WITHOUT_CLASSIFICATION	1.2216375209867175E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999993012566156	WITHOUT_CLASSIFICATION	6.987433843190982E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9983676495192839	WITHOUT_CLASSIFICATION	0.0016323504807160352	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999484894851164	WITHOUT_CLASSIFICATION	5.151051488352269E-5	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999884292064806	WITHOUT_CLASSIFICATION	1.1570793519382545E-5	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999994075571245	WITHOUT_CLASSIFICATION	5.924428755191394E-7	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999992576582534	WITHOUT_CLASSIFICATION	7.423417465731839E-7	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.5993446588323001	WITHOUT_CLASSIFICATION	0.4006553411676999	DESIGN
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9985187814369882	WITHOUT_CLASSIFICATION	0.0014812185630117209	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9990682460926325	WITHOUT_CLASSIFICATION	9.317539073676916E-4	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999384990518054	WITHOUT_CLASSIFICATION	6.150094819450977E-5	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999998232556622	WITHOUT_CLASSIFICATION	1.7674433775623336E-7	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996909298418	WITHOUT_CLASSIFICATION	3.0907015830371747E-7	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9999562797246014	WITHOUT_CLASSIFICATION	4.372027539859935E-5	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999986525913136	WITHOUT_CLASSIFICATION	1.3474086864256982E-6	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999730921626772	WITHOUT_CLASSIFICATION	2.6907837322741784E-5	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999836546496254	WITHOUT_CLASSIFICATION	1.6345350374645848E-5	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999861512106297	WITHOUT_CLASSIFICATION	1.3848789370423158E-5	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999998432717808	WITHOUT_CLASSIFICATION	1.5672821928626257E-7	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999866591	WITHOUT_CLASSIFICATION	1.3340783634632218E-11	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9988388336709488	WITHOUT_CLASSIFICATION	0.0011611663290510687	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9988388336709488	WITHOUT_CLASSIFICATION	0.0011611663290510687	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999451609995	WITHOUT_CLASSIFICATION	5.4839000500395056E-8	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999999998949285	WITHOUT_CLASSIFICATION	1.050714991516308E-9	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999996779108326	WITHOUT_CLASSIFICATION	3.220891674133049E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9644780023974983	DESIGN	0.03552199760250169	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9644780023974983	DESIGN	0.03552199760250169	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9644780023974983	DESIGN	0.03552199760250169	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9644780023974983	DESIGN	0.03552199760250169	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999647925009182	WITHOUT_CLASSIFICATION	3.520749908182732E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9996635457195764	WITHOUT_CLASSIFICATION	3.3645428042356374E-4	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999644775042712	WITHOUT_CLASSIFICATION	3.552249572870775E-5	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.7911079868170308	WITHOUT_CLASSIFICATION	0.2088920131829692	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999568632808	WITHOUT_CLASSIFICATION	4.313671917997073E-8	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999999710602026	WITHOUT_CLASSIFICATION	2.893979745732667E-8	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999858284695026	WITHOUT_CLASSIFICATION	1.4171530497494836E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999858284695026	WITHOUT_CLASSIFICATION	1.4171530497494836E-5	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9009408164352044	WITHOUT_CLASSIFICATION	0.09905918356479555	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999880374558859	WITHOUT_CLASSIFICATION	1.1962544114013313E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9995186574220271	WITHOUT_CLASSIFICATION	4.8134257797305147E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.995896975450467	WITHOUT_CLASSIFICATION	0.004103024549533003	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999426095943982	WITHOUT_CLASSIFICATION	5.739040560192478E-5	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999999239182013	WITHOUT_CLASSIFICATION	7.608179884544157E-8	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999459431779	WITHOUT_CLASSIFICATION	5.4056822204914285E-8	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999997431897971	WITHOUT_CLASSIFICATION	2.5681020289887314E-7	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998009698375475	WITHOUT_CLASSIFICATION	1.990301624524688E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998009698375475	WITHOUT_CLASSIFICATION	1.990301624524688E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999732777566	WITHOUT_CLASSIFICATION	2.67222433464165E-8	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999857940727864	WITHOUT_CLASSIFICATION	1.4205927213580924E-5	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999888444862886	WITHOUT_CLASSIFICATION	1.1155513711457442E-5	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999940504716979	WITHOUT_CLASSIFICATION	5.949528302221382E-6	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999899198	WITHOUT_CLASSIFICATION	1.0080142906526089E-11	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999860613499322	WITHOUT_CLASSIFICATION	1.3938650067843164E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.999997428679153	WITHOUT_CLASSIFICATION	2.5713208471195504E-6	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999907686252211	WITHOUT_CLASSIFICATION	9.231374778901894E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999995995004346	WITHOUT_CLASSIFICATION	4.0049956542563186E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999995995004346	WITHOUT_CLASSIFICATION	4.0049956542563186E-7	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9997752393731926	WITHOUT_CLASSIFICATION	2.2476062680738945E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999970202779	WITHOUT_CLASSIFICATION	2.9797220450890833E-9	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999812575687	WITHOUT_CLASSIFICATION	1.8742431218685605E-8	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999940908506029	WITHOUT_CLASSIFICATION	5.9091493970976945E-6	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9997825940680123	WITHOUT_CLASSIFICATION	2.1740593198774668E-4	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999958526239008	WITHOUT_CLASSIFICATION	4.147376099198633E-6	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9990844723596598	WITHOUT_CLASSIFICATION	9.155276403403307E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998330985785954	WITHOUT_CLASSIFICATION	1.669014214046056E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998330985785954	WITHOUT_CLASSIFICATION	1.669014214046056E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998330985785954	WITHOUT_CLASSIFICATION	1.669014214046056E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998330985785954	WITHOUT_CLASSIFICATION	1.669014214046056E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999856513994476	WITHOUT_CLASSIFICATION	1.434860055225508E-5	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999993719331686	WITHOUT_CLASSIFICATION	6.280668313495013E-7	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9993199059024555	WITHOUT_CLASSIFICATION	6.800940975445634E-4	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999492572643128	WITHOUT_CLASSIFICATION	5.074273568720592E-5	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.999995567263058	WITHOUT_CLASSIFICATION	4.432736941918648E-6	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999926684026504	WITHOUT_CLASSIFICATION	7.331597349613106E-6	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999990457126081	WITHOUT_CLASSIFICATION	9.542873918874674E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999989572215373	WITHOUT_CLASSIFICATION	1.0427784626450215E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999989572215373	WITHOUT_CLASSIFICATION	1.0427784626450215E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999989572215373	WITHOUT_CLASSIFICATION	1.0427784626450215E-6	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999660144153895	WITHOUT_CLASSIFICATION	3.3985584610575716E-5	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999262817653498	WITHOUT_CLASSIFICATION	7.371823465017931E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999922958924062	WITHOUT_CLASSIFICATION	7.70410759372592E-6	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999922958924062	WITHOUT_CLASSIFICATION	7.70410759372592E-6	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999989275135528	WITHOUT_CLASSIFICATION	1.0724864471513059E-6	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994923546616846	WITHOUT_CLASSIFICATION	5.076453383153283E-4	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999942699477182	WITHOUT_CLASSIFICATION	5.7300522818142625E-6	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9998690091101041	WITHOUT_CLASSIFICATION	1.30990889895789E-4	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999916985179	WITHOUT_CLASSIFICATION	8.301481980312831E-9	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999987914484683	WITHOUT_CLASSIFICATION	1.208551531776331E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999956125828395	WITHOUT_CLASSIFICATION	4.387417160437403E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999956125828395	WITHOUT_CLASSIFICATION	4.387417160437403E-6	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999343290336	WITHOUT_CLASSIFICATION	6.567096638033954E-8	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999998420419042	WITHOUT_CLASSIFICATION	1.579580957588986E-7	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9995650177046629	WITHOUT_CLASSIFICATION	4.3498229533704095E-4	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9985672551354525	WITHOUT_CLASSIFICATION	0.0014327448645475365	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.999818922721242	WITHOUT_CLASSIFICATION	1.8107727875809877E-4	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999998176612414	WITHOUT_CLASSIFICATION	1.8233875855810958E-7	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999992935059853	WITHOUT_CLASSIFICATION	7.06494014607598E-7	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9949657930842668	WITHOUT_CLASSIFICATION	0.005034206915733171	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9953393151482639	WITHOUT_CLASSIFICATION	0.004660684851736138	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999846386977	WITHOUT_CLASSIFICATION	1.536130228052262E-8	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.999999379207374	WITHOUT_CLASSIFICATION	6.20792625967687E-7	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999995922785432	WITHOUT_CLASSIFICATION	4.0772145675563067E-7	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9869036961737981	WITHOUT_CLASSIFICATION	0.013096303826201826	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999914117507583	WITHOUT_CLASSIFICATION	8.58824924161745E-6	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999874971813933	WITHOUT_CLASSIFICATION	1.2502818606698274E-5	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.998915250892889	WITHOUT_CLASSIFICATION	0.0010847491071109977	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9998027696158693	WITHOUT_CLASSIFICATION	1.9723038413077982E-4	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9998635354728452	WITHOUT_CLASSIFICATION	1.3646452715480756E-4	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999801749009848	WITHOUT_CLASSIFICATION	1.982509901518287E-5	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999711709015203	WITHOUT_CLASSIFICATION	2.8829098479605114E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999995085001346	WITHOUT_CLASSIFICATION	4.914998653694841E-7	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9985435634777496	WITHOUT_CLASSIFICATION	0.0014564365222503655	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999995903629956	WITHOUT_CLASSIFICATION	4.096370043809148E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999995903629956	WITHOUT_CLASSIFICATION	4.096370043809148E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999995903629956	WITHOUT_CLASSIFICATION	4.096370043809148E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999995903629956	WITHOUT_CLASSIFICATION	4.096370043809148E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999995903629956	WITHOUT_CLASSIFICATION	4.096370043809148E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999995903629956	WITHOUT_CLASSIFICATION	4.096370043809148E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999995903629956	WITHOUT_CLASSIFICATION	4.096370043809148E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999995903629956	WITHOUT_CLASSIFICATION	4.096370043809148E-7	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999987249313275	WITHOUT_CLASSIFICATION	1.2750686725317376E-6	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999995616826588	WITHOUT_CLASSIFICATION	4.383173412110272E-7	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999792731056076	WITHOUT_CLASSIFICATION	2.0726894392379122E-5	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999973240974561	DESIGN	2.675902543778633E-6	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997011122911794	WITHOUT_CLASSIFICATION	2.988877088205796E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997011122911794	WITHOUT_CLASSIFICATION	2.988877088205796E-4	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.999996851497349	WITHOUT_CLASSIFICATION	3.1485026510307155E-6	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9529860795222542	WITHOUT_CLASSIFICATION	0.04701392047774573	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.999999997292339	WITHOUT_CLASSIFICATION	2.7076610568728634E-9	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999998802569318	WITHOUT_CLASSIFICATION	1.1974306827635937E-7	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999440300050462	WITHOUT_CLASSIFICATION	5.596999495395497E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999999366401257	WITHOUT_CLASSIFICATION	6.335987441724946E-8	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999978828086337	WITHOUT_CLASSIFICATION	2.117191366404131E-6	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.8231430301818367	WITHOUT_CLASSIFICATION	0.17685696981816335	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.999999081807229	WITHOUT_CLASSIFICATION	9.18192771107207E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999510310801814	WITHOUT_CLASSIFICATION	4.896891981858362E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999510310801814	WITHOUT_CLASSIFICATION	4.896891981858362E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999510310801814	WITHOUT_CLASSIFICATION	4.896891981858362E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9990005619015793	WITHOUT_CLASSIFICATION	9.994380984207317E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999491303751087	WITHOUT_CLASSIFICATION	5.0869624891281905E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999990565921638	WITHOUT_CLASSIFICATION	9.434078362029479E-7	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999987065530795	WITHOUT_CLASSIFICATION	1.2934469204037498E-6	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996601023624601	WITHOUT_CLASSIFICATION	3.398976375400391E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999995917324661	WITHOUT_CLASSIFICATION	4.0826753390748276E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999996676638269	WITHOUT_CLASSIFICATION	3.3233617312121874E-7	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9671968655903518	WITHOUT_CLASSIFICATION	0.03280313440964821	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999898142303231	WITHOUT_CLASSIFICATION	1.0185769676984615E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999898142303231	WITHOUT_CLASSIFICATION	1.0185769676984615E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999950728956069	WITHOUT_CLASSIFICATION	4.927104393186266E-6	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998640259066	WITHOUT_CLASSIFICATION	1.3597409333631866E-7	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.998544020019098	WITHOUT_CLASSIFICATION	0.0014559799809019819	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9320692472296725	WITHOUT_CLASSIFICATION	0.06793075277032744	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999993812370833	WITHOUT_CLASSIFICATION	6.187629166829828E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999993812370833	WITHOUT_CLASSIFICATION	6.187629166829828E-7	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9956846232578787	WITHOUT_CLASSIFICATION	0.0043153767421213384	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999189336652	WITHOUT_CLASSIFICATION	8.106633466915539E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999999135857038	WITHOUT_CLASSIFICATION	8.641429611642281E-8	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.998843179956106	WITHOUT_CLASSIFICATION	0.0011568200438939514	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999998416906052	WITHOUT_CLASSIFICATION	1.5830939479975963E-7	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999431644558	WITHOUT_CLASSIFICATION	5.6835544178524595E-8	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999431644558	WITHOUT_CLASSIFICATION	5.6835544178524595E-8	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999955703005754	WITHOUT_CLASSIFICATION	4.429699424633165E-6	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999955703005754	WITHOUT_CLASSIFICATION	4.429699424633165E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999808644377073	WITHOUT_CLASSIFICATION	1.9135562292689243E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999994444327852	WITHOUT_CLASSIFICATION	5.555672147864123E-7	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999979476206035	WITHOUT_CLASSIFICATION	2.0523793965632424E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999976758516742	WITHOUT_CLASSIFICATION	2.3241483257403197E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999982880457641	WITHOUT_CLASSIFICATION	1.711954235860213E-6	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999851649194536	WITHOUT_CLASSIFICATION	1.4835080546350908E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997380858518945	WITHOUT_CLASSIFICATION	2.6191414810553817E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999944214513505	WITHOUT_CLASSIFICATION	5.578548649473247E-6	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999998342792905	WITHOUT_CLASSIFICATION	1.6572070952005052E-7	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999960938731366	WITHOUT_CLASSIFICATION	3.906126863443139E-6	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8060952352074013	WITHOUT_CLASSIFICATION	0.19390476479259858	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9995620127467594	WITHOUT_CLASSIFICATION	4.379872532407099E-4	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9870900425465424	WITHOUT_CLASSIFICATION	0.012909957453457507	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999343474122855	WITHOUT_CLASSIFICATION	6.56525877145353E-5	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.7940559300260326	WITHOUT_CLASSIFICATION	0.20594406997396747	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9994131700428639	WITHOUT_CLASSIFICATION	5.868299571360585E-4	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9998938557840715	WITHOUT_CLASSIFICATION	1.0614421592846237E-4	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999999750969693	WITHOUT_CLASSIFICATION	2.4903030703657536E-7	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999875966977	WITHOUT_CLASSIFICATION	1.2403302284178666E-8	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999959636858233	WITHOUT_CLASSIFICATION	4.0363141767415955E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9983676495192839	WITHOUT_CLASSIFICATION	0.0016323504807160352	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998978106788732	WITHOUT_CLASSIFICATION	1.0218932112683638E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999994204751497	WITHOUT_CLASSIFICATION	5.795248502733794E-7	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999835819160929	WITHOUT_CLASSIFICATION	1.6418083907110478E-5	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999993856155469	WITHOUT_CLASSIFICATION	6.14384453227791E-7	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999332545510441	WITHOUT_CLASSIFICATION	6.674544895591086E-5	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999992097105734	WITHOUT_CLASSIFICATION	7.902894265281691E-7	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9984344180632765	WITHOUT_CLASSIFICATION	0.001565581936723478	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999997548476948	WITHOUT_CLASSIFICATION	2.4515230529593054E-7	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9998897930157575	WITHOUT_CLASSIFICATION	1.1020698424243885E-4	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999878774464086	WITHOUT_CLASSIFICATION	1.2122553591483959E-5	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999998573689618	WITHOUT_CLASSIFICATION	1.4263103816399347E-7	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9996141966418277	WITHOUT_CLASSIFICATION	3.858033581722567E-4	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999617840183594	WITHOUT_CLASSIFICATION	3.8215981640440876E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999997774239322	WITHOUT_CLASSIFICATION	2.2257606777388204E-7	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9247743236565575	DESIGN	0.07522567634344247	WITHOUT_CLASSIFICATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999815009004036	WITHOUT_CLASSIFICATION	1.8499099596335147E-5	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999729253818834	WITHOUT_CLASSIFICATION	2.7074618116531543E-5	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999987199621073	WITHOUT_CLASSIFICATION	1.2800378927683023E-6	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999829001998081	WITHOUT_CLASSIFICATION	1.7099800191896185E-4	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.94222807546528	WITHOUT_CLASSIFICATION	0.0577719245347199	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999995881250339	WITHOUT_CLASSIFICATION	4.118749661040082E-7	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.998450110891757	WITHOUT_CLASSIFICATION	0.0015498891082429465	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999691312832268	WITHOUT_CLASSIFICATION	3.0868716773059156E-5	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9988859255042088	WITHOUT_CLASSIFICATION	0.0011140744957911725	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997731789782559	WITHOUT_CLASSIFICATION	2.268210217439929E-4	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999967658834964	WITHOUT_CLASSIFICATION	3.234116503449637E-6	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999707354293	WITHOUT_CLASSIFICATION	2.926457056108267E-8	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999995030079926	WITHOUT_CLASSIFICATION	4.969920075360779E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999984061075169	WITHOUT_CLASSIFICATION	1.5938924831371226E-6	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999275190967429	WITHOUT_CLASSIFICATION	7.248090325702901E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999786757413678	WITHOUT_CLASSIFICATION	2.1324258632310675E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999786757413678	WITHOUT_CLASSIFICATION	2.1324258632310675E-5	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997721587107	WITHOUT_CLASSIFICATION	2.2784128930031736E-7	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997721587107	WITHOUT_CLASSIFICATION	2.2784128930031736E-7	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8897151923421656	WITHOUT_CLASSIFICATION	0.11028480765783437	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.8897151923421656	WITHOUT_CLASSIFICATION	0.11028480765783437	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999929918473048	WITHOUT_CLASSIFICATION	7.0081526951567215E-6	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999929918473048	WITHOUT_CLASSIFICATION	7.0081526951567215E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999876571745	WITHOUT_CLASSIFICATION	1.2342825656434137E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999876571745	WITHOUT_CLASSIFICATION	1.2342825656434137E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999876571745	WITHOUT_CLASSIFICATION	1.2342825656434137E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999876571745	WITHOUT_CLASSIFICATION	1.2342825656434137E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999876571745	WITHOUT_CLASSIFICATION	1.2342825656434137E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999876571745	WITHOUT_CLASSIFICATION	1.2342825656434137E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999876571745	WITHOUT_CLASSIFICATION	1.2342825656434137E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999876571745	WITHOUT_CLASSIFICATION	1.2342825656434137E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999876571745	WITHOUT_CLASSIFICATION	1.2342825656434137E-8	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999793499433113	WITHOUT_CLASSIFICATION	2.065005668871156E-5	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999793499433113	WITHOUT_CLASSIFICATION	2.065005668871156E-5	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999793499433113	WITHOUT_CLASSIFICATION	2.065005668871156E-5	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999975918814968	WITHOUT_CLASSIFICATION	2.408118503136397E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998977181798411	WITHOUT_CLASSIFICATION	1.0228182015901522E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998977181798411	WITHOUT_CLASSIFICATION	1.0228182015901522E-4	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998977181798411	WITHOUT_CLASSIFICATION	1.0228182015901522E-4	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998884756084	WITHOUT_CLASSIFICATION	1.1152439171666064E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998884756084	WITHOUT_CLASSIFICATION	1.1152439171666064E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998884756084	WITHOUT_CLASSIFICATION	1.1152439171666064E-7	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999983273306793	WITHOUT_CLASSIFICATION	1.6726693207538714E-6	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999990125779646	WITHOUT_CLASSIFICATION	9.874220352790862E-7	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9974670236265639	WITHOUT_CLASSIFICATION	0.002532976373436121	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9869826463451377	WITHOUT_CLASSIFICATION	0.013017353654862243	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9869826463451377	WITHOUT_CLASSIFICATION	0.013017353654862243	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9869826463451377	WITHOUT_CLASSIFICATION	0.013017353654862243	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999818679286716	WITHOUT_CLASSIFICATION	1.8132071328442615E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999995725647068	WITHOUT_CLASSIFICATION	4.2743529310432867E-7	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999995725647068	WITHOUT_CLASSIFICATION	4.2743529310432867E-7	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9896992311114442	WITHOUT_CLASSIFICATION	0.010300768888555837	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999776177156481	WITHOUT_CLASSIFICATION	2.238228435195751E-5	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999776177156481	WITHOUT_CLASSIFICATION	2.238228435195751E-5	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9989184950602719	DESIGN	0.0010815049397281662	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999999994475614	WITHOUT_CLASSIFICATION	5.524385990946797E-9	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999997103235083	WITHOUT_CLASSIFICATION	2.8967649176781103E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999940257931	WITHOUT_CLASSIFICATION	5.974206977997233E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999940257931	WITHOUT_CLASSIFICATION	5.974206977997233E-9	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9964968889843877	WITHOUT_CLASSIFICATION	0.0035031110156122872	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999864455535	WITHOUT_CLASSIFICATION	1.3554446385032126E-8	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9486390036229858	WITHOUT_CLASSIFICATION	0.051360996377014134	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9848947720675518	WITHOUT_CLASSIFICATION	0.015105227932448213	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9069804237983015	DESIGN	0.0930195762016985	WITHOUT_CLASSIFICATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999940257931	WITHOUT_CLASSIFICATION	5.974206977997233E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999940257931	WITHOUT_CLASSIFICATION	5.974206977997233E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999940257931	WITHOUT_CLASSIFICATION	5.974206977997233E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999940257931	WITHOUT_CLASSIFICATION	5.974206977997233E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999940257931	WITHOUT_CLASSIFICATION	5.974206977997233E-9	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999024271625984	WITHOUT_CLASSIFICATION	9.757283740166718E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999980363828522	WITHOUT_CLASSIFICATION	1.9636171476753366E-6	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999982091524	WITHOUT_CLASSIFICATION	1.7908476655741753E-9	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999899425016338	WITHOUT_CLASSIFICATION	1.005749836633122E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9988804953413118	WITHOUT_CLASSIFICATION	0.0011195046586881365	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999402524161202	WITHOUT_CLASSIFICATION	5.9747583879837135E-5	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.7446319430565504	DESIGN	0.25536805694344955	WITHOUT_CLASSIFICATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9572632203006094	WITHOUT_CLASSIFICATION	0.04273677969939065	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998433200701	WITHOUT_CLASSIFICATION	1.5667992985478346E-7	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.999980830939176	WITHOUT_CLASSIFICATION	1.9169060824062078E-5	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999996256612672	WITHOUT_CLASSIFICATION	3.743387327390905E-7	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999993662479058	WITHOUT_CLASSIFICATION	6.337520942242746E-7	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999945753425968	WITHOUT_CLASSIFICATION	5.4246574032618514E-6	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999720057701	WITHOUT_CLASSIFICATION	2.7994229892309352E-8	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999996781264272	WITHOUT_CLASSIFICATION	3.2187357268539767E-7	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9995249578574189	WITHOUT_CLASSIFICATION	4.7504214258106887E-4	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.99989403216648	WITHOUT_CLASSIFICATION	1.0596783351995744E-4	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999998014624789	WITHOUT_CLASSIFICATION	1.9853752118687589E-7	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999998976957328	WITHOUT_CLASSIFICATION	1.0230426710277141E-7	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999996392869542	WITHOUT_CLASSIFICATION	3.607130457587118E-7	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999955018597484	WITHOUT_CLASSIFICATION	4.498140251575927E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999978571027455	WITHOUT_CLASSIFICATION	2.142897254511182E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999878645438178	WITHOUT_CLASSIFICATION	1.2135456182205192E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978045401394	WITHOUT_CLASSIFICATION	2.1954598604751974E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978045401394	WITHOUT_CLASSIFICATION	2.1954598604751974E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978045401394	WITHOUT_CLASSIFICATION	2.1954598604751974E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978045401394	WITHOUT_CLASSIFICATION	2.1954598604751974E-6	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999972952944772	WITHOUT_CLASSIFICATION	2.704705522720438E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999969081857455	WITHOUT_CLASSIFICATION	3.0918142544852178E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999999223489743	WITHOUT_CLASSIFICATION	7.765102569868242E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999999223489743	WITHOUT_CLASSIFICATION	7.765102569868242E-7	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999912819272713	WITHOUT_CLASSIFICATION	8.718072728728629E-6	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999980308772111	WITHOUT_CLASSIFICATION	1.96912278892374E-6	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999998042631486	WITHOUT_CLASSIFICATION	1.957368514186283E-7	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999838890521	WITHOUT_CLASSIFICATION	1.6110947938680232E-8	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9998937649185922	WITHOUT_CLASSIFICATION	1.0623508140782121E-4	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999962146610726	WITHOUT_CLASSIFICATION	3.7853389274569034E-6	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999856463984799	WITHOUT_CLASSIFICATION	1.4353601520248121E-5	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999998591843865	WITHOUT_CLASSIFICATION	1.4081561361598645E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999998591843865	WITHOUT_CLASSIFICATION	1.4081561361598645E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999998591843865	WITHOUT_CLASSIFICATION	1.4081561361598645E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999998591843865	WITHOUT_CLASSIFICATION	1.4081561361598645E-7	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999944588231	WITHOUT_CLASSIFICATION	5.541176885984229E-9	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999923696071501	WITHOUT_CLASSIFICATION	7.630392849914444E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999923696071501	WITHOUT_CLASSIFICATION	7.630392849914444E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999923696071501	WITHOUT_CLASSIFICATION	7.630392849914444E-6	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999977424789331	WITHOUT_CLASSIFICATION	2.2575210668803522E-6	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999994307815573	WITHOUT_CLASSIFICATION	5.69218442678264E-7	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.997201631935112	WITHOUT_CLASSIFICATION	0.0027983680648880713	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9644780023974983	DESIGN	0.03552199760250169	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9644780023974983	DESIGN	0.03552199760250169	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999973022612	WITHOUT_CLASSIFICATION	2.6977388573290075E-9	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9988288418603027	WITHOUT_CLASSIFICATION	0.0011711581396972766	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999892647235019	WITHOUT_CLASSIFICATION	1.0735276498119397E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999892647235019	WITHOUT_CLASSIFICATION	1.0735276498119397E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.929047036374495	WITHOUT_CLASSIFICATION	0.07095296362550489	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.929047036374495	WITHOUT_CLASSIFICATION	0.07095296362550489	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9996168324255116	WITHOUT_CLASSIFICATION	3.831675744884381E-4	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9995270440156458	WITHOUT_CLASSIFICATION	4.7295598435421777E-4	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999738606526	WITHOUT_CLASSIFICATION	2.6139347329775206E-8	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999999578504939	WITHOUT_CLASSIFICATION	4.2149506088611244E-7	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999998849737274	WITHOUT_CLASSIFICATION	1.1502627259502827E-6	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999993723451172	WITHOUT_CLASSIFICATION	6.276548828512586E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999996585644335	WITHOUT_CLASSIFICATION	3.414355664490538E-7	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999989848983429	WITHOUT_CLASSIFICATION	1.0151016570406464E-6	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999964394485	WITHOUT_CLASSIFICATION	3.5605514999374343E-9	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999906298024106	WITHOUT_CLASSIFICATION	9.370197589398145E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999906298024106	WITHOUT_CLASSIFICATION	9.370197589398145E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999585527508	WITHOUT_CLASSIFICATION	4.144724918023126E-8	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999585527508	WITHOUT_CLASSIFICATION	4.144724918023126E-8	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999985397829492	WITHOUT_CLASSIFICATION	1.4602170508628289E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999999995102899	WITHOUT_CLASSIFICATION	4.897100957215295E-9	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999984491540659	WITHOUT_CLASSIFICATION	1.550845934130031E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999804183243904	WITHOUT_CLASSIFICATION	1.9581675609575613E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999804183243904	WITHOUT_CLASSIFICATION	1.9581675609575613E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999804183243904	WITHOUT_CLASSIFICATION	1.9581675609575613E-5	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999957993374596	WITHOUT_CLASSIFICATION	4.200662540320901E-6	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999793834421983	WITHOUT_CLASSIFICATION	2.0616557801792105E-5	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999886333868119	WITHOUT_CLASSIFICATION	1.1366613188156592E-5	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999944787841585	WITHOUT_CLASSIFICATION	5.521215841553987E-6	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999821306602735	WITHOUT_CLASSIFICATION	1.7869339726491036E-5	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999885629332084	WITHOUT_CLASSIFICATION	1.1437066791659613E-5	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999930511451034	WITHOUT_CLASSIFICATION	6.948854896663301E-6	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999986388097479	WITHOUT_CLASSIFICATION	1.3611902520519451E-6	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9913491064544601	WITHOUT_CLASSIFICATION	0.008650893545539998	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999898241926836	WITHOUT_CLASSIFICATION	1.0175807316341025E-5	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.8943801643468197	DESIGN	0.10561983565318035	WITHOUT_CLASSIFICATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999992274098798	WITHOUT_CLASSIFICATION	7.725901201703024E-7	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999636917444236	WITHOUT_CLASSIFICATION	3.630825557653796E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9644780023974983	DESIGN	0.03552199760250169	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9998016540450804	WITHOUT_CLASSIFICATION	1.9834595491969963E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9970619888277297	WITHOUT_CLASSIFICATION	0.002938011172270388	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9988388336709488	WITHOUT_CLASSIFICATION	0.0011611663290510687	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998396123772036	WITHOUT_CLASSIFICATION	1.603876227964353E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998396123772036	WITHOUT_CLASSIFICATION	1.603876227964353E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998396123772036	WITHOUT_CLASSIFICATION	1.603876227964353E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998396123772036	WITHOUT_CLASSIFICATION	1.603876227964353E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998396123772036	WITHOUT_CLASSIFICATION	1.603876227964353E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999539566014182	WITHOUT_CLASSIFICATION	4.6043398581904304E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998396123772036	WITHOUT_CLASSIFICATION	1.603876227964353E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998396123772036	WITHOUT_CLASSIFICATION	1.603876227964353E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998396123772036	WITHOUT_CLASSIFICATION	1.603876227964353E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9813856233535659	WITHOUT_CLASSIFICATION	0.01861437664643412	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9998538222168876	WITHOUT_CLASSIFICATION	1.4617778311251743E-4	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.999934232046521	WITHOUT_CLASSIFICATION	6.576795347899118E-5	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9995284070239804	WITHOUT_CLASSIFICATION	4.7159297601961854E-4	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999997347134979	WITHOUT_CLASSIFICATION	2.6528650213980854E-7	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999973707663827	WITHOUT_CLASSIFICATION	2.6292336172467E-6	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.996939549993312	WITHOUT_CLASSIFICATION	0.003060450006688061	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999966450149931	WITHOUT_CLASSIFICATION	3.3549850069594347E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999817271278681	WITHOUT_CLASSIFICATION	1.8272872131905123E-5	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999817271278681	WITHOUT_CLASSIFICATION	1.8272872131905123E-5	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999925189482651	WITHOUT_CLASSIFICATION	7.481051734947635E-6	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999795022131766	WITHOUT_CLASSIFICATION	2.0497786823358275E-5	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999870962200935	WITHOUT_CLASSIFICATION	1.2903779906508076E-5	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.999988662052594	WITHOUT_CLASSIFICATION	1.1337947406077082E-5	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999943551564044	WITHOUT_CLASSIFICATION	5.644843595566491E-6	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999911343422876	WITHOUT_CLASSIFICATION	8.865657712455925E-6	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999847398766039	WITHOUT_CLASSIFICATION	1.5260123396101493E-5	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999958785360241	WITHOUT_CLASSIFICATION	4.121463975830654E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999889683639089	WITHOUT_CLASSIFICATION	1.1031636091070131E-5	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999957952864007	WITHOUT_CLASSIFICATION	4.204713599317635E-6	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.999998506488135	WITHOUT_CLASSIFICATION	1.4935118649525148E-6	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.99999677800393	WITHOUT_CLASSIFICATION	3.2219960699754396E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999872899091353	WITHOUT_CLASSIFICATION	1.2710090864578069E-5	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.999992800936764	WITHOUT_CLASSIFICATION	7.199063235920009E-6	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999876934165631	WITHOUT_CLASSIFICATION	1.230658343685374E-5	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999897459022339	WITHOUT_CLASSIFICATION	1.0254097766230492E-5	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999897862831952	WITHOUT_CLASSIFICATION	1.0213716804880384E-5	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999892438823554	WITHOUT_CLASSIFICATION	1.07561176444646E-5	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999928310680775	WITHOUT_CLASSIFICATION	7.168931922564799E-6	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999963858134631	WITHOUT_CLASSIFICATION	3.614186536940287E-6	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999946286096921	WITHOUT_CLASSIFICATION	5.3713903077783915E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999963738867942	WITHOUT_CLASSIFICATION	3.6261132056881103E-6	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999913724638535	WITHOUT_CLASSIFICATION	8.627536146487548E-6	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9998253064786883	WITHOUT_CLASSIFICATION	1.7469352131170164E-4	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999759833895424	WITHOUT_CLASSIFICATION	2.401661045762273E-5	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.999978599744919	WITHOUT_CLASSIFICATION	2.1400255081014184E-5	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999651051026202	WITHOUT_CLASSIFICATION	3.489489737986426E-5	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999915694993413	WITHOUT_CLASSIFICATION	8.430500658678991E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999830348311332	WITHOUT_CLASSIFICATION	1.6965168866865252E-5	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999955221506175	WITHOUT_CLASSIFICATION	4.477849382504198E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999967331875966	WITHOUT_CLASSIFICATION	3.266812403345584E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999805679563939	WITHOUT_CLASSIFICATION	1.9432043606159844E-5	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999894212014533	WITHOUT_CLASSIFICATION	1.0578798546723302E-5	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999812947169401	WITHOUT_CLASSIFICATION	1.8705283059923013E-5	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999927072467331	WITHOUT_CLASSIFICATION	7.292753266849549E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999972351847847	WITHOUT_CLASSIFICATION	2.7648152153807002E-6	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999928534944563	WITHOUT_CLASSIFICATION	7.146505543650367E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999877526280735	WITHOUT_CLASSIFICATION	1.224737192651554E-5	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999972200358104	WITHOUT_CLASSIFICATION	2.779964189611664E-6	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.999988631294185	WITHOUT_CLASSIFICATION	1.1368705814887637E-5	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999875135152483	WITHOUT_CLASSIFICATION	1.2486484751707073E-5	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999926082827211	WITHOUT_CLASSIFICATION	7.391717279013148E-6	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999908829481471	WITHOUT_CLASSIFICATION	9.11705185287541E-6	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999573242217912	WITHOUT_CLASSIFICATION	4.267577820884208E-5	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999900645390116	WITHOUT_CLASSIFICATION	9.935460988467223E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999910311533239	WITHOUT_CLASSIFICATION	8.968846676101606E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999759614520892	WITHOUT_CLASSIFICATION	2.4038547910819843E-5	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999729900556922	WITHOUT_CLASSIFICATION	2.7009944307817788E-5	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.999994470382659	WITHOUT_CLASSIFICATION	5.529617340908704E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999823735128253	WITHOUT_CLASSIFICATION	1.7626487174724834E-5	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999887909145323	WITHOUT_CLASSIFICATION	1.1209085467660636E-5	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999938426215285	WITHOUT_CLASSIFICATION	6.1573784715232165E-6	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999979081576202	WITHOUT_CLASSIFICATION	2.0918423798047107E-6	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9998511447557401	WITHOUT_CLASSIFICATION	1.4885524426000218E-4	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9998511447557401	WITHOUT_CLASSIFICATION	1.4885524426000218E-4	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999777052420774	WITHOUT_CLASSIFICATION	2.229475792263977E-5	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999897487478967	WITHOUT_CLASSIFICATION	1.0251252103361723E-5	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999563095661993	WITHOUT_CLASSIFICATION	4.369043380081275E-5	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999906525829102	WITHOUT_CLASSIFICATION	9.347417089779317E-6	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.999979871651408	WITHOUT_CLASSIFICATION	2.012834859209045E-5	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999953104625222	WITHOUT_CLASSIFICATION	4.689537477707708E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.99998384883935	WITHOUT_CLASSIFICATION	1.6151160649984213E-5	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999930255940641	WITHOUT_CLASSIFICATION	6.974405935784661E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999964779062711	WITHOUT_CLASSIFICATION	3.5220937288511184E-6	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999953982600444	WITHOUT_CLASSIFICATION	4.601739955645946E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999994459223542	WITHOUT_CLASSIFICATION	5.540776458621493E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999994459223542	WITHOUT_CLASSIFICATION	5.540776458621493E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999993461629355	WITHOUT_CLASSIFICATION	6.538370644660536E-7	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999988690785265	WITHOUT_CLASSIFICATION	1.13092147347376E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9900917873384354	WITHOUT_CLASSIFICATION	0.009908212661564568	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999999670854	WITHOUT_CLASSIFICATION	3.2914653373111406E-11	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996890270619	WITHOUT_CLASSIFICATION	3.109729380522049E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996890270619	WITHOUT_CLASSIFICATION	3.109729380522049E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996890270619	WITHOUT_CLASSIFICATION	3.109729380522049E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996890270619	WITHOUT_CLASSIFICATION	3.109729380522049E-7	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9831138930866558	DESIGN	0.016886106913344197	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9990513200316642	WITHOUT_CLASSIFICATION	9.486799683359057E-4	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9999867590589037	WITHOUT_CLASSIFICATION	1.3240941096269377E-5	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999810042751944	WITHOUT_CLASSIFICATION	1.8995724805525132E-5	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999809493522732	WITHOUT_CLASSIFICATION	1.9050647726709724E-5	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999823583532711	WITHOUT_CLASSIFICATION	1.7641646728936012E-5	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999906185914893	WITHOUT_CLASSIFICATION	9.381408510590383E-6	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.999994954045223	WITHOUT_CLASSIFICATION	5.045954776988407E-6	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999928243689968	WITHOUT_CLASSIFICATION	7.1756310031804725E-6	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999946261043601	WITHOUT_CLASSIFICATION	5.37389563991156E-6	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999904231735237	WITHOUT_CLASSIFICATION	9.576826476270493E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999977966241218	WITHOUT_CLASSIFICATION	2.203375878169637E-6	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999909121919428	WITHOUT_CLASSIFICATION	9.087808057276747E-6	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999695101827496	WITHOUT_CLASSIFICATION	3.0489817250364017E-5	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999828448363056	WITHOUT_CLASSIFICATION	1.7155163694316014E-5	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999715659342819	WITHOUT_CLASSIFICATION	2.8434065718079073E-5	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.999984722298104	WITHOUT_CLASSIFICATION	1.5277701896010656E-5	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.999994423832431	WITHOUT_CLASSIFICATION	5.5761675690605405E-6	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999925138387449	WITHOUT_CLASSIFICATION	7.486161255144475E-6	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999933804652963	WITHOUT_CLASSIFICATION	6.619534703749744E-6	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999977583140008	WITHOUT_CLASSIFICATION	2.241685999151685E-6	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999932157056508	WITHOUT_CLASSIFICATION	6.784294349213009E-6	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999951948791393	WITHOUT_CLASSIFICATION	4.805120860569385E-6	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999949314778583	WITHOUT_CLASSIFICATION	5.0685221415596885E-6	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999960354292119	WITHOUT_CLASSIFICATION	3.964570788180998E-6	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.999977124222889	WITHOUT_CLASSIFICATION	2.2875777110967417E-5	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999942815283934	WITHOUT_CLASSIFICATION	5.718471606660768E-6	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999869747861977	WITHOUT_CLASSIFICATION	1.302521380231088E-5	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.999996638364057	WITHOUT_CLASSIFICATION	3.361635943008861E-6	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999753965044001	WITHOUT_CLASSIFICATION	2.4603495599881106E-5	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.999990381056785	WITHOUT_CLASSIFICATION	9.618943215066459E-6	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999970753695909	WITHOUT_CLASSIFICATION	2.9246304091155713E-6	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999916279447026	WITHOUT_CLASSIFICATION	8.372055297353878E-6	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999916077556141	WITHOUT_CLASSIFICATION	8.392244385893357E-6	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999945275951598	WITHOUT_CLASSIFICATION	5.472404840080487E-6	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999784582889782	WITHOUT_CLASSIFICATION	2.154171102175146E-5	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999736596288195	WITHOUT_CLASSIFICATION	2.634037118050365E-5	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999766420819971	WITHOUT_CLASSIFICATION	2.335791800292505E-5	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999891810722389	WITHOUT_CLASSIFICATION	1.0818927761076536E-5	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999836973413927	WITHOUT_CLASSIFICATION	1.6302658607320415E-5	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999939884909705	WITHOUT_CLASSIFICATION	6.011509029485941E-6	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.999972651732225	WITHOUT_CLASSIFICATION	2.7348267774920926E-5	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999763366976229	WITHOUT_CLASSIFICATION	2.366330237714475E-5	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.999988179277093	WITHOUT_CLASSIFICATION	1.1820722906935448E-5	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999951386273025	WITHOUT_CLASSIFICATION	4.861372697574902E-6	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999903381516652	WITHOUT_CLASSIFICATION	9.661848334753842E-6	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999365217516578	WITHOUT_CLASSIFICATION	6.347824834218265E-5	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.999971212794521	WITHOUT_CLASSIFICATION	2.8787205479060105E-5	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999970181090517	WITHOUT_CLASSIFICATION	2.981890948341355E-6	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999873585377211	WITHOUT_CLASSIFICATION	1.264146227873152E-5	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999905485173379	WITHOUT_CLASSIFICATION	9.451482662044197E-6	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999894451123829	WITHOUT_CLASSIFICATION	1.0554887617035952E-5	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999980712386932	WITHOUT_CLASSIFICATION	1.9287613067345615E-6	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999936384305509	WITHOUT_CLASSIFICATION	6.361569449075472E-6	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999964251742022	WITHOUT_CLASSIFICATION	3.574825797768634E-6	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999956800160666	WITHOUT_CLASSIFICATION	4.319983933366832E-6	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999944804203642	WITHOUT_CLASSIFICATION	5.519579635752858E-6	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999964525153106	WITHOUT_CLASSIFICATION	3.547484689538083E-6	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999947148085208	WITHOUT_CLASSIFICATION	5.28519147924688E-6	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9998562024545449	WITHOUT_CLASSIFICATION	1.437975454550879E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999993368717157	WITHOUT_CLASSIFICATION	6.631282843638954E-7	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999977742832505	WITHOUT_CLASSIFICATION	2.2257167494968867E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999977742832505	WITHOUT_CLASSIFICATION	2.2257167494968867E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999977742832505	WITHOUT_CLASSIFICATION	2.2257167494968867E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999977742832505	WITHOUT_CLASSIFICATION	2.2257167494968867E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999977742832505	WITHOUT_CLASSIFICATION	2.2257167494968867E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999977742832505	WITHOUT_CLASSIFICATION	2.2257167494968867E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999977742832505	WITHOUT_CLASSIFICATION	2.2257167494968867E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9994955014672322	WITHOUT_CLASSIFICATION	5.044985327678025E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9994955014672322	WITHOUT_CLASSIFICATION	5.044985327678025E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9994955014672322	WITHOUT_CLASSIFICATION	5.044985327678025E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9994955014672322	WITHOUT_CLASSIFICATION	5.044985327678025E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999135553549958	WITHOUT_CLASSIFICATION	8.644464500428822E-5	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999135553549958	WITHOUT_CLASSIFICATION	8.644464500428822E-5	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9989080050679169	WITHOUT_CLASSIFICATION	0.0010919949320831244	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998912807298231	WITHOUT_CLASSIFICATION	1.0871927017682366E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998912807298231	WITHOUT_CLASSIFICATION	1.0871927017682366E-4	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9997819179328652	WITHOUT_CLASSIFICATION	2.180820671348506E-4	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999691464213801	WITHOUT_CLASSIFICATION	3.085357861987764E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983961426816	WITHOUT_CLASSIFICATION	1.6038573184601407E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983961426816	WITHOUT_CLASSIFICATION	1.6038573184601407E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983961426816	WITHOUT_CLASSIFICATION	1.6038573184601407E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983961426816	WITHOUT_CLASSIFICATION	1.6038573184601407E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983961426816	WITHOUT_CLASSIFICATION	1.6038573184601407E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983961426816	WITHOUT_CLASSIFICATION	1.6038573184601407E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999983961426816	WITHOUT_CLASSIFICATION	1.6038573184601407E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997260445843	WITHOUT_CLASSIFICATION	2.7395541563889016E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993412702922	WITHOUT_CLASSIFICATION	6.587297076854216E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999929968003862	WITHOUT_CLASSIFICATION	7.003199613737255E-6	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999929968003862	WITHOUT_CLASSIFICATION	7.003199613737255E-6	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.999994806862774	WITHOUT_CLASSIFICATION	5.193137226046652E-6	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999843979047631	WITHOUT_CLASSIFICATION	1.560209523686009E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999843979047631	WITHOUT_CLASSIFICATION	1.560209523686009E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9998382581071013	WITHOUT_CLASSIFICATION	1.6174189289878374E-4	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999829066474	DESIGN	1.7093352649643383E-8	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9994124057548163	WITHOUT_CLASSIFICATION	5.875942451838054E-4	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9998375826237189	WITHOUT_CLASSIFICATION	1.6241737628106996E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999998739655054	WITHOUT_CLASSIFICATION	1.260344945655242E-7	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999998549173225	WITHOUT_CLASSIFICATION	1.4508267750755335E-6	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999897135106253	WITHOUT_CLASSIFICATION	1.028648937474957E-5	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9998377520226284	WITHOUT_CLASSIFICATION	1.6224797737154906E-4	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999989909532	WITHOUT_CLASSIFICATION	1.0090468469252482E-9	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9958451740136909	WITHOUT_CLASSIFICATION	0.004154825986309119	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9996626287313893	WITHOUT_CLASSIFICATION	3.373712686106997E-4	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999628053084777	WITHOUT_CLASSIFICATION	3.7194691522219834E-5	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999599250936	WITHOUT_CLASSIFICATION	4.0074906366827725E-8	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9996980048435412	WITHOUT_CLASSIFICATION	3.019951564587807E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999997591411414	WITHOUT_CLASSIFICATION	2.408588586047102E-6	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999439141411083	WITHOUT_CLASSIFICATION	5.608585889175357E-5	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999976224563	WITHOUT_CLASSIFICATION	2.377543623470247E-9	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9994401806276503	WITHOUT_CLASSIFICATION	5.598193723496775E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996801116873623	WITHOUT_CLASSIFICATION	3.198883126377886E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996801116873623	WITHOUT_CLASSIFICATION	3.198883126377886E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998366502929991	WITHOUT_CLASSIFICATION	1.633497070010524E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999776288752	WITHOUT_CLASSIFICATION	2.237112477733274E-8	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999946370615841	WITHOUT_CLASSIFICATION	5.362938415895502E-6	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999171281932088	WITHOUT_CLASSIFICATION	8.287180679119473E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999737885589396	WITHOUT_CLASSIFICATION	2.6211441060428814E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999737885589396	WITHOUT_CLASSIFICATION	2.6211441060428814E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999737885589396	WITHOUT_CLASSIFICATION	2.6211441060428814E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9611986732204535	WITHOUT_CLASSIFICATION	0.038801326779546494	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999976660018902	WITHOUT_CLASSIFICATION	2.3339981097463434E-6	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999997028131105	WITHOUT_CLASSIFICATION	2.9718688953526656E-7	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9997816996692259	WITHOUT_CLASSIFICATION	2.1830033077417874E-4	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.99999984791742	WITHOUT_CLASSIFICATION	1.5208257999941135E-7	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999999896012	WITHOUT_CLASSIFICATION	1.0398807878625877E-11	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999991851084994	WITHOUT_CLASSIFICATION	8.14891500591437E-7	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999998221668079	WITHOUT_CLASSIFICATION	1.7783319213131595E-7	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9993846380841559	WITHOUT_CLASSIFICATION	6.153619158440848E-4	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999945871916935	WITHOUT_CLASSIFICATION	5.412808306464629E-6	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999980609002124	WITHOUT_CLASSIFICATION	1.9390997875622655E-6	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999935783255026	WITHOUT_CLASSIFICATION	6.42167449740161E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999972890411049	DESIGN	2.710958895115909E-6	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.5995258623201396	WITHOUT_CLASSIFICATION	0.40047413767986045	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999999807038	WITHOUT_CLASSIFICATION	1.9296252918921433E-11	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999774262	WITHOUT_CLASSIFICATION	2.257377787124675E-11	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9982527513037528	WITHOUT_CLASSIFICATION	0.0017472486962472852	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999217977394	WITHOUT_CLASSIFICATION	7.820226055188104E-8	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9780211884271574	WITHOUT_CLASSIFICATION	0.021978811572842597	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.9706832731370666	DESIGN	0.02931672686293348	WITHOUT_CLASSIFICATION
// FIXME: move out of this class!	DESIGN	0.6692598269868694	DESIGN	0.3307401730131306	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9999993292046507	DESIGN	6.707953492919107E-7	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9570489954370218	DESIGN	0.04295100456297817	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9568701284323428	DESIGN	0.04312987156765728	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.8329311884873163	DESIGN	0.1670688115126837	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999919671178668	DESIGN	8.032882133130411E-6	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9990219284684677	WITHOUT_CLASSIFICATION	9.78071531532308E-4	DESIGN
// we might need to perform a DST correction	DESIGN	0.9995748875711723	WITHOUT_CLASSIFICATION	4.2511242882764923E-4	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9992312743898938	WITHOUT_CLASSIFICATION	7.687256101061523E-4	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9999139077488511	DESIGN	8.609225114880687E-5	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9994804153112853	WITHOUT_CLASSIFICATION	5.195846887147813E-4	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9978287932285457	DESIGN	0.0021712067714543142	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9978287932285457	DESIGN	0.0021712067714543142	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9998409658404089	DESIGN	1.5903415959114036E-4	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9998814129041095	DESIGN	1.1858709589054052E-4	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9993602144525235	DESIGN	6.397855474763684E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8887440211667577	DESIGN	0.1112559788332423	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999987765607234	DESIGN	1.2234392766529232E-6	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.992445494702567	DESIGN	0.007554505297432998	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9990724821933351	DESIGN	9.275178066649047E-4	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9873062920308813	DESIGN	0.012693707969118662	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9997777559264517	DESIGN	2.222440735483638E-4	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.6510110854182145	WITHOUT_CLASSIFICATION	0.3489889145817854	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9981699892851069	DESIGN	0.0018300107148930744	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9993898866143467	DESIGN	6.101133856533698E-4	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.6681899786839948	DESIGN	0.3318100213160052	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9996874133058358	DESIGN	3.1258669416416404E-4	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9999618227484174	WITHOUT_CLASSIFICATION	3.81772515826364E-5	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9997317499239162	DESIGN	2.682500760837502E-4	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.8487360134618065	DESIGN	0.15126398653819353	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9907914932540952	DESIGN	0.009208506745904819	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9227407047968562	WITHOUT_CLASSIFICATION	0.07725929520314374	DESIGN
// need to reexamine this	DESIGN	0.9962284305159287	WITHOUT_CLASSIFICATION	0.0037715694840713496	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.9998759899803432	DESIGN	1.2401001965683836E-4	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9999225209933855	DESIGN	7.747900661445499E-5	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9998774751724594	DESIGN	1.225248275405989E-4	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.999959947345952	DESIGN	4.005265404795122E-5	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999999897319527	DESIGN	1.0268047424685829E-8	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9999830058428241	DESIGN	1.6994157176013724E-5	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999999993246655	DESIGN	6.753345013393986E-10	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999950426939059	DESIGN	4.957306093970267E-6	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.9925584554509097	DESIGN	0.007441544549090338	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9993235694553345	WITHOUT_CLASSIFICATION	6.764305446655019E-4	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9988643783598062	WITHOUT_CLASSIFICATION	0.0011356216401937874	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9947827396086378	DESIGN	0.005217260391362195	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.8173851097914152	WITHOUT_CLASSIFICATION	0.18261489020858482	DESIGN
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999984246139525	DESIGN	1.5753860475039262E-6	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9799098791918811	DESIGN	0.020090120808118898	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.959039028504094	DESIGN	0.04096097149590613	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9999970032408781	DESIGN	2.996759121867666E-6	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.996937490763176	DESIGN	0.003062509236824155	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9896433280911257	WITHOUT_CLASSIFICATION	0.010356671908874371	DESIGN
/* FIXME: finalizer should be dupped here */	DESIGN	0.9800672701801109	DESIGN	0.019932729819889156	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999764628967917	DESIGN	2.353710320831713E-5	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9999979671682098	DESIGN	2.03283179023219E-6	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.959134762850417	WITHOUT_CLASSIFICATION	0.04086523714958303	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9998871441864449	DESIGN	1.1285581355503792E-4	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999999992256025	DESIGN	7.743974989680369E-10	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9524735593185946	DESIGN	0.04752644068140543	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9989034561217813	DESIGN	0.0010965438782186536	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9998185082562612	DESIGN	1.814917437387613E-4	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9999953994866508	DESIGN	4.600513349169233E-6	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.9801960342355904	DESIGN	0.019803965764409598	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.7466281813172024	WITHOUT_CLASSIFICATION	0.2533718186827976	DESIGN
// FIXME: Can get optimized for IEqlNode	DESIGN	0.95294899223689	WITHOUT_CLASSIFICATION	0.047051007763110046	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9999999997114583	DESIGN	2.8854173575863075E-10	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.999956691214944	DESIGN	4.330878505595017E-5	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9047540125615147	DESIGN	0.09524598743848534	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9996281986586498	DESIGN	3.718013413500945E-4	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.8297279223411469	WITHOUT_CLASSIFICATION	0.17027207765885313	DESIGN
// TODO: better algorithm to set precision needed	DESIGN	0.9995255912071231	DESIGN	4.7440879287687397E-4	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9834708836406425	DESIGN	0.016529116359357523	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9969764419629619	DESIGN	0.003023558037038194	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.6780492256855541	WITHOUT_CLASSIFICATION	0.3219507743144458	DESIGN
// Yow...this is still ugly	DESIGN	0.9958218605547368	WITHOUT_CLASSIFICATION	0.00417813944526327	DESIGN
// end hack	DESIGN	0.9712255646654905	WITHOUT_CLASSIFICATION	0.028774435334509577	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.9820045187103363	DESIGN	0.01799548128966367	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9989587418563654	DESIGN	0.0010412581436346241	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9258043575969861	DESIGN	0.07419564240301389	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9125625719940158	DESIGN	0.08743742800598414	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999995038645232	DESIGN	4.961354768216177E-7	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999536995863	WITHOUT_CLASSIFICATION	4.630041361490977E-8	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9996840680930872	DESIGN	3.1593190691288754E-4	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9584398050111546	WITHOUT_CLASSIFICATION	0.04156019498884542	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9584398050111546	WITHOUT_CLASSIFICATION	0.04156019498884542	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9584398050111546	WITHOUT_CLASSIFICATION	0.04156019498884542	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.920573433869747	WITHOUT_CLASSIFICATION	0.07942656613025294	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.7055730105369418	WITHOUT_CLASSIFICATION	0.2944269894630583	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9569850869088034	DESIGN	0.0430149130911967	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9962605587438613	WITHOUT_CLASSIFICATION	0.0037394412561386624	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.8068728073983019	DESIGN	0.193127192601698	WITHOUT_CLASSIFICATION
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9999981322274709	DESIGN	1.8677725290740247E-6	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9813746589684431	DESIGN	0.018625341031556865	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9067397868236768	DESIGN	0.0932602131763231	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9999761392570881	DESIGN	2.386074291196753E-5	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.6384636417405539	DESIGN	0.36153635825944597	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9975138873069881	DESIGN	0.0024861126930119334	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.6938051556272185	DESIGN	0.3061948443727815	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9975138873069881	DESIGN	0.0024861126930119334	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9869264192847398	DESIGN	0.013073580715260356	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.9497196442226057	DESIGN	0.05028035577739429	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.9497196442226057	DESIGN	0.05028035577739429	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9997013186857445	DESIGN	2.986813142555667E-4	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9997842334673586	DESIGN	2.1576653264137363E-4	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9997013186857445	DESIGN	2.986813142555667E-4	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9999985525261863	DESIGN	1.4474738136855238E-6	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9864261248048104	DESIGN	0.013573875195189601	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.9356997600741583	DESIGN	0.06430023992584176	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9795469765063031	DESIGN	0.020453023493696963	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9179472774329311	DESIGN	0.08205272256706889	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9179472774329311	DESIGN	0.08205272256706889	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9983989161087692	DESIGN	0.0016010838912307525	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.6088815095033343	DESIGN	0.39111849049666575	WITHOUT_CLASSIFICATION
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9808805756530007	DESIGN	0.019119424346999352	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9999831664736769	DESIGN	1.6833526323112144E-5	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.8248000873859058	DESIGN	0.1751999126140941	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9996951144939271	DESIGN	3.0488550607295353E-4	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9491532385492675	DESIGN	0.05084676145073255	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9731856849405661	WITHOUT_CLASSIFICATION	0.026814315059433876	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9988091741123499	DESIGN	0.001190825887650045	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9731856849405661	WITHOUT_CLASSIFICATION	0.026814315059433876	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.8937631596064091	DESIGN	0.10623684039359102	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9998622642553802	DESIGN	1.377357446198393E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.994318842025241	DESIGN	0.0056811579747590955	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9999993916809906	DESIGN	6.083190093155102E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9995557643627939	DESIGN	4.4423563720605194E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.999104194928249	DESIGN	8.958050717509473E-4	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.7837373247985993	DESIGN	0.2162626752014007	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9844127825407344	DESIGN	0.015587217459265735	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.7310738596475241	WITHOUT_CLASSIFICATION	0.268926140352476	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.999104194928249	DESIGN	8.958050717509473E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9984016952154756	DESIGN	0.0015983047845243166	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9998493191325326	DESIGN	1.506808674674321E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.999990133255165	DESIGN	9.866744835164593E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9060051586139629	DESIGN	0.09399484138603703	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999888727564844	DESIGN	1.1127243515665559E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9977898526748324	DESIGN	0.002210147325167542	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9999987010233831	DESIGN	1.2989766169716775E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9139517906032223	DESIGN	0.08604820939677768	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9874866785103407	DESIGN	0.012513321489659265	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.9689681486272165	DESIGN	0.031031851372783536	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9871089752464556	WITHOUT_CLASSIFICATION	0.012891024753544431	DESIGN
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9999996012066348	DESIGN	3.98793365214334E-7	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9999652571082336	DESIGN	3.474289176637778E-5	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9983537271231099	DESIGN	0.001646272876890095	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9946808585325049	WITHOUT_CLASSIFICATION	0.005319141467495054	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9999987085145627	DESIGN	1.291485437298367E-6	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9527369023167042	WITHOUT_CLASSIFICATION	0.04726309768329582	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9998983934203024	WITHOUT_CLASSIFICATION	1.016065796975914E-4	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.999919256222803	DESIGN	8.074377719699068E-5	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9991111363150806	WITHOUT_CLASSIFICATION	8.888636849193859E-4	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.962070911862713	WITHOUT_CLASSIFICATION	0.03792908813728698	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9999770300666306	DESIGN	2.2969933369391125E-5	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.63872996178912	WITHOUT_CLASSIFICATION	0.3612700382108801	DESIGN
// FIXME: set up a call configuration for this	DESIGN	0.5977270281532113	WITHOUT_CLASSIFICATION	0.40227297184678873	DESIGN
// TODO: make this do specific-arity calling	DESIGN	0.9931616438656946	DESIGN	0.006838356134305492	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.8566110540395273	DESIGN	0.14338894596047258	WITHOUT_CLASSIFICATION
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9718762230418487	DESIGN	0.028123776958151263	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9470180975219924	DESIGN	0.05298190247800764	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999845914490059	WITHOUT_CLASSIFICATION	1.5408550994104555E-5	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999919400284139	WITHOUT_CLASSIFICATION	8.059971586128583E-6	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999976395149168	WITHOUT_CLASSIFICATION	2.360485083138766E-6	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9022063836212646	WITHOUT_CLASSIFICATION	0.09779361637873545	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.838129254096872	DESIGN	0.16187074590312792	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9961326207336149	WITHOUT_CLASSIFICATION	0.003867379266385086	DESIGN
// TODO: public only?	DESIGN	0.9928755468113086	DESIGN	0.00712445318869132	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9974812822190596	WITHOUT_CLASSIFICATION	0.0025187177809404162	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9999860382180304	DESIGN	1.3961781969631514E-5	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9999959008974715	DESIGN	4.099102528524947E-6	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9995738463473204	DESIGN	4.2615365267963584E-4	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.6390234631092591	WITHOUT_CLASSIFICATION	0.36097653689074083	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.7131787626284567	WITHOUT_CLASSIFICATION	0.28682123737154336	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.7131787626284567	WITHOUT_CLASSIFICATION	0.28682123737154336	DESIGN
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.7466360062682754	WITHOUT_CLASSIFICATION	0.25336399373172447	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9790426917381452	DESIGN	0.02095730826185479	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9790426917381452	DESIGN	0.02095730826185479	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9999642983050283	WITHOUT_CLASSIFICATION	3.5701694971714274E-5	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9952337050607741	DESIGN	0.004766294939225832	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9945747389473327	WITHOUT_CLASSIFICATION	0.005425261052667206	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9949924459874969	DESIGN	0.005007554012502989	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9999037304540084	DESIGN	9.626954599163839E-5	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9572396142412277	DESIGN	0.04276038575877225	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.8663531263629338	DESIGN	0.13364687363706618	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9991449019105355	DESIGN	8.550980894643799E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9991449019105355	DESIGN	8.550980894643799E-4	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.5745174139666769	WITHOUT_CLASSIFICATION	0.42548258603332323	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.9091326875597673	DESIGN	0.09086731244023265	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9796227260876339	DESIGN	0.02037727391236604	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9714904056656745	DESIGN	0.02850959433432553	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9460022477788139	DESIGN	0.05399775222118607	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.999988833597712	WITHOUT_CLASSIFICATION	1.1166402288012358E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.999884363280146	DESIGN	1.1563671985401752E-4	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.964707878740763	DESIGN	0.035292121259236996	WITHOUT_CLASSIFICATION
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9999297196992121	DESIGN	7.028030078797001E-5	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.5909626070320341	WITHOUT_CLASSIFICATION	0.40903739296796604	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999610934502758	WITHOUT_CLASSIFICATION	3.8906549724050145E-5	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9908346882019968	DESIGN	0.00916531179800319	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9527369023167042	WITHOUT_CLASSIFICATION	0.04726309768329582	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9837151664674743	WITHOUT_CLASSIFICATION	0.01628483353252571	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9581676045158641	DESIGN	0.04183239548413586	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.6994521674012657	DESIGN	0.3005478325987344	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.8663524667840817	DESIGN	0.1336475332159182	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.7897382246557849	DESIGN	0.21026177534421508	WITHOUT_CLASSIFICATION
// Hacky: Advance position to eat newline here....	DESIGN	0.9999877271435673	DESIGN	1.2272856432796104E-5	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.6882053811692357	WITHOUT_CLASSIFICATION	0.3117946188307642	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9928363132993518	DESIGN	0.007163686700648077	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9928363132993518	DESIGN	0.007163686700648077	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.6416395371381751	DESIGN	0.35836046286182494	WITHOUT_CLASSIFICATION
// FIXME: Remove this from grammars.	DESIGN	0.5486837839833303	DESIGN	0.4513162160166698	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.972359150907438	DESIGN	0.027640849092562092	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9970059390175902	DESIGN	0.0029940609824099015	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9980853199013197	DESIGN	0.0019146800986803482	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9999901989683248	WITHOUT_CLASSIFICATION	9.801031675247648E-6	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9023603913325076	DESIGN	0.09763960866749247	WITHOUT_CLASSIFICATION
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.6311506059716697	WITHOUT_CLASSIFICATION	0.3688493940283303	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.7710953353069567	DESIGN	0.22890466469304332	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999998721267005	DESIGN	1.2787329942803375E-7	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9883330142996283	DESIGN	0.011666985700371666	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9999959093665312	DESIGN	4.090633468797117E-6	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9883330142996283	DESIGN	0.011666985700371666	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9883330142996283	DESIGN	0.011666985700371666	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.999984859911532	WITHOUT_CLASSIFICATION	1.5140088468121154E-5	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9981004511247787	DESIGN	0.0018995488752212102	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999995019603685	DESIGN	4.980396314788653E-7	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.8976710218556294	DESIGN	0.10232897814437066	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.970420650435675	DESIGN	0.02957934956432501	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.776330283651544	WITHOUT_CLASSIFICATION	0.22366971634845598	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9996183097939116	DESIGN	3.816902060883663E-4	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9587102894983085	DESIGN	0.04128971050169142	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9998230322991963	DESIGN	1.7696770080370572E-4	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999997454309912	DESIGN	2.5456900868499537E-7	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.999998628677662	DESIGN	1.37132233792088E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9587102894983085	DESIGN	0.04128971050169142	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9587102894983085	DESIGN	0.04128971050169142	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9587102894983085	DESIGN	0.04128971050169142	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9587102894983085	DESIGN	0.04128971050169142	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9999992573096098	DESIGN	7.426903900868426E-7	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9997952242778869	DESIGN	2.0477572211304634E-4	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.997980447258078	DESIGN	0.0020195527419220754	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9771866739615416	DESIGN	0.022813326038458405	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9771866739615416	DESIGN	0.022813326038458405	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.8943953338745881	WITHOUT_CLASSIFICATION	0.10560466612541194	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9992564984107608	WITHOUT_CLASSIFICATION	7.435015892391944E-4	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9974785375152128	WITHOUT_CLASSIFICATION	0.002521462484787268	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9974785375152128	WITHOUT_CLASSIFICATION	0.002521462484787268	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9881138144589736	DESIGN	0.011886185541026306	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9753725188856182	DESIGN	0.02462748111438174	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9983618517730154	DESIGN	0.0016381482269845506	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999953827804415	DESIGN	4.617219558490899E-6	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999953827804415	DESIGN	4.617219558490899E-6	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9804207909679508	DESIGN	0.019579209032049256	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9998762538980287	DESIGN	1.2374610197132886E-4	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9998590130950487	DESIGN	1.409869049512336E-4	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999918751726342	DESIGN	8.1248273658831E-6	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.966009727343893	DESIGN	0.03399027265610704	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999994539650062	WITHOUT_CLASSIFICATION	5.460349937719116E-7	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9999821116997908	DESIGN	1.788830020918395E-5	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9832202722496958	DESIGN	0.01677972775030428	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9951632951828322	WITHOUT_CLASSIFICATION	0.004836704817167865	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9795469765063031	DESIGN	0.020453023493696963	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9795469765063031	DESIGN	0.020453023493696963	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.8293729238343678	DESIGN	0.17062707616563208	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9983989161087692	DESIGN	0.0016010838912307525	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.6088815095033343	DESIGN	0.39111849049666575	WITHOUT_CLASSIFICATION
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999970924319036	DESIGN	2.9075680963306412E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.999997010695116	DESIGN	2.989304884035424E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9857582144878143	DESIGN	0.014241785512185672	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.6099689768948844	WITHOUT_CLASSIFICATION	0.3900310231051156	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9822487695394836	DESIGN	0.017751230460516406	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.985426822148865	DESIGN	0.01457317785113488	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9653521319440308	WITHOUT_CLASSIFICATION	0.03464786805596927	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.5745174139666769	WITHOUT_CLASSIFICATION	0.42548258603332323	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.7710953353069567	DESIGN	0.22890466469304332	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999965537795	DESIGN	3.446220600198935E-9	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9174347202427808	WITHOUT_CLASSIFICATION	0.08256527975721922	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9928363132993518	DESIGN	0.007163686700648077	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9887244617705866	WITHOUT_CLASSIFICATION	0.011275538229413453	DESIGN
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.999992379444577	DESIGN	7.620555423076234E-6	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999999965933051	DESIGN	3.406694986068658E-9	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999886329626	DESIGN	1.1367037468686986E-8	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9995575758835387	DESIGN	4.4242411646138396E-4	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.8413445341489625	DESIGN	0.1586554658510375	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.8413445341489625	DESIGN	0.1586554658510375	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9901575080329915	DESIGN	0.009842491967008427	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.5871718679058455	WITHOUT_CLASSIFICATION	0.4128281320941545	DESIGN
// small hack to save a cast later on	DESIGN	0.9212017498697047	DESIGN	0.0787982501302952	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999999683972907	DESIGN	3.1602709222756065E-8	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.5871718679058455	WITHOUT_CLASSIFICATION	0.4128281320941545	DESIGN
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.7370741237416292	DESIGN	0.2629258762583708	WITHOUT_CLASSIFICATION
// HACK: force clinit to be created	DESIGN	0.9381062036977899	DESIGN	0.061893796302210084	WITHOUT_CLASSIFICATION
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.8306494831537893	DESIGN	0.16935051684621072	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9998309198819245	DESIGN	1.6908011807554834E-4	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9874534124748416	WITHOUT_CLASSIFICATION	0.012546587525158234	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9584398050111546	WITHOUT_CLASSIFICATION	0.04156019498884542	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9928363132993518	DESIGN	0.007163686700648077	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.920573433869747	WITHOUT_CLASSIFICATION	0.07942656613025294	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999785082045078	DESIGN	2.149179549214773E-5	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.7891748309675963	WITHOUT_CLASSIFICATION	0.21082516903240364	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9975930859129103	DESIGN	0.0024069140870896046	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999999798412368	DESIGN	2.0158763274645132E-8	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999984246139525	DESIGN	1.5753860475039262E-6	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.9153876412801409	WITHOUT_CLASSIFICATION	0.084612358719859	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9995877037580467	DESIGN	4.122962419533353E-4	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.999618653033519	DESIGN	3.8134696648085473E-4	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9998863302998433	WITHOUT_CLASSIFICATION	1.1366970015660338E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9569850869088034	DESIGN	0.0430149130911967	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9991449019105355	DESIGN	8.550980894643799E-4	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8887440211667577	DESIGN	0.1112559788332423	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8887440211667577	DESIGN	0.1112559788332423	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.8887440211667577	DESIGN	0.1112559788332423	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999999987194	DESIGN	1.2806636716545664E-12	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999811827395924	DESIGN	1.881726040755625E-5	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9879810467388597	WITHOUT_CLASSIFICATION	0.012018953261140356	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9982248831566812	DESIGN	0.0017751168433188438	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9999978243279724	DESIGN	2.1756720275917195E-6	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9999998917464658	DESIGN	1.0825353429705459E-7	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9800672701801109	DESIGN	0.019932729819889156	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9882006085267255	WITHOUT_CLASSIFICATION	0.01179939147327453	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999764628967917	DESIGN	2.353710320831713E-5	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9470018634479743	DESIGN	0.0529981365520257	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9997985146303062	DESIGN	2.0148536969370108E-4	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9999298782617773	DESIGN	7.012173822268487E-5	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9954784907796702	DESIGN	0.004521509220329739	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9570489954370218	DESIGN	0.04295100456297817	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9953834996469746	WITHOUT_CLASSIFICATION	0.004616500353025385	DESIGN
// end hack	DESIGN	0.9712255646654905	WITHOUT_CLASSIFICATION	0.028774435334509577	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.8977590047958507	WITHOUT_CLASSIFICATION	0.10224099520414925	DESIGN
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999886329626	DESIGN	1.1367037468686986E-8	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999999999990005	DESIGN	9.995570858227643E-13	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9820045187103363	DESIGN	0.01799548128966367	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.8401231523086331	WITHOUT_CLASSIFICATION	0.15987684769136692	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.972359150907438	DESIGN	0.027640849092562092	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9970059390175902	DESIGN	0.0029940609824099015	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9898132296668197	DESIGN	0.01018677033318017	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.5052105592685509	WITHOUT_CLASSIFICATION	0.49478944073144915	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9023603913325076	DESIGN	0.09763960866749247	WITHOUT_CLASSIFICATION
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.8236533330892304	DESIGN	0.17634666691076967	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9883330142996283	DESIGN	0.011666985700371666	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9883330142996283	DESIGN	0.011666985700371666	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9924938658831306	DESIGN	0.007506134116869351	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.8760356256954142	WITHOUT_CLASSIFICATION	0.1239643743045858	DESIGN
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9999866654088025	DESIGN	1.3334591197317033E-5	WITHOUT_CLASSIFICATION
