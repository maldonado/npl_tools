// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999995175575741	WITHOUT_CLASSIFICATION	4.82442425809248E-7	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999863455478749	WITHOUT_CLASSIFICATION	1.3654452125078245E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999531339546284	WITHOUT_CLASSIFICATION	4.686604537176747E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999531339546284	WITHOUT_CLASSIFICATION	4.686604537176747E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999339137332898	WITHOUT_CLASSIFICATION	6.608626671017767E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999339137332898	WITHOUT_CLASSIFICATION	6.608626671017767E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999643636911286	WITHOUT_CLASSIFICATION	3.563630887136754E-5	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9964700335740064	WITHOUT_CLASSIFICATION	0.0035299664259934413	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999893693419909	WITHOUT_CLASSIFICATION	1.0630658009019603E-5	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999932367627709	WITHOUT_CLASSIFICATION	6.763237229133405E-6	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.999921769936796	WITHOUT_CLASSIFICATION	7.823006320393402E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.999921769936796	WITHOUT_CLASSIFICATION	7.823006320393402E-5	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999866004473248	WITHOUT_CLASSIFICATION	1.3399552675199927E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999053597485626	WITHOUT_CLASSIFICATION	9.464025143737552E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999053597485626	WITHOUT_CLASSIFICATION	9.464025143737552E-5	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999977870642252	WITHOUT_CLASSIFICATION	2.2129357748584535E-6	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999982768972601	WITHOUT_CLASSIFICATION	1.7231027399427436E-6	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999038416378654	WITHOUT_CLASSIFICATION	9.615836213466404E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999038416378654	WITHOUT_CLASSIFICATION	9.615836213466404E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999038416378654	WITHOUT_CLASSIFICATION	9.615836213466404E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999038416378654	WITHOUT_CLASSIFICATION	9.615836213466404E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999038416378654	WITHOUT_CLASSIFICATION	9.615836213466404E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999038416378654	WITHOUT_CLASSIFICATION	9.615836213466404E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999038416378654	WITHOUT_CLASSIFICATION	9.615836213466404E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999568968731097	WITHOUT_CLASSIFICATION	4.310312689018166E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999568968731097	WITHOUT_CLASSIFICATION	4.310312689018166E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999568968731097	WITHOUT_CLASSIFICATION	4.310312689018166E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999568968731097	WITHOUT_CLASSIFICATION	4.310312689018166E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999568968731097	WITHOUT_CLASSIFICATION	4.310312689018166E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999568968731097	WITHOUT_CLASSIFICATION	4.310312689018166E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999568968731097	WITHOUT_CLASSIFICATION	4.310312689018166E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999117282840223	WITHOUT_CLASSIFICATION	8.82717159777239E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999117282840223	WITHOUT_CLASSIFICATION	8.82717159777239E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999117282840223	WITHOUT_CLASSIFICATION	8.82717159777239E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999117282840223	WITHOUT_CLASSIFICATION	8.82717159777239E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999117282840223	WITHOUT_CLASSIFICATION	8.82717159777239E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999117282840223	WITHOUT_CLASSIFICATION	8.82717159777239E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999489761678093	WITHOUT_CLASSIFICATION	5.1023832190702704E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999489761678093	WITHOUT_CLASSIFICATION	5.1023832190702704E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999489761678093	WITHOUT_CLASSIFICATION	5.1023832190702704E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999489761678093	WITHOUT_CLASSIFICATION	5.1023832190702704E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999489761678093	WITHOUT_CLASSIFICATION	5.1023832190702704E-5	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999489761678093	WITHOUT_CLASSIFICATION	5.1023832190702704E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999382726324002	WITHOUT_CLASSIFICATION	6.172736759979488E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999382726324002	WITHOUT_CLASSIFICATION	6.172736759979488E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999382726324002	WITHOUT_CLASSIFICATION	6.172736759979488E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999382726324002	WITHOUT_CLASSIFICATION	6.172736759979488E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999382726324002	WITHOUT_CLASSIFICATION	6.172736759979488E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999382726324002	WITHOUT_CLASSIFICATION	6.172736759979488E-5	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999382726324002	WITHOUT_CLASSIFICATION	6.172736759979488E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998308492105396	WITHOUT_CLASSIFICATION	1.6915078946043983E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998308492105396	WITHOUT_CLASSIFICATION	1.6915078946043983E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998308492105396	WITHOUT_CLASSIFICATION	1.6915078946043983E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998308492105396	WITHOUT_CLASSIFICATION	1.6915078946043983E-4	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999996330882932	WITHOUT_CLASSIFICATION	3.6691170672048124E-7	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999996330882932	WITHOUT_CLASSIFICATION	3.6691170672048124E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999995856649958	WITHOUT_CLASSIFICATION	4.14335004108499E-7	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999977190028677	WITHOUT_CLASSIFICATION	2.280997132301333E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.999938198890785	WITHOUT_CLASSIFICATION	6.180110921500496E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999994333132436	WITHOUT_CLASSIFICATION	5.666867565271131E-7	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999834375295609	WITHOUT_CLASSIFICATION	1.6562470439195186E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999926192169192	WITHOUT_CLASSIFICATION	7.38078308082956E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999926192169192	WITHOUT_CLASSIFICATION	7.38078308082956E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999926192169192	WITHOUT_CLASSIFICATION	7.38078308082956E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999926192169192	WITHOUT_CLASSIFICATION	7.38078308082956E-6	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999611807682665	WITHOUT_CLASSIFICATION	3.881923173355798E-5	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9998913573624268	WITHOUT_CLASSIFICATION	1.0864263757316802E-4	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999996334746419	WITHOUT_CLASSIFICATION	3.6652535811636447E-7	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9998140067768321	WITHOUT_CLASSIFICATION	1.8599322316803748E-4	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999900615854947	WITHOUT_CLASSIFICATION	9.938414505328531E-6	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999659547288549	WITHOUT_CLASSIFICATION	3.4045271145065E-5	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999994760353345	WITHOUT_CLASSIFICATION	5.239646655084803E-7	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999332600227409	WITHOUT_CLASSIFICATION	6.673997725914915E-5	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.8394811121736825	WITHOUT_CLASSIFICATION	0.16051888782631757	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999263104990547	WITHOUT_CLASSIFICATION	7.368950094535874E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999139519585378	WITHOUT_CLASSIFICATION	8.60480414621884E-5	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9996152760907052	WITHOUT_CLASSIFICATION	3.8472390929476585E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9988087240721777	WITHOUT_CLASSIFICATION	0.0011912759278222787	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999876159201843	WITHOUT_CLASSIFICATION	1.2384079815729462E-5	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.99996440242576	WITHOUT_CLASSIFICATION	3.5597574240105457E-5	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9996906248415376	WITHOUT_CLASSIFICATION	3.0937515846241807E-4	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9853752450074896	WITHOUT_CLASSIFICATION	0.014624754992510345	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999926192169192	WITHOUT_CLASSIFICATION	7.38078308082956E-6	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998642036518862	WITHOUT_CLASSIFICATION	1.357963481138041E-4	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999997112032761	WITHOUT_CLASSIFICATION	2.887967238476724E-7	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999650979303962	WITHOUT_CLASSIFICATION	3.4902069603760885E-5	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9997549607855378	WITHOUT_CLASSIFICATION	2.450392144621972E-4	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9998583590759081	WITHOUT_CLASSIFICATION	1.4164092409196054E-4	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.999995962071742	WITHOUT_CLASSIFICATION	4.0379282579373955E-6	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999997773083567	WITHOUT_CLASSIFICATION	2.226916433031431E-6	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999986133890394	WITHOUT_CLASSIFICATION	1.3866109606832658E-6	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9970477318777665	WITHOUT_CLASSIFICATION	0.0029522681222334023	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999999286024802	WITHOUT_CLASSIFICATION	7.139751981422756E-8	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999713344251709	WITHOUT_CLASSIFICATION	2.8665574829040498E-5	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999947508364856	WITHOUT_CLASSIFICATION	5.249163514389202E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.99999031023936	WITHOUT_CLASSIFICATION	9.689760639953314E-6	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9993593143238051	WITHOUT_CLASSIFICATION	6.406856761948264E-4	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999974964698541	WITHOUT_CLASSIFICATION	2.5035301458310103E-6	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999993340771733	WITHOUT_CLASSIFICATION	6.659228266139665E-7	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999997990785111	WITHOUT_CLASSIFICATION	2.009214888633408E-7	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999981491320431	WITHOUT_CLASSIFICATION	1.8508679568255492E-6	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999997476627581	WITHOUT_CLASSIFICATION	2.523372419592106E-7	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.999999968959105	WITHOUT_CLASSIFICATION	3.104089492684106E-8	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9522605011486777	WITHOUT_CLASSIFICATION	0.0477394988513223	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999992910494534	WITHOUT_CLASSIFICATION	7.089505464662446E-7	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999995699736308	WITHOUT_CLASSIFICATION	4.3002636922283706E-7	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999632595294816	WITHOUT_CLASSIFICATION	3.674047051835424E-5	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9998704825373937	WITHOUT_CLASSIFICATION	1.2951746260621774E-4	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9999919509833973	WITHOUT_CLASSIFICATION	8.049016602719586E-6	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999820113053957	WITHOUT_CLASSIFICATION	1.79886946042861E-5	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999806882978528	WITHOUT_CLASSIFICATION	1.9311702147149768E-5	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999994872181068	WITHOUT_CLASSIFICATION	5.127818930486874E-7	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999996298038534	WITHOUT_CLASSIFICATION	3.701961466149913E-7	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999976582553669	WITHOUT_CLASSIFICATION	2.3417446331467175E-6	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999996876613385	WITHOUT_CLASSIFICATION	3.1233866145201174E-7	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999992070445003	WITHOUT_CLASSIFICATION	7.929554996921439E-7	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999846801238027	WITHOUT_CLASSIFICATION	1.531987619729056E-5	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999906991670096	WITHOUT_CLASSIFICATION	9.300832990377714E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999991640077882	WITHOUT_CLASSIFICATION	8.359922117952959E-7	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9989310683925131	WITHOUT_CLASSIFICATION	0.0010689316074868687	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9991747266368366	WITHOUT_CLASSIFICATION	8.252733631632882E-4	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.999919104072103	WITHOUT_CLASSIFICATION	8.089592789695474E-5	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984724148239	WITHOUT_CLASSIFICATION	1.5275851762380737E-6	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999988634815921	WITHOUT_CLASSIFICATION	1.1365184079080325E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999922947902314	WITHOUT_CLASSIFICATION	7.705209768446052E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999573859778062	WITHOUT_CLASSIFICATION	4.2614022193806546E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999921542715142	WITHOUT_CLASSIFICATION	7.845728485716414E-6	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999921542715142	WITHOUT_CLASSIFICATION	7.845728485716414E-6	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9998862583958715	WITHOUT_CLASSIFICATION	1.1374160412844232E-4	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999927950277713	WITHOUT_CLASSIFICATION	7.204972228688303E-6	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999979047365078	WITHOUT_CLASSIFICATION	2.0952634921991203E-6	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9991512747003019	WITHOUT_CLASSIFICATION	8.487252996981404E-4	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9996361745885939	WITHOUT_CLASSIFICATION	3.638254114061403E-4	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.828329790118001	WITHOUT_CLASSIFICATION	0.171670209881999	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9999787095285092	WITHOUT_CLASSIFICATION	2.1290471490736866E-5	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999906682928765	WITHOUT_CLASSIFICATION	9.331707123427439E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999922947902314	WITHOUT_CLASSIFICATION	7.705209768446052E-6	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999998694107718	WITHOUT_CLASSIFICATION	1.3058922829958035E-7	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999955267915435	WITHOUT_CLASSIFICATION	4.473208456517006E-6	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999439298347987	WITHOUT_CLASSIFICATION	5.6070165201408614E-5	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999994953492242	WITHOUT_CLASSIFICATION	5.04650775779377E-7	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999990888590239	WITHOUT_CLASSIFICATION	9.111409761000231E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999993268517828	WITHOUT_CLASSIFICATION	6.731482171805097E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999993268517828	WITHOUT_CLASSIFICATION	6.731482171805097E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999993268517828	WITHOUT_CLASSIFICATION	6.731482171805097E-7	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999671766886186	WITHOUT_CLASSIFICATION	3.282331138143028E-5	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999974417332096	WITHOUT_CLASSIFICATION	2.5582667903878057E-6	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.999972936640047	WITHOUT_CLASSIFICATION	2.7063359952952087E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9962731506967737	WITHOUT_CLASSIFICATION	0.003726849303226423	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.5156923937234975	WITHOUT_CLASSIFICATION	0.48430760627650243	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999949528350764	WITHOUT_CLASSIFICATION	5.047164923540021E-6	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999971488118924	WITHOUT_CLASSIFICATION	2.8511881075144485E-6	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999997830115106	WITHOUT_CLASSIFICATION	2.169884894472875E-7	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999920629161746	WITHOUT_CLASSIFICATION	7.937083825397807E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999920629161746	WITHOUT_CLASSIFICATION	7.937083825397807E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999972325733861	WITHOUT_CLASSIFICATION	2.7674266138258595E-6	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999991966153498	WITHOUT_CLASSIFICATION	8.033846502851372E-7	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999983346637205	WITHOUT_CLASSIFICATION	1.6653362795780387E-6	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999983346637205	WITHOUT_CLASSIFICATION	1.6653362795780387E-6	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999546500659208	WITHOUT_CLASSIFICATION	4.534993407928444E-5	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.999999648618483	WITHOUT_CLASSIFICATION	3.513815169073889E-7	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999994559720915	WITHOUT_CLASSIFICATION	5.440279084544942E-7	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999976644903276	WITHOUT_CLASSIFICATION	2.335509672373292E-6	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999970188826397	WITHOUT_CLASSIFICATION	2.9811173603447107E-6	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999989886577817	WITHOUT_CLASSIFICATION	1.0113422183568721E-6	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.999999312781671	WITHOUT_CLASSIFICATION	6.872183289962298E-7	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999997439881674	WITHOUT_CLASSIFICATION	2.560118325711425E-7	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9999966279996484	WITHOUT_CLASSIFICATION	3.3720003515502578E-6	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999853006477906	WITHOUT_CLASSIFICATION	1.4699352209345686E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999922947902314	WITHOUT_CLASSIFICATION	7.705209768446052E-6	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999970110187703	WITHOUT_CLASSIFICATION	2.9889812298100202E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999999818532743	WITHOUT_CLASSIFICATION	1.8146725696048422E-7	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.999910213929201	WITHOUT_CLASSIFICATION	8.97860707989687E-5	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9958982396315215	WITHOUT_CLASSIFICATION	0.0041017603684784685	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999837062045849	WITHOUT_CLASSIFICATION	1.6293795415099442E-5	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.999999272077601	WITHOUT_CLASSIFICATION	7.279223990107098E-7	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999976710727995	WITHOUT_CLASSIFICATION	2.328927200498916E-6	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999992603415598	WITHOUT_CLASSIFICATION	7.396584401744828E-7	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999994485695873	WITHOUT_CLASSIFICATION	5.51430412569729E-7	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999482390565111	WITHOUT_CLASSIFICATION	5.176094348899183E-5	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999996705708071	WITHOUT_CLASSIFICATION	3.294291929414227E-7	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999509280909817	WITHOUT_CLASSIFICATION	4.9071909018211464E-5	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999164992752811	WITHOUT_CLASSIFICATION	8.350072471880088E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999995422738082	WITHOUT_CLASSIFICATION	4.5772619185050225E-7	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999276945882	WITHOUT_CLASSIFICATION	7.230541175393727E-8	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999972377378188	WITHOUT_CLASSIFICATION	2.7622621811911556E-6	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999996615012958	WITHOUT_CLASSIFICATION	3.384987042002531E-7	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999998956630436	WITHOUT_CLASSIFICATION	1.0433695648350945E-7	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999955890864148	WITHOUT_CLASSIFICATION	4.410913585093243E-6	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998240943219795	WITHOUT_CLASSIFICATION	1.7590567802060745E-4	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999960334459278	WITHOUT_CLASSIFICATION	3.966554072208324E-6	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9996005600336793	WITHOUT_CLASSIFICATION	3.9943996632071075E-4	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9998232634772379	WITHOUT_CLASSIFICATION	1.7673652276198562E-4	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999956615149627	WITHOUT_CLASSIFICATION	4.3384850373815315E-6	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999951651033393	WITHOUT_CLASSIFICATION	4.834896660751033E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9962852959783364	WITHOUT_CLASSIFICATION	0.003714704021663509	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999996271552458	WITHOUT_CLASSIFICATION	3.728447542596141E-7	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999925312771304	WITHOUT_CLASSIFICATION	7.468722869626124E-6	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9992909026454259	WITHOUT_CLASSIFICATION	7.090973545741026E-4	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999994527744178	WITHOUT_CLASSIFICATION	5.472255822521258E-7	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999903335229888	WITHOUT_CLASSIFICATION	9.66647701115452E-6	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9999961852570072	WITHOUT_CLASSIFICATION	3.814742992854192E-6	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999977243805492	WITHOUT_CLASSIFICATION	2.275619450802639E-5	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.999981448009262	WITHOUT_CLASSIFICATION	1.8551990737937954E-5	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999830278165849	WITHOUT_CLASSIFICATION	1.697218341510612E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9996939317910221	WITHOUT_CLASSIFICATION	3.0606820897795256E-4	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9988692769065294	WITHOUT_CLASSIFICATION	0.0011307230934705346	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999995328616429	WITHOUT_CLASSIFICATION	4.6713835699179935E-7	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999991193325142	WITHOUT_CLASSIFICATION	8.806674858160019E-7	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.999998360344521	WITHOUT_CLASSIFICATION	1.6396554790379654E-6	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999433116749477	WITHOUT_CLASSIFICATION	5.6688325052308756E-5	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999999648341521	WITHOUT_CLASSIFICATION	3.5165847890369846E-8	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999158688767551	WITHOUT_CLASSIFICATION	8.413112324498919E-5	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999981885618944	WITHOUT_CLASSIFICATION	1.8114381056019124E-6	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.9999872817298129	WITHOUT_CLASSIFICATION	1.2718270187030551E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999997813616857	WITHOUT_CLASSIFICATION	2.1863831438177292E-7	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999895891666607	WITHOUT_CLASSIFICATION	1.0410833339243913E-5	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999997932256707	WITHOUT_CLASSIFICATION	2.0677432931332071E-7	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999940697461477	WITHOUT_CLASSIFICATION	5.930253852317919E-6	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.999960812445961	WITHOUT_CLASSIFICATION	3.918755403894814E-5	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9992819551994749	WITHOUT_CLASSIFICATION	7.180448005251138E-4	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9997981913885402	WITHOUT_CLASSIFICATION	2.0180861145984268E-4	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9985790771350088	WITHOUT_CLASSIFICATION	0.0014209228649912896	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999845526638939	WITHOUT_CLASSIFICATION	1.5447336106088856E-5	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.999372767627466	WITHOUT_CLASSIFICATION	6.272323725340285E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9122172097565888	WITHOUT_CLASSIFICATION	0.08778279024341118	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9997637961851761	WITHOUT_CLASSIFICATION	2.3620381482390853E-4	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999475015051458	WITHOUT_CLASSIFICATION	5.249849485419076E-5	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.99999978866252	WITHOUT_CLASSIFICATION	2.113374798447054E-7	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999996378494073	WITHOUT_CLASSIFICATION	3.6215059277610577E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999992785522934	WITHOUT_CLASSIFICATION	7.214477065881658E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999992785522934	WITHOUT_CLASSIFICATION	7.214477065881658E-7	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999994444798485	WITHOUT_CLASSIFICATION	5.555201515080842E-7	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999994444798485	WITHOUT_CLASSIFICATION	5.555201515080842E-7	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999977289259064	WITHOUT_CLASSIFICATION	2.271074093608763E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999977289259064	WITHOUT_CLASSIFICATION	2.271074093608763E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999973446585393	WITHOUT_CLASSIFICATION	2.6553414608328086E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999973446585393	WITHOUT_CLASSIFICATION	2.6553414608328086E-6	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999899965919816	WITHOUT_CLASSIFICATION	1.0003408018464463E-5	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999877560611281	WITHOUT_CLASSIFICATION	1.2243938871976525E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991513376583	WITHOUT_CLASSIFICATION	8.486623417639249E-7	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999997826859318	WITHOUT_CLASSIFICATION	2.173140682315264E-7	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999744331025721	WITHOUT_CLASSIFICATION	2.5566897427980113E-5	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999999607808523	WITHOUT_CLASSIFICATION	3.921914769541005E-8	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999990719386401	WITHOUT_CLASSIFICATION	9.280613598683902E-7	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.99999995984702	WITHOUT_CLASSIFICATION	4.0152980005492045E-8	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999991285890992	WITHOUT_CLASSIFICATION	8.714109008670318E-7	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999991586351834	WITHOUT_CLASSIFICATION	8.413648166291289E-7	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999836394584505	WITHOUT_CLASSIFICATION	1.636054154949162E-5	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999993130509193	WITHOUT_CLASSIFICATION	6.869490807150208E-7	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999995838000129	WITHOUT_CLASSIFICATION	4.1619998720259804E-7	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9998811625594745	WITHOUT_CLASSIFICATION	1.1883744052543852E-4	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9998017960872314	WITHOUT_CLASSIFICATION	1.9820391276849172E-4	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999995004154564	WITHOUT_CLASSIFICATION	4.995845435859588E-7	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999739543146001	WITHOUT_CLASSIFICATION	2.604568539987218E-5	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999993273378841	WITHOUT_CLASSIFICATION	6.726621159767891E-7	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999953512861941	WITHOUT_CLASSIFICATION	4.648713805943549E-6	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9457533557833804	WITHOUT_CLASSIFICATION	0.05424664421661958	DESIGN
// must not reallocate	WITHOUT_CLASSIFICATION	0.999999228531123	WITHOUT_CLASSIFICATION	7.714688769368293E-7	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999991385442568	WITHOUT_CLASSIFICATION	8.614557431152746E-7	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.999992198890149	WITHOUT_CLASSIFICATION	7.801109850928215E-6	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999950451018627	WITHOUT_CLASSIFICATION	4.9548981373132E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999987920245692	WITHOUT_CLASSIFICATION	1.2079754307735047E-6	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999981477004019	WITHOUT_CLASSIFICATION	1.8522995982384066E-6	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999992325969317	WITHOUT_CLASSIFICATION	7.674030682520978E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999997573602418	WITHOUT_CLASSIFICATION	2.4263975821230217E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999997573602418	WITHOUT_CLASSIFICATION	2.4263975821230217E-7	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999999685815867	WITHOUT_CLASSIFICATION	3.1418413377563374E-8	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999995590316082	WITHOUT_CLASSIFICATION	4.409683917927975E-7	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999964654316486	WITHOUT_CLASSIFICATION	3.5345683514457325E-6	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9724460597074572	WITHOUT_CLASSIFICATION	0.027553940292542788	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999898703079223	WITHOUT_CLASSIFICATION	1.0129692077721958E-5	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999992052539545	WITHOUT_CLASSIFICATION	7.947460454569203E-7	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999995245057317	WITHOUT_CLASSIFICATION	4.754942683615615E-7	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999995245057317	WITHOUT_CLASSIFICATION	4.754942683615615E-7	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999993654788464	WITHOUT_CLASSIFICATION	6.34521153625387E-7	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8973291660970539	WITHOUT_CLASSIFICATION	0.10267083390294605	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999878774787309	WITHOUT_CLASSIFICATION	1.212252126924909E-5	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999878774787309	WITHOUT_CLASSIFICATION	1.212252126924909E-5	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999999616516784	WITHOUT_CLASSIFICATION	3.834832157310768E-8	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999977379068119	WITHOUT_CLASSIFICATION	2.262093188159711E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999977379068119	WITHOUT_CLASSIFICATION	2.262093188159711E-6	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999992296979776	WITHOUT_CLASSIFICATION	7.703020225274926E-7	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999992296979776	WITHOUT_CLASSIFICATION	7.703020225274926E-7	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999955611292439	WITHOUT_CLASSIFICATION	4.438870756088137E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999955611292439	WITHOUT_CLASSIFICATION	4.438870756088137E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999975229129433	WITHOUT_CLASSIFICATION	2.4770870567587183E-6	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999987111139752	WITHOUT_CLASSIFICATION	1.288886024863089E-6	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999498307669293	WITHOUT_CLASSIFICATION	5.01692330707246E-5	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999999436508692	WITHOUT_CLASSIFICATION	5.634913085031536E-8	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999958345497701	WITHOUT_CLASSIFICATION	4.165450229860328E-6	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999842866811522	WITHOUT_CLASSIFICATION	1.5713318847824954E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999859412733204	WITHOUT_CLASSIFICATION	1.405872667954948E-5	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.998983033944275	WITHOUT_CLASSIFICATION	0.0010169660557250008	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999859412733204	WITHOUT_CLASSIFICATION	1.405872667954948E-5	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9995831667496053	WITHOUT_CLASSIFICATION	4.168332503946636E-4	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.999996323130687	WITHOUT_CLASSIFICATION	3.676869313053793E-6	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999808081173948	WITHOUT_CLASSIFICATION	1.9191882605185748E-5	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999116932734257	WITHOUT_CLASSIFICATION	8.830672657424846E-5	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999999605641587	WITHOUT_CLASSIFICATION	3.943584130325632E-8	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9990194361320281	WITHOUT_CLASSIFICATION	9.805638679718958E-4	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.99997676862046	WITHOUT_CLASSIFICATION	2.323137953998514E-5	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999968682183158	WITHOUT_CLASSIFICATION	3.1317816842026406E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999937597834839	WITHOUT_CLASSIFICATION	6.240216515990445E-6	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.999993812543061	WITHOUT_CLASSIFICATION	6.187456939008241E-6	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999996048874814	WITHOUT_CLASSIFICATION	3.9511251850074706E-7	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999997628187479	WITHOUT_CLASSIFICATION	2.3718125205125378E-7	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999998089631277	WITHOUT_CLASSIFICATION	1.9103687233183056E-7	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999994214636738	WITHOUT_CLASSIFICATION	5.785363261340324E-7	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999984150855522	WITHOUT_CLASSIFICATION	1.584914447769284E-6	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999956559895743	WITHOUT_CLASSIFICATION	4.3440104256635625E-6	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999998281899178	WITHOUT_CLASSIFICATION	1.7181008218470428E-7	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999581907954158	WITHOUT_CLASSIFICATION	4.1809204584201596E-5	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.999832831596778	WITHOUT_CLASSIFICATION	1.6716840322204262E-4	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999903198763496	WITHOUT_CLASSIFICATION	9.680123650429726E-6	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999965371392464	WITHOUT_CLASSIFICATION	3.4628607535060558E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999912306268389	WITHOUT_CLASSIFICATION	8.769373160992675E-6	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999711314451187	WITHOUT_CLASSIFICATION	2.886855488130519E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999990458071472	WITHOUT_CLASSIFICATION	9.541928528438837E-7	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999804364575576	WITHOUT_CLASSIFICATION	1.9563542442362077E-5	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999313243535505	WITHOUT_CLASSIFICATION	6.867564644956758E-5	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999397713489347	WITHOUT_CLASSIFICATION	6.0228651065286935E-5	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.999999379817429	WITHOUT_CLASSIFICATION	6.201825708965738E-7	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999961493957088	WITHOUT_CLASSIFICATION	3.850604291148482E-6	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999972383081231	WITHOUT_CLASSIFICATION	2.761691876842339E-6	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999808612172534	WITHOUT_CLASSIFICATION	1.9138782746684247E-5	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999858122935863	WITHOUT_CLASSIFICATION	1.4187706413649283E-5	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999977283598974	WITHOUT_CLASSIFICATION	2.2716401026215142E-6	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.999927604329224	WITHOUT_CLASSIFICATION	7.239567077604446E-5	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999997165442102	WITHOUT_CLASSIFICATION	2.834557898620935E-7	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999992129692127	WITHOUT_CLASSIFICATION	7.870307872600525E-7	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.999996073833722	WITHOUT_CLASSIFICATION	3.926166277978344E-6	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999969292252807	WITHOUT_CLASSIFICATION	3.070774719218481E-6	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.999998509834158	WITHOUT_CLASSIFICATION	1.4901658420682517E-6	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999992591134759	WITHOUT_CLASSIFICATION	7.408865241000611E-6	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999919826405868	WITHOUT_CLASSIFICATION	8.017359413295762E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999997390549119	WITHOUT_CLASSIFICATION	2.6094508808133415E-7	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999979029625543	WITHOUT_CLASSIFICATION	2.097037445802286E-6	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999882350901318	WITHOUT_CLASSIFICATION	1.176490986835399E-5	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9998599777373689	WITHOUT_CLASSIFICATION	1.40022262631196E-4	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9972299166113685	WITHOUT_CLASSIFICATION	0.002770083388631505	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9994764642241367	WITHOUT_CLASSIFICATION	5.235357758631861E-4	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9982827580425766	WITHOUT_CLASSIFICATION	0.0017172419574234246	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999704499979	WITHOUT_CLASSIFICATION	2.955000209405649E-7	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999990510344363	WITHOUT_CLASSIFICATION	9.489655637560191E-7	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999995160318914	WITHOUT_CLASSIFICATION	4.839681086054082E-7	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999997369661188	WITHOUT_CLASSIFICATION	2.630338812447049E-7	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999080019895679	WITHOUT_CLASSIFICATION	9.199801043207405E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9997908147460834	WITHOUT_CLASSIFICATION	2.0918525391658732E-4	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999989308676936	WITHOUT_CLASSIFICATION	1.0691323062953987E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999989308676936	WITHOUT_CLASSIFICATION	1.0691323062953987E-6	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999996517505704	WITHOUT_CLASSIFICATION	3.4824942971360695E-7	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999997616471162	WITHOUT_CLASSIFICATION	2.3835288379080685E-6	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.999999936572557	WITHOUT_CLASSIFICATION	6.342744299678148E-8	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999890066275684	WITHOUT_CLASSIFICATION	1.0993372431640484E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9993645312740864	WITHOUT_CLASSIFICATION	6.354687259135326E-4	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999996832038358	WITHOUT_CLASSIFICATION	3.167961641673336E-7	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9896996588885068	WITHOUT_CLASSIFICATION	0.010300341111493291	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9995062453727886	WITHOUT_CLASSIFICATION	4.93754627211262E-4	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999996520745555	WITHOUT_CLASSIFICATION	3.479254444278891E-7	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999987390165407	WITHOUT_CLASSIFICATION	1.2609834593994844E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999991929878247	WITHOUT_CLASSIFICATION	8.070121752960064E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999991929878247	WITHOUT_CLASSIFICATION	8.070121752960064E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999324388150602	WITHOUT_CLASSIFICATION	6.756118493986193E-5	DESIGN
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999979579165204	WITHOUT_CLASSIFICATION	2.0420834796969355E-6	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9979165688419184	WITHOUT_CLASSIFICATION	0.002083431158081584	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999996812758897	WITHOUT_CLASSIFICATION	3.1872411034049027E-7	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.999997686341386	WITHOUT_CLASSIFICATION	2.3136586140302306E-6	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999969244734865	WITHOUT_CLASSIFICATION	3.07552651347588E-6	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999984921051539	WITHOUT_CLASSIFICATION	1.5078948460984938E-6	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999452970644535	WITHOUT_CLASSIFICATION	5.4702935546472396E-5	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999984588913253	WITHOUT_CLASSIFICATION	1.54110867472808E-6	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9993658122008564	WITHOUT_CLASSIFICATION	6.341877991435962E-4	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999486556425885	WITHOUT_CLASSIFICATION	5.1344357411463864E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999984732964414	WITHOUT_CLASSIFICATION	1.5267035585614902E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999769815410082	WITHOUT_CLASSIFICATION	2.3018458991719434E-5	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999769815410082	WITHOUT_CLASSIFICATION	2.3018458991719434E-5	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9996030819944076	WITHOUT_CLASSIFICATION	3.9691800559244525E-4	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999983095120769	WITHOUT_CLASSIFICATION	1.690487923127392E-6	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999975728735169	WITHOUT_CLASSIFICATION	2.427126483160917E-6	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.999955979747201	WITHOUT_CLASSIFICATION	4.402025279903446E-5	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999982541853634	WITHOUT_CLASSIFICATION	1.7458146365278828E-6	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999995023119072	WITHOUT_CLASSIFICATION	4.976880927969751E-7	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999870826166442	WITHOUT_CLASSIFICATION	1.291738335585567E-5	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999095068715	WITHOUT_CLASSIFICATION	9.049312850530386E-8	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999975456790273	WITHOUT_CLASSIFICATION	2.454320972788114E-6	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999989434355866	WITHOUT_CLASSIFICATION	1.0565644133030635E-6	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9979165688419184	WITHOUT_CLASSIFICATION	0.002083431158081584	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9965108559917002	WITHOUT_CLASSIFICATION	0.003489144008299862	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9998539216568206	WITHOUT_CLASSIFICATION	1.4607834317928458E-4	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999989804579451	WITHOUT_CLASSIFICATION	1.0195420548903972E-6	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999997004630902	WITHOUT_CLASSIFICATION	2.995369097987537E-7	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999987992539676	WITHOUT_CLASSIFICATION	1.2007460324138263E-6	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999987189316649	WITHOUT_CLASSIFICATION	1.281068335031873E-6	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999951071085315	WITHOUT_CLASSIFICATION	4.892891468480438E-6	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999805257326834	WITHOUT_CLASSIFICATION	1.947426731656148E-5	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999982008861474	WITHOUT_CLASSIFICATION	1.7991138525628222E-6	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999868343956135	WITHOUT_CLASSIFICATION	1.3165604386452623E-5	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999982086208938	WITHOUT_CLASSIFICATION	1.7913791061140129E-6	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9992763982559797	WITHOUT_CLASSIFICATION	7.236017440202054E-4	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999401318175122	WITHOUT_CLASSIFICATION	5.9868182487831524E-5	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999933295735697	WITHOUT_CLASSIFICATION	6.670426430319554E-6	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999034589452384	WITHOUT_CLASSIFICATION	9.654105476154248E-5	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999938647979498	WITHOUT_CLASSIFICATION	6.135202050179167E-6	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999978578371959	WITHOUT_CLASSIFICATION	2.1421628040441505E-6	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999998892505818	WITHOUT_CLASSIFICATION	1.1074941823297855E-7	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.999997528407583	WITHOUT_CLASSIFICATION	2.4715924169914866E-6	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9999274333309747	WITHOUT_CLASSIFICATION	7.256666902539815E-5	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999470504677459	WITHOUT_CLASSIFICATION	5.2949532254146563E-5	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999349635236735	WITHOUT_CLASSIFICATION	6.503647632655817E-5	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999785339221321	WITHOUT_CLASSIFICATION	2.1466077867903115E-4	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999977127323485	WITHOUT_CLASSIFICATION	2.2872676514079685E-6	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999987098676978	WITHOUT_CLASSIFICATION	1.290132302100132E-6	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999995418918344	WITHOUT_CLASSIFICATION	4.5810816562026087E-7	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9999614272848799	WITHOUT_CLASSIFICATION	3.8572715120164565E-5	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999981435060209	WITHOUT_CLASSIFICATION	1.856493979171062E-6	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999994667890185	WITHOUT_CLASSIFICATION	5.332109813802983E-7	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999997349201423	WITHOUT_CLASSIFICATION	2.6507985777735506E-7	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999851928797361	WITHOUT_CLASSIFICATION	1.4807120264007627E-5	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999851928797361	WITHOUT_CLASSIFICATION	1.4807120264007627E-5	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.999999624842252	WITHOUT_CLASSIFICATION	3.75157747926769E-7	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999989109935905	WITHOUT_CLASSIFICATION	1.0890064095830114E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999911742025	WITHOUT_CLASSIFICATION	8.825797522659047E-9	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999977027280484	WITHOUT_CLASSIFICATION	2.297271951614433E-6	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9989446741989595	WITHOUT_CLASSIFICATION	0.0010553258010405336	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999984915910598	WITHOUT_CLASSIFICATION	1.508408940165554E-6	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999922947902314	WITHOUT_CLASSIFICATION	7.705209768446052E-6	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999998734813585	WITHOUT_CLASSIFICATION	1.265186415099952E-7	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999991493379418	WITHOUT_CLASSIFICATION	8.506620582404496E-7	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999985129063678	WITHOUT_CLASSIFICATION	1.4870936322527613E-6	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9998316441146667	WITHOUT_CLASSIFICATION	1.683558853332595E-4	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9999938259815753	WITHOUT_CLASSIFICATION	6.1740184247338435E-6	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999996176790867	WITHOUT_CLASSIFICATION	3.8232091333414865E-7	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.999998360344521	WITHOUT_CLASSIFICATION	1.6396554790379654E-6	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999710861130974	WITHOUT_CLASSIFICATION	2.8913886902627842E-5	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999851223091045	WITHOUT_CLASSIFICATION	1.4877690895411438E-5	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9998996464741271	WITHOUT_CLASSIFICATION	1.0035352587293606E-4	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999998703517856	WITHOUT_CLASSIFICATION	1.296482142765097E-7	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999903097316173	WITHOUT_CLASSIFICATION	9.690268382828062E-6	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999490858634068	WITHOUT_CLASSIFICATION	5.0914136593126764E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999967285556812	WITHOUT_CLASSIFICATION	3.271444318788783E-6	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999967285556812	WITHOUT_CLASSIFICATION	3.271444318788783E-6	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999983739714017	WITHOUT_CLASSIFICATION	1.6260285982650776E-6	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999998790939455	WITHOUT_CLASSIFICATION	1.2090605449017926E-7	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999730114139017	WITHOUT_CLASSIFICATION	2.6988586098183735E-5	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999994413266744	WITHOUT_CLASSIFICATION	5.586733255806696E-7	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.999999208587843	WITHOUT_CLASSIFICATION	7.914121570668288E-7	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999712787400767	WITHOUT_CLASSIFICATION	2.8721259923234993E-5	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999282947798301	WITHOUT_CLASSIFICATION	7.170522016990633E-5	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999987466542	WITHOUT_CLASSIFICATION	1.2533457406527273E-9	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999988729305953	WITHOUT_CLASSIFICATION	1.1270694047193177E-6	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9834600799315685	WITHOUT_CLASSIFICATION	0.016539920068431545	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999882449631006	WITHOUT_CLASSIFICATION	1.1755036899403782E-5	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999313080517385	WITHOUT_CLASSIFICATION	6.869194826151914E-5	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999665141886424	WITHOUT_CLASSIFICATION	3.348581135765364E-5	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999970008195935	WITHOUT_CLASSIFICATION	2.9991804064902367E-6	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999749869606391	WITHOUT_CLASSIFICATION	2.501303936085869E-5	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9998569663961042	WITHOUT_CLASSIFICATION	1.4303360389575421E-4	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.999992064376665	WITHOUT_CLASSIFICATION	7.935623334965268E-6	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999958010659447	WITHOUT_CLASSIFICATION	4.1989340553563825E-6	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999991485279747	WITHOUT_CLASSIFICATION	8.514720254097912E-7	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999689590104667	WITHOUT_CLASSIFICATION	3.1040989533276636E-5	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9998143145954886	WITHOUT_CLASSIFICATION	1.8568540451122144E-4	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999986842993986	WITHOUT_CLASSIFICATION	1.3157006013055634E-6	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999992044495095	WITHOUT_CLASSIFICATION	7.95550490482948E-7	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9967770724208252	WITHOUT_CLASSIFICATION	0.0032229275791747143	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999868551321814	WITHOUT_CLASSIFICATION	1.3144867818495499E-5	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999834116324307	WITHOUT_CLASSIFICATION	1.6588367569373092E-5	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9999911420293233	WITHOUT_CLASSIFICATION	8.857970676824118E-6	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999907641407375	WITHOUT_CLASSIFICATION	9.235859262436925E-6	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9997101183860237	WITHOUT_CLASSIFICATION	2.898816139762835E-4	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999461713174999	WITHOUT_CLASSIFICATION	5.3828682500018585E-5	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9996852429244132	WITHOUT_CLASSIFICATION	3.1475707558686514E-4	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999990296385033	WITHOUT_CLASSIFICATION	9.703614966892417E-7	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999907732396245	WITHOUT_CLASSIFICATION	9.226760375508066E-6	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9999940875731357	WITHOUT_CLASSIFICATION	5.912426864383404E-6	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999987093841168	WITHOUT_CLASSIFICATION	1.2906158831135483E-6	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999427225926572	WITHOUT_CLASSIFICATION	5.727740734272958E-5	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999409399393847	WITHOUT_CLASSIFICATION	5.9060060615298785E-5	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999988802551313	WITHOUT_CLASSIFICATION	1.1197448686518975E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999927344881033	WITHOUT_CLASSIFICATION	7.265511896705275E-6	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999694207023654	WITHOUT_CLASSIFICATION	3.057929763459296E-5	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999999541602288	WITHOUT_CLASSIFICATION	4.583977123599967E-8	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999997983275021	WITHOUT_CLASSIFICATION	2.0167249790934195E-7	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999072712359	WITHOUT_CLASSIFICATION	9.272876410422713E-8	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999961521326624	WITHOUT_CLASSIFICATION	3.847867337692116E-6	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999999624275974	WITHOUT_CLASSIFICATION	3.757240259000714E-8	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999961521326624	WITHOUT_CLASSIFICATION	3.847867337692116E-6	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.7437491526066485	WITHOUT_CLASSIFICATION	0.25625084739335147	DESIGN
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.733225893007313	WITHOUT_CLASSIFICATION	0.26677410699268705	DESIGN
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999959722578782	WITHOUT_CLASSIFICATION	4.0277421218393345E-6	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6891801823627995	WITHOUT_CLASSIFICATION	0.3108198176372005	DESIGN
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.999993359428988	WITHOUT_CLASSIFICATION	6.640571012003347E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.999999992837284	WITHOUT_CLASSIFICATION	7.162715966418117E-9	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999997822838028	WITHOUT_CLASSIFICATION	2.1771619727270902E-7	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999846859936219	WITHOUT_CLASSIFICATION	1.5314006378122083E-5	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999738457711029	WITHOUT_CLASSIFICATION	2.6154228897106653E-5	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999777834304976	WITHOUT_CLASSIFICATION	2.221656950241777E-5	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.978480135877333	WITHOUT_CLASSIFICATION	0.021519864122667064	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999951047990706	WITHOUT_CLASSIFICATION	4.895200929397894E-6	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999899271930819	WITHOUT_CLASSIFICATION	1.007280691818397E-5	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.999986096700676	WITHOUT_CLASSIFICATION	1.3903299324142936E-5	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9997978422094903	WITHOUT_CLASSIFICATION	2.0215779050957968E-4	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9970536677189825	WITHOUT_CLASSIFICATION	0.002946332281017524	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999574996033217	WITHOUT_CLASSIFICATION	4.2500396678315564E-5	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9999986036549339	WITHOUT_CLASSIFICATION	1.396345066071673E-6	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999985750521241	WITHOUT_CLASSIFICATION	1.4249478759405634E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9998618953167709	WITHOUT_CLASSIFICATION	1.3810468322900268E-4	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999873739216083	WITHOUT_CLASSIFICATION	1.262607839167687E-5	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999992354684141	WITHOUT_CLASSIFICATION	7.645315859329934E-7	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999999231853084	WITHOUT_CLASSIFICATION	7.681469157524863E-8	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999997209584984	WITHOUT_CLASSIFICATION	2.790415015496405E-7	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999868224647209	WITHOUT_CLASSIFICATION	1.3177535279117373E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999647963977174	WITHOUT_CLASSIFICATION	3.5203602282695994E-5	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999991932613651	WITHOUT_CLASSIFICATION	8.067386348313925E-7	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999992692681078	WITHOUT_CLASSIFICATION	7.307318922134573E-7	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999139519585378	WITHOUT_CLASSIFICATION	8.60480414621884E-5	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999639939054121	WITHOUT_CLASSIFICATION	3.600609458787175E-5	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999756050821903	WITHOUT_CLASSIFICATION	2.4394917809583878E-5	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999628479890437	WITHOUT_CLASSIFICATION	3.715201095632764E-5	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999650941485844	WITHOUT_CLASSIFICATION	3.4905851415544674E-5	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9999976643781491	WITHOUT_CLASSIFICATION	2.3356218509284366E-6	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9998750300574036	WITHOUT_CLASSIFICATION	1.2496994259632042E-4	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999939991496425	WITHOUT_CLASSIFICATION	6.00085035748808E-6	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999879578517793	WITHOUT_CLASSIFICATION	1.2042148220706546E-5	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999877948799183	WITHOUT_CLASSIFICATION	1.220512008170382E-5	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999970853378205	WITHOUT_CLASSIFICATION	2.9146621795342245E-6	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999996237409475	WITHOUT_CLASSIFICATION	3.762590523787799E-7	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999998432175026	WITHOUT_CLASSIFICATION	1.5678249731836687E-7	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999973246809934	WITHOUT_CLASSIFICATION	2.6753190065731975E-6	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.999991518287467	WITHOUT_CLASSIFICATION	8.481712533010842E-6	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999774779174946	WITHOUT_CLASSIFICATION	2.2522082505358654E-5	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999774779174946	WITHOUT_CLASSIFICATION	2.2522082505358654E-5	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9996802820062254	WITHOUT_CLASSIFICATION	3.1971799377459003E-4	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999978870147175	WITHOUT_CLASSIFICATION	2.1129852825709524E-6	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9993294709116928	WITHOUT_CLASSIFICATION	6.705290883071814E-4	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999900481299091	WITHOUT_CLASSIFICATION	9.951870090907E-6	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999981909961659	WITHOUT_CLASSIFICATION	1.8090038340162445E-6	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999992651964874	WITHOUT_CLASSIFICATION	7.34803512724795E-7	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999959834941168	WITHOUT_CLASSIFICATION	4.016505883245427E-6	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999994769252845	WITHOUT_CLASSIFICATION	5.230747156361138E-7	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999829929841278	WITHOUT_CLASSIFICATION	1.700701587219823E-5	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.99992779176579	WITHOUT_CLASSIFICATION	7.22082342099033E-5	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999997492662703	WITHOUT_CLASSIFICATION	2.507337297520429E-7	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999793614307334	WITHOUT_CLASSIFICATION	2.063856926660698E-5	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999140311984215	WITHOUT_CLASSIFICATION	8.596880157848738E-5	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9991444571018383	WITHOUT_CLASSIFICATION	8.555428981616577E-4	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.891121915253971	WITHOUT_CLASSIFICATION	0.10887808474602895	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9917620358191543	WITHOUT_CLASSIFICATION	0.008237964180845745	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.999999916635992	WITHOUT_CLASSIFICATION	8.336400805886626E-8	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999981868971287	WITHOUT_CLASSIFICATION	1.8131028713378482E-6	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9940293750317124	WITHOUT_CLASSIFICATION	0.0059706249682876045	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999949197046036	WITHOUT_CLASSIFICATION	5.080295396375731E-6	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9996210819182895	WITHOUT_CLASSIFICATION	3.789180817105276E-4	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999631757119646	WITHOUT_CLASSIFICATION	3.6824288035438354E-5	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999829667675979	WITHOUT_CLASSIFICATION	1.703323240213392E-5	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9980139685127343	WITHOUT_CLASSIFICATION	0.0019860314872657283	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999862762031576	WITHOUT_CLASSIFICATION	1.3723796842334042E-5	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999461096619	WITHOUT_CLASSIFICATION	5.38903381888904E-8	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999864466128466	WITHOUT_CLASSIFICATION	1.355338715338667E-5	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999941715140239	WITHOUT_CLASSIFICATION	5.82848597611349E-6	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999652481869857	WITHOUT_CLASSIFICATION	3.475181301427105E-5	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999975169907576	WITHOUT_CLASSIFICATION	2.4830092424911064E-6	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999753978435098	WITHOUT_CLASSIFICATION	2.460215649033328E-5	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9927043252782048	WITHOUT_CLASSIFICATION	0.0072956747217952115	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999594224111624	WITHOUT_CLASSIFICATION	4.0577588837615747E-5	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9996546230707453	WITHOUT_CLASSIFICATION	3.453769292548029E-4	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.999999848015687	WITHOUT_CLASSIFICATION	1.5198431296612127E-7	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999835047674576	WITHOUT_CLASSIFICATION	1.6495232542427507E-5	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999656271430304	WITHOUT_CLASSIFICATION	3.437285696960295E-5	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999979582081147	WITHOUT_CLASSIFICATION	2.0417918852996936E-5	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9998520635045373	WITHOUT_CLASSIFICATION	1.4793649546281342E-4	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999722618144057	WITHOUT_CLASSIFICATION	2.773818559431785E-5	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.999951104423069	WITHOUT_CLASSIFICATION	4.889557693104751E-5	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9970127984528926	WITHOUT_CLASSIFICATION	0.0029872015471074805	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.999856031252528	WITHOUT_CLASSIFICATION	1.4396874747210042E-4	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999911247749701	WITHOUT_CLASSIFICATION	8.875225029909119E-6	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999645029973501	WITHOUT_CLASSIFICATION	3.549700264992454E-5	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999989051982793	WITHOUT_CLASSIFICATION	1.0948017207494672E-6	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999991174319383	WITHOUT_CLASSIFICATION	8.825680616977018E-6	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999980041547773	WITHOUT_CLASSIFICATION	1.9958452227098963E-5	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9998262928408973	WITHOUT_CLASSIFICATION	1.7370715910266897E-4	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999962751228127	WITHOUT_CLASSIFICATION	3.724877187184733E-6	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999998602488675	WITHOUT_CLASSIFICATION	1.3975113249450153E-6	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999937605186578	WITHOUT_CLASSIFICATION	6.23948134218101E-6	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999981299749013	WITHOUT_CLASSIFICATION	1.8700250986475885E-6	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999998115068949	WITHOUT_CLASSIFICATION	1.8849310508052634E-7	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999996200256553	WITHOUT_CLASSIFICATION	3.7997434465612873E-7	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9991831527218983	WITHOUT_CLASSIFICATION	8.168472781017719E-4	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.999999451055901	WITHOUT_CLASSIFICATION	5.489440989046954E-7	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999975786426997	WITHOUT_CLASSIFICATION	2.4213573003012535E-5	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999975447798942	WITHOUT_CLASSIFICATION	2.4552201057251815E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999994465656054	WITHOUT_CLASSIFICATION	5.534343945828811E-7	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999589396447756	WITHOUT_CLASSIFICATION	4.1060355224452456E-5	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999994018741853	WITHOUT_CLASSIFICATION	5.981258146251515E-7	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999993535521234	WITHOUT_CLASSIFICATION	6.464478765539967E-7	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999687794790182	WITHOUT_CLASSIFICATION	3.122052098185017E-5	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999997736269058	WITHOUT_CLASSIFICATION	2.2637309428191245E-7	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999933431897544	WITHOUT_CLASSIFICATION	6.656810245633943E-6	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999863061030801	WITHOUT_CLASSIFICATION	1.3693896919750707E-5	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999977160174769	WITHOUT_CLASSIFICATION	2.283982523063728E-6	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999984317499269	WITHOUT_CLASSIFICATION	1.5682500731195235E-6	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999991628227992	WITHOUT_CLASSIFICATION	8.371772007159241E-7	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9996297740117147	WITHOUT_CLASSIFICATION	3.702259882853235E-4	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9964885775833333	WITHOUT_CLASSIFICATION	0.00351142241666672	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999834387578898	WITHOUT_CLASSIFICATION	1.6561242110257887E-5	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999991469814711	WITHOUT_CLASSIFICATION	8.530185289020793E-7	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999933858366826	WITHOUT_CLASSIFICATION	6.614163317433608E-6	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999939785992695	WITHOUT_CLASSIFICATION	6.021400730550893E-6	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999960033237076	WITHOUT_CLASSIFICATION	3.9966762923721085E-6	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999910427160298	WITHOUT_CLASSIFICATION	8.957283970202383E-6	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999911017634303	WITHOUT_CLASSIFICATION	8.89823656964479E-6	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999925533150483	WITHOUT_CLASSIFICATION	7.4466849517063555E-6	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999918569380342	WITHOUT_CLASSIFICATION	8.143061965792543E-6	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999946605190774	WITHOUT_CLASSIFICATION	5.3394809226550795E-6	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999942208339911	WITHOUT_CLASSIFICATION	5.779166008904399E-6	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999924214013287	WITHOUT_CLASSIFICATION	7.5785986712013115E-6	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999970257627097	WITHOUT_CLASSIFICATION	2.9742372904762928E-6	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999976667908351	WITHOUT_CLASSIFICATION	2.3332091648641788E-6	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999947333202087	WITHOUT_CLASSIFICATION	5.26667979130811E-6	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999958718818159	WITHOUT_CLASSIFICATION	4.128118184146525E-6	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999949907897937	WITHOUT_CLASSIFICATION	5.009210206244933E-6	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999967769467164	WITHOUT_CLASSIFICATION	3.22305328351694E-6	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999956589958948	WITHOUT_CLASSIFICATION	4.341004105160128E-6	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999974733758863	WITHOUT_CLASSIFICATION	2.5266241135972025E-6	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999978171768727	WITHOUT_CLASSIFICATION	2.1828231273157013E-6	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999996864424178	WITHOUT_CLASSIFICATION	3.135575821861886E-7	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9922409504704975	WITHOUT_CLASSIFICATION	0.007759049529502444	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.999961467513608	WITHOUT_CLASSIFICATION	3.853248639196767E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999997611827655	WITHOUT_CLASSIFICATION	2.388172345292377E-7	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9996319050947646	WITHOUT_CLASSIFICATION	3.680949052353384E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9988977584149541	WITHOUT_CLASSIFICATION	0.0011022415850459194	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999789594848063	WITHOUT_CLASSIFICATION	2.104051519367781E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9998087497525894	WITHOUT_CLASSIFICATION	1.912502474107124E-4	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.999963126267974	WITHOUT_CLASSIFICATION	3.687373202596846E-5	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999998078173814	WITHOUT_CLASSIFICATION	1.921826185548577E-7	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.7770322299466789	WITHOUT_CLASSIFICATION	0.22296777005332113	DESIGN
// integer division	WITHOUT_CLASSIFICATION	0.9999991796945331	WITHOUT_CLASSIFICATION	8.203054667826051E-7	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999997328355824	WITHOUT_CLASSIFICATION	2.6716441751937117E-7	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999754749023562	WITHOUT_CLASSIFICATION	2.452509764386551E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999754749023562	WITHOUT_CLASSIFICATION	2.452509764386551E-5	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9997738509979	WITHOUT_CLASSIFICATION	2.2614900210010316E-4	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999903609611124	WITHOUT_CLASSIFICATION	9.639038887545077E-6	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999977148370022	WITHOUT_CLASSIFICATION	2.285162997914815E-6	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999703155128282	WITHOUT_CLASSIFICATION	2.9684487171842224E-5	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.998454535055946	WITHOUT_CLASSIFICATION	0.0015454649440540715	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9998166818250371	WITHOUT_CLASSIFICATION	1.8331817496283705E-4	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999994122624174	WITHOUT_CLASSIFICATION	5.877375825508487E-7	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999904071647094	WITHOUT_CLASSIFICATION	9.592835290457404E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999999592474598	WITHOUT_CLASSIFICATION	4.075254020936971E-8	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999985963476602	WITHOUT_CLASSIFICATION	1.4036523397487483E-6	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9998213937446497	WITHOUT_CLASSIFICATION	1.786062553502905E-4	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999989068191949	WITHOUT_CLASSIFICATION	1.0931808051752531E-6	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9999891436102186	WITHOUT_CLASSIFICATION	1.0856389781477903E-5	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999752117767392	WITHOUT_CLASSIFICATION	2.4788223260801838E-5	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9998566392647801	WITHOUT_CLASSIFICATION	1.4336073521991892E-4	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999991564464372	WITHOUT_CLASSIFICATION	8.435535627079275E-7	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.999995962071742	WITHOUT_CLASSIFICATION	4.0379282579373955E-6	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.999962188712394	WITHOUT_CLASSIFICATION	3.7811287605950294E-5	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9994433815672698	WITHOUT_CLASSIFICATION	5.56618432730225E-4	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.993083726835173	WITHOUT_CLASSIFICATION	0.006916273164826936	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999764584459812	WITHOUT_CLASSIFICATION	2.3541554018886533E-5	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.989446543313827	WITHOUT_CLASSIFICATION	0.01055345668617294	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999982252268861	WITHOUT_CLASSIFICATION	1.7747731139925584E-6	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9993143629424199	WITHOUT_CLASSIFICATION	6.856370575800608E-4	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999872273608024	WITHOUT_CLASSIFICATION	1.2772639197648108E-5	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999857974587971	WITHOUT_CLASSIFICATION	1.4202541202832412E-5	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999992983930135	WITHOUT_CLASSIFICATION	7.016069865229532E-7	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9988163038861023	WITHOUT_CLASSIFICATION	0.001183696113897664	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9981332847617833	WITHOUT_CLASSIFICATION	0.0018667152382166282	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.99999690015392	WITHOUT_CLASSIFICATION	3.0998460801311307E-6	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999998010088583	WITHOUT_CLASSIFICATION	1.9899114165819727E-7	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999942607985677	WITHOUT_CLASSIFICATION	5.739201432219031E-6	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999989996296412	WITHOUT_CLASSIFICATION	1.000370358767972E-6	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999998497718863	WITHOUT_CLASSIFICATION	1.5022811373994096E-7	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999949527764822	WITHOUT_CLASSIFICATION	5.047223517782129E-6	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999980344305498	WITHOUT_CLASSIFICATION	1.9655694502087384E-6	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984403667469	WITHOUT_CLASSIFICATION	1.5596332531229207E-6	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999975839775304	WITHOUT_CLASSIFICATION	2.416022469645675E-6	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9996422953657255	WITHOUT_CLASSIFICATION	3.5770463427446046E-4	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999186821633	WITHOUT_CLASSIFICATION	8.131783668823966E-8	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.8478650827867634	WITHOUT_CLASSIFICATION	0.15213491721323666	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.999970672342465	WITHOUT_CLASSIFICATION	2.932765753513869E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999995717482826	WITHOUT_CLASSIFICATION	4.282517173444933E-7	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999992391203746	WITHOUT_CLASSIFICATION	7.608796254148865E-7	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999992391203746	WITHOUT_CLASSIFICATION	7.608796254148865E-7	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999983139498632	WITHOUT_CLASSIFICATION	1.6860501368159123E-6	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9974802356184999	WITHOUT_CLASSIFICATION	0.0025197643815001495	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999719513645571	WITHOUT_CLASSIFICATION	2.804863544293105E-5	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999921861365009	WITHOUT_CLASSIFICATION	7.813863499091466E-6	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999957412181325	WITHOUT_CLASSIFICATION	4.25878186746824E-6	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999981471238697	WITHOUT_CLASSIFICATION	1.8528761303353966E-6	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999997783209367	WITHOUT_CLASSIFICATION	2.2167906325509104E-7	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9990320610576062	WITHOUT_CLASSIFICATION	9.679389423936579E-4	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999348011171594	WITHOUT_CLASSIFICATION	6.519888284060393E-5	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.999982024352733	WITHOUT_CLASSIFICATION	1.7975647266955054E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999843210318837	WITHOUT_CLASSIFICATION	1.567896811622908E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999938107662325	WITHOUT_CLASSIFICATION	6.1892337675998045E-6	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999997402520753	WITHOUT_CLASSIFICATION	2.597479247084695E-7	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999969192973089	WITHOUT_CLASSIFICATION	3.0807026909220706E-6	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9447837240103385	WITHOUT_CLASSIFICATION	0.05521627598966142	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9827493431301164	WITHOUT_CLASSIFICATION	0.01725065686988354	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999522664886463	WITHOUT_CLASSIFICATION	4.7733511353566483E-5	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999998739654186	WITHOUT_CLASSIFICATION	1.2603458144775945E-7	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999447725610198	WITHOUT_CLASSIFICATION	5.522743898027993E-5	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999995328616429	WITHOUT_CLASSIFICATION	4.6713835699179935E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999995368660153	WITHOUT_CLASSIFICATION	4.6313398468753796E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999995368660153	WITHOUT_CLASSIFICATION	4.6313398468753796E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999671999332	WITHOUT_CLASSIFICATION	3.280006680998491E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999671999332	WITHOUT_CLASSIFICATION	3.280006680998491E-8	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999967931838064	WITHOUT_CLASSIFICATION	3.206816193555695E-6	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999996903283217	WITHOUT_CLASSIFICATION	3.096716783955586E-7	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999922531564072	WITHOUT_CLASSIFICATION	7.746843592765502E-6	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999986219566218	WITHOUT_CLASSIFICATION	1.3780433781962076E-6	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999498307669293	WITHOUT_CLASSIFICATION	5.01692330707246E-5	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9997252808006465	WITHOUT_CLASSIFICATION	2.7471919935351214E-4	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9792371327248378	WITHOUT_CLASSIFICATION	0.020762867275162147	DESIGN
// Profile	WITHOUT_CLASSIFICATION	0.9999984005826552	WITHOUT_CLASSIFICATION	1.5994173448281595E-6	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999682419882051	WITHOUT_CLASSIFICATION	3.175801179483572E-5	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999988613951154	WITHOUT_CLASSIFICATION	1.1386048846108411E-6	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999863245535627	WITHOUT_CLASSIFICATION	1.367544643722561E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999991357249826	WITHOUT_CLASSIFICATION	8.642750173589251E-7	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999990437345372	WITHOUT_CLASSIFICATION	9.562654629159538E-7	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9937107031820831	WITHOUT_CLASSIFICATION	0.006289296817916922	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999299445698092	WITHOUT_CLASSIFICATION	7.005543019088685E-5	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999998464968696	WITHOUT_CLASSIFICATION	1.5350313035644127E-7	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9986467709367906	WITHOUT_CLASSIFICATION	0.0013532290632094395	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999994246175972	WITHOUT_CLASSIFICATION	5.753824028239874E-7	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.999992996757321	WITHOUT_CLASSIFICATION	7.00324267903218E-6	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999701890665245	WITHOUT_CLASSIFICATION	2.9810933475636643E-5	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999970940443392	WITHOUT_CLASSIFICATION	2.905955660866409E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999857647697317	WITHOUT_CLASSIFICATION	1.4235230268234102E-5	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999999712846942	WITHOUT_CLASSIFICATION	2.871530578065704E-8	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999991932613651	WITHOUT_CLASSIFICATION	8.067386348313925E-7	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999992651964874	WITHOUT_CLASSIFICATION	7.34803512724795E-7	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999997849625691	WITHOUT_CLASSIFICATION	2.1503743081264367E-7	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9990546343668899	WITHOUT_CLASSIFICATION	9.453656331101116E-4	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.99999850700759	WITHOUT_CLASSIFICATION	1.4929924100784168E-6	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9930144357249187	WITHOUT_CLASSIFICATION	0.00698556427508135	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999857363010081	WITHOUT_CLASSIFICATION	1.4263698991976356E-5	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999857363010081	WITHOUT_CLASSIFICATION	1.4263698991976356E-5	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999911479839627	WITHOUT_CLASSIFICATION	8.852016037335957E-6	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999977607870034	WITHOUT_CLASSIFICATION	2.2392129965975595E-6	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999998532943534	WITHOUT_CLASSIFICATION	1.4670564663595393E-7	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999992278282772	WITHOUT_CLASSIFICATION	7.721717228384912E-7	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999958566021192	WITHOUT_CLASSIFICATION	4.1433978807678726E-6	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9999996215041043	WITHOUT_CLASSIFICATION	3.784958957305311E-7	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999969678146239	WITHOUT_CLASSIFICATION	3.032185376170484E-6	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999981805682009	WITHOUT_CLASSIFICATION	1.8194317991197342E-6	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999996136619742	WITHOUT_CLASSIFICATION	3.8633802568215696E-7	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999967888494541	WITHOUT_CLASSIFICATION	3.2111505459445543E-6	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999964326293124	WITHOUT_CLASSIFICATION	3.5673706877468484E-6	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.999998522223598	WITHOUT_CLASSIFICATION	1.477776401959898E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999998659574663	WITHOUT_CLASSIFICATION	1.3404253372614579E-7	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999999229376755	WITHOUT_CLASSIFICATION	7.706232455126641E-8	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999020571054	WITHOUT_CLASSIFICATION	9.794289451331879E-8	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991513376583	WITHOUT_CLASSIFICATION	8.486623417639249E-7	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.976031861993789	WITHOUT_CLASSIFICATION	0.023968138006210976	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999962335257604	WITHOUT_CLASSIFICATION	3.7664742397485574E-6	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9997788941282622	WITHOUT_CLASSIFICATION	2.2110587173784131E-4	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9974416050642337	WITHOUT_CLASSIFICATION	0.00255839493576631	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999996377178108	WITHOUT_CLASSIFICATION	3.622821893367777E-7	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999981213013359	WITHOUT_CLASSIFICATION	1.8786986640097954E-6	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999974911077716	WITHOUT_CLASSIFICATION	2.5088922285201235E-6	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999984363586133	WITHOUT_CLASSIFICATION	1.5636413866745137E-6	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999782749253128	WITHOUT_CLASSIFICATION	2.172507468729007E-5	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999956860749818	WITHOUT_CLASSIFICATION	4.313925018193859E-6	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999993315732454	WITHOUT_CLASSIFICATION	6.684267545719281E-7	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999893122950042	WITHOUT_CLASSIFICATION	1.0687704995754594E-5	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999583696718	WITHOUT_CLASSIFICATION	4.163032828173911E-8	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999434259903666	WITHOUT_CLASSIFICATION	5.6574009633528707E-5	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.999166207931745	WITHOUT_CLASSIFICATION	8.337920682549064E-4	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999958604079472	WITHOUT_CLASSIFICATION	4.139592052903574E-6	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999995011756032	WITHOUT_CLASSIFICATION	4.988243967206147E-7	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9999998959654428	WITHOUT_CLASSIFICATION	1.0403455718074022E-7	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999825346432852	WITHOUT_CLASSIFICATION	1.746535671478183E-5	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9998514531178928	WITHOUT_CLASSIFICATION	1.4854688210713432E-4	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999997393335502	WITHOUT_CLASSIFICATION	2.6066644975095596E-7	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999856618409712	WITHOUT_CLASSIFICATION	1.4338159028925735E-5	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999998401421786	WITHOUT_CLASSIFICATION	1.5985782147289925E-7	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.999999828941683	WITHOUT_CLASSIFICATION	1.71058316907843E-7	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9973742026086116	WITHOUT_CLASSIFICATION	0.0026257973913883263	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999807409165983	WITHOUT_CLASSIFICATION	1.9259083401809615E-5	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999981922728944	WITHOUT_CLASSIFICATION	1.8077271055597696E-6	DESIGN
// while	WITHOUT_CLASSIFICATION	0.999998828016722	WITHOUT_CLASSIFICATION	1.1719832779344279E-6	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999961438065147	WITHOUT_CLASSIFICATION	3.856193485329815E-6	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9992646573164358	WITHOUT_CLASSIFICATION	7.35342683564138E-4	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999994995191074	WITHOUT_CLASSIFICATION	5.004808926558229E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999192507045412	WITHOUT_CLASSIFICATION	8.074929545879031E-5	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999463423029642	WITHOUT_CLASSIFICATION	5.365769703575858E-5	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.999995995955838	WITHOUT_CLASSIFICATION	4.004044162003064E-6	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999973961542699	WITHOUT_CLASSIFICATION	2.6038457300831516E-6	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999996783358847	WITHOUT_CLASSIFICATION	3.2166411529726656E-7	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999990663112371	WITHOUT_CLASSIFICATION	9.336887628302292E-7	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999991113447446	WITHOUT_CLASSIFICATION	8.886552553394614E-7	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999996374625072	WITHOUT_CLASSIFICATION	3.6253749280774144E-7	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.999998197842602	WITHOUT_CLASSIFICATION	1.8021573980548688E-6	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.999996275587392	WITHOUT_CLASSIFICATION	3.7244126080574134E-6	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.99996707201777	WITHOUT_CLASSIFICATION	3.2927982229918547E-5	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999995164756598	WITHOUT_CLASSIFICATION	4.835243402082819E-7	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999987384632357	WITHOUT_CLASSIFICATION	1.2615367642180964E-6	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.999998046987675	WITHOUT_CLASSIFICATION	1.9530123249697557E-6	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999973961542699	WITHOUT_CLASSIFICATION	2.6038457300831516E-6	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999990663112371	WITHOUT_CLASSIFICATION	9.336887628302292E-7	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999996783358847	WITHOUT_CLASSIFICATION	3.2166411529726656E-7	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999817919563924	WITHOUT_CLASSIFICATION	1.8208043607643778E-5	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999977704624231	WITHOUT_CLASSIFICATION	2.2295375769227475E-6	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999992814855935	WITHOUT_CLASSIFICATION	7.18514406471335E-7	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999996848880432	WITHOUT_CLASSIFICATION	3.1511195679497205E-7	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9996227544215848	WITHOUT_CLASSIFICATION	3.7724557841532975E-4	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999972651635572	WITHOUT_CLASSIFICATION	2.7348364427341873E-6	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999905390007129	WITHOUT_CLASSIFICATION	9.46099928723534E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999972057915205	WITHOUT_CLASSIFICATION	2.7942084795833425E-6	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999978014557966	WITHOUT_CLASSIFICATION	2.1985442033479E-6	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999998677705658	WITHOUT_CLASSIFICATION	1.3222943418038027E-7	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999996089064643	WITHOUT_CLASSIFICATION	3.9109353568317787E-7	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999315464641855	WITHOUT_CLASSIFICATION	6.84535358145732E-5	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999959851476766	WITHOUT_CLASSIFICATION	4.0148523233479385E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999996942443068	WITHOUT_CLASSIFICATION	3.0575569317124677E-7	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999881537195596	WITHOUT_CLASSIFICATION	1.1846280440388193E-5	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9999647311490025	WITHOUT_CLASSIFICATION	3.526885099754295E-5	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9999938980172519	WITHOUT_CLASSIFICATION	6.1019827481312315E-6	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9990020589440199	WITHOUT_CLASSIFICATION	9.9794105597999E-4	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9990020589440199	WITHOUT_CLASSIFICATION	9.9794105597999E-4	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999996327347068	WITHOUT_CLASSIFICATION	3.6726529325998787E-7	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999999272245007	WITHOUT_CLASSIFICATION	7.27754992715177E-8	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999976446944513	WITHOUT_CLASSIFICATION	2.3553055488248372E-6	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999714897753869	WITHOUT_CLASSIFICATION	2.8510224613067762E-5	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999716752218275	WITHOUT_CLASSIFICATION	2.8324778172376582E-5	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999963375953994	WITHOUT_CLASSIFICATION	3.6624046006125433E-6	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999313654659145	WITHOUT_CLASSIFICATION	6.863453408537996E-5	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999963125624115	WITHOUT_CLASSIFICATION	3.687437588456189E-6	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9998934325402081	WITHOUT_CLASSIFICATION	1.0656745979187374E-4	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999900738198572	WITHOUT_CLASSIFICATION	9.926180142853757E-6	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999996611051221	WITHOUT_CLASSIFICATION	3.3889487789622735E-7	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999968709364871	WITHOUT_CLASSIFICATION	3.1290635128239378E-6	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999838853875073	WITHOUT_CLASSIFICATION	1.611461249278758E-5	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999942707506304	WITHOUT_CLASSIFICATION	5.729249369660706E-6	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999980591693676	WITHOUT_CLASSIFICATION	1.9408306325085068E-6	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999988145476866	WITHOUT_CLASSIFICATION	1.1854523134448554E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999994449137148	WITHOUT_CLASSIFICATION	5.550862851107291E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.99792190488516	WITHOUT_CLASSIFICATION	0.0020780951148399976	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.99792190488516	WITHOUT_CLASSIFICATION	0.0020780951148399976	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999930684870475	WITHOUT_CLASSIFICATION	6.9315129525141964E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999915641200422	WITHOUT_CLASSIFICATION	8.43587995769094E-6	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999886266698268	WITHOUT_CLASSIFICATION	1.1373330173134545E-5	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999994547327535	WITHOUT_CLASSIFICATION	5.452672464565079E-7	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.999997039297097	WITHOUT_CLASSIFICATION	2.9607029029131337E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.99792190488516	WITHOUT_CLASSIFICATION	0.0020780951148399976	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.99792190488516	WITHOUT_CLASSIFICATION	0.0020780951148399976	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997369783721927	WITHOUT_CLASSIFICATION	2.630216278073563E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997369783721927	WITHOUT_CLASSIFICATION	2.630216278073563E-4	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999952057493108	WITHOUT_CLASSIFICATION	4.794250689115053E-6	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999992866425281	WITHOUT_CLASSIFICATION	7.133574718221111E-7	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9977481458669707	WITHOUT_CLASSIFICATION	0.002251854133029359	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9998934313097624	WITHOUT_CLASSIFICATION	1.0656869023767015E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999052674402707	WITHOUT_CLASSIFICATION	9.473255972931633E-4	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999052674402707	WITHOUT_CLASSIFICATION	9.473255972931633E-4	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.999999046289339	WITHOUT_CLASSIFICATION	9.537106610009223E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999093976996141	WITHOUT_CLASSIFICATION	9.060230038587877E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999954057861635	WITHOUT_CLASSIFICATION	4.594213836450085E-6	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9997425403811001	WITHOUT_CLASSIFICATION	2.574596188999053E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997360358549879	WITHOUT_CLASSIFICATION	2.639641450121547E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999995557008033	WITHOUT_CLASSIFICATION	4.442991966202186E-7	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999309232547433	WITHOUT_CLASSIFICATION	6.90767452567058E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999992200311787	WITHOUT_CLASSIFICATION	7.799688212784299E-7	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9918129368280751	WITHOUT_CLASSIFICATION	0.008187063171924856	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.999999885149757	WITHOUT_CLASSIFICATION	1.1485024297592067E-7	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9969219377693502	WITHOUT_CLASSIFICATION	0.0030780622306497496	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.99999926900798	WITHOUT_CLASSIFICATION	7.309920200269923E-7	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999905634161212	WITHOUT_CLASSIFICATION	9.43658387883752E-6	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999735668664	WITHOUT_CLASSIFICATION	2.6433133532834412E-8	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999988145476866	WITHOUT_CLASSIFICATION	1.1854523134448554E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.99792190488516	WITHOUT_CLASSIFICATION	0.0020780951148399976	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997369783721927	WITHOUT_CLASSIFICATION	2.630216278073563E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999995557008033	WITHOUT_CLASSIFICATION	4.442991966202186E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9512197510557443	WITHOUT_CLASSIFICATION	0.048780248944255776	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9512197510557443	WITHOUT_CLASSIFICATION	0.048780248944255776	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999732682377063	WITHOUT_CLASSIFICATION	2.673176229365532E-5	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999997878892892	WITHOUT_CLASSIFICATION	2.121107107370446E-7	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999810766534816	WITHOUT_CLASSIFICATION	1.8923346518331625E-5	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999997112376677	WITHOUT_CLASSIFICATION	2.8876233236389773E-7	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999901953181394	WITHOUT_CLASSIFICATION	9.80468186053536E-6	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999596915879652	WITHOUT_CLASSIFICATION	4.030841203480389E-5	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.999215525676687	WITHOUT_CLASSIFICATION	7.84474323312987E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9994185621764256	WITHOUT_CLASSIFICATION	5.814378235745117E-4	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999980425727446	WITHOUT_CLASSIFICATION	1.9574272554203905E-6	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999354543904773	WITHOUT_CLASSIFICATION	6.454560952277595E-5	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999761469348623	WITHOUT_CLASSIFICATION	2.3853065137820803E-5	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999987637773534	WITHOUT_CLASSIFICATION	1.2362226465074675E-6	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999715278421	WITHOUT_CLASSIFICATION	2.8472157884983738E-8	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999994449137148	WITHOUT_CLASSIFICATION	5.550862851107291E-7	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997369783721927	WITHOUT_CLASSIFICATION	2.630216278073563E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999093976996141	WITHOUT_CLASSIFICATION	9.060230038587877E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999954057861635	WITHOUT_CLASSIFICATION	4.594213836450085E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999954057861635	WITHOUT_CLASSIFICATION	4.594213836450085E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997360358549879	WITHOUT_CLASSIFICATION	2.639641450121547E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999995557008033	WITHOUT_CLASSIFICATION	4.442991966202186E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999995557008033	WITHOUT_CLASSIFICATION	4.442991966202186E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9512197510557443	WITHOUT_CLASSIFICATION	0.048780248944255776	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999255846825197	WITHOUT_CLASSIFICATION	7.441531748028644E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999791852201884	WITHOUT_CLASSIFICATION	2.0814779811659044E-5	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999998284752005	WITHOUT_CLASSIFICATION	1.7152479948758722E-7	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9980312090608426	WITHOUT_CLASSIFICATION	0.00196879093915729	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.999981502294463	WITHOUT_CLASSIFICATION	1.8497705537030257E-5	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999996649156734	WITHOUT_CLASSIFICATION	3.350843266150456E-7	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999881126665335	WITHOUT_CLASSIFICATION	1.1887333466433542E-5	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9759648907232646	WITHOUT_CLASSIFICATION	0.024035109276735397	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999999519076811	WITHOUT_CLASSIFICATION	4.809231890858262E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999093976996141	WITHOUT_CLASSIFICATION	9.060230038587877E-5	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999954057861635	WITHOUT_CLASSIFICATION	4.594213836450085E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999954057861635	WITHOUT_CLASSIFICATION	4.594213836450085E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997360358549879	WITHOUT_CLASSIFICATION	2.639641450121547E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9994185621764256	WITHOUT_CLASSIFICATION	5.814378235745117E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999354543904773	WITHOUT_CLASSIFICATION	6.454560952277595E-5	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9996902204810253	WITHOUT_CLASSIFICATION	3.0977951897471584E-4	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999994132341696	WITHOUT_CLASSIFICATION	5.867658304564573E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999990021477312	WITHOUT_CLASSIFICATION	9.978522688169562E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999990021477312	WITHOUT_CLASSIFICATION	9.978522688169562E-7	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999951224334361	WITHOUT_CLASSIFICATION	4.877566563924797E-6	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999997556476014	WITHOUT_CLASSIFICATION	2.443523986885857E-7	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999536859490786	WITHOUT_CLASSIFICATION	4.631405092130664E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999987108245152	WITHOUT_CLASSIFICATION	1.2891754848299287E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999986993166584	WITHOUT_CLASSIFICATION	1.3006833416450972E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999986993166584	WITHOUT_CLASSIFICATION	1.3006833416450972E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999998383366366	WITHOUT_CLASSIFICATION	1.616633633969285E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999998383366366	WITHOUT_CLASSIFICATION	1.616633633969285E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999998762303768	WITHOUT_CLASSIFICATION	1.2376962313383844E-7	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999998762303768	WITHOUT_CLASSIFICATION	1.2376962313383844E-7	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999989063416324	WITHOUT_CLASSIFICATION	1.0936583676490598E-6	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9997460539129598	WITHOUT_CLASSIFICATION	2.5394608704027084E-4	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999348125876475	WITHOUT_CLASSIFICATION	6.518741235245513E-5	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.999994456154525	WITHOUT_CLASSIFICATION	5.543845475082829E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9988382327386117	WITHOUT_CLASSIFICATION	0.0011617672613883385	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999990173297987	WITHOUT_CLASSIFICATION	9.826702013898183E-7	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.999880364907365	WITHOUT_CLASSIFICATION	1.196350926349216E-4	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9709908457774024	WITHOUT_CLASSIFICATION	0.029009154222597675	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999894092320093	WITHOUT_CLASSIFICATION	1.0590767990708829E-4	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999601397075791	WITHOUT_CLASSIFICATION	3.986029242078002E-5	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9996752681445136	WITHOUT_CLASSIFICATION	3.2473185548641086E-4	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.999160237337631	WITHOUT_CLASSIFICATION	8.397626623689737E-4	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999261500683478	WITHOUT_CLASSIFICATION	7.384993165224965E-5	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999999823373269	WITHOUT_CLASSIFICATION	1.766267307722171E-8	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999999823373269	WITHOUT_CLASSIFICATION	1.766267307722171E-8	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.999830508595543	WITHOUT_CLASSIFICATION	1.6949140445693248E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9997252808006465	WITHOUT_CLASSIFICATION	2.7471919935351214E-4	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999137109017372	WITHOUT_CLASSIFICATION	8.628909826282924E-5	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999933054847321	WITHOUT_CLASSIFICATION	6.694515267923671E-6	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999092277092901	WITHOUT_CLASSIFICATION	9.07722907098709E-5	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999956542329022	WITHOUT_CLASSIFICATION	4.3457670978201205E-6	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999938055861136	WITHOUT_CLASSIFICATION	6.1944138864009804E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999760180536684	WITHOUT_CLASSIFICATION	2.398194633158289E-5	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999775118581808	WITHOUT_CLASSIFICATION	2.2488141819141793E-5	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999996345523077	WITHOUT_CLASSIFICATION	3.6544769232425006E-7	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999951648489326	WITHOUT_CLASSIFICATION	4.835151067517171E-6	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.999988882833694	WITHOUT_CLASSIFICATION	1.1117166305983745E-5	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9996175136757016	WITHOUT_CLASSIFICATION	3.824863242984601E-4	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.8390781798902148	WITHOUT_CLASSIFICATION	0.16092182010978523	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9992058965633325	WITHOUT_CLASSIFICATION	7.941034366674755E-4	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999999925579787	WITHOUT_CLASSIFICATION	7.4420213833513176E-9	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999958243545508	WITHOUT_CLASSIFICATION	4.175645449185353E-6	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999818719739619	WITHOUT_CLASSIFICATION	1.8128026037971604E-5	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999011381313	WITHOUT_CLASSIFICATION	9.886186872376017E-8	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999011381313	WITHOUT_CLASSIFICATION	9.886186872376017E-8	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9950643964940884	WITHOUT_CLASSIFICATION	0.004935603505911564	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999927900983852	WITHOUT_CLASSIFICATION	7.209901614811222E-6	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9997312738296483	WITHOUT_CLASSIFICATION	2.6872617035171223E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9997312738296483	WITHOUT_CLASSIFICATION	2.6872617035171223E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999994479807065	WITHOUT_CLASSIFICATION	5.520192935723748E-7	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999722302166159	WITHOUT_CLASSIFICATION	2.776978338415311E-5	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998915472822865	WITHOUT_CLASSIFICATION	1.084527177135763E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999610467425235	WITHOUT_CLASSIFICATION	3.89532574764783E-5	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9996189283238818	WITHOUT_CLASSIFICATION	3.810716761182839E-4	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999998820928545	WITHOUT_CLASSIFICATION	1.1790714547418557E-7	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999998820928545	WITHOUT_CLASSIFICATION	1.1790714547418557E-7	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999721750527911	WITHOUT_CLASSIFICATION	2.7824947208835404E-5	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.999765875146238	WITHOUT_CLASSIFICATION	2.3412485376182854E-4	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999956205639547	WITHOUT_CLASSIFICATION	4.379436045226386E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999872753963452	WITHOUT_CLASSIFICATION	1.2724603654743761E-5	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999927900983852	WITHOUT_CLASSIFICATION	7.209901614811222E-6	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999866120888516	WITHOUT_CLASSIFICATION	1.3387911148348228E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999926481997733	WITHOUT_CLASSIFICATION	7.351800226772386E-6	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999926481997733	WITHOUT_CLASSIFICATION	7.351800226772386E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999817498099406	WITHOUT_CLASSIFICATION	1.8250190059394607E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999911170529118	WITHOUT_CLASSIFICATION	8.882947088184396E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999911170529118	WITHOUT_CLASSIFICATION	8.882947088184396E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999456695271571	WITHOUT_CLASSIFICATION	5.433047284280521E-5	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999456695271571	WITHOUT_CLASSIFICATION	5.433047284280521E-5	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999456695271571	WITHOUT_CLASSIFICATION	5.433047284280521E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999911170529118	WITHOUT_CLASSIFICATION	8.882947088184396E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999911170529118	WITHOUT_CLASSIFICATION	8.882947088184396E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999817498099406	WITHOUT_CLASSIFICATION	1.8250190059394607E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999873496741657	WITHOUT_CLASSIFICATION	1.2650325834304991E-5	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.99999531499558	WITHOUT_CLASSIFICATION	4.68500441991844E-6	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999963244195843	WITHOUT_CLASSIFICATION	3.6755804158493833E-6	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.99999457463719	WITHOUT_CLASSIFICATION	5.4253628100223E-6	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999896470271781	WITHOUT_CLASSIFICATION	1.0352972821924372E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999594182466982	WITHOUT_CLASSIFICATION	4.0581753301849884E-5	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999998686189018	WITHOUT_CLASSIFICATION	1.3138109821802415E-7	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999714730087855	WITHOUT_CLASSIFICATION	2.8526991214392508E-5	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999951648489326	WITHOUT_CLASSIFICATION	4.835151067517171E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999911170529118	WITHOUT_CLASSIFICATION	8.882947088184396E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999911170529118	WITHOUT_CLASSIFICATION	8.882947088184396E-6	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999998741533027	WITHOUT_CLASSIFICATION	1.2584669731140683E-7	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999958693911006	WITHOUT_CLASSIFICATION	4.130608899395459E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999419916232	WITHOUT_CLASSIFICATION	5.800837687402253E-8	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999914886805499	WITHOUT_CLASSIFICATION	8.511319450103907E-6	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999788675679151	WITHOUT_CLASSIFICATION	2.1132432084886385E-5	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999766641454517	WITHOUT_CLASSIFICATION	2.3335854548373394E-5	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999009971227	WITHOUT_CLASSIFICATION	9.900287738955855E-8	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999105070222553	WITHOUT_CLASSIFICATION	8.949297774473423E-5	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999990646323411	WITHOUT_CLASSIFICATION	9.35367658857614E-7	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999991120323354	WITHOUT_CLASSIFICATION	8.879676645912589E-6	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999752542384633	WITHOUT_CLASSIFICATION	2.474576153657969E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999976348145244	WITHOUT_CLASSIFICATION	2.365185475522482E-6	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.99992690773268	WITHOUT_CLASSIFICATION	7.309226731992798E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998828115143692	WITHOUT_CLASSIFICATION	1.171884856308765E-4	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999997786783892	WITHOUT_CLASSIFICATION	2.2132161080645566E-7	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999915514330081	WITHOUT_CLASSIFICATION	8.448566991904439E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999915514330081	WITHOUT_CLASSIFICATION	8.448566991904439E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999915514330081	WITHOUT_CLASSIFICATION	8.448566991904439E-6	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.9998863116085442	WITHOUT_CLASSIFICATION	1.1368839145581297E-4	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999881705857221	WITHOUT_CLASSIFICATION	1.1829414277870389E-5	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999999950283477	WITHOUT_CLASSIFICATION	4.9716522881477616E-8	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9996732609948337	WITHOUT_CLASSIFICATION	3.2673900516627354E-4	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999999081805245	WITHOUT_CLASSIFICATION	9.181947544332564E-8	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9998900113769418	WITHOUT_CLASSIFICATION	1.0998862305821978E-4	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999980429744514	WITHOUT_CLASSIFICATION	1.9570255485844248E-6	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999823448873237	WITHOUT_CLASSIFICATION	1.765511267622466E-5	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999957669853816	WITHOUT_CLASSIFICATION	4.233014618426071E-6	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999995693248748	WITHOUT_CLASSIFICATION	4.3067512516182706E-7	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9957169191032429	WITHOUT_CLASSIFICATION	0.004283080896757101	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999055039395233	WITHOUT_CLASSIFICATION	9.449606047664107E-5	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999721750527911	WITHOUT_CLASSIFICATION	2.7824947208835404E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999911170529118	WITHOUT_CLASSIFICATION	8.882947088184396E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999911170529118	WITHOUT_CLASSIFICATION	8.882947088184396E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999817498099406	WITHOUT_CLASSIFICATION	1.8250190059394607E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999594182466982	WITHOUT_CLASSIFICATION	4.0581753301849884E-5	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999958693911006	WITHOUT_CLASSIFICATION	4.130608899395459E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999914886805499	WITHOUT_CLASSIFICATION	8.511319450103907E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999766641454517	WITHOUT_CLASSIFICATION	2.3335854548373394E-5	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999419916232	WITHOUT_CLASSIFICATION	5.800837687402253E-8	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999009971227	WITHOUT_CLASSIFICATION	9.900287738955855E-8	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999991120323354	WITHOUT_CLASSIFICATION	8.879676645912589E-6	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999990646323411	WITHOUT_CLASSIFICATION	9.35367658857614E-7	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999976348145244	WITHOUT_CLASSIFICATION	2.365185475522482E-6	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9955582562091935	WITHOUT_CLASSIFICATION	0.004441743790806511	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999984651027487	WITHOUT_CLASSIFICATION	1.5348972513266415E-6	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9995198848165159	WITHOUT_CLASSIFICATION	4.801151834841761E-4	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999318398444	WITHOUT_CLASSIFICATION	6.816015570465062E-8	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9986572582701528	WITHOUT_CLASSIFICATION	0.0013427417298472449	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999966720336739	WITHOUT_CLASSIFICATION	3.3279663260838022E-6	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999849624719886	WITHOUT_CLASSIFICATION	1.5037528011451871E-5	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999998973854507	WITHOUT_CLASSIFICATION	1.0261454931328224E-7	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999981234405824	WITHOUT_CLASSIFICATION	1.8765594177168902E-6	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9998042753396034	WITHOUT_CLASSIFICATION	1.9572466039671107E-4	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999768011122474	WITHOUT_CLASSIFICATION	2.31988877525682E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999835529610153	WITHOUT_CLASSIFICATION	1.6447038984698857E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9996430902087221	WITHOUT_CLASSIFICATION	3.569097912779442E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9835147063344224	WITHOUT_CLASSIFICATION	0.0164852936655776	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999011018291724	WITHOUT_CLASSIFICATION	9.889817082758268E-5	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999986249357132	WITHOUT_CLASSIFICATION	1.3750642867362294E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9971850752531135	WITHOUT_CLASSIFICATION	0.0028149247468864822	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999966088139051	WITHOUT_CLASSIFICATION	3.3911860949411535E-6	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999943393166246	WITHOUT_CLASSIFICATION	5.66068337527901E-6	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998473083509857	WITHOUT_CLASSIFICATION	1.5269164901441192E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.992769653729625	WITHOUT_CLASSIFICATION	0.007230346270375089	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9980979805006046	WITHOUT_CLASSIFICATION	0.0019020194993954619	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9980979805006046	WITHOUT_CLASSIFICATION	0.0019020194993954619	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999730150814312	WITHOUT_CLASSIFICATION	2.698491856879796E-5	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999962186323935	WITHOUT_CLASSIFICATION	3.7813676063862427E-6	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998127829283658	WITHOUT_CLASSIFICATION	1.8721707163411777E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998127829283658	WITHOUT_CLASSIFICATION	1.8721707163411777E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998127829283658	WITHOUT_CLASSIFICATION	1.8721707163411777E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998558808412568	WITHOUT_CLASSIFICATION	1.4411915874324994E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998558808412568	WITHOUT_CLASSIFICATION	1.4411915874324994E-4	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9998561785452061	WITHOUT_CLASSIFICATION	1.438214547938684E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.999826367205054	WITHOUT_CLASSIFICATION	1.736327949460276E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999962186323935	WITHOUT_CLASSIFICATION	3.7813676063862427E-6	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999628651062854	WITHOUT_CLASSIFICATION	3.713489371457535E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998127829283658	WITHOUT_CLASSIFICATION	1.8721707163411777E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998127829283658	WITHOUT_CLASSIFICATION	1.8721707163411777E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998558808412568	WITHOUT_CLASSIFICATION	1.4411915874324994E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.999826367205054	WITHOUT_CLASSIFICATION	1.736327949460276E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999944510704516	WITHOUT_CLASSIFICATION	5.54892954840206E-6	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999944510704516	WITHOUT_CLASSIFICATION	5.54892954840206E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999994740240763	WITHOUT_CLASSIFICATION	5.259759236526743E-7	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999994740240763	WITHOUT_CLASSIFICATION	5.259759236526743E-7	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999996252696445	WITHOUT_CLASSIFICATION	3.747303555643676E-7	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999996252696445	WITHOUT_CLASSIFICATION	3.747303555643676E-7	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999987338430127	WITHOUT_CLASSIFICATION	1.2661569872799378E-6	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999993200783208	WITHOUT_CLASSIFICATION	6.799216792063805E-6	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999993200783208	WITHOUT_CLASSIFICATION	6.799216792063805E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999969449735336	WITHOUT_CLASSIFICATION	3.055026466289065E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999969449735336	WITHOUT_CLASSIFICATION	3.055026466289065E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999998653975007	WITHOUT_CLASSIFICATION	1.3460249922130225E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999991853070119	WITHOUT_CLASSIFICATION	8.146929880374658E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999991853070119	WITHOUT_CLASSIFICATION	8.146929880374658E-7	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9997859255382088	WITHOUT_CLASSIFICATION	2.140744617911112E-4	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999989962174752	WITHOUT_CLASSIFICATION	1.0037825247809321E-6	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999985391616996	WITHOUT_CLASSIFICATION	1.4608383003769113E-6	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9997859255382088	WITHOUT_CLASSIFICATION	2.140744617911112E-4	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999999057858906	WITHOUT_CLASSIFICATION	9.42141094543944E-8	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992843679412	WITHOUT_CLASSIFICATION	7.15632058884949E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992843679412	WITHOUT_CLASSIFICATION	7.15632058884949E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992843679412	WITHOUT_CLASSIFICATION	7.15632058884949E-7	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999878189804561	WITHOUT_CLASSIFICATION	1.2181019543850947E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999985730292232	WITHOUT_CLASSIFICATION	1.4269707767101386E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999987295944667	WITHOUT_CLASSIFICATION	1.2704055333672102E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999987295944667	WITHOUT_CLASSIFICATION	1.2704055333672102E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999993742421767	WITHOUT_CLASSIFICATION	6.257578232840775E-7	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998631393148	WITHOUT_CLASSIFICATION	1.3686068522646333E-7	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999938707342	WITHOUT_CLASSIFICATION	6.129265699530906E-9	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999667405033	WITHOUT_CLASSIFICATION	3.32594967363401E-8	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999995994271927	WITHOUT_CLASSIFICATION	4.0057280737990853E-7	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999998302000602	WITHOUT_CLASSIFICATION	1.6979993979163166E-7	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999998302000602	WITHOUT_CLASSIFICATION	1.6979993979163166E-7	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.999994014039129	WITHOUT_CLASSIFICATION	5.985960870984136E-6	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998274970783424	WITHOUT_CLASSIFICATION	1.7250292165755618E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998274970783424	WITHOUT_CLASSIFICATION	1.7250292165755618E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992843679412	WITHOUT_CLASSIFICATION	7.15632058884949E-7	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999985730292232	WITHOUT_CLASSIFICATION	1.4269707767101386E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999987295944667	WITHOUT_CLASSIFICATION	1.2704055333672102E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999993742421767	WITHOUT_CLASSIFICATION	6.257578232840775E-7	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998631393148	WITHOUT_CLASSIFICATION	1.3686068522646333E-7	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999938707342	WITHOUT_CLASSIFICATION	6.129265699530906E-9	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999667405033	WITHOUT_CLASSIFICATION	3.32594967363401E-8	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998274970783424	WITHOUT_CLASSIFICATION	1.7250292165755618E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999808457534554	WITHOUT_CLASSIFICATION	1.9154246544615052E-5	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9998794544917252	WITHOUT_CLASSIFICATION	1.2054550827477541E-4	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999826489861705	WITHOUT_CLASSIFICATION	1.7351013829449732E-5	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999996940849158	WITHOUT_CLASSIFICATION	3.059150840864035E-7	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999941759583119	WITHOUT_CLASSIFICATION	5.824041688124766E-6	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999993910333276	WITHOUT_CLASSIFICATION	6.089666724489797E-7	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999999565608452	WITHOUT_CLASSIFICATION	4.3439154741819814E-8	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999999565608452	WITHOUT_CLASSIFICATION	4.3439154741819814E-8	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999700452431313	WITHOUT_CLASSIFICATION	2.995475686871739E-5	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999277232691076	WITHOUT_CLASSIFICATION	7.22767308924542E-5	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.999758408999765	WITHOUT_CLASSIFICATION	2.4159100023509554E-4	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999874561199835	WITHOUT_CLASSIFICATION	1.2543880016442064E-5	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9998717816514883	WITHOUT_CLASSIFICATION	1.2821834851165355E-4	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9998717816514883	WITHOUT_CLASSIFICATION	1.2821834851165355E-4	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999137460888631	WITHOUT_CLASSIFICATION	8.62539111369654E-5	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999746603515784	WITHOUT_CLASSIFICATION	2.5339648421472317E-5	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999924052859196	WITHOUT_CLASSIFICATION	7.594714080437895E-6	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999924052859196	WITHOUT_CLASSIFICATION	7.594714080437895E-6	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999929606044657	WITHOUT_CLASSIFICATION	7.039395534247632E-6	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999007746704036	WITHOUT_CLASSIFICATION	9.922532959642445E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999995994271927	WITHOUT_CLASSIFICATION	4.0057280737990853E-7	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999927654926324	WITHOUT_CLASSIFICATION	7.234507367586553E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999950828645161	WITHOUT_CLASSIFICATION	4.917135483887762E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999271913383466	WITHOUT_CLASSIFICATION	7.28086616534215E-5	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999822371121798	WITHOUT_CLASSIFICATION	1.7762887820078563E-5	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999998855838997	WITHOUT_CLASSIFICATION	1.1441610028426917E-7	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.999999833381553	WITHOUT_CLASSIFICATION	1.666184469186662E-7	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999873860135944	WITHOUT_CLASSIFICATION	1.2613986405626062E-5	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999407414876711	WITHOUT_CLASSIFICATION	5.925851232886785E-5	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999999682813308	WITHOUT_CLASSIFICATION	3.171866920591577E-7	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999999682813308	WITHOUT_CLASSIFICATION	3.171866920591577E-7	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999869641524928	WITHOUT_CLASSIFICATION	1.3035847507125522E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999869641524928	WITHOUT_CLASSIFICATION	1.3035847507125522E-5	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999984636070489	WITHOUT_CLASSIFICATION	1.5363929510688428E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997225976551	WITHOUT_CLASSIFICATION	2.7740234484975707E-7	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997225976551	WITHOUT_CLASSIFICATION	2.7740234484975707E-7	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997225976551	WITHOUT_CLASSIFICATION	2.7740234484975707E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999512095648	WITHOUT_CLASSIFICATION	4.8790435287225384E-8	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9991451667386478	WITHOUT_CLASSIFICATION	8.54833261352294E-4	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9991451667386478	WITHOUT_CLASSIFICATION	8.54833261352294E-4	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999255101010759	WITHOUT_CLASSIFICATION	7.448989892411692E-5	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999997750401368	WITHOUT_CLASSIFICATION	2.2495986327779785E-7	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999999990709306	WITHOUT_CLASSIFICATION	9.290694076070216E-9	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999999542711275	WITHOUT_CLASSIFICATION	4.572887237002204E-8	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999475433586443	WITHOUT_CLASSIFICATION	5.245664135572726E-5	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9997693326037113	WITHOUT_CLASSIFICATION	2.3066739628861422E-4	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999987391663567	WITHOUT_CLASSIFICATION	1.260833643294508E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9996430902087221	WITHOUT_CLASSIFICATION	3.569097912779442E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9996430902087221	WITHOUT_CLASSIFICATION	3.569097912779442E-4	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999512095648	WITHOUT_CLASSIFICATION	4.8790435287225384E-8	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999255101010759	WITHOUT_CLASSIFICATION	7.448989892411692E-5	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999997690091078	WITHOUT_CLASSIFICATION	2.3099089221094033E-6	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999997750401368	WITHOUT_CLASSIFICATION	2.2495986327779785E-7	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999999990709306	WITHOUT_CLASSIFICATION	9.290694076070216E-9	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9985905134440722	WITHOUT_CLASSIFICATION	0.001409486555927773	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999931051275461	WITHOUT_CLASSIFICATION	6.894872453970921E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999474592351789	WITHOUT_CLASSIFICATION	5.2540764821099385E-5	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9992402377255135	WITHOUT_CLASSIFICATION	7.597622744864428E-4	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999845696558546	WITHOUT_CLASSIFICATION	1.5430344145485733E-5	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999296872002271	WITHOUT_CLASSIFICATION	7.031279977288849E-5	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9978565996578039	WITHOUT_CLASSIFICATION	0.0021434003421959974	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9985905134440722	WITHOUT_CLASSIFICATION	0.001409486555927773	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999998376328193	WITHOUT_CLASSIFICATION	1.623671808327785E-7	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999998376328193	WITHOUT_CLASSIFICATION	1.623671808327785E-7	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999800224328547	WITHOUT_CLASSIFICATION	1.9977567145314506E-5	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999788143372345	WITHOUT_CLASSIFICATION	2.1185662765564884E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9997755180709811	WITHOUT_CLASSIFICATION	2.244819290189986E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9996620765425283	WITHOUT_CLASSIFICATION	3.3792345747167785E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999995990676629	WITHOUT_CLASSIFICATION	4.0093233713728687E-7	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999940157719787	WITHOUT_CLASSIFICATION	5.984228021430381E-6	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999740515010025	WITHOUT_CLASSIFICATION	2.5948498997483405E-5	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999807317664141	WITHOUT_CLASSIFICATION	1.9268233585869017E-5	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9856704126813233	WITHOUT_CLASSIFICATION	0.01432958731867667	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999992134976188	WITHOUT_CLASSIFICATION	7.865023812811119E-7	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999814798396202	WITHOUT_CLASSIFICATION	1.852016037985191E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9996620765425283	WITHOUT_CLASSIFICATION	3.3792345747167785E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999995990676629	WITHOUT_CLASSIFICATION	4.0093233713728687E-7	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.999989241770605	WITHOUT_CLASSIFICATION	1.0758229395070555E-5	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.999999189956705	WITHOUT_CLASSIFICATION	8.100432949011674E-7	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9994229127220745	WITHOUT_CLASSIFICATION	5.77087277925564E-4	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999915897612087	WITHOUT_CLASSIFICATION	8.410238791281474E-6	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999997285163283	WITHOUT_CLASSIFICATION	2.7148367167414375E-7	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999948315643051	WITHOUT_CLASSIFICATION	5.1684356948656935E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9997175060588053	WITHOUT_CLASSIFICATION	2.82493941194709E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999991982735055	WITHOUT_CLASSIFICATION	8.017264946601613E-7	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999998840647931	WITHOUT_CLASSIFICATION	1.1593520689513991E-7	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999936640541329	WITHOUT_CLASSIFICATION	6.335945867087521E-6	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999946373025485	WITHOUT_CLASSIFICATION	5.362697451467649E-6	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9999151791502138	WITHOUT_CLASSIFICATION	8.482084978626855E-5	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999982393616709	WITHOUT_CLASSIFICATION	1.7606383291618878E-6	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999597329511439	WITHOUT_CLASSIFICATION	4.0267048856072805E-5	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9927840521583687	DESIGN	0.0072159478416311575	WITHOUT_CLASSIFICATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999998778722615	WITHOUT_CLASSIFICATION	1.221277385767148E-7	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999879632244241	WITHOUT_CLASSIFICATION	1.2036775575892022E-5	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9999997295747154	WITHOUT_CLASSIFICATION	2.7042528457299424E-7	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999697134482465	WITHOUT_CLASSIFICATION	3.0286551753455497E-5	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999900331546887	WITHOUT_CLASSIFICATION	9.966845311189516E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999879632244241	WITHOUT_CLASSIFICATION	1.2036775575892022E-5	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9999997295747154	WITHOUT_CLASSIFICATION	2.7042528457299424E-7	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999697134482465	WITHOUT_CLASSIFICATION	3.0286551753455497E-5	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999999278127847	WITHOUT_CLASSIFICATION	7.218721524700203E-8	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9994975936281746	WITHOUT_CLASSIFICATION	5.024063718254729E-4	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999655320718411	WITHOUT_CLASSIFICATION	3.446792815884799E-5	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999772225047603	WITHOUT_CLASSIFICATION	2.277749523978837E-5	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999978632314596	WITHOUT_CLASSIFICATION	2.1367685403969614E-6	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999821939532292	WITHOUT_CLASSIFICATION	1.7806046770838205E-5	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999510442989067	WITHOUT_CLASSIFICATION	4.895570109337975E-5	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9977090431860965	WITHOUT_CLASSIFICATION	0.0022909568139034813	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9999992678529562	WITHOUT_CLASSIFICATION	7.32147043813941E-7	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.999998936078402	WITHOUT_CLASSIFICATION	1.0639215980924815E-6	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.6045377697706853	WITHOUT_CLASSIFICATION	0.3954622302293147	DESIGN
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999978963182914	WITHOUT_CLASSIFICATION	2.1036817085878294E-6	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.999998061827959	WITHOUT_CLASSIFICATION	1.938172040925045E-6	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999982244176885	WITHOUT_CLASSIFICATION	1.7755823114906964E-6	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999955417264897	WITHOUT_CLASSIFICATION	4.458273510254559E-6	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999339030358059	WITHOUT_CLASSIFICATION	6.609696419413247E-5	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.999994382758455	WITHOUT_CLASSIFICATION	5.617241545045316E-6	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999965043418582	WITHOUT_CLASSIFICATION	3.495658141825017E-6	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999991070674444	WITHOUT_CLASSIFICATION	8.929325556568185E-7	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999999738151269	WITHOUT_CLASSIFICATION	2.6184873099333023E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999993927504651	WITHOUT_CLASSIFICATION	6.072495349605384E-7	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999993966944032	WITHOUT_CLASSIFICATION	6.033055967996316E-7	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999993966944032	WITHOUT_CLASSIFICATION	6.033055967996316E-7	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999399324911816	WITHOUT_CLASSIFICATION	6.006750881827341E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999399324911816	WITHOUT_CLASSIFICATION	6.006750881827341E-5	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999846623217717	WITHOUT_CLASSIFICATION	1.533767822828212E-5	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999846623217717	WITHOUT_CLASSIFICATION	1.533767822828212E-5	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999562104932435	WITHOUT_CLASSIFICATION	4.378950675668531E-5	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999756880056611	WITHOUT_CLASSIFICATION	2.4311994338863537E-5	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999037983841063	WITHOUT_CLASSIFICATION	9.620161589372606E-5	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999997482879924	WITHOUT_CLASSIFICATION	2.5171200751897883E-7	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999939773282	WITHOUT_CLASSIFICATION	6.022671770393456E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999535846636	WITHOUT_CLASSIFICATION	4.641533640069463E-8	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999996421436369	WITHOUT_CLASSIFICATION	3.5785636307481206E-7	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.999999720466012	WITHOUT_CLASSIFICATION	2.795339878539778E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9996430902087221	WITHOUT_CLASSIFICATION	3.569097912779442E-4	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999562104932435	WITHOUT_CLASSIFICATION	4.378950675668531E-5	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999756880056611	WITHOUT_CLASSIFICATION	2.4311994338863537E-5	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999037983841063	WITHOUT_CLASSIFICATION	9.620161589372606E-5	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999939773282	WITHOUT_CLASSIFICATION	6.022671770393456E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999535846636	WITHOUT_CLASSIFICATION	4.641533640069463E-8	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999999816942653	WITHOUT_CLASSIFICATION	1.83057346505541E-8	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.999999997666555	WITHOUT_CLASSIFICATION	2.3334449508483065E-9	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995617810520712	WITHOUT_CLASSIFICATION	4.38218947928877E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9995617810520712	WITHOUT_CLASSIFICATION	4.38218947928877E-4	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9995572174535181	WITHOUT_CLASSIFICATION	4.427825464819685E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9971918682300379	WITHOUT_CLASSIFICATION	0.0028081317699621094	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998022246484033	WITHOUT_CLASSIFICATION	1.9777535159662158E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9987968060089449	WITHOUT_CLASSIFICATION	0.0012031939910551541	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9987968060089449	WITHOUT_CLASSIFICATION	0.0012031939910551541	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9997485870834004	WITHOUT_CLASSIFICATION	2.5141291659959203E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9996932461500281	WITHOUT_CLASSIFICATION	3.067538499718273E-4	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9992358343343766	WITHOUT_CLASSIFICATION	7.64165665623447E-4	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999745811037142	WITHOUT_CLASSIFICATION	2.541889628583929E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999059144385456	WITHOUT_CLASSIFICATION	9.408556145441583E-5	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9835147063344224	WITHOUT_CLASSIFICATION	0.0164852936655776	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999011018291724	WITHOUT_CLASSIFICATION	9.889817082758268E-5	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999986249357132	WITHOUT_CLASSIFICATION	1.3750642867362294E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9971850752531135	WITHOUT_CLASSIFICATION	0.0028149247468864822	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998473083509857	WITHOUT_CLASSIFICATION	1.5269164901441192E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.992769653729625	WITHOUT_CLASSIFICATION	0.007230346270375089	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9997485870834004	WITHOUT_CLASSIFICATION	2.5141291659959203E-4	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9996932461500281	WITHOUT_CLASSIFICATION	3.067538499718273E-4	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999745811037142	WITHOUT_CLASSIFICATION	2.541889628583929E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999973486891901	WITHOUT_CLASSIFICATION	2.6513108099237416E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998022246484033	WITHOUT_CLASSIFICATION	1.9777535159662158E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998022246484033	WITHOUT_CLASSIFICATION	1.9777535159662158E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999814798396202	WITHOUT_CLASSIFICATION	1.852016037985191E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999814798396202	WITHOUT_CLASSIFICATION	1.852016037985191E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9944363443688027	WITHOUT_CLASSIFICATION	0.005563655631197335	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9944363443688027	WITHOUT_CLASSIFICATION	0.005563655631197335	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9992299852237496	WITHOUT_CLASSIFICATION	7.700147762504375E-4	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9998909708341088	WITHOUT_CLASSIFICATION	1.0902916589123665E-4	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9991640539467491	WITHOUT_CLASSIFICATION	8.359460532508333E-4	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999658892409247	WITHOUT_CLASSIFICATION	3.4110759075325366E-5	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9893542569440245	WITHOUT_CLASSIFICATION	0.01064574305597552	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9991399408322326	WITHOUT_CLASSIFICATION	8.600591677674676E-4	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999895236002641	WITHOUT_CLASSIFICATION	1.0476399735899268E-4	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.999852741341548	WITHOUT_CLASSIFICATION	1.472586584520179E-4	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.999999247448043	WITHOUT_CLASSIFICATION	7.525519568922359E-7	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999092383500485	WITHOUT_CLASSIFICATION	9.076164995137601E-5	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999576078330947	WITHOUT_CLASSIFICATION	4.239216690522768E-5	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999998630490947	WITHOUT_CLASSIFICATION	1.3695090530668407E-7	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999806335251014	WITHOUT_CLASSIFICATION	1.9366474898599494E-5	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999921272479338	WITHOUT_CLASSIFICATION	7.872752066252055E-6	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999979171343159	WITHOUT_CLASSIFICATION	2.08286568419114E-6	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999902038952854	WITHOUT_CLASSIFICATION	9.796104714640454E-6	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999467314905556	WITHOUT_CLASSIFICATION	5.326850944446364E-5	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999995984429277	WITHOUT_CLASSIFICATION	4.0155707233946844E-7	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9994404626100463	WITHOUT_CLASSIFICATION	5.595373899536795E-4	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999011018291724	WITHOUT_CLASSIFICATION	9.889817082758268E-5	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9971850752531135	WITHOUT_CLASSIFICATION	0.0028149247468864822	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9980979805006046	WITHOUT_CLASSIFICATION	0.0019020194993954619	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999987295944667	WITHOUT_CLASSIFICATION	1.2704055333672102E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999987295944667	WITHOUT_CLASSIFICATION	1.2704055333672102E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999973486891901	WITHOUT_CLASSIFICATION	2.6513108099237416E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998022246484033	WITHOUT_CLASSIFICATION	1.9777535159662158E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999814798396202	WITHOUT_CLASSIFICATION	1.852016037985191E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9944363443688027	WITHOUT_CLASSIFICATION	0.005563655631197335	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9980995681710615	WITHOUT_CLASSIFICATION	0.0019004318289384517	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9607198904996408	WITHOUT_CLASSIFICATION	0.039280109500359185	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999975921600662	WITHOUT_CLASSIFICATION	2.4078399336692322E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9988621059199065	WITHOUT_CLASSIFICATION	0.0011378940800934492	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999984190899043	WITHOUT_CLASSIFICATION	1.5809100956710469E-6	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999984190899043	WITHOUT_CLASSIFICATION	1.5809100956710469E-6	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9998879644851033	WITHOUT_CLASSIFICATION	1.1203551489669484E-4	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999695172028	WITHOUT_CLASSIFICATION	3.0482797184892146E-8	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999537360218	WITHOUT_CLASSIFICATION	4.6263978150838035E-8	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.999999883978824	WITHOUT_CLASSIFICATION	1.1602117605493293E-7	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999965820461435	WITHOUT_CLASSIFICATION	3.41795385648681E-6	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999965820461435	WITHOUT_CLASSIFICATION	3.41795385648681E-6	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999948189636808	WITHOUT_CLASSIFICATION	5.181036319275036E-6	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999978287937835	WITHOUT_CLASSIFICATION	2.171206216478888E-6	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999918651473791	WITHOUT_CLASSIFICATION	8.134852620908751E-6	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9926126098167517	WITHOUT_CLASSIFICATION	0.007387390183248297	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999994108304485	WITHOUT_CLASSIFICATION	5.891695514791283E-7	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9998952016685075	WITHOUT_CLASSIFICATION	1.0479833149255612E-4	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999961431642941	WITHOUT_CLASSIFICATION	3.856835705863214E-6	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999998159113468	WITHOUT_CLASSIFICATION	1.8408865316689195E-7	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.998653971962893	WITHOUT_CLASSIFICATION	0.0013460280371070223	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9904981827307977	WITHOUT_CLASSIFICATION	0.009501817269202215	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9952936262806849	DESIGN	0.004706373719315144	WITHOUT_CLASSIFICATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.999657753691357	WITHOUT_CLASSIFICATION	3.4224630864302275E-4	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9880753926467766	WITHOUT_CLASSIFICATION	0.011924607353223496	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9989519751517898	WITHOUT_CLASSIFICATION	0.0010480248482101523	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9992741951251677	WITHOUT_CLASSIFICATION	7.258048748323789E-4	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999963816137515	WITHOUT_CLASSIFICATION	3.618386248469251E-6	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999412612281685	WITHOUT_CLASSIFICATION	5.8738771831584653E-5	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999052998720147	WITHOUT_CLASSIFICATION	9.470012798532191E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999005511766493	WITHOUT_CLASSIFICATION	9.944882335077344E-5	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999984099126135	WITHOUT_CLASSIFICATION	1.590087386524903E-6	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999334235323062	WITHOUT_CLASSIFICATION	6.65764676937972E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999983616497939	WITHOUT_CLASSIFICATION	1.6383502060503056E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999983616497939	WITHOUT_CLASSIFICATION	1.6383502060503056E-6	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9982559897519606	WITHOUT_CLASSIFICATION	0.0017440102480393539	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999995953198964	WITHOUT_CLASSIFICATION	4.046801035896955E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999760180536684	WITHOUT_CLASSIFICATION	2.398194633158289E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999760180536684	WITHOUT_CLASSIFICATION	2.398194633158289E-5	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9953319152882039	WITHOUT_CLASSIFICATION	0.0046680847117960885	DESIGN
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999931482834851	WITHOUT_CLASSIFICATION	6.851716514947519E-6	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999912880377525	WITHOUT_CLASSIFICATION	8.7119622475911E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999998013373586	WITHOUT_CLASSIFICATION	1.9866264149184117E-7	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999998013373586	WITHOUT_CLASSIFICATION	1.9866264149184117E-7	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9992081278173442	WITHOUT_CLASSIFICATION	7.918721826558191E-4	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999698585887	WITHOUT_CLASSIFICATION	3.0141411354711326E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999549042549426	WITHOUT_CLASSIFICATION	4.509574505746817E-5	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999838230116452	WITHOUT_CLASSIFICATION	1.6176988354758952E-5	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9996914687644188	WITHOUT_CLASSIFICATION	3.085312355812273E-4	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999999279530796	WITHOUT_CLASSIFICATION	7.204692043060784E-8	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999962782513913	WITHOUT_CLASSIFICATION	3.7217486087623936E-6	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9992763568577753	WITHOUT_CLASSIFICATION	7.236431422247101E-4	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999956737535559	WITHOUT_CLASSIFICATION	4.32624644407562E-6	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.998645725643899	WITHOUT_CLASSIFICATION	0.001354274356100972	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999992344308695	WITHOUT_CLASSIFICATION	7.655691304808403E-7	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999992236807547	WITHOUT_CLASSIFICATION	7.763192453117643E-7	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999999311753915	WITHOUT_CLASSIFICATION	6.882460838111157E-8	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999059888586307	WITHOUT_CLASSIFICATION	9.401114136937812E-5	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9989057550099101	WITHOUT_CLASSIFICATION	0.001094244990089868	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999277396448742	WITHOUT_CLASSIFICATION	7.226035512568949E-5	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999990778948207	WITHOUT_CLASSIFICATION	9.221051792549174E-7	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999985297681742	WITHOUT_CLASSIFICATION	1.4702318259382125E-6	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999908632962481	WITHOUT_CLASSIFICATION	9.136703751927495E-6	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999587066920332	WITHOUT_CLASSIFICATION	4.129330796683292E-5	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999872246730632	WITHOUT_CLASSIFICATION	1.2775326936833197E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999954503766337	WITHOUT_CLASSIFICATION	4.549623366265751E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999984686463051	WITHOUT_CLASSIFICATION	1.5313536947899086E-6	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9995732672236121	WITHOUT_CLASSIFICATION	4.267327763880555E-4	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.999999875358757	WITHOUT_CLASSIFICATION	1.246412429966901E-7	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999807674980371	WITHOUT_CLASSIFICATION	1.923250196292259E-5	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9989593706473616	WITHOUT_CLASSIFICATION	0.001040629352638463	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999967678714523	WITHOUT_CLASSIFICATION	3.2321285476830133E-6	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999982379583323	WITHOUT_CLASSIFICATION	1.7620416676313905E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999999709420559	WITHOUT_CLASSIFICATION	2.905794408740625E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999478378641065	WITHOUT_CLASSIFICATION	5.216213589353649E-5	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999059888586307	WITHOUT_CLASSIFICATION	9.401114136937812E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999967678714523	WITHOUT_CLASSIFICATION	3.2321285476830133E-6	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999982379583323	WITHOUT_CLASSIFICATION	1.7620416676313905E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999478378641065	WITHOUT_CLASSIFICATION	5.216213589353649E-5	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999736450771967	WITHOUT_CLASSIFICATION	2.6354922803342965E-5	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999997273157466	WITHOUT_CLASSIFICATION	2.726842533587582E-7	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999996490133042	WITHOUT_CLASSIFICATION	3.5098669578799843E-7	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999948706438	WITHOUT_CLASSIFICATION	5.129356161800373E-9	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999914987354	WITHOUT_CLASSIFICATION	8.501264552987712E-9	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9963420659253049	WITHOUT_CLASSIFICATION	0.003657934074695064	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999984687008536	WITHOUT_CLASSIFICATION	1.5312991463198298E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999997795160771	WITHOUT_CLASSIFICATION	2.2048392280348472E-7	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999990240820664	WITHOUT_CLASSIFICATION	9.759179335284456E-7	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9628158439041452	WITHOUT_CLASSIFICATION	0.03718415609585486	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999998748256029	WITHOUT_CLASSIFICATION	1.2517439698125827E-7	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999998748256029	WITHOUT_CLASSIFICATION	1.2517439698125827E-7	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999502399430489	WITHOUT_CLASSIFICATION	4.976005695119064E-5	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999832177203647	WITHOUT_CLASSIFICATION	1.678227963528124E-5	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999994817143192	WITHOUT_CLASSIFICATION	5.18285680918002E-7	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999983042763171	WITHOUT_CLASSIFICATION	1.6957236828750554E-6	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999370212870937	WITHOUT_CLASSIFICATION	6.297871290633354E-5	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998843942239087	WITHOUT_CLASSIFICATION	1.1560577609124464E-4	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.999999322117951	WITHOUT_CLASSIFICATION	6.778820489824592E-7	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.8087715386786449	WITHOUT_CLASSIFICATION	0.1912284613213551	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999989822953609	WITHOUT_CLASSIFICATION	1.0177046390155308E-6	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.5566051359564347	DESIGN	0.4433948640435652	WITHOUT_CLASSIFICATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.999975426440778	WITHOUT_CLASSIFICATION	2.457355922202293E-5	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.5188630559564855	DESIGN	0.4811369440435144	WITHOUT_CLASSIFICATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999994186410578	WITHOUT_CLASSIFICATION	5.8135894220545E-7	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9998619188186425	WITHOUT_CLASSIFICATION	1.3808118135745411E-4	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.999999271750784	WITHOUT_CLASSIFICATION	7.282492161169186E-7	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999285932743284	WITHOUT_CLASSIFICATION	7.140672567156494E-5	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999987887113067	WITHOUT_CLASSIFICATION	1.2112886933631676E-6	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999963978814042	WITHOUT_CLASSIFICATION	3.602118595820783E-6	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9999840891922795	WITHOUT_CLASSIFICATION	1.5910807720372895E-5	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999996116639729	WITHOUT_CLASSIFICATION	3.883360271271357E-7	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999987875269051	WITHOUT_CLASSIFICATION	1.2124730948975486E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999992189596163	WITHOUT_CLASSIFICATION	7.810403837023225E-7	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999996871257475	WITHOUT_CLASSIFICATION	3.1287425252061704E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999963410256516	WITHOUT_CLASSIFICATION	3.658974348484036E-6	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999976928990405	WITHOUT_CLASSIFICATION	2.3071009595796552E-6	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.999999841539651	WITHOUT_CLASSIFICATION	1.5846034901338725E-7	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9990757059776075	WITHOUT_CLASSIFICATION	9.242940223925036E-4	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9916334238248559	WITHOUT_CLASSIFICATION	0.008366576175144172	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9999992144268975	WITHOUT_CLASSIFICATION	7.855731024574298E-7	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999189429337	WITHOUT_CLASSIFICATION	8.10570662984393E-8	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999990576742342	WITHOUT_CLASSIFICATION	9.423257656292144E-7	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999997051372416	WITHOUT_CLASSIFICATION	2.948627584428725E-7	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999931768105996	WITHOUT_CLASSIFICATION	6.823189400329023E-6	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9920183373563435	WITHOUT_CLASSIFICATION	0.007981662643656615	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9998922335840205	WITHOUT_CLASSIFICATION	1.0776641597951555E-4	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.999023572945424	WITHOUT_CLASSIFICATION	9.76427054575996E-4	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9998075738053173	WITHOUT_CLASSIFICATION	1.9242619468283915E-4	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9994794033796802	WITHOUT_CLASSIFICATION	5.205966203197637E-4	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9992217463918918	WITHOUT_CLASSIFICATION	7.782536081082529E-4	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9857933656906606	WITHOUT_CLASSIFICATION	0.014206634309339487	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9992610214520203	WITHOUT_CLASSIFICATION	7.389785479796712E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9994497772406591	WITHOUT_CLASSIFICATION	5.502227593409983E-4	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9999981192893084	WITHOUT_CLASSIFICATION	1.8807106915454858E-6	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999560415056855	WITHOUT_CLASSIFICATION	4.395849431458033E-5	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999766750604163	WITHOUT_CLASSIFICATION	2.3324939583636713E-5	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999591363135065	WITHOUT_CLASSIFICATION	4.0863686493345804E-5	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9452107648101236	WITHOUT_CLASSIFICATION	0.05478923518987648	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999367423526059	WITHOUT_CLASSIFICATION	6.325764739410077E-5	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.997154860172065	WITHOUT_CLASSIFICATION	0.0028451398279350348	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9998749002040311	WITHOUT_CLASSIFICATION	1.2509979596878694E-4	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9994766435132033	WITHOUT_CLASSIFICATION	5.233564867966623E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9987711322119494	WITHOUT_CLASSIFICATION	0.0012288677880506315	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9987186276152833	WITHOUT_CLASSIFICATION	0.0012813723847167604	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999941484257165	WITHOUT_CLASSIFICATION	5.85157428342835E-6	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9996447943651837	WITHOUT_CLASSIFICATION	3.5520563481616533E-4	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999156132689841	WITHOUT_CLASSIFICATION	8.438673101585119E-5	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9996502498754856	WITHOUT_CLASSIFICATION	3.4975012451449915E-4	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999830575254385	WITHOUT_CLASSIFICATION	1.6942474561495443E-4	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9532439873031534	WITHOUT_CLASSIFICATION	0.04675601269684647	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.996999235451629	WITHOUT_CLASSIFICATION	0.0030007645483708756	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.996999235451629	WITHOUT_CLASSIFICATION	0.0030007645483708756	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999552813920062	WITHOUT_CLASSIFICATION	4.4718607993748556E-5	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9997246448574838	WITHOUT_CLASSIFICATION	2.753551425161791E-4	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999832067472175	WITHOUT_CLASSIFICATION	1.679325278243905E-5	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999385399235706	WITHOUT_CLASSIFICATION	6.146007642940112E-5	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999970033700983	WITHOUT_CLASSIFICATION	2.9966299017401147E-6	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9997244298733116	WITHOUT_CLASSIFICATION	2.7557012668843935E-4	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999824769763488	WITHOUT_CLASSIFICATION	1.7523023651277353E-5	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9995071677605789	WITHOUT_CLASSIFICATION	4.928322394210897E-4	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999993908926788	WITHOUT_CLASSIFICATION	6.091073211736099E-7	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999955753929674	WITHOUT_CLASSIFICATION	4.424607032701856E-6	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9997582116284304	WITHOUT_CLASSIFICATION	2.4178837156967954E-4	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999965147403161	WITHOUT_CLASSIFICATION	3.4852596838302074E-6	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999998697836557	WITHOUT_CLASSIFICATION	1.3021634422528248E-7	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9925285057814132	WITHOUT_CLASSIFICATION	0.007471494218586797	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999596477735038	WITHOUT_CLASSIFICATION	4.035222649630695E-5	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999974814309548	WITHOUT_CLASSIFICATION	2.518569045199286E-6	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999993076866993	WITHOUT_CLASSIFICATION	6.923133005765815E-7	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999568025868065	WITHOUT_CLASSIFICATION	4.319741319351072E-5	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999975406573782	WITHOUT_CLASSIFICATION	2.4593426216955426E-6	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999981940689455	WITHOUT_CLASSIFICATION	1.8059310545130387E-6	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999902815677641	WITHOUT_CLASSIFICATION	9.718432235872515E-6	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9995878578036069	WITHOUT_CLASSIFICATION	4.121421963931542E-4	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9981453973467207	WITHOUT_CLASSIFICATION	0.001854602653279212	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9996021583872765	WITHOUT_CLASSIFICATION	3.978416127235019E-4	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9998196414721277	WITHOUT_CLASSIFICATION	1.8035852787229957E-4	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9996316210037982	WITHOUT_CLASSIFICATION	3.683789962017368E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9998619908955599	WITHOUT_CLASSIFICATION	1.380091044400572E-4	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9996883553482075	WITHOUT_CLASSIFICATION	3.1164465179245375E-4	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.999920883983235	WITHOUT_CLASSIFICATION	7.911601676496216E-5	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9990484111213348	WITHOUT_CLASSIFICATION	9.515888786650585E-4	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.999706661328545	WITHOUT_CLASSIFICATION	2.9333867145504036E-4	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999999500908288	WITHOUT_CLASSIFICATION	4.990917117352656E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9977592505436701	WITHOUT_CLASSIFICATION	0.002240749456329875	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999632640854196	WITHOUT_CLASSIFICATION	3.67359145803732E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9977592505436701	WITHOUT_CLASSIFICATION	0.002240749456329875	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999482579692871	WITHOUT_CLASSIFICATION	5.174203071283267E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999912238296869	WITHOUT_CLASSIFICATION	8.776170313056601E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999912238296869	WITHOUT_CLASSIFICATION	8.776170313056601E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999912238296869	WITHOUT_CLASSIFICATION	8.776170313056601E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999932418285762	WITHOUT_CLASSIFICATION	6.7581714238314706E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999932418285762	WITHOUT_CLASSIFICATION	6.7581714238314706E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999998202683608	WITHOUT_CLASSIFICATION	1.797316393403295E-7	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9961356905230558	WITHOUT_CLASSIFICATION	0.003864309476944191	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999936655456	WITHOUT_CLASSIFICATION	6.334454386696812E-9	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.999927328593454	WITHOUT_CLASSIFICATION	7.267140654599248E-5	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999998530393268	WITHOUT_CLASSIFICATION	1.4696067315765006E-7	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9990186391565082	WITHOUT_CLASSIFICATION	9.813608434917933E-4	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9996773391485579	WITHOUT_CLASSIFICATION	3.226608514420283E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999999290191876	WITHOUT_CLASSIFICATION	7.098081244416548E-8	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9611983038349319	WITHOUT_CLASSIFICATION	0.038801696165068136	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999855692956675	WITHOUT_CLASSIFICATION	1.4430704332354456E-5	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999998909203702	WITHOUT_CLASSIFICATION	1.0907962981413981E-7	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999986106605001	WITHOUT_CLASSIFICATION	1.3893394998746257E-6	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.999914855518755	WITHOUT_CLASSIFICATION	8.514448124499258E-5	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999970526746166	WITHOUT_CLASSIFICATION	2.947325383372288E-6	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.999998479580543	WITHOUT_CLASSIFICATION	1.52041945702394E-6	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999999009908173	WITHOUT_CLASSIFICATION	9.900918271623045E-8	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999566157901	WITHOUT_CLASSIFICATION	4.338420983371855E-8	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.999990189072537	WITHOUT_CLASSIFICATION	9.81092746304982E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.999990189072537	WITHOUT_CLASSIFICATION	9.81092746304982E-6	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999964432352776	WITHOUT_CLASSIFICATION	3.5567647223765317E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999990345564436	WITHOUT_CLASSIFICATION	9.654435564689407E-7	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999990345564436	WITHOUT_CLASSIFICATION	9.654435564689407E-7	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999887242116473	WITHOUT_CLASSIFICATION	1.127578835276798E-5	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999996251727611	WITHOUT_CLASSIFICATION	3.7482723885329995E-7	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999973545340893	WITHOUT_CLASSIFICATION	2.645465910576961E-6	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.999997381314559	WITHOUT_CLASSIFICATION	2.618685441077736E-6	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999996783600512	WITHOUT_CLASSIFICATION	3.2163994880174245E-7	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.999985722093594	WITHOUT_CLASSIFICATION	1.4277906405922541E-5	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999997034152921	WITHOUT_CLASSIFICATION	2.965847079312655E-7	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9803418267863651	WITHOUT_CLASSIFICATION	0.0196581732136349	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999831474014	WITHOUT_CLASSIFICATION	1.685259863756956E-8	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999964705505058	WITHOUT_CLASSIFICATION	3.529449494199248E-6	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999995042117749	WITHOUT_CLASSIFICATION	4.95788225175662E-7	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999971945570738	WITHOUT_CLASSIFICATION	2.8054429261203955E-6	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999997849625691	WITHOUT_CLASSIFICATION	2.1503743081264367E-7	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999987722079771	WITHOUT_CLASSIFICATION	1.2277920228857128E-5	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999999290191876	WITHOUT_CLASSIFICATION	7.098081244416548E-8	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999890533436016	WITHOUT_CLASSIFICATION	1.09466563984105E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999846096042	WITHOUT_CLASSIFICATION	1.5390395807989755E-8	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999981392860874	WITHOUT_CLASSIFICATION	1.8607139125707578E-6	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999981392860874	WITHOUT_CLASSIFICATION	1.8607139125707578E-6	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999979915177324	WITHOUT_CLASSIFICATION	2.0084822676334426E-6	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9998261133711847	WITHOUT_CLASSIFICATION	1.7388662881542995E-4	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.999995970815822	WITHOUT_CLASSIFICATION	4.029184178054014E-6	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999996827068711	WITHOUT_CLASSIFICATION	3.1729312897262154E-7	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.999995930981971	WITHOUT_CLASSIFICATION	4.069018028938121E-6	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999334299009358	WITHOUT_CLASSIFICATION	6.657009906411472E-5	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999991437976575	WITHOUT_CLASSIFICATION	8.56202342400357E-7	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999999091927409	WITHOUT_CLASSIFICATION	9.080725910779669E-7	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999745978495673	WITHOUT_CLASSIFICATION	2.5402150432690727E-5	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999989150648286	WITHOUT_CLASSIFICATION	1.0849351714170733E-6	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999988703459419	WITHOUT_CLASSIFICATION	1.129654057998901E-6	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999984563932354	WITHOUT_CLASSIFICATION	1.5436067646401273E-6	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.999911160148634	WITHOUT_CLASSIFICATION	8.883985136594745E-5	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9997403706186797	WITHOUT_CLASSIFICATION	2.5962938132036064E-4	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999995347842595	WITHOUT_CLASSIFICATION	4.6521574045936686E-7	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999968617178858	WITHOUT_CLASSIFICATION	3.138282114243192E-6	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999994369961145	WITHOUT_CLASSIFICATION	5.630038854145424E-7	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999920395856896	WITHOUT_CLASSIFICATION	7.960414310482887E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999999738391531	WITHOUT_CLASSIFICATION	2.6160846914164033E-8	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999382588789977	WITHOUT_CLASSIFICATION	6.174112100233698E-5	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999991776039501	WITHOUT_CLASSIFICATION	8.223960499714616E-7	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999508157249228	WITHOUT_CLASSIFICATION	4.918427507729015E-5	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999993954054697	WITHOUT_CLASSIFICATION	6.045945303994421E-7	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999990079457	WITHOUT_CLASSIFICATION	9.920543210770511E-10	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999949038152974	WITHOUT_CLASSIFICATION	5.0961847026121535E-6	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999949559232482	WITHOUT_CLASSIFICATION	5.044076751896944E-6	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999844804495024	WITHOUT_CLASSIFICATION	1.5519550497519028E-5	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9984184179272844	WITHOUT_CLASSIFICATION	0.0015815820727155536	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999447153126213	WITHOUT_CLASSIFICATION	5.5284687378648665E-5	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999947405958842	WITHOUT_CLASSIFICATION	5.259404115870548E-6	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9996116973234825	WITHOUT_CLASSIFICATION	3.883026765175345E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999429031541055	WITHOUT_CLASSIFICATION	5.7096845894481105E-5	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999980647345659	WITHOUT_CLASSIFICATION	1.9352654341303043E-6	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999190095653491	WITHOUT_CLASSIFICATION	8.099043465096844E-5	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999948564849953	WITHOUT_CLASSIFICATION	5.143515004705015E-6	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999987782198906	WITHOUT_CLASSIFICATION	1.2217801094159976E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9984184179272844	WITHOUT_CLASSIFICATION	0.0015815820727155536	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.999916476028719	WITHOUT_CLASSIFICATION	8.3523971280979E-5	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999948564849953	WITHOUT_CLASSIFICATION	5.143515004705015E-6	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9984042819528925	WITHOUT_CLASSIFICATION	0.0015957180471073476	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999997794603653	WITHOUT_CLASSIFICATION	2.2053963472889598E-7	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999903908758234	WITHOUT_CLASSIFICATION	9.609124176539862E-6	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999986133311813	WITHOUT_CLASSIFICATION	1.3866688186441412E-6	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999997266376863	WITHOUT_CLASSIFICATION	2.733623136047364E-7	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999953503844126	WITHOUT_CLASSIFICATION	4.6496155874742066E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999953503844126	WITHOUT_CLASSIFICATION	4.6496155874742066E-6	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999940054132711	WITHOUT_CLASSIFICATION	5.9945867288913975E-6	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999994999027867	WITHOUT_CLASSIFICATION	5.000972132246004E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999920093346095	WITHOUT_CLASSIFICATION	7.990665390450083E-6	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999920093346095	WITHOUT_CLASSIFICATION	7.990665390450083E-6	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9951554257341543	WITHOUT_CLASSIFICATION	0.004844574265845657	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.999074631206521	WITHOUT_CLASSIFICATION	9.253687934790007E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.999800407459706	WITHOUT_CLASSIFICATION	1.9959254029388245E-4	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.999800407459706	WITHOUT_CLASSIFICATION	1.9959254029388245E-4	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999966510061735	WITHOUT_CLASSIFICATION	3.3489938264520495E-6	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999902517716664	WITHOUT_CLASSIFICATION	9.748228333616285E-6	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999977668360813	WITHOUT_CLASSIFICATION	2.233163918798332E-6	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999996799656493	WITHOUT_CLASSIFICATION	3.200343506265658E-7	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999245431241532	WITHOUT_CLASSIFICATION	7.545687584677041E-5	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999995353525497	WITHOUT_CLASSIFICATION	4.6464745033868457E-7	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9995513878485198	WITHOUT_CLASSIFICATION	4.486121514801313E-4	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999607318681707	WITHOUT_CLASSIFICATION	3.926813182931574E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999986066571975	WITHOUT_CLASSIFICATION	1.3933428024341272E-6	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999650296397946	WITHOUT_CLASSIFICATION	3.497036020549537E-5	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9999996944911757	WITHOUT_CLASSIFICATION	3.0550882443257423E-7	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999988892989822	WITHOUT_CLASSIFICATION	1.1107010178690287E-6	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999117636623188	WITHOUT_CLASSIFICATION	8.823633768122697E-5	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999586985722407	WITHOUT_CLASSIFICATION	4.1301427759278245E-5	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999982598464812	WITHOUT_CLASSIFICATION	1.7401535188891193E-6	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999996588720931	WITHOUT_CLASSIFICATION	3.411279068929571E-6	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999871660657647	WITHOUT_CLASSIFICATION	1.2833934235427308E-5	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999992981336298	WITHOUT_CLASSIFICATION	7.018663702374652E-7	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9994021348882414	WITHOUT_CLASSIFICATION	5.978651117586024E-4	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999856874706149	WITHOUT_CLASSIFICATION	1.4312529385130289E-5	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.999999036130554	WITHOUT_CLASSIFICATION	9.638694460007813E-7	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9996894031915782	WITHOUT_CLASSIFICATION	3.105968084218615E-4	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999713535427045	WITHOUT_CLASSIFICATION	2.8646457295445563E-5	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999976306626968	WITHOUT_CLASSIFICATION	2.3693373032479217E-6	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999976878676775	WITHOUT_CLASSIFICATION	2.3121323225463752E-6	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999996691290876	WITHOUT_CLASSIFICATION	3.308709123978431E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999826124363639	WITHOUT_CLASSIFICATION	1.738756363611926E-5	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999872591859397	WITHOUT_CLASSIFICATION	1.2740814060191137E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999994465656054	WITHOUT_CLASSIFICATION	5.534343945828811E-7	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999994465656054	WITHOUT_CLASSIFICATION	5.534343945828811E-7	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999620731225	WITHOUT_CLASSIFICATION	3.792687754434785E-8	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999997767692786	WITHOUT_CLASSIFICATION	2.232307214212906E-7	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999952798854409	WITHOUT_CLASSIFICATION	4.720114559078912E-6	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.999996880470627	WITHOUT_CLASSIFICATION	3.1195293730941457E-6	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999901250509856	WITHOUT_CLASSIFICATION	9.874949014338179E-6	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9999989162282866	WITHOUT_CLASSIFICATION	1.083771713408154E-6	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999094618556873	WITHOUT_CLASSIFICATION	9.053814431275626E-5	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987354712746	WITHOUT_CLASSIFICATION	1.264528725386208E-6	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999712044784849	WITHOUT_CLASSIFICATION	2.8795521515114867E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999994138588295	WITHOUT_CLASSIFICATION	5.861411705194869E-7	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999997772131891	WITHOUT_CLASSIFICATION	2.2278681086711583E-7	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999999961248631	WITHOUT_CLASSIFICATION	3.8751368277424455E-9	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.999969305428914	WITHOUT_CLASSIFICATION	3.069457108584943E-5	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999976466896322	WITHOUT_CLASSIFICATION	2.3533103677202567E-6	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999674462390834	WITHOUT_CLASSIFICATION	3.2553760916581254E-5	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999938648557352	WITHOUT_CLASSIFICATION	6.135144264895429E-6	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999429421588721	WITHOUT_CLASSIFICATION	5.70578411279099E-5	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999992774392432	WITHOUT_CLASSIFICATION	7.225607567955897E-7	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9999866106548957	WITHOUT_CLASSIFICATION	1.3389345104273365E-5	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999233471936168	WITHOUT_CLASSIFICATION	7.665280638317116E-5	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999879143095033	WITHOUT_CLASSIFICATION	1.2085690496619736E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999915019151387	WITHOUT_CLASSIFICATION	8.49808486123964E-6	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999808287066145	WITHOUT_CLASSIFICATION	1.917129338546611E-5	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999965281042306	WITHOUT_CLASSIFICATION	3.47189576952583E-6	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999986523710035	WITHOUT_CLASSIFICATION	1.3476289965084895E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999910269580968	WITHOUT_CLASSIFICATION	8.973041903229593E-6	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9979865546374689	WITHOUT_CLASSIFICATION	0.0020134453625312286	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999955012670719	WITHOUT_CLASSIFICATION	4.498732928055605E-6	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999978959806685	WITHOUT_CLASSIFICATION	2.104019331626199E-6	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999964760779638	WITHOUT_CLASSIFICATION	3.5239220361959223E-6	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999985857367936	WITHOUT_CLASSIFICATION	1.4142632064822312E-6	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999809239976061	WITHOUT_CLASSIFICATION	1.9076002393855352E-5	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999985481038942	WITHOUT_CLASSIFICATION	1.4518961057805167E-6	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.99999977355543	WITHOUT_CLASSIFICATION	2.264445700705104E-7	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999865673739196	WITHOUT_CLASSIFICATION	1.3432626080414987E-5	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9990660615543367	WITHOUT_CLASSIFICATION	9.339384456631336E-4	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999812237470707	WITHOUT_CLASSIFICATION	1.8776252929347206E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9996938395447201	WITHOUT_CLASSIFICATION	3.061604552798786E-4	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999997234065403	WITHOUT_CLASSIFICATION	2.765934596363701E-7	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9985639459845197	WITHOUT_CLASSIFICATION	0.0014360540154803574	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9882713346505364	WITHOUT_CLASSIFICATION	0.011728665349463646	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999996009823473	WITHOUT_CLASSIFICATION	3.9901765269053846E-7	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9989554415070436	WITHOUT_CLASSIFICATION	0.0010445584929562796	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9989554415070436	WITHOUT_CLASSIFICATION	0.0010445584929562796	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999987039839909	WITHOUT_CLASSIFICATION	1.296016009140421E-6	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999988177056313	WITHOUT_CLASSIFICATION	1.1822943687655645E-6	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.999995569114635	WITHOUT_CLASSIFICATION	4.430885364941582E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999925984999014	WITHOUT_CLASSIFICATION	7.401500098531593E-6	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999991070674444	WITHOUT_CLASSIFICATION	8.929325556568185E-7	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999999738151269	WITHOUT_CLASSIFICATION	2.6184873099333023E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999949663909503	WITHOUT_CLASSIFICATION	5.0336090497191E-6	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999895015362807	WITHOUT_CLASSIFICATION	1.0498463719207774E-5	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999980837517775	WITHOUT_CLASSIFICATION	1.9162482224532564E-6	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.999992135416326	WITHOUT_CLASSIFICATION	7.864583673906746E-6	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999796677611218	WITHOUT_CLASSIFICATION	2.0332238878197287E-5	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999983265447945	WITHOUT_CLASSIFICATION	1.6734552054821286E-6	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999997541247183	WITHOUT_CLASSIFICATION	2.458752817357697E-7	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999983811899801	WITHOUT_CLASSIFICATION	1.6188100198621702E-6	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997938727236	WITHOUT_CLASSIFICATION	2.061272762903325E-7	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999999463909515	WITHOUT_CLASSIFICATION	5.360904840988994E-8	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997588736214	WITHOUT_CLASSIFICATION	2.411263786165272E-7	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999994925013631	WITHOUT_CLASSIFICATION	5.074986368740446E-7	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999992840746303	WITHOUT_CLASSIFICATION	7.159253696825493E-7	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999989440377041	WITHOUT_CLASSIFICATION	1.055962295955479E-6	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999978114559748	WITHOUT_CLASSIFICATION	2.188544025254163E-6	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999944686871887	WITHOUT_CLASSIFICATION	5.531312811286353E-6	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999981752145973	WITHOUT_CLASSIFICATION	1.8247854027404149E-6	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.999997984179303	WITHOUT_CLASSIFICATION	2.0158206970784486E-6	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999894275452	WITHOUT_CLASSIFICATION	1.057245482712766E-8	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999543671014	WITHOUT_CLASSIFICATION	4.5632898552242807E-8	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998379821471	WITHOUT_CLASSIFICATION	1.620178529379705E-7	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999996685270964	WITHOUT_CLASSIFICATION	3.3147290366264646E-7	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9990044301159852	WITHOUT_CLASSIFICATION	9.955698840148615E-4	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.999997475930208	WITHOUT_CLASSIFICATION	2.5240697918391563E-6	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999992396705412	WITHOUT_CLASSIFICATION	7.60329458897123E-7	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9813523922020432	WITHOUT_CLASSIFICATION	0.01864760779795675	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999976588945233	WITHOUT_CLASSIFICATION	2.3411054767251117E-6	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999870355822892	WITHOUT_CLASSIFICATION	1.2964417710836835E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9996938395447201	WITHOUT_CLASSIFICATION	3.061604552798786E-4	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999011890301795	WITHOUT_CLASSIFICATION	9.881096982050516E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999724923032373	WITHOUT_CLASSIFICATION	2.750769676276375E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999724923032373	WITHOUT_CLASSIFICATION	2.750769676276375E-5	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999987617348157	WITHOUT_CLASSIFICATION	1.2382651842687438E-6	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999418164200219	WITHOUT_CLASSIFICATION	5.818357997809748E-5	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999961394884378	WITHOUT_CLASSIFICATION	3.860511562212264E-6	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9999596412513566	WITHOUT_CLASSIFICATION	4.035874864337697E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999935531050311	WITHOUT_CLASSIFICATION	6.44689496886909E-6	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999970235680984	WITHOUT_CLASSIFICATION	2.976431901612926E-6	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999912911728981	WITHOUT_CLASSIFICATION	8.708827101885572E-6	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999946973832852	WITHOUT_CLASSIFICATION	5.302616714834742E-6	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.999961474992444	WITHOUT_CLASSIFICATION	3.852500755594007E-5	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9998807853657345	WITHOUT_CLASSIFICATION	1.192146342654896E-4	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999313682689853	WITHOUT_CLASSIFICATION	6.863173101469447E-5	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999172988326495	WITHOUT_CLASSIFICATION	8.270116735054418E-5	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999991187351299	WITHOUT_CLASSIFICATION	8.812648701491988E-7	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9990427104680065	WITHOUT_CLASSIFICATION	9.572895319934575E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9962864528204285	WITHOUT_CLASSIFICATION	0.0037135471795715813	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9961856873676124	WITHOUT_CLASSIFICATION	0.0038143126323875415	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999925783326419	WITHOUT_CLASSIFICATION	7.4216673582120615E-6	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.999970969934567	WITHOUT_CLASSIFICATION	2.903006543297176E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999719176828118	WITHOUT_CLASSIFICATION	2.8082317188086658E-5	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999130980987904	WITHOUT_CLASSIFICATION	8.690190120964581E-5	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.999952963285566	WITHOUT_CLASSIFICATION	4.703671443410315E-5	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999944640892833	WITHOUT_CLASSIFICATION	5.535910716756799E-6	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999964792922637	WITHOUT_CLASSIFICATION	3.520707736276627E-6	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999876169745734	WITHOUT_CLASSIFICATION	1.2383025426607099E-5	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999982962174712	WITHOUT_CLASSIFICATION	1.703782528840958E-6	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999770942236158	WITHOUT_CLASSIFICATION	2.2905776384226797E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999772989530872	WITHOUT_CLASSIFICATION	2.2701046912835682E-5	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999992811490991	WITHOUT_CLASSIFICATION	7.188509008552867E-7	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999972816035446	WITHOUT_CLASSIFICATION	2.7183964552393237E-6	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999987265667527	WITHOUT_CLASSIFICATION	1.2734332473679841E-6	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9999998539341716	WITHOUT_CLASSIFICATION	1.4606582837326766E-7	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999995529753893	WITHOUT_CLASSIFICATION	4.4702461066967683E-7	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999988205115201	WITHOUT_CLASSIFICATION	1.1794884799192697E-6	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.999069494127557	WITHOUT_CLASSIFICATION	9.305058724431134E-4	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9980082619376646	WITHOUT_CLASSIFICATION	0.001991738062335439	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999995949499909	WITHOUT_CLASSIFICATION	4.0505000903681875E-7	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999960856093943	WITHOUT_CLASSIFICATION	3.9143906057402414E-6	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999770942236158	WITHOUT_CLASSIFICATION	2.2905776384226797E-5	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999772989530872	WITHOUT_CLASSIFICATION	2.2701046912835682E-5	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999992811490991	WITHOUT_CLASSIFICATION	7.188509008552867E-7	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9999987265667527	WITHOUT_CLASSIFICATION	1.2734332473679841E-6	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9967522532465266	WITHOUT_CLASSIFICATION	0.0032477467534734383	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999958013638586	WITHOUT_CLASSIFICATION	4.198636141387798E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999932935353708	WITHOUT_CLASSIFICATION	6.706464629157491E-6	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999967671983614	WITHOUT_CLASSIFICATION	3.2328016386289054E-6	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9999974066307638	WITHOUT_CLASSIFICATION	2.5933692362776136E-6	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999996597154627	WITHOUT_CLASSIFICATION	3.4028453730239397E-6	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999972602369386	WITHOUT_CLASSIFICATION	2.7397630613879976E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999984742763303	WITHOUT_CLASSIFICATION	1.5257236696281804E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999847759724717	WITHOUT_CLASSIFICATION	1.5224027528354679E-5	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999996923044292	WITHOUT_CLASSIFICATION	3.076955707915488E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999487604935223	WITHOUT_CLASSIFICATION	5.123950647765658E-5	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999986283035209	WITHOUT_CLASSIFICATION	1.3716964791267866E-6	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999907678463463	WITHOUT_CLASSIFICATION	9.232153653662885E-6	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999891748708678	WITHOUT_CLASSIFICATION	1.0825129132140382E-5	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999989067655936	WITHOUT_CLASSIFICATION	1.0932344064901221E-6	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999985073743201	WITHOUT_CLASSIFICATION	1.492625679930226E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999898171572464	WITHOUT_CLASSIFICATION	1.0182842753535982E-5	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999962785675985	WITHOUT_CLASSIFICATION	3.7214324013570724E-6	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999983673809687	WITHOUT_CLASSIFICATION	1.6326190313309556E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999960856093943	WITHOUT_CLASSIFICATION	3.9143906057402414E-6	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999958013638586	WITHOUT_CLASSIFICATION	4.198636141387798E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999932935353708	WITHOUT_CLASSIFICATION	6.706464629157491E-6	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9999974066307638	WITHOUT_CLASSIFICATION	2.5933692362776136E-6	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999996597154627	WITHOUT_CLASSIFICATION	3.4028453730239397E-6	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.9999972602369386	WITHOUT_CLASSIFICATION	2.7397630613879976E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999984742763303	WITHOUT_CLASSIFICATION	1.5257236696281804E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.999999246867843	WITHOUT_CLASSIFICATION	7.531321569240462E-7	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999120281737492	WITHOUT_CLASSIFICATION	8.797182625075528E-5	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999860121621	WITHOUT_CLASSIFICATION	1.3987837924264224E-8	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999998759592211	WITHOUT_CLASSIFICATION	1.2404077886551715E-7	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999778989606419	WITHOUT_CLASSIFICATION	2.210103935812956E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999778989606419	WITHOUT_CLASSIFICATION	2.210103935812956E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999997902766743	WITHOUT_CLASSIFICATION	2.097233256862093E-7	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999978524736651	WITHOUT_CLASSIFICATION	2.1475263349705958E-6	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999997585542871	WITHOUT_CLASSIFICATION	2.4144571278560145E-7	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999999689260342	WITHOUT_CLASSIFICATION	3.107396586393734E-8	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999557992545319	WITHOUT_CLASSIFICATION	4.4200745468011136E-5	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999966881917796	WITHOUT_CLASSIFICATION	3.311808220520116E-6	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999983919484938	WITHOUT_CLASSIFICATION	1.6080515061434238E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999770359007768	WITHOUT_CLASSIFICATION	2.296409922323788E-5	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999996022568712	WITHOUT_CLASSIFICATION	3.977431287527729E-7	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999907836053119	WITHOUT_CLASSIFICATION	9.216394688136038E-6	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.999990671143064	WITHOUT_CLASSIFICATION	9.32885693612323E-6	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999749112180337	WITHOUT_CLASSIFICATION	2.5088781966228414E-5	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999838952585343	WITHOUT_CLASSIFICATION	1.6104741465730896E-5	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.999986698835351	WITHOUT_CLASSIFICATION	1.3301164649097116E-5	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999943465078478	WITHOUT_CLASSIFICATION	5.653492152136286E-6	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999220457723681	WITHOUT_CLASSIFICATION	7.795422763189647E-5	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9999991598762569	WITHOUT_CLASSIFICATION	8.401237431177857E-7	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999991831757575	WITHOUT_CLASSIFICATION	8.168242425379469E-7	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999994766406549	WITHOUT_CLASSIFICATION	5.233593450847855E-7	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999990653991697	WITHOUT_CLASSIFICATION	9.346008302474485E-7	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9920825338935692	DESIGN	0.007917466106430883	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999315631312736	WITHOUT_CLASSIFICATION	6.843686872638501E-5	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.999999767405865	WITHOUT_CLASSIFICATION	2.3259413502795101E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.669405562371415	DESIGN	0.330594437628585	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999993877227005	WITHOUT_CLASSIFICATION	6.12277299405963E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9997921513768627	WITHOUT_CLASSIFICATION	2.07848623137257E-4	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999904133997849	WITHOUT_CLASSIFICATION	9.586600215169668E-6	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9983834080102125	WITHOUT_CLASSIFICATION	0.0016165919897874516	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999862657510538	WITHOUT_CLASSIFICATION	1.373424894627455E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999993877227005	WITHOUT_CLASSIFICATION	6.12277299405963E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9997921513768627	WITHOUT_CLASSIFICATION	2.07848623137257E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.999986698835351	WITHOUT_CLASSIFICATION	1.3301164649097116E-5	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.999999030284111	WITHOUT_CLASSIFICATION	9.697158890687665E-7	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9998039670057701	WITHOUT_CLASSIFICATION	1.9603299422994917E-4	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.999786762081393	WITHOUT_CLASSIFICATION	2.132379186069303E-4	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999805662482342	WITHOUT_CLASSIFICATION	1.943375176585317E-5	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999971081003933	WITHOUT_CLASSIFICATION	2.891899606645766E-6	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999895873693504	WITHOUT_CLASSIFICATION	1.0412630649557784E-5	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999498333922836	WITHOUT_CLASSIFICATION	5.016660771628287E-5	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999918481770328	WITHOUT_CLASSIFICATION	8.151822967194726E-6	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999035451957056	WITHOUT_CLASSIFICATION	9.645480429447998E-5	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.999918134268867	WITHOUT_CLASSIFICATION	8.186573113296437E-5	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.999331198651756	WITHOUT_CLASSIFICATION	6.688013482439682E-4	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9998489852794775	WITHOUT_CLASSIFICATION	1.510147205224235E-4	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999171069809704	WITHOUT_CLASSIFICATION	8.289301902960021E-5	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999558934833525	WITHOUT_CLASSIFICATION	4.410651664746228E-5	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9990241122035451	WITHOUT_CLASSIFICATION	9.758877964549257E-4	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9998986211387733	WITHOUT_CLASSIFICATION	1.0137886122671357E-4	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999794257266467	WITHOUT_CLASSIFICATION	2.057427335339324E-5	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.963796470398353	WITHOUT_CLASSIFICATION	0.03620352960164705	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999623891023126	WITHOUT_CLASSIFICATION	3.761089768729545E-5	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.998823108128241	WITHOUT_CLASSIFICATION	0.0011768918717590152	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999100696200905	WITHOUT_CLASSIFICATION	8.993037990952071E-5	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9998913657648614	WITHOUT_CLASSIFICATION	1.0863423513855776E-4	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999501203606109	WITHOUT_CLASSIFICATION	4.987963938913272E-5	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9987338422551287	WITHOUT_CLASSIFICATION	0.0012661577448712616	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999995730407818	WITHOUT_CLASSIFICATION	4.269592182066914E-7	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9984917724751162	WITHOUT_CLASSIFICATION	0.001508227524883722	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9997798043662401	WITHOUT_CLASSIFICATION	2.2019563375986058E-4	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9966997123535124	WITHOUT_CLASSIFICATION	0.003300287646487586	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9996135807554464	WITHOUT_CLASSIFICATION	3.864192445536728E-4	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9953716067446755	WITHOUT_CLASSIFICATION	0.004628393255324565	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999361445646389	WITHOUT_CLASSIFICATION	6.385543536115291E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999485321219	WITHOUT_CLASSIFICATION	5.146787812995312E-8	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999485321219	WITHOUT_CLASSIFICATION	5.146787812995312E-8	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999838952585343	WITHOUT_CLASSIFICATION	1.6104741465730896E-5	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999805250958776	WITHOUT_CLASSIFICATION	1.947490412236378E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.99998221658355	WITHOUT_CLASSIFICATION	1.7783416450091804E-5	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999994451742126	WITHOUT_CLASSIFICATION	5.548257873955488E-7	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999996736125117	WITHOUT_CLASSIFICATION	3.2638748827028413E-7	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999996736125117	WITHOUT_CLASSIFICATION	3.2638748827028413E-7	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999996527660331	WITHOUT_CLASSIFICATION	3.472339669085883E-7	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999938907843895	WITHOUT_CLASSIFICATION	6.109215610460716E-6	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999954315773006	WITHOUT_CLASSIFICATION	4.568422699370937E-6	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999982451293292	WITHOUT_CLASSIFICATION	1.754870670742181E-6	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9995455338399389	WITHOUT_CLASSIFICATION	4.5446616006099007E-4	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999838680727964	WITHOUT_CLASSIFICATION	1.613192720362649E-5	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999975346646137	WITHOUT_CLASSIFICATION	2.4653353862575554E-6	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999917924247766	WITHOUT_CLASSIFICATION	8.207575223444187E-6	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999999558431763	WITHOUT_CLASSIFICATION	4.415682369066885E-7	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999997098413236	WITHOUT_CLASSIFICATION	2.901586764246345E-7	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999985431104175	WITHOUT_CLASSIFICATION	1.4568895826017514E-6	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999999976598773	WITHOUT_CLASSIFICATION	2.340122691872983E-8	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998881431694	WITHOUT_CLASSIFICATION	1.1185683054883727E-7	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999799864648726	WITHOUT_CLASSIFICATION	2.001353512748369E-5	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999976371656228	WITHOUT_CLASSIFICATION	2.362834377209235E-6	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9999993259116249	WITHOUT_CLASSIFICATION	6.740883751533872E-7	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999993071211605	WITHOUT_CLASSIFICATION	6.928788394081023E-7	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999993071211605	WITHOUT_CLASSIFICATION	6.928788394081023E-7	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999905002469897	WITHOUT_CLASSIFICATION	9.499753010298636E-6	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999905002469897	WITHOUT_CLASSIFICATION	9.499753010298636E-6	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999994505207547	WITHOUT_CLASSIFICATION	5.494792452778017E-7	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9996886595170134	WITHOUT_CLASSIFICATION	3.1134048298659317E-4	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9992539964455643	WITHOUT_CLASSIFICATION	7.460035544356792E-4	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9994130310753574	WITHOUT_CLASSIFICATION	5.869689246426028E-4	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999699915438892	WITHOUT_CLASSIFICATION	3.0008456110793463E-4	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999894477482526	WITHOUT_CLASSIFICATION	1.0552251747387408E-5	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999996806622872	WITHOUT_CLASSIFICATION	3.1933771283920897E-7	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999999976598773	WITHOUT_CLASSIFICATION	2.340122691872983E-8	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998881431694	WITHOUT_CLASSIFICATION	1.1185683054883727E-7	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999976371656228	WITHOUT_CLASSIFICATION	2.362834377209235E-6	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.999995643061418	WITHOUT_CLASSIFICATION	4.356938582045661E-6	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.6494262817209118	WITHOUT_CLASSIFICATION	0.3505737182790882	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9764573837531915	WITHOUT_CLASSIFICATION	0.023542616246808534	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999419648220644	WITHOUT_CLASSIFICATION	5.803517793553454E-5	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.999998262546316	WITHOUT_CLASSIFICATION	1.737453684083022E-6	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999913058343612	WITHOUT_CLASSIFICATION	8.694165638872827E-6	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999987286023938	WITHOUT_CLASSIFICATION	1.2713976061740092E-6	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999919492755672	WITHOUT_CLASSIFICATION	8.05072443280103E-6	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999936025814153	WITHOUT_CLASSIFICATION	6.397418584744066E-6	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999934564527216	WITHOUT_CLASSIFICATION	6.543547278367113E-6	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.8255363305091866	WITHOUT_CLASSIFICATION	0.1744636694908134	DESIGN
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9989236270477808	WITHOUT_CLASSIFICATION	0.0010763729522191609	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999989585401472	WITHOUT_CLASSIFICATION	1.0414598528840398E-6	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999979023719648	WITHOUT_CLASSIFICATION	2.097628035088923E-6	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999744557502391	WITHOUT_CLASSIFICATION	2.5544249760909686E-5	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999883267142299	WITHOUT_CLASSIFICATION	1.1673285770097073E-5	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999939508527125	WITHOUT_CLASSIFICATION	6.049147287427409E-6	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999991855458966	WITHOUT_CLASSIFICATION	8.144541033715984E-7	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999996283060113	WITHOUT_CLASSIFICATION	3.716939887550433E-7	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999965827949573	WITHOUT_CLASSIFICATION	3.417205042649573E-6	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999953987541448	WITHOUT_CLASSIFICATION	4.601245855161962E-6	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999968131203925	WITHOUT_CLASSIFICATION	3.1868796076409098E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9996233362878336	WITHOUT_CLASSIFICATION	3.766637121663885E-4	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.999999600272721	WITHOUT_CLASSIFICATION	3.997272790557511E-7	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9993426105078179	WITHOUT_CLASSIFICATION	6.57389492182057E-4	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999964137747899	WITHOUT_CLASSIFICATION	3.586225210203809E-6	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999871050006345	WITHOUT_CLASSIFICATION	1.289499936552679E-5	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999636527579829	WITHOUT_CLASSIFICATION	3.634724201703907E-5	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999988140734034	WITHOUT_CLASSIFICATION	1.1859265966333677E-6	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999860632104136	WITHOUT_CLASSIFICATION	1.3936789586331764E-5	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9983650449375331	WITHOUT_CLASSIFICATION	0.0016349550624668021	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999989902546526	WITHOUT_CLASSIFICATION	1.009745347529237E-6	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999996351990922	WITHOUT_CLASSIFICATION	3.6480090778180097E-7	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.999883543559258	WITHOUT_CLASSIFICATION	1.1645644074200512E-4	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999909763855621	WITHOUT_CLASSIFICATION	9.023614437847896E-6	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999810831636852	WITHOUT_CLASSIFICATION	1.8916836314775627E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999974391304035	WITHOUT_CLASSIFICATION	2.5608695964487214E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9995927333403416	WITHOUT_CLASSIFICATION	4.072666596584695E-4	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999989019605277	WITHOUT_CLASSIFICATION	1.0980394724151124E-6	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.999851170620547	WITHOUT_CLASSIFICATION	1.4882937945308222E-4	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999984208158208	WITHOUT_CLASSIFICATION	1.5791841792863528E-6	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.99998221658355	WITHOUT_CLASSIFICATION	1.7783416450091804E-5	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999974391304035	WITHOUT_CLASSIFICATION	2.5608695964487214E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.998612430277222	WITHOUT_CLASSIFICATION	0.001387569722778015	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.984370605370829	WITHOUT_CLASSIFICATION	0.015629394629170925	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.999950105475225	WITHOUT_CLASSIFICATION	4.989452477500877E-5	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999986892354954	WITHOUT_CLASSIFICATION	1.3107645045615125E-6	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999986892354954	WITHOUT_CLASSIFICATION	1.3107645045615125E-6	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9931725072976615	WITHOUT_CLASSIFICATION	0.0068274927023385095	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9967789626814627	WITHOUT_CLASSIFICATION	0.0032210373185371536	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9897202867199307	WITHOUT_CLASSIFICATION	0.010279713280069406	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999796746049254	WITHOUT_CLASSIFICATION	2.0325395074529274E-5	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9984102999960281	WITHOUT_CLASSIFICATION	0.0015897000039717518	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999971475519752	WITHOUT_CLASSIFICATION	2.8524480247810158E-6	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.999999795344611	WITHOUT_CLASSIFICATION	2.0465538899163884E-7	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999968083128788	WITHOUT_CLASSIFICATION	3.1916871210714918E-6	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999995367066726	WITHOUT_CLASSIFICATION	4.632933274229978E-7	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999995367066726	WITHOUT_CLASSIFICATION	4.632933274229978E-7	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999999432422704	WITHOUT_CLASSIFICATION	5.67577295603642E-8	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999995191101573	WITHOUT_CLASSIFICATION	4.808898427449156E-7	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999937656031357	WITHOUT_CLASSIFICATION	6.234396864349756E-6	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9999843889934547	WITHOUT_CLASSIFICATION	1.5611006545350403E-5	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9999929350258846	WITHOUT_CLASSIFICATION	7.064974115428122E-6	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999965594664859	WITHOUT_CLASSIFICATION	3.4405335140317232E-6	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9988305833641876	WITHOUT_CLASSIFICATION	0.0011694166358123294	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999852919916339	WITHOUT_CLASSIFICATION	1.4708008366097214E-5	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9999996584583858	WITHOUT_CLASSIFICATION	3.415416142154883E-7	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9996956663539425	WITHOUT_CLASSIFICATION	3.043336460574756E-4	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999345318861129	WITHOUT_CLASSIFICATION	6.54681138870725E-5	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999980935242516	WITHOUT_CLASSIFICATION	1.906475748420793E-6	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999845130226277	WITHOUT_CLASSIFICATION	1.5486977372348395E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999908660414439	WITHOUT_CLASSIFICATION	9.133958556072972E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999908660414439	WITHOUT_CLASSIFICATION	9.133958556072972E-6	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999997556476014	WITHOUT_CLASSIFICATION	2.443523986885857E-7	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999984742763303	WITHOUT_CLASSIFICATION	1.5257236696281804E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9996748190339627	WITHOUT_CLASSIFICATION	3.2518096603729573E-4	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9969751569242715	WITHOUT_CLASSIFICATION	0.003024843075728433	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9998963738979058	WITHOUT_CLASSIFICATION	1.0362610209428843E-4	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.999992801209098	WITHOUT_CLASSIFICATION	7.19879090192625E-6	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999997447664836	WITHOUT_CLASSIFICATION	2.552335164217543E-7	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999952511428828	WITHOUT_CLASSIFICATION	4.748857117220207E-6	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999923962897456	WITHOUT_CLASSIFICATION	7.603710254483449E-6	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9999940369916834	WITHOUT_CLASSIFICATION	5.963008316517429E-6	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999936614206938	WITHOUT_CLASSIFICATION	6.338579306270055E-6	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999982334747981	WITHOUT_CLASSIFICATION	1.7665252019019107E-6	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9947304332427236	WITHOUT_CLASSIFICATION	0.00526956675727635	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999319789646635	WITHOUT_CLASSIFICATION	6.802103533648899E-5	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999998474868989	WITHOUT_CLASSIFICATION	1.525131011030103E-7	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999884907040493	WITHOUT_CLASSIFICATION	1.1509295950752706E-5	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9992229680058747	WITHOUT_CLASSIFICATION	7.770319941251473E-4	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999987858410042	WITHOUT_CLASSIFICATION	1.214158995790582E-6	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999997564305195	WITHOUT_CLASSIFICATION	2.435694805041213E-7	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999972541613301	WITHOUT_CLASSIFICATION	2.7458386697853186E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9999994769560182	WITHOUT_CLASSIFICATION	5.230439817158965E-7	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999999177076434	WITHOUT_CLASSIFICATION	8.229235651899574E-8	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999785611898337	WITHOUT_CLASSIFICATION	2.1438810166266956E-5	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999891993877406	WITHOUT_CLASSIFICATION	1.0800612259476347E-5	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9545986510902662	WITHOUT_CLASSIFICATION	0.04540134890973375	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999080319133725	WITHOUT_CLASSIFICATION	9.196808662748375E-5	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9999937500264753	WITHOUT_CLASSIFICATION	6.2499735246827056E-6	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999835356820864	WITHOUT_CLASSIFICATION	1.6464317913515097E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999999542192574	WITHOUT_CLASSIFICATION	4.578074260544935E-8	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9918257318619804	WITHOUT_CLASSIFICATION	0.008174268138019613	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999973622238941	WITHOUT_CLASSIFICATION	2.6377761058998404E-6	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9999898395175454	WITHOUT_CLASSIFICATION	1.0160482454700863E-5	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999984878647156	WITHOUT_CLASSIFICATION	1.5121352844321363E-6	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9965142098171033	WITHOUT_CLASSIFICATION	0.0034857901828967827	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9867230840900229	WITHOUT_CLASSIFICATION	0.013276915909977276	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9998048812490488	WITHOUT_CLASSIFICATION	1.9511875095120333E-4	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999998087946945	WITHOUT_CLASSIFICATION	1.9120530538776135E-7	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999931288084306	WITHOUT_CLASSIFICATION	6.871191569353333E-6	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999897257375071	WITHOUT_CLASSIFICATION	1.027426249293383E-5	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999841635557284	WITHOUT_CLASSIFICATION	1.5836444271518654E-5	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999991025455067	WITHOUT_CLASSIFICATION	8.974544931812968E-7	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9989206845086894	WITHOUT_CLASSIFICATION	0.0010793154913105716	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999783081487044	WITHOUT_CLASSIFICATION	2.169185129567603E-5	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9991304792585867	WITHOUT_CLASSIFICATION	8.695207414132455E-4	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.9999992213869959	WITHOUT_CLASSIFICATION	7.786130041074705E-7	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999922531564072	WITHOUT_CLASSIFICATION	7.746843592765502E-6	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999986219566218	WITHOUT_CLASSIFICATION	1.3780433781962076E-6	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999980425727446	WITHOUT_CLASSIFICATION	1.9574272554203905E-6	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9980312090608426	WITHOUT_CLASSIFICATION	0.00196879093915729	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999993877227005	WITHOUT_CLASSIFICATION	6.12277299405963E-7	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999993877227005	WITHOUT_CLASSIFICATION	6.12277299405963E-7	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9995523403813319	WITHOUT_CLASSIFICATION	4.4765961866810355E-4	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999841727573012	WITHOUT_CLASSIFICATION	1.582724269879822E-5	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999999859018658	WITHOUT_CLASSIFICATION	1.4098134276776113E-8	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9941842060047413	WITHOUT_CLASSIFICATION	0.005815793995258696	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999974616643142	WITHOUT_CLASSIFICATION	2.538335685750351E-6	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999982756303388	WITHOUT_CLASSIFICATION	1.7243696611756047E-6	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999803573590167	WITHOUT_CLASSIFICATION	1.9642640983275842E-5	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.99998837560866	WITHOUT_CLASSIFICATION	1.162439133990593E-5	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999990991401335	WITHOUT_CLASSIFICATION	9.008598663886165E-7	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.999996004878977	WITHOUT_CLASSIFICATION	3.995121023073414E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999928217599239	WITHOUT_CLASSIFICATION	7.178240076127827E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999928217599239	WITHOUT_CLASSIFICATION	7.178240076127827E-6	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999928217599239	WITHOUT_CLASSIFICATION	7.178240076127827E-6	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9985212535573319	WITHOUT_CLASSIFICATION	0.001478746442668126	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999700661821361	WITHOUT_CLASSIFICATION	2.993381786388523E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9999997606764212	WITHOUT_CLASSIFICATION	2.393235788518642E-7	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999998100946249	WITHOUT_CLASSIFICATION	1.8990537497363495E-7	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999998100946249	WITHOUT_CLASSIFICATION	1.8990537497363495E-7	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999850917257471	WITHOUT_CLASSIFICATION	1.490827425291367E-5	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.999944114829911	WITHOUT_CLASSIFICATION	5.588517008891356E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999823354319	WITHOUT_CLASSIFICATION	1.766456815400984E-8	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999970141087302	WITHOUT_CLASSIFICATION	2.98589126979532E-6	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9993976461440796	WITHOUT_CLASSIFICATION	6.023538559204494E-4	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999993795549947	WITHOUT_CLASSIFICATION	6.204450052914623E-7	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999992143546328	WITHOUT_CLASSIFICATION	7.85645367064696E-7	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999838988711147	WITHOUT_CLASSIFICATION	1.6101128885294602E-5	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999368803489	WITHOUT_CLASSIFICATION	6.311965110474821E-8	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9996295469667368	WITHOUT_CLASSIFICATION	3.7045303326316135E-4	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9996295469667368	WITHOUT_CLASSIFICATION	3.7045303326316135E-4	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999982667515623	WITHOUT_CLASSIFICATION	1.733248437715937E-6	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9997076957425428	WITHOUT_CLASSIFICATION	2.923042574571584E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999999778560211	WITHOUT_CLASSIFICATION	2.2143978874802045E-8	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999977203670717	WITHOUT_CLASSIFICATION	2.2796329282457503E-6	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999645667095453	WITHOUT_CLASSIFICATION	3.543329045469405E-5	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999999637300506	WITHOUT_CLASSIFICATION	3.6269949462833295E-8	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999994089989496	WITHOUT_CLASSIFICATION	5.910010503633238E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999994932184454	WITHOUT_CLASSIFICATION	5.067815547016095E-7	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999969001881716	WITHOUT_CLASSIFICATION	3.0998118284157886E-6	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999942260491446	WITHOUT_CLASSIFICATION	5.773950855530161E-6	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.999997745720195	WITHOUT_CLASSIFICATION	2.254279804956967E-6	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999959258701498	WITHOUT_CLASSIFICATION	4.074129850211177E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999985556413719	WITHOUT_CLASSIFICATION	1.4443586282088942E-6	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9998581076151684	WITHOUT_CLASSIFICATION	1.4189238483157117E-4	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9983764290793254	WITHOUT_CLASSIFICATION	0.0016235709206745895	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999945882497533	WITHOUT_CLASSIFICATION	5.411750246684987E-6	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999976927067322	WITHOUT_CLASSIFICATION	2.3072932677230834E-6	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999915200505046	WITHOUT_CLASSIFICATION	8.479949495460575E-6	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999979920541907	WITHOUT_CLASSIFICATION	2.0079458092816163E-6	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999919305530926	WITHOUT_CLASSIFICATION	8.069446907403254E-5	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.8339030651345524	DESIGN	0.16609693486544763	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999964608572682	WITHOUT_CLASSIFICATION	3.5391427317279365E-6	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999498766805563	WITHOUT_CLASSIFICATION	5.012331944366149E-5	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999568437593728	WITHOUT_CLASSIFICATION	4.31562406272233E-5	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999985155600261	WITHOUT_CLASSIFICATION	1.4844399739433105E-6	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999913079619538	WITHOUT_CLASSIFICATION	8.692038046217475E-6	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999992506512595	WITHOUT_CLASSIFICATION	7.493487404213577E-7	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999995602176617	WITHOUT_CLASSIFICATION	4.39782338290614E-7	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9998624906862748	WITHOUT_CLASSIFICATION	1.3750931372530462E-4	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999975343766557	WITHOUT_CLASSIFICATION	2.4656233443473573E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999984836290885	WITHOUT_CLASSIFICATION	1.5163709115155056E-6	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999998618689816	WITHOUT_CLASSIFICATION	1.381310183667497E-7	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999990708732203	WITHOUT_CLASSIFICATION	9.291267797375161E-7	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999984836290885	WITHOUT_CLASSIFICATION	1.5163709115155056E-6	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.999999982965299	WITHOUT_CLASSIFICATION	1.703470089124398E-8	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999663797182098	WITHOUT_CLASSIFICATION	3.3620281790284324E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999895570447787	WITHOUT_CLASSIFICATION	1.044295522133717E-5	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999938584305792	WITHOUT_CLASSIFICATION	6.141569420814004E-6	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999997619960138	WITHOUT_CLASSIFICATION	2.3800398619285637E-7	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999981029756221	WITHOUT_CLASSIFICATION	1.8970243778187285E-6	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.999999459579733	WITHOUT_CLASSIFICATION	5.404202670749406E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999974777562193	WITHOUT_CLASSIFICATION	2.522243780659133E-6	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999981844176022	WITHOUT_CLASSIFICATION	1.8155823978080527E-6	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999986142284327	WITHOUT_CLASSIFICATION	1.3857715673580379E-6	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999934714870299	WITHOUT_CLASSIFICATION	6.528512970125984E-6	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999993177833274	WITHOUT_CLASSIFICATION	6.82216672644803E-7	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999998629905819	WITHOUT_CLASSIFICATION	1.3700941811555243E-7	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999995136445459	WITHOUT_CLASSIFICATION	4.863554541519385E-7	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999608654327823	WITHOUT_CLASSIFICATION	3.913456721783725E-5	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999993429952369	WITHOUT_CLASSIFICATION	6.570047631644027E-7	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999983240931509	WITHOUT_CLASSIFICATION	1.6759068489795165E-6	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999767544107621	WITHOUT_CLASSIFICATION	2.3245589237903525E-5	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999999321602528	WITHOUT_CLASSIFICATION	6.783974710596496E-8	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999994729998446	WITHOUT_CLASSIFICATION	5.270001554726778E-7	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999997837033863	WITHOUT_CLASSIFICATION	2.1629661371934945E-7	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999997275817203	WITHOUT_CLASSIFICATION	2.7241827976126213E-7	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999997756891261	WITHOUT_CLASSIFICATION	2.243108738410868E-7	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999992959965794	WITHOUT_CLASSIFICATION	7.040034205198041E-7	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999986501128629	WITHOUT_CLASSIFICATION	1.3498871371207484E-6	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999967058313177	WITHOUT_CLASSIFICATION	3.294168682235135E-6	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999673397857402	WITHOUT_CLASSIFICATION	3.26602142598442E-5	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999997073940085	WITHOUT_CLASSIFICATION	2.926059914824451E-7	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999994333338853	WITHOUT_CLASSIFICATION	5.666661146448842E-7	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999992744292426	WITHOUT_CLASSIFICATION	7.255707573213226E-7	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9999895471097241	WITHOUT_CLASSIFICATION	1.0452890275850942E-5	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.866921323424648	WITHOUT_CLASSIFICATION	0.13307867657535208	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999239034754231	WITHOUT_CLASSIFICATION	7.60965245768929E-5	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999014498792211	WITHOUT_CLASSIFICATION	9.855012077882205E-5	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999966847338537	WITHOUT_CLASSIFICATION	3.3152661462199576E-6	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999958036511523	WITHOUT_CLASSIFICATION	4.196348847761671E-6	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999964805886982	WITHOUT_CLASSIFICATION	3.5194113019144E-6	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999231909285218	WITHOUT_CLASSIFICATION	7.680907147816733E-5	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999999585306227	WITHOUT_CLASSIFICATION	4.146937728930179E-8	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.999997632688075	WITHOUT_CLASSIFICATION	2.367311925000256E-6	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999552283099267	WITHOUT_CLASSIFICATION	4.4771690073263894E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.99999918144387	WITHOUT_CLASSIFICATION	8.185561301131138E-7	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999912061619995	WITHOUT_CLASSIFICATION	8.793838000446348E-6	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.9999936801606694	WITHOUT_CLASSIFICATION	6.3198393306741656E-6	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999932843734883	WITHOUT_CLASSIFICATION	6.715626511769919E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999992084716472	WITHOUT_CLASSIFICATION	7.915283527071332E-7	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9999979128274943	WITHOUT_CLASSIFICATION	2.0871725057799795E-6	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999890786012091	WITHOUT_CLASSIFICATION	1.0921398790841339E-5	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999962851425445	WITHOUT_CLASSIFICATION	3.7148574554893353E-6	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999986285753336	WITHOUT_CLASSIFICATION	1.3714246663399431E-6	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999814305709827	WITHOUT_CLASSIFICATION	1.8569429017329344E-5	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999709554484096	WITHOUT_CLASSIFICATION	2.9044551590413202E-5	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999710893949058	WITHOUT_CLASSIFICATION	2.8910605094247104E-5	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999962851425445	WITHOUT_CLASSIFICATION	3.7148574554893353E-6	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9940523868814726	WITHOUT_CLASSIFICATION	0.005947613118527426	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9940523868814726	WITHOUT_CLASSIFICATION	0.005947613118527426	DESIGN
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999987562669552	WITHOUT_CLASSIFICATION	1.2437330447806585E-6	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999661768380985	WITHOUT_CLASSIFICATION	3.3823161901535206E-5	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999936377246538	WITHOUT_CLASSIFICATION	6.362275346169261E-6	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999753283681151	WITHOUT_CLASSIFICATION	2.4671631884946963E-5	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999612398508744	WITHOUT_CLASSIFICATION	3.876014912564258E-5	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9998499604502806	WITHOUT_CLASSIFICATION	1.500395497193344E-4	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.999988422098556	WITHOUT_CLASSIFICATION	1.1577901444054411E-5	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9774906423476081	DESIGN	0.022509357652391856	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.999960427943078	WITHOUT_CLASSIFICATION	3.9572056921881854E-5	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999810580763505	WITHOUT_CLASSIFICATION	1.8941923649465245E-5	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999633562920614	WITHOUT_CLASSIFICATION	3.6643707938595696E-4	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999998418822217	WITHOUT_CLASSIFICATION	1.5811777832936892E-7	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999316445147141	WITHOUT_CLASSIFICATION	6.835548528588234E-5	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999984077013381	WITHOUT_CLASSIFICATION	1.592298661948044E-6	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9993541209923175	WITHOUT_CLASSIFICATION	6.458790076825303E-4	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999110983193756	WITHOUT_CLASSIFICATION	8.890168062442273E-5	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999960239655334	WITHOUT_CLASSIFICATION	3.976034466611013E-6	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999905455853106	WITHOUT_CLASSIFICATION	9.45441468941285E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999905455853106	WITHOUT_CLASSIFICATION	9.45441468941285E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999905455853106	WITHOUT_CLASSIFICATION	9.45441468941285E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999905455853106	WITHOUT_CLASSIFICATION	9.45441468941285E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999905455853106	WITHOUT_CLASSIFICATION	9.45441468941285E-5	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999846755493524	WITHOUT_CLASSIFICATION	1.532445064753742E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999878035658601	WITHOUT_CLASSIFICATION	1.21964341397284E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999317085834173	WITHOUT_CLASSIFICATION	6.829141658269922E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999960261223703	WITHOUT_CLASSIFICATION	3.973877629719728E-6	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999975903493711	WITHOUT_CLASSIFICATION	2.4096506288298276E-6	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999991256562332	WITHOUT_CLASSIFICATION	8.74343766858204E-7	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.999997643402654	WITHOUT_CLASSIFICATION	2.356597346113836E-6	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999905190304165	WITHOUT_CLASSIFICATION	9.480969583558478E-6	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999888684636644	WITHOUT_CLASSIFICATION	1.1131536335586046E-5	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999970147338121	WITHOUT_CLASSIFICATION	2.9852661879093787E-6	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999958180684249	WITHOUT_CLASSIFICATION	4.181931575170386E-6	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999825077917047	WITHOUT_CLASSIFICATION	1.7492208295322374E-5	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999897673658692	WITHOUT_CLASSIFICATION	1.0232634130821737E-5	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.999985761912997	WITHOUT_CLASSIFICATION	1.4238087002954764E-5	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999904247346595	WITHOUT_CLASSIFICATION	9.575265340510417E-6	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999915666392192	WITHOUT_CLASSIFICATION	8.433360780738796E-6	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999882620729319	WITHOUT_CLASSIFICATION	1.1737927068049074E-5	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999868103318466	WITHOUT_CLASSIFICATION	1.3189668153388305E-5	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.99998663086621	WITHOUT_CLASSIFICATION	1.3369133789936285E-5	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999885511541596	WITHOUT_CLASSIFICATION	1.1448845840275677E-5	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999883706151396	WITHOUT_CLASSIFICATION	1.162938486054747E-5	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999860203371795	WITHOUT_CLASSIFICATION	1.397966282047572E-5	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999932367627709	WITHOUT_CLASSIFICATION	6.763237229133405E-6	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999909683452347	WITHOUT_CLASSIFICATION	9.031654765260591E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999922436600858	WITHOUT_CLASSIFICATION	7.756339914273013E-6	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999915267386649	WITHOUT_CLASSIFICATION	8.473261335110263E-6	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999902038080278	WITHOUT_CLASSIFICATION	9.79619197223273E-6	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999891696205134	WITHOUT_CLASSIFICATION	1.083037948652881E-5	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999908348333011	WITHOUT_CLASSIFICATION	9.165166698850556E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999929761023606	WITHOUT_CLASSIFICATION	7.0238976393241335E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999872181240097	WITHOUT_CLASSIFICATION	1.2781875990360695E-5	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999857392923085	WITHOUT_CLASSIFICATION	1.4260707691499554E-5	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999801320487202	WITHOUT_CLASSIFICATION	1.9867951279827095E-5	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999852607986596	WITHOUT_CLASSIFICATION	1.4739201340437616E-5	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999903280850467	WITHOUT_CLASSIFICATION	9.671914953245817E-6	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.99998776841307	WITHOUT_CLASSIFICATION	1.2231586929891699E-5	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999859929987378	WITHOUT_CLASSIFICATION	1.4007001262104025E-5	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999869580805941	WITHOUT_CLASSIFICATION	1.3041919405808608E-5	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999932010083946	WITHOUT_CLASSIFICATION	6.798991605344354E-6	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999874231531727	WITHOUT_CLASSIFICATION	1.2576846827259626E-5	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999905105533657	WITHOUT_CLASSIFICATION	9.48944663422282E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999864329806022	WITHOUT_CLASSIFICATION	1.3567019397669776E-5	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999912791122133	WITHOUT_CLASSIFICATION	8.720887786685857E-6	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999885153578071	WITHOUT_CLASSIFICATION	1.148464219303585E-5	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999913982736112	WITHOUT_CLASSIFICATION	8.601726388726278E-6	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999868239615468	WITHOUT_CLASSIFICATION	1.3176038453234072E-5	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999920601459741	WITHOUT_CLASSIFICATION	7.939854025831478E-6	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999957413448409	WITHOUT_CLASSIFICATION	4.258655159114202E-6	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999896512527987	WITHOUT_CLASSIFICATION	1.034874720136686E-5	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999916057220811	WITHOUT_CLASSIFICATION	8.394277918955234E-6	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999317085834173	WITHOUT_CLASSIFICATION	6.829141658269922E-5	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999886996732866	WITHOUT_CLASSIFICATION	1.1300326713269793E-5	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999904754352106	WITHOUT_CLASSIFICATION	9.524564789420589E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.999976242040083	WITHOUT_CLASSIFICATION	2.3757959917005478E-5	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999823749463965	WITHOUT_CLASSIFICATION	1.7625053603422236E-5	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999852127846323	WITHOUT_CLASSIFICATION	1.4787215367623416E-5	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9999878056031256	WITHOUT_CLASSIFICATION	1.2194396874455372E-5	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999581129369095	WITHOUT_CLASSIFICATION	4.188706309053654E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999826218657653	WITHOUT_CLASSIFICATION	1.7378134234812595E-5	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999775831627642	WITHOUT_CLASSIFICATION	2.2416837235826888E-5	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999915774258844	WITHOUT_CLASSIFICATION	8.422574115569238E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999925656880492	WITHOUT_CLASSIFICATION	7.43431195086045E-6	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.999992248468517	WITHOUT_CLASSIFICATION	7.75153148302261E-6	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999849962129611	WITHOUT_CLASSIFICATION	1.5003787038814673E-5	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999839053870188	WITHOUT_CLASSIFICATION	1.6094612981247113E-5	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999904767144354	WITHOUT_CLASSIFICATION	9.523285564469871E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999957576067344	WITHOUT_CLASSIFICATION	4.242393265613735E-6	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.999985172541786	WITHOUT_CLASSIFICATION	1.4827458214005275E-5	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999917718882252	WITHOUT_CLASSIFICATION	8.228111774856887E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999823339186145	WITHOUT_CLASSIFICATION	1.7666081385541505E-5	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999837626110807	WITHOUT_CLASSIFICATION	1.6237388919300618E-5	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.999977994615395	WITHOUT_CLASSIFICATION	2.2005384605026626E-5	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999879864979125	WITHOUT_CLASSIFICATION	1.2013502087361972E-5	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999891910690352	WITHOUT_CLASSIFICATION	1.080893096478224E-5	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999912498653302	WITHOUT_CLASSIFICATION	8.750134669855412E-6	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.99999154994205	WITHOUT_CLASSIFICATION	8.45005794994303E-6	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999942370826638	WITHOUT_CLASSIFICATION	5.7629173362784135E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.999994443916027	WITHOUT_CLASSIFICATION	5.5560839729904965E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999885424894425	WITHOUT_CLASSIFICATION	1.1457510557568588E-5	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999962807642754	WITHOUT_CLASSIFICATION	3.719235724695865E-6	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.999994506992902	WITHOUT_CLASSIFICATION	5.493007097905048E-6	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999961180196184	WITHOUT_CLASSIFICATION	3.881980381670009E-6	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999929356715906	WITHOUT_CLASSIFICATION	7.064328409347847E-6	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999921053378548	WITHOUT_CLASSIFICATION	7.894662145178134E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999937328346072	WITHOUT_CLASSIFICATION	6.267165392704373E-6	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999898528206246	WITHOUT_CLASSIFICATION	1.0147179375352745E-5	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999912770727284	WITHOUT_CLASSIFICATION	8.722927271551358E-6	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999938711156153	WITHOUT_CLASSIFICATION	6.128884384579283E-6	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999915106215103	WITHOUT_CLASSIFICATION	8.489378489748951E-6	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999929170500026	WITHOUT_CLASSIFICATION	7.082949997512303E-6	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999922469274969	WITHOUT_CLASSIFICATION	7.753072503068035E-6	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999826741654311	WITHOUT_CLASSIFICATION	1.7325834568908465E-5	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999890880255602	WITHOUT_CLASSIFICATION	1.0911974439885042E-5	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999958121260435	WITHOUT_CLASSIFICATION	4.187873956559932E-6	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999929540390644	WITHOUT_CLASSIFICATION	7.045960935584824E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999961671958574	WITHOUT_CLASSIFICATION	3.832804142611472E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999944805691401	WITHOUT_CLASSIFICATION	5.519430859953049E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999928143028325	WITHOUT_CLASSIFICATION	7.1856971675399954E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999910698446526	WITHOUT_CLASSIFICATION	8.93015534735106E-6	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999923506031902	WITHOUT_CLASSIFICATION	7.649396809746226E-6	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999836312828425	WITHOUT_CLASSIFICATION	1.6368717157509728E-5	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999871276033746	WITHOUT_CLASSIFICATION	1.2872396625539071E-5	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999894671092026	WITHOUT_CLASSIFICATION	1.053289079752956E-5	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999931967359239	WITHOUT_CLASSIFICATION	6.8032640760565575E-6	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999952982713002	WITHOUT_CLASSIFICATION	4.701728699866952E-6	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999945359726975	WITHOUT_CLASSIFICATION	5.464027302497409E-6	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999932348276687	WITHOUT_CLASSIFICATION	6.765172331347096E-6	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.999993294988195	WITHOUT_CLASSIFICATION	6.70501180494936E-6	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999871372253878	WITHOUT_CLASSIFICATION	1.286277461221429E-5	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999867512945291	WITHOUT_CLASSIFICATION	1.3248705470874653E-5	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999874315630748	WITHOUT_CLASSIFICATION	1.2568436925151545E-5	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999940443027446	WITHOUT_CLASSIFICATION	5.955697255431391E-6	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.999991623920496	WITHOUT_CLASSIFICATION	8.376079503858931E-6	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999947234313775	WITHOUT_CLASSIFICATION	5.276568622457575E-6	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999925943447617	WITHOUT_CLASSIFICATION	7.405655238232575E-6	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999918656088542	WITHOUT_CLASSIFICATION	8.134391145777718E-6	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999909643592739	WITHOUT_CLASSIFICATION	9.035640726118541E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.999994996912276	WITHOUT_CLASSIFICATION	5.003087723947079E-6	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999920379793943	WITHOUT_CLASSIFICATION	7.962020605680727E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999924371123863	WITHOUT_CLASSIFICATION	7.562887613765316E-6	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999877631909277	WITHOUT_CLASSIFICATION	1.2236809072253034E-5	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999850858148415	WITHOUT_CLASSIFICATION	1.4914185158542415E-5	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999889544074286	WITHOUT_CLASSIFICATION	1.10455925714049E-5	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999912688172662	WITHOUT_CLASSIFICATION	8.731182733897334E-6	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999787081584764	WITHOUT_CLASSIFICATION	2.1291841523577537E-5	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999927580163883	WITHOUT_CLASSIFICATION	7.241983611635806E-6	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999893952786804	WITHOUT_CLASSIFICATION	1.0604721319539055E-5	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999944592634619	WITHOUT_CLASSIFICATION	5.5407365381179455E-6	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999865146648089	WITHOUT_CLASSIFICATION	1.348533519120948E-5	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999899171233593	WITHOUT_CLASSIFICATION	1.0082876640663286E-5	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999910382723237	WITHOUT_CLASSIFICATION	8.961727676342688E-6	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999825878061074	WITHOUT_CLASSIFICATION	1.7412193892540063E-5	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999918042260656	WITHOUT_CLASSIFICATION	8.195773934470432E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999893848079217	WITHOUT_CLASSIFICATION	1.061519207842412E-5	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999899780893032	WITHOUT_CLASSIFICATION	1.00219106966856E-5	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999847428646044	WITHOUT_CLASSIFICATION	1.5257135395638025E-5	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999889390280137	WITHOUT_CLASSIFICATION	1.1060971986374967E-5	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999855642436805	WITHOUT_CLASSIFICATION	1.4435756319600748E-5	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9999893183516366	WITHOUT_CLASSIFICATION	1.0681648363262684E-5	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999948308773509	WITHOUT_CLASSIFICATION	5.169122649235243E-6	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999930947552326	WITHOUT_CLASSIFICATION	6.9052447674063436E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999938048477237	WITHOUT_CLASSIFICATION	6.195152276332392E-6	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999904077501247	WITHOUT_CLASSIFICATION	9.592249875334275E-6	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999891015076364	WITHOUT_CLASSIFICATION	1.089849236355995E-5	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999879396045268	WITHOUT_CLASSIFICATION	1.2060395473074029E-5	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999892350120572	WITHOUT_CLASSIFICATION	1.0764987942952846E-5	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999862181621831	WITHOUT_CLASSIFICATION	1.37818378167733E-5	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999901799362609	WITHOUT_CLASSIFICATION	9.820063739014264E-6	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999804007976367	WITHOUT_CLASSIFICATION	1.9599202363374315E-5	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.999985498465678	WITHOUT_CLASSIFICATION	1.4501534322140712E-5	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999875625045549	WITHOUT_CLASSIFICATION	1.243749544496849E-5	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999795893238617	WITHOUT_CLASSIFICATION	2.0410676138305876E-5	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999833500817782	WITHOUT_CLASSIFICATION	1.6649918221801317E-5	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999873608274341	WITHOUT_CLASSIFICATION	1.2639172565862086E-5	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999876988607319	WITHOUT_CLASSIFICATION	1.2301139267988151E-5	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999896007915134	WITHOUT_CLASSIFICATION	1.0399208486640532E-5	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999953835591154	WITHOUT_CLASSIFICATION	4.616440884557383E-6	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999855691870977	WITHOUT_CLASSIFICATION	1.4430812902201279E-5	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999892877402891	WITHOUT_CLASSIFICATION	1.071225971095604E-5	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999898247402932	WITHOUT_CLASSIFICATION	1.0175259706714269E-5	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999933599511194	WITHOUT_CLASSIFICATION	6.640048880643918E-6	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999872679312107	WITHOUT_CLASSIFICATION	1.2732068789267308E-5	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999873942644707	WITHOUT_CLASSIFICATION	1.26057355293832E-5	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999963485164309	WITHOUT_CLASSIFICATION	3.651483569081397E-6	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999889199924402	WITHOUT_CLASSIFICATION	1.1080007559721658E-5	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999962313878599	WITHOUT_CLASSIFICATION	3.768612140147836E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999915300556246	WITHOUT_CLASSIFICATION	8.469944375487685E-6	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999872112030378	WITHOUT_CLASSIFICATION	1.2788796962157777E-5	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999916813276288	WITHOUT_CLASSIFICATION	8.318672371143595E-6	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.999991108215023	WITHOUT_CLASSIFICATION	8.89178497691846E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.999993074983205	WITHOUT_CLASSIFICATION	6.925016795062586E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999867151744375	WITHOUT_CLASSIFICATION	1.3284825562477198E-5	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999885973427084	WITHOUT_CLASSIFICATION	1.1402657291523196E-5	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999910889070193	WITHOUT_CLASSIFICATION	8.91109298062531E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999929579510638	WITHOUT_CLASSIFICATION	7.042048936214747E-6	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999916414752335	WITHOUT_CLASSIFICATION	8.358524766570528E-6	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999903275277977	WITHOUT_CLASSIFICATION	9.672472202253895E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999929116789309	WITHOUT_CLASSIFICATION	7.088321069128367E-6	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999885918348251	WITHOUT_CLASSIFICATION	1.1408165174847822E-5	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999930639721358	WITHOUT_CLASSIFICATION	6.93602786413069E-6	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999944947471199	WITHOUT_CLASSIFICATION	5.505252880063257E-6	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.999995257340522	WITHOUT_CLASSIFICATION	4.742659477945762E-6	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999930879471822	WITHOUT_CLASSIFICATION	6.912052817796117E-6	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999848215800978	WITHOUT_CLASSIFICATION	1.5178419902152258E-5	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999941794110111	WITHOUT_CLASSIFICATION	5.820588988999851E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999964879121024	WITHOUT_CLASSIFICATION	3.5120878976538284E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999969090837357	WITHOUT_CLASSIFICATION	3.0909162643014138E-6	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999906045028701	WITHOUT_CLASSIFICATION	9.395497129931305E-6	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999921374057084	WITHOUT_CLASSIFICATION	7.862594291621487E-6	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999904325832588	WITHOUT_CLASSIFICATION	9.567416741240319E-6	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999875406290113	WITHOUT_CLASSIFICATION	1.2459370988662085E-5	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999937464946067	WITHOUT_CLASSIFICATION	6.253505393393479E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999936660487867	WITHOUT_CLASSIFICATION	6.333951213297725E-6	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999849565278949	WITHOUT_CLASSIFICATION	1.5043472105181842E-5	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.9999905254870264	WITHOUT_CLASSIFICATION	9.474512973590378E-6	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.999996178889385	WITHOUT_CLASSIFICATION	3.821110615072114E-6	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999909437623151	WITHOUT_CLASSIFICATION	9.056237684896761E-6	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999946657033087	WITHOUT_CLASSIFICATION	5.334296691336757E-6	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999905419165407	WITHOUT_CLASSIFICATION	9.458083459321277E-6	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999925236942253	WITHOUT_CLASSIFICATION	7.476305774687339E-6	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999912549387766	WITHOUT_CLASSIFICATION	8.745061223343346E-6	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999822936202268	WITHOUT_CLASSIFICATION	1.7706379773257367E-5	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999839488098494	WITHOUT_CLASSIFICATION	1.6051190150577114E-5	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999847369769579	WITHOUT_CLASSIFICATION	1.526302304201688E-5	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999920976868849	WITHOUT_CLASSIFICATION	7.902313115072776E-6	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999904883561679	WITHOUT_CLASSIFICATION	9.511643832050659E-6	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999856806916483	WITHOUT_CLASSIFICATION	1.4319308351809516E-5	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999867533878801	WITHOUT_CLASSIFICATION	1.3246612119836284E-5	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999905087267457	WITHOUT_CLASSIFICATION	9.491273254250329E-6	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999878043613428	WITHOUT_CLASSIFICATION	1.2195638657253065E-5	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999873890638401	WITHOUT_CLASSIFICATION	1.2610936159748235E-5	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999872870609844	WITHOUT_CLASSIFICATION	1.2712939015585123E-5	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999893011017449	WITHOUT_CLASSIFICATION	1.0698898255132097E-5	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999901610304948	WITHOUT_CLASSIFICATION	9.83896950514716E-6	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999850667751694	WITHOUT_CLASSIFICATION	1.4933224830468244E-5	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999816544318498	WITHOUT_CLASSIFICATION	1.8345568150178286E-5	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999847133539027	WITHOUT_CLASSIFICATION	1.528664609733254E-5	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999914619361302	WITHOUT_CLASSIFICATION	8.538063869780687E-6	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999787027247212	WITHOUT_CLASSIFICATION	2.129727527873683E-5	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999770367557393	WITHOUT_CLASSIFICATION	2.2963244260572425E-5	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999781482193125	WITHOUT_CLASSIFICATION	2.1851780687463966E-5	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999893689506579	WITHOUT_CLASSIFICATION	1.0631049342006818E-5	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999821221799359	WITHOUT_CLASSIFICATION	1.787782006412201E-5	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999927118740155	WITHOUT_CLASSIFICATION	7.288125984441116E-6	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999893135647236	WITHOUT_CLASSIFICATION	1.0686435276322946E-5	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999917745658974	WITHOUT_CLASSIFICATION	8.225434102670523E-6	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.999987943095424	WITHOUT_CLASSIFICATION	1.2056904575938083E-5	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999896852406267	WITHOUT_CLASSIFICATION	1.0314759373286045E-5	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999810670254276	WITHOUT_CLASSIFICATION	1.8932974572385914E-5	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999926754255737	WITHOUT_CLASSIFICATION	7.324574426258594E-6	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999949233459607	WITHOUT_CLASSIFICATION	5.07665403936273E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999822567795493	WITHOUT_CLASSIFICATION	1.7743220450573038E-5	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999866202726408	WITHOUT_CLASSIFICATION	1.337972735926802E-5	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999832222474507	WITHOUT_CLASSIFICATION	1.6777752549259703E-5	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999926392027664	WITHOUT_CLASSIFICATION	7.360797233588955E-6	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999838229165534	WITHOUT_CLASSIFICATION	1.61770834466071E-5	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999852855753288	WITHOUT_CLASSIFICATION	1.471442467113511E-5	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999850320138101	WITHOUT_CLASSIFICATION	1.4967986190029268E-5	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999867928124104	WITHOUT_CLASSIFICATION	1.3207187589607684E-5	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999915766485389	WITHOUT_CLASSIFICATION	8.423351461242803E-6	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999901419364502	WITHOUT_CLASSIFICATION	9.858063549904808E-6	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999915678721791	WITHOUT_CLASSIFICATION	8.43212782083186E-6	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999922802024311	WITHOUT_CLASSIFICATION	7.719797568921402E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999885013711088	WITHOUT_CLASSIFICATION	1.1498628891213964E-5	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999901247837847	WITHOUT_CLASSIFICATION	9.875216215240837E-6	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999894795008601	WITHOUT_CLASSIFICATION	1.0520499139882402E-5	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999785952149346	WITHOUT_CLASSIFICATION	2.1404785065328024E-5	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.999982384248451	WITHOUT_CLASSIFICATION	1.761575154900331E-5	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999903073275779	WITHOUT_CLASSIFICATION	9.692672422057718E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999852807157017	WITHOUT_CLASSIFICATION	1.4719284298324346E-5	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999869325341307	WITHOUT_CLASSIFICATION	1.3067465869354797E-5	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999802693745468	WITHOUT_CLASSIFICATION	1.973062545323848E-5	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999835946716249	WITHOUT_CLASSIFICATION	1.6405328375138753E-5	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999861155903903	WITHOUT_CLASSIFICATION	1.3884409609701842E-5	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999811919977802	WITHOUT_CLASSIFICATION	1.8808002219704967E-5	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.999986865670426	WITHOUT_CLASSIFICATION	1.3134329573850966E-5	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999884061112054	WITHOUT_CLASSIFICATION	1.1593888794461473E-5	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999877288999068	WITHOUT_CLASSIFICATION	1.2271100093182486E-5	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999932485903787	WITHOUT_CLASSIFICATION	6.751409621185373E-6	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999897320185762	WITHOUT_CLASSIFICATION	1.0267981423702259E-5	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999906058168592	WITHOUT_CLASSIFICATION	9.394183140778516E-6	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999833684634869	WITHOUT_CLASSIFICATION	1.6631536513086274E-5	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999921617766734	WITHOUT_CLASSIFICATION	7.838223326698282E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999932788105584	WITHOUT_CLASSIFICATION	6.721189441582127E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999929890421061	WITHOUT_CLASSIFICATION	7.010957893831748E-6	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.999985824399784	WITHOUT_CLASSIFICATION	1.4175600215900862E-5	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999934364361219	WITHOUT_CLASSIFICATION	6.563563878164808E-6	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999888745974023	WITHOUT_CLASSIFICATION	1.1125402597751983E-5	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999878983933431	WITHOUT_CLASSIFICATION	1.2101606656975362E-5	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999915070057489	WITHOUT_CLASSIFICATION	8.49299425120364E-6	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.999986915725005	WITHOUT_CLASSIFICATION	1.3084274995029586E-5	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999949784186039	WITHOUT_CLASSIFICATION	5.021581396097987E-6	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999915513583773	WITHOUT_CLASSIFICATION	8.44864162274155E-6	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.999991828360402	WITHOUT_CLASSIFICATION	8.171639598094087E-6	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.999992828716093	WITHOUT_CLASSIFICATION	7.1712839070645494E-6	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999904638781676	WITHOUT_CLASSIFICATION	9.536121832368658E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999933807131626	WITHOUT_CLASSIFICATION	6.619286837483758E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999955273501512	WITHOUT_CLASSIFICATION	4.472649848862235E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999994702653933	WITHOUT_CLASSIFICATION	5.297346067220779E-7	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999574867953214	WITHOUT_CLASSIFICATION	4.251320467856158E-5	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999837388618827	WITHOUT_CLASSIFICATION	1.626113811735724E-5	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999958266460499	WITHOUT_CLASSIFICATION	4.173353949987457E-6	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999434022121382	WITHOUT_CLASSIFICATION	5.6597787861883115E-5	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9942874609078863	WITHOUT_CLASSIFICATION	0.0057125390921136405	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999030566626185	WITHOUT_CLASSIFICATION	9.694333738155627E-5	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998869675980414	WITHOUT_CLASSIFICATION	1.1303240195855295E-4	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999869405848528	WITHOUT_CLASSIFICATION	1.3059415147263785E-5	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999751656437311	WITHOUT_CLASSIFICATION	2.483435626884343E-5	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9921193540428627	WITHOUT_CLASSIFICATION	0.007880645957137356	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999855845748854	WITHOUT_CLASSIFICATION	1.4415425114646408E-5	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999997142325787	WITHOUT_CLASSIFICATION	2.8576742126436344E-7	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999894528914242	WITHOUT_CLASSIFICATION	1.0547108575880977E-5	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999998656203332	WITHOUT_CLASSIFICATION	1.343796668699287E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9992048466450447	WITHOUT_CLASSIFICATION	7.951533549552605E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999945282112342	WITHOUT_CLASSIFICATION	5.471788765852405E-6	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9993227319677938	WITHOUT_CLASSIFICATION	6.772680322063522E-4	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.99999612646159	WITHOUT_CLASSIFICATION	3.8735384101035215E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999867615887	WITHOUT_CLASSIFICATION	1.3238411211576635E-8	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999620214327406	WITHOUT_CLASSIFICATION	3.797856725933825E-5	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999838306186168	WITHOUT_CLASSIFICATION	1.6169381383194144E-5	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9996025823880739	WITHOUT_CLASSIFICATION	3.9741761192608647E-4	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999811300826058	WITHOUT_CLASSIFICATION	1.8869917394247498E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999811300826058	WITHOUT_CLASSIFICATION	1.8869917394247498E-5	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999218842145484	WITHOUT_CLASSIFICATION	7.811578545154756E-5	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9909341772744235	WITHOUT_CLASSIFICATION	0.009065822725576442	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999959553002873	WITHOUT_CLASSIFICATION	4.044699712704776E-6	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.999998397714993	WITHOUT_CLASSIFICATION	1.6022850069748252E-6	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9996187852078077	WITHOUT_CLASSIFICATION	3.8121479219230573E-4	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9998258401480725	WITHOUT_CLASSIFICATION	1.7415985192736734E-4	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999776432058552	WITHOUT_CLASSIFICATION	2.235679414483794E-5	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999393444642988	WITHOUT_CLASSIFICATION	6.065553570133294E-5	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9959702441341827	WITHOUT_CLASSIFICATION	0.004029755865817283	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999952366991042	WITHOUT_CLASSIFICATION	4.763300895810067E-6	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999996253419866	WITHOUT_CLASSIFICATION	3.7465801335404324E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9994856035631526	WITHOUT_CLASSIFICATION	5.143964368474194E-4	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9934359049686734	WITHOUT_CLASSIFICATION	0.006564095031326614	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999967632702706	WITHOUT_CLASSIFICATION	3.2367297293973203E-6	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999980686306242	WITHOUT_CLASSIFICATION	1.931369375832325E-6	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999979438218004	WITHOUT_CLASSIFICATION	2.056178199560642E-6	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9988842467345982	WITHOUT_CLASSIFICATION	0.0011157532654018202	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999984501431477	WITHOUT_CLASSIFICATION	1.5498568522926075E-6	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9998357690857695	WITHOUT_CLASSIFICATION	1.6423091423059899E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9998916160285566	WITHOUT_CLASSIFICATION	1.0838397144342135E-4	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999343933208	WITHOUT_CLASSIFICATION	6.56066791930427E-8	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999982480700145	WITHOUT_CLASSIFICATION	1.7519299855611883E-6	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9693025980579428	WITHOUT_CLASSIFICATION	0.03069740194205721	DESIGN
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999211214252761	WITHOUT_CLASSIFICATION	7.887857472393018E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9693025980579428	WITHOUT_CLASSIFICATION	0.03069740194205721	DESIGN
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999515901360593	WITHOUT_CLASSIFICATION	4.840986394066028E-5	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999602292371214	WITHOUT_CLASSIFICATION	3.9770762878626116E-5	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9967175420190847	WITHOUT_CLASSIFICATION	0.0032824579809153727	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.999996667834555	WITHOUT_CLASSIFICATION	3.3321654451649423E-6	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999776306685346	WITHOUT_CLASSIFICATION	2.2369331465323256E-5	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999988740164649	WITHOUT_CLASSIFICATION	1.1259835350514126E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999988740164649	WITHOUT_CLASSIFICATION	1.1259835350514126E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999988740164649	WITHOUT_CLASSIFICATION	1.1259835350514126E-6	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.999882964324693	WITHOUT_CLASSIFICATION	1.1703567530695157E-4	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999545418996051	WITHOUT_CLASSIFICATION	4.545810039496324E-5	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999448617995804	WITHOUT_CLASSIFICATION	5.5138200419680424E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999547129716382	WITHOUT_CLASSIFICATION	4.5287028361914585E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999547129716382	WITHOUT_CLASSIFICATION	4.5287028361914585E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999547129716382	WITHOUT_CLASSIFICATION	4.5287028361914585E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999547129716382	WITHOUT_CLASSIFICATION	4.5287028361914585E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999547129716382	WITHOUT_CLASSIFICATION	4.5287028361914585E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999547129716382	WITHOUT_CLASSIFICATION	4.5287028361914585E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999531339546284	WITHOUT_CLASSIFICATION	4.686604537176747E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999531339546284	WITHOUT_CLASSIFICATION	4.686604537176747E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999531339546284	WITHOUT_CLASSIFICATION	4.686604537176747E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999531339546284	WITHOUT_CLASSIFICATION	4.686604537176747E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999531339546284	WITHOUT_CLASSIFICATION	4.686604537176747E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999339137332898	WITHOUT_CLASSIFICATION	6.608626671017767E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999339137332898	WITHOUT_CLASSIFICATION	6.608626671017767E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999339137332898	WITHOUT_CLASSIFICATION	6.608626671017767E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999339137332898	WITHOUT_CLASSIFICATION	6.608626671017767E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999339137332898	WITHOUT_CLASSIFICATION	6.608626671017767E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999643636911286	WITHOUT_CLASSIFICATION	3.563630887136754E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999643636911286	WITHOUT_CLASSIFICATION	3.563630887136754E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999643636911286	WITHOUT_CLASSIFICATION	3.563630887136754E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999643636911286	WITHOUT_CLASSIFICATION	3.563630887136754E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999643636911286	WITHOUT_CLASSIFICATION	3.563630887136754E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999643636911286	WITHOUT_CLASSIFICATION	3.563630887136754E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.999921769936796	WITHOUT_CLASSIFICATION	7.823006320393402E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.999921769936796	WITHOUT_CLASSIFICATION	7.823006320393402E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.999921769936796	WITHOUT_CLASSIFICATION	7.823006320393402E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.999921769936796	WITHOUT_CLASSIFICATION	7.823006320393402E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.999921769936796	WITHOUT_CLASSIFICATION	7.823006320393402E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999053597485626	WITHOUT_CLASSIFICATION	9.464025143737552E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999053597485626	WITHOUT_CLASSIFICATION	9.464025143737552E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999053597485626	WITHOUT_CLASSIFICATION	9.464025143737552E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999053597485626	WITHOUT_CLASSIFICATION	9.464025143737552E-5	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999053597485626	WITHOUT_CLASSIFICATION	9.464025143737552E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999317085834173	WITHOUT_CLASSIFICATION	6.829141658269922E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999317085834173	WITHOUT_CLASSIFICATION	6.829141658269922E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999317085834173	WITHOUT_CLASSIFICATION	6.829141658269922E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999317085834173	WITHOUT_CLASSIFICATION	6.829141658269922E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999317085834173	WITHOUT_CLASSIFICATION	6.829141658269922E-5	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999960261223703	WITHOUT_CLASSIFICATION	3.973877629719728E-6	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999991256562332	WITHOUT_CLASSIFICATION	8.74343766858204E-7	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.999997643402654	WITHOUT_CLASSIFICATION	2.356597346113836E-6	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999905190304165	WITHOUT_CLASSIFICATION	9.480969583558478E-6	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999888684636644	WITHOUT_CLASSIFICATION	1.1131536335586046E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999902517716664	WITHOUT_CLASSIFICATION	9.748228333616285E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999885511541596	WITHOUT_CLASSIFICATION	1.1448845840275677E-5	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999922436600858	WITHOUT_CLASSIFICATION	7.756339914273013E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999908348333011	WITHOUT_CLASSIFICATION	9.165166698850556E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999929761023606	WITHOUT_CLASSIFICATION	7.0238976393241335E-6	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999822428907438	WITHOUT_CLASSIFICATION	1.7757109256151987E-5	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999872181240097	WITHOUT_CLASSIFICATION	1.2781875990360695E-5	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999971524621604	WITHOUT_CLASSIFICATION	2.847537839630347E-6	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999932498195035	WITHOUT_CLASSIFICATION	6.750180496464847E-6	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999927426101144	WITHOUT_CLASSIFICATION	7.257389885548158E-6	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999879304451331	WITHOUT_CLASSIFICATION	1.2069554866901494E-5	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999910493977187	WITHOUT_CLASSIFICATION	8.950602281402828E-6	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999885439623557	WITHOUT_CLASSIFICATION	1.1456037644193259E-5	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.999984665492848	WITHOUT_CLASSIFICATION	1.5334507151981403E-5	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999836143887044	WITHOUT_CLASSIFICATION	1.6385611295592213E-5	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999901830752796	WITHOUT_CLASSIFICATION	9.816924720375761E-6	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999833601081891	WITHOUT_CLASSIFICATION	1.663989181090596E-5	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999873684386454	WITHOUT_CLASSIFICATION	1.2631561354575608E-5	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999841417490745	WITHOUT_CLASSIFICATION	1.5858250925479752E-5	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999858154128818	WITHOUT_CLASSIFICATION	1.4184587118216108E-5	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999897140304468	WITHOUT_CLASSIFICATION	1.0285969553246766E-5	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999888304994529	WITHOUT_CLASSIFICATION	1.1169500547203144E-5	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999906178631803	WITHOUT_CLASSIFICATION	9.382136819717735E-6	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999876603910273	WITHOUT_CLASSIFICATION	1.2339608972808088E-5	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999857157653403	WITHOUT_CLASSIFICATION	1.4284234659510235E-5	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999890764368866	WITHOUT_CLASSIFICATION	1.0923563113343542E-5	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.9999787760960906	WITHOUT_CLASSIFICATION	2.1223903909399495E-5	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999871526204912	WITHOUT_CLASSIFICATION	1.2847379508844661E-5	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999902473936672	WITHOUT_CLASSIFICATION	9.752606332874382E-6	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999865322940933	WITHOUT_CLASSIFICATION	1.3467705906703869E-5	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999823979962983	WITHOUT_CLASSIFICATION	1.760200370175669E-5	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999852648878984	WITHOUT_CLASSIFICATION	1.473511210157508E-5	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999809925013637	WITHOUT_CLASSIFICATION	1.9007498636182728E-5	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999912464610305	WITHOUT_CLASSIFICATION	8.753538969407455E-6	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999911846236689	WITHOUT_CLASSIFICATION	8.815376331162001E-6	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.999990329012145	WITHOUT_CLASSIFICATION	9.670987855038299E-6	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999877313329616	WITHOUT_CLASSIFICATION	1.2268667038459527E-5	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999885261352832	WITHOUT_CLASSIFICATION	1.1473864716747979E-5	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999766256439991	WITHOUT_CLASSIFICATION	2.3374356000793867E-5	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.999981955641389	WITHOUT_CLASSIFICATION	1.8044358610930863E-5	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999849368185945	WITHOUT_CLASSIFICATION	1.5063181405659696E-5	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999955293947974	WITHOUT_CLASSIFICATION	4.4706052025846146E-6	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999919821967989	WITHOUT_CLASSIFICATION	8.017803201085249E-6	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999887214676226	WITHOUT_CLASSIFICATION	1.1278532377421198E-5	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999904754352106	WITHOUT_CLASSIFICATION	9.524564789420589E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.999976242040083	WITHOUT_CLASSIFICATION	2.3757959917005478E-5	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999823749463965	WITHOUT_CLASSIFICATION	1.7625053603422236E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999826218657653	WITHOUT_CLASSIFICATION	1.7378134234812595E-5	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999957576067344	WITHOUT_CLASSIFICATION	4.242393265613735E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.999994443916027	WITHOUT_CLASSIFICATION	5.5560839729904965E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999889866922252	WITHOUT_CLASSIFICATION	1.1013307774741251E-5	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999885424894425	WITHOUT_CLASSIFICATION	1.1457510557568588E-5	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999958121260435	WITHOUT_CLASSIFICATION	4.187873956559932E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999961671958574	WITHOUT_CLASSIFICATION	3.832804142611472E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999935483414898	WITHOUT_CLASSIFICATION	6.451658510136947E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999944805691401	WITHOUT_CLASSIFICATION	5.519430859953049E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999928143028325	WITHOUT_CLASSIFICATION	7.1856971675399954E-6	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999853287582312	WITHOUT_CLASSIFICATION	1.4671241768752688E-5	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999832891575519	WITHOUT_CLASSIFICATION	1.671084244804067E-5	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999932994627129	WITHOUT_CLASSIFICATION	6.700537287196249E-6	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999913961031591	WITHOUT_CLASSIFICATION	8.603896840838373E-6	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999846430989274	WITHOUT_CLASSIFICATION	1.5356901072498683E-5	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999929338953919	WITHOUT_CLASSIFICATION	7.066104608181226E-6	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999901014128136	WITHOUT_CLASSIFICATION	9.8985871863635E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999893185765353	WITHOUT_CLASSIFICATION	1.0681423464768081E-5	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999880975842407	WITHOUT_CLASSIFICATION	1.1902415759338014E-5	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999887027686604	WITHOUT_CLASSIFICATION	1.1297231339591703E-5	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999925688008279	WITHOUT_CLASSIFICATION	7.4311991721712955E-6	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999887538739584	WITHOUT_CLASSIFICATION	1.1246126041607346E-5	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999904678444094	WITHOUT_CLASSIFICATION	9.53215559050224E-6	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999855030595668	WITHOUT_CLASSIFICATION	1.4496940433180057E-5	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999929249679137	WITHOUT_CLASSIFICATION	7.075032086302835E-6	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999887712856727	WITHOUT_CLASSIFICATION	1.1228714327312773E-5	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999797143685152	WITHOUT_CLASSIFICATION	2.0285631484815024E-5	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999801785593857	WITHOUT_CLASSIFICATION	1.982144061426897E-5	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999891981773167	WITHOUT_CLASSIFICATION	1.0801822683334519E-5	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999906030056901	WITHOUT_CLASSIFICATION	9.396994309893274E-6	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999915633132973	WITHOUT_CLASSIFICATION	8.436686702712053E-6	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999904528910575	WITHOUT_CLASSIFICATION	9.54710894246182E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999925803796453	WITHOUT_CLASSIFICATION	7.419620354610296E-6	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999941238878639	WITHOUT_CLASSIFICATION	5.876112136105145E-6	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.999991538110404	WITHOUT_CLASSIFICATION	8.461889596101748E-6	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999876929132379	WITHOUT_CLASSIFICATION	1.2307086762096928E-5	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999884207821196	WITHOUT_CLASSIFICATION	1.1579217880405441E-5	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999943946936349	WITHOUT_CLASSIFICATION	5.605306365043299E-6	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999946697560764	WITHOUT_CLASSIFICATION	5.330243923580131E-6	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999908332069011	WITHOUT_CLASSIFICATION	9.166793098984447E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999882480427517	WITHOUT_CLASSIFICATION	1.1751957248260452E-5	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999919648241395	WITHOUT_CLASSIFICATION	8.035175860497209E-6	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999939763644008	WITHOUT_CLASSIFICATION	6.023635599100944E-6	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999926884279757	WITHOUT_CLASSIFICATION	7.311572024325558E-6	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999942747083458	WITHOUT_CLASSIFICATION	5.725291654270404E-6	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999946425162703	WITHOUT_CLASSIFICATION	5.357483729630165E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999940443027446	WITHOUT_CLASSIFICATION	5.955697255431391E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999899049420496	WITHOUT_CLASSIFICATION	1.0095057950315945E-5	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.999991623920496	WITHOUT_CLASSIFICATION	8.376079503858931E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999850858148415	WITHOUT_CLASSIFICATION	1.4914185158542415E-5	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999912688172662	WITHOUT_CLASSIFICATION	8.731182733897334E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999910382723237	WITHOUT_CLASSIFICATION	8.961727676342688E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999893848079217	WITHOUT_CLASSIFICATION	1.061519207842412E-5	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999889390280137	WITHOUT_CLASSIFICATION	1.1060971986374967E-5	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999938048477237	WITHOUT_CLASSIFICATION	6.195152276332392E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999862181621831	WITHOUT_CLASSIFICATION	1.37818378167733E-5	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999827068590377	WITHOUT_CLASSIFICATION	1.7293140962279903E-5	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999957762997683	WITHOUT_CLASSIFICATION	4.223700231668662E-6	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999923138207186	WITHOUT_CLASSIFICATION	7.686179281456533E-6	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999914103959125	WITHOUT_CLASSIFICATION	8.589604087326004E-6	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.9999931811550392	WITHOUT_CLASSIFICATION	6.818844960741374E-6	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999933252175542	WITHOUT_CLASSIFICATION	6.674782445754886E-6	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999933269799015	WITHOUT_CLASSIFICATION	6.673020098462964E-6	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999915633919702	WITHOUT_CLASSIFICATION	8.436608029946448E-6	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999811443179497	WITHOUT_CLASSIFICATION	1.8855682050250396E-5	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999907949738711	WITHOUT_CLASSIFICATION	9.205026128835853E-6	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999881259945	WITHOUT_CLASSIFICATION	1.1874005499995716E-5	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999933681840307	WITHOUT_CLASSIFICATION	6.631815969381647E-6	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999920041134421	WITHOUT_CLASSIFICATION	7.995886557788718E-6	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999940835032378	WITHOUT_CLASSIFICATION	5.916496762125234E-6	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999937703543277	WITHOUT_CLASSIFICATION	6.229645672295018E-6	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.999993225885793	WITHOUT_CLASSIFICATION	6.774114207061816E-6	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999885836125577	WITHOUT_CLASSIFICATION	1.1416387442250109E-5	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999954935998919	WITHOUT_CLASSIFICATION	4.506400108091212E-6	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999886862609559	WITHOUT_CLASSIFICATION	1.1313739044081236E-5	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999940187270291	WITHOUT_CLASSIFICATION	5.981272970891247E-6	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999933308719742	WITHOUT_CLASSIFICATION	6.6691280258044125E-6	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.999989521491839	WITHOUT_CLASSIFICATION	1.0478508160959086E-5	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999897391349386	WITHOUT_CLASSIFICATION	1.0260865061395231E-5	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999912497050127	WITHOUT_CLASSIFICATION	8.750294987284E-6	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999899375940625	WITHOUT_CLASSIFICATION	1.0062405937494886E-5	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999863403190739	WITHOUT_CLASSIFICATION	1.3659680926108066E-5	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999870280844793	WITHOUT_CLASSIFICATION	1.2971915520629451E-5	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999921384566985	WITHOUT_CLASSIFICATION	7.861543301466038E-6	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999853201480454	WITHOUT_CLASSIFICATION	1.4679851954540142E-5	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999742683524845	WITHOUT_CLASSIFICATION	2.5731647515588265E-5	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999826448466198	WITHOUT_CLASSIFICATION	1.735515338020962E-5	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999798833175726	WITHOUT_CLASSIFICATION	2.011668242729986E-5	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999836078890483	WITHOUT_CLASSIFICATION	1.6392110951797525E-5	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.999974235615427	WITHOUT_CLASSIFICATION	2.5764384573040892E-5	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999858096250691	WITHOUT_CLASSIFICATION	1.4190374930843352E-5	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.9999897579849589	WITHOUT_CLASSIFICATION	1.0242015041017632E-5	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999817321694963	WITHOUT_CLASSIFICATION	1.8267830503745656E-5	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.999976604021508	WITHOUT_CLASSIFICATION	2.3395978491953118E-5	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999910774197681	WITHOUT_CLASSIFICATION	8.922580231838563E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999944831902139	WITHOUT_CLASSIFICATION	5.516809786134455E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999915300556246	WITHOUT_CLASSIFICATION	8.469944375487685E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999964202531786	WITHOUT_CLASSIFICATION	3.5797468214722638E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.999993074983205	WITHOUT_CLASSIFICATION	6.925016795062586E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999929579510638	WITHOUT_CLASSIFICATION	7.042048936214747E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999929116789309	WITHOUT_CLASSIFICATION	7.088321069128367E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999941794110111	WITHOUT_CLASSIFICATION	5.820588988999851E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999964879121024	WITHOUT_CLASSIFICATION	3.5120878976538284E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999937464946067	WITHOUT_CLASSIFICATION	6.253505393393479E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999936660487867	WITHOUT_CLASSIFICATION	6.333951213297725E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999922308969331	WITHOUT_CLASSIFICATION	7.769103066941137E-6	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999929179810678	WITHOUT_CLASSIFICATION	7.082018932245154E-6	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.999988193634404	WITHOUT_CLASSIFICATION	1.180636559588268E-5	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.99999126395897	WITHOUT_CLASSIFICATION	8.736041030095309E-6	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999899407758372	WITHOUT_CLASSIFICATION	1.0059224162701007E-5	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999738048719437	WITHOUT_CLASSIFICATION	2.619512805636448E-5	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.999990259098399	WITHOUT_CLASSIFICATION	9.740901600858213E-6	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999903562936279	WITHOUT_CLASSIFICATION	9.643706372036917E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999947402119813	WITHOUT_CLASSIFICATION	5.259788018687938E-6	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999946885618826	WITHOUT_CLASSIFICATION	5.311438117476164E-6	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.999993965464338	WITHOUT_CLASSIFICATION	6.034535661982908E-6	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999901978112238	WITHOUT_CLASSIFICATION	9.802188776283747E-6	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999908791130477	WITHOUT_CLASSIFICATION	9.120886952349332E-6	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999876447067864	WITHOUT_CLASSIFICATION	1.235529321364005E-5	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999919698728845	WITHOUT_CLASSIFICATION	8.03012711540809E-6	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999935808567527	WITHOUT_CLASSIFICATION	6.419143247288529E-6	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999887820965974	WITHOUT_CLASSIFICATION	1.1217903402690849E-5	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999920901910994	WITHOUT_CLASSIFICATION	7.909808900629476E-6	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999963952251968	WITHOUT_CLASSIFICATION	3.604774803225642E-6	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999936599826674	WITHOUT_CLASSIFICATION	6.34001733246398E-6	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999887587118018	WITHOUT_CLASSIFICATION	1.1241288198172329E-5	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999891970025985	WITHOUT_CLASSIFICATION	1.0802997401452861E-5	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999943514563839	WITHOUT_CLASSIFICATION	5.648543616034719E-6	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999918675602921	WITHOUT_CLASSIFICATION	8.13243970791101E-6	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999899147437453	WITHOUT_CLASSIFICATION	1.0085256254694197E-5	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999935305483794	WITHOUT_CLASSIFICATION	6.4694516206294555E-6	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999926703589149	WITHOUT_CLASSIFICATION	7.32964108504315E-6	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999946285897001	WITHOUT_CLASSIFICATION	5.371410299849447E-6	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.999991214347066	WITHOUT_CLASSIFICATION	8.785652934085578E-6	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.999996724261348	WITHOUT_CLASSIFICATION	3.275738651913584E-6	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999914062274885	WITHOUT_CLASSIFICATION	8.593772511552457E-6	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999936206930824	WITHOUT_CLASSIFICATION	6.379306917597514E-6	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999939328598438	WITHOUT_CLASSIFICATION	6.067140156185511E-6	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999960111499823	WITHOUT_CLASSIFICATION	3.988850017640847E-6	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999936184125794	WITHOUT_CLASSIFICATION	6.3815874206135955E-6	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999943855421819	WITHOUT_CLASSIFICATION	5.614457818117431E-6	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999921162301605	WITHOUT_CLASSIFICATION	7.883769839496344E-6	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999938309645912	WITHOUT_CLASSIFICATION	6.169035408776321E-6	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999863338879522	WITHOUT_CLASSIFICATION	1.3666112047807257E-5	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999867533878801	WITHOUT_CLASSIFICATION	1.3246612119836284E-5	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999893011017449	WITHOUT_CLASSIFICATION	1.0698898255132097E-5	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999901610304948	WITHOUT_CLASSIFICATION	9.83896950514716E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999895457719831	WITHOUT_CLASSIFICATION	1.0454228016886788E-5	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999893689506579	WITHOUT_CLASSIFICATION	1.0631049342006818E-5	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999927118740155	WITHOUT_CLASSIFICATION	7.288125984441116E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999810670254276	WITHOUT_CLASSIFICATION	1.8932974572385914E-5	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999926754255737	WITHOUT_CLASSIFICATION	7.324574426258594E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999885013711088	WITHOUT_CLASSIFICATION	1.1498628891213964E-5	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999901247837847	WITHOUT_CLASSIFICATION	9.875216215240837E-6	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999887832702365	WITHOUT_CLASSIFICATION	1.1216729763379951E-5	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999871553750376	WITHOUT_CLASSIFICATION	1.2844624962426737E-5	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9999879805423236	WITHOUT_CLASSIFICATION	1.2019457676321586E-5	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999866388155582	WITHOUT_CLASSIFICATION	1.3361184441964786E-5	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999855970094533	WITHOUT_CLASSIFICATION	1.4402990546715581E-5	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999839293796419	WITHOUT_CLASSIFICATION	1.6070620358143568E-5	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999888095584913	WITHOUT_CLASSIFICATION	1.1190441508595467E-5	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999897050722272	WITHOUT_CLASSIFICATION	1.0294927772771042E-5	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999825498888595	WITHOUT_CLASSIFICATION	1.7450111140417176E-5	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.999983369588287	WITHOUT_CLASSIFICATION	1.6630411712959534E-5	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999827267451681	WITHOUT_CLASSIFICATION	1.7273254831908026E-5	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.999983436340548	WITHOUT_CLASSIFICATION	1.6563659451991648E-5	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.999978633785386	WITHOUT_CLASSIFICATION	2.136621461396056E-5	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999865925624396	WITHOUT_CLASSIFICATION	1.3407437560473611E-5	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999892131890361	WITHOUT_CLASSIFICATION	1.078681096385802E-5	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999846277044581	WITHOUT_CLASSIFICATION	1.5372295541981446E-5	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999842972614742	WITHOUT_CLASSIFICATION	1.5702738525802517E-5	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999882372420532	WITHOUT_CLASSIFICATION	1.1762757946784834E-5	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999793852450437	WITHOUT_CLASSIFICATION	2.061475495636707E-5	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999882402555019	WITHOUT_CLASSIFICATION	1.1759744497983767E-5	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.999990045084056	WITHOUT_CLASSIFICATION	9.954915944063815E-6	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999907104140106	WITHOUT_CLASSIFICATION	9.289585989358312E-6	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.999988471722843	WITHOUT_CLASSIFICATION	1.152827715714786E-5	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999779119426659	WITHOUT_CLASSIFICATION	2.208805733404494E-5	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999772492254693	WITHOUT_CLASSIFICATION	2.2750774530680326E-5	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999918752467111	WITHOUT_CLASSIFICATION	8.124753288860875E-6	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999862283578033	WITHOUT_CLASSIFICATION	1.3771642196683634E-5	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.99998784354396	WITHOUT_CLASSIFICATION	1.2156456040056092E-5	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999849853121093	WITHOUT_CLASSIFICATION	1.5014687890594124E-5	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999862656041972	WITHOUT_CLASSIFICATION	1.3734395802636144E-5	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999744419715473	WITHOUT_CLASSIFICATION	2.5558028452765732E-5	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999921798450665	WITHOUT_CLASSIFICATION	7.820154933492581E-6	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.999987663488622	WITHOUT_CLASSIFICATION	1.2336511377965686E-5	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999911057211737	WITHOUT_CLASSIFICATION	8.894278826300646E-6	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999876205489077	WITHOUT_CLASSIFICATION	1.237945109246701E-5	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999914118430261	WITHOUT_CLASSIFICATION	8.588156973886446E-6	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999915655321086	WITHOUT_CLASSIFICATION	8.434467891401929E-6	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999849133524512	WITHOUT_CLASSIFICATION	1.5086647548713992E-5	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999870109599126	WITHOUT_CLASSIFICATION	1.2989040087462435E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999859717762531	WITHOUT_CLASSIFICATION	1.4028223746917654E-5	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999852807157017	WITHOUT_CLASSIFICATION	1.4719284298324346E-5	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999869325341307	WITHOUT_CLASSIFICATION	1.3067465869354797E-5	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999921617766734	WITHOUT_CLASSIFICATION	7.838223326698282E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.999989626517118	WITHOUT_CLASSIFICATION	1.0373482882137066E-5	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999929890421061	WITHOUT_CLASSIFICATION	7.010957893831748E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999934364361219	WITHOUT_CLASSIFICATION	6.563563878164808E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999878983933431	WITHOUT_CLASSIFICATION	1.2101606656975362E-5	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999933807131626	WITHOUT_CLASSIFICATION	6.619286837483758E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999955273501512	WITHOUT_CLASSIFICATION	4.472649848862235E-6	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999884652113442	WITHOUT_CLASSIFICATION	1.1534788655711143E-5	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999938294577633	WITHOUT_CLASSIFICATION	6.1705422366571146E-6	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999921867080586	WITHOUT_CLASSIFICATION	7.813291941467689E-6	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999890985438753	WITHOUT_CLASSIFICATION	1.0901456124576754E-5	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999813159059552	WITHOUT_CLASSIFICATION	1.868409404486473E-5	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999759142851666	WITHOUT_CLASSIFICATION	2.4085714833268093E-5	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.999986579039931	WITHOUT_CLASSIFICATION	1.342096006896475E-5	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999863285357079	WITHOUT_CLASSIFICATION	1.3671464292050683E-5	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999885813631189	WITHOUT_CLASSIFICATION	1.1418636881230228E-5	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999893673848184	WITHOUT_CLASSIFICATION	1.0632615181681432E-5	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.99997623931975	WITHOUT_CLASSIFICATION	2.376068024997135E-5	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999909841398352	WITHOUT_CLASSIFICATION	9.015860164809713E-6	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999947271676051	WITHOUT_CLASSIFICATION	5.272832394977275E-6	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999931497338875	WITHOUT_CLASSIFICATION	6.850266112383257E-6	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999906452022297	WITHOUT_CLASSIFICATION	9.35479777034886E-6	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999949751115983	WITHOUT_CLASSIFICATION	5.024888401668029E-6	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999882262578714	WITHOUT_CLASSIFICATION	1.1773742128717861E-5	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999876549512547	WITHOUT_CLASSIFICATION	1.2345048745333404E-5	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999895405520284	WITHOUT_CLASSIFICATION	1.0459447971530297E-5	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999872363394925	WITHOUT_CLASSIFICATION	1.2763660507512616E-5	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999871861709906	WITHOUT_CLASSIFICATION	1.2813829009399272E-5	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.99999254017948	WITHOUT_CLASSIFICATION	7.459820519915587E-6	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999892708841788	WITHOUT_CLASSIFICATION	1.0729115821185723E-5	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999896220246189	WITHOUT_CLASSIFICATION	1.0377975381008458E-5	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999898567399205	WITHOUT_CLASSIFICATION	1.0143260079435933E-5	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999954041741614	WITHOUT_CLASSIFICATION	4.595825838492306E-6	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999922639711502	WITHOUT_CLASSIFICATION	7.736028849961355E-6	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999933817817194	WITHOUT_CLASSIFICATION	6.618218280630966E-6	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999896865994712	WITHOUT_CLASSIFICATION	1.0313400528836435E-5	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999908277940933	WITHOUT_CLASSIFICATION	9.172205906738975E-6	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999949350565571	WITHOUT_CLASSIFICATION	5.064943442878913E-6	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999839453488334	WITHOUT_CLASSIFICATION	1.6054651166636893E-5	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999873745864354	WITHOUT_CLASSIFICATION	1.262541356473545E-5	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.9999896692045585	WITHOUT_CLASSIFICATION	1.0330795441601636E-5	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999918562085839	WITHOUT_CLASSIFICATION	8.143791416181003E-6	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999937595496452	WITHOUT_CLASSIFICATION	6.240450354733886E-6	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999945491198087	WITHOUT_CLASSIFICATION	5.450880191334818E-6	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999895201921315	WITHOUT_CLASSIFICATION	1.0479807868623233E-5	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999923136214992	WITHOUT_CLASSIFICATION	7.686378500743078E-6	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999030566626185	WITHOUT_CLASSIFICATION	9.694333738155627E-5	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998869675980414	WITHOUT_CLASSIFICATION	1.1303240195855295E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999997142325787	WITHOUT_CLASSIFICATION	2.8576742126436344E-7	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999998656203332	WITHOUT_CLASSIFICATION	1.343796668699287E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9992048466450447	WITHOUT_CLASSIFICATION	7.951533549552605E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999945282112342	WITHOUT_CLASSIFICATION	5.471788765852405E-6	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9993227319677938	WITHOUT_CLASSIFICATION	6.772680322063522E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999555829352891	WITHOUT_CLASSIFICATION	4.4417064711007235E-5	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9999909349717033	WITHOUT_CLASSIFICATION	9.065028296668552E-6	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.999988352225609	WITHOUT_CLASSIFICATION	1.1647774391072873E-5	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999961333808008	WITHOUT_CLASSIFICATION	3.866619199106923E-6	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999941193860256	WITHOUT_CLASSIFICATION	5.8806139744648146E-6	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.99999108834551	WITHOUT_CLASSIFICATION	8.911654490027881E-6	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999922754143677	WITHOUT_CLASSIFICATION	7.724585632198373E-6	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999923307640057	WITHOUT_CLASSIFICATION	7.669235994270818E-6	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999879977471082	WITHOUT_CLASSIFICATION	1.2002252891913837E-5	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.999988871614364	WITHOUT_CLASSIFICATION	1.1128385635932378E-5	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999916388417431	WITHOUT_CLASSIFICATION	8.361158256849721E-6	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999835746759056	WITHOUT_CLASSIFICATION	1.6425324094458244E-5	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999858801122514	WITHOUT_CLASSIFICATION	1.4119887748526878E-5	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999911714398744	WITHOUT_CLASSIFICATION	8.828560125533203E-6	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999886551297421	WITHOUT_CLASSIFICATION	1.1344870257888319E-5	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999874789070969	WITHOUT_CLASSIFICATION	1.2521092903067157E-5	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999720192082515	WITHOUT_CLASSIFICATION	2.798079174855613E-5	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.999987731053898	WITHOUT_CLASSIFICATION	1.2268946101961956E-5	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999941511732127	WITHOUT_CLASSIFICATION	5.848826787267622E-6	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999938930497504	WITHOUT_CLASSIFICATION	6.106950249618442E-6	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.999988635143706	WITHOUT_CLASSIFICATION	1.1364856294048165E-5	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999973090421438	WITHOUT_CLASSIFICATION	2.6909578561782074E-6	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999919298840443	WITHOUT_CLASSIFICATION	8.0701159556417E-6	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999980812967818	WITHOUT_CLASSIFICATION	1.9187032182440573E-6	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999784093376125	WITHOUT_CLASSIFICATION	2.159066238746606E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999961884743424	WITHOUT_CLASSIFICATION	3.811525657773414E-6	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9987387374474145	WITHOUT_CLASSIFICATION	0.0012612625525855563	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9995077722748775	WITHOUT_CLASSIFICATION	4.922277251225347E-4	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999981928377113	WITHOUT_CLASSIFICATION	1.8071622888287792E-6	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999882112797837	WITHOUT_CLASSIFICATION	1.1788720216377574E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999867615887	WITHOUT_CLASSIFICATION	1.3238411211576635E-8	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999620214327406	WITHOUT_CLASSIFICATION	3.797856725933825E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999811300826058	WITHOUT_CLASSIFICATION	1.8869917394247498E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999811300826058	WITHOUT_CLASSIFICATION	1.8869917394247498E-5	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.6123664165403445	DESIGN	0.38763358345965554	WITHOUT_CLASSIFICATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.999999359299456	WITHOUT_CLASSIFICATION	6.407005439113244E-7	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999982273081633	WITHOUT_CLASSIFICATION	1.7726918365647067E-6	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999751148123142	WITHOUT_CLASSIFICATION	2.488518768587429E-5	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9989936594645449	WITHOUT_CLASSIFICATION	0.0010063405354551408	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999982105973733	WITHOUT_CLASSIFICATION	1.7894026267407294E-6	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.99994992932776	WITHOUT_CLASSIFICATION	5.007067224017194E-5	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999996666563802	WITHOUT_CLASSIFICATION	3.333436197788905E-7	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999918734911688	WITHOUT_CLASSIFICATION	8.126508831272574E-6	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999995898127226	WITHOUT_CLASSIFICATION	4.1018727742184455E-7	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9870528799026168	WITHOUT_CLASSIFICATION	0.012947120097383207	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9972172947104228	WITHOUT_CLASSIFICATION	0.0027827052895771772	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999934653762915	WITHOUT_CLASSIFICATION	6.534623708580088E-6	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9996571327987934	WITHOUT_CLASSIFICATION	3.4286720120648556E-4	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999998841594403	WITHOUT_CLASSIFICATION	1.1584055969861157E-6	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999998841594403	WITHOUT_CLASSIFICATION	1.1584055969861157E-6	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999157809960182	WITHOUT_CLASSIFICATION	8.421900398187988E-5	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999984885330514	WITHOUT_CLASSIFICATION	1.5114669485452245E-6	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999264075343	WITHOUT_CLASSIFICATION	7.359246563414922E-8	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9995013587107551	WITHOUT_CLASSIFICATION	4.986412892448866E-4	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999302184117427	WITHOUT_CLASSIFICATION	6.97815882572332E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999522957657	WITHOUT_CLASSIFICATION	4.770423430248433E-7	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999954564656175	WITHOUT_CLASSIFICATION	4.543534382447902E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999522957657	WITHOUT_CLASSIFICATION	4.770423430248433E-7	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9995982347557154	WITHOUT_CLASSIFICATION	4.0176524428467793E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9960851974105182	WITHOUT_CLASSIFICATION	0.0039148025894817935	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.8995803862346387	WITHOUT_CLASSIFICATION	0.10041961376536133	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9260625343852139	WITHOUT_CLASSIFICATION	0.07393746561478608	DESIGN
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9994502891661048	WITHOUT_CLASSIFICATION	5.49710833895205E-4	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9997633064729485	WITHOUT_CLASSIFICATION	2.366935270515151E-4	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999742408614917	WITHOUT_CLASSIFICATION	2.5759138508370224E-5	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998807044201335	WITHOUT_CLASSIFICATION	1.1929557986646632E-4	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998666139320717	WITHOUT_CLASSIFICATION	1.3338606792841413E-4	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9778536270204653	DESIGN	0.022146372979534673	WITHOUT_CLASSIFICATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9864064242732301	DESIGN	0.013593575726769927	WITHOUT_CLASSIFICATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999957464343784	WITHOUT_CLASSIFICATION	4.253565621602435E-6	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999978859843963	WITHOUT_CLASSIFICATION	2.1140156036966935E-6	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999965998743784	WITHOUT_CLASSIFICATION	3.4001256215100946E-6	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999864882131	WITHOUT_CLASSIFICATION	1.3511786860552498E-8	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999864882131	WITHOUT_CLASSIFICATION	1.3511786860552498E-8	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9247030121626545	WITHOUT_CLASSIFICATION	0.07529698783734554	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999966464253965	WITHOUT_CLASSIFICATION	3.3535746033945567E-6	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9972761674147458	WITHOUT_CLASSIFICATION	0.0027238325852541644	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999577691399846	WITHOUT_CLASSIFICATION	4.223086001539514E-5	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999888034530963	WITHOUT_CLASSIFICATION	1.1196546903639566E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999522957657	WITHOUT_CLASSIFICATION	4.770423430248433E-7	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.990204829575003	WITHOUT_CLASSIFICATION	0.009795170424997062	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999971927238356	WITHOUT_CLASSIFICATION	2.807276164308732E-6	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999992035563623	WITHOUT_CLASSIFICATION	7.96443637821889E-7	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9815279466594353	WITHOUT_CLASSIFICATION	0.01847205334056469	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999996260558737	WITHOUT_CLASSIFICATION	3.73944126377956E-7	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999730429123325	WITHOUT_CLASSIFICATION	2.6957087667606125E-5	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999342254539451	WITHOUT_CLASSIFICATION	6.577454605494492E-5	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999571444802507	WITHOUT_CLASSIFICATION	4.285551974936666E-5	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.8129529781069794	WITHOUT_CLASSIFICATION	0.18704702189302067	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9579313773316364	WITHOUT_CLASSIFICATION	0.042068622668363635	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999998847129704	WITHOUT_CLASSIFICATION	1.1528702966248567E-7	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999431961556282	WITHOUT_CLASSIFICATION	5.680384437176845E-5	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9961597176677263	WITHOUT_CLASSIFICATION	0.0038402823322737263	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999984927617879	WITHOUT_CLASSIFICATION	1.5072382122111887E-6	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9777301505286359	WITHOUT_CLASSIFICATION	0.022269849471364123	DESIGN
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999997760998525	WITHOUT_CLASSIFICATION	2.2390014753186103E-7	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.99999919556405	WITHOUT_CLASSIFICATION	8.044359500643049E-7	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9999861026434278	WITHOUT_CLASSIFICATION	1.3897356572113318E-5	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.999999908935912	WITHOUT_CLASSIFICATION	9.106408813539713E-8	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999971151273702	WITHOUT_CLASSIFICATION	2.884872629842586E-6	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999997483812307	WITHOUT_CLASSIFICATION	2.5161876928068386E-7	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9998925181037849	WITHOUT_CLASSIFICATION	1.0748189621502522E-4	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9993183442234326	WITHOUT_CLASSIFICATION	6.816557765674862E-4	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999993797020723	WITHOUT_CLASSIFICATION	6.202979276835584E-7	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999945369404104	WITHOUT_CLASSIFICATION	5.463059589612471E-6	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999525769008529	WITHOUT_CLASSIFICATION	4.7423099147017E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9963072856385302	WITHOUT_CLASSIFICATION	0.0036927143614697865	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9996211823080391	WITHOUT_CLASSIFICATION	3.788176919608361E-4	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9934592075067519	WITHOUT_CLASSIFICATION	0.006540792493248194	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999989611883542	WITHOUT_CLASSIFICATION	1.0388116458664985E-6	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.999998986456708	WITHOUT_CLASSIFICATION	1.013543292023571E-6	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999993374830443	WITHOUT_CLASSIFICATION	6.625169556789782E-7	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.999995766990813	WITHOUT_CLASSIFICATION	4.233009186918669E-6	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9998117172224367	WITHOUT_CLASSIFICATION	1.8828277756321722E-4	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9997451623519003	WITHOUT_CLASSIFICATION	2.5483764809973745E-4	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9997952692600923	WITHOUT_CLASSIFICATION	2.0473073990778963E-4	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.99999976226912	WITHOUT_CLASSIFICATION	2.3773088000388888E-7	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9999998955178954	WITHOUT_CLASSIFICATION	1.0448210463924255E-7	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9998992239261283	WITHOUT_CLASSIFICATION	1.0077607387162493E-4	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999950571515667	WITHOUT_CLASSIFICATION	4.942848433309823E-6	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999555829352891	WITHOUT_CLASSIFICATION	4.4417064711007235E-5	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9997858695018357	WITHOUT_CLASSIFICATION	2.1413049816446003E-4	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999996903283217	WITHOUT_CLASSIFICATION	3.096716783955586E-7	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999922531564072	WITHOUT_CLASSIFICATION	7.746843592765502E-6	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999986219566218	WITHOUT_CLASSIFICATION	1.3780433781962076E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9960851974105182	WITHOUT_CLASSIFICATION	0.0039148025894817935	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9262211296292634	WITHOUT_CLASSIFICATION	0.07377887037073655	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.5927232970446409	DESIGN	0.4072767029553592	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9950302123782955	WITHOUT_CLASSIFICATION	0.004969787621704531	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999560749349282	WITHOUT_CLASSIFICATION	4.392506507184478E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999560749349282	WITHOUT_CLASSIFICATION	4.392506507184478E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9996243345423927	WITHOUT_CLASSIFICATION	3.756654576072228E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9996243345423927	WITHOUT_CLASSIFICATION	3.756654576072228E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9996243345423927	WITHOUT_CLASSIFICATION	3.756654576072228E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999996733847718	WITHOUT_CLASSIFICATION	3.266152282269889E-7	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999996733847718	WITHOUT_CLASSIFICATION	3.266152282269889E-7	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999998973485742	WITHOUT_CLASSIFICATION	1.0265142578470674E-7	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999998973485742	WITHOUT_CLASSIFICATION	1.0265142578470674E-7	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999995508633174	WITHOUT_CLASSIFICATION	4.491366825549348E-7	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.999988637694757	WITHOUT_CLASSIFICATION	1.1362305243004569E-5	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999978236979044	WITHOUT_CLASSIFICATION	2.176302095532091E-6	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999978236979044	WITHOUT_CLASSIFICATION	2.176302095532091E-6	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999856110319161	WITHOUT_CLASSIFICATION	1.4388968083779237E-5	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999064190650478	WITHOUT_CLASSIFICATION	9.358093495219045E-5	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999999703636242	WITHOUT_CLASSIFICATION	2.9636375898967348E-8	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998644814792458	WITHOUT_CLASSIFICATION	1.3551852075421137E-4	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997930097510912	WITHOUT_CLASSIFICATION	2.069902489088055E-4	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.999129768162911	WITHOUT_CLASSIFICATION	8.702318370891521E-4	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999913453048298	WITHOUT_CLASSIFICATION	8.654695170241949E-6	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999989886777562	WITHOUT_CLASSIFICATION	1.0113222438078793E-6	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.999997476783224	WITHOUT_CLASSIFICATION	2.523216776061672E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999990712529822	WITHOUT_CLASSIFICATION	9.287470177256524E-7	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9998639757800529	WITHOUT_CLASSIFICATION	1.3602421994705257E-4	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.999998731023111	WITHOUT_CLASSIFICATION	1.2689768890364704E-6	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.9999801909310093	WITHOUT_CLASSIFICATION	1.980906899066106E-5	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9999934171871029	WITHOUT_CLASSIFICATION	6.582812897109353E-6	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999996497618996	WITHOUT_CLASSIFICATION	3.5023810043551304E-7	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9990536018657581	WITHOUT_CLASSIFICATION	9.463981342419828E-4	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999271962511573	WITHOUT_CLASSIFICATION	7.28037488426228E-5	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999949731829914	WITHOUT_CLASSIFICATION	5.026817008683108E-6	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999864927640782	WITHOUT_CLASSIFICATION	1.3507235921713124E-5	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9294930009101763	WITHOUT_CLASSIFICATION	0.07050699908982366	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999999500281244	WITHOUT_CLASSIFICATION	4.997187560207833E-7	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999987903991743	WITHOUT_CLASSIFICATION	1.20960082576641E-6	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999997027152594	WITHOUT_CLASSIFICATION	2.9728474061332445E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999846011929618	WITHOUT_CLASSIFICATION	1.5398807038196454E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999968442971447	WITHOUT_CLASSIFICATION	3.155702855197346E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999969460722782	WITHOUT_CLASSIFICATION	3.053927721798322E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999964043629378	WITHOUT_CLASSIFICATION	3.595637062075323E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999904124522049	WITHOUT_CLASSIFICATION	9.587547795071004E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999868721080811	WITHOUT_CLASSIFICATION	1.3127891918778056E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999997309684373	WITHOUT_CLASSIFICATION	2.6903156269129686E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999973964502593	WITHOUT_CLASSIFICATION	2.6035497406126294E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999953382716356	WITHOUT_CLASSIFICATION	4.66172836449194E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990446724938	WITHOUT_CLASSIFICATION	9.55327506138317E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999998957411137	WITHOUT_CLASSIFICATION	1.0425888630692425E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990446724938	WITHOUT_CLASSIFICATION	9.55327506138317E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990446724938	WITHOUT_CLASSIFICATION	9.55327506138317E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990446724938	WITHOUT_CLASSIFICATION	9.55327506138317E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990446724938	WITHOUT_CLASSIFICATION	9.55327506138317E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990446724938	WITHOUT_CLASSIFICATION	9.55327506138317E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990446724938	WITHOUT_CLASSIFICATION	9.55327506138317E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999998957411137	WITHOUT_CLASSIFICATION	1.0425888630692425E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999998957411137	WITHOUT_CLASSIFICATION	1.0425888630692425E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999998957411137	WITHOUT_CLASSIFICATION	1.0425888630692425E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999998957411137	WITHOUT_CLASSIFICATION	1.0425888630692425E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999998957411137	WITHOUT_CLASSIFICATION	1.0425888630692425E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999998957411137	WITHOUT_CLASSIFICATION	1.0425888630692425E-6	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9992960495933936	WITHOUT_CLASSIFICATION	7.039504066063539E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999972675491757	WITHOUT_CLASSIFICATION	2.732450824299361E-6	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999939925405903	WITHOUT_CLASSIFICATION	6.007459409716229E-6	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999505648136299	WITHOUT_CLASSIFICATION	4.9435186370151E-5	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999974417543309	WITHOUT_CLASSIFICATION	2.5582456690295118E-6	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999724564897529	WITHOUT_CLASSIFICATION	2.754351024715099E-5	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.999999892623451	WITHOUT_CLASSIFICATION	1.0737654888485258E-7	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999957896647244	WITHOUT_CLASSIFICATION	4.2103352755993944E-5	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999978234337211	WITHOUT_CLASSIFICATION	2.176566278881701E-6	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.999999795959437	WITHOUT_CLASSIFICATION	2.0404056293584413E-7	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999902173435793	WITHOUT_CLASSIFICATION	9.78265642072507E-6	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999010089252965	WITHOUT_CLASSIFICATION	9.89910747034095E-5	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999991322498677	WITHOUT_CLASSIFICATION	8.677501322336252E-7	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999571691715818	WITHOUT_CLASSIFICATION	4.283082841816785E-5	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999566421510614	WITHOUT_CLASSIFICATION	4.335784893853769E-5	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.8428808727442264	WITHOUT_CLASSIFICATION	0.15711912725577362	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999953567706784	WITHOUT_CLASSIFICATION	4.643229321565923E-6	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999934954748353	WITHOUT_CLASSIFICATION	6.504525164789679E-6	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9920414051828743	WITHOUT_CLASSIFICATION	0.007958594817125676	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9995204600123808	WITHOUT_CLASSIFICATION	4.795399876191928E-4	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999960252509225	WITHOUT_CLASSIFICATION	3.974749077487673E-6	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999999322793457	WITHOUT_CLASSIFICATION	6.772065435613129E-8	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999954564656175	WITHOUT_CLASSIFICATION	4.543534382447902E-6	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.5077436312098055	WITHOUT_CLASSIFICATION	0.4922563687901945	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.8893446028873231	DESIGN	0.11065539711267697	WITHOUT_CLASSIFICATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999895730752645	WITHOUT_CLASSIFICATION	1.0426924735466772E-5	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999954234281346	WITHOUT_CLASSIFICATION	4.57657186529849E-6	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999099530467951	WITHOUT_CLASSIFICATION	9.004695320488746E-5	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999965027818926	WITHOUT_CLASSIFICATION	3.4972181074723084E-6	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.999969070380611	WITHOUT_CLASSIFICATION	3.092961938909499E-5	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999864036925507	WITHOUT_CLASSIFICATION	1.359630744937087E-5	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999542576165504	WITHOUT_CLASSIFICATION	4.574238344955945E-5	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9998065050194295	WITHOUT_CLASSIFICATION	1.9349498057047386E-4	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999984268907589	WITHOUT_CLASSIFICATION	1.5731092411299317E-6	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9985417382006677	WITHOUT_CLASSIFICATION	0.0014582617993322711	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999968499949337	WITHOUT_CLASSIFICATION	3.1500050662566127E-6	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9994438983393126	WITHOUT_CLASSIFICATION	5.561016606874932E-4	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999900654114715	WITHOUT_CLASSIFICATION	9.934588528406161E-6	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999857042504	WITHOUT_CLASSIFICATION	1.429574963532287E-8	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999332372547	WITHOUT_CLASSIFICATION	6.676274534999654E-8	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999885974355883	WITHOUT_CLASSIFICATION	1.1402564411592975E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999979127063388	WITHOUT_CLASSIFICATION	2.087293661211774E-6	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999984168663177	WITHOUT_CLASSIFICATION	1.583133682280172E-6	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999997766998834	WITHOUT_CLASSIFICATION	2.2330011667242742E-7	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999997766998834	WITHOUT_CLASSIFICATION	2.2330011667242742E-7	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999997389550679	WITHOUT_CLASSIFICATION	2.6104493215404343E-7	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999997389550679	WITHOUT_CLASSIFICATION	2.6104493215404343E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999707523566067	WITHOUT_CLASSIFICATION	2.924764339321985E-5	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999707523566067	WITHOUT_CLASSIFICATION	2.924764339321985E-5	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999997435931633	WITHOUT_CLASSIFICATION	2.5640683660285486E-7	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.999980312337606	WITHOUT_CLASSIFICATION	1.9687662394002353E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999960150705142	WITHOUT_CLASSIFICATION	3.984929485756856E-6	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999242926586	WITHOUT_CLASSIFICATION	7.570734132860872E-8	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999950408994437	WITHOUT_CLASSIFICATION	4.959100556291623E-6	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9997498774376581	WITHOUT_CLASSIFICATION	2.5012256234187795E-4	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9999999877040339	WITHOUT_CLASSIFICATION	1.2295965999749995E-8	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999979607435039	WITHOUT_CLASSIFICATION	2.0392564960795845E-6	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999983184554507	WITHOUT_CLASSIFICATION	1.6815445492709659E-6	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999803838664217	WITHOUT_CLASSIFICATION	1.9616133578219517E-5	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999989875924832	WITHOUT_CLASSIFICATION	1.012407516736002E-6	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999999630695652	WITHOUT_CLASSIFICATION	3.693043484271921E-8	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999241265268098	WITHOUT_CLASSIFICATION	7.587347319015956E-5	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.999639409418383	WITHOUT_CLASSIFICATION	3.605905816170463E-4	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9963590295537921	WITHOUT_CLASSIFICATION	0.0036409704462080643	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999999717834868	WITHOUT_CLASSIFICATION	2.8216513280819405E-8	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.963926288150221	WITHOUT_CLASSIFICATION	0.03607371184977909	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999370683695614	WITHOUT_CLASSIFICATION	6.293163043851423E-5	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9995858515495676	WITHOUT_CLASSIFICATION	4.1414845043243346E-4	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999982391354838	WITHOUT_CLASSIFICATION	1.7608645161150923E-6	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999950584754754	WITHOUT_CLASSIFICATION	4.941524524609181E-6	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999967156729259	WITHOUT_CLASSIFICATION	3.28432707401186E-6	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.999999198235324	WITHOUT_CLASSIFICATION	8.017646760203711E-7	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999996002327122	WITHOUT_CLASSIFICATION	3.9976728784555095E-7	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999961554553016	WITHOUT_CLASSIFICATION	3.844544698329775E-6	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9998476491210991	WITHOUT_CLASSIFICATION	1.5235087890081022E-4	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9999977767824231	WITHOUT_CLASSIFICATION	2.223217576954502E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999980489094071	WITHOUT_CLASSIFICATION	1.9510905928656973E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999980489094071	WITHOUT_CLASSIFICATION	1.9510905928656973E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999980489094071	WITHOUT_CLASSIFICATION	1.9510905928656973E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999987429965299	WITHOUT_CLASSIFICATION	1.2570034700839934E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999987429965299	WITHOUT_CLASSIFICATION	1.2570034700839934E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999984927617879	WITHOUT_CLASSIFICATION	1.5072382122111887E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999984927617879	WITHOUT_CLASSIFICATION	1.5072382122111887E-6	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999277559444	WITHOUT_CLASSIFICATION	7.224405558170325E-8	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999775537497462	WITHOUT_CLASSIFICATION	2.2446250253810375E-5	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.999999982559213	WITHOUT_CLASSIFICATION	1.7440787024745246E-8	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999999497213519	WITHOUT_CLASSIFICATION	5.0278648106913164E-8	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999980489094071	WITHOUT_CLASSIFICATION	1.9510905928656973E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999980489094071	WITHOUT_CLASSIFICATION	1.9510905928656973E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999980489094071	WITHOUT_CLASSIFICATION	1.9510905928656973E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999987429965299	WITHOUT_CLASSIFICATION	1.2570034700839934E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999987429965299	WITHOUT_CLASSIFICATION	1.2570034700839934E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999987429965299	WITHOUT_CLASSIFICATION	1.2570034700839934E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999984927617879	WITHOUT_CLASSIFICATION	1.5072382122111887E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999984927617879	WITHOUT_CLASSIFICATION	1.5072382122111887E-6	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999998407116555	WITHOUT_CLASSIFICATION	1.5928834455670978E-7	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999835991845221	WITHOUT_CLASSIFICATION	1.6400815477951607E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999741428377	WITHOUT_CLASSIFICATION	2.5857162293091035E-8	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999741428377	WITHOUT_CLASSIFICATION	2.5857162293091035E-8	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999741428377	WITHOUT_CLASSIFICATION	2.5857162293091035E-8	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999741428377	WITHOUT_CLASSIFICATION	2.5857162293091035E-8	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999741428377	WITHOUT_CLASSIFICATION	2.5857162293091035E-8	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999992763319556	WITHOUT_CLASSIFICATION	7.236680444207371E-7	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999980824908584	WITHOUT_CLASSIFICATION	1.917509141566372E-6	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.999957787084884	WITHOUT_CLASSIFICATION	4.221291511609443E-5	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999945441174249	WITHOUT_CLASSIFICATION	5.4558825750438455E-6	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.999979586170265	WITHOUT_CLASSIFICATION	2.0413829735056937E-5	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9998375433606833	WITHOUT_CLASSIFICATION	1.6245663931672576E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999995592007775	WITHOUT_CLASSIFICATION	4.4079922235203686E-7	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.99999984508606	WITHOUT_CLASSIFICATION	1.549139398913159E-7	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.999998547745014	WITHOUT_CLASSIFICATION	1.4522549860161197E-6	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999587419277319	WITHOUT_CLASSIFICATION	4.125807226801444E-5	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999459877273714	WITHOUT_CLASSIFICATION	5.401227262860841E-5	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999999916714647	WITHOUT_CLASSIFICATION	8.328535295994342E-8	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9995577735216009	WITHOUT_CLASSIFICATION	4.4222647839912234E-4	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999972864493096	WITHOUT_CLASSIFICATION	2.713550690443107E-6	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9998846665638177	WITHOUT_CLASSIFICATION	1.1533343618234322E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999928384439892	WITHOUT_CLASSIFICATION	7.161556010836537E-6	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999928384439892	WITHOUT_CLASSIFICATION	7.161556010836537E-6	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999928384439892	WITHOUT_CLASSIFICATION	7.161556010836537E-6	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9995952336667704	WITHOUT_CLASSIFICATION	4.0476633322966314E-4	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9996018300416334	WITHOUT_CLASSIFICATION	3.981699583665966E-4	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999973560251912	WITHOUT_CLASSIFICATION	2.6439748086388967E-6	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999256820517332	WITHOUT_CLASSIFICATION	7.431794826687149E-5	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999941948244631	WITHOUT_CLASSIFICATION	5.805175536937491E-6	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999761947398054	WITHOUT_CLASSIFICATION	2.380526019468543E-5	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999744143368685	WITHOUT_CLASSIFICATION	2.558566313159545E-5	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9999998333958577	WITHOUT_CLASSIFICATION	1.6660414222983232E-7	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999995430682382	WITHOUT_CLASSIFICATION	4.569317618443482E-7	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.999997397381693	WITHOUT_CLASSIFICATION	2.6026183070699525E-6	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999969233548884	WITHOUT_CLASSIFICATION	3.076645111652516E-6	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999694970015	WITHOUT_CLASSIFICATION	3.050299847442206E-8	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999999323833222	WITHOUT_CLASSIFICATION	6.761667774327215E-8	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999998709289485	WITHOUT_CLASSIFICATION	1.2907105155243248E-7	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999998221141879	WITHOUT_CLASSIFICATION	1.7788581216139312E-7	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999977823998858	WITHOUT_CLASSIFICATION	2.217600114217146E-6	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999915748708306	WITHOUT_CLASSIFICATION	8.425129169494225E-6	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.999999954526438	WITHOUT_CLASSIFICATION	4.547356199844523E-8	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999998714421368	WITHOUT_CLASSIFICATION	1.2855786329513707E-7	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999979811338705	WITHOUT_CLASSIFICATION	2.0188661295250763E-6	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9958288551386894	WITHOUT_CLASSIFICATION	0.004171144861310635	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999958079891188	WITHOUT_CLASSIFICATION	4.192010881120745E-6	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999368067923438	WITHOUT_CLASSIFICATION	6.31932076562846E-5	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999992462633093	WITHOUT_CLASSIFICATION	7.537366907034579E-7	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999997305750173	WITHOUT_CLASSIFICATION	2.694249826497253E-7	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999997560791357	WITHOUT_CLASSIFICATION	2.4392086429558473E-7	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999998436519617	WITHOUT_CLASSIFICATION	1.5634803823147782E-7	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999995918410582	WITHOUT_CLASSIFICATION	4.0815894185648376E-7	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.999998300916609	WITHOUT_CLASSIFICATION	1.6990833909495524E-6	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999984171625381	WITHOUT_CLASSIFICATION	1.5828374618683656E-6	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999972763657718	WITHOUT_CLASSIFICATION	2.7236342282260724E-6	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999963608719685	WITHOUT_CLASSIFICATION	3.639128031523319E-6	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999965539381902	WITHOUT_CLASSIFICATION	3.446061809694602E-6	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999978002716341	WITHOUT_CLASSIFICATION	2.199728365964221E-6	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999976877411543	WITHOUT_CLASSIFICATION	2.3122588456715243E-6	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999982402011702	WITHOUT_CLASSIFICATION	1.7597988296952264E-6	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999798439211288	WITHOUT_CLASSIFICATION	2.0156078871162332E-5	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999984312245572	WITHOUT_CLASSIFICATION	1.5687754427573986E-6	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999668961163459	WITHOUT_CLASSIFICATION	3.310388365407209E-5	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9291219637202233	WITHOUT_CLASSIFICATION	0.07087803627977664	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999677912106	WITHOUT_CLASSIFICATION	3.220878940641173E-8	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9946166987414737	WITHOUT_CLASSIFICATION	0.005383301258526277	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9975968677483278	WITHOUT_CLASSIFICATION	0.002403132251672171	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999677340847157	WITHOUT_CLASSIFICATION	3.2265915284199456E-5	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999466487090989	WITHOUT_CLASSIFICATION	5.3351290901078045E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9930249153670216	WITHOUT_CLASSIFICATION	0.0069750846329782665	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9979984004507565	WITHOUT_CLASSIFICATION	0.002001599549243538	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9979984004507565	WITHOUT_CLASSIFICATION	0.002001599549243538	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999736775544686	WITHOUT_CLASSIFICATION	2.6322445531320014E-5	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999973339849068	WITHOUT_CLASSIFICATION	2.666015093209428E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9907002645962976	WITHOUT_CLASSIFICATION	0.009299735403702493	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999433863464745	WITHOUT_CLASSIFICATION	5.661365352543998E-5	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999893084893092	WITHOUT_CLASSIFICATION	1.0691510690758187E-5	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999979986572464	WITHOUT_CLASSIFICATION	2.0013427537155825E-6	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9996149956208429	WITHOUT_CLASSIFICATION	3.8500437915716437E-4	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999981183460163	WITHOUT_CLASSIFICATION	1.881653983720199E-6	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.999995774841467	WITHOUT_CLASSIFICATION	4.225158533129768E-6	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999976095549892	WITHOUT_CLASSIFICATION	2.3904450107379203E-6	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999994468106557	WITHOUT_CLASSIFICATION	5.531893443083409E-7	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999994468106557	WITHOUT_CLASSIFICATION	5.531893443083409E-7	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999994468106557	WITHOUT_CLASSIFICATION	5.531893443083409E-7	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999994468106557	WITHOUT_CLASSIFICATION	5.531893443083409E-7	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999979419099244	WITHOUT_CLASSIFICATION	2.058090075577878E-6	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999995159102986	WITHOUT_CLASSIFICATION	4.840897014185073E-7	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999997931373167	WITHOUT_CLASSIFICATION	2.068626832829059E-7	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9999279947823452	WITHOUT_CLASSIFICATION	7.200521765480734E-5	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9982545976510573	WITHOUT_CLASSIFICATION	0.0017454023489426147	DESIGN
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.999991401532369	WITHOUT_CLASSIFICATION	8.598467631046527E-6	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999887162667581	WITHOUT_CLASSIFICATION	1.1283733241810873E-5	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999960099356958	WITHOUT_CLASSIFICATION	3.990064304232843E-6	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999960099356958	WITHOUT_CLASSIFICATION	3.990064304232843E-6	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999606005013717	WITHOUT_CLASSIFICATION	3.9399498628334376E-5	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999995748283999	WITHOUT_CLASSIFICATION	4.2517160009493717E-7	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999968910514804	WITHOUT_CLASSIFICATION	3.1089485195877984E-6	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999802918987245	WITHOUT_CLASSIFICATION	1.9708101275539877E-5	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999802918987245	WITHOUT_CLASSIFICATION	1.9708101275539877E-5	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999980417213542	WITHOUT_CLASSIFICATION	1.9582786457769417E-6	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999984821564349	WITHOUT_CLASSIFICATION	1.5178435651385393E-6	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999984821564349	WITHOUT_CLASSIFICATION	1.5178435651385393E-6	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9977984498050816	WITHOUT_CLASSIFICATION	0.002201550194918414	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999997067463817	WITHOUT_CLASSIFICATION	2.9325361835448403E-7	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999986845216343	WITHOUT_CLASSIFICATION	1.3154783656624714E-6	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999661839232402	WITHOUT_CLASSIFICATION	3.381607675968171E-5	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9998809675101341	WITHOUT_CLASSIFICATION	1.190324898658871E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9957460955422541	WITHOUT_CLASSIFICATION	0.004253904457745892	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9981578408961761	WITHOUT_CLASSIFICATION	0.0018421591038239751	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9997834144082359	WITHOUT_CLASSIFICATION	2.1658559176403666E-4	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999986589844596	WITHOUT_CLASSIFICATION	1.3410155404518648E-6	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.999999919368762	WITHOUT_CLASSIFICATION	8.063123806321386E-8	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999902484583036	WITHOUT_CLASSIFICATION	9.751541696367745E-6	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999996253692763	WITHOUT_CLASSIFICATION	3.746307236861035E-7	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999038496368715	WITHOUT_CLASSIFICATION	9.615036312857519E-5	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999282254172142	WITHOUT_CLASSIFICATION	7.177458278575999E-5	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9998961363728833	WITHOUT_CLASSIFICATION	1.038636271166616E-4	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999924526361457	WITHOUT_CLASSIFICATION	7.54736385430856E-6	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999904550234683	WITHOUT_CLASSIFICATION	9.544976531795918E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9999991073492946	WITHOUT_CLASSIFICATION	8.926507053208701E-7	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999891890058331	WITHOUT_CLASSIFICATION	1.0810994166892745E-5	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9853503899788253	WITHOUT_CLASSIFICATION	0.014649610021174793	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999469940151815	WITHOUT_CLASSIFICATION	5.3005984818571356E-5	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999991593424865	WITHOUT_CLASSIFICATION	8.40657513498504E-7	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999834142718161	WITHOUT_CLASSIFICATION	1.658572818392355E-5	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999946763314891	WITHOUT_CLASSIFICATION	5.3236685108793115E-6	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999702967790703	WITHOUT_CLASSIFICATION	2.970322092966422E-5	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9992233948132269	WITHOUT_CLASSIFICATION	7.766051867731493E-4	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999903603133875	WITHOUT_CLASSIFICATION	9.639686612443319E-6	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999694289282616	WITHOUT_CLASSIFICATION	3.057107173837586E-5	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9993025955353148	WITHOUT_CLASSIFICATION	6.974044646853495E-4	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999956494488949	WITHOUT_CLASSIFICATION	4.350551105051742E-6	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.999991519883295	WITHOUT_CLASSIFICATION	8.480116705012047E-6	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999997674418022	WITHOUT_CLASSIFICATION	2.3255819771260642E-7	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9960762767070476	WITHOUT_CLASSIFICATION	0.003923723292952463	DESIGN
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999989001371011	WITHOUT_CLASSIFICATION	1.0998628989149586E-6	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999701084981176	WITHOUT_CLASSIFICATION	2.98915018823303E-5	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9997610396665514	WITHOUT_CLASSIFICATION	2.389603334487414E-4	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999998849397493	WITHOUT_CLASSIFICATION	1.1506025070860511E-7	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999961597604718	WITHOUT_CLASSIFICATION	3.840239528239362E-6	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999950077562183	WITHOUT_CLASSIFICATION	4.992243781751464E-6	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9997610396665514	WITHOUT_CLASSIFICATION	2.389603334487414E-4	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999998849397493	WITHOUT_CLASSIFICATION	1.1506025070860511E-7	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999367109042486	WITHOUT_CLASSIFICATION	6.32890957513737E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999994289900028	WITHOUT_CLASSIFICATION	5.710099972413469E-7	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999994289900028	WITHOUT_CLASSIFICATION	5.710099972413469E-7	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999716276926399	WITHOUT_CLASSIFICATION	2.8372307360019823E-5	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.998923660185039	WITHOUT_CLASSIFICATION	0.001076339814961051	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999997383235041	WITHOUT_CLASSIFICATION	2.616764959725541E-7	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999987513252392	WITHOUT_CLASSIFICATION	1.2486747608553982E-6	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998791210732	WITHOUT_CLASSIFICATION	1.2087892680003695E-4	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9971090061061657	WITHOUT_CLASSIFICATION	0.0028909938938343244	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999967791294683	WITHOUT_CLASSIFICATION	3.220870531656813E-6	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9998937398466895	WITHOUT_CLASSIFICATION	1.062601533105688E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9999982770301631	WITHOUT_CLASSIFICATION	1.7229698368951801E-6	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.999996613061258	WITHOUT_CLASSIFICATION	3.38693874197411E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999993919041583	WITHOUT_CLASSIFICATION	6.080958417306094E-7	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999988125219879	WITHOUT_CLASSIFICATION	1.1874780121796503E-6	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999999174421171	WITHOUT_CLASSIFICATION	8.255788279571052E-8	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999976970904596	WITHOUT_CLASSIFICATION	2.30290954033461E-6	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999976970904596	WITHOUT_CLASSIFICATION	2.30290954033461E-6	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998805455638149	WITHOUT_CLASSIFICATION	1.1945443618508015E-4	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998805455638149	WITHOUT_CLASSIFICATION	1.1945443618508015E-4	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999991914578069	WITHOUT_CLASSIFICATION	8.085421931385491E-7	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999982091412727	WITHOUT_CLASSIFICATION	1.790858727358623E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999988308727333	WITHOUT_CLASSIFICATION	1.1691272667528183E-6	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999998991675922	WITHOUT_CLASSIFICATION	1.0083240765735215E-7	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999999781758263	WITHOUT_CLASSIFICATION	2.18241737037587E-8	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999587012620625	WITHOUT_CLASSIFICATION	4.129873793750569E-5	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999997383235041	WITHOUT_CLASSIFICATION	2.616764959725541E-7	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999987513252392	WITHOUT_CLASSIFICATION	1.2486747608553982E-6	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9999982770301631	WITHOUT_CLASSIFICATION	1.7229698368951801E-6	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.999996613061258	WITHOUT_CLASSIFICATION	3.38693874197411E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999879502776869	WITHOUT_CLASSIFICATION	1.2049722312954684E-5	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999925710368505	WITHOUT_CLASSIFICATION	7.428963149538161E-6	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.999995347780384	WITHOUT_CLASSIFICATION	4.652219616023079E-6	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999992082751161	WITHOUT_CLASSIFICATION	7.917248838858304E-7	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999834052494709	WITHOUT_CLASSIFICATION	1.659475052906026E-5	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999991794717239	WITHOUT_CLASSIFICATION	8.205282762411526E-7	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999441485552593	WITHOUT_CLASSIFICATION	5.5851444740874056E-5	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999927485258874	WITHOUT_CLASSIFICATION	7.2514741126931026E-6	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999998935533994	WITHOUT_CLASSIFICATION	1.0644660067137085E-7	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999972468771717	WITHOUT_CLASSIFICATION	2.753122828258757E-6	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999981690596875	WITHOUT_CLASSIFICATION	1.8309403124167307E-6	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999730856118	WITHOUT_CLASSIFICATION	2.6914388247312163E-8	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.99998436177976	WITHOUT_CLASSIFICATION	1.5638220240047067E-5	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999999280258618	WITHOUT_CLASSIFICATION	7.19741382059901E-8	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999436266924903	WITHOUT_CLASSIFICATION	5.637330750963252E-5	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999934719384557	WITHOUT_CLASSIFICATION	6.528061544262373E-6	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999998447540304	WITHOUT_CLASSIFICATION	1.5524596974000576E-7	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999988247745725	WITHOUT_CLASSIFICATION	1.1752254275137293E-6	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999998269025795	WITHOUT_CLASSIFICATION	1.7309742049414694E-7	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999636028998	WITHOUT_CLASSIFICATION	3.6397100231716573E-8	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999764484879	WITHOUT_CLASSIFICATION	2.355151198460304E-8	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999764484879	WITHOUT_CLASSIFICATION	2.355151198460304E-8	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999989329385912	WITHOUT_CLASSIFICATION	1.0670614088372913E-6	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999993568166117	WITHOUT_CLASSIFICATION	6.431833883814525E-7	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999940196021796	WITHOUT_CLASSIFICATION	5.980397820400109E-6	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999838583324707	WITHOUT_CLASSIFICATION	1.6141667529352317E-5	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999838583324707	WITHOUT_CLASSIFICATION	1.6141667529352317E-5	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.999995347780384	WITHOUT_CLASSIFICATION	4.652219616023079E-6	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.999951674260018	WITHOUT_CLASSIFICATION	4.832573998189601E-5	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999902615016318	WITHOUT_CLASSIFICATION	9.738498368117764E-6	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999187219887944	WITHOUT_CLASSIFICATION	8.127801120557549E-5	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9998930086972019	WITHOUT_CLASSIFICATION	1.0699130279811284E-4	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999875382279855	WITHOUT_CLASSIFICATION	1.2461772014451827E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999960880258236	WITHOUT_CLASSIFICATION	3.9119741763926306E-5	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999969561642177	WITHOUT_CLASSIFICATION	3.043835782206426E-6	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999895425167059	WITHOUT_CLASSIFICATION	1.0457483294050448E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999992188020266	WITHOUT_CLASSIFICATION	7.811979733996209E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9997746318911511	WITHOUT_CLASSIFICATION	2.2536810884893032E-4	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999997470363701	WITHOUT_CLASSIFICATION	2.529636299293309E-7	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9992143908433979	WITHOUT_CLASSIFICATION	7.856091566020105E-4	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999982850926115	WITHOUT_CLASSIFICATION	1.7149073885748391E-6	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999914783027416	WITHOUT_CLASSIFICATION	8.521697258447316E-6	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999998797685481	WITHOUT_CLASSIFICATION	1.2023145190729697E-7	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999995803910406	WITHOUT_CLASSIFICATION	4.1960895933653404E-7	DESIGN
// states	WITHOUT_CLASSIFICATION	0.999999801177837	WITHOUT_CLASSIFICATION	1.9882216297779232E-7	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999831969583388	WITHOUT_CLASSIFICATION	1.6803041661219608E-5	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999512148855644	WITHOUT_CLASSIFICATION	4.8785114435493296E-5	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999681209631976	WITHOUT_CLASSIFICATION	3.187903680238605E-5	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999996206274315	WITHOUT_CLASSIFICATION	3.793725684926339E-7	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999940655857362	WITHOUT_CLASSIFICATION	5.9344142637741255E-6	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999997323098339	WITHOUT_CLASSIFICATION	2.676901661063331E-7	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999996874303668	WITHOUT_CLASSIFICATION	3.1256963320712734E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999691461438	WITHOUT_CLASSIFICATION	3.08538561752033E-8	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999845028252466	WITHOUT_CLASSIFICATION	1.549717475334835E-5	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999999986202272	WITHOUT_CLASSIFICATION	1.3797727944953799E-8	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999988233707915	WITHOUT_CLASSIFICATION	1.176629208414423E-6	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999995750172476	WITHOUT_CLASSIFICATION	4.249827524420111E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998490107876	WITHOUT_CLASSIFICATION	1.5098921235948153E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998490107876	WITHOUT_CLASSIFICATION	1.5098921235948153E-7	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999942181606358	WITHOUT_CLASSIFICATION	5.781839364211596E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999999920069631	WITHOUT_CLASSIFICATION	7.99303698877954E-9	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999999920069631	WITHOUT_CLASSIFICATION	7.99303698877954E-9	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999964917552171	WITHOUT_CLASSIFICATION	3.508244782897631E-5	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999964917552171	WITHOUT_CLASSIFICATION	3.508244782897631E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999996898349548	WITHOUT_CLASSIFICATION	3.1016504517844803E-7	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999962734213742	WITHOUT_CLASSIFICATION	3.726578625778981E-6	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999301581242693	WITHOUT_CLASSIFICATION	6.984187573060592E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999998723116849	WITHOUT_CLASSIFICATION	1.2768831518579242E-7	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999991452084158	WITHOUT_CLASSIFICATION	8.547915842371169E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999987295944667	WITHOUT_CLASSIFICATION	1.2704055333672102E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999987295944667	WITHOUT_CLASSIFICATION	1.2704055333672102E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999996874303668	WITHOUT_CLASSIFICATION	3.1256963320712734E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999996874303668	WITHOUT_CLASSIFICATION	3.1256963320712734E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999996874303668	WITHOUT_CLASSIFICATION	3.1256963320712734E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999691461438	WITHOUT_CLASSIFICATION	3.08538561752033E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998490107876	WITHOUT_CLASSIFICATION	1.5098921235948153E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998490107876	WITHOUT_CLASSIFICATION	1.5098921235948153E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998490107876	WITHOUT_CLASSIFICATION	1.5098921235948153E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999996898349548	WITHOUT_CLASSIFICATION	3.1016504517844803E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999996898349548	WITHOUT_CLASSIFICATION	3.1016504517844803E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999996898349548	WITHOUT_CLASSIFICATION	3.1016504517844803E-7	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999998723116849	WITHOUT_CLASSIFICATION	1.2768831518579242E-7	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999998723116849	WITHOUT_CLASSIFICATION	1.2768831518579242E-7	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999927357872496	WITHOUT_CLASSIFICATION	7.264212750435929E-6	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999742528549946	WITHOUT_CLASSIFICATION	2.5747145005326654E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999962384029217	WITHOUT_CLASSIFICATION	3.7615970782989085E-6	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9422126334943642	WITHOUT_CLASSIFICATION	0.0577873665056358	DESIGN
// no digits, error	WITHOUT_CLASSIFICATION	0.9999983680891058	WITHOUT_CLASSIFICATION	1.6319108942293902E-6	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9999959962013221	WITHOUT_CLASSIFICATION	4.003798677934114E-6	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9999959962013221	WITHOUT_CLASSIFICATION	4.003798677934114E-6	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999632598289309	WITHOUT_CLASSIFICATION	3.674017106922468E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999960880258236	WITHOUT_CLASSIFICATION	3.9119741763926306E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999960880258236	WITHOUT_CLASSIFICATION	3.9119741763926306E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999960880258236	WITHOUT_CLASSIFICATION	3.9119741763926306E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999960880258236	WITHOUT_CLASSIFICATION	3.9119741763926306E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999960880258236	WITHOUT_CLASSIFICATION	3.9119741763926306E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999993581494232	WITHOUT_CLASSIFICATION	6.418505766987539E-7	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999993581494232	WITHOUT_CLASSIFICATION	6.418505766987539E-7	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999993581494232	WITHOUT_CLASSIFICATION	6.418505766987539E-7	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999992040370864	WITHOUT_CLASSIFICATION	7.959629135703237E-7	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999969510322013	WITHOUT_CLASSIFICATION	3.0489677987186903E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999691461438	WITHOUT_CLASSIFICATION	3.08538561752033E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999996898349548	WITHOUT_CLASSIFICATION	3.1016504517844803E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999996898349548	WITHOUT_CLASSIFICATION	3.1016504517844803E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999960880258236	WITHOUT_CLASSIFICATION	3.9119741763926306E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999960880258236	WITHOUT_CLASSIFICATION	3.9119741763926306E-5	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999993581494232	WITHOUT_CLASSIFICATION	6.418505766987539E-7	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999632598289309	WITHOUT_CLASSIFICATION	3.674017106922468E-5	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999972636863379	WITHOUT_CLASSIFICATION	2.736313662055271E-6	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999998519402682	WITHOUT_CLASSIFICATION	1.4805973179728341E-7	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999979189615003	WITHOUT_CLASSIFICATION	2.0810384998523422E-6	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.999997953578574	WITHOUT_CLASSIFICATION	2.046421426041189E-6	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999984065485411	WITHOUT_CLASSIFICATION	1.5934514589555158E-6	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999989774247101	WITHOUT_CLASSIFICATION	1.0225752898869833E-6	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999664005031863	WITHOUT_CLASSIFICATION	3.35994968137019E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999993654361939	WITHOUT_CLASSIFICATION	6.345638059716871E-7	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.999999801155035	WITHOUT_CLASSIFICATION	1.9884496512741783E-7	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999993010126688	WITHOUT_CLASSIFICATION	6.989873312020851E-6	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999972254697855	WITHOUT_CLASSIFICATION	2.7745302143855287E-6	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.999999863123706	WITHOUT_CLASSIFICATION	1.3687629402727162E-7	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999996428851683	WITHOUT_CLASSIFICATION	3.5711483172015345E-7	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999865546163885	WITHOUT_CLASSIFICATION	1.3445383611550844E-5	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999997623949209	WITHOUT_CLASSIFICATION	2.3760507899820652E-7	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9994922045168869	WITHOUT_CLASSIFICATION	5.077954831131813E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999995116813825	WITHOUT_CLASSIFICATION	4.883186175872087E-7	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999660919715175	WITHOUT_CLASSIFICATION	3.39080284825037E-5	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999053389451583	WITHOUT_CLASSIFICATION	9.466105484167167E-5	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999997529950388	WITHOUT_CLASSIFICATION	2.470049611073222E-7	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999475258762612	WITHOUT_CLASSIFICATION	5.247412373889168E-5	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999970161877729	WITHOUT_CLASSIFICATION	2.983812227023298E-6	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999995241675779	WITHOUT_CLASSIFICATION	4.758324222219866E-7	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999991991479752	WITHOUT_CLASSIFICATION	8.008520248314656E-7	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999847669686386	WITHOUT_CLASSIFICATION	1.5233031361485611E-5	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9994497657668718	WITHOUT_CLASSIFICATION	5.502342331281865E-4	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9999929517189322	WITHOUT_CLASSIFICATION	7.048281067717973E-6	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999978841304595	WITHOUT_CLASSIFICATION	2.1158695404028107E-6	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999733354932729	WITHOUT_CLASSIFICATION	2.6664506727109838E-5	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999526313977003	WITHOUT_CLASSIFICATION	4.7368602299674807E-5	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9998842721338806	WITHOUT_CLASSIFICATION	1.1572786611933821E-4	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999706719550948	WITHOUT_CLASSIFICATION	2.9328044905083915E-5	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999985984278875	WITHOUT_CLASSIFICATION	1.401572112471133E-6	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999142699764	WITHOUT_CLASSIFICATION	8.573002367969487E-8	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999972636863379	WITHOUT_CLASSIFICATION	2.736313662055271E-6	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999998647645243	WITHOUT_CLASSIFICATION	1.3523547569635022E-7	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999869816394	WITHOUT_CLASSIFICATION	1.3018360589278285E-8	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999952659188557	WITHOUT_CLASSIFICATION	4.734081144396874E-6	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999993636598421	WITHOUT_CLASSIFICATION	6.363401578949992E-7	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999993636598421	WITHOUT_CLASSIFICATION	6.363401578949992E-7	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999925370119542	WITHOUT_CLASSIFICATION	7.462988045849133E-6	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999925370119542	WITHOUT_CLASSIFICATION	7.462988045849133E-6	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.999999929529033	WITHOUT_CLASSIFICATION	7.047096690290917E-8	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999977150067406	WITHOUT_CLASSIFICATION	2.284993259334186E-6	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999999791649881	WITHOUT_CLASSIFICATION	2.083501190949047E-7	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999652641409428	WITHOUT_CLASSIFICATION	3.473585905721334E-5	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.999987540473123	WITHOUT_CLASSIFICATION	1.2459526877059294E-5	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999381155919547	WITHOUT_CLASSIFICATION	6.188440804527444E-5	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9997060022824056	WITHOUT_CLASSIFICATION	2.939977175944219E-4	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9997624752618415	WITHOUT_CLASSIFICATION	2.3752473815852326E-4	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9995884655566106	WITHOUT_CLASSIFICATION	4.115344433893633E-4	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999838015436828	WITHOUT_CLASSIFICATION	1.6198456317208757E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999970078178	WITHOUT_CLASSIFICATION	2.9921821552418805E-9	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999947155672744	WITHOUT_CLASSIFICATION	5.2844327256084456E-6	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999947155672744	WITHOUT_CLASSIFICATION	5.2844327256084456E-6	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999989879034	WITHOUT_CLASSIFICATION	1.0120965552825656E-9	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999607479015112	WITHOUT_CLASSIFICATION	3.9252098488700285E-5	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999998918788227	WITHOUT_CLASSIFICATION	1.081211773048999E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999998918788227	WITHOUT_CLASSIFICATION	1.081211773048999E-6	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999942533363	WITHOUT_CLASSIFICATION	5.7466636390551056E-9	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.999986034365012	WITHOUT_CLASSIFICATION	1.3965634987971473E-5	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999838594222641	WITHOUT_CLASSIFICATION	1.6140577735941188E-5	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999964376170938	WITHOUT_CLASSIFICATION	3.562382906356105E-6	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.999999639072031	WITHOUT_CLASSIFICATION	3.6092796892929984E-7	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999662916233899	WITHOUT_CLASSIFICATION	3.370837661005204E-5	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999998881670256	WITHOUT_CLASSIFICATION	1.1183297445677386E-7	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999980731005034	WITHOUT_CLASSIFICATION	1.9268994966876277E-6	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999957049120759	WITHOUT_CLASSIFICATION	4.295087924047418E-6	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999994370437868	WITHOUT_CLASSIFICATION	5.629562132578185E-7	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999696997814986	WITHOUT_CLASSIFICATION	3.0300218501284023E-5	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999863174246334	WITHOUT_CLASSIFICATION	1.368257536652725E-5	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999999552972904	WITHOUT_CLASSIFICATION	4.470270972738292E-8	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.999991367523239	WITHOUT_CLASSIFICATION	8.632476760995234E-6	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999999169035098	WITHOUT_CLASSIFICATION	8.309649021228995E-7	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999918063666307	WITHOUT_CLASSIFICATION	8.193633369347926E-6	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999984596778506	WITHOUT_CLASSIFICATION	1.5403221492943315E-6	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999984518713346	WITHOUT_CLASSIFICATION	1.5481286653316076E-6	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999943821072	WITHOUT_CLASSIFICATION	5.617892868536908E-9	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999826671821149	WITHOUT_CLASSIFICATION	1.7332817885051E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9996547774805543	DESIGN	3.4522251944572884E-4	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999949148585354	WITHOUT_CLASSIFICATION	5.085141464564479E-6	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999936163281655	WITHOUT_CLASSIFICATION	6.383671834503328E-6	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999984492255564	WITHOUT_CLASSIFICATION	1.5507744435821435E-6	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.999998346120662	WITHOUT_CLASSIFICATION	1.6538793380334897E-6	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999924685579655	WITHOUT_CLASSIFICATION	7.531442034365628E-6	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999998421352206	WITHOUT_CLASSIFICATION	1.578647793819265E-7	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999974961681711	WITHOUT_CLASSIFICATION	2.503831828929767E-6	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9950671119755162	WITHOUT_CLASSIFICATION	0.00493288802448378	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999752016736	WITHOUT_CLASSIFICATION	2.479832635584253E-8	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999978142214814	WITHOUT_CLASSIFICATION	2.18577851852511E-6	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999982127868856	WITHOUT_CLASSIFICATION	1.7872131143598973E-6	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999681735705993	WITHOUT_CLASSIFICATION	3.182642940063419E-5	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999996308357507	WITHOUT_CLASSIFICATION	3.6916424928781916E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999996308357507	WITHOUT_CLASSIFICATION	3.6916424928781916E-7	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999978271432529	WITHOUT_CLASSIFICATION	2.1728567471817295E-6	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999995029186882	WITHOUT_CLASSIFICATION	4.970813117363757E-7	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999843178285	WITHOUT_CLASSIFICATION	1.5682171444669956E-8	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999957515067355	WITHOUT_CLASSIFICATION	4.248493264553714E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999962389743847	WITHOUT_CLASSIFICATION	3.7610256152071723E-6	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999990761466785	WITHOUT_CLASSIFICATION	9.238533214074815E-7	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.999915007939978	WITHOUT_CLASSIFICATION	8.499206002199709E-5	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999298449546423	WITHOUT_CLASSIFICATION	7.015504535758613E-5	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999232238894933	WITHOUT_CLASSIFICATION	7.677611050677293E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999990935968257	WITHOUT_CLASSIFICATION	9.064031743662118E-7	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.995091951299577	WITHOUT_CLASSIFICATION	0.004908048700423037	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9934207616183816	WITHOUT_CLASSIFICATION	0.006579238381618524	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999994015789698	WITHOUT_CLASSIFICATION	5.984210301471381E-7	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9996017500799841	WITHOUT_CLASSIFICATION	3.9824992001592134E-4	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999773809728794	WITHOUT_CLASSIFICATION	2.2619027120569386E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999999346202918	WITHOUT_CLASSIFICATION	6.537970811680175E-8	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9820263765270679	WITHOUT_CLASSIFICATION	0.017973623472932108	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999961506399913	WITHOUT_CLASSIFICATION	3.849360008745019E-6	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999947098880224	WITHOUT_CLASSIFICATION	5.2901119775601235E-6	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999560889108239	WITHOUT_CLASSIFICATION	4.3911089176165455E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9972798518900766	WITHOUT_CLASSIFICATION	0.0027201481099234093	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999981477004019	WITHOUT_CLASSIFICATION	1.8522995982384066E-6	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9997299190702376	WITHOUT_CLASSIFICATION	2.7008092976250263E-4	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999949643031489	WITHOUT_CLASSIFICATION	5.035696851078382E-6	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9994712522354237	WITHOUT_CLASSIFICATION	5.287477645763047E-4	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999971005684184	WITHOUT_CLASSIFICATION	2.899431581697631E-6	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999998782561397	WITHOUT_CLASSIFICATION	1.217438603824407E-7	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999999961621474	WITHOUT_CLASSIFICATION	3.837852598124664E-8	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9997890653530039	WITHOUT_CLASSIFICATION	2.1093464699611876E-4	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.998601950632705	WITHOUT_CLASSIFICATION	0.001398049367295061	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999996359347871	WITHOUT_CLASSIFICATION	3.640652129636021E-7	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999985309855749	WITHOUT_CLASSIFICATION	1.4690144251010307E-6	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999853671353054	WITHOUT_CLASSIFICATION	1.4632864694552937E-5	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999998780581427	WITHOUT_CLASSIFICATION	1.2194185729776771E-7	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999998465344574	WITHOUT_CLASSIFICATION	1.5346554254193913E-7	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9980529835906407	WITHOUT_CLASSIFICATION	0.001947016409359283	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999986088335141	WITHOUT_CLASSIFICATION	1.3911664859646443E-6	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999991775965312	WITHOUT_CLASSIFICATION	8.224034687043043E-7	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999980197930861	WITHOUT_CLASSIFICATION	1.980206913815624E-6	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999944234714572	WITHOUT_CLASSIFICATION	5.576528542802936E-6	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999964439024908	WITHOUT_CLASSIFICATION	3.556097509201453E-6	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999421019484	WITHOUT_CLASSIFICATION	5.789805152163655E-8	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999421019484	WITHOUT_CLASSIFICATION	5.789805152163655E-8	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999994123056106	WITHOUT_CLASSIFICATION	5.87694389459614E-7	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999950358784709	WITHOUT_CLASSIFICATION	4.964121529005584E-6	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999994237553914	WITHOUT_CLASSIFICATION	5.762446085856293E-7	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999932722808677	WITHOUT_CLASSIFICATION	6.72771913240802E-6	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999904139623655	WITHOUT_CLASSIFICATION	9.586037634473816E-6	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999994158868222	WITHOUT_CLASSIFICATION	5.841131777648531E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9980979805006046	WITHOUT_CLASSIFICATION	0.0019020194993954619	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999214195404521	WITHOUT_CLASSIFICATION	7.858045954793525E-5	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.999989071860014	WITHOUT_CLASSIFICATION	1.0928139986010398E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999970089936524	WITHOUT_CLASSIFICATION	2.991006347636935E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999872753963452	WITHOUT_CLASSIFICATION	1.2724603654743761E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999628651062854	WITHOUT_CLASSIFICATION	3.713489371457535E-5	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9793718987641209	WITHOUT_CLASSIFICATION	0.020628101235879173	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999994952493823	WITHOUT_CLASSIFICATION	5.047506176947505E-7	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999793186865802	WITHOUT_CLASSIFICATION	2.0681313419772053E-5	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.7806275512790513	WITHOUT_CLASSIFICATION	0.21937244872094866	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.984370605370829	WITHOUT_CLASSIFICATION	0.015629394629170925	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999981505836725	WITHOUT_CLASSIFICATION	1.8494163275163484E-6	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.999998756705285	WITHOUT_CLASSIFICATION	1.2432947148809834E-6	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.999983989481936	WITHOUT_CLASSIFICATION	1.601051806397992E-5	DESIGN
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999993208162857	WITHOUT_CLASSIFICATION	6.791837142236996E-7	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999980536582983	WITHOUT_CLASSIFICATION	1.946341701699813E-5	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999978699288157	WITHOUT_CLASSIFICATION	2.1300711842343243E-6	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.7390086398211655	DESIGN	0.2609913601788345	WITHOUT_CLASSIFICATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999999558431763	WITHOUT_CLASSIFICATION	4.415682369066885E-7	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9997543948475821	WITHOUT_CLASSIFICATION	2.4560515241786796E-4	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999410055743352	WITHOUT_CLASSIFICATION	5.899442566473848E-5	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999920056377494	WITHOUT_CLASSIFICATION	7.99436225058962E-6	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999970547193151	WITHOUT_CLASSIFICATION	2.9452806848477625E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999994613463593	WITHOUT_CLASSIFICATION	5.386536406179967E-7	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999961613426555	WITHOUT_CLASSIFICATION	3.838657344561521E-6	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999953143485674	WITHOUT_CLASSIFICATION	4.6856514326817725E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999994613463593	WITHOUT_CLASSIFICATION	5.386536406179967E-7	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9600613029712173	WITHOUT_CLASSIFICATION	0.039938697028782784	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999702967790703	WITHOUT_CLASSIFICATION	2.970322092966422E-5	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9848503799932394	WITHOUT_CLASSIFICATION	0.015149620006760515	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.7647345147072437	DESIGN	0.23526548529275626	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999995151749319	WITHOUT_CLASSIFICATION	4.848250680743712E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999741428377	WITHOUT_CLASSIFICATION	2.5857162293091035E-8	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999996465816958	WITHOUT_CLASSIFICATION	3.5341830419189096E-7	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9998767474589801	WITHOUT_CLASSIFICATION	1.232525410198873E-4	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.998923660185039	WITHOUT_CLASSIFICATION	0.001076339814961051	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999826671821149	WITHOUT_CLASSIFICATION	1.7332817885051E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999962384029217	WITHOUT_CLASSIFICATION	3.7615970782989085E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9512197510557443	WITHOUT_CLASSIFICATION	0.048780248944255776	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999975905507843	WITHOUT_CLASSIFICATION	2.409449215708239E-6	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.999996620772727	WITHOUT_CLASSIFICATION	3.3792272729785005E-6	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999567451239021	WITHOUT_CLASSIFICATION	4.325487609785049E-5	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999998620604372	WITHOUT_CLASSIFICATION	1.3793956277912327E-7	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9985042057371295	WITHOUT_CLASSIFICATION	0.0014957942628706048	DESIGN
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9107606575742427	WITHOUT_CLASSIFICATION	0.08923934242575718	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999123541430387	WITHOUT_CLASSIFICATION	8.764585696138505E-5	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9991281183240773	WITHOUT_CLASSIFICATION	8.718816759227508E-4	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999987881978307	WITHOUT_CLASSIFICATION	1.2118021692649431E-6	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.999999972162773	WITHOUT_CLASSIFICATION	2.7837226973198395E-8	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9999989495819112	WITHOUT_CLASSIFICATION	1.050418088777924E-6	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999977834460395	WITHOUT_CLASSIFICATION	2.2165539603956605E-6	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999996561951354	WITHOUT_CLASSIFICATION	3.4380486460287714E-7	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999822428907438	WITHOUT_CLASSIFICATION	1.7757109256151987E-5	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999864329806022	WITHOUT_CLASSIFICATION	1.3567019397669776E-5	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999491723126	WITHOUT_CLASSIFICATION	5.082768726230587E-8	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999987466542	WITHOUT_CLASSIFICATION	1.2533457406527273E-9	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999975786426997	WITHOUT_CLASSIFICATION	2.4213573003012535E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999975786426997	WITHOUT_CLASSIFICATION	2.4213573003012535E-5	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999011381313	WITHOUT_CLASSIFICATION	9.886186872376017E-8	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999783722014	WITHOUT_CLASSIFICATION	2.1627798513341653E-8	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999994999027867	WITHOUT_CLASSIFICATION	5.000972132246004E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.669405562371415	DESIGN	0.330594437628585	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.669405562371415	DESIGN	0.330594437628585	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.669405562371415	DESIGN	0.330594437628585	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.669405562371415	DESIGN	0.330594437628585	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999988819631036	WITHOUT_CLASSIFICATION	1.1180368963388582E-6	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998828115143692	WITHOUT_CLASSIFICATION	1.171884856308765E-4	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999919670514954	WITHOUT_CLASSIFICATION	8.032948504487313E-6	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9955904098756977	WITHOUT_CLASSIFICATION	0.004409590124302257	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999993877227005	WITHOUT_CLASSIFICATION	6.12277299405963E-7	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999996865001215	WITHOUT_CLASSIFICATION	3.134998785927985E-7	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999977243805492	WITHOUT_CLASSIFICATION	2.275619450802639E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999977243805492	WITHOUT_CLASSIFICATION	2.275619450802639E-5	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999716719329755	WITHOUT_CLASSIFICATION	2.83280670245471E-5	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999960855753123	WITHOUT_CLASSIFICATION	3.9144246877522496E-6	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999966922219009	WITHOUT_CLASSIFICATION	3.3077780989995695E-6	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9980136050442889	WITHOUT_CLASSIFICATION	0.001986394955711081	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.99992690773268	WITHOUT_CLASSIFICATION	7.309226731992798E-5	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999973842792578	WITHOUT_CLASSIFICATION	2.6157207422088667E-6	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9993411410696453	WITHOUT_CLASSIFICATION	6.588589303547516E-4	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999847624135886	WITHOUT_CLASSIFICATION	1.5237586411472635E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999905455853106	WITHOUT_CLASSIFICATION	9.45441468941285E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999905455853106	WITHOUT_CLASSIFICATION	9.45441468941285E-5	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999953143485674	WITHOUT_CLASSIFICATION	4.6856514326817725E-6	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999860253228113	WITHOUT_CLASSIFICATION	1.3974677188637914E-5	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999853231281779	WITHOUT_CLASSIFICATION	1.4676871822081861E-5	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999998644455198	WITHOUT_CLASSIFICATION	1.355544802494141E-7	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999991599002139	WITHOUT_CLASSIFICATION	8.400997861545748E-7	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999949810119524	WITHOUT_CLASSIFICATION	5.018988047672685E-6	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.999950268786907	WITHOUT_CLASSIFICATION	4.9731213092895247E-5	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999770788368455	WITHOUT_CLASSIFICATION	2.2921163154475972E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999993927504651	WITHOUT_CLASSIFICATION	6.072495349605384E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999993927504651	WITHOUT_CLASSIFICATION	6.072495349605384E-7	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999969111182232	WITHOUT_CLASSIFICATION	3.08888177681948E-6	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999991013718786	WITHOUT_CLASSIFICATION	8.986281214349221E-7	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999716604666331	WITHOUT_CLASSIFICATION	2.8339533366882586E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.9999993966944032	WITHOUT_CLASSIFICATION	6.033055967996316E-7	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9976271685632824	WITHOUT_CLASSIFICATION	0.0023728314367176136	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999971590106732	WITHOUT_CLASSIFICATION	2.840989326864081E-6	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999980591693676	WITHOUT_CLASSIFICATION	1.9408306325085068E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999835529610153	WITHOUT_CLASSIFICATION	1.6447038984698857E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999835529610153	WITHOUT_CLASSIFICATION	1.6447038984698857E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999835529610153	WITHOUT_CLASSIFICATION	1.6447038984698857E-4	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999835529610153	WITHOUT_CLASSIFICATION	1.6447038984698857E-4	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999998013373586	WITHOUT_CLASSIFICATION	1.9866264149184117E-7	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9975045754482712	WITHOUT_CLASSIFICATION	0.0024954245517288857	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999871660657647	WITHOUT_CLASSIFICATION	1.2833934235427308E-5	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9963663818589369	WITHOUT_CLASSIFICATION	0.003633618141063132	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999988690889009	WITHOUT_CLASSIFICATION	1.130911099075728E-6	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999976165410449	WITHOUT_CLASSIFICATION	2.3834589550596646E-6	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999988145476866	WITHOUT_CLASSIFICATION	1.1854523134448554E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9996430902087221	WITHOUT_CLASSIFICATION	3.569097912779442E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9996430902087221	WITHOUT_CLASSIFICATION	3.569097912779442E-4	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9996430902087221	WITHOUT_CLASSIFICATION	3.569097912779442E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9971918682300379	WITHOUT_CLASSIFICATION	0.0028081317699621094	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999891036797216	WITHOUT_CLASSIFICATION	1.0896320278358199E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9977592505436701	WITHOUT_CLASSIFICATION	0.002240749456329875	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9977592505436701	WITHOUT_CLASSIFICATION	0.002240749456329875	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999976306626968	WITHOUT_CLASSIFICATION	2.3693373032479217E-6	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999970862483828	WITHOUT_CLASSIFICATION	2.9137516172314866E-6	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9980566352040715	WITHOUT_CLASSIFICATION	0.0019433647959285502	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999900116144583	WITHOUT_CLASSIFICATION	9.988385541678501E-6	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999988586167063	WITHOUT_CLASSIFICATION	1.1413832936673182E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999994449137148	WITHOUT_CLASSIFICATION	5.550862851107291E-7	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9835147063344224	WITHOUT_CLASSIFICATION	0.0164852936655776	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9835147063344224	WITHOUT_CLASSIFICATION	0.0164852936655776	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9987968060089449	WITHOUT_CLASSIFICATION	0.0012031939910551541	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999923210966074	WITHOUT_CLASSIFICATION	7.678903392581136E-6	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999032052604174	WITHOUT_CLASSIFICATION	9.679473958260972E-5	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.999974816911992	WITHOUT_CLASSIFICATION	2.5183088008087084E-5	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999773508303978	WITHOUT_CLASSIFICATION	2.264916960217198E-5	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999828884567868	WITHOUT_CLASSIFICATION	1.7111543213177516E-5	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999952851037244	WITHOUT_CLASSIFICATION	4.714896275565184E-6	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999117282840223	WITHOUT_CLASSIFICATION	8.82717159777239E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999975903493711	WITHOUT_CLASSIFICATION	2.4096506288298276E-6	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999992631152288	WITHOUT_CLASSIFICATION	7.368847712181974E-7	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999971295718991	WITHOUT_CLASSIFICATION	2.870428100932359E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999011018291724	WITHOUT_CLASSIFICATION	9.889817082758268E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9944363443688027	WITHOUT_CLASSIFICATION	0.005563655631197335	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9990594544732592	WITHOUT_CLASSIFICATION	9.405455267407364E-4	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999994138588295	WITHOUT_CLASSIFICATION	5.861411705194869E-7	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9997643047415979	WITHOUT_CLASSIFICATION	2.3569525840214738E-4	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.998158723593514	WITHOUT_CLASSIFICATION	0.0018412764064859642	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9871564554441296	WITHOUT_CLASSIFICATION	0.0128435445558704	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999943393166246	WITHOUT_CLASSIFICATION	5.66068337527901E-6	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999101188825565	WITHOUT_CLASSIFICATION	8.988111744342265E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999999709420559	WITHOUT_CLASSIFICATION	2.905794408740625E-7	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9967522532465266	WITHOUT_CLASSIFICATION	0.0032477467534734383	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999485321219	WITHOUT_CLASSIFICATION	5.146787812995312E-8	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999485321219	WITHOUT_CLASSIFICATION	5.146787812995312E-8	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999485321219	WITHOUT_CLASSIFICATION	5.146787812995312E-8	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999485321219	WITHOUT_CLASSIFICATION	5.146787812995312E-8	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999485321219	WITHOUT_CLASSIFICATION	5.146787812995312E-8	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999485321219	WITHOUT_CLASSIFICATION	5.146787812995312E-8	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999485321219	WITHOUT_CLASSIFICATION	5.146787812995312E-8	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999485321219	WITHOUT_CLASSIFICATION	5.146787812995312E-8	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9992539964455643	WITHOUT_CLASSIFICATION	7.460035544356792E-4	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999977841607707	WITHOUT_CLASSIFICATION	2.2158392292532115E-6	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999943234868505	WITHOUT_CLASSIFICATION	5.6765131494839835E-6	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.7437491526066485	WITHOUT_CLASSIFICATION	0.25625084739335147	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9980979805006046	WITHOUT_CLASSIFICATION	0.0019020194993954619	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9980979805006046	WITHOUT_CLASSIFICATION	0.0019020194993954619	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999840736669715	WITHOUT_CLASSIFICATION	1.592633302847781E-5	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.8122100362202689	WITHOUT_CLASSIFICATION	0.18778996377973106	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999994374168473	WITHOUT_CLASSIFICATION	5.625831527099466E-7	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999994735770423	WITHOUT_CLASSIFICATION	5.264229577028992E-7	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999995949499909	WITHOUT_CLASSIFICATION	4.0505000903681875E-7	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.999999444257086	WITHOUT_CLASSIFICATION	5.557429139173525E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999952489523382	WITHOUT_CLASSIFICATION	4.751047661924205E-6	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9457533557833804	WITHOUT_CLASSIFICATION	0.05424664421661958	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999998078173814	WITHOUT_CLASSIFICATION	1.921826185548577E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.99792190488516	WITHOUT_CLASSIFICATION	0.0020780951148399976	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.99792190488516	WITHOUT_CLASSIFICATION	0.0020780951148399976	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.99792190488516	WITHOUT_CLASSIFICATION	0.0020780951148399976	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999984190899043	WITHOUT_CLASSIFICATION	1.5809100956710469E-6	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999971945570738	WITHOUT_CLASSIFICATION	2.8054429261203955E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999987920245692	WITHOUT_CLASSIFICATION	1.2079754307735047E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.999999992837284	WITHOUT_CLASSIFICATION	7.162715966418117E-9	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997858105657351	WITHOUT_CLASSIFICATION	2.1418943426482448E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999537360218	WITHOUT_CLASSIFICATION	4.6263978150838035E-8	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999914987354	WITHOUT_CLASSIFICATION	8.501264552987712E-9	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9817654871682737	WITHOUT_CLASSIFICATION	0.01823451283172634	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999910269580968	WITHOUT_CLASSIFICATION	8.973041903229593E-6	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999910269580968	WITHOUT_CLASSIFICATION	8.973041903229593E-6	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999967671983614	WITHOUT_CLASSIFICATION	3.2328016386289054E-6	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.99998221658355	WITHOUT_CLASSIFICATION	1.7783416450091804E-5	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9982989745341727	WITHOUT_CLASSIFICATION	0.0017010254658273761	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9997882054373068	WITHOUT_CLASSIFICATION	2.1179456269320736E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999997573602418	WITHOUT_CLASSIFICATION	2.4263975821230217E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.9999997573602418	WITHOUT_CLASSIFICATION	2.4263975821230217E-7	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.999942268332451	WITHOUT_CLASSIFICATION	5.773166754904475E-5	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9998558324580029	WITHOUT_CLASSIFICATION	1.4416754199702216E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999093976996141	WITHOUT_CLASSIFICATION	9.060230038587877E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9998075770309627	WITHOUT_CLASSIFICATION	1.92422969037216E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999965820461435	WITHOUT_CLASSIFICATION	3.41795385648681E-6	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999846096042	WITHOUT_CLASSIFICATION	1.5390395807989755E-8	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999846096042	WITHOUT_CLASSIFICATION	1.5390395807989755E-8	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999996501885899	WITHOUT_CLASSIFICATION	3.498114100231294E-7	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999996501885899	WITHOUT_CLASSIFICATION	3.498114100231294E-7	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.999999246867843	WITHOUT_CLASSIFICATION	7.531321569240462E-7	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999996736125117	WITHOUT_CLASSIFICATION	3.2638748827028413E-7	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999997227523753	WITHOUT_CLASSIFICATION	2.7724762473828703E-7	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999955611292439	WITHOUT_CLASSIFICATION	4.438870756088137E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999999231853084	WITHOUT_CLASSIFICATION	7.681469157524863E-8	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.999853346879162	WITHOUT_CLASSIFICATION	1.4665312083801194E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9997360358549879	WITHOUT_CLASSIFICATION	2.639641450121547E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999987295944667	WITHOUT_CLASSIFICATION	1.2704055333672102E-6	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999859670404442	WITHOUT_CLASSIFICATION	1.4032959555730857E-5	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999997120236634	WITHOUT_CLASSIFICATION	2.879763366412762E-7	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.999911160148634	WITHOUT_CLASSIFICATION	8.883985136594745E-5	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999955012670719	WITHOUT_CLASSIFICATION	4.498732928055605E-6	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9964237116223501	WITHOUT_CLASSIFICATION	0.0035762883776498545	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999975346646137	WITHOUT_CLASSIFICATION	2.4653353862575554E-6	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.8264158105862458	WITHOUT_CLASSIFICATION	0.17358418941375423	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9916167571714627	WITHOUT_CLASSIFICATION	0.008383242828537337	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9986862709861696	WITHOUT_CLASSIFICATION	0.001313729013830406	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999937597834839	WITHOUT_CLASSIFICATION	6.240216515990445E-6	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999540061297141	WITHOUT_CLASSIFICATION	4.599387028597763E-5	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999931638199947	WITHOUT_CLASSIFICATION	6.836180005396819E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9512197510557443	WITHOUT_CLASSIFICATION	0.048780248944255776	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9998274970783424	WITHOUT_CLASSIFICATION	1.7250292165755618E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999930391584126	WITHOUT_CLASSIFICATION	6.960841587352371E-6	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9998189114909422	WITHOUT_CLASSIFICATION	1.8108850905772017E-4	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999998799877118	WITHOUT_CLASSIFICATION	1.2001228816502218E-7	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999964423792513	WITHOUT_CLASSIFICATION	3.5576207486772163E-6	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999989019605277	WITHOUT_CLASSIFICATION	1.0980394724151124E-6	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9998039945723626	WITHOUT_CLASSIFICATION	1.960054276374568E-4	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999991903001635	WITHOUT_CLASSIFICATION	8.096998365520153E-7	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9926450929200664	WITHOUT_CLASSIFICATION	0.007354907079933631	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999851383126418	WITHOUT_CLASSIFICATION	1.4861687358173799E-5	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999984638516078	WITHOUT_CLASSIFICATION	1.5361483920831488E-6	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9998794544917252	WITHOUT_CLASSIFICATION	1.2054550827477541E-4	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999759606061348	WITHOUT_CLASSIFICATION	2.403939386520499E-5	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999912306268389	WITHOUT_CLASSIFICATION	8.769373160992675E-6	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9981735227423346	WITHOUT_CLASSIFICATION	0.0018264772576654822	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999977666526688	WITHOUT_CLASSIFICATION	2.2333473312728163E-6	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999952488244963	WITHOUT_CLASSIFICATION	4.751175503695869E-6	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999993910333276	WITHOUT_CLASSIFICATION	6.089666724489797E-7	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.8087715386786449	WITHOUT_CLASSIFICATION	0.1912284613213551	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9994649226461156	WITHOUT_CLASSIFICATION	5.350773538842632E-4	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999985857367936	WITHOUT_CLASSIFICATION	1.4142632064822312E-6	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9997737268929453	WITHOUT_CLASSIFICATION	2.2627310705458428E-4	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9998411354176634	WITHOUT_CLASSIFICATION	1.5886458233662834E-4	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9990189582758661	WITHOUT_CLASSIFICATION	9.810417241338633E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9980312090608426	WITHOUT_CLASSIFICATION	0.00196879093915729	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999983924858138	WITHOUT_CLASSIFICATION	1.60751418624848E-6	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9998889425527332	WITHOUT_CLASSIFICATION	1.1105744726683833E-4	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999998225174855	WITHOUT_CLASSIFICATION	1.774825145443034E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999756050821903	WITHOUT_CLASSIFICATION	2.4394917809583878E-5	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999381931679414	WITHOUT_CLASSIFICATION	6.180683205862985E-5	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999987108245152	WITHOUT_CLASSIFICATION	1.2891754848299287E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999987108245152	WITHOUT_CLASSIFICATION	1.2891754848299287E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999950828645161	WITHOUT_CLASSIFICATION	4.917135483887762E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999950828645161	WITHOUT_CLASSIFICATION	4.917135483887762E-6	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9994497772406591	WITHOUT_CLASSIFICATION	5.502227593409983E-4	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9994497772406591	WITHOUT_CLASSIFICATION	5.502227593409983E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984724148239	WITHOUT_CLASSIFICATION	1.5275851762380737E-6	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984724148239	WITHOUT_CLASSIFICATION	1.5275851762380737E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999671999332	WITHOUT_CLASSIFICATION	3.280006680998491E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999671999332	WITHOUT_CLASSIFICATION	3.280006680998491E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999671999332	WITHOUT_CLASSIFICATION	3.280006680998491E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999671999332	WITHOUT_CLASSIFICATION	3.280006680998491E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999671999332	WITHOUT_CLASSIFICATION	3.280006680998491E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999671999332	WITHOUT_CLASSIFICATION	3.280006680998491E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999671999332	WITHOUT_CLASSIFICATION	3.280006680998491E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999671999332	WITHOUT_CLASSIFICATION	3.280006680998491E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999671999332	WITHOUT_CLASSIFICATION	3.280006680998491E-8	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999271913383466	WITHOUT_CLASSIFICATION	7.28086616534215E-5	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999271913383466	WITHOUT_CLASSIFICATION	7.28086616534215E-5	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999271913383466	WITHOUT_CLASSIFICATION	7.28086616534215E-5	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999997098413236	WITHOUT_CLASSIFICATION	2.901586764246345E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999922947902314	WITHOUT_CLASSIFICATION	7.705209768446052E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999922947902314	WITHOUT_CLASSIFICATION	7.705209768446052E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999922947902314	WITHOUT_CLASSIFICATION	7.705209768446052E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999704499979	WITHOUT_CLASSIFICATION	2.955000209405649E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999704499979	WITHOUT_CLASSIFICATION	2.955000209405649E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999704499979	WITHOUT_CLASSIFICATION	2.955000209405649E-7	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999628479890437	WITHOUT_CLASSIFICATION	3.715201095632764E-5	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999984772694909	WITHOUT_CLASSIFICATION	1.5227305090927432E-6	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999489761678093	WITHOUT_CLASSIFICATION	5.1023832190702704E-5	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998308492105396	WITHOUT_CLASSIFICATION	1.6915078946043983E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998308492105396	WITHOUT_CLASSIFICATION	1.6915078946043983E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998308492105396	WITHOUT_CLASSIFICATION	1.6915078946043983E-4	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999992094037692	WITHOUT_CLASSIFICATION	7.905962308569658E-7	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999925804171107	WITHOUT_CLASSIFICATION	7.419582889303754E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999925804171107	WITHOUT_CLASSIFICATION	7.419582889303754E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999573859778062	WITHOUT_CLASSIFICATION	4.2614022193806546E-4	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9997825299617193	WITHOUT_CLASSIFICATION	2.174700382807587E-4	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9997825299617193	WITHOUT_CLASSIFICATION	2.174700382807587E-4	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9999181501772132	DESIGN	8.18498227867398E-5	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9997858695018357	WITHOUT_CLASSIFICATION	2.1413049816446003E-4	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999871278591986	WITHOUT_CLASSIFICATION	1.2872140801434195E-5	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999512095648	WITHOUT_CLASSIFICATION	4.8790435287225384E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999512095648	WITHOUT_CLASSIFICATION	4.8790435287225384E-8	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9996361745885939	WITHOUT_CLASSIFICATION	3.638254114061403E-4	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999992622892	WITHOUT_CLASSIFICATION	7.377108341188606E-10	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9980358773694389	WITHOUT_CLASSIFICATION	0.0019641226305611163	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9977382122598039	WITHOUT_CLASSIFICATION	0.002261787740196151	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.960519990426315	WITHOUT_CLASSIFICATION	0.03948000957368505	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999512095648	WITHOUT_CLASSIFICATION	4.8790435287225384E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999512095648	WITHOUT_CLASSIFICATION	4.8790435287225384E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999512095648	WITHOUT_CLASSIFICATION	4.8790435287225384E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999512095648	WITHOUT_CLASSIFICATION	4.8790435287225384E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999512095648	WITHOUT_CLASSIFICATION	4.8790435287225384E-8	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999999738391531	WITHOUT_CLASSIFICATION	2.6160846914164033E-8	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999812237470707	WITHOUT_CLASSIFICATION	1.8776252929347206E-5	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999995593384213	WITHOUT_CLASSIFICATION	4.4066157869008334E-7	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999985431104175	WITHOUT_CLASSIFICATION	1.4568895826017514E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9998664975673498	WITHOUT_CLASSIFICATION	1.3350243265016867E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9999984972283303	WITHOUT_CLASSIFICATION	1.5027716697296614E-6	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9887193211061496	DESIGN	0.011280678893850541	WITHOUT_CLASSIFICATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9930144357249187	WITHOUT_CLASSIFICATION	0.00698556427508135	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999997690091078	WITHOUT_CLASSIFICATION	2.3099089221094033E-6	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999984099126135	WITHOUT_CLASSIFICATION	1.590087386524903E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999382588789977	WITHOUT_CLASSIFICATION	6.174112100233698E-5	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999980536582983	WITHOUT_CLASSIFICATION	1.946341701699813E-5	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999992514196312	WITHOUT_CLASSIFICATION	7.485803688724387E-7	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999991966153498	WITHOUT_CLASSIFICATION	8.033846502851372E-7	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9995856275394929	WITHOUT_CLASSIFICATION	4.1437246050718483E-4	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9591317792892723	WITHOUT_CLASSIFICATION	0.040868220710727717	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999535046554894	WITHOUT_CLASSIFICATION	4.6495344510722767E-5	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.999994504872081	WITHOUT_CLASSIFICATION	5.495127919016186E-6	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999986581936811	WITHOUT_CLASSIFICATION	1.3418063189346154E-6	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999984921051539	WITHOUT_CLASSIFICATION	1.5078948460984938E-6	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999202603548664	WITHOUT_CLASSIFICATION	7.973964513364852E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999967888494541	WITHOUT_CLASSIFICATION	3.2111505459445543E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999970089936524	WITHOUT_CLASSIFICATION	2.991006347636935E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999474592351789	WITHOUT_CLASSIFICATION	5.2540764821099385E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999474592351789	WITHOUT_CLASSIFICATION	5.2540764821099385E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999474592351789	WITHOUT_CLASSIFICATION	5.2540764821099385E-5	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999474592351789	WITHOUT_CLASSIFICATION	5.2540764821099385E-5	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999989885057058	WITHOUT_CLASSIFICATION	1.0114942942936212E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9997852734605086	WITHOUT_CLASSIFICATION	2.1472653949128464E-4	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999959446638107	WITHOUT_CLASSIFICATION	4.0553361893008354E-5	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999959446638107	WITHOUT_CLASSIFICATION	4.0553361893008354E-5	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999998778722615	WITHOUT_CLASSIFICATION	1.221277385767148E-7	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999833984262936	WITHOUT_CLASSIFICATION	1.660157370637931E-5	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.999916476028719	WITHOUT_CLASSIFICATION	8.3523971280979E-5	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.99999999096212	WITHOUT_CLASSIFICATION	9.037879873590577E-9	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9996886595170134	WITHOUT_CLASSIFICATION	3.1134048298659317E-4	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999727033215399	WITHOUT_CLASSIFICATION	2.7296678460084962E-5	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9959113912128934	WITHOUT_CLASSIFICATION	0.004088608787106615	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999999471820272	WITHOUT_CLASSIFICATION	5.2817972852998006E-8	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999999471820272	WITHOUT_CLASSIFICATION	5.2817972852998006E-8	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999999471820272	WITHOUT_CLASSIFICATION	5.2817972852998006E-8	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999999471820272	WITHOUT_CLASSIFICATION	5.2817972852998006E-8	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999876212364	WITHOUT_CLASSIFICATION	1.2378763430590779E-8	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999864466128466	WITHOUT_CLASSIFICATION	1.355338715338667E-5	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999864466128466	WITHOUT_CLASSIFICATION	1.355338715338667E-5	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999864466128466	WITHOUT_CLASSIFICATION	1.355338715338667E-5	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999938055861136	WITHOUT_CLASSIFICATION	6.1944138864009804E-6	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999999704075769	WITHOUT_CLASSIFICATION	2.9592423007836667E-8	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.999818241858846	WITHOUT_CLASSIFICATION	1.8175814115406052E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.669405562371415	DESIGN	0.330594437628585	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.669405562371415	DESIGN	0.330594437628585	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999943100203306	WITHOUT_CLASSIFICATION	5.6899796695173275E-6	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9967958398826964	WITHOUT_CLASSIFICATION	0.0032041601173036947	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999992792891568	WITHOUT_CLASSIFICATION	7.2071084331153E-7	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999992792891568	WITHOUT_CLASSIFICATION	7.2071084331153E-7	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.976031861993789	WITHOUT_CLASSIFICATION	0.023968138006210976	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.976031861993789	WITHOUT_CLASSIFICATION	0.023968138006210976	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9981864041140531	WITHOUT_CLASSIFICATION	0.0018135958859468342	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999728740649702	WITHOUT_CLASSIFICATION	2.7125935029863498E-5	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999998053079231	WITHOUT_CLASSIFICATION	1.9469207700053614E-7	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999953989913511	WITHOUT_CLASSIFICATION	4.601008648852662E-6	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999772516811574	WITHOUT_CLASSIFICATION	2.2748318842674915E-5	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999985578943562	WITHOUT_CLASSIFICATION	1.4421056437804038E-6	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999999818532743	WITHOUT_CLASSIFICATION	1.8146725696048422E-7	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.999997239389389	WITHOUT_CLASSIFICATION	2.760610611072004E-6	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999772346333753	WITHOUT_CLASSIFICATION	2.276536662480548E-5	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999192507045412	WITHOUT_CLASSIFICATION	8.074929545879031E-5	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999192507045412	WITHOUT_CLASSIFICATION	8.074929545879031E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999995422738082	WITHOUT_CLASSIFICATION	4.5772619185050225E-7	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999995422738082	WITHOUT_CLASSIFICATION	4.5772619185050225E-7	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999812865914939	WITHOUT_CLASSIFICATION	1.8713408506151766E-5	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999989051982793	WITHOUT_CLASSIFICATION	1.0948017207494672E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999991113447446	WITHOUT_CLASSIFICATION	8.886552553394614E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999878035658601	WITHOUT_CLASSIFICATION	1.21964341397284E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999878035658601	WITHOUT_CLASSIFICATION	1.21964341397284E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999878035658601	WITHOUT_CLASSIFICATION	1.21964341397284E-5	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999949885979401	WITHOUT_CLASSIFICATION	5.01140205993896E-6	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999867594109274	WITHOUT_CLASSIFICATION	1.3240589072501809E-5	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999851157059461	WITHOUT_CLASSIFICATION	1.488429405386507E-5	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999924480201254	WITHOUT_CLASSIFICATION	7.551979874592917E-6	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999831532794615	WITHOUT_CLASSIFICATION	1.684672053850092E-5	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999886996732866	WITHOUT_CLASSIFICATION	1.1300326713269793E-5	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999915239211341	WITHOUT_CLASSIFICATION	8.476078865966397E-6	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999915236711298	WITHOUT_CLASSIFICATION	8.476328870294532E-6	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.997183842812398	WITHOUT_CLASSIFICATION	0.0028161571876019415	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9994975936281746	WITHOUT_CLASSIFICATION	5.024063718254729E-4	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9970741810690383	WITHOUT_CLASSIFICATION	0.002925818930961654	DESIGN
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9996657863785887	WITHOUT_CLASSIFICATION	3.3421362141133903E-4	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9998241086731129	WITHOUT_CLASSIFICATION	1.7589132688707602E-4	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.669405562371415	DESIGN	0.330594437628585	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.99956556504264	WITHOUT_CLASSIFICATION	4.344349573600351E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999490858634068	WITHOUT_CLASSIFICATION	5.0914136593126764E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999975786426997	WITHOUT_CLASSIFICATION	2.4213573003012535E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9997319238752311	WITHOUT_CLASSIFICATION	2.680761247687947E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9997319238752311	WITHOUT_CLASSIFICATION	2.680761247687947E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9997319238752311	WITHOUT_CLASSIFICATION	2.680761247687947E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9997319238752311	WITHOUT_CLASSIFICATION	2.680761247687947E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9997319238752311	WITHOUT_CLASSIFICATION	2.680761247687947E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999547129716382	WITHOUT_CLASSIFICATION	4.5287028361914585E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9997319238752311	WITHOUT_CLASSIFICATION	2.680761247687947E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9997319238752311	WITHOUT_CLASSIFICATION	2.680761247687947E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9997319238752311	WITHOUT_CLASSIFICATION	2.680761247687947E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9248398363503126	WITHOUT_CLASSIFICATION	0.0751601636496874	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9867074884069426	WITHOUT_CLASSIFICATION	0.013292511593057409	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.999342325578513	WITHOUT_CLASSIFICATION	6.576744214869153E-4	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999752217042245	WITHOUT_CLASSIFICATION	2.4778295775536257E-5	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999876854922801	WITHOUT_CLASSIFICATION	1.2314507719765464E-5	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999709554484096	WITHOUT_CLASSIFICATION	2.9044551590413202E-5	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9908020406916009	WITHOUT_CLASSIFICATION	0.009197959308398961	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999944329144002	WITHOUT_CLASSIFICATION	5.567085599890582E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999898934897341	WITHOUT_CLASSIFICATION	1.010651026591613E-5	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999898934897341	WITHOUT_CLASSIFICATION	1.010651026591613E-5	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999910286216421	WITHOUT_CLASSIFICATION	8.971378357815767E-6	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999845218897052	WITHOUT_CLASSIFICATION	1.5478110294788923E-5	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999889866922252	WITHOUT_CLASSIFICATION	1.1013307774741251E-5	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999905518100702	WITHOUT_CLASSIFICATION	9.448189929758607E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999937328346072	WITHOUT_CLASSIFICATION	6.267165392704373E-6	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.9999907216816106	WITHOUT_CLASSIFICATION	9.278318389367944E-6	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999915407662463	WITHOUT_CLASSIFICATION	8.459233753583247E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999935483414898	WITHOUT_CLASSIFICATION	6.451658510136947E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999910698446526	WITHOUT_CLASSIFICATION	8.93015534735106E-6	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999948359734759	WITHOUT_CLASSIFICATION	5.164026524067151E-6	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999968803657604	WITHOUT_CLASSIFICATION	3.1196342395426715E-6	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999949830557491	WITHOUT_CLASSIFICATION	5.0169442509577905E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999874315630748	WITHOUT_CLASSIFICATION	1.2568436925151545E-5	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999899049420496	WITHOUT_CLASSIFICATION	1.0095057950315945E-5	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999889893116669	WITHOUT_CLASSIFICATION	1.1010688333117784E-5	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999909152567263	WITHOUT_CLASSIFICATION	9.08474327363634E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999889544074286	WITHOUT_CLASSIFICATION	1.10455925714049E-5	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999917870952131	WITHOUT_CLASSIFICATION	8.212904786894753E-6	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999906108005094	WITHOUT_CLASSIFICATION	9.389199490484274E-6	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999930826881	WITHOUT_CLASSIFICATION	6.917311899919658E-6	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999946396672228	WITHOUT_CLASSIFICATION	5.360332777230734E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999948308773509	WITHOUT_CLASSIFICATION	5.169122649235243E-6	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999914688400152	WITHOUT_CLASSIFICATION	8.531159984728861E-6	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999793962768793	WITHOUT_CLASSIFICATION	2.0603723120756517E-5	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999870236787598	WITHOUT_CLASSIFICATION	1.2976321240178642E-5	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999827068590377	WITHOUT_CLASSIFICATION	1.7293140962279903E-5	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999839469205271	WITHOUT_CLASSIFICATION	1.605307947285752E-5	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999888230016188	WITHOUT_CLASSIFICATION	1.1176998381232509E-5	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999873942644707	WITHOUT_CLASSIFICATION	1.26057355293832E-5	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999944831902139	WITHOUT_CLASSIFICATION	5.516809786134455E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999964202531786	WITHOUT_CLASSIFICATION	3.5797468214722638E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999867151744375	WITHOUT_CLASSIFICATION	1.3284825562477198E-5	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999886413748252	WITHOUT_CLASSIFICATION	1.1358625174681558E-5	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999876973529981	WITHOUT_CLASSIFICATION	1.2302647001812208E-5	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999952356357497	WITHOUT_CLASSIFICATION	4.764364250355181E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999969090837357	WITHOUT_CLASSIFICATION	3.0909162643014138E-6	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999917813462716	WITHOUT_CLASSIFICATION	8.218653728399064E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999922308969331	WITHOUT_CLASSIFICATION	7.769103066941137E-6	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999956213165867	WITHOUT_CLASSIFICATION	4.378683413387309E-6	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999872293237798	WITHOUT_CLASSIFICATION	1.2770676220076475E-5	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999904576834194	WITHOUT_CLASSIFICATION	9.542316580660857E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999920976868849	WITHOUT_CLASSIFICATION	7.902313115072776E-6	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999880947491072	WITHOUT_CLASSIFICATION	1.1905250892860344E-5	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999764323847702	WITHOUT_CLASSIFICATION	2.356761522985225E-5	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999870429471128	WITHOUT_CLASSIFICATION	1.2957052887245894E-5	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999895457719831	WITHOUT_CLASSIFICATION	1.0454228016886788E-5	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999781482193125	WITHOUT_CLASSIFICATION	2.1851780687463966E-5	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999808800104595	WITHOUT_CLASSIFICATION	1.9119989540477127E-5	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999906227018804	WITHOUT_CLASSIFICATION	9.377298119634544E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999822567795493	WITHOUT_CLASSIFICATION	1.7743220450573038E-5	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999849574951917	WITHOUT_CLASSIFICATION	1.504250480842352E-5	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999900991109018	WITHOUT_CLASSIFICATION	9.900889098319084E-6	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.999994132374089	WITHOUT_CLASSIFICATION	5.86762591102182E-6	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.999963278452356	WITHOUT_CLASSIFICATION	3.672154764408914E-5	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.999963278452356	WITHOUT_CLASSIFICATION	3.672154764408914E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999859717762531	WITHOUT_CLASSIFICATION	1.4028223746917654E-5	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999927607466917	WITHOUT_CLASSIFICATION	7.239253308264432E-6	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999788425302988	WITHOUT_CLASSIFICATION	2.1157469701237297E-5	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999909709127163	WITHOUT_CLASSIFICATION	9.029087283730448E-6	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999888373827047	WITHOUT_CLASSIFICATION	1.1162617295247439E-5	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999932788105584	WITHOUT_CLASSIFICATION	6.721189441582127E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.999989626517118	WITHOUT_CLASSIFICATION	1.0373482882137066E-5	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999915490137239	WITHOUT_CLASSIFICATION	8.450986276156672E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999949784186039	WITHOUT_CLASSIFICATION	5.021581396097987E-6	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999911876431158	WITHOUT_CLASSIFICATION	8.812356884103834E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999974232539741	WITHOUT_CLASSIFICATION	2.576746025944732E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999974232539741	WITHOUT_CLASSIFICATION	2.576746025944732E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999994702653933	WITHOUT_CLASSIFICATION	5.297346067220779E-7	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999434022121382	WITHOUT_CLASSIFICATION	5.6597787861883115E-5	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9942874609078863	WITHOUT_CLASSIFICATION	0.0057125390921136405	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999996435244362	WITHOUT_CLASSIFICATION	3.5647556389024483E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999867615887	WITHOUT_CLASSIFICATION	1.3238411211576635E-8	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999867615887	WITHOUT_CLASSIFICATION	1.3238411211576635E-8	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999867615887	WITHOUT_CLASSIFICATION	1.3238411211576635E-8	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999867615887	WITHOUT_CLASSIFICATION	1.3238411211576635E-8	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9693025980579428	WITHOUT_CLASSIFICATION	0.03069740194205721	DESIGN
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.8922736468532678	DESIGN	0.10772635314673219	WITHOUT_CLASSIFICATION
// line 313	WITHOUT_CLASSIFICATION	0.9999870138789739	WITHOUT_CLASSIFICATION	1.2986121026206993E-5	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999844557224348	WITHOUT_CLASSIFICATION	1.554427756526127E-5	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999860424582698	WITHOUT_CLASSIFICATION	1.3957541730077494E-5	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999821074892032	WITHOUT_CLASSIFICATION	1.7892510796823083E-5	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.999987765182721	WITHOUT_CLASSIFICATION	1.2234817278958397E-5	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.999993445026626	WITHOUT_CLASSIFICATION	6.554973373963041E-6	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.999992631457296	WITHOUT_CLASSIFICATION	7.368542704044033E-6	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999912939005673	WITHOUT_CLASSIFICATION	8.706099432731272E-6	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999902556328601	WITHOUT_CLASSIFICATION	9.744367139860899E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999941082538861	WITHOUT_CLASSIFICATION	5.891746113821942E-6	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999896907697817	WITHOUT_CLASSIFICATION	1.0309230218288757E-5	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999846238607024	WITHOUT_CLASSIFICATION	1.5376139297628977E-5	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999876847266633	WITHOUT_CLASSIFICATION	1.231527333666474E-5	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999855826715197	WITHOUT_CLASSIFICATION	1.4417328480296892E-5	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999915407662463	WITHOUT_CLASSIFICATION	8.459233753583247E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999920335914022	WITHOUT_CLASSIFICATION	7.966408597748226E-6	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.9999897201174353	WITHOUT_CLASSIFICATION	1.0279882564662634E-5	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999907544768265	WITHOUT_CLASSIFICATION	9.245523173444788E-6	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999960582800598	WITHOUT_CLASSIFICATION	3.941719940130233E-6	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999893985955041	WITHOUT_CLASSIFICATION	1.0601404496000316E-5	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999916546530497	WITHOUT_CLASSIFICATION	8.345346950371032E-6	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999911177519374	WITHOUT_CLASSIFICATION	8.88224806265882E-6	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999940266369097	WITHOUT_CLASSIFICATION	5.973363090323747E-6	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999870765037457	WITHOUT_CLASSIFICATION	1.2923496254240763E-5	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999946967248095	WITHOUT_CLASSIFICATION	5.303275190478601E-6	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999897904459428	WITHOUT_CLASSIFICATION	1.0209554057054073E-5	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999954487036377	WITHOUT_CLASSIFICATION	4.551296362343699E-6	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999863165806611	WITHOUT_CLASSIFICATION	1.3683419338877007E-5	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999914348646398	WITHOUT_CLASSIFICATION	8.565135360163194E-6	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999944323328037	WITHOUT_CLASSIFICATION	5.567667196338784E-6	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999923559139987	WITHOUT_CLASSIFICATION	7.644086001211827E-6	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.999993499120149	WITHOUT_CLASSIFICATION	6.500879850912719E-6	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999932765538385	WITHOUT_CLASSIFICATION	6.723446161549647E-6	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999879099876692	WITHOUT_CLASSIFICATION	1.2090012330858436E-5	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999821275051556	WITHOUT_CLASSIFICATION	1.787249484439749E-5	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999839188334795	WITHOUT_CLASSIFICATION	1.6081166520488507E-5	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999888517172983	WITHOUT_CLASSIFICATION	1.1148282701646412E-5	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999834414583065	WITHOUT_CLASSIFICATION	1.6558541693427655E-5	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999921792128754	WITHOUT_CLASSIFICATION	7.820787124470081E-6	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999784173770919	WITHOUT_CLASSIFICATION	2.1582622908089605E-5	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999858068604655	WITHOUT_CLASSIFICATION	1.4193139534487754E-5	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999870504356634	WITHOUT_CLASSIFICATION	1.2949564336645346E-5	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999915503309527	WITHOUT_CLASSIFICATION	8.449669047435673E-6	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999911301185084	WITHOUT_CLASSIFICATION	8.869881491662979E-6	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.999973260512206	WITHOUT_CLASSIFICATION	2.6739487794012207E-5	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999850352632556	WITHOUT_CLASSIFICATION	1.496473674437341E-5	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999943972415379	WITHOUT_CLASSIFICATION	5.602758462122036E-6	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999859085250337	WITHOUT_CLASSIFICATION	1.4091474966354905E-5	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999903652165442	WITHOUT_CLASSIFICATION	9.634783455770965E-6	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999892920703712	WITHOUT_CLASSIFICATION	1.070792962869048E-5	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999962294743259	WITHOUT_CLASSIFICATION	3.7705256741312375E-6	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999915363948161	WITHOUT_CLASSIFICATION	8.463605183928475E-6	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999909683809338	WITHOUT_CLASSIFICATION	9.031619066276539E-6	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.999990553009079	WITHOUT_CLASSIFICATION	9.446990921024301E-6	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999913577995239	WITHOUT_CLASSIFICATION	8.64220047611411E-6	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999932470962176	WITHOUT_CLASSIFICATION	6.752903782347443E-6	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999949218503755	WITHOUT_CLASSIFICATION	5.0781496244727445E-6	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9969773766696453	WITHOUT_CLASSIFICATION	0.0030226233303546624	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999984885330514	WITHOUT_CLASSIFICATION	1.5114669485452245E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999302184117427	WITHOUT_CLASSIFICATION	6.97815882572332E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999302184117427	WITHOUT_CLASSIFICATION	6.97815882572332E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999302184117427	WITHOUT_CLASSIFICATION	6.97815882572332E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999302184117427	WITHOUT_CLASSIFICATION	6.97815882572332E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999302184117427	WITHOUT_CLASSIFICATION	6.97815882572332E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999302184117427	WITHOUT_CLASSIFICATION	6.97815882572332E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999302184117427	WITHOUT_CLASSIFICATION	6.97815882572332E-5	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9960851974105182	WITHOUT_CLASSIFICATION	0.0039148025894817935	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9960851974105182	WITHOUT_CLASSIFICATION	0.0039148025894817935	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9960851974105182	WITHOUT_CLASSIFICATION	0.0039148025894817935	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9960851974105182	WITHOUT_CLASSIFICATION	0.0039148025894817935	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999965998743784	WITHOUT_CLASSIFICATION	3.4001256215100946E-6	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999965998743784	WITHOUT_CLASSIFICATION	3.4001256215100946E-6	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9721830216804612	WITHOUT_CLASSIFICATION	0.027816978319538836	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999560749349282	WITHOUT_CLASSIFICATION	4.392506507184478E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999560749349282	WITHOUT_CLASSIFICATION	4.392506507184478E-5	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9998036327115152	WITHOUT_CLASSIFICATION	1.9636728848487065E-4	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999997132079911	WITHOUT_CLASSIFICATION	2.8679200892020714E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999953382716356	WITHOUT_CLASSIFICATION	4.66172836449194E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999953382716356	WITHOUT_CLASSIFICATION	4.66172836449194E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999953382716356	WITHOUT_CLASSIFICATION	4.66172836449194E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999953382716356	WITHOUT_CLASSIFICATION	4.66172836449194E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999953382716356	WITHOUT_CLASSIFICATION	4.66172836449194E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999953382716356	WITHOUT_CLASSIFICATION	4.66172836449194E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999953382716356	WITHOUT_CLASSIFICATION	4.66172836449194E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990446724938	WITHOUT_CLASSIFICATION	9.55327506138317E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999998957411137	WITHOUT_CLASSIFICATION	1.0425888630692425E-6	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999099530467951	WITHOUT_CLASSIFICATION	9.004695320488746E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999099530467951	WITHOUT_CLASSIFICATION	9.004695320488746E-5	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999968469021844	WITHOUT_CLASSIFICATION	3.1530978155085642E-6	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999885974355883	WITHOUT_CLASSIFICATION	1.1402564411592975E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999885974355883	WITHOUT_CLASSIFICATION	1.1402564411592975E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9987974402377913	WITHOUT_CLASSIFICATION	0.0012025597622087444	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9998953396610679	DESIGN	1.0466033893204549E-4	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.990532385266215	WITHOUT_CLASSIFICATION	0.009467614733784999	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9997047701467788	WITHOUT_CLASSIFICATION	2.9522985322116304E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999999163418631	WITHOUT_CLASSIFICATION	8.365813690806907E-8	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999997722144329	WITHOUT_CLASSIFICATION	2.2778556708641474E-7	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9998629137693766	WITHOUT_CLASSIFICATION	1.3708623062335407E-4	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999428120095676	WITHOUT_CLASSIFICATION	5.7187990432455735E-5	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999968910514804	WITHOUT_CLASSIFICATION	3.1089485195877984E-6	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999930925030154	WITHOUT_CLASSIFICATION	6.907496984630655E-6	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999433863464745	WITHOUT_CLASSIFICATION	5.661365352543998E-5	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9998961212554862	WITHOUT_CLASSIFICATION	1.0387874451391106E-4	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999981183460163	WITHOUT_CLASSIFICATION	1.881653983720199E-6	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9991877722108258	WITHOUT_CLASSIFICATION	8.122277891742258E-4	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999716276926399	WITHOUT_CLASSIFICATION	2.8372307360019823E-5	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9523481463903677	WITHOUT_CLASSIFICATION	0.04765185360963235	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999997742262591	WITHOUT_CLASSIFICATION	2.257737410339039E-7	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998791210732	WITHOUT_CLASSIFICATION	1.2087892680003695E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9999982770301631	WITHOUT_CLASSIFICATION	1.7229698368951801E-6	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9999982770301631	WITHOUT_CLASSIFICATION	1.7229698368951801E-6	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999969384682862	WITHOUT_CLASSIFICATION	3.0615317136977743E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998490107876	WITHOUT_CLASSIFICATION	1.5098921235948153E-7	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999229127821649	WITHOUT_CLASSIFICATION	7.70872178350844E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.999960880258236	WITHOUT_CLASSIFICATION	3.9119741763926306E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999664005031863	WITHOUT_CLASSIFICATION	3.35994968137019E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999664005031863	WITHOUT_CLASSIFICATION	3.35994968137019E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999664005031863	WITHOUT_CLASSIFICATION	3.35994968137019E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999972254697855	WITHOUT_CLASSIFICATION	2.7745302143855287E-6	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999475258762612	WITHOUT_CLASSIFICATION	5.247412373889168E-5	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999993439935676	WITHOUT_CLASSIFICATION	6.560064324423994E-7	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9924286054510185	WITHOUT_CLASSIFICATION	0.007571394548981583	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999887549275855	WITHOUT_CLASSIFICATION	1.124507241442258E-5	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.999997707398894	WITHOUT_CLASSIFICATION	2.292601105963752E-6	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999695249857915	WITHOUT_CLASSIFICATION	3.0475014208517784E-5	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999838015436828	WITHOUT_CLASSIFICATION	1.6198456317208757E-5	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9995884655566106	WITHOUT_CLASSIFICATION	4.115344433893633E-4	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999995213279002	WITHOUT_CLASSIFICATION	4.786720999589132E-7	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999969880898759	WITHOUT_CLASSIFICATION	3.0119101241705948E-6	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999691660049776	WITHOUT_CLASSIFICATION	3.083399502227423E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9996547774805543	DESIGN	3.4522251944572884E-4	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9520099867728474	WITHOUT_CLASSIFICATION	0.0479900132271525	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999953118089	WITHOUT_CLASSIFICATION	4.688191124260084E-9	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999999999492714	WITHOUT_CLASSIFICATION	5.072860776592286E-10	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9985933214247592	WITHOUT_CLASSIFICATION	0.0014066785752407935	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999996359347871	WITHOUT_CLASSIFICATION	3.640652129636021E-7	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999984314358185	WITHOUT_CLASSIFICATION	1.5685641814896622E-5	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.9973100467828633	WITHOUT_CLASSIFICATION	0.002689953217136635	DESIGN
// FIXME: move out of this class!	DESIGN	0.9991191764118645	WITHOUT_CLASSIFICATION	8.808235881354715E-4	DESIGN
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9778072114376648	WITHOUT_CLASSIFICATION	0.022192788562335176	DESIGN
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.5885872862784113	WITHOUT_CLASSIFICATION	0.41141271372158855	DESIGN
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.8256920120899746	WITHOUT_CLASSIFICATION	0.17430798791002539	DESIGN
// TODO: eliminate?	DESIGN	0.6716283740201685	WITHOUT_CLASSIFICATION	0.3283716259798314	DESIGN
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9994116085827907	DESIGN	5.883914172092917E-4	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9995660679681515	WITHOUT_CLASSIFICATION	4.3393203184850733E-4	DESIGN
// we might need to perform a DST correction	DESIGN	0.9569235971823649	WITHOUT_CLASSIFICATION	0.04307640281763509	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999805051518323	WITHOUT_CLASSIFICATION	1.949484816763413E-5	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.7589280159042014	DESIGN	0.2410719840957986	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999814415690123	WITHOUT_CLASSIFICATION	1.855843098782618E-5	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.7114985881887881	DESIGN	0.28850141181121186	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.7114985881887881	DESIGN	0.28850141181121186	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.662395127732429	DESIGN	0.337604872267571	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9542345580682079	DESIGN	0.045765441931792245	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.8335699870827965	DESIGN	0.16643001291720347	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.6167183425050817	DESIGN	0.3832816574949182	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9849412942411023	DESIGN	0.015058705758897749	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.978909953748234	DESIGN	0.021090046251766116	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9910000232654748	DESIGN	0.0089999767345252	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.7096986568763121	WITHOUT_CLASSIFICATION	0.2903013431236879	DESIGN
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9730681008191465	WITHOUT_CLASSIFICATION	0.0269318991808535	DESIGN
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.9979683121391797	WITHOUT_CLASSIFICATION	0.0020316878608203476	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9982274509591529	DESIGN	0.0017725490408470922	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.5349059223317868	WITHOUT_CLASSIFICATION	0.4650940776682131	DESIGN
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9997675813725223	WITHOUT_CLASSIFICATION	2.3241862747769794E-4	DESIGN
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9914708021500609	DESIGN	0.008529197849939232	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.6892213555420478	WITHOUT_CLASSIFICATION	0.3107786444579522	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9991369983721293	DESIGN	8.630016278706684E-4	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.5319805531365518	DESIGN	0.46801944686344815	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.6193416917915135	WITHOUT_CLASSIFICATION	0.38065830820848634	DESIGN
// TODO: no java stringity	DESIGN	0.9906331777880425	WITHOUT_CLASSIFICATION	0.009366822211957426	DESIGN
// need to reexamine this	DESIGN	0.999836626058143	WITHOUT_CLASSIFICATION	1.633739418570007E-4	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.9999314681851573	DESIGN	6.853181484272685E-5	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9998882454796856	DESIGN	1.117545203144281E-4	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9982290250545329	DESIGN	0.001770974945467004	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9962980445067792	DESIGN	0.0037019554932208438	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.999910794103972	DESIGN	8.920589602802371E-5	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.801491617557684	WITHOUT_CLASSIFICATION	0.19850838244231594	DESIGN
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.999857340804849	DESIGN	1.4265919515104786E-4	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999024536921856	DESIGN	9.75463078144906E-5	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.796670274657747	WITHOUT_CLASSIFICATION	0.203329725342253	DESIGN
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9821025720381132	WITHOUT_CLASSIFICATION	0.01789742796188672	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9999531230403897	WITHOUT_CLASSIFICATION	4.687695961033128E-5	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9795057531975305	DESIGN	0.020494246802469453	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9994459176527986	WITHOUT_CLASSIFICATION	5.540823472014724E-4	DESIGN
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.99890334560838	DESIGN	0.0010966543916198963	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.999709503804184	WITHOUT_CLASSIFICATION	2.9049619581600296E-4	DESIGN
// TODO: handle writing into original buffer better	DESIGN	0.9679750050022119	DESIGN	0.03202499499778805	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9976057019373598	DESIGN	0.002394298062640273	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.992271610384278	DESIGN	0.007728389615721963	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9957355094001495	WITHOUT_CLASSIFICATION	0.004264490599850462	DESIGN
/* FIXME: finalizer should be dupped here */	DESIGN	0.9994075551393076	WITHOUT_CLASSIFICATION	5.924448606925351E-4	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.6403323506509677	WITHOUT_CLASSIFICATION	0.35966764934903234	DESIGN
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9949301523146379	DESIGN	0.005069847685362096	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9991969666684634	WITHOUT_CLASSIFICATION	8.030333315367327E-4	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9778200580612146	DESIGN	0.022179941938785367	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9996674819152093	DESIGN	3.325180847907735E-4	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9938878018565943	WITHOUT_CLASSIFICATION	0.006112198143405751	DESIGN
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.971717553315441	WITHOUT_CLASSIFICATION	0.02828244668455904	DESIGN
// TODO: Consider a better way of synchronizing 	DESIGN	0.9849306286125334	DESIGN	0.015069371387466524	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9152231715675551	DESIGN	0.08477682843244493	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.9614931304457859	DESIGN	0.03850686955421411	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9999356134729346	WITHOUT_CLASSIFICATION	6.438652706538473E-5	DESIGN
// FIXME: Can get optimized for IEqlNode	DESIGN	0.9999859892461317	WITHOUT_CLASSIFICATION	1.4010753868400793E-5	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9997507435946624	DESIGN	2.4925640533759525E-4	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.7825085861969782	WITHOUT_CLASSIFICATION	0.21749141380302187	DESIGN
// TODO: what about n arg?	DESIGN	0.940539696652185	WITHOUT_CLASSIFICATION	0.05946030334781507	DESIGN
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9976196686438958	DESIGN	0.00238033135610426	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9837326883405566	WITHOUT_CLASSIFICATION	0.016267311659443482	DESIGN
// TODO: better algorithm to set precision needed	DESIGN	0.9974294267874414	DESIGN	0.0025705732125585867	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9965807622856013	WITHOUT_CLASSIFICATION	0.0034192377143985927	DESIGN
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9508713460345493	WITHOUT_CLASSIFICATION	0.04912865396545062	DESIGN
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.9996901601771204	WITHOUT_CLASSIFICATION	3.0983982287954425E-4	DESIGN
// Yow...this is still ugly	DESIGN	0.9999974261262814	WITHOUT_CLASSIFICATION	2.57387371864505E-6	DESIGN
// end hack	DESIGN	0.999756228432159	WITHOUT_CLASSIFICATION	2.4377156784089694E-4	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.5007654135216036	DESIGN	0.4992345864783965	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9991167663638976	DESIGN	8.832336361023734E-4	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9959039454464869	WITHOUT_CLASSIFICATION	0.0040960545535131876	DESIGN
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9889701620203938	WITHOUT_CLASSIFICATION	0.011029837979606246	DESIGN
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9859829890449251	DESIGN	0.014017010955074845	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999954788038173	WITHOUT_CLASSIFICATION	4.52119618259123E-6	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9229943822083392	DESIGN	0.07700561779166085	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7626467533628802	WITHOUT_CLASSIFICATION	0.23735324663711987	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7626467533628802	WITHOUT_CLASSIFICATION	0.23735324663711987	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7626467533628802	WITHOUT_CLASSIFICATION	0.23735324663711987	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9593845607017152	WITHOUT_CLASSIFICATION	0.040615439298284844	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9339972741725375	DESIGN	0.06600272582746249	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.8436332818354416	DESIGN	0.15636671816455847	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9850480413610745	WITHOUT_CLASSIFICATION	0.014951958638925471	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.9843570441188304	DESIGN	0.015642955881169745	WITHOUT_CLASSIFICATION
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.601985725480711	DESIGN	0.39801427451928895	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9997635508207356	DESIGN	2.36449179264236E-4	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9928860499973712	WITHOUT_CLASSIFICATION	0.007113950002628893	DESIGN
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.7629823007724484	WITHOUT_CLASSIFICATION	0.23701769922755161	DESIGN
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9548868569216042	WITHOUT_CLASSIFICATION	0.04511314307839576	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9818123520619443	DESIGN	0.01818764793805577	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9968064877674095	WITHOUT_CLASSIFICATION	0.003193512232590372	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9818123520619443	DESIGN	0.01818764793805577	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.6707366815496779	WITHOUT_CLASSIFICATION	0.32926331845032203	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.9361348196742952	DESIGN	0.06386518032570472	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.9361348196742952	DESIGN	0.06386518032570472	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.8900079843068511	WITHOUT_CLASSIFICATION	0.10999201569314884	DESIGN
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9997707709897203	DESIGN	2.2922901027961915E-4	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.8900079843068511	WITHOUT_CLASSIFICATION	0.10999201569314884	DESIGN
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9804593691236619	WITHOUT_CLASSIFICATION	0.019540630876338155	DESIGN
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9855694750601444	DESIGN	0.014430524939855686	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.599559345696129	DESIGN	0.40044065430387105	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.8255995374456023	DESIGN	0.1744004625543976	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.6424465703139852	DESIGN	0.3575534296860148	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.6424465703139852	DESIGN	0.3575534296860148	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9899365833868371	WITHOUT_CLASSIFICATION	0.010063416613162882	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.999225762031223	WITHOUT_CLASSIFICATION	7.742379687770009E-4	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9956164927649831	WITHOUT_CLASSIFICATION	0.004383507235016891	DESIGN
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9999603082405555	DESIGN	3.969175944445624E-5	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.5458397939583371	WITHOUT_CLASSIFICATION	0.4541602060416629	DESIGN
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.929770195793221	WITHOUT_CLASSIFICATION	0.070229804206779	DESIGN
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9491560728162601	WITHOUT_CLASSIFICATION	0.05084392718373982	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9999400280898227	WITHOUT_CLASSIFICATION	5.9971910177168096E-5	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9964173143074402	WITHOUT_CLASSIFICATION	0.003582685692559901	DESIGN
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9999400280898227	WITHOUT_CLASSIFICATION	5.9971910177168096E-5	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9048363490026302	WITHOUT_CLASSIFICATION	0.09516365099736972	DESIGN
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9956496217381657	WITHOUT_CLASSIFICATION	0.00435037826183425	DESIGN
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9998485253232354	WITHOUT_CLASSIFICATION	1.5147467676448768E-4	DESIGN
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9967767609082847	DESIGN	0.0032232390917153364	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.8870587370938114	WITHOUT_CLASSIFICATION	0.11294126290618849	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.9988016695546759	WITHOUT_CLASSIFICATION	0.0011983304453241426	DESIGN
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9033378769653726	DESIGN	0.09666212303462743	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9974304624715974	WITHOUT_CLASSIFICATION	0.0025695375284026474	DESIGN
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9999841101041148	WITHOUT_CLASSIFICATION	1.5889895885150214E-5	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.9988016695546759	WITHOUT_CLASSIFICATION	0.0011983304453241426	DESIGN
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9823805284924496	WITHOUT_CLASSIFICATION	0.01761947150755039	DESIGN
// add a "self" recv here // TODO: is this right?	DESIGN	0.9851958355598525	DESIGN	0.014804164440147548	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9912168499507084	DESIGN	0.008783150049291701	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.9990676692674549	WITHOUT_CLASSIFICATION	9.323307325449891E-4	DESIGN
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.7207499238286428	WITHOUT_CLASSIFICATION	0.27925007617135716	DESIGN
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.995578182560707	WITHOUT_CLASSIFICATION	0.004421817439292973	DESIGN
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.6339265863223478	WITHOUT_CLASSIFICATION	0.36607341367765217	DESIGN
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9996338787739759	WITHOUT_CLASSIFICATION	3.661212260240284E-4	DESIGN
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9077765439875916	WITHOUT_CLASSIFICATION	0.0922234560124085	DESIGN
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.7247430345105671	WITHOUT_CLASSIFICATION	0.2752569654894328	DESIGN
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9994627955374912	WITHOUT_CLASSIFICATION	5.37204462508775E-4	DESIGN
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9556940109307978	DESIGN	0.044305989069202224	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.8258347334225107	DESIGN	0.1741652665774893	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9597050133964047	WITHOUT_CLASSIFICATION	0.040294986603595276	DESIGN
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9999901169045805	WITHOUT_CLASSIFICATION	9.883095419524885E-6	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.5667898791692677	DESIGN	0.43321012083073235	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9894317988578012	WITHOUT_CLASSIFICATION	0.010568201142198837	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9999874828796186	WITHOUT_CLASSIFICATION	1.2517120381482945E-5	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.5135933614366044	WITHOUT_CLASSIFICATION	0.48640663856339555	DESIGN
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9999155651583975	WITHOUT_CLASSIFICATION	8.443484160245309E-5	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9995971229369678	WITHOUT_CLASSIFICATION	4.0287706303222587E-4	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9850637093878081	DESIGN	0.01493629061219188	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9984427145538807	WITHOUT_CLASSIFICATION	0.0015572854461194184	DESIGN
// FIXME: set up a call configuration for this	DESIGN	0.9993131694841327	WITHOUT_CLASSIFICATION	6.868305158672287E-4	DESIGN
// TODO: make this do specific-arity calling	DESIGN	0.964477375704	DESIGN	0.03552262429600003	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.8277386834961097	WITHOUT_CLASSIFICATION	0.17226131650389026	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.654388664460237	DESIGN	0.34561133553976287	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9384275802882855	WITHOUT_CLASSIFICATION	0.06157241971171434	DESIGN
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999713228550606	WITHOUT_CLASSIFICATION	2.8677144939366986E-5	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999892337831019	WITHOUT_CLASSIFICATION	1.0766216898143348E-5	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999352279741811	WITHOUT_CLASSIFICATION	6.47720258189716E-5	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9998031071930812	WITHOUT_CLASSIFICATION	1.968928069189632E-4	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.7255625360679613	DESIGN	0.27443746393203866	WITHOUT_CLASSIFICATION
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.6910381930802704	DESIGN	0.3089618069197297	WITHOUT_CLASSIFICATION
// TODO: public only?	DESIGN	0.8021313844063555	WITHOUT_CLASSIFICATION	0.19786861559364455	DESIGN
// see note below re: 2-field kludge	DESIGN	0.9999827810876633	WITHOUT_CLASSIFICATION	1.721891233679456E-5	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9798209241391427	DESIGN	0.02017907586085735	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9891520016723604	DESIGN	0.01084799832763972	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.8745265518552497	WITHOUT_CLASSIFICATION	0.1254734481447503	DESIGN
// FIXME: This doesn't actually support anything but String	DESIGN	0.998987091856152	WITHOUT_CLASSIFICATION	0.0010129081438480147	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9988016570185794	DESIGN	0.001198342981420681	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9988016570185794	DESIGN	0.001198342981420681	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.664915363219054	WITHOUT_CLASSIFICATION	0.33508463678094597	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9950965680877565	DESIGN	0.004903431912243491	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9950965680877565	DESIGN	0.004903431912243491	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9987377865368767	WITHOUT_CLASSIFICATION	0.0012622134631232343	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9747119046789411	WITHOUT_CLASSIFICATION	0.025288095321059006	DESIGN
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.7053969207799335	WITHOUT_CLASSIFICATION	0.2946030792200664	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9933235427880118	DESIGN	0.0066764572119881365	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9923499725740798	WITHOUT_CLASSIFICATION	0.0076500274259202585	DESIGN
// FIXME: needs to be rethought	DESIGN	0.9836419045623817	WITHOUT_CLASSIFICATION	0.016358095437618347	DESIGN
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.9959555064033088	DESIGN	0.0040444935966912465	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999992166685301	DESIGN	7.833314699477911E-7	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999992166685301	DESIGN	7.833314699477911E-7	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.536272340699543	DESIGN	0.4637276593004571	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.9990283476327275	DESIGN	9.716523672724607E-4	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.999778554812839	DESIGN	2.2144518716107664E-4	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9593494462082637	DESIGN	0.04065055379173632	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.9992415973139108	WITHOUT_CLASSIFICATION	7.584026860891983E-4	DESIGN
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999119421362362	WITHOUT_CLASSIFICATION	8.805786376367467E-5	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9973834944419638	WITHOUT_CLASSIFICATION	0.00261650555803622	DESIGN
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.7207403644875413	DESIGN	0.2792596355124587	WITHOUT_CLASSIFICATION
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9681319478423559	DESIGN	0.03186805215764411	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9799406611565218	WITHOUT_CLASSIFICATION	0.020059338843478172	DESIGN
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999437778861789	WITHOUT_CLASSIFICATION	5.6222113821087285E-5	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9865210401630077	DESIGN	0.013478959836992294	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9894317988578012	WITHOUT_CLASSIFICATION	0.010568201142198837	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9989934969443277	WITHOUT_CLASSIFICATION	0.0010065030556723953	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.6895291370750415	WITHOUT_CLASSIFICATION	0.3104708629249585	DESIGN
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9498280834948636	WITHOUT_CLASSIFICATION	0.050171916505136305	DESIGN
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9884360860036121	WITHOUT_CLASSIFICATION	0.011563913996387837	DESIGN
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9599344986816066	WITHOUT_CLASSIFICATION	0.04006550131839337	DESIGN
// Hacky: Advance position to eat newline here....	DESIGN	0.9935868867973326	WITHOUT_CLASSIFICATION	0.006413113202667409	DESIGN
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9994832768225179	WITHOUT_CLASSIFICATION	5.167231774820152E-4	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7501267193082967	DESIGN	0.2498732806917034	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7501267193082967	DESIGN	0.2498732806917034	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9885151772522601	WITHOUT_CLASSIFICATION	0.011484822747739971	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.9943834926322748	WITHOUT_CLASSIFICATION	0.0056165073677251695	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.998698216815852	WITHOUT_CLASSIFICATION	0.0013017831841480255	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.734371071101102	WITHOUT_CLASSIFICATION	0.26562892889889805	DESIGN
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9540424639272387	WITHOUT_CLASSIFICATION	0.04595753607276125	DESIGN
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.99987586328	WITHOUT_CLASSIFICATION	1.2413672000002315E-4	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.921838827505494	WITHOUT_CLASSIFICATION	0.07816117249450599	DESIGN
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.8231143742510897	DESIGN	0.17688562574891034	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9058516841128511	WITHOUT_CLASSIFICATION	0.09414831588714884	DESIGN
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9988246432987974	DESIGN	0.001175356701202674	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9926559370961457	WITHOUT_CLASSIFICATION	0.007344062903854165	DESIGN
// FIXME: I think we need these pushed somewhere?	DESIGN	0.5422159295134316	WITHOUT_CLASSIFICATION	0.45778407048656844	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9926559370961457	WITHOUT_CLASSIFICATION	0.007344062903854165	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9926559370961457	WITHOUT_CLASSIFICATION	0.007344062903854165	DESIGN
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9999981876781555	WITHOUT_CLASSIFICATION	1.8123218444944803E-6	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9998267891412121	WITHOUT_CLASSIFICATION	1.732108587878122E-4	DESIGN
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.7185541632907967	WITHOUT_CLASSIFICATION	0.28144583670920337	DESIGN
// FIXME: This is gross. Don't do this.	DESIGN	0.9606915582313148	WITHOUT_CLASSIFICATION	0.03930844176868524	DESIGN
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9837555850382131	WITHOUT_CLASSIFICATION	0.01624441496178686	DESIGN
// FIXME: No, I don't like it.	DESIGN	0.9999864884188371	WITHOUT_CLASSIFICATION	1.35115811628116E-5	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9887472669032596	DESIGN	0.011252733096740353	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999953862788205	WITHOUT_CLASSIFICATION	4.613721179630248E-6	DESIGN
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9884413787666778	DESIGN	0.011558621233322183	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9096629670050552	DESIGN	0.09033703299494474	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9896848397579103	WITHOUT_CLASSIFICATION	0.01031516024208955	DESIGN
// FIXME: not very efficient	DESIGN	0.9999953862788205	WITHOUT_CLASSIFICATION	4.613721179630248E-6	DESIGN
// FIXME: not very efficient	DESIGN	0.9999953862788205	WITHOUT_CLASSIFICATION	4.613721179630248E-6	DESIGN
// FIXME: not very efficient	DESIGN	0.9999953862788205	WITHOUT_CLASSIFICATION	4.613721179630248E-6	DESIGN
// FIXME: not very efficient	DESIGN	0.9999953862788205	WITHOUT_CLASSIFICATION	4.613721179630248E-6	DESIGN
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9966938678170795	DESIGN	0.0033061321829204993	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.991058344295701	WITHOUT_CLASSIFICATION	0.008941655704298968	DESIGN
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.8527337892753969	WITHOUT_CLASSIFICATION	0.14726621072460314	DESIGN
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.8702090338607209	DESIGN	0.129790966139279	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.8702090338607209	DESIGN	0.129790966139279	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.8773633080668645	WITHOUT_CLASSIFICATION	0.12263669193313549	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9991787712634631	WITHOUT_CLASSIFICATION	8.212287365370166E-4	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.986498655490656	WITHOUT_CLASSIFICATION	0.013501344509343902	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.986498655490656	WITHOUT_CLASSIFICATION	0.013501344509343902	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.6672186399550366	DESIGN	0.33278136004496345	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9212535799320921	DESIGN	0.07874642006790787	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.7520072502361002	WITHOUT_CLASSIFICATION	0.24799274976389998	DESIGN
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999067044577671	DESIGN	9.329554223291533E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999067044577671	DESIGN	9.329554223291533E-5	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9998455955900512	WITHOUT_CLASSIFICATION	1.5440440994892495E-4	DESIGN
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.952388009905817	DESIGN	0.04761199009418301	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9540530244177469	WITHOUT_CLASSIFICATION	0.045946975582253025	DESIGN
// TODO this should entry into error handling somewhere	DESIGN	0.9995110416917485	DESIGN	4.889583082515148E-4	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9925037185535994	WITHOUT_CLASSIFICATION	0.00749628144640059	DESIGN
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999588025637879	WITHOUT_CLASSIFICATION	4.119743621206936E-5	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.997998779878331	DESIGN	0.002001220121669115	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9779571363233451	DESIGN	0.022042863676654926	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9999985379858831	WITHOUT_CLASSIFICATION	1.4620141168519613E-6	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.8255995374456023	DESIGN	0.1744004625543976	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.8255995374456023	DESIGN	0.1744004625543976	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.976582337202663	DESIGN	0.023417662797337098	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9899365833868371	WITHOUT_CLASSIFICATION	0.010063416613162882	DESIGN
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.999225762031223	WITHOUT_CLASSIFICATION	7.742379687770009E-4	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9558032749467282	DESIGN	0.04419672505327179	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9987266671859684	DESIGN	0.0012733328140316247	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9920240846139662	WITHOUT_CLASSIFICATION	0.007975915386033915	DESIGN
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.5890710440052644	DESIGN	0.41092895599473556	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9799148394213998	WITHOUT_CLASSIFICATION	0.020085160578600294	DESIGN
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9286588683738272	WITHOUT_CLASSIFICATION	0.0713411316261728	DESIGN
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9990140469945467	WITHOUT_CLASSIFICATION	9.859530054533772E-4	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.536272340699543	DESIGN	0.4637276593004571	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9058516841128511	WITHOUT_CLASSIFICATION	0.09414831588714884	DESIGN
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999187848877	DESIGN	8.121511233486101E-8	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.9995774279378256	WITHOUT_CLASSIFICATION	4.225720621744375E-4	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7501267193082967	DESIGN	0.2498732806917034	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9924328278198595	WITHOUT_CLASSIFICATION	0.007567172180140415	DESIGN
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9618407932804097	WITHOUT_CLASSIFICATION	0.038159206719590305	DESIGN
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9990277260108038	DESIGN	9.722739891961295E-4	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9852302182523949	WITHOUT_CLASSIFICATION	0.014769781747605059	DESIGN
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.8347138787577556	WITHOUT_CLASSIFICATION	0.16528612124224437	DESIGN
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9918141984139904	WITHOUT_CLASSIFICATION	0.008185801586009619	DESIGN
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9918141984139904	WITHOUT_CLASSIFICATION	0.008185801586009619	DESIGN
// hack to get right style for input	DESIGN	0.9762478901007061	WITHOUT_CLASSIFICATION	0.023752109899293935	DESIGN
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9985120781031477	WITHOUT_CLASSIFICATION	0.001487921896852376	DESIGN
// small hack to save a cast later on	DESIGN	0.9998882892304772	WITHOUT_CLASSIFICATION	1.117107695227473E-4	DESIGN
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.8864004288025842	DESIGN	0.11359957119741584	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9985120781031477	WITHOUT_CLASSIFICATION	0.001487921896852376	DESIGN
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9999612692423894	WITHOUT_CLASSIFICATION	3.873075761061026E-5	DESIGN
// HACK: force clinit to be created	DESIGN	0.9999554350729307	WITHOUT_CLASSIFICATION	4.456492706938563E-5	DESIGN
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9994353353182917	WITHOUT_CLASSIFICATION	5.646646817082947E-4	DESIGN
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9831762017423661	DESIGN	0.016823798257633877	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9522835494938142	WITHOUT_CLASSIFICATION	0.04771645050618574	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.7626467533628802	WITHOUT_CLASSIFICATION	0.23735324663711987	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.7501267193082967	DESIGN	0.2498732806917034	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.9593845607017152	WITHOUT_CLASSIFICATION	0.040615439298284844	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999774998760045	DESIGN	2.250012399548749E-5	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.8906164775516238	WITHOUT_CLASSIFICATION	0.10938352244837621	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9864219277743567	DESIGN	0.013578072225643407	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999981553351551	DESIGN	1.8446648448218441E-6	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.99890334560838	DESIGN	0.0010966543916198963	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.5271336485070408	WITHOUT_CLASSIFICATION	0.4728663514929591	DESIGN
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9996029373436427	WITHOUT_CLASSIFICATION	3.970626563572822E-4	DESIGN
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9893678334262859	DESIGN	0.010632166573714226	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9992596402965808	WITHOUT_CLASSIFICATION	7.403597034191202E-4	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.8436332818354416	DESIGN	0.15636671816455847	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999992166685301	DESIGN	7.833314699477911E-7	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.6167183425050817	DESIGN	0.3832816574949182	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.6167183425050817	DESIGN	0.3832816574949182	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.6167183425050817	DESIGN	0.3832816574949182	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999997602963	DESIGN	2.3970371915288375E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9913024991784433	DESIGN	0.008697500821556778	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9999961736963936	WITHOUT_CLASSIFICATION	3.8263036063432295E-6	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.9492269509381915	WITHOUT_CLASSIFICATION	0.05077304906180837	DESIGN
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9999244913781968	DESIGN	7.550862180321567E-5	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9998983544067409	DESIGN	1.016455932591598E-4	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9994075551393076	WITHOUT_CLASSIFICATION	5.924448606925351E-4	DESIGN
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9999968267126422	WITHOUT_CLASSIFICATION	3.1732873579018656E-6	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.6403323506509677	WITHOUT_CLASSIFICATION	0.35966764934903234	DESIGN
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9977714490162213	DESIGN	0.0022285509837786607	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9998904628116876	DESIGN	1.0953718831243341E-4	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9987130317293105	DESIGN	0.0012869682706894304	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.9983525155739404	DESIGN	0.0016474844260595753	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.5885872862784113	WITHOUT_CLASSIFICATION	0.41141271372158855	DESIGN
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.8554837626428897	WITHOUT_CLASSIFICATION	0.1445162373571103	DESIGN
// end hack	DESIGN	0.999756228432159	WITHOUT_CLASSIFICATION	2.4377156784089694E-4	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9961144615189245	DESIGN	0.003885538481075611	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9852302182523949	WITHOUT_CLASSIFICATION	0.014769781747605059	DESIGN
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9998453612461978	DESIGN	1.546387538021889E-4	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.5007654135216036	DESIGN	0.4992345864783965	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9717985959730923	DESIGN	0.02820140402690771	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.998698216815852	WITHOUT_CLASSIFICATION	0.0013017831841480255	DESIGN
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.734371071101102	WITHOUT_CLASSIFICATION	0.26562892889889805	DESIGN
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.8486478000722731	DESIGN	0.15135219992772686	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9999413781924422	WITHOUT_CLASSIFICATION	5.862180755791121E-5	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.921838827505494	WITHOUT_CLASSIFICATION	0.07816117249450599	DESIGN
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9777578542370917	WITHOUT_CLASSIFICATION	0.02224214576290833	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9926559370961457	WITHOUT_CLASSIFICATION	0.007344062903854165	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9926559370961457	WITHOUT_CLASSIFICATION	0.007344062903854165	DESIGN
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.646771539401194	WITHOUT_CLASSIFICATION	0.3532284605988061	DESIGN
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.968531059450811	WITHOUT_CLASSIFICATION	0.031468940549189056	DESIGN
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.5351448978257652	DESIGN	0.4648551021742348	WITHOUT_CLASSIFICATION
