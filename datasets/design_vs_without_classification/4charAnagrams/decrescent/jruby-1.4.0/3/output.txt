// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999992347718355	WITHOUT_CLASSIFICATION	7.652281644860304E-7	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999934649137026	WITHOUT_CLASSIFICATION	6.535086297427432E-6	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966400187521	WITHOUT_CLASSIFICATION	3.359981247904209E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966400187521	WITHOUT_CLASSIFICATION	3.359981247904209E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999917192531692	WITHOUT_CLASSIFICATION	8.280746830801079E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999917192531692	WITHOUT_CLASSIFICATION	8.280746830801079E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993424354124116	WITHOUT_CLASSIFICATION	6.575645875884121E-4	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999473446060826	WITHOUT_CLASSIFICATION	5.2655393917468085E-5	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999960223820322	WITHOUT_CLASSIFICATION	3.977617967733413E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999976651000493	WITHOUT_CLASSIFICATION	2.3348999507776016E-6	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980520285420077	WITHOUT_CLASSIFICATION	0.0019479714579922179	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980520285420077	WITHOUT_CLASSIFICATION	0.0019479714579922179	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.9999938042250553	WITHOUT_CLASSIFICATION	6.195774944610988E-6	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9979873685199213	WITHOUT_CLASSIFICATION	0.002012631480078704	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9979873685199213	WITHOUT_CLASSIFICATION	0.002012631480078704	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.999996786879864	WITHOUT_CLASSIFICATION	3.213120135996448E-6	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999993548726563	WITHOUT_CLASSIFICATION	6.451273436805802E-7	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999907045017949	WITHOUT_CLASSIFICATION	9.295498205096379E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999907045017949	WITHOUT_CLASSIFICATION	9.295498205096379E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999907045017949	WITHOUT_CLASSIFICATION	9.295498205096379E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999907045017949	WITHOUT_CLASSIFICATION	9.295498205096379E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999907045017949	WITHOUT_CLASSIFICATION	9.295498205096379E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999907045017949	WITHOUT_CLASSIFICATION	9.295498205096379E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.999907045017949	WITHOUT_CLASSIFICATION	9.295498205096379E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999437651310217	WITHOUT_CLASSIFICATION	5.6234868978269533E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999437651310217	WITHOUT_CLASSIFICATION	5.6234868978269533E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999437651310217	WITHOUT_CLASSIFICATION	5.6234868978269533E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999437651310217	WITHOUT_CLASSIFICATION	5.6234868978269533E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999437651310217	WITHOUT_CLASSIFICATION	5.6234868978269533E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999437651310217	WITHOUT_CLASSIFICATION	5.6234868978269533E-5	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999437651310217	WITHOUT_CLASSIFICATION	5.6234868978269533E-5	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9963593452179573	WITHOUT_CLASSIFICATION	0.0036406547820426087	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9963593452179573	WITHOUT_CLASSIFICATION	0.0036406547820426087	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9963593452179573	WITHOUT_CLASSIFICATION	0.0036406547820426087	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9963593452179573	WITHOUT_CLASSIFICATION	0.0036406547820426087	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9963593452179573	WITHOUT_CLASSIFICATION	0.0036406547820426087	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9963593452179573	WITHOUT_CLASSIFICATION	0.0036406547820426087	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9986763328076851	WITHOUT_CLASSIFICATION	0.001323667192314938	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9986763328076851	WITHOUT_CLASSIFICATION	0.001323667192314938	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9986763328076851	WITHOUT_CLASSIFICATION	0.001323667192314938	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9986763328076851	WITHOUT_CLASSIFICATION	0.001323667192314938	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9986763328076851	WITHOUT_CLASSIFICATION	0.001323667192314938	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9986763328076851	WITHOUT_CLASSIFICATION	0.001323667192314938	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.998632367242766	WITHOUT_CLASSIFICATION	0.001367632757233953	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.998632367242766	WITHOUT_CLASSIFICATION	0.001367632757233953	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.998632367242766	WITHOUT_CLASSIFICATION	0.001367632757233953	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.998632367242766	WITHOUT_CLASSIFICATION	0.001367632757233953	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.998632367242766	WITHOUT_CLASSIFICATION	0.001367632757233953	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.998632367242766	WITHOUT_CLASSIFICATION	0.001367632757233953	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.998632367242766	WITHOUT_CLASSIFICATION	0.001367632757233953	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9957144344460322	WITHOUT_CLASSIFICATION	0.004285565553967752	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9957144344460322	WITHOUT_CLASSIFICATION	0.004285565553967752	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9957144344460322	WITHOUT_CLASSIFICATION	0.004285565553967752	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9957144344460322	WITHOUT_CLASSIFICATION	0.004285565553967752	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.999998146851811	WITHOUT_CLASSIFICATION	1.8531481890719261E-6	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.999998146851811	WITHOUT_CLASSIFICATION	1.8531481890719261E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999966370017139	WITHOUT_CLASSIFICATION	3.3629982860933474E-6	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999990265535565	WITHOUT_CLASSIFICATION	9.734464434484333E-7	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999142107544432	WITHOUT_CLASSIFICATION	8.578924555685083E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999981882803502	WITHOUT_CLASSIFICATION	1.81171964979888E-5	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999946789221881	WITHOUT_CLASSIFICATION	5.321077811990963E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999292770287392	WITHOUT_CLASSIFICATION	7.072297126075939E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999292770287392	WITHOUT_CLASSIFICATION	7.072297126075939E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999292770287392	WITHOUT_CLASSIFICATION	7.072297126075939E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999292770287392	WITHOUT_CLASSIFICATION	7.072297126075939E-5	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999963558365728	WITHOUT_CLASSIFICATION	3.6441634271477668E-6	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9994089195503018	WITHOUT_CLASSIFICATION	5.910804496982399E-4	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999999046533932	WITHOUT_CLASSIFICATION	9.534660685195331E-8	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9997518995656086	WITHOUT_CLASSIFICATION	2.4810043439139787E-4	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999771141019963	WITHOUT_CLASSIFICATION	2.288589800363549E-5	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9998125474936199	WITHOUT_CLASSIFICATION	1.874525063800724E-4	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999992590825172	WITHOUT_CLASSIFICATION	7.409174827189228E-7	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999558162023885	WITHOUT_CLASSIFICATION	4.41837976115617E-5	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9913745378449781	WITHOUT_CLASSIFICATION	0.008625462155021909	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9963054797655979	WITHOUT_CLASSIFICATION	0.003694520234402053	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9997585008664919	WITHOUT_CLASSIFICATION	2.4149913350821452E-4	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9921442775096965	WITHOUT_CLASSIFICATION	0.00785572249030343	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9984173899995639	WITHOUT_CLASSIFICATION	0.0015826100004361753	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.999994387918629	WITHOUT_CLASSIFICATION	5.612081370990155E-6	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999992728574149	WITHOUT_CLASSIFICATION	7.271425851047398E-6	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.999854261260695	WITHOUT_CLASSIFICATION	1.4573873930492944E-4	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.7806991625047769	WITHOUT_CLASSIFICATION	0.21930083749522308	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999292770287392	WITHOUT_CLASSIFICATION	7.072297126075939E-5	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998372245286024	WITHOUT_CLASSIFICATION	1.6277547139767996E-4	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999966517075702	WITHOUT_CLASSIFICATION	3.3482924297090574E-6	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999971749760868	WITHOUT_CLASSIFICATION	2.8250239132613176E-6	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9997820189968867	WITHOUT_CLASSIFICATION	2.1798100311321106E-4	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9942941724735737	WITHOUT_CLASSIFICATION	0.005705827526426385	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999664274866925	WITHOUT_CLASSIFICATION	3.3572513307448274E-5	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999657796589904	WITHOUT_CLASSIFICATION	3.4220341009605395E-5	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.999996679826228	WITHOUT_CLASSIFICATION	3.3201737720464663E-6	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9907780970985305	WITHOUT_CLASSIFICATION	0.009221902901469466	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999991218592764	WITHOUT_CLASSIFICATION	8.781407236607153E-7	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9997384700989286	WITHOUT_CLASSIFICATION	2.615299010714681E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999903211859603	WITHOUT_CLASSIFICATION	9.67881403970788E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999518519074394	WITHOUT_CLASSIFICATION	4.8148092560525603E-5	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999945916596973	WITHOUT_CLASSIFICATION	5.408340302754345E-6	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999991929387272	WITHOUT_CLASSIFICATION	8.070612727598079E-7	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999989154920689	WITHOUT_CLASSIFICATION	1.084507931131383E-6	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999997584868393	WITHOUT_CLASSIFICATION	2.415131606889488E-7	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999925610181277	WITHOUT_CLASSIFICATION	7.438981872199786E-6	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999969105010563	WITHOUT_CLASSIFICATION	3.0894989436270275E-6	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999998175373456	WITHOUT_CLASSIFICATION	1.824626543162913E-7	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9742379232472393	WITHOUT_CLASSIFICATION	0.025762076752760706	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999979634534736	WITHOUT_CLASSIFICATION	2.0365465263959438E-6	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999985445698045	WITHOUT_CLASSIFICATION	1.4554301954851015E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999252646915407	WITHOUT_CLASSIFICATION	7.473530845929651E-5	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9990829508586969	WITHOUT_CLASSIFICATION	9.170491413030883E-4	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9999395527247302	WITHOUT_CLASSIFICATION	6.0447275269680455E-5	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9996134411683811	WITHOUT_CLASSIFICATION	3.865588316189062E-4	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999016134335703	WITHOUT_CLASSIFICATION	9.838656642977613E-5	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999987482494085	WITHOUT_CLASSIFICATION	1.2517505914925669E-6	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.999999809748513	WITHOUT_CLASSIFICATION	1.9025148695894775E-7	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999963654080759	WITHOUT_CLASSIFICATION	3.6345919241858583E-6	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.999993868437029	WITHOUT_CLASSIFICATION	6.131562971091789E-6	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999999732198036	WITHOUT_CLASSIFICATION	2.6780196514423036E-8	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999973875976468	WITHOUT_CLASSIFICATION	2.612402353163447E-6	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999981556071733	WITHOUT_CLASSIFICATION	1.844392826681443E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9998801163211382	WITHOUT_CLASSIFICATION	1.1988367886181696E-4	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999992040455311	WITHOUT_CLASSIFICATION	7.95954468961834E-7	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999998418780706	WITHOUT_CLASSIFICATION	1.581219293519058E-7	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999998185305171	WITHOUT_CLASSIFICATION	1.8146948281926763E-7	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998823314995	WITHOUT_CLASSIFICATION	1.1766850049749713E-6	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999787640254	WITHOUT_CLASSIFICATION	2.1235974675217986E-8	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999751558839642	WITHOUT_CLASSIFICATION	2.4844116035813558E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9867639630086655	WITHOUT_CLASSIFICATION	0.013236036991334346	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998959450655861	WITHOUT_CLASSIFICATION	1.0405493441388647E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998959450655861	WITHOUT_CLASSIFICATION	1.0405493441388647E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9978352138913519	WITHOUT_CLASSIFICATION	0.002164786108648141	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999800013004033	WITHOUT_CLASSIFICATION	1.999869959665684E-5	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999905968876451	WITHOUT_CLASSIFICATION	9.403112354865976E-6	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.972095232723026	WITHOUT_CLASSIFICATION	0.027904767276974034	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999431008484391	WITHOUT_CLASSIFICATION	5.689915156094113E-5	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9563402130588908	WITHOUT_CLASSIFICATION	0.04365978694110908	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9999633125597432	WITHOUT_CLASSIFICATION	3.6687440256845855E-5	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.9999795983423182	WITHOUT_CLASSIFICATION	2.040165768180986E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999751558839642	WITHOUT_CLASSIFICATION	2.4844116035813558E-5	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999997358471829	WITHOUT_CLASSIFICATION	2.641528171140406E-7	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999908645449824	WITHOUT_CLASSIFICATION	9.135455017635527E-6	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999864123488	WITHOUT_CLASSIFICATION	1.3587651286023745E-8	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999990880468	WITHOUT_CLASSIFICATION	9.119531048080049E-10	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999901356951914	WITHOUT_CLASSIFICATION	9.864304808663648E-6	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998836722545	WITHOUT_CLASSIFICATION	1.1632774542927984E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998836722545	WITHOUT_CLASSIFICATION	1.1632774542927984E-7	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998836722545	WITHOUT_CLASSIFICATION	1.1632774542927984E-7	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.996099472186468	WITHOUT_CLASSIFICATION	0.0039005278135320408	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999844788708	WITHOUT_CLASSIFICATION	1.552112921033687E-8	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999229885903274	WITHOUT_CLASSIFICATION	7.701140967260019E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9969911053193512	WITHOUT_CLASSIFICATION	0.0030088946806487494	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9982392332486506	WITHOUT_CLASSIFICATION	0.0017607667513493224	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.99987648526427	WITHOUT_CLASSIFICATION	1.2351473573005587E-4	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999596076616675	WITHOUT_CLASSIFICATION	4.039233833255216E-5	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999946337527	WITHOUT_CLASSIFICATION	5.366247390710855E-9	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999937582975714	WITHOUT_CLASSIFICATION	6.241702428572701E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999937582975714	WITHOUT_CLASSIFICATION	6.241702428572701E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999949357045985	WITHOUT_CLASSIFICATION	5.064295401446844E-6	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999429834581	WITHOUT_CLASSIFICATION	5.7016541991905925E-8	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999368749506237	WITHOUT_CLASSIFICATION	6.312504937640686E-5	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999368749506237	WITHOUT_CLASSIFICATION	6.312504937640686E-5	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999988098161652	WITHOUT_CLASSIFICATION	1.190183834755266E-6	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999711767374	WITHOUT_CLASSIFICATION	2.8823262471689795E-8	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999966456649171	WITHOUT_CLASSIFICATION	3.354335082909759E-6	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999992027845417	WITHOUT_CLASSIFICATION	7.972154583802383E-7	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999937282614775	WITHOUT_CLASSIFICATION	6.271738522598854E-6	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999999649405849	WITHOUT_CLASSIFICATION	3.505941507513782E-8	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999992170041717	WITHOUT_CLASSIFICATION	7.82995828230966E-7	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999974231866376	WITHOUT_CLASSIFICATION	2.576813362350249E-6	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9999931432758712	WITHOUT_CLASSIFICATION	6.8567241287882745E-6	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999949359078533	WITHOUT_CLASSIFICATION	5.0640921467034176E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999751558839642	WITHOUT_CLASSIFICATION	2.4844116035813558E-5	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999999621337538	WITHOUT_CLASSIFICATION	3.7866246151768097E-8	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999994970171598	WITHOUT_CLASSIFICATION	5.029828401652224E-7	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9998044872534876	WITHOUT_CLASSIFICATION	1.9551274651240602E-4	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9202845609352774	DESIGN	0.07971543906472257	WITHOUT_CLASSIFICATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999148188841207	WITHOUT_CLASSIFICATION	8.518111587924615E-5	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999358398279189	WITHOUT_CLASSIFICATION	6.416017208111114E-5	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999642912022257	WITHOUT_CLASSIFICATION	3.570879777422222E-5	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999851497627006	WITHOUT_CLASSIFICATION	1.4850237299341086E-5	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999857533067772	WITHOUT_CLASSIFICATION	1.4246693222774128E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9998319956295343	WITHOUT_CLASSIFICATION	1.6800437046572708E-4	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.999999954594837	WITHOUT_CLASSIFICATION	4.5405163102481515E-8	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9997388526779627	WITHOUT_CLASSIFICATION	2.611473220373202E-4	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9995638651057966	WITHOUT_CLASSIFICATION	4.361348942034063E-4	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999996005816705	WITHOUT_CLASSIFICATION	3.994183294840856E-7	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999975343953	WITHOUT_CLASSIFICATION	2.465604613980482E-9	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999930012873902	WITHOUT_CLASSIFICATION	6.998712609724527E-6	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999984715687068	WITHOUT_CLASSIFICATION	1.5284312932286614E-6	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999658793597945	WITHOUT_CLASSIFICATION	3.412064020550587E-5	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999744833603207	WITHOUT_CLASSIFICATION	2.5516639679274927E-5	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.99996468296201	WITHOUT_CLASSIFICATION	3.5317037989979266E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999936173551237	WITHOUT_CLASSIFICATION	6.382644876266619E-6	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9997454338693716	WITHOUT_CLASSIFICATION	2.545661306282829E-4	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999604428454383	WITHOUT_CLASSIFICATION	3.955715456179183E-5	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999977751764091	WITHOUT_CLASSIFICATION	2.2248235908002912E-6	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999943677610086	WITHOUT_CLASSIFICATION	5.632238991344893E-6	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.985575495959485	WITHOUT_CLASSIFICATION	0.014424504040514966	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999988302977394	WITHOUT_CLASSIFICATION	1.1697022605701535E-6	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999975330158594	WITHOUT_CLASSIFICATION	2.4669841405568055E-6	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999422608271277	WITHOUT_CLASSIFICATION	5.773917287227071E-5	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999985085072434	WITHOUT_CLASSIFICATION	1.4914927567312025E-6	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999862822741132	WITHOUT_CLASSIFICATION	1.3717725886811531E-5	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9999884340854758	WITHOUT_CLASSIFICATION	1.1565914524142389E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999542108560854	WITHOUT_CLASSIFICATION	4.578914391459322E-5	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999857624063757	WITHOUT_CLASSIFICATION	1.4237593624263517E-5	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999863327397205	WITHOUT_CLASSIFICATION	1.3667260279424391E-5	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999694808128966	WITHOUT_CLASSIFICATION	3.0519187103390964E-5	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998124473770064	WITHOUT_CLASSIFICATION	1.8755262299363675E-4	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999992747353648	WITHOUT_CLASSIFICATION	7.252646353160927E-7	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999880679504121	WITHOUT_CLASSIFICATION	1.1932049587954574E-5	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999983373375685	WITHOUT_CLASSIFICATION	1.6626624314738482E-6	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999979926472661	WITHOUT_CLASSIFICATION	2.0073527338954942E-6	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999998079634376	WITHOUT_CLASSIFICATION	1.9203656235522724E-7	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9997134009748551	WITHOUT_CLASSIFICATION	2.8659902514495725E-4	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999860948523907	WITHOUT_CLASSIFICATION	1.3905147609370783E-5	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.999969594332115	WITHOUT_CLASSIFICATION	3.040566788510017E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999999501936954	WITHOUT_CLASSIFICATION	4.980630453693599E-8	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999997118105057	WITHOUT_CLASSIFICATION	2.8818949429569227E-7	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999996439088022	WITHOUT_CLASSIFICATION	3.5609119772822076E-7	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999897685000821	WITHOUT_CLASSIFICATION	1.0231499917791797E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9994307737670813	WITHOUT_CLASSIFICATION	5.692262329186057E-4	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.992615804655661	WITHOUT_CLASSIFICATION	0.00738419534433903	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999842216918071	WITHOUT_CLASSIFICATION	1.5778308192937466E-5	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999981576272522	WITHOUT_CLASSIFICATION	1.8423727476949305E-6	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999897373183257	WITHOUT_CLASSIFICATION	1.0262681674351658E-5	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9994637790709062	WITHOUT_CLASSIFICATION	5.36220929093747E-4	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9950980684232484	WITHOUT_CLASSIFICATION	0.004901931576751514	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999387033251587	WITHOUT_CLASSIFICATION	6.129667484133478E-5	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999962027232293	WITHOUT_CLASSIFICATION	3.797276770689401E-6	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999978642979509	WITHOUT_CLASSIFICATION	2.135702049115237E-6	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999992516299642	WITHOUT_CLASSIFICATION	7.483700357212791E-7	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999971336995336	WITHOUT_CLASSIFICATION	2.8663004665039484E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999971336995336	WITHOUT_CLASSIFICATION	2.8663004665039484E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999991470575736	WITHOUT_CLASSIFICATION	8.529424264527768E-7	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999991470575736	WITHOUT_CLASSIFICATION	8.529424264527768E-7	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999983490623197	WITHOUT_CLASSIFICATION	1.6509376803195547E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999983490623197	WITHOUT_CLASSIFICATION	1.6509376803195547E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999994828708852	WITHOUT_CLASSIFICATION	5.171291148437789E-7	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.9999994828708852	WITHOUT_CLASSIFICATION	5.171291148437789E-7	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999981241984206	WITHOUT_CLASSIFICATION	1.875801579437409E-6	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999807945140278	WITHOUT_CLASSIFICATION	1.9205485972132842E-5	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999950879013606	WITHOUT_CLASSIFICATION	4.91209863934098E-6	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999984528803353	WITHOUT_CLASSIFICATION	1.547119664706084E-6	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999958087843608	WITHOUT_CLASSIFICATION	4.191215639230563E-6	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999999284315692	WITHOUT_CLASSIFICATION	7.15684309005672E-8	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999991090429182	WITHOUT_CLASSIFICATION	8.909570818561311E-7	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999380687447	WITHOUT_CLASSIFICATION	6.193125528577669E-8	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999956505311395	WITHOUT_CLASSIFICATION	4.349468860573306E-6	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999997541138521	WITHOUT_CLASSIFICATION	2.4588614784682636E-7	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999299246221361	WITHOUT_CLASSIFICATION	7.007537786384581E-5	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999995120089475	WITHOUT_CLASSIFICATION	4.879910524807232E-7	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999996040308902	WITHOUT_CLASSIFICATION	3.9596910992336074E-7	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999995259946488	WITHOUT_CLASSIFICATION	4.7400535116371995E-7	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999998695887546	WITHOUT_CLASSIFICATION	1.304112453372508E-7	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999994933695076	WITHOUT_CLASSIFICATION	5.066304923384488E-7	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999956682814795	WITHOUT_CLASSIFICATION	4.331718520458683E-6	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999987141210956	WITHOUT_CLASSIFICATION	1.2858789043562514E-6	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999992926492469	WITHOUT_CLASSIFICATION	7.073507530544507E-7	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6568003241817606	DESIGN	0.34319967581823946	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999832848338122	WITHOUT_CLASSIFICATION	1.6715166187903203E-5	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999982246580688	WITHOUT_CLASSIFICATION	1.7753419313076855E-6	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999692211235186	WITHOUT_CLASSIFICATION	3.0778876481349165E-5	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999984149088433	WITHOUT_CLASSIFICATION	1.5850911567048809E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999999558142217	WITHOUT_CLASSIFICATION	4.418577822450474E-8	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999962997112763	WITHOUT_CLASSIFICATION	3.7002887236840543E-6	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999999855131604	WITHOUT_CLASSIFICATION	1.4486839678647088E-8	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999488385034	WITHOUT_CLASSIFICATION	5.116149660291627E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999488385034	WITHOUT_CLASSIFICATION	5.116149660291627E-7	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.999999612274703	WITHOUT_CLASSIFICATION	3.8772529695529215E-7	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999977763668482	WITHOUT_CLASSIFICATION	2.223633151772007E-6	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.999990818292596	WITHOUT_CLASSIFICATION	9.18170740400552E-6	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9997734806926372	WITHOUT_CLASSIFICATION	2.2651930736298525E-4	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.999976375694809	WITHOUT_CLASSIFICATION	2.3624305191024812E-5	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999992686295017	WITHOUT_CLASSIFICATION	7.313704983118957E-7	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999827867403142	WITHOUT_CLASSIFICATION	1.721325968576946E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.9999827867403142	WITHOUT_CLASSIFICATION	1.721325968576946E-5	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999990998590839	WITHOUT_CLASSIFICATION	9.001409161650342E-7	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8970551694100644	WITHOUT_CLASSIFICATION	0.1029448305899357	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999539701431441	WITHOUT_CLASSIFICATION	4.602985685588702E-5	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999539701431441	WITHOUT_CLASSIFICATION	4.602985685588702E-5	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999997751696826	WITHOUT_CLASSIFICATION	2.2483031728221758E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999927093235381	WITHOUT_CLASSIFICATION	7.2906764618928765E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999927093235381	WITHOUT_CLASSIFICATION	7.2906764618928765E-6	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999902252024325	WITHOUT_CLASSIFICATION	9.774797567388848E-6	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999902252024325	WITHOUT_CLASSIFICATION	9.774797567388848E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999982223769175	WITHOUT_CLASSIFICATION	1.7776230825765775E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999982223769175	WITHOUT_CLASSIFICATION	1.7776230825765775E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.9999955996677955	WITHOUT_CLASSIFICATION	4.4003322045333635E-6	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999971719273226	WITHOUT_CLASSIFICATION	2.828072677295493E-6	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999915865604614	WITHOUT_CLASSIFICATION	8.4134395385142E-6	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999993337231705	WITHOUT_CLASSIFICATION	6.662768294157358E-7	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999997939270895	WITHOUT_CLASSIFICATION	2.0607291060063663E-7	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999977641103602	WITHOUT_CLASSIFICATION	2.2358896397263437E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999382374140899	WITHOUT_CLASSIFICATION	6.176258591006307E-5	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999270666132756	WITHOUT_CLASSIFICATION	7.293338672437911E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999382374140899	WITHOUT_CLASSIFICATION	6.176258591006307E-5	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9987736660827816	WITHOUT_CLASSIFICATION	0.0012263339172184243	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999908618449984	WITHOUT_CLASSIFICATION	9.138155001526122E-6	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999996894279504	WITHOUT_CLASSIFICATION	3.105720496395085E-7	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999998938799902	WITHOUT_CLASSIFICATION	1.0612000977489911E-7	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999985205156837	WITHOUT_CLASSIFICATION	1.4794843162240456E-6	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999190987765453	WITHOUT_CLASSIFICATION	8.090122345466092E-5	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999551347612938	WITHOUT_CLASSIFICATION	4.486523870629007E-5	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999968068402595	WITHOUT_CLASSIFICATION	3.193159740431979E-6	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999924607109578	WITHOUT_CLASSIFICATION	7.539289042093372E-6	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999976126778729	WITHOUT_CLASSIFICATION	2.3873221271769552E-6	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999946282194626	WITHOUT_CLASSIFICATION	5.371780537346641E-6	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999655921929836	WITHOUT_CLASSIFICATION	3.440780701646965E-5	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999998579997849	WITHOUT_CLASSIFICATION	1.4200021511457292E-7	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999944760152527	WITHOUT_CLASSIFICATION	5.523984747238887E-6	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999999857038355	WITHOUT_CLASSIFICATION	1.4296164408408442E-8	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999919801715718	WITHOUT_CLASSIFICATION	8.019828428313496E-6	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999988502014625	WITHOUT_CLASSIFICATION	1.1497985374954155E-6	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9998753717320918	WITHOUT_CLASSIFICATION	1.2462826790823626E-4	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.999987954172488	WITHOUT_CLASSIFICATION	1.2045827512066478E-5	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999964510368831	WITHOUT_CLASSIFICATION	3.5489631168158853E-6	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.999997174419242	WITHOUT_CLASSIFICATION	2.825580758061707E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999983430849764	WITHOUT_CLASSIFICATION	1.6569150236907987E-6	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999296426490469	WITHOUT_CLASSIFICATION	7.03573509530876E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9931510253765106	WITHOUT_CLASSIFICATION	0.006848974623489454	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999999520389067	WITHOUT_CLASSIFICATION	4.796109334482725E-8	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999471901992061	WITHOUT_CLASSIFICATION	5.280980079398004E-5	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999365857800873	WITHOUT_CLASSIFICATION	6.341421991268505E-5	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999996241328137	WITHOUT_CLASSIFICATION	3.7586718621503075E-7	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999985448412816	WITHOUT_CLASSIFICATION	1.455158718438156E-6	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999998853464482	WITHOUT_CLASSIFICATION	1.1465355182038819E-7	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999995525795139	WITHOUT_CLASSIFICATION	4.474204860569179E-7	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999997521126773	WITHOUT_CLASSIFICATION	2.4788732269457676E-7	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999643738588251	WITHOUT_CLASSIFICATION	3.562614117488448E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999981515276569	WITHOUT_CLASSIFICATION	1.8484723431057977E-6	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999998173128177	WITHOUT_CLASSIFICATION	1.8268718220941434E-7	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999995664697172	WITHOUT_CLASSIFICATION	4.3353028283696475E-7	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999994955623736	WITHOUT_CLASSIFICATION	5.044376265381605E-7	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999979695492376	WITHOUT_CLASSIFICATION	2.030450762413989E-6	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999957934135406	WITHOUT_CLASSIFICATION	4.206586459349792E-6	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999973602051389	WITHOUT_CLASSIFICATION	2.6397948611609308E-6	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.999996156109086	WITHOUT_CLASSIFICATION	3.843890913947315E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999980317498796	WITHOUT_CLASSIFICATION	1.9682501204779694E-6	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999975718385756	WITHOUT_CLASSIFICATION	2.4281614244086122E-6	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999991751157109	WITHOUT_CLASSIFICATION	8.248842892067173E-7	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999980678429247	WITHOUT_CLASSIFICATION	1.932157075279308E-6	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999241388778065	WITHOUT_CLASSIFICATION	7.586112219348719E-5	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.999956314258254	WITHOUT_CLASSIFICATION	4.368574174596114E-5	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999939258201499	WITHOUT_CLASSIFICATION	6.074179850172874E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998958342191	WITHOUT_CLASSIFICATION	1.0416578089680704E-7	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999992358772348	WITHOUT_CLASSIFICATION	7.641227652661291E-7	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999855766714989	WITHOUT_CLASSIFICATION	1.4423328501178546E-5	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999987944047	WITHOUT_CLASSIFICATION	1.2055953023303973E-9	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999579809972406	WITHOUT_CLASSIFICATION	4.2019002759387654E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.6929823710541932	WITHOUT_CLASSIFICATION	0.3070176289458068	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999982644498175	WITHOUT_CLASSIFICATION	1.7355501825166747E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999982644498175	WITHOUT_CLASSIFICATION	1.7355501825166747E-6	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999176496431	WITHOUT_CLASSIFICATION	8.23503568205859E-8	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999991872748721	WITHOUT_CLASSIFICATION	8.12725127918641E-7	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.999999951706997	WITHOUT_CLASSIFICATION	4.829300308877836E-8	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999864870086831	WITHOUT_CLASSIFICATION	1.3512991316873887E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999387046657449	WITHOUT_CLASSIFICATION	6.129533425511194E-5	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999999573260171	WITHOUT_CLASSIFICATION	4.267398287731582E-8	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9990773404233774	WITHOUT_CLASSIFICATION	9.226595766226247E-4	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999091778097825	WITHOUT_CLASSIFICATION	9.08221902175721E-5	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999026925351947	WITHOUT_CLASSIFICATION	9.730746480529375E-5	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999635290335406	WITHOUT_CLASSIFICATION	3.647096645935652E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999873697252484	WITHOUT_CLASSIFICATION	1.2630274751645401E-5	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999873697252484	WITHOUT_CLASSIFICATION	1.2630274751645401E-5	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9761257438606238	WITHOUT_CLASSIFICATION	0.02387425613937632	DESIGN
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9971451040087091	WITHOUT_CLASSIFICATION	0.002854895991290858	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9995998369676716	WITHOUT_CLASSIFICATION	4.001630323284056E-4	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999968547877794	WITHOUT_CLASSIFICATION	3.145212220513764E-6	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999819498938	WITHOUT_CLASSIFICATION	1.8050106162010728E-8	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999960632550761	WITHOUT_CLASSIFICATION	3.936744923926186E-6	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999985983609156	WITHOUT_CLASSIFICATION	1.401639084449788E-6	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999701355420636	WITHOUT_CLASSIFICATION	2.986445793639153E-5	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999990906438988	WITHOUT_CLASSIFICATION	9.093561012450358E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9997414485303217	WITHOUT_CLASSIFICATION	2.5855146967829597E-4	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999638566773661	WITHOUT_CLASSIFICATION	3.614332263385188E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999945082871262	WITHOUT_CLASSIFICATION	5.491712873835144E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999982056465277	WITHOUT_CLASSIFICATION	1.7943534721666725E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.9999982056465277	WITHOUT_CLASSIFICATION	1.7943534721666725E-6	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999079555835091	WITHOUT_CLASSIFICATION	9.204441649093347E-5	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9923847431956065	WITHOUT_CLASSIFICATION	0.0076152568043934745	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999992963345447	WITHOUT_CLASSIFICATION	7.036654553797168E-7	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.998510015016021	WITHOUT_CLASSIFICATION	0.001489984983979027	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999119351233355	WITHOUT_CLASSIFICATION	8.806487666444669E-5	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9998778434233687	WITHOUT_CLASSIFICATION	1.2215657663124495E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999999188372911	WITHOUT_CLASSIFICATION	8.116270881624588E-8	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999998923700562	WITHOUT_CLASSIFICATION	1.0762994381801305E-7	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9998811447980605	WITHOUT_CLASSIFICATION	1.1885520193959856E-4	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.999968496985491	WITHOUT_CLASSIFICATION	3.150301450910933E-5	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9995998369676716	WITHOUT_CLASSIFICATION	4.001630323284056E-4	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9995714293746962	WITHOUT_CLASSIFICATION	4.2857062530371427E-4	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9998073140926079	WITHOUT_CLASSIFICATION	1.926859073922039E-4	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999150956769	WITHOUT_CLASSIFICATION	8.490432308127993E-8	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999959648337	WITHOUT_CLASSIFICATION	4.0351663199111815E-9	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999556102574071	WITHOUT_CLASSIFICATION	4.438974259284774E-5	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999998722805005	WITHOUT_CLASSIFICATION	1.2771949960745835E-7	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9966493070093745	WITHOUT_CLASSIFICATION	0.003350692990625546	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9998851349606871	WITHOUT_CLASSIFICATION	1.1486503931281829E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999990881879555	WITHOUT_CLASSIFICATION	9.11812044544509E-7	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.999847197366095	WITHOUT_CLASSIFICATION	1.5280263390502957E-4	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999329554301841	WITHOUT_CLASSIFICATION	6.704456981589654E-5	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9986411078740307	WITHOUT_CLASSIFICATION	0.0013588921259693007	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999999225965057	WITHOUT_CLASSIFICATION	7.740349425746002E-8	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9998849063772134	WITHOUT_CLASSIFICATION	1.1509362278672276E-4	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9996967618363621	WITHOUT_CLASSIFICATION	3.0323816363785327E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9998281935562614	WITHOUT_CLASSIFICATION	1.7180644373855254E-4	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999943227354867	WITHOUT_CLASSIFICATION	5.677264513292151E-6	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999994523671006	WITHOUT_CLASSIFICATION	5.476328994168404E-7	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999926833602643	WITHOUT_CLASSIFICATION	7.316639735729479E-6	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9999943523582274	WITHOUT_CLASSIFICATION	5.647641772642358E-6	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999871550503296	WITHOUT_CLASSIFICATION	1.284494967031172E-5	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999623564690288	WITHOUT_CLASSIFICATION	3.7643530971195755E-5	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9894587555309586	WITHOUT_CLASSIFICATION	0.010541244469041474	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.99993514028803	WITHOUT_CLASSIFICATION	6.485971197007251E-5	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999994604660455	WITHOUT_CLASSIFICATION	5.395339545750633E-7	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999987738451586	WITHOUT_CLASSIFICATION	1.226154841417525E-6	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.9999010850175978	WITHOUT_CLASSIFICATION	9.891498240232093E-5	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999975791264933	WITHOUT_CLASSIFICATION	2.4208735066857704E-6	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.99999932277736	WITHOUT_CLASSIFICATION	6.772226398866189E-7	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999976772020724	WITHOUT_CLASSIFICATION	2.322797927577289E-6	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999988937840604	WITHOUT_CLASSIFICATION	1.106215939669333E-6	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999988937840604	WITHOUT_CLASSIFICATION	1.106215939669333E-6	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999987491800515	WITHOUT_CLASSIFICATION	1.2508199485070596E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999893933315865	WITHOUT_CLASSIFICATION	1.0606668413369072E-5	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999202735195	WITHOUT_CLASSIFICATION	7.972648058110547E-8	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999978323572798	WITHOUT_CLASSIFICATION	2.167642720309326E-6	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.8288771164990313	WITHOUT_CLASSIFICATION	0.1711228835009687	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999993688523469	WITHOUT_CLASSIFICATION	6.311476530914068E-7	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999751558839642	WITHOUT_CLASSIFICATION	2.4844116035813558E-5	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.9999994027430101	WITHOUT_CLASSIFICATION	5.97256989773602E-7	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999601218280302	WITHOUT_CLASSIFICATION	3.987817196983315E-5	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999991133175924	WITHOUT_CLASSIFICATION	8.866824077437319E-7	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999995652045868	WITHOUT_CLASSIFICATION	4.347954132048408E-6	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.9999998353734361	WITHOUT_CLASSIFICATION	1.6462656396042147E-7	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999965794166674	WITHOUT_CLASSIFICATION	3.4205833325470774E-6	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999983373375685	WITHOUT_CLASSIFICATION	1.6626624314738482E-6	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999983352693773	WITHOUT_CLASSIFICATION	1.6647306227982674E-6	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999800193755729	WITHOUT_CLASSIFICATION	1.99806244271719E-5	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9998752177171581	WITHOUT_CLASSIFICATION	1.2478228284184455E-4	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999141083488	WITHOUT_CLASSIFICATION	8.589165126452534E-8	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.9999881552905243	WITHOUT_CLASSIFICATION	1.1844709475736787E-5	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9913626793207303	WITHOUT_CLASSIFICATION	0.00863732067926972	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999616764570325	WITHOUT_CLASSIFICATION	3.8323542967518344E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999616764570325	WITHOUT_CLASSIFICATION	3.8323542967518344E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999111999416217	WITHOUT_CLASSIFICATION	8.880005837832453E-5	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999996081928945	WITHOUT_CLASSIFICATION	3.9180710564257105E-7	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9998490044509127	WITHOUT_CLASSIFICATION	1.5099554908732442E-4	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999991857457353	WITHOUT_CLASSIFICATION	8.142542646363118E-7	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999998790235444	WITHOUT_CLASSIFICATION	1.2097645566105778E-7	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999995621614646	WITHOUT_CLASSIFICATION	4.3783853541741576E-7	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999986449243451	WITHOUT_CLASSIFICATION	1.3550756548933709E-6	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999551843	WITHOUT_CLASSIFICATION	4.481565318450734E-11	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999897130045684	WITHOUT_CLASSIFICATION	1.028699543164994E-5	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9972450720194574	WITHOUT_CLASSIFICATION	0.002754927980542627	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.999996971459249	WITHOUT_CLASSIFICATION	3.0285407509990446E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9998396208437088	WITHOUT_CLASSIFICATION	1.6037915629124337E-4	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999984984208231	WITHOUT_CLASSIFICATION	1.5015791769725603E-6	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999998719926566	WITHOUT_CLASSIFICATION	1.280073434593586E-7	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999977832174028	WITHOUT_CLASSIFICATION	2.2167825971800423E-6	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9307252911344363	WITHOUT_CLASSIFICATION	0.06927470886556371	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999938211707898	WITHOUT_CLASSIFICATION	6.178829210233746E-6	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999939705619014	WITHOUT_CLASSIFICATION	6.0294380986269435E-6	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999994227749526	WITHOUT_CLASSIFICATION	5.772250474072044E-7	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999964338592242	WITHOUT_CLASSIFICATION	3.5661407757664905E-6	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9925235933739492	WITHOUT_CLASSIFICATION	0.007476406626050661	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.999999719387001	WITHOUT_CLASSIFICATION	2.8061299890016446E-7	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.999998216577083	WITHOUT_CLASSIFICATION	1.783422916938447E-6	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999638608353669	WITHOUT_CLASSIFICATION	3.613916463312621E-5	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999947028131919	WITHOUT_CLASSIFICATION	5.2971868080424485E-6	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999989481961664	WITHOUT_CLASSIFICATION	1.0518038336078781E-6	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.999649181627292	WITHOUT_CLASSIFICATION	3.5081837270807607E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999899436293957	WITHOUT_CLASSIFICATION	1.0056370604283495E-5	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999552377958763	WITHOUT_CLASSIFICATION	4.476220412386559E-5	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999091278893204	WITHOUT_CLASSIFICATION	9.087211067955884E-5	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9997500923056014	WITHOUT_CLASSIFICATION	2.49907694398584E-4	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9998512582031417	WITHOUT_CLASSIFICATION	1.4874179685834301E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999417815133382	WITHOUT_CLASSIFICATION	5.821848666186711E-5	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9999829408926484	WITHOUT_CLASSIFICATION	1.705910735164309E-5	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999913188986946	WITHOUT_CLASSIFICATION	8.68110130539982E-6	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.999775007860409	WITHOUT_CLASSIFICATION	2.2499213959105744E-4	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9995115901981494	WITHOUT_CLASSIFICATION	4.884098018507171E-4	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999932795823295	WITHOUT_CLASSIFICATION	6.720417670556398E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9996768808686842	WITHOUT_CLASSIFICATION	3.2311913131578986E-4	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9998749032426176	WITHOUT_CLASSIFICATION	1.250967573824364E-4	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999940284238785	WITHOUT_CLASSIFICATION	5.971576121491977E-6	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999995243547001	WITHOUT_CLASSIFICATION	4.7564529981110424E-7	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999997372271606	WITHOUT_CLASSIFICATION	2.6277283936888543E-7	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999344125230899	WITHOUT_CLASSIFICATION	6.558747691014472E-5	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999996341928278	WITHOUT_CLASSIFICATION	3.6580717219392023E-7	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999344125230899	WITHOUT_CLASSIFICATION	6.558747691014472E-5	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999442641626992	DESIGN	5.573583730082147E-5	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.994093871894797	DESIGN	0.0059061281052029055	WITHOUT_CLASSIFICATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999879251763175	WITHOUT_CLASSIFICATION	1.2074823682421702E-5	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6003727260312265	DESIGN	0.3996272739687734	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999986246614049	WITHOUT_CLASSIFICATION	1.3753385951885338E-6	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999973120927635	WITHOUT_CLASSIFICATION	2.6879072365117884E-6	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999963615248345	WITHOUT_CLASSIFICATION	3.63847516540642E-6	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998827930075966	WITHOUT_CLASSIFICATION	1.1720699240329838E-4	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999969612917007	WITHOUT_CLASSIFICATION	3.0387082993265036E-6	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.949385745461836	WITHOUT_CLASSIFICATION	0.05061425453816397	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9305607069633814	WITHOUT_CLASSIFICATION	0.06943929303661854	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999874455826457	WITHOUT_CLASSIFICATION	1.2554417354347154E-5	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9326610435520518	WITHOUT_CLASSIFICATION	0.0673389564479481	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999997372464419	WITHOUT_CLASSIFICATION	2.62753558155283E-7	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9994531856756497	WITHOUT_CLASSIFICATION	5.468143243504555E-4	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9129024875340722	WITHOUT_CLASSIFICATION	0.08709751246592781	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999834371884806	WITHOUT_CLASSIFICATION	1.6562811519415565E-5	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9999995735084956	WITHOUT_CLASSIFICATION	4.264915043768059E-7	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999958743201446	WITHOUT_CLASSIFICATION	4.125679855473161E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9991497778796073	WITHOUT_CLASSIFICATION	8.502221203926471E-4	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999320671968986	WITHOUT_CLASSIFICATION	6.79328031012794E-5	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999981242870996	WITHOUT_CLASSIFICATION	1.8757129004159348E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999994198877163	WITHOUT_CLASSIFICATION	5.801122836673076E-7	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999736905448248	WITHOUT_CLASSIFICATION	2.6309455175139776E-5	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999583909761304	WITHOUT_CLASSIFICATION	4.160902386951031E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9998837359724987	WITHOUT_CLASSIFICATION	1.1626402750129402E-4	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999902338612152	WITHOUT_CLASSIFICATION	9.766138784776807E-6	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999784657223909	WITHOUT_CLASSIFICATION	2.1534277609108662E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9997585008664919	WITHOUT_CLASSIFICATION	2.4149913350821452E-4	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.999999815581126	WITHOUT_CLASSIFICATION	1.8441887399886778E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999726444384112	WITHOUT_CLASSIFICATION	2.7355561588841445E-5	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999614967139399	WITHOUT_CLASSIFICATION	3.850328606005355E-5	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999812658640609	WITHOUT_CLASSIFICATION	1.8734135939073065E-5	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9999664274783385	WITHOUT_CLASSIFICATION	3.357252166156295E-5	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999983419143033	WITHOUT_CLASSIFICATION	1.6580856968099427E-6	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999966224312977	WITHOUT_CLASSIFICATION	3.377568702256945E-6	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999957628613296	WITHOUT_CLASSIFICATION	4.237138670318437E-6	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999962628423467	WITHOUT_CLASSIFICATION	3.7371576532999695E-6	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9998357347372181	WITHOUT_CLASSIFICATION	1.642652627818998E-4	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999997492166961	WITHOUT_CLASSIFICATION	2.5078330386127527E-7	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999980351896	WITHOUT_CLASSIFICATION	1.9648105163880023E-9	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999518675868715	WITHOUT_CLASSIFICATION	4.813241312848365E-5	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999959607015348	WITHOUT_CLASSIFICATION	4.03929846512109E-6	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.999635022378196	WITHOUT_CLASSIFICATION	3.649776218039429E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.999635022378196	WITHOUT_CLASSIFICATION	3.649776218039429E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9789246603674883	WITHOUT_CLASSIFICATION	0.021075339632511708	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999970119842647	WITHOUT_CLASSIFICATION	2.9880157351791293E-6	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9985116852267126	WITHOUT_CLASSIFICATION	0.0014883147732874349	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999935491121661	WITHOUT_CLASSIFICATION	6.450887833843424E-6	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.999999589341296	WITHOUT_CLASSIFICATION	4.1065870413349473E-7	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999677480151	WITHOUT_CLASSIFICATION	3.2251984793627756E-8	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999792779180006	WITHOUT_CLASSIFICATION	2.072208199948862E-5	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999976624345895	WITHOUT_CLASSIFICATION	2.337565410482009E-6	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.99965148219176	WITHOUT_CLASSIFICATION	3.485178082398742E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9994391910243602	WITHOUT_CLASSIFICATION	5.608089756397945E-4	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999337828328	WITHOUT_CLASSIFICATION	6.621716723914772E-8	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999425196874133	WITHOUT_CLASSIFICATION	5.748031258665376E-5	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999695577102456	WITHOUT_CLASSIFICATION	3.0442289754370644E-5	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9936867557166984	WITHOUT_CLASSIFICATION	0.006313244283301514	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9997861529223423	WITHOUT_CLASSIFICATION	2.1384707765761965E-4	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9659665557631238	WITHOUT_CLASSIFICATION	0.03403344423687624	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999994644444006	WITHOUT_CLASSIFICATION	5.355555994437524E-7	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999861634064784	WITHOUT_CLASSIFICATION	1.3836593521574017E-5	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9987529472975061	WITHOUT_CLASSIFICATION	0.0012470527024939044	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999960355663509	WITHOUT_CLASSIFICATION	3.964433649211646E-6	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.8748371645100522	WITHOUT_CLASSIFICATION	0.12516283548994786	DESIGN
// FIXME warning	WITHOUT_CLASSIFICATION	0.9959882879166779	WITHOUT_CLASSIFICATION	0.00401171208332199	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9997146849803589	WITHOUT_CLASSIFICATION	2.8531501964118897E-4	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9996480482387783	WITHOUT_CLASSIFICATION	3.5195176122170414E-4	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.5993705976845519	WITHOUT_CLASSIFICATION	0.4006294023154481	DESIGN
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999939433922	WITHOUT_CLASSIFICATION	6.056607811255914E-9	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999734410980102	WITHOUT_CLASSIFICATION	2.6558901989766148E-5	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9993388112547539	WITHOUT_CLASSIFICATION	6.61188745246164E-4	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999907685286431	WITHOUT_CLASSIFICATION	9.231471356857908E-6	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999989696406765	WITHOUT_CLASSIFICATION	1.030359323527861E-6	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9992616155306634	WITHOUT_CLASSIFICATION	7.383844693366266E-4	DESIGN
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9998080666629969	WITHOUT_CLASSIFICATION	1.9193333700305465E-4	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999987978914764	WITHOUT_CLASSIFICATION	1.2021085236460007E-6	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9997418995882644	WITHOUT_CLASSIFICATION	2.5810041173552684E-4	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999967960349	WITHOUT_CLASSIFICATION	3.203965202416769E-9	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999984060953	WITHOUT_CLASSIFICATION	1.5939046463051175E-9	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999986948576227	WITHOUT_CLASSIFICATION	1.3051423772988005E-5	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999786541802471	WITHOUT_CLASSIFICATION	2.1345819752876955E-5	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9240266570269653	WITHOUT_CLASSIFICATION	0.07597334297303464	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999942053705332	WITHOUT_CLASSIFICATION	5.7946294668504375E-6	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9993536974441143	WITHOUT_CLASSIFICATION	6.463025558856729E-4	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9968674194348264	WITHOUT_CLASSIFICATION	0.0031325805651736555	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9909541325865935	WITHOUT_CLASSIFICATION	0.009045867413406525	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999998369904791	WITHOUT_CLASSIFICATION	1.6300952085364905E-7	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999927244242248	WITHOUT_CLASSIFICATION	7.275575775220319E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999393026949	WITHOUT_CLASSIFICATION	6.069730510362934E-8	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999984761355946	WITHOUT_CLASSIFICATION	1.5238644054660291E-6	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999922868586296	WITHOUT_CLASSIFICATION	7.713141370357312E-6	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9997899046748348	WITHOUT_CLASSIFICATION	2.100953251652841E-4	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999986951879772	WITHOUT_CLASSIFICATION	1.3048120226669078E-6	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999987155290035	WITHOUT_CLASSIFICATION	1.2844709964180107E-6	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999996078905332	WITHOUT_CLASSIFICATION	3.9210946683635435E-7	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999342348106	WITHOUT_CLASSIFICATION	6.576518943391283E-8	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999952836593529	WITHOUT_CLASSIFICATION	4.7163406471630215E-6	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999620320697767	WITHOUT_CLASSIFICATION	3.7967930223267194E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999532997279983	WITHOUT_CLASSIFICATION	4.670027200159048E-5	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999789522118364	WITHOUT_CLASSIFICATION	2.104778816355563E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9993699134355684	WITHOUT_CLASSIFICATION	6.300865644316904E-4	DESIGN
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999966276889983	WITHOUT_CLASSIFICATION	3.3723110017864738E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999994157260467	WITHOUT_CLASSIFICATION	5.842739534048621E-7	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999314488196421	WITHOUT_CLASSIFICATION	6.855118035784296E-5	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999998786130433	WITHOUT_CLASSIFICATION	1.21386956824081E-7	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999995171691198	WITHOUT_CLASSIFICATION	4.828308801872087E-7	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999893433677821	WITHOUT_CLASSIFICATION	1.065663221796832E-5	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999956410611562	WITHOUT_CLASSIFICATION	4.358938843725975E-6	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999942595980092	WITHOUT_CLASSIFICATION	5.740401990812129E-6	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999902957735999	WITHOUT_CLASSIFICATION	9.704226400027868E-6	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999390513801	WITHOUT_CLASSIFICATION	6.094861995229826E-8	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999847453568552	WITHOUT_CLASSIFICATION	1.5254643144901742E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999951490377161	WITHOUT_CLASSIFICATION	4.850962283942672E-6	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.999832683583577	WITHOUT_CLASSIFICATION	1.673164164229862E-4	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9984399403131956	WITHOUT_CLASSIFICATION	0.0015600596868043783	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9998911390758127	WITHOUT_CLASSIFICATION	1.088609241872754E-4	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999931317355365	WITHOUT_CLASSIFICATION	6.868264463498131E-6	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999883123805965	WITHOUT_CLASSIFICATION	1.1687619403496394E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999907849832477	WITHOUT_CLASSIFICATION	9.215016752285266E-6	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999946186923189	WITHOUT_CLASSIFICATION	5.381307681084427E-6	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.9999825296886498	WITHOUT_CLASSIFICATION	1.7470311350159078E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999867378705726	WITHOUT_CLASSIFICATION	1.3262129427492523E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999897399025989	WITHOUT_CLASSIFICATION	1.0260097401095251E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999855445732339	WITHOUT_CLASSIFICATION	1.445542676624449E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999912126258476	WITHOUT_CLASSIFICATION	8.787374152461482E-6	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.9999908554717535	WITHOUT_CLASSIFICATION	9.144528246522602E-6	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999898119206759	WITHOUT_CLASSIFICATION	1.018807932410118E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999978322915295	WITHOUT_CLASSIFICATION	2.1677084705748754E-6	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999987571488799	WITHOUT_CLASSIFICATION	1.2428511200705972E-6	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999958888704282	WITHOUT_CLASSIFICATION	4.1111295718007326E-6	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999977239115968	WITHOUT_CLASSIFICATION	2.2760884032147187E-6	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999965393838726	WITHOUT_CLASSIFICATION	3.460616127396247E-6	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999982545567941	WITHOUT_CLASSIFICATION	1.7454432058990223E-6	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999980752309633	WITHOUT_CLASSIFICATION	1.924769036716865E-6	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999982567939217	WITHOUT_CLASSIFICATION	1.743206078310054E-6	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999988266593546	WITHOUT_CLASSIFICATION	1.1733406454405742E-6	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999980531962636	WITHOUT_CLASSIFICATION	1.9468037364008432E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9975514543479085	WITHOUT_CLASSIFICATION	0.0024485456520915274	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999731847252782	WITHOUT_CLASSIFICATION	2.6815274721700446E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999977952699423	WITHOUT_CLASSIFICATION	2.2047300578022214E-6	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.99933179800273	WITHOUT_CLASSIFICATION	6.682019972701379E-4	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.99983622612306	WITHOUT_CLASSIFICATION	1.6377387693991267E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999968007867797	WITHOUT_CLASSIFICATION	3.1992132202584563E-6	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9629478024214756	WITHOUT_CLASSIFICATION	0.0370521975785244	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999967294074406	WITHOUT_CLASSIFICATION	3.2705925594316936E-6	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999993505879304	WITHOUT_CLASSIFICATION	6.494120695272623E-7	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.7735244719955234	DESIGN	0.22647552800447646	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999802607212205	WITHOUT_CLASSIFICATION	1.9739278779592214E-5	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999983094236129	WITHOUT_CLASSIFICATION	1.6905763871291083E-6	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9996908615980619	WITHOUT_CLASSIFICATION	3.091384019381457E-4	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9996908615980619	WITHOUT_CLASSIFICATION	3.091384019381457E-4	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999451493873648	WITHOUT_CLASSIFICATION	5.4850612635317597E-5	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9998472959173548	WITHOUT_CLASSIFICATION	1.527040826452605E-4	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999774244496	WITHOUT_CLASSIFICATION	2.2575550431341396E-8	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9996868147754292	WITHOUT_CLASSIFICATION	3.1318522457081296E-4	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9942074266131867	WITHOUT_CLASSIFICATION	0.005792573386813189	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9998007025944184	WITHOUT_CLASSIFICATION	1.9929740558154944E-4	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999980805206247	WITHOUT_CLASSIFICATION	1.9194793753184592E-6	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999908148041243	WITHOUT_CLASSIFICATION	9.185195875665838E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999966577975627	WITHOUT_CLASSIFICATION	3.3422024372506927E-6	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999997920147824	WITHOUT_CLASSIFICATION	2.07985217645766E-7	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999375236358685	WITHOUT_CLASSIFICATION	6.24763641313891E-5	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9997195574105232	WITHOUT_CLASSIFICATION	2.804425894768284E-4	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9999665940056627	WITHOUT_CLASSIFICATION	3.3405994337383084E-5	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999196857765528	WITHOUT_CLASSIFICATION	8.031422344727296E-5	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9998775223226536	WITHOUT_CLASSIFICATION	1.2247767734644427E-4	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999910818621578	WITHOUT_CLASSIFICATION	8.918137842252734E-6	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999664274866925	WITHOUT_CLASSIFICATION	3.3572513307448274E-5	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.8810561635279579	WITHOUT_CLASSIFICATION	0.11894383647204204	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999865763422995	WITHOUT_CLASSIFICATION	1.342365770050731E-5	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9986998720179286	WITHOUT_CLASSIFICATION	0.0013001279820714139	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.999998313137445	WITHOUT_CLASSIFICATION	1.6868625549668197E-6	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9735055294562586	WITHOUT_CLASSIFICATION	0.02649447054374139	DESIGN
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999852209309169	WITHOUT_CLASSIFICATION	1.4779069083063714E-5	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999979989342169	WITHOUT_CLASSIFICATION	2.0010657830591253E-6	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999995392328821	WITHOUT_CLASSIFICATION	4.6076711788037723E-7	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9997452313893131	WITHOUT_CLASSIFICATION	2.5476861068688566E-4	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.999996896928477	WITHOUT_CLASSIFICATION	3.1030715229600625E-6	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999879484351751	WITHOUT_CLASSIFICATION	1.2051564824842124E-5	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999682667916953	WITHOUT_CLASSIFICATION	3.1733208304728144E-5	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999982481219022	WITHOUT_CLASSIFICATION	1.7518780977700465E-6	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.999991480160333	WITHOUT_CLASSIFICATION	8.519839666980452E-6	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9994785097099831	WITHOUT_CLASSIFICATION	5.214902900169012E-4	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.99999872764395	WITHOUT_CLASSIFICATION	1.2723560499153508E-6	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999993487256784	WITHOUT_CLASSIFICATION	6.512743215217197E-7	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999940303044953	WITHOUT_CLASSIFICATION	5.969695504647732E-6	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.999984389458679	WITHOUT_CLASSIFICATION	1.5610541320974432E-5	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975597903866	WITHOUT_CLASSIFICATION	2.440209613416631E-6	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999899480976	WITHOUT_CLASSIFICATION	1.005190240874426E-8	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999987836764341	WITHOUT_CLASSIFICATION	1.2163235657874613E-6	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999981989824535	WITHOUT_CLASSIFICATION	1.8010175466290786E-6	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9446761760554705	WITHOUT_CLASSIFICATION	0.0553238239445294	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999242914674128	WITHOUT_CLASSIFICATION	7.570853258722465E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999999745237587	WITHOUT_CLASSIFICATION	2.547624130838047E-8	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999995251639916	WITHOUT_CLASSIFICATION	4.748360083923965E-7	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999995251639916	WITHOUT_CLASSIFICATION	4.748360083923965E-7	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999989647923537	WITHOUT_CLASSIFICATION	1.0352076462746473E-6	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.999988887674409	WITHOUT_CLASSIFICATION	1.11123255910635E-5	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9997452757299791	WITHOUT_CLASSIFICATION	2.547242700209937E-4	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.9999946866109061	WITHOUT_CLASSIFICATION	5.313389094024272E-6	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999973141040776	WITHOUT_CLASSIFICATION	2.6858959224088503E-6	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.9999996227190503	WITHOUT_CLASSIFICATION	3.7728094975618845E-7	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999997751662647	WITHOUT_CLASSIFICATION	2.2483373533905964E-7	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9997359997420278	WITHOUT_CLASSIFICATION	2.6400025797223756E-4	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9964204852687493	WITHOUT_CLASSIFICATION	0.0035795147312507303	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998325568325582	WITHOUT_CLASSIFICATION	1.6744316744181473E-4	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998706545159589	WITHOUT_CLASSIFICATION	1.2934548404113246E-4	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9996451508713251	WITHOUT_CLASSIFICATION	3.5484912867489855E-4	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999981736588829	WITHOUT_CLASSIFICATION	1.8263411170861997E-6	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999986163992755	WITHOUT_CLASSIFICATION	1.383600724560804E-6	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.941311964930623	WITHOUT_CLASSIFICATION	0.058688035069377135	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9740292787208716	WITHOUT_CLASSIFICATION	0.025970721279128327	DESIGN
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999266156706109	WITHOUT_CLASSIFICATION	7.338432938912465E-5	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999746080614802	WITHOUT_CLASSIFICATION	2.539193851976808E-5	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999993835720093	WITHOUT_CLASSIFICATION	6.1642799062217E-7	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999992747353648	WITHOUT_CLASSIFICATION	7.252646353160927E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999947665399694	WITHOUT_CLASSIFICATION	5.233460030596314E-6	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999947665399694	WITHOUT_CLASSIFICATION	5.233460030596314E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999728210041	WITHOUT_CLASSIFICATION	2.7178996011435375E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999728210041	WITHOUT_CLASSIFICATION	2.7178996011435375E-8	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999272073888	WITHOUT_CLASSIFICATION	7.279261114846003E-8	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.999997589313987	WITHOUT_CLASSIFICATION	2.4106860131014975E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999241480027927	WITHOUT_CLASSIFICATION	7.585199720724097E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999992486918707	WITHOUT_CLASSIFICATION	7.513081292646203E-7	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999915865604614	WITHOUT_CLASSIFICATION	8.4134395385142E-6	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999998326340176	WITHOUT_CLASSIFICATION	1.6736598238497457E-7	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.89327464520916	DESIGN	0.1067253547908401	WITHOUT_CLASSIFICATION
// Profile	WITHOUT_CLASSIFICATION	0.9999936321227899	WITHOUT_CLASSIFICATION	6.367877210152439E-6	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999793670187783	WITHOUT_CLASSIFICATION	2.063298122167282E-5	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999996852165949	WITHOUT_CLASSIFICATION	3.14783405054988E-7	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9998261473230768	WITHOUT_CLASSIFICATION	1.738526769231364E-4	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999955887986757	WITHOUT_CLASSIFICATION	4.411201324291423E-6	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999990808765609	WITHOUT_CLASSIFICATION	9.191234391187037E-7	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9951862172708785	WITHOUT_CLASSIFICATION	0.004813782729121512	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.999978999884299	WITHOUT_CLASSIFICATION	2.10001157010946E-5	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999998450198638	WITHOUT_CLASSIFICATION	1.5498013608982604E-7	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999435901647568	WITHOUT_CLASSIFICATION	5.64098352432305E-5	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.999996615716247	WITHOUT_CLASSIFICATION	3.384283752972032E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9999622751312215	WITHOUT_CLASSIFICATION	3.7724868778417865E-5	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9996780294874552	WITHOUT_CLASSIFICATION	3.2197051254480194E-4	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999956321857434	WITHOUT_CLASSIFICATION	4.3678142566279885E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999977654465507	WITHOUT_CLASSIFICATION	2.2345534492911773E-5	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999998498843292	WITHOUT_CLASSIFICATION	1.5011567085896564E-7	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999902338612152	WITHOUT_CLASSIFICATION	9.766138784776807E-6	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999677480151	WITHOUT_CLASSIFICATION	3.2251984793627756E-8	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999821344564264	WITHOUT_CLASSIFICATION	1.7865543573659546E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9980571824063301	WITHOUT_CLASSIFICATION	0.001942817593669767	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999996425821852	WITHOUT_CLASSIFICATION	3.5741781473364964E-7	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.8402708438753231	WITHOUT_CLASSIFICATION	0.15972915612467684	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999999225830604	WITHOUT_CLASSIFICATION	7.741693961041466E-7	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999999225830604	WITHOUT_CLASSIFICATION	7.741693961041466E-7	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9998564174976535	WITHOUT_CLASSIFICATION	1.4358250234645592E-4	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999065998194	WITHOUT_CLASSIFICATION	9.340018058486129E-8	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999995431702341	WITHOUT_CLASSIFICATION	4.568297658179294E-7	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.999995266998976	WITHOUT_CLASSIFICATION	4.733001023986705E-6	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999995118975621	WITHOUT_CLASSIFICATION	4.88102437908582E-7	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9999945399787897	WITHOUT_CLASSIFICATION	5.4600212102538065E-6	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9998610188253519	WITHOUT_CLASSIFICATION	1.3898117464801902E-4	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999990677535654	WITHOUT_CLASSIFICATION	9.322464345591807E-7	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999360016876905	WITHOUT_CLASSIFICATION	6.399831230958984E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999857949038026	WITHOUT_CLASSIFICATION	1.4205096197333572E-5	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999889946603464	WITHOUT_CLASSIFICATION	1.1005339653537486E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999922626874108	WITHOUT_CLASSIFICATION	7.737312589256694E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999984243979961	WITHOUT_CLASSIFICATION	1.5756020038090797E-6	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.999999949056828	WITHOUT_CLASSIFICATION	5.094317194809265E-8	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999998293472422	WITHOUT_CLASSIFICATION	1.7065275785942796E-7	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999950879013606	WITHOUT_CLASSIFICATION	4.91209863934098E-6	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.975677342966328	WITHOUT_CLASSIFICATION	0.024322657033671893	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999813654762555	WITHOUT_CLASSIFICATION	1.8634523744446787E-5	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999997685731744	WITHOUT_CLASSIFICATION	2.3142682560301194E-7	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999846181554404	WITHOUT_CLASSIFICATION	1.538184455959345E-5	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999997218410339	WITHOUT_CLASSIFICATION	2.7815896610558383E-7	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999996232694986	WITHOUT_CLASSIFICATION	3.7673050144482123E-7	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.999999568349934	WITHOUT_CLASSIFICATION	4.3165006603918184E-7	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999640394345333	WITHOUT_CLASSIFICATION	3.5960565466717214E-5	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.999994602345419	WITHOUT_CLASSIFICATION	5.397654581057965E-6	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999915297780103	WITHOUT_CLASSIFICATION	8.47022198979118E-6	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999759814235715	WITHOUT_CLASSIFICATION	2.4018576428573537E-5	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9998844785710562	WITHOUT_CLASSIFICATION	1.1552142894382583E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999251322882	WITHOUT_CLASSIFICATION	7.486771178824988E-8	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999413494001079	WITHOUT_CLASSIFICATION	5.865059989205345E-5	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9997306130775627	WITHOUT_CLASSIFICATION	2.693869224372299E-4	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.999849931215872	WITHOUT_CLASSIFICATION	1.5006878412802854E-4	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999986789157903	WITHOUT_CLASSIFICATION	1.3210842096816082E-6	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.999978693764112	WITHOUT_CLASSIFICATION	2.1306235888092627E-5	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999766968797607	WITHOUT_CLASSIFICATION	2.3303120239395887E-5	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9996578290849675	WITHOUT_CLASSIFICATION	3.421709150325609E-4	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999794963160956	WITHOUT_CLASSIFICATION	2.050368390430698E-5	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998075602926453	WITHOUT_CLASSIFICATION	1.9243970735460648E-4	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999706446794	WITHOUT_CLASSIFICATION	2.9355320566065372E-8	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999977533138782	WITHOUT_CLASSIFICATION	2.246686121829088E-6	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999990782277265	WITHOUT_CLASSIFICATION	9.217722734112601E-7	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999926380312195	WITHOUT_CLASSIFICATION	7.3619687804355035E-6	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.9999870287007233	WITHOUT_CLASSIFICATION	1.2971299276629363E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999978500570008	WITHOUT_CLASSIFICATION	2.1499429992724496E-6	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.999995643806904	WITHOUT_CLASSIFICATION	4.356193095958442E-6	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999678831744779	WITHOUT_CLASSIFICATION	3.211682552210857E-5	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999995604182772	WITHOUT_CLASSIFICATION	4.3958172281793797E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999740770650349	WITHOUT_CLASSIFICATION	2.592293496498269E-5	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9997945980639658	WITHOUT_CLASSIFICATION	2.054019360341839E-4	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9999769979827552	WITHOUT_CLASSIFICATION	2.3002017244851615E-5	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999984487206582	WITHOUT_CLASSIFICATION	1.5512793417893585E-6	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999997462373371	WITHOUT_CLASSIFICATION	2.5376266283512905E-7	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999998006410983	WITHOUT_CLASSIFICATION	1.993589016951007E-7	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999997609174794	WITHOUT_CLASSIFICATION	2.390825205302525E-7	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.999998934572804	WITHOUT_CLASSIFICATION	1.0654271959625262E-6	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999982325165752	WITHOUT_CLASSIFICATION	1.7674834248706705E-6	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999910625369713	WITHOUT_CLASSIFICATION	8.937463028646637E-6	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999794864622371	WITHOUT_CLASSIFICATION	2.0513537762869738E-5	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999958421475126	WITHOUT_CLASSIFICATION	4.157852487439392E-6	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.6793845892270683	WITHOUT_CLASSIFICATION	0.3206154107729318	DESIGN
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999991156062741	WITHOUT_CLASSIFICATION	8.84393725891077E-7	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999984487206582	WITHOUT_CLASSIFICATION	1.5512793417893585E-6	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999998006410983	WITHOUT_CLASSIFICATION	1.993589016951007E-7	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999997462373371	WITHOUT_CLASSIFICATION	2.5376266283512905E-7	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999959111449002	WITHOUT_CLASSIFICATION	4.088855099880697E-6	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999991518825139	WITHOUT_CLASSIFICATION	8.48117486084208E-7	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999997119041849	WITHOUT_CLASSIFICATION	2.880958151439303E-7	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999936946660052	WITHOUT_CLASSIFICATION	6.305333994913777E-6	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9956717466910604	WITHOUT_CLASSIFICATION	0.0043282533089396115	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999995428052234	WITHOUT_CLASSIFICATION	4.571947765729093E-7	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999960480700655	WITHOUT_CLASSIFICATION	3.951929934517374E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999996554643307	WITHOUT_CLASSIFICATION	3.4453566941609567E-7	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.99999343758318	WITHOUT_CLASSIFICATION	6.56241681995987E-6	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999047219521	WITHOUT_CLASSIFICATION	9.527804784117644E-8	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999077545159	WITHOUT_CLASSIFICATION	9.224548411536493E-8	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9967923962113397	WITHOUT_CLASSIFICATION	0.0032076037886602047	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999965471154295	WITHOUT_CLASSIFICATION	3.4528845705771286E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999986642858876	WITHOUT_CLASSIFICATION	1.335714112419791E-6	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999978888940909	WITHOUT_CLASSIFICATION	2.111105909079878E-6	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9988737896330274	WITHOUT_CLASSIFICATION	0.0011262103669726145	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9995906375329447	WITHOUT_CLASSIFICATION	4.093624670552616E-4	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9932663242054905	WITHOUT_CLASSIFICATION	0.006733675794509538	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9932663242054905	WITHOUT_CLASSIFICATION	0.006733675794509538	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999878721038984	WITHOUT_CLASSIFICATION	1.212789610149426E-5	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999986257885782	WITHOUT_CLASSIFICATION	1.3742114216738979E-6	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999961465382345	WITHOUT_CLASSIFICATION	3.853461765372465E-6	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.999983954356711	WITHOUT_CLASSIFICATION	1.6045643288982626E-5	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999348252030735	WITHOUT_CLASSIFICATION	6.517479692641464E-5	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999923018434856	WITHOUT_CLASSIFICATION	7.698156514303764E-6	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999895970610394	WITHOUT_CLASSIFICATION	1.0402938960635657E-5	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999964599206608	WITHOUT_CLASSIFICATION	3.540079339251934E-6	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999989766916042	WITHOUT_CLASSIFICATION	1.0233083957528669E-6	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.999974216562399	WITHOUT_CLASSIFICATION	2.5783437600978532E-5	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999991029169247	WITHOUT_CLASSIFICATION	8.970830751218687E-7	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999956440282982	WITHOUT_CLASSIFICATION	4.355971701757787E-6	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999253078219011	WITHOUT_CLASSIFICATION	7.469217809879793E-5	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999999960258139	WITHOUT_CLASSIFICATION	3.9741861108447565E-8	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9977992148949711	WITHOUT_CLASSIFICATION	0.0022007851050287576	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999987242845241	WITHOUT_CLASSIFICATION	1.2757154759050444E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999995335926744	WITHOUT_CLASSIFICATION	4.664073256159731E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999946288084628	WITHOUT_CLASSIFICATION	5.371191537191696E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999946288084628	WITHOUT_CLASSIFICATION	5.371191537191696E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999919498536116	WITHOUT_CLASSIFICATION	8.050146388298223E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999922127915922	WITHOUT_CLASSIFICATION	7.787208407778807E-6	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999079924942674	WITHOUT_CLASSIFICATION	9.200750573259122E-5	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999998599411744	WITHOUT_CLASSIFICATION	1.400588256913882E-7	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.999967218919176	WITHOUT_CLASSIFICATION	3.2781080824137446E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999946288084628	WITHOUT_CLASSIFICATION	5.371191537191696E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999946288084628	WITHOUT_CLASSIFICATION	5.371191537191696E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9992977632561582	WITHOUT_CLASSIFICATION	7.022367438419283E-4	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9992977632561582	WITHOUT_CLASSIFICATION	7.022367438419283E-4	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999683534962729	WITHOUT_CLASSIFICATION	3.1646503727155746E-5	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999999058638379	WITHOUT_CLASSIFICATION	9.413616202561525E-8	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9964699029220556	WITHOUT_CLASSIFICATION	0.003530097077944233	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9826848384232436	WITHOUT_CLASSIFICATION	0.017315161576756458	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999770074824064	WITHOUT_CLASSIFICATION	2.2992517593647724E-5	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999770074824064	WITHOUT_CLASSIFICATION	2.2992517593647724E-5	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999974693920022	WITHOUT_CLASSIFICATION	2.5306079976896005E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999980693322813	WITHOUT_CLASSIFICATION	1.9306677187121324E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999992537952346	WITHOUT_CLASSIFICATION	7.462047653908238E-6	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.999837036601797	WITHOUT_CLASSIFICATION	1.6296339820293248E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9991313339416975	WITHOUT_CLASSIFICATION	8.686660583023939E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999997859114725	WITHOUT_CLASSIFICATION	2.140885275268446E-7	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9998744133486306	WITHOUT_CLASSIFICATION	1.2558665136945085E-4	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999987488235738	WITHOUT_CLASSIFICATION	1.2511764262418957E-6	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999610719627195	WITHOUT_CLASSIFICATION	3.892803728043302E-5	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999992255360828	WITHOUT_CLASSIFICATION	7.74463917104046E-7	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.97955895581419	WITHOUT_CLASSIFICATION	0.020441044185810043	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999929364825693	WITHOUT_CLASSIFICATION	7.063517430781415E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.999542057073871	WITHOUT_CLASSIFICATION	4.5794292612895854E-4	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999860266032	WITHOUT_CLASSIFICATION	1.3973396682701927E-8	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999987242845241	WITHOUT_CLASSIFICATION	1.2757154759050444E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999946288084628	WITHOUT_CLASSIFICATION	5.371191537191696E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9992977632561582	WITHOUT_CLASSIFICATION	7.022367438419283E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999997859114725	WITHOUT_CLASSIFICATION	2.140885275268446E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9942949011302555	WITHOUT_CLASSIFICATION	0.005705098869744523	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9942949011302555	WITHOUT_CLASSIFICATION	0.005705098869744523	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999748406834267	WITHOUT_CLASSIFICATION	2.5159316573355408E-5	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999998456038888	WITHOUT_CLASSIFICATION	1.5439611123683413E-7	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999962246742469	WITHOUT_CLASSIFICATION	3.7753257530214585E-6	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999991670483369	WITHOUT_CLASSIFICATION	8.329516630780954E-7	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9998746528114136	WITHOUT_CLASSIFICATION	1.253471885863137E-4	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999563905352	WITHOUT_CLASSIFICATION	4.360946477895348E-8	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999986346932693	WITHOUT_CLASSIFICATION	1.365306730727356E-6	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9975385979108817	WITHOUT_CLASSIFICATION	0.00246140208911823	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998706541781124	WITHOUT_CLASSIFICATION	1.293458218875743E-4	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9939747674839681	WITHOUT_CLASSIFICATION	0.006025232516031918	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9992428654864931	WITHOUT_CLASSIFICATION	7.571345135069997E-4	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.999999986991042	WITHOUT_CLASSIFICATION	1.3008957944454746E-8	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999994695579183	WITHOUT_CLASSIFICATION	5.304420816145538E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999995335926744	WITHOUT_CLASSIFICATION	4.664073256159731E-7	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9992977632561582	WITHOUT_CLASSIFICATION	7.022367438419283E-4	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999980693322813	WITHOUT_CLASSIFICATION	1.9306677187121324E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999992537952346	WITHOUT_CLASSIFICATION	7.462047653908238E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999992537952346	WITHOUT_CLASSIFICATION	7.462047653908238E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9991313339416975	WITHOUT_CLASSIFICATION	8.686660583023939E-4	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999997859114725	WITHOUT_CLASSIFICATION	2.140885275268446E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999997859114725	WITHOUT_CLASSIFICATION	2.140885275268446E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9942949011302555	WITHOUT_CLASSIFICATION	0.005705098869744523	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999562283120287	WITHOUT_CLASSIFICATION	4.377168797128633E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9995719317680285	WITHOUT_CLASSIFICATION	4.280682319714406E-4	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999993933804602	WITHOUT_CLASSIFICATION	6.066195398595947E-7	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.998612807772153	WITHOUT_CLASSIFICATION	0.0013871922278470142	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999878433607349	WITHOUT_CLASSIFICATION	1.2156639265187621E-5	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999998047186692	WITHOUT_CLASSIFICATION	1.95281330822402E-7	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999938055402877	WITHOUT_CLASSIFICATION	6.19445971219389E-6	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999468973948041	WITHOUT_CLASSIFICATION	5.31026051958458E-5	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999996445328625	WITHOUT_CLASSIFICATION	3.554671374807916E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999980693322813	WITHOUT_CLASSIFICATION	1.9306677187121324E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999992537952346	WITHOUT_CLASSIFICATION	7.462047653908238E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999992537952346	WITHOUT_CLASSIFICATION	7.462047653908238E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9991313339416975	WITHOUT_CLASSIFICATION	8.686660583023939E-4	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9975385979108817	WITHOUT_CLASSIFICATION	0.00246140208911823	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9939747674839681	WITHOUT_CLASSIFICATION	0.006025232516031918	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999949134295391	WITHOUT_CLASSIFICATION	5.086570460954372E-6	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999999687467964	WITHOUT_CLASSIFICATION	3.1253203633759505E-8	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999998164045822	WITHOUT_CLASSIFICATION	1.8359541788749132E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999998164045822	WITHOUT_CLASSIFICATION	1.8359541788749132E-7	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9978023281333138	WITHOUT_CLASSIFICATION	0.002197671866686067	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999998065251013	WITHOUT_CLASSIFICATION	1.934748987114236E-7	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999992056772564	WITHOUT_CLASSIFICATION	7.943227435974495E-7	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999971752604024	WITHOUT_CLASSIFICATION	2.8247395976571927E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999949467901151	WITHOUT_CLASSIFICATION	5.0532098848126265E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999949467901151	WITHOUT_CLASSIFICATION	5.0532098848126265E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999899865990686	WITHOUT_CLASSIFICATION	1.0013400931490341E-5	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999899865990686	WITHOUT_CLASSIFICATION	1.0013400931490341E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999882901914624	WITHOUT_CLASSIFICATION	1.1709808537620285E-5	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999882901914624	WITHOUT_CLASSIFICATION	1.1709808537620285E-5	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999435396947729	WITHOUT_CLASSIFICATION	5.646030522721274E-5	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9998862538668114	WITHOUT_CLASSIFICATION	1.13746133188668E-4	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9874169584511278	WITHOUT_CLASSIFICATION	0.0125830415488723	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999937063363301	WITHOUT_CLASSIFICATION	6.293663669943543E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9882953863348851	WITHOUT_CLASSIFICATION	0.011704613665114997	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999997585972277	WITHOUT_CLASSIFICATION	2.4140277228955305E-7	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999967569402908	WITHOUT_CLASSIFICATION	3.2430597092477175E-6	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9998518915996742	WITHOUT_CLASSIFICATION	1.4810840032588102E-4	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999826714726804	WITHOUT_CLASSIFICATION	1.732852731956291E-5	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999869078543272	WITHOUT_CLASSIFICATION	1.3092145672817876E-5	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.997529581203146	WITHOUT_CLASSIFICATION	0.002470418796853986	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9992647981124829	WITHOUT_CLASSIFICATION	7.352018875171184E-4	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9995646829477219	WITHOUT_CLASSIFICATION	4.353170522781343E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999997194519259	WITHOUT_CLASSIFICATION	2.8054807411096315E-6	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999997194519259	WITHOUT_CLASSIFICATION	2.8054807411096315E-6	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9986892086754339	WITHOUT_CLASSIFICATION	0.001310791324566123	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999998326340176	WITHOUT_CLASSIFICATION	1.6736598238497457E-7	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999319271572455	WITHOUT_CLASSIFICATION	6.807284275449551E-5	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999977154299	WITHOUT_CLASSIFICATION	2.284570084212134E-9	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9997294076569188	WITHOUT_CLASSIFICATION	2.7059234308123405E-4	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999984106412317	WITHOUT_CLASSIFICATION	1.5893587683007794E-6	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999987541027912	WITHOUT_CLASSIFICATION	1.2458972088660175E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999973927240124	WITHOUT_CLASSIFICATION	2.607275987599786E-6	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999590785161	WITHOUT_CLASSIFICATION	4.092148382570103E-8	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999748028808	WITHOUT_CLASSIFICATION	2.5197119154203588E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999988863344997	WITHOUT_CLASSIFICATION	1.1136655002202665E-6	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999269641448023	WITHOUT_CLASSIFICATION	7.303585519763253E-5	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999891118090646	WITHOUT_CLASSIFICATION	1.088819093546505E-5	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9587871071759636	WITHOUT_CLASSIFICATION	0.041212892824036354	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.99741681619458	WITHOUT_CLASSIFICATION	0.0025831838054200446	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999997163532309	WITHOUT_CLASSIFICATION	2.8364676906911546E-7	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999844885500796	WITHOUT_CLASSIFICATION	1.551144992034383E-5	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.999998670727053	WITHOUT_CLASSIFICATION	1.3292729470245652E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999994438580821	WITHOUT_CLASSIFICATION	5.561419177925794E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999994438580821	WITHOUT_CLASSIFICATION	5.561419177925794E-7	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9667100741276066	WITHOUT_CLASSIFICATION	0.0332899258723933	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999789246713587	WITHOUT_CLASSIFICATION	2.107532864132637E-5	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9994783039671729	WITHOUT_CLASSIFICATION	5.216960328271012E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9994783039671729	WITHOUT_CLASSIFICATION	5.216960328271012E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999996732358764	WITHOUT_CLASSIFICATION	3.2676412366145107E-7	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999904889817977	WITHOUT_CLASSIFICATION	9.511018202461291E-6	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998823879933978	WITHOUT_CLASSIFICATION	1.176120066021886E-4	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999848445737416	WITHOUT_CLASSIFICATION	1.5155426258480391E-5	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999694443747064	WITHOUT_CLASSIFICATION	3.0555625293520766E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999980823327843	WITHOUT_CLASSIFICATION	1.9176672157379517E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999980823327843	WITHOUT_CLASSIFICATION	1.9176672157379517E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999953072811094	WITHOUT_CLASSIFICATION	4.6927188906789084E-6	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999685595979728	WITHOUT_CLASSIFICATION	3.144040202722426E-5	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9983549965223604	WITHOUT_CLASSIFICATION	0.0016450034776396203	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999745226646195	WITHOUT_CLASSIFICATION	2.547733538048742E-5	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999789246713587	WITHOUT_CLASSIFICATION	2.107532864132637E-5	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999692383462877	WITHOUT_CLASSIFICATION	3.0761653712321524E-5	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999971872132933	WITHOUT_CLASSIFICATION	2.8127867066469628E-6	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999971872132933	WITHOUT_CLASSIFICATION	2.8127867066469628E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999985414256822	WITHOUT_CLASSIFICATION	1.4585743177953548E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999986648200512	WITHOUT_CLASSIFICATION	1.335179948824073E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999986648200512	WITHOUT_CLASSIFICATION	1.335179948824073E-6	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999861472457148	WITHOUT_CLASSIFICATION	1.385275428534074E-5	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999861472457148	WITHOUT_CLASSIFICATION	1.385275428534074E-5	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999861472457148	WITHOUT_CLASSIFICATION	1.385275428534074E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999986648200512	WITHOUT_CLASSIFICATION	1.335179948824073E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999986648200512	WITHOUT_CLASSIFICATION	1.335179948824073E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999985414256822	WITHOUT_CLASSIFICATION	1.4585743177953548E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999890237505132	WITHOUT_CLASSIFICATION	1.0976249486723313E-5	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999957139837835	WITHOUT_CLASSIFICATION	4.286016216527748E-6	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999983554415278	WITHOUT_CLASSIFICATION	1.6445584720783662E-6	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999907207283215	WITHOUT_CLASSIFICATION	9.279271678492229E-6	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999993776795033	WITHOUT_CLASSIFICATION	6.223204967037788E-7	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9991208881568976	WITHOUT_CLASSIFICATION	8.791118431024529E-4	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999992248559043	WITHOUT_CLASSIFICATION	7.751440957369933E-7	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998476780902279	WITHOUT_CLASSIFICATION	1.5232190977212568E-4	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999988863344997	WITHOUT_CLASSIFICATION	1.1136655002202665E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999986648200512	WITHOUT_CLASSIFICATION	1.335179948824073E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999986648200512	WITHOUT_CLASSIFICATION	1.335179948824073E-6	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.999999997683405	WITHOUT_CLASSIFICATION	2.316594951746161E-9	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999860666782483	WITHOUT_CLASSIFICATION	1.3933321751743968E-5	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999998463364598	WITHOUT_CLASSIFICATION	1.5366354024174833E-7	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999994692521931	WITHOUT_CLASSIFICATION	5.30747806830188E-7	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999913589463248	WITHOUT_CLASSIFICATION	8.641053675125733E-6	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9998300870395058	WITHOUT_CLASSIFICATION	1.6991296049418113E-4	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999518061731	WITHOUT_CLASSIFICATION	4.8193826910265524E-8	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999997493826247	WITHOUT_CLASSIFICATION	2.5061737529170503E-7	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999996144100167	WITHOUT_CLASSIFICATION	3.8558998324926966E-7	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999974692386598	WITHOUT_CLASSIFICATION	2.5307613401505134E-6	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999425139550023	WITHOUT_CLASSIFICATION	5.748604499756805E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999965254091878	WITHOUT_CLASSIFICATION	3.474590812206796E-6	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999458753363104	WITHOUT_CLASSIFICATION	5.4124663689590155E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9995507890995514	WITHOUT_CLASSIFICATION	4.4921090044866633E-4	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999986315688298	WITHOUT_CLASSIFICATION	1.3684311701992E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999714415204135	WITHOUT_CLASSIFICATION	2.855847958646614E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999714415204135	WITHOUT_CLASSIFICATION	2.855847958646614E-5	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999714415204135	WITHOUT_CLASSIFICATION	2.855847958646614E-5	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.999023439440901	WITHOUT_CLASSIFICATION	9.76560559099133E-4	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999249812804	WITHOUT_CLASSIFICATION	7.501871952906639E-8	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999999896713396	WITHOUT_CLASSIFICATION	1.0328660410814943E-7	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9978742222694001	WITHOUT_CLASSIFICATION	0.0021257777305998585	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.999999102449108	WITHOUT_CLASSIFICATION	8.975508921342903E-7	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9998698918031389	WITHOUT_CLASSIFICATION	1.3010819686116873E-4	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999663129105	WITHOUT_CLASSIFICATION	3.368708940543772E-8	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999920764508492	WITHOUT_CLASSIFICATION	7.923549150691207E-6	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999041460754613	WITHOUT_CLASSIFICATION	9.585392453862778E-5	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999976419392235	WITHOUT_CLASSIFICATION	2.358060776488029E-6	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9949307377919553	WITHOUT_CLASSIFICATION	0.005069262208044679	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9977155103715863	WITHOUT_CLASSIFICATION	0.002284489628413598	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999953072811094	WITHOUT_CLASSIFICATION	4.6927188906789084E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999986648200512	WITHOUT_CLASSIFICATION	1.335179948824073E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999986648200512	WITHOUT_CLASSIFICATION	1.335179948824073E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999985414256822	WITHOUT_CLASSIFICATION	1.4585743177953548E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9991208881568976	WITHOUT_CLASSIFICATION	8.791118431024529E-4	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999860666782483	WITHOUT_CLASSIFICATION	1.3933321751743968E-5	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999994692521931	WITHOUT_CLASSIFICATION	5.30747806830188E-7	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9998300870395058	WITHOUT_CLASSIFICATION	1.6991296049418113E-4	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999998463364598	WITHOUT_CLASSIFICATION	1.5366354024174833E-7	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999518061731	WITHOUT_CLASSIFICATION	4.8193826910265524E-8	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999974692386598	WITHOUT_CLASSIFICATION	2.5307613401505134E-6	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999996144100167	WITHOUT_CLASSIFICATION	3.8558998324926966E-7	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999965254091878	WITHOUT_CLASSIFICATION	3.474590812206796E-6	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9578899664053078	WITHOUT_CLASSIFICATION	0.042110033594692224	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9945481488668834	WITHOUT_CLASSIFICATION	0.005451851133116695	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9949140149939059	WITHOUT_CLASSIFICATION	0.005085985006094174	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999995644144074	WITHOUT_CLASSIFICATION	4.355855925696486E-7	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9987909626026598	WITHOUT_CLASSIFICATION	0.0012090373973402185	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999998768687806	WITHOUT_CLASSIFICATION	1.2313121949908054E-7	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9995719245602419	WITHOUT_CLASSIFICATION	4.2807543975802804E-4	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999994569252	WITHOUT_CLASSIFICATION	5.4307477291943E-10	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999990701482485	WITHOUT_CLASSIFICATION	9.298517515157014E-7	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995563585223	WITHOUT_CLASSIFICATION	4.4364147765105205E-7	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999861607198288	WITHOUT_CLASSIFICATION	1.3839280171144315E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999407729048393	WITHOUT_CLASSIFICATION	5.922709516071431E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999940361884719	WITHOUT_CLASSIFICATION	5.9638115280467425E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999781388127943	WITHOUT_CLASSIFICATION	2.1861187205637544E-5	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999987927033702	WITHOUT_CLASSIFICATION	1.2072966298220838E-6	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999973008620322	WITHOUT_CLASSIFICATION	2.6991379678036347E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9959205626463742	WITHOUT_CLASSIFICATION	0.004079437353625778	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999978766724735	WITHOUT_CLASSIFICATION	2.1233275265298417E-6	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999479724460586	WITHOUT_CLASSIFICATION	5.2027553941297294E-5	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999853533297402	WITHOUT_CLASSIFICATION	1.464667025980576E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9973603496773858	WITHOUT_CLASSIFICATION	0.0026396503226141614	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9993777975326334	WITHOUT_CLASSIFICATION	6.222024673665209E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9993777975326334	WITHOUT_CLASSIFICATION	6.222024673665209E-4	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9618702202915005	WITHOUT_CLASSIFICATION	0.03812977970849941	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999977025059171	WITHOUT_CLASSIFICATION	2.2974940829405483E-6	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999758617082212	WITHOUT_CLASSIFICATION	2.413829177888871E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999758617082212	WITHOUT_CLASSIFICATION	2.413829177888871E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999758617082212	WITHOUT_CLASSIFICATION	2.413829177888871E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999807792631816	WITHOUT_CLASSIFICATION	1.922073681840614E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999807792631816	WITHOUT_CLASSIFICATION	1.922073681840614E-5	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999841823728862	WITHOUT_CLASSIFICATION	1.5817627113720614E-5	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9999720451562334	WITHOUT_CLASSIFICATION	2.7954843766582943E-5	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999977025059171	WITHOUT_CLASSIFICATION	2.2974940829405483E-6	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999853728498626	WITHOUT_CLASSIFICATION	1.4627150137479528E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999758617082212	WITHOUT_CLASSIFICATION	2.413829177888871E-5	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999758617082212	WITHOUT_CLASSIFICATION	2.413829177888871E-5	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999807792631816	WITHOUT_CLASSIFICATION	1.922073681840614E-5	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9999720451562334	WITHOUT_CLASSIFICATION	2.7954843766582943E-5	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999931309708524	WITHOUT_CLASSIFICATION	6.869029147606814E-5	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999931309708524	WITHOUT_CLASSIFICATION	6.869029147606814E-5	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999716919025	WITHOUT_CLASSIFICATION	2.830809757474989E-8	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999716919025	WITHOUT_CLASSIFICATION	2.830809757474989E-8	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999138550813299	WITHOUT_CLASSIFICATION	8.614491867004793E-5	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999138550813299	WITHOUT_CLASSIFICATION	8.614491867004793E-5	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999999487847478	WITHOUT_CLASSIFICATION	5.1215252098542675E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999996978362781	WITHOUT_CLASSIFICATION	3.021637220113909E-7	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999996978362781	WITHOUT_CLASSIFICATION	3.021637220113909E-7	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999998251463084	WITHOUT_CLASSIFICATION	1.7485369160133574E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999998251463084	WITHOUT_CLASSIFICATION	1.7485369160133574E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999874432132	WITHOUT_CLASSIFICATION	1.2556786751568603E-8	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999992812320222	WITHOUT_CLASSIFICATION	7.187679777932462E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999992812320222	WITHOUT_CLASSIFICATION	7.187679777932462E-7	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999986382717229	WITHOUT_CLASSIFICATION	1.3617282771773528E-6	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.99999988505592	WITHOUT_CLASSIFICATION	1.1494408002078473E-7	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999997465020802	WITHOUT_CLASSIFICATION	2.534979197809731E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999986382717229	WITHOUT_CLASSIFICATION	1.3617282771773528E-6	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.999999890588317	WITHOUT_CLASSIFICATION	1.0941168316218174E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999981339659302	WITHOUT_CLASSIFICATION	1.8660340697865523E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999981339659302	WITHOUT_CLASSIFICATION	1.8660340697865523E-6	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999981339659302	WITHOUT_CLASSIFICATION	1.8660340697865523E-6	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999929071675159	WITHOUT_CLASSIFICATION	7.092832484099933E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999987896657111	WITHOUT_CLASSIFICATION	1.2103342889481549E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999942473338437	WITHOUT_CLASSIFICATION	5.752666156410259E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999942473338437	WITHOUT_CLASSIFICATION	5.752666156410259E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999968012306608	WITHOUT_CLASSIFICATION	3.198769339294162E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999692724876772	WITHOUT_CLASSIFICATION	3.0727512322788765E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999996378214766	WITHOUT_CLASSIFICATION	3.621785233145882E-7	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999931855202991	WITHOUT_CLASSIFICATION	6.814479700899165E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999949388209146	WITHOUT_CLASSIFICATION	5.06117908538278E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999976953047628	WITHOUT_CLASSIFICATION	2.3046952372868525E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999976953047628	WITHOUT_CLASSIFICATION	2.3046952372868525E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9997943486561836	WITHOUT_CLASSIFICATION	2.056513438165461E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999781303471251	WITHOUT_CLASSIFICATION	2.186965287486418E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999781303471251	WITHOUT_CLASSIFICATION	2.186965287486418E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999981339659302	WITHOUT_CLASSIFICATION	1.8660340697865523E-6	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999987896657111	WITHOUT_CLASSIFICATION	1.2103342889481549E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999942473338437	WITHOUT_CLASSIFICATION	5.752666156410259E-6	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999968012306608	WITHOUT_CLASSIFICATION	3.198769339294162E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9999692724876772	WITHOUT_CLASSIFICATION	3.0727512322788765E-5	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.9999996378214766	WITHOUT_CLASSIFICATION	3.621785233145882E-7	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999931855202991	WITHOUT_CLASSIFICATION	6.814479700899165E-6	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999781303471251	WITHOUT_CLASSIFICATION	2.186965287486418E-5	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999601616287894	WITHOUT_CLASSIFICATION	3.983837121056334E-5	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999037645785555	WITHOUT_CLASSIFICATION	9.623542144453719E-5	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.999986586163961	WITHOUT_CLASSIFICATION	1.341383603902306E-5	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999971359251677	WITHOUT_CLASSIFICATION	2.8640748324082445E-6	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9989332635059611	WITHOUT_CLASSIFICATION	0.0010667364940388857	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999966821019708	WITHOUT_CLASSIFICATION	3.3178980291763764E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999932390237884	WITHOUT_CLASSIFICATION	6.760976211475158E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999932390237884	WITHOUT_CLASSIFICATION	6.760976211475158E-6	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999974096662627	WITHOUT_CLASSIFICATION	2.590333737234766E-6	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999806601944382	WITHOUT_CLASSIFICATION	1.933980556175797E-5	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999536476562679	WITHOUT_CLASSIFICATION	4.6352343731965565E-5	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999990958389878	WITHOUT_CLASSIFICATION	9.041610122029236E-7	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999700548844795	WITHOUT_CLASSIFICATION	2.994511552043294E-5	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999700548844795	WITHOUT_CLASSIFICATION	2.994511552043294E-5	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999639371080529	WITHOUT_CLASSIFICATION	3.6062891947185214E-5	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999826663185496	WITHOUT_CLASSIFICATION	1.733368145031531E-5	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999971058304683	WITHOUT_CLASSIFICATION	2.894169531682124E-6	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999971058304683	WITHOUT_CLASSIFICATION	2.894169531682124E-6	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999994221122861	WITHOUT_CLASSIFICATION	5.778877138786075E-7	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999462058885642	WITHOUT_CLASSIFICATION	5.379411143588008E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999949388209146	WITHOUT_CLASSIFICATION	5.06117908538278E-6	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.999723207407368	WITHOUT_CLASSIFICATION	2.767925926320544E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998418017262	WITHOUT_CLASSIFICATION	1.5819827378899926E-7	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999083707808635	WITHOUT_CLASSIFICATION	9.162921913647921E-5	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999607546317	WITHOUT_CLASSIFICATION	3.9245368219754866E-8	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.999993728028114	WITHOUT_CLASSIFICATION	6.271971885973992E-6	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999999399114015	WITHOUT_CLASSIFICATION	6.008859848182233E-8	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.999999247765596	WITHOUT_CLASSIFICATION	7.522344040487084E-7	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9998951901339239	WITHOUT_CLASSIFICATION	1.0480986607606128E-4	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999759872879209	WITHOUT_CLASSIFICATION	2.401271207909727E-5	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999759872879209	WITHOUT_CLASSIFICATION	2.401271207909727E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999500694509218	WITHOUT_CLASSIFICATION	4.9930549078297184E-5	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999500694509218	WITHOUT_CLASSIFICATION	4.9930549078297184E-5	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999961623392853	WITHOUT_CLASSIFICATION	3.837660714621888E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999976552060664	WITHOUT_CLASSIFICATION	2.344793933534849E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999976552060664	WITHOUT_CLASSIFICATION	2.344793933534849E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999976552060664	WITHOUT_CLASSIFICATION	2.344793933534849E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999966341436	WITHOUT_CLASSIFICATION	3.3658564520547323E-9	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999967263622824	WITHOUT_CLASSIFICATION	3.2736377174983313E-6	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999967263622824	WITHOUT_CLASSIFICATION	3.2736377174983313E-6	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999951354422922	WITHOUT_CLASSIFICATION	4.8645577078115685E-6	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999978709066509	WITHOUT_CLASSIFICATION	2.1290933489951143E-6	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999996179628735	WITHOUT_CLASSIFICATION	3.8203712657225064E-7	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.9999983361502015	WITHOUT_CLASSIFICATION	1.6638497984571018E-6	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9998595492421704	WITHOUT_CLASSIFICATION	1.404507578296444E-4	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9986059067870037	WITHOUT_CLASSIFICATION	0.0013940932129962761	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999999917167974	WITHOUT_CLASSIFICATION	8.283202451288866E-9	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999940361884719	WITHOUT_CLASSIFICATION	5.9638115280467425E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999940361884719	WITHOUT_CLASSIFICATION	5.9638115280467425E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999966341436	WITHOUT_CLASSIFICATION	3.3658564520547323E-9	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999951354422922	WITHOUT_CLASSIFICATION	4.8645577078115685E-6	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999996325294338	WITHOUT_CLASSIFICATION	3.6747056616452835E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.9999978709066509	WITHOUT_CLASSIFICATION	2.1290933489951143E-6	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999996179628735	WITHOUT_CLASSIFICATION	3.8203712657225064E-7	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9993806429144337	WITHOUT_CLASSIFICATION	6.19357085566172E-4	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999985512424873	WITHOUT_CLASSIFICATION	1.4487575127305776E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999910527423491	WITHOUT_CLASSIFICATION	8.947257650868532E-6	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9986174529799346	WITHOUT_CLASSIFICATION	0.0013825470200654047	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999975751609439	WITHOUT_CLASSIFICATION	2.424839056046597E-6	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9994628827026997	WITHOUT_CLASSIFICATION	5.371172973002283E-4	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9989155555196562	WITHOUT_CLASSIFICATION	0.0010844444803439224	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9993806429144337	WITHOUT_CLASSIFICATION	6.19357085566172E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999997049689304	WITHOUT_CLASSIFICATION	2.950310696773702E-7	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999997049689304	WITHOUT_CLASSIFICATION	2.950310696773702E-7	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999329084642646	WITHOUT_CLASSIFICATION	6.709153573541726E-5	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9998506760378281	WITHOUT_CLASSIFICATION	1.4932396217199259E-4	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9996142105797392	WITHOUT_CLASSIFICATION	3.857894202607803E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9977588030648521	WITHOUT_CLASSIFICATION	0.002241196935147965	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999494596632	WITHOUT_CLASSIFICATION	5.054033673318241E-8	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9991692387662182	WITHOUT_CLASSIFICATION	8.307612337817593E-4	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999943892482597	WITHOUT_CLASSIFICATION	5.610751740234444E-6	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.999684739080245	WITHOUT_CLASSIFICATION	3.1526091975503037E-4	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9852449119056732	WITHOUT_CLASSIFICATION	0.014755088094326792	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999999656201118	WITHOUT_CLASSIFICATION	3.4379888147083385E-8	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999981772508152	WITHOUT_CLASSIFICATION	1.8227491847962335E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9977588030648521	WITHOUT_CLASSIFICATION	0.002241196935147965	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999494596632	WITHOUT_CLASSIFICATION	5.054033673318241E-8	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999623784303392	WITHOUT_CLASSIFICATION	3.762156966082409E-5	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999999744694931	WITHOUT_CLASSIFICATION	2.553050692752935E-8	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9990117381245266	WITHOUT_CLASSIFICATION	9.882618754734765E-4	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999973767898608	WITHOUT_CLASSIFICATION	2.6232101392734186E-6	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999959957797	WITHOUT_CLASSIFICATION	4.004220387375322E-9	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.999997574789793	WITHOUT_CLASSIFICATION	2.425210207001032E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9995237029755379	WITHOUT_CLASSIFICATION	4.7629702446209325E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999988660375113	WITHOUT_CLASSIFICATION	1.1339624887022974E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997254201571	WITHOUT_CLASSIFICATION	2.745798428858592E-7	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999206862235267	WITHOUT_CLASSIFICATION	7.931377647327925E-5	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999823553376528	WITHOUT_CLASSIFICATION	1.7644662347208383E-5	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9996985750706082	WITHOUT_CLASSIFICATION	3.0142492939177654E-4	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.999973771349634	WITHOUT_CLASSIFICATION	2.6228650365956243E-5	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.999999817857166	WITHOUT_CLASSIFICATION	1.8214283391070835E-7	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.999389724299845	DESIGN	6.102757001550195E-4	WITHOUT_CLASSIFICATION
// set self to the class	WITHOUT_CLASSIFICATION	0.999997063089237	WITHOUT_CLASSIFICATION	2.9369107630198942E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999963890770388	WITHOUT_CLASSIFICATION	3.61092296125686E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9999959410177119	WITHOUT_CLASSIFICATION	4.0589822879894076E-6	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999930295341565	WITHOUT_CLASSIFICATION	6.9704658435490115E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9977897858293344	WITHOUT_CLASSIFICATION	0.0022102141706655623	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999963890770388	WITHOUT_CLASSIFICATION	3.61092296125686E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9999959410177119	WITHOUT_CLASSIFICATION	4.0589822879894076E-6	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999930295341565	WITHOUT_CLASSIFICATION	6.9704658435490115E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999993766723385	WITHOUT_CLASSIFICATION	6.233276614986549E-7	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999787713862028	WITHOUT_CLASSIFICATION	2.1228613797140116E-5	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999992554824455	WITHOUT_CLASSIFICATION	7.445175546160842E-7	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999678579648227	WITHOUT_CLASSIFICATION	3.21420351772839E-5	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9920824927604305	WITHOUT_CLASSIFICATION	0.00791750723956947	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999630319427393	WITHOUT_CLASSIFICATION	3.6968057260798183E-5	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999716495665241	WITHOUT_CLASSIFICATION	2.8350433476059566E-5	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.999923495349448	WITHOUT_CLASSIFICATION	7.650465055195182E-5	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9998641172274687	WITHOUT_CLASSIFICATION	1.358827725312463E-4	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999863173379779	WITHOUT_CLASSIFICATION	1.36826620220052E-5	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.8465679635053318	DESIGN	0.1534320364946682	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.999908246204013	WITHOUT_CLASSIFICATION	9.175379598698123E-5	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999868623120497	WITHOUT_CLASSIFICATION	1.3137687950166231E-5	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999978338384766	WITHOUT_CLASSIFICATION	2.1661615233013726E-6	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999998863585317	WITHOUT_CLASSIFICATION	1.1364146825640824E-7	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9998417175785468	WITHOUT_CLASSIFICATION	1.582824214532865E-4	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999786135873576	WITHOUT_CLASSIFICATION	2.1386412642446188E-5	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.99998869280632	WITHOUT_CLASSIFICATION	1.1307193680163606E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999979311187551	WITHOUT_CLASSIFICATION	2.0688812447993077E-6	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999992831909409	WITHOUT_CLASSIFICATION	7.168090592242875E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999988476846888	WITHOUT_CLASSIFICATION	1.1523153112077604E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999965997959137	WITHOUT_CLASSIFICATION	3.400204086297656E-5	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999965997959137	WITHOUT_CLASSIFICATION	3.400204086297656E-5	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999954436128287	WITHOUT_CLASSIFICATION	4.556387171293002E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999954436128287	WITHOUT_CLASSIFICATION	4.556387171293002E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999985417677922	WITHOUT_CLASSIFICATION	1.458232207700226E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999985417677922	WITHOUT_CLASSIFICATION	1.458232207700226E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999540222865475	WITHOUT_CLASSIFICATION	4.5977713452536514E-5	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999898565673748	WITHOUT_CLASSIFICATION	1.0143432625111516E-5	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999957715844956	WITHOUT_CLASSIFICATION	4.228415504408761E-6	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999999863701725	WITHOUT_CLASSIFICATION	1.3629827441210285E-8	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999901691303	WITHOUT_CLASSIFICATION	9.830869740285263E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999963734985	WITHOUT_CLASSIFICATION	3.626501460510071E-9	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999924610317	WITHOUT_CLASSIFICATION	7.538968458179196E-9	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.999999875694441	WITHOUT_CLASSIFICATION	1.2430555892526058E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999940361884719	WITHOUT_CLASSIFICATION	5.9638115280467425E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999540222865475	WITHOUT_CLASSIFICATION	4.5977713452536514E-5	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999898565673748	WITHOUT_CLASSIFICATION	1.0143432625111516E-5	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999957715844956	WITHOUT_CLASSIFICATION	4.228415504408761E-6	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999901691303	WITHOUT_CLASSIFICATION	9.830869740285263E-9	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999963734985	WITHOUT_CLASSIFICATION	3.626501460510071E-9	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999998705501579	WITHOUT_CLASSIFICATION	1.294498421096672E-6	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999999395505259	WITHOUT_CLASSIFICATION	6.044947410753095E-8	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997755591120656	WITHOUT_CLASSIFICATION	2.244408879344417E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997755591120656	WITHOUT_CLASSIFICATION	2.244408879344417E-4	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998564448877616	WITHOUT_CLASSIFICATION	1.4355511223840232E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999369081800448	WITHOUT_CLASSIFICATION	6.3091819955224E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996563090720871	WITHOUT_CLASSIFICATION	3.4369092791283615E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999976439640309	WITHOUT_CLASSIFICATION	2.3560359690498757E-6	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999976439640309	WITHOUT_CLASSIFICATION	2.3560359690498757E-6	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999983184660265	WITHOUT_CLASSIFICATION	1.6815339734954683E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999888570281588	WITHOUT_CLASSIFICATION	1.1142971841153856E-5	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999741296883772	WITHOUT_CLASSIFICATION	2.587031162286366E-5	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999882546130735	WITHOUT_CLASSIFICATION	1.1745386926612453E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9998806233011625	WITHOUT_CLASSIFICATION	1.1937669883752179E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999781388127943	WITHOUT_CLASSIFICATION	2.1861187205637544E-5	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999987927033702	WITHOUT_CLASSIFICATION	1.2072966298220838E-6	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999973008620322	WITHOUT_CLASSIFICATION	2.6991379678036347E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9959205626463742	WITHOUT_CLASSIFICATION	0.004079437353625778	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999853533297402	WITHOUT_CLASSIFICATION	1.464667025980576E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9973603496773858	WITHOUT_CLASSIFICATION	0.0026396503226141614	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999983184660265	WITHOUT_CLASSIFICATION	1.6815339734954683E-6	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999888570281588	WITHOUT_CLASSIFICATION	1.1142971841153856E-5	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999882546130735	WITHOUT_CLASSIFICATION	1.1745386926612453E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998326398396589	WITHOUT_CLASSIFICATION	1.6736016034109026E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996563090720871	WITHOUT_CLASSIFICATION	3.4369092791283615E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996563090720871	WITHOUT_CLASSIFICATION	3.4369092791283615E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999981772508152	WITHOUT_CLASSIFICATION	1.8227491847962335E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999981772508152	WITHOUT_CLASSIFICATION	1.8227491847962335E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9410358961553594	WITHOUT_CLASSIFICATION	0.058964103844640625	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9410358961553594	WITHOUT_CLASSIFICATION	0.058964103844640625	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999892699318242	WITHOUT_CLASSIFICATION	1.0730068175761568E-5	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9998192992662849	WITHOUT_CLASSIFICATION	1.8070073371501816E-4	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999896330352778	WITHOUT_CLASSIFICATION	1.036696472218673E-5	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9997434320484314	WITHOUT_CLASSIFICATION	2.5656795156862026E-4	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9984907602704026	WITHOUT_CLASSIFICATION	0.0015092397295973735	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999680971934539	WITHOUT_CLASSIFICATION	3.190280654613419E-5	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999557944710955	WITHOUT_CLASSIFICATION	4.420552890439655E-5	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999992451798252	WITHOUT_CLASSIFICATION	7.548201748207273E-7	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999990908335715	WITHOUT_CLASSIFICATION	9.091664284862606E-7	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999673285934063	WITHOUT_CLASSIFICATION	3.267140659378087E-5	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.999994459635263	WITHOUT_CLASSIFICATION	5.540364736976937E-6	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999919033174213	WITHOUT_CLASSIFICATION	8.096682578671058E-6	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9998986392211954	WITHOUT_CLASSIFICATION	1.0136077880462861E-4	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999831995033626	WITHOUT_CLASSIFICATION	1.6800496637495867E-5	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999998911522167	WITHOUT_CLASSIFICATION	1.0884778339783239E-7	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999796449903002	WITHOUT_CLASSIFICATION	2.035500969970106E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999676169425035	WITHOUT_CLASSIFICATION	3.238305749654109E-5	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999970101535676	WITHOUT_CLASSIFICATION	2.989846432379288E-6	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9995494380244753	WITHOUT_CLASSIFICATION	4.505619755246813E-4	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999987927033702	WITHOUT_CLASSIFICATION	1.2072966298220838E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9959205626463742	WITHOUT_CLASSIFICATION	0.004079437353625778	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9993777975326334	WITHOUT_CLASSIFICATION	6.222024673665209E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999942473338437	WITHOUT_CLASSIFICATION	5.752666156410259E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999942473338437	WITHOUT_CLASSIFICATION	5.752666156410259E-6	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998326398396589	WITHOUT_CLASSIFICATION	1.6736016034109026E-4	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996563090720871	WITHOUT_CLASSIFICATION	3.4369092791283615E-4	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999981772508152	WITHOUT_CLASSIFICATION	1.8227491847962335E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9410358961553594	WITHOUT_CLASSIFICATION	0.058964103844640625	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.541700301878534	DESIGN	0.4582996981214658	WITHOUT_CLASSIFICATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.7948400648044418	WITHOUT_CLASSIFICATION	0.20515993519555825	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999958533895336	WITHOUT_CLASSIFICATION	4.1466104663718135E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9939216233614653	WITHOUT_CLASSIFICATION	0.006078376638534696	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9891249150480297	WITHOUT_CLASSIFICATION	0.010875084951970237	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9891249150480297	WITHOUT_CLASSIFICATION	0.010875084951970237	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.999693226892778	WITHOUT_CLASSIFICATION	3.06773107222023E-4	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999955923219	WITHOUT_CLASSIFICATION	4.40767814788141E-9	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999997853469225	WITHOUT_CLASSIFICATION	2.146530775009586E-6	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999999928098572	WITHOUT_CLASSIFICATION	7.190142850171403E-9	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999993455424937	WITHOUT_CLASSIFICATION	6.544575062385856E-7	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999993455424937	WITHOUT_CLASSIFICATION	6.544575062385856E-7	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999496629572713	WITHOUT_CLASSIFICATION	5.0337042728831225E-5	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999979836067991	WITHOUT_CLASSIFICATION	2.0163932009318004E-6	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.999999988675402	WITHOUT_CLASSIFICATION	1.1324598020463732E-8	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9998555692218675	WITHOUT_CLASSIFICATION	1.4443077813252502E-4	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999911945263515	WITHOUT_CLASSIFICATION	8.80547364851095E-6	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999973917230343	WITHOUT_CLASSIFICATION	2.608276965760536E-6	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999982936149361	WITHOUT_CLASSIFICATION	1.7063850639137874E-6	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999847636422	WITHOUT_CLASSIFICATION	1.523635787633697E-8	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9995935534036149	WITHOUT_CLASSIFICATION	4.064465963850968E-4	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.8930997399440018	DESIGN	0.10690026005599809	WITHOUT_CLASSIFICATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9665721385213373	WITHOUT_CLASSIFICATION	0.033427861478662765	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9980571120591923	WITHOUT_CLASSIFICATION	0.0019428879408075284	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9996704002425866	WITHOUT_CLASSIFICATION	3.2959975741345577E-4	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.5629522109937709	DESIGN	0.43704778900622904	WITHOUT_CLASSIFICATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999838408338304	WITHOUT_CLASSIFICATION	1.61591661695894E-5	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999869987355429	WITHOUT_CLASSIFICATION	1.300126445707593E-5	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999937434620363	WITHOUT_CLASSIFICATION	6.256537963668427E-6	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999810224800411	WITHOUT_CLASSIFICATION	1.8977519958855023E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999970618547659	WITHOUT_CLASSIFICATION	2.938145234071166E-6	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999980108283513	WITHOUT_CLASSIFICATION	1.9891716487102494E-6	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.99997555584336	WITHOUT_CLASSIFICATION	2.4444156639992408E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999012656772428	WITHOUT_CLASSIFICATION	9.87343227571976E-5	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9999012656772428	WITHOUT_CLASSIFICATION	9.87343227571976E-5	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999970758329437	WITHOUT_CLASSIFICATION	2.9241670562348863E-6	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999454319755288	WITHOUT_CLASSIFICATION	5.456802447112875E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999973927240124	WITHOUT_CLASSIFICATION	2.607275987599786E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999973927240124	WITHOUT_CLASSIFICATION	2.607275987599786E-6	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9984223594738951	DESIGN	0.0015776405261049631	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999941721404081	WITHOUT_CLASSIFICATION	5.827859591958136E-6	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999975542555729	WITHOUT_CLASSIFICATION	2.4457444271040233E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999854078203295	WITHOUT_CLASSIFICATION	1.4592179670398492E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999854078203295	WITHOUT_CLASSIFICATION	1.4592179670398492E-5	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.999433690365874	WITHOUT_CLASSIFICATION	5.663096341259325E-4	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999744759439	WITHOUT_CLASSIFICATION	2.552405614421608E-8	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999998026968056	WITHOUT_CLASSIFICATION	1.9730319441105518E-7	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.999997680042488	WITHOUT_CLASSIFICATION	2.3199575119697587E-6	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999838316886026	WITHOUT_CLASSIFICATION	1.6168311397367014E-5	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999528998993902	WITHOUT_CLASSIFICATION	4.710010060982149E-5	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998709288515177	WITHOUT_CLASSIFICATION	1.290711484822138E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9995669531691848	WITHOUT_CLASSIFICATION	4.3304683081522616E-4	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999987175254572	WITHOUT_CLASSIFICATION	1.2824745428855308E-6	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999570083736877	WITHOUT_CLASSIFICATION	4.29916263122945E-5	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.999999931079922	WITHOUT_CLASSIFICATION	6.892007790816095E-8	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9998889741850815	WITHOUT_CLASSIFICATION	1.1102581491851738E-4	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.9999947086426485	WITHOUT_CLASSIFICATION	5.29135735146733E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999034641779844	WITHOUT_CLASSIFICATION	9.653582201551125E-5	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.724290564636973	DESIGN	0.275709435363027	WITHOUT_CLASSIFICATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999536845755651	WITHOUT_CLASSIFICATION	4.6315424434804766E-5	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999978934557	WITHOUT_CLASSIFICATION	2.1065443567869927E-9	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999998600283796	WITHOUT_CLASSIFICATION	1.3997162039816248E-7	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999950327566474	WITHOUT_CLASSIFICATION	4.967243352659257E-6	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999752420189824	WITHOUT_CLASSIFICATION	2.475798101759816E-5	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999388595559862	WITHOUT_CLASSIFICATION	6.11404440137799E-5	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999972109728259	WITHOUT_CLASSIFICATION	2.789027174185612E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9993590464925595	WITHOUT_CLASSIFICATION	6.409535074406208E-4	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9997765117814662	WITHOUT_CLASSIFICATION	2.2348821853382042E-4	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999995347041124	WITHOUT_CLASSIFICATION	4.652958876389752E-7	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999960671319039	WITHOUT_CLASSIFICATION	3.9328680960023424E-6	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9995987775246838	WITHOUT_CLASSIFICATION	4.0122247531612583E-4	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999970950110855	WITHOUT_CLASSIFICATION	2.904988914414644E-6	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999998224767846	WITHOUT_CLASSIFICATION	1.775232154232356E-7	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999997810403698	WITHOUT_CLASSIFICATION	2.1895963022946544E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999969037980536	WITHOUT_CLASSIFICATION	3.0962019464252543E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999034641779844	WITHOUT_CLASSIFICATION	9.653582201551125E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999970950110855	WITHOUT_CLASSIFICATION	2.904988914414644E-6	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999998224767846	WITHOUT_CLASSIFICATION	1.775232154232356E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999969037980536	WITHOUT_CLASSIFICATION	3.0962019464252543E-6	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999901351265922	WITHOUT_CLASSIFICATION	9.864873407919206E-6	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999935033388851	WITHOUT_CLASSIFICATION	6.496661114787139E-6	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.9999862233552593	WITHOUT_CLASSIFICATION	1.3776644740718638E-5	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999889537342	WITHOUT_CLASSIFICATION	1.1046265809488897E-8	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999982242408152	WITHOUT_CLASSIFICATION	1.7757591846938466E-6	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999990390673842	WITHOUT_CLASSIFICATION	9.609326157645303E-7	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999922759159401	WITHOUT_CLASSIFICATION	7.724084059972876E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.9999995913145597	WITHOUT_CLASSIFICATION	4.086854402449656E-7	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999983527911644	WITHOUT_CLASSIFICATION	1.6472088355230395E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9927844149593394	WITHOUT_CLASSIFICATION	0.00721558504066048	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999999390747752	WITHOUT_CLASSIFICATION	6.092522479843103E-7	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999999390747752	WITHOUT_CLASSIFICATION	6.092522479843103E-7	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999958960792666	WITHOUT_CLASSIFICATION	4.103920733357152E-6	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999998174153114	WITHOUT_CLASSIFICATION	1.8258468853529433E-7	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999813981385	WITHOUT_CLASSIFICATION	1.8601861451627438E-8	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999856600704183	WITHOUT_CLASSIFICATION	1.4339929581596815E-5	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999046572428752	WITHOUT_CLASSIFICATION	9.534275712473591E-5	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999814795462924	WITHOUT_CLASSIFICATION	1.852045370766068E-5	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999996878048396	WITHOUT_CLASSIFICATION	3.121951603478E-7	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9976251793820177	WITHOUT_CLASSIFICATION	0.002374820617982408	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999997715153265	WITHOUT_CLASSIFICATION	2.2848467357244234E-7	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9153352656470889	WITHOUT_CLASSIFICATION	0.08466473435291104	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9997769663712408	WITHOUT_CLASSIFICATION	2.230336287592816E-4	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9702011348374489	WITHOUT_CLASSIFICATION	0.029798865162551175	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999997150962944	WITHOUT_CLASSIFICATION	2.849037056518784E-7	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999955750436194	WITHOUT_CLASSIFICATION	4.424956380759134E-6	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999985599643115	WITHOUT_CLASSIFICATION	1.4400356885445927E-6	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999245054924834	WITHOUT_CLASSIFICATION	7.549450751666492E-5	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999959928960592	WITHOUT_CLASSIFICATION	4.007103940826841E-6	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.9999946755425165	WITHOUT_CLASSIFICATION	5.324457483505279E-6	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9998964538018251	WITHOUT_CLASSIFICATION	1.0354619817486259E-4	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999821467341202	WITHOUT_CLASSIFICATION	1.7853265879741895E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999979951925797	WITHOUT_CLASSIFICATION	2.0048074203791934E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.9999773342353585	WITHOUT_CLASSIFICATION	2.266576464149733E-5	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999997451350204	WITHOUT_CLASSIFICATION	2.5486497952180994E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999582525518625	WITHOUT_CLASSIFICATION	4.17474481373857E-5	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9998756748802664	WITHOUT_CLASSIFICATION	1.243251197335644E-4	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999998026870468	WITHOUT_CLASSIFICATION	1.9731295325235812E-7	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9989916093948736	WITHOUT_CLASSIFICATION	0.0010083906051263666	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9958807581476892	WITHOUT_CLASSIFICATION	0.0041192418523107914	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9999667401207476	WITHOUT_CLASSIFICATION	3.3259879252527036E-5	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999784162391854	WITHOUT_CLASSIFICATION	2.1583760814535494E-5	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999885328356635	WITHOUT_CLASSIFICATION	1.1467164336415307E-5	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999988846202071	WITHOUT_CLASSIFICATION	1.115379792822814E-6	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999687568853668	WITHOUT_CLASSIFICATION	3.124311463314371E-5	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.978528879758947	WITHOUT_CLASSIFICATION	0.02147112024105304	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999815643714963	WITHOUT_CLASSIFICATION	1.8435628503757213E-5	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999996805326705	WITHOUT_CLASSIFICATION	3.1946732945741996E-7	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999994797526439	WITHOUT_CLASSIFICATION	5.202473560253611E-7	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9998848466561807	WITHOUT_CLASSIFICATION	1.1515334381928431E-4	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9989530355766402	WITHOUT_CLASSIFICATION	0.0010469644233598793	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9998438458435822	WITHOUT_CLASSIFICATION	1.5615415641783968E-4	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999583965501759	WITHOUT_CLASSIFICATION	4.1603449824071195E-5	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.966471492919075	WITHOUT_CLASSIFICATION	0.033528507080925085	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9999978968108224	WITHOUT_CLASSIFICATION	2.103189177600367E-6	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9994885112807531	WITHOUT_CLASSIFICATION	5.114887192468039E-4	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999994582992527	WITHOUT_CLASSIFICATION	5.41700747234512E-7	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999981588981651	WITHOUT_CLASSIFICATION	1.8411018349079993E-6	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9971957704497317	WITHOUT_CLASSIFICATION	0.0028042295502681306	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999699692357634	WITHOUT_CLASSIFICATION	3.0030764236599455E-5	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9936245206889996	WITHOUT_CLASSIFICATION	0.006375479311000267	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999871865457591	WITHOUT_CLASSIFICATION	1.2813454240964324E-5	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999438994072495	WITHOUT_CLASSIFICATION	5.610059275049498E-5	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999548666536316	WITHOUT_CLASSIFICATION	4.513334636824527E-5	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.991649921000063	WITHOUT_CLASSIFICATION	0.008350078999937031	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.999995115930235	WITHOUT_CLASSIFICATION	4.8840697649768615E-6	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9890279375654119	WITHOUT_CLASSIFICATION	0.010972062434588136	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999984912174749	WITHOUT_CLASSIFICATION	1.508782525054046E-6	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999675199009929	WITHOUT_CLASSIFICATION	3.2480099007099395E-5	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999949658531456	WITHOUT_CLASSIFICATION	5.0341468543723105E-6	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.7463607094838115	WITHOUT_CLASSIFICATION	0.25363929051618855	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998609053358136	WITHOUT_CLASSIFICATION	1.3909466418638716E-4	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998609053358136	WITHOUT_CLASSIFICATION	1.3909466418638716E-4	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999571485197897	WITHOUT_CLASSIFICATION	4.2851480210411624E-5	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999288024638032	WITHOUT_CLASSIFICATION	7.119753619676376E-5	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999956833982593	WITHOUT_CLASSIFICATION	4.316601740650842E-6	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999935734333321	WITHOUT_CLASSIFICATION	6.42656666790652E-6	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999998171358617	WITHOUT_CLASSIFICATION	1.8286413834906488E-7	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.999755782800608	WITHOUT_CLASSIFICATION	2.442171993920804E-4	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.999983997580859	WITHOUT_CLASSIFICATION	1.600241914090788E-5	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9995963316834354	WITHOUT_CLASSIFICATION	4.036683165646341E-4	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999714170931603	WITHOUT_CLASSIFICATION	2.8582906839643446E-5	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9997490927376205	WITHOUT_CLASSIFICATION	2.50907262379501E-4	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999918220427974	WITHOUT_CLASSIFICATION	8.177957202610887E-6	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.99999646927682	WITHOUT_CLASSIFICATION	3.53072318013974E-6	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999979619644616	WITHOUT_CLASSIFICATION	2.038035538386572E-6	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9998927066340536	WITHOUT_CLASSIFICATION	1.072933659464418E-4	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9995962774330891	WITHOUT_CLASSIFICATION	4.0372256691083573E-4	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999993879497424	WITHOUT_CLASSIFICATION	6.120502576924924E-7	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.99999842304417	WITHOUT_CLASSIFICATION	1.576955829994826E-6	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999869753736375	WITHOUT_CLASSIFICATION	1.3024626362616069E-5	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999852136830517	WITHOUT_CLASSIFICATION	1.4786316948269857E-5	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999974298409466	WITHOUT_CLASSIFICATION	2.570159053290561E-6	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999991357230242	WITHOUT_CLASSIFICATION	8.642769757952271E-7	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9972227099998615	WITHOUT_CLASSIFICATION	0.0027772900001385072	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999907446909008	WITHOUT_CLASSIFICATION	9.255309099196403E-6	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9992882320657851	WITHOUT_CLASSIFICATION	7.117679342147705E-4	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999947209315503	WITHOUT_CLASSIFICATION	5.279068449745342E-6	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.999959774749862	WITHOUT_CLASSIFICATION	4.022525013791871E-5	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999281081229631	WITHOUT_CLASSIFICATION	7.189187703692799E-5	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999997218046869	WITHOUT_CLASSIFICATION	2.7819531309074876E-7	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.999970353071009	WITHOUT_CLASSIFICATION	2.9646928990933087E-5	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9988853508498298	WITHOUT_CLASSIFICATION	0.00111464915017032	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9985641153167577	WITHOUT_CLASSIFICATION	0.0014358846832423621	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999997448313177	WITHOUT_CLASSIFICATION	2.5516868236042264E-7	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999380475817453	WITHOUT_CLASSIFICATION	6.1952418254691E-5	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9997006525962937	WITHOUT_CLASSIFICATION	2.9934740370639366E-4	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999380475817453	WITHOUT_CLASSIFICATION	6.1952418254691E-5	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9992689580495874	WITHOUT_CLASSIFICATION	7.310419504125773E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999936019372159	WITHOUT_CLASSIFICATION	6.398062784187015E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999936019372159	WITHOUT_CLASSIFICATION	6.398062784187015E-6	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999936019372159	WITHOUT_CLASSIFICATION	6.398062784187015E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999999987865121	WITHOUT_CLASSIFICATION	1.2134878917006756E-8	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999999987865121	WITHOUT_CLASSIFICATION	1.2134878917006756E-8	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999997947840084	WITHOUT_CLASSIFICATION	2.0521599157813476E-7	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9965561475107183	WITHOUT_CLASSIFICATION	0.00344385248928166	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999945870987	WITHOUT_CLASSIFICATION	5.41290133458296E-9	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9998746869839649	WITHOUT_CLASSIFICATION	1.2531301603510906E-4	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999991073930825	WITHOUT_CLASSIFICATION	8.926069174009526E-7	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9988297410922161	WITHOUT_CLASSIFICATION	0.0011702589077839216	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9995173228498888	WITHOUT_CLASSIFICATION	4.826771501111431E-4	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999982034410674	WITHOUT_CLASSIFICATION	1.7965589325531375E-6	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9998817296611084	WITHOUT_CLASSIFICATION	1.1827033889155055E-4	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999966375510413	WITHOUT_CLASSIFICATION	3.3624489587115616E-6	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999997656050628	WITHOUT_CLASSIFICATION	2.3439493714622643E-7	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999306366994142	WITHOUT_CLASSIFICATION	6.936330058576024E-5	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999802005371236	WITHOUT_CLASSIFICATION	1.9799462876489082E-5	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999882185183133	WITHOUT_CLASSIFICATION	1.1781481686734927E-5	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999976644986657	WITHOUT_CLASSIFICATION	2.335501334229507E-6	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999997414346684	WITHOUT_CLASSIFICATION	2.585653315450341E-7	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.999998191835185	WITHOUT_CLASSIFICATION	1.8081648149857813E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999904822655492	WITHOUT_CLASSIFICATION	9.517734450751895E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.9999904822655492	WITHOUT_CLASSIFICATION	9.517734450751895E-6	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999978460154212	WITHOUT_CLASSIFICATION	2.153984578823789E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999993268733334	WITHOUT_CLASSIFICATION	6.731266666333176E-7	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.9999993268733334	WITHOUT_CLASSIFICATION	6.731266666333176E-7	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999944060713988	WITHOUT_CLASSIFICATION	5.593928601224545E-6	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999961761012344	WITHOUT_CLASSIFICATION	3.823898765700128E-6	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999964484297399	WITHOUT_CLASSIFICATION	3.5515702602209957E-6	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999884042311822	WITHOUT_CLASSIFICATION	1.1595768817798021E-5	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999997299561411	WITHOUT_CLASSIFICATION	2.7004385891283515E-7	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999740746346933	WITHOUT_CLASSIFICATION	2.5925365306565254E-5	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.9999990685432498	WITHOUT_CLASSIFICATION	9.31456750138912E-7	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9926912635699134	WITHOUT_CLASSIFICATION	0.007308736430086515	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999107697776	WITHOUT_CLASSIFICATION	8.923022239659627E-8	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9988258800596049	WITHOUT_CLASSIFICATION	0.0011741199403950554	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9998794823244579	WITHOUT_CLASSIFICATION	1.205176755420392E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999679417212284	WITHOUT_CLASSIFICATION	3.205827877160007E-5	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999821344564264	WITHOUT_CLASSIFICATION	1.7865543573659546E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999999978650453	WITHOUT_CLASSIFICATION	2.134954703953153E-8	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999982034410674	WITHOUT_CLASSIFICATION	1.7965589325531375E-6	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999286084854588	WITHOUT_CLASSIFICATION	7.139151454107607E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999724664079	WITHOUT_CLASSIFICATION	2.7533592117698907E-8	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999917595999174	WITHOUT_CLASSIFICATION	8.2404000826871E-6	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999917595999174	WITHOUT_CLASSIFICATION	8.2404000826871E-6	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999985254745594	WITHOUT_CLASSIFICATION	1.474525440706404E-6	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999901964140435	WITHOUT_CLASSIFICATION	9.803585956392496E-6	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999989997811255	WITHOUT_CLASSIFICATION	1.0002188745966467E-6	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.999998764413466	WITHOUT_CLASSIFICATION	1.2355865340574116E-6	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999915818385235	WITHOUT_CLASSIFICATION	8.418161476477585E-6	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9997696251090362	WITHOUT_CLASSIFICATION	2.303748909638291E-4	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999998958265445	WITHOUT_CLASSIFICATION	1.0417345549825626E-7	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999932934145543	WITHOUT_CLASSIFICATION	6.7065854457016515E-6	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9985235890729933	WITHOUT_CLASSIFICATION	0.0014764109270066713	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999861968071646	WITHOUT_CLASSIFICATION	1.380319283530889E-5	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999669142683035	WITHOUT_CLASSIFICATION	3.308573169648407E-5	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999978149655961	WITHOUT_CLASSIFICATION	2.1850344038266764E-6	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9602452799655273	WITHOUT_CLASSIFICATION	0.03975472003447261	DESIGN
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9997935964303118	WITHOUT_CLASSIFICATION	2.0640356968823414E-4	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999780191731292	WITHOUT_CLASSIFICATION	2.198082687074517E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999997427531867	WITHOUT_CLASSIFICATION	2.572468132867883E-7	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999997643874825	WITHOUT_CLASSIFICATION	2.3561251751647458E-7	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999953831152462	WITHOUT_CLASSIFICATION	4.616884753814369E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999437868051957	WITHOUT_CLASSIFICATION	5.6213194804248116E-5	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999992775030953	WITHOUT_CLASSIFICATION	7.224969047194674E-7	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999996472124419	WITHOUT_CLASSIFICATION	3.527875580694274E-7	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999721851653673	WITHOUT_CLASSIFICATION	2.7814834632709362E-5	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999994205638099	WITHOUT_CLASSIFICATION	5.794361902336062E-7	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999957746661	WITHOUT_CLASSIFICATION	4.225333860137283E-9	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999746144374959	WITHOUT_CLASSIFICATION	2.538556250408347E-5	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.99997714609568	WITHOUT_CLASSIFICATION	2.2853904320026282E-5	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999982859721374	WITHOUT_CLASSIFICATION	1.7140278625910038E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9997223097783985	WITHOUT_CLASSIFICATION	2.776902216015349E-4	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999162959487341	WITHOUT_CLASSIFICATION	8.370405126587751E-5	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999472068252112	WITHOUT_CLASSIFICATION	5.279317478869906E-5	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9989347647940661	WITHOUT_CLASSIFICATION	0.0010652352059339256	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999994082289784	WITHOUT_CLASSIFICATION	5.917710215942254E-6	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999937699256557	WITHOUT_CLASSIFICATION	6.2300743442509496E-6	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9998611417358335	WITHOUT_CLASSIFICATION	1.3885826416640897E-4	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999996453564726	WITHOUT_CLASSIFICATION	3.5464352733643994E-7	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.9999993900810629	WITHOUT_CLASSIFICATION	6.09918937056324E-7	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9997223097783985	WITHOUT_CLASSIFICATION	2.776902216015349E-4	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999950729090482	WITHOUT_CLASSIFICATION	4.927090951736237E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999996453564726	WITHOUT_CLASSIFICATION	3.5464352733643994E-7	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9985612704196114	WITHOUT_CLASSIFICATION	0.0014387295803885657	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999997229129046	WITHOUT_CLASSIFICATION	2.7708709529458445E-7	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999998518550819	WITHOUT_CLASSIFICATION	1.4814491805484226E-7	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999979358747464	WITHOUT_CLASSIFICATION	2.064125253542031E-6	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999961736788122	WITHOUT_CLASSIFICATION	3.826321187877384E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999912801016306	WITHOUT_CLASSIFICATION	8.719898369352766E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999912801016306	WITHOUT_CLASSIFICATION	8.719898369352766E-6	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9995935867916141	WITHOUT_CLASSIFICATION	4.0641320838584444E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999998731550208	WITHOUT_CLASSIFICATION	1.2684497916581154E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999957911239469	WITHOUT_CLASSIFICATION	4.208876053080928E-6	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999957911239469	WITHOUT_CLASSIFICATION	4.208876053080928E-6	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999782730427629	WITHOUT_CLASSIFICATION	2.1726957237102133E-5	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999692522477721	WITHOUT_CLASSIFICATION	3.074775222794532E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9999034245769506	WITHOUT_CLASSIFICATION	9.657542304950785E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9999034245769506	WITHOUT_CLASSIFICATION	9.657542304950785E-5	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.999978998678422	WITHOUT_CLASSIFICATION	2.1001321577976132E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999956139760403	WITHOUT_CLASSIFICATION	4.386023959749398E-6	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999983144535329	WITHOUT_CLASSIFICATION	1.6855464670916533E-6	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999853444335182	WITHOUT_CLASSIFICATION	1.4655566481798093E-5	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9997652459444302	WITHOUT_CLASSIFICATION	2.3475405556985899E-4	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9994871009508163	WITHOUT_CLASSIFICATION	5.128990491838021E-4	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9968314254053617	WITHOUT_CLASSIFICATION	0.0031685745946381577	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999977021061301	WITHOUT_CLASSIFICATION	2.2978938699150177E-6	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9998665475985966	WITHOUT_CLASSIFICATION	1.334524014033026E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.999982309024734	WITHOUT_CLASSIFICATION	1.7690975266083016E-5	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.9999158506079165	WITHOUT_CLASSIFICATION	8.414939208347931E-5	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9997724455351925	WITHOUT_CLASSIFICATION	2.2755446480748047E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999070284043843	WITHOUT_CLASSIFICATION	9.29715956157041E-5	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9993851453449896	WITHOUT_CLASSIFICATION	6.148546550105564E-4	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999998489606591	WITHOUT_CLASSIFICATION	1.510393410036027E-7	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999550500023848	WITHOUT_CLASSIFICATION	4.494999761508863E-5	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9996685485551503	WITHOUT_CLASSIFICATION	3.314514448496648E-4	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9998919053713821	WITHOUT_CLASSIFICATION	1.0809462861788047E-4	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9843439702666223	WITHOUT_CLASSIFICATION	0.015656029733377572	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.999744954444852	WITHOUT_CLASSIFICATION	2.550455551479123E-4	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999793435297165	WITHOUT_CLASSIFICATION	2.0656470283452873E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999913815490992	WITHOUT_CLASSIFICATION	8.618450900781783E-6	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999886548583706	WITHOUT_CLASSIFICATION	1.1345141629231755E-5	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999994545697765	WITHOUT_CLASSIFICATION	5.454302235474218E-7	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999993494744895	WITHOUT_CLASSIFICATION	6.505255105353335E-7	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999970896517896	WITHOUT_CLASSIFICATION	2.9103482104238156E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9989502049998712	WITHOUT_CLASSIFICATION	0.0010497950001288647	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999950990132026	WITHOUT_CLASSIFICATION	4.900986797374516E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999994157260467	WITHOUT_CLASSIFICATION	5.842739534048621E-7	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999994157260467	WITHOUT_CLASSIFICATION	5.842739534048621E-7	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999995472438851	WITHOUT_CLASSIFICATION	4.5275611483319176E-7	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999387149688	WITHOUT_CLASSIFICATION	6.128503109032003E-8	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999874618392028	WITHOUT_CLASSIFICATION	1.2538160797123532E-5	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999762287245253	WITHOUT_CLASSIFICATION	2.3771275474653857E-5	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999989485583819	WITHOUT_CLASSIFICATION	1.0514416181358605E-6	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9998896543190996	WITHOUT_CLASSIFICATION	1.1034568090043163E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9862026169061601	WITHOUT_CLASSIFICATION	0.01379738309383991	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999892235212829	WITHOUT_CLASSIFICATION	1.0776478717056843E-5	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.999872989316219	WITHOUT_CLASSIFICATION	1.270106837809399E-4	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999989617117025	WITHOUT_CLASSIFICATION	1.0382882973689382E-6	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999531011421	WITHOUT_CLASSIFICATION	4.689885786552384E-8	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999996827531061	WITHOUT_CLASSIFICATION	3.172468939540264E-7	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999496530808871	WITHOUT_CLASSIFICATION	5.0346919112908803E-5	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999972553842523	WITHOUT_CLASSIFICATION	2.7446157477433307E-6	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9966634593309862	WITHOUT_CLASSIFICATION	0.0033365406690138697	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999819077707562	WITHOUT_CLASSIFICATION	1.8092229243781936E-5	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999679672931968	WITHOUT_CLASSIFICATION	3.2032706803237745E-5	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999993871551033	WITHOUT_CLASSIFICATION	6.128448966425271E-7	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9999753841979212	WITHOUT_CLASSIFICATION	2.461580207875337E-5	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9997816776096001	WITHOUT_CLASSIFICATION	2.1832239039993432E-4	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999867983485135	WITHOUT_CLASSIFICATION	1.320165148651444E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999514784742787	WITHOUT_CLASSIFICATION	4.852152572132048E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.999989452239355	WITHOUT_CLASSIFICATION	1.0547760645099603E-5	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999476282745	WITHOUT_CLASSIFICATION	5.237172554516467E-8	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999998786570422	WITHOUT_CLASSIFICATION	1.2134295777428098E-7	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999820528214841	WITHOUT_CLASSIFICATION	1.7947178515885955E-5	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.6715161189721863	WITHOUT_CLASSIFICATION	0.3284838810278137	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9981918856621639	WITHOUT_CLASSIFICATION	0.0018081143378361124	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999985149763102	WITHOUT_CLASSIFICATION	1.4850236898665177E-6	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999976596478143	WITHOUT_CLASSIFICATION	2.3403521856652683E-6	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999996769476993	WITHOUT_CLASSIFICATION	3.2305230066728314E-7	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999998558263193	WITHOUT_CLASSIFICATION	1.4417368066875581E-7	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999955143287393	WITHOUT_CLASSIFICATION	4.485671260627393E-6	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999968243496501	WITHOUT_CLASSIFICATION	3.1756503499879773E-6	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999913541395961	WITHOUT_CLASSIFICATION	8.645860403843839E-6	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.999994068040045	WITHOUT_CLASSIFICATION	5.9319599550018955E-6	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999930048433191	WITHOUT_CLASSIFICATION	6.995156680880695E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9964246089772528	WITHOUT_CLASSIFICATION	0.003575391022747171	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999963645672	WITHOUT_CLASSIFICATION	3.6354328993404598E-9	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9996695532584132	WITHOUT_CLASSIFICATION	3.3044674158676723E-4	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9621943794229493	WITHOUT_CLASSIFICATION	0.03780562057705071	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999987714083248	WITHOUT_CLASSIFICATION	1.2285916751983467E-6	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9995762690501456	WITHOUT_CLASSIFICATION	4.2373094985426874E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9995762690501456	WITHOUT_CLASSIFICATION	4.2373094985426874E-4	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999803777739624	WITHOUT_CLASSIFICATION	1.9622226037542375E-5	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999790752401911	WITHOUT_CLASSIFICATION	2.0924759808922625E-5	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999961563355365	WITHOUT_CLASSIFICATION	3.843664463482552E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999960756378545	WITHOUT_CLASSIFICATION	3.924362145426061E-6	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999979311187551	WITHOUT_CLASSIFICATION	2.0688812447993077E-6	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999992831909409	WITHOUT_CLASSIFICATION	7.168090592242875E-7	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999988220731698	WITHOUT_CLASSIFICATION	1.1779268301782696E-6	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999774374042997	WITHOUT_CLASSIFICATION	2.2562595700361203E-5	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999959419225625	WITHOUT_CLASSIFICATION	4.058077437512372E-6	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999734162904427	WITHOUT_CLASSIFICATION	2.6583709557273112E-5	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999963269614306	WITHOUT_CLASSIFICATION	3.6730385693241064E-6	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999937997297851	WITHOUT_CLASSIFICATION	6.2002702149202965E-6	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999579447863856	WITHOUT_CLASSIFICATION	4.20552136144479E-5	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999238635412748	WITHOUT_CLASSIFICATION	7.613645872516794E-5	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999997848973036	WITHOUT_CLASSIFICATION	2.1510269639550677E-6	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.999996685891695	WITHOUT_CLASSIFICATION	3.314108305048551E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999995978061904	WITHOUT_CLASSIFICATION	4.02193809564899E-7	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999589115849172	WITHOUT_CLASSIFICATION	4.1088415082711824E-5	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999826847969049	WITHOUT_CLASSIFICATION	1.731520309512325E-5	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.999969370725661	WITHOUT_CLASSIFICATION	3.062927433899359E-5	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999927795144299	WITHOUT_CLASSIFICATION	7.220485570166292E-6	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999979615973021	WITHOUT_CLASSIFICATION	2.038402697929494E-6	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9998381242059683	WITHOUT_CLASSIFICATION	1.6187579403178012E-4	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9997204534625206	WITHOUT_CLASSIFICATION	2.7954653747941653E-4	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999808213563	WITHOUT_CLASSIFICATION	1.9178643642821514E-8	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999995321633717	WITHOUT_CLASSIFICATION	4.6783662822488294E-7	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.99999971189545	WITHOUT_CLASSIFICATION	2.881045500890982E-7	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999659512735	WITHOUT_CLASSIFICATION	3.404872653877262E-8	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999935243991513	WITHOUT_CLASSIFICATION	6.475600848647345E-6	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999963730382156	WITHOUT_CLASSIFICATION	3.6269617842500454E-6	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.999999476968054	WITHOUT_CLASSIFICATION	5.230319459871125E-7	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9994931337116396	WITHOUT_CLASSIFICATION	5.06866288360446E-4	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999902482664894	WITHOUT_CLASSIFICATION	9.751733510536243E-6	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.999988743742628	WITHOUT_CLASSIFICATION	1.1256257371945239E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9964246089772528	WITHOUT_CLASSIFICATION	0.003575391022747171	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999730267160927	WITHOUT_CLASSIFICATION	2.6973283907360228E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999982959211638	WITHOUT_CLASSIFICATION	1.704078836194324E-5	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999982959211638	WITHOUT_CLASSIFICATION	1.704078836194324E-5	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999998278760004	WITHOUT_CLASSIFICATION	1.7212399955891364E-7	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999609712602272	WITHOUT_CLASSIFICATION	3.902873977270272E-5	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999824731331599	WITHOUT_CLASSIFICATION	1.7526866840117557E-5	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9997860826854447	WITHOUT_CLASSIFICATION	2.1391731455529134E-4	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9998607067612547	WITHOUT_CLASSIFICATION	1.3929323874521934E-4	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999596290087244	WITHOUT_CLASSIFICATION	4.037099127561803E-5	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9998817809766931	WITHOUT_CLASSIFICATION	1.1821902330696903E-4	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9998748984055599	WITHOUT_CLASSIFICATION	1.2510159444017375E-4	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.999816633217677	WITHOUT_CLASSIFICATION	1.8336678232292922E-4	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9995740256013128	WITHOUT_CLASSIFICATION	4.259743986871635E-4	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9994319536549384	WITHOUT_CLASSIFICATION	5.680463450615832E-4	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.999249680321564	WITHOUT_CLASSIFICATION	7.503196784359701E-4	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999918216646813	WITHOUT_CLASSIFICATION	8.178335318712904E-6	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9972169582803476	WITHOUT_CLASSIFICATION	0.0027830417196523798	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9998340470712647	WITHOUT_CLASSIFICATION	1.6595292873537184E-4	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.99998041393694	WITHOUT_CLASSIFICATION	1.9586063059966725E-5	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999865156770608	WITHOUT_CLASSIFICATION	1.34843229392787E-5	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.999984185802199	WITHOUT_CLASSIFICATION	1.5814197800872315E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999912712396752	WITHOUT_CLASSIFICATION	8.728760324811942E-6	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999797177663847	WITHOUT_CLASSIFICATION	2.028223361525402E-5	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999693781853122	WITHOUT_CLASSIFICATION	3.0621814687804174E-5	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999779638083846	WITHOUT_CLASSIFICATION	2.2036191615505327E-5	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999557750959439	WITHOUT_CLASSIFICATION	4.422490405612913E-5	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999791462941741	WITHOUT_CLASSIFICATION	2.0853705825909718E-5	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999602019791	WITHOUT_CLASSIFICATION	3.979802089536798E-8	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9997946501173989	WITHOUT_CLASSIFICATION	2.0534988260116572E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999981304592952	WITHOUT_CLASSIFICATION	1.869540704784742E-6	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999618227087379	WITHOUT_CLASSIFICATION	3.817729126199025E-5	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999993188581378	WITHOUT_CLASSIFICATION	6.8114186224116E-7	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998734831737817	WITHOUT_CLASSIFICATION	1.2651682621830543E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.9999973129507383	WITHOUT_CLASSIFICATION	2.6870492617564916E-6	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999973955315494	WITHOUT_CLASSIFICATION	2.6044684505103936E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999947130006315	WITHOUT_CLASSIFICATION	5.286999368602869E-6	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9998900513488619	WITHOUT_CLASSIFICATION	1.0994865113816925E-4	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9998359372809533	WITHOUT_CLASSIFICATION	1.6406271904659793E-4	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999811494269558	WITHOUT_CLASSIFICATION	1.885057304412089E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999976160246177	WITHOUT_CLASSIFICATION	2.3839753823577797E-6	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9997946501173989	WITHOUT_CLASSIFICATION	2.0534988260116572E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999981304592952	WITHOUT_CLASSIFICATION	1.869540704784742E-6	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999618227087379	WITHOUT_CLASSIFICATION	3.817729126199025E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998734831737817	WITHOUT_CLASSIFICATION	1.2651682621830543E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9990756562545895	WITHOUT_CLASSIFICATION	9.243437454106426E-4	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999939023855116	WITHOUT_CLASSIFICATION	6.097614488435122E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999810714332522	WITHOUT_CLASSIFICATION	1.8928566747810792E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999872829979431	WITHOUT_CLASSIFICATION	1.2717002056812284E-5	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9997887726307604	WITHOUT_CLASSIFICATION	2.1122736923952378E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999973306789	WITHOUT_CLASSIFICATION	2.669321225609212E-9	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.999992333488153	WITHOUT_CLASSIFICATION	7.666511846985066E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999973176661525	WITHOUT_CLASSIFICATION	2.6823338474131096E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999978142245982	WITHOUT_CLASSIFICATION	2.18577540186896E-6	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999990123563823	WITHOUT_CLASSIFICATION	9.876436176679164E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999996327011874	WITHOUT_CLASSIFICATION	3.6729881260268643E-7	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999991450352091	WITHOUT_CLASSIFICATION	8.549647908653162E-7	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999608442479676	WITHOUT_CLASSIFICATION	3.915575203233013E-5	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999311200151091	WITHOUT_CLASSIFICATION	6.887998489087754E-5	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999881365565922	WITHOUT_CLASSIFICATION	1.1863443407780153E-5	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999847709638487	WITHOUT_CLASSIFICATION	1.5229036151352129E-5	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9997996253706043	WITHOUT_CLASSIFICATION	2.003746293957613E-4	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999727652224626	WITHOUT_CLASSIFICATION	2.7234777537405694E-5	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999965244720869	WITHOUT_CLASSIFICATION	3.4755279130689188E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999976160246177	WITHOUT_CLASSIFICATION	2.3839753823577797E-6	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999939023855116	WITHOUT_CLASSIFICATION	6.097614488435122E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999810714332522	WITHOUT_CLASSIFICATION	1.8928566747810792E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.9997887726307604	WITHOUT_CLASSIFICATION	2.1122736923952378E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999973306789	WITHOUT_CLASSIFICATION	2.669321225609212E-9	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.999992333488153	WITHOUT_CLASSIFICATION	7.666511846985066E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999973176661525	WITHOUT_CLASSIFICATION	2.6823338474131096E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999847740919761	WITHOUT_CLASSIFICATION	1.5225908023873672E-5	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9965319621873122	WITHOUT_CLASSIFICATION	0.003468037812687754	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999810990515	WITHOUT_CLASSIFICATION	1.890094838941288E-8	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999582197823	WITHOUT_CLASSIFICATION	4.1780217667515604E-8	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999575395649825	WITHOUT_CLASSIFICATION	4.246043501748739E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999575395649825	WITHOUT_CLASSIFICATION	4.246043501748739E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999970584869281	WITHOUT_CLASSIFICATION	2.9415130718398537E-6	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9978250145621563	WITHOUT_CLASSIFICATION	0.002174985437843791	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.999999959945771	WITHOUT_CLASSIFICATION	4.005422895866628E-8	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999981386274217	WITHOUT_CLASSIFICATION	1.8613725782504578E-6	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999816959326936	WITHOUT_CLASSIFICATION	1.8304067306425217E-5	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999994122037006	WITHOUT_CLASSIFICATION	5.87796299315619E-7	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999960915701824	WITHOUT_CLASSIFICATION	3.908429817588999E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9992480230809352	WITHOUT_CLASSIFICATION	7.5197691906475E-4	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999793895705	WITHOUT_CLASSIFICATION	2.0610429438800642E-8	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9995708555851262	WITHOUT_CLASSIFICATION	4.29144414873827E-4	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9762882157397896	WITHOUT_CLASSIFICATION	0.023711784260210447	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.999774554147303	WITHOUT_CLASSIFICATION	2.2544585269698386E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999938466725683	WITHOUT_CLASSIFICATION	6.153327431699508E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9997367929197962	WITHOUT_CLASSIFICATION	2.6320708020379E-4	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.999999178375388	WITHOUT_CLASSIFICATION	8.216246120455453E-7	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999942515222029	WITHOUT_CLASSIFICATION	5.748477797188779E-6	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9997761281178824	WITHOUT_CLASSIFICATION	2.2387188211764978E-4	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999998831477264	WITHOUT_CLASSIFICATION	1.1685227366632985E-7	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999999995612922	WITHOUT_CLASSIFICATION	4.387078111654342E-9	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999971094746036	WITHOUT_CLASSIFICATION	2.8905253962959663E-6	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9995429986384395	DESIGN	4.5700136156047444E-4	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999979768502155	WITHOUT_CLASSIFICATION	2.023149784498087E-6	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999856843891	WITHOUT_CLASSIFICATION	1.431561094589785E-8	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8928188565071663	DESIGN	0.10718114349283368	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998130428652	WITHOUT_CLASSIFICATION	1.8695713481075819E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9996126749889862	WITHOUT_CLASSIFICATION	3.8732501101387644E-4	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999995710525506	WITHOUT_CLASSIFICATION	4.289474494340559E-7	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998953107104565	WITHOUT_CLASSIFICATION	1.046892895434765E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999943135987552	WITHOUT_CLASSIFICATION	5.686401244685935E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998130428652	WITHOUT_CLASSIFICATION	1.8695713481075819E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9996126749889862	WITHOUT_CLASSIFICATION	3.8732501101387644E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9997367929197962	WITHOUT_CLASSIFICATION	2.6320708020379E-4	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9996315174914038	WITHOUT_CLASSIFICATION	3.684825085962637E-4	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999945265532522	WITHOUT_CLASSIFICATION	5.473446747905565E-6	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9997167253976235	WITHOUT_CLASSIFICATION	2.832746023765633E-4	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9791800196294772	WITHOUT_CLASSIFICATION	0.020819980370522788	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999868560129511	WITHOUT_CLASSIFICATION	1.3143987048857947E-5	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999943662274081	WITHOUT_CLASSIFICATION	5.633772591870118E-6	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999960589456947	WITHOUT_CLASSIFICATION	3.941054305326117E-6	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999995642595032	WITHOUT_CLASSIFICATION	4.357404968134396E-7	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.5624572350367274	DESIGN	0.4375427649632726	WITHOUT_CLASSIFICATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9997434092041019	WITHOUT_CLASSIFICATION	2.565907958981121E-4	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999390743593681	WITHOUT_CLASSIFICATION	6.0925640631868E-5	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9998892878375448	WITHOUT_CLASSIFICATION	1.1071216245514568E-4	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9998441344386986	WITHOUT_CLASSIFICATION	1.5586556130153781E-4	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.999999990908413	WITHOUT_CLASSIFICATION	9.09158698602231E-9	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9993984031357105	WITHOUT_CLASSIFICATION	6.015968642894581E-4	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999720763943496	WITHOUT_CLASSIFICATION	2.7923605650351126E-5	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9998396222935039	WITHOUT_CLASSIFICATION	1.603777064960337E-4	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9522368985188058	WITHOUT_CLASSIFICATION	0.04776310148119428	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9995147672629195	WITHOUT_CLASSIFICATION	4.852327370803676E-4	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9979576489919316	WITHOUT_CLASSIFICATION	0.0020423510080684604	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999289383217311	WITHOUT_CLASSIFICATION	7.106167826886774E-5	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9916691356502948	WITHOUT_CLASSIFICATION	0.00833086434970507	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9998213114862439	WITHOUT_CLASSIFICATION	1.78688513756154E-4	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9571208585226282	WITHOUT_CLASSIFICATION	0.04287914147737187	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999959320903874	WITHOUT_CLASSIFICATION	4.067909612646099E-6	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999190016569743	WITHOUT_CLASSIFICATION	8.099834302563005E-5	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9976604441094874	WITHOUT_CLASSIFICATION	0.0023395558905125844	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.966499308375472	WITHOUT_CLASSIFICATION	0.033500691624528074	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9996292740435205	WITHOUT_CLASSIFICATION	3.707259564794076E-4	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9903369722080363	WITHOUT_CLASSIFICATION	0.009663027791963784	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9997328049518515	WITHOUT_CLASSIFICATION	2.6719504814854165E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997350299579	WITHOUT_CLASSIFICATION	2.649700421033362E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997350299579	WITHOUT_CLASSIFICATION	2.649700421033362E-7	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999938466725683	WITHOUT_CLASSIFICATION	6.153327431699508E-6	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999985533701962	WITHOUT_CLASSIFICATION	1.446629803816809E-6	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999997284167794	WITHOUT_CLASSIFICATION	2.715832205453742E-7	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.999993259809063	WITHOUT_CLASSIFICATION	6.7401909371286405E-6	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997171035715	WITHOUT_CLASSIFICATION	2.828964285891279E-7	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997171035715	WITHOUT_CLASSIFICATION	2.828964285891279E-7	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999979417874821	WITHOUT_CLASSIFICATION	2.058212517975242E-6	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999993780009158	WITHOUT_CLASSIFICATION	6.219990843115361E-7	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999991535464356	WITHOUT_CLASSIFICATION	8.464535642932417E-7	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.999993510004437	WITHOUT_CLASSIFICATION	6.489995562920811E-6	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999136906022936	WITHOUT_CLASSIFICATION	8.630939770644672E-5	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999987816608574	WITHOUT_CLASSIFICATION	1.218339142587226E-6	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999858676808613	WITHOUT_CLASSIFICATION	1.4132319138702423E-4	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999900674395671	WITHOUT_CLASSIFICATION	9.932560432876048E-6	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999999969852557	WITHOUT_CLASSIFICATION	3.014744296258699E-8	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999982436195866	WITHOUT_CLASSIFICATION	1.7563804134867293E-6	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999964433493315	WITHOUT_CLASSIFICATION	3.5566506686406237E-6	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999997417020571	WITHOUT_CLASSIFICATION	2.5829794297605986E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998704271934	WITHOUT_CLASSIFICATION	1.2957280669067E-7	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999576168437962	WITHOUT_CLASSIFICATION	4.238315620375064E-5	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999789735750567	WITHOUT_CLASSIFICATION	2.1026424943283285E-5	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9999414114214594	WITHOUT_CLASSIFICATION	5.858857854065306E-5	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.999999940097067	WITHOUT_CLASSIFICATION	5.990293300008043E-8	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.999999940097067	WITHOUT_CLASSIFICATION	5.990293300008043E-8	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999026888277	WITHOUT_CLASSIFICATION	9.731117231235725E-8	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999026888277	WITHOUT_CLASSIFICATION	9.731117231235725E-8	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999685702425	WITHOUT_CLASSIFICATION	3.1429757379031914E-8	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999319166399585	WITHOUT_CLASSIFICATION	6.80833600414882E-5	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999974315978871	WITHOUT_CLASSIFICATION	2.5684021128269577E-6	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9991013419381469	WITHOUT_CLASSIFICATION	8.986580618531766E-4	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9974870250060294	WITHOUT_CLASSIFICATION	0.0025129749939707294	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999742817845451	WITHOUT_CLASSIFICATION	2.5718215454984945E-5	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999963374607121	WITHOUT_CLASSIFICATION	3.6625392877866903E-6	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999997417020571	WITHOUT_CLASSIFICATION	2.5829794297605986E-7	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998704271934	WITHOUT_CLASSIFICATION	1.2957280669067E-7	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999789735750567	WITHOUT_CLASSIFICATION	2.1026424943283285E-5	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.999999818946386	WITHOUT_CLASSIFICATION	1.8105361399600518E-7	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.5425732561752157	WITHOUT_CLASSIFICATION	0.4574267438247844	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9985977341025652	WITHOUT_CLASSIFICATION	0.0014022658974347988	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9985741892498935	WITHOUT_CLASSIFICATION	0.0014258107501065383	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.999998263254698	WITHOUT_CLASSIFICATION	1.7367453020309343E-6	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9998765995761805	WITHOUT_CLASSIFICATION	1.2340042381957773E-4	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999982870875541	WITHOUT_CLASSIFICATION	1.7129124458368803E-6	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999481554910244	WITHOUT_CLASSIFICATION	5.1844508975493086E-5	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999971563751696	WITHOUT_CLASSIFICATION	2.8436248304008688E-6	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999550645045	WITHOUT_CLASSIFICATION	4.493549565388956E-8	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.824874453612369	DESIGN	0.1751255463876311	WITHOUT_CLASSIFICATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999398588216747	WITHOUT_CLASSIFICATION	6.0141178325431745E-5	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999931963368319	WITHOUT_CLASSIFICATION	6.803663168099306E-6	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.999751644137912	WITHOUT_CLASSIFICATION	2.4835586208813077E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9993848050917286	WITHOUT_CLASSIFICATION	6.15194908271446E-4	DESIGN
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999949531524583	WITHOUT_CLASSIFICATION	5.046847541593685E-6	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999996858962336	WITHOUT_CLASSIFICATION	3.1410376644977036E-7	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.999999808318906	WITHOUT_CLASSIFICATION	1.9168109399537137E-7	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999998915577762	WITHOUT_CLASSIFICATION	1.0844222373961227E-7	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999505539179	WITHOUT_CLASSIFICATION	4.9446082137079826E-8	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999997079971509	WITHOUT_CLASSIFICATION	2.920028490868263E-7	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999939303707689	WITHOUT_CLASSIFICATION	6.069629231065027E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9917656187194273	WITHOUT_CLASSIFICATION	0.008234381280572809	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999944080281832	WITHOUT_CLASSIFICATION	5.59197181680448E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999248596813333	WITHOUT_CLASSIFICATION	7.514031866677172E-5	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999989498934743	WITHOUT_CLASSIFICATION	1.0501065256994337E-5	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999963506899808	WITHOUT_CLASSIFICATION	3.6493100191716914E-6	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9997341396639251	WITHOUT_CLASSIFICATION	2.658603360749055E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999998305179373	WITHOUT_CLASSIFICATION	1.694820627542004E-7	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.999999900502814	WITHOUT_CLASSIFICATION	9.949718603499961E-8	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9967245519709588	WITHOUT_CLASSIFICATION	0.003275448029041301	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999901335195406	WITHOUT_CLASSIFICATION	9.866480459494469E-6	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999997519838585	WITHOUT_CLASSIFICATION	2.4801614149170903E-7	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9918920290307807	WITHOUT_CLASSIFICATION	0.008107970969219346	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999995639458159	WITHOUT_CLASSIFICATION	4.360541840858455E-7	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9997520773558083	WITHOUT_CLASSIFICATION	2.479226441916563E-4	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999809884948359	WITHOUT_CLASSIFICATION	1.901150516411316E-5	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999548004111298	WITHOUT_CLASSIFICATION	4.5199588870166034E-5	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999994678618824	WITHOUT_CLASSIFICATION	5.321381174852555E-7	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9968940271429335	WITHOUT_CLASSIFICATION	0.00310597285706651	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9998950347018638	WITHOUT_CLASSIFICATION	1.049652981361002E-4	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999997284167794	WITHOUT_CLASSIFICATION	2.715832205453742E-7	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999809884948359	WITHOUT_CLASSIFICATION	1.901150516411316E-5	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999948277338837	WITHOUT_CLASSIFICATION	5.172266116219579E-6	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9983320752831752	WITHOUT_CLASSIFICATION	0.0016679247168247284	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.999691444000871	WITHOUT_CLASSIFICATION	3.08555999129075E-4	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999990670036358	WITHOUT_CLASSIFICATION	9.329963640682562E-7	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999990670036358	WITHOUT_CLASSIFICATION	9.329963640682562E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9976638842408032	WITHOUT_CLASSIFICATION	0.002336115759196796	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9958783932947524	WITHOUT_CLASSIFICATION	0.004121606705247706	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9794595182332949	WITHOUT_CLASSIFICATION	0.020540481766705088	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9997718963808656	WITHOUT_CLASSIFICATION	2.2810361913435027E-4	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9994311516270146	WITHOUT_CLASSIFICATION	5.688483729854466E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999998906535066	WITHOUT_CLASSIFICATION	1.093464934665166E-7	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999971713148	WITHOUT_CLASSIFICATION	2.8286852353546446E-9	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999717364559879	WITHOUT_CLASSIFICATION	2.826354401208709E-5	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999996557631111	WITHOUT_CLASSIFICATION	3.44236888836492E-7	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999996557631111	WITHOUT_CLASSIFICATION	3.44236888836492E-7	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999989367786886	WITHOUT_CLASSIFICATION	1.0632213113683862E-6	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999996492765302	WITHOUT_CLASSIFICATION	3.5072346976211767E-7	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999992485683425	WITHOUT_CLASSIFICATION	7.514316575433732E-7	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9998243389404922	WITHOUT_CLASSIFICATION	1.75661059507853E-4	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.99990653672455	WITHOUT_CLASSIFICATION	9.346327545000669E-5	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999962531280396	WITHOUT_CLASSIFICATION	3.7468719602340725E-6	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999969475866519	WITHOUT_CLASSIFICATION	3.0524133480944886E-6	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999992518461895	WITHOUT_CLASSIFICATION	7.48153810472221E-7	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9999961555012079	WITHOUT_CLASSIFICATION	3.8444987921561735E-6	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9942943428857512	WITHOUT_CLASSIFICATION	0.00570565711424876	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9998390993194797	WITHOUT_CLASSIFICATION	1.6090068052032163E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999978455953233	WITHOUT_CLASSIFICATION	2.1544046766990348E-6	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999865227767593	WITHOUT_CLASSIFICATION	1.3477223240814193E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997782312162414	WITHOUT_CLASSIFICATION	2.2176878375863762E-4	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997782312162414	WITHOUT_CLASSIFICATION	2.2176878375863762E-4	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999998065251013	WITHOUT_CLASSIFICATION	1.934748987114236E-7	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999973176661525	WITHOUT_CLASSIFICATION	2.6823338474131096E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9949547515625232	WITHOUT_CLASSIFICATION	0.005045248437476768	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999154814220451	WITHOUT_CLASSIFICATION	8.451857795488978E-5	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9997980446005491	WITHOUT_CLASSIFICATION	2.0195539945085775E-4	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.997825106384411	WITHOUT_CLASSIFICATION	0.0021748936155888674	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999996725795107	WITHOUT_CLASSIFICATION	3.2742048928455847E-7	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999946844388102	WITHOUT_CLASSIFICATION	5.315561189739546E-6	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999988429365905	WITHOUT_CLASSIFICATION	1.15706340946371E-6	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9999935111867343	WITHOUT_CLASSIFICATION	6.488813265683405E-6	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.999999866735069	WITHOUT_CLASSIFICATION	1.3326493092192914E-7	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999807305197271	WITHOUT_CLASSIFICATION	1.926948027281585E-5	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9996486918258867	WITHOUT_CLASSIFICATION	3.5130817411335995E-4	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.99991467542161	WITHOUT_CLASSIFICATION	8.532457838997976E-5	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999961853677838	WITHOUT_CLASSIFICATION	3.8146322160737938E-6	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9998763633689595	WITHOUT_CLASSIFICATION	1.2363663104059973E-4	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999872624977777	WITHOUT_CLASSIFICATION	1.2737502222358778E-5	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999969598254026	WITHOUT_CLASSIFICATION	3.0401745972841336E-6	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999998750794451	WITHOUT_CLASSIFICATION	1.24920554894647E-7	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999932321352912	WITHOUT_CLASSIFICATION	6.7678647087668845E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.999930309099585	WITHOUT_CLASSIFICATION	6.969090041497007E-5	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999987398424727	WITHOUT_CLASSIFICATION	1.2601575273789363E-6	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998579650611408	WITHOUT_CLASSIFICATION	1.4203493885927844E-4	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9976974527485785	WITHOUT_CLASSIFICATION	0.002302547251421505	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.6842637626769174	WITHOUT_CLASSIFICATION	0.31573623732308254	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9997808529181603	WITHOUT_CLASSIFICATION	2.1914708183973756E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9999502119016255	WITHOUT_CLASSIFICATION	4.978809837453816E-5	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9999593634032111	WITHOUT_CLASSIFICATION	4.063659678891205E-5	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.99999993344229	WITHOUT_CLASSIFICATION	6.655771000231358E-8	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9988779295077144	WITHOUT_CLASSIFICATION	0.0011220704922856343	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999510901186736	WITHOUT_CLASSIFICATION	4.8909881326313194E-5	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.999967204378884	WITHOUT_CLASSIFICATION	3.2795621115921655E-5	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999918048066002	WITHOUT_CLASSIFICATION	8.195193399719791E-6	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9988120627068674	WITHOUT_CLASSIFICATION	0.00118793729313269	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9974446993068989	WITHOUT_CLASSIFICATION	0.0025553006931011437	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999688581903937	WITHOUT_CLASSIFICATION	3.114180960631752E-5	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999997228923001	WITHOUT_CLASSIFICATION	2.771076999754661E-7	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998608708399338	WITHOUT_CLASSIFICATION	1.3912916006615726E-4	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999835014813588	WITHOUT_CLASSIFICATION	1.64985186411739E-5	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9996454516773448	WITHOUT_CLASSIFICATION	3.54548322655328E-4	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999969499885053	WITHOUT_CLASSIFICATION	3.0500114946664095E-6	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9998676782373048	WITHOUT_CLASSIFICATION	1.323217626951993E-4	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999986976146719	WITHOUT_CLASSIFICATION	1.302385328079489E-6	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9873833181843437	WITHOUT_CLASSIFICATION	0.01261668181565637	DESIGN
/* NUL */	WITHOUT_CLASSIFICATION	0.99999964665048	WITHOUT_CLASSIFICATION	3.5334951990461687E-7	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999241480027927	WITHOUT_CLASSIFICATION	7.585199720724097E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999992486918707	WITHOUT_CLASSIFICATION	7.513081292646203E-7	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998706541781124	WITHOUT_CLASSIFICATION	1.293458218875743E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.998612807772153	WITHOUT_CLASSIFICATION	0.0013871922278470142	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998130428652	WITHOUT_CLASSIFICATION	1.8695713481075819E-7	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998130428652	WITHOUT_CLASSIFICATION	1.8695713481075819E-7	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.999955552503322	WITHOUT_CLASSIFICATION	4.4447496677987445E-5	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999590245754459	WITHOUT_CLASSIFICATION	4.097542455401863E-5	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999998289404258	WITHOUT_CLASSIFICATION	1.7105957420330444E-7	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9981599997143511	WITHOUT_CLASSIFICATION	0.0018400002856488605	DESIGN
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9998234024241763	WITHOUT_CLASSIFICATION	1.7659757582370164E-4	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9987524642963344	WITHOUT_CLASSIFICATION	0.0012475357036657313	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9997054993696852	WITHOUT_CLASSIFICATION	2.945006303147719E-4	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999960846877	WITHOUT_CLASSIFICATION	3.915312309108039E-9	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999964431048	WITHOUT_CLASSIFICATION	3.55689527266501E-9	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9975800104883262	WITHOUT_CLASSIFICATION	0.002419989511673652	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999888957968961	WITHOUT_CLASSIFICATION	1.1104203103896756E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999888957968961	WITHOUT_CLASSIFICATION	1.1104203103896756E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.999888957968961	WITHOUT_CLASSIFICATION	1.1104203103896756E-4	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.999999992571213	WITHOUT_CLASSIFICATION	7.428786953980828E-9	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.99996165001431	WITHOUT_CLASSIFICATION	3.834998568992807E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9999989324812145	WITHOUT_CLASSIFICATION	1.067518785481254E-6	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999316554159	WITHOUT_CLASSIFICATION	6.834458411777811E-8	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999316554159	WITHOUT_CLASSIFICATION	6.834458411777811E-8	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999969276748321	WITHOUT_CLASSIFICATION	3.072325167948768E-6	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999680427778824	WITHOUT_CLASSIFICATION	3.1957222117644596E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999505177323	WITHOUT_CLASSIFICATION	4.948226773388515E-8	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999994504364982	WITHOUT_CLASSIFICATION	5.495635017904374E-6	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9979534420337475	WITHOUT_CLASSIFICATION	0.002046557966252565	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999993002787131	WITHOUT_CLASSIFICATION	6.997212870272437E-7	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999935558502797	WITHOUT_CLASSIFICATION	6.444149720344736E-6	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999973020457473	WITHOUT_CLASSIFICATION	2.69795425270449E-6	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999998730895245	WITHOUT_CLASSIFICATION	1.2691047542388095E-7	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999578105917627	WITHOUT_CLASSIFICATION	4.218940823724579E-5	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999578105917627	WITHOUT_CLASSIFICATION	4.218940823724579E-5	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999988708646018	WITHOUT_CLASSIFICATION	1.1291353980738388E-6	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999363285207612	WITHOUT_CLASSIFICATION	6.367147923876283E-5	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999998421457537	WITHOUT_CLASSIFICATION	1.5785424634980986E-7	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999967155516533	WITHOUT_CLASSIFICATION	3.284448346761382E-6	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999816088398484	WITHOUT_CLASSIFICATION	1.8391160151554406E-5	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999984379025053	WITHOUT_CLASSIFICATION	1.562097494569013E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999997317416253	WITHOUT_CLASSIFICATION	2.6825837477284273E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999942743514897	WITHOUT_CLASSIFICATION	5.725648510347257E-6	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999775147988474	WITHOUT_CLASSIFICATION	2.2485201152516406E-5	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999961408750795	WITHOUT_CLASSIFICATION	3.85912492048434E-6	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9962799447109576	WITHOUT_CLASSIFICATION	0.0037200552890424682	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999974057711447	WITHOUT_CLASSIFICATION	2.5942288553058787E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999975073021495	WITHOUT_CLASSIFICATION	2.4926978504975792E-6	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9983031866714196	WITHOUT_CLASSIFICATION	0.0016968133285803252	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.999603982601673	WITHOUT_CLASSIFICATION	3.960173983270047E-4	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999656320573445	WITHOUT_CLASSIFICATION	3.436794265554462E-5	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999880761325794	WITHOUT_CLASSIFICATION	1.1923867420605695E-4	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.999518363829178	WITHOUT_CLASSIFICATION	4.8163617082192976E-4	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999545773601541	WITHOUT_CLASSIFICATION	4.5422639845885984E-5	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999739183013	WITHOUT_CLASSIFICATION	2.6081698648515557E-8	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9240527970767424	DESIGN	0.07594720292325771	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9995171834458134	WITHOUT_CLASSIFICATION	4.8281655418654947E-4	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.999998987142873	WITHOUT_CLASSIFICATION	1.0128571268784888E-6	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999930239982173	WITHOUT_CLASSIFICATION	6.976001782708456E-6	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999992716688504	WITHOUT_CLASSIFICATION	7.283311495197682E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9960758324713457	WITHOUT_CLASSIFICATION	0.003924167528654325	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999975116062125	WITHOUT_CLASSIFICATION	2.4883937874522675E-6	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999980566102804	WITHOUT_CLASSIFICATION	1.943389719636496E-6	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9877229799878655	DESIGN	0.012277020012134503	WITHOUT_CLASSIFICATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999972480028383	WITHOUT_CLASSIFICATION	2.7519971617409788E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999993300200953	WITHOUT_CLASSIFICATION	6.699799047582275E-7	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999952272463378	WITHOUT_CLASSIFICATION	4.772753662118634E-6	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999997363231936	WITHOUT_CLASSIFICATION	2.6367680634173083E-7	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999993300200953	WITHOUT_CLASSIFICATION	6.699799047582275E-7	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999996459911228	WITHOUT_CLASSIFICATION	3.540088771780069E-7	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999320028530393	WITHOUT_CLASSIFICATION	6.799714696068843E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999762067070532	WITHOUT_CLASSIFICATION	2.3793292946747325E-5	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999233830127019	WITHOUT_CLASSIFICATION	7.661698729804517E-5	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999995326168216	WITHOUT_CLASSIFICATION	4.673831784515469E-7	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999836113497791	WITHOUT_CLASSIFICATION	1.638865022092458E-5	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999998254519402	WITHOUT_CLASSIFICATION	1.74548059895422E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999979331875176	WITHOUT_CLASSIFICATION	2.0668124823733654E-6	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999998664912217	WITHOUT_CLASSIFICATION	1.3350877830824237E-6	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999989023998577	WITHOUT_CLASSIFICATION	1.0976001423164682E-6	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999913989637739	WITHOUT_CLASSIFICATION	8.601036226220162E-6	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999715232715287	WITHOUT_CLASSIFICATION	2.8476728471362723E-5	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999863352636738	WITHOUT_CLASSIFICATION	1.3664736326265136E-5	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999679072702551	WITHOUT_CLASSIFICATION	3.209272974498004E-5	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998864814688955	WITHOUT_CLASSIFICATION	1.1351853110450885E-4	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999991345685915	WITHOUT_CLASSIFICATION	8.654314084969249E-6	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.99999482497112	WITHOUT_CLASSIFICATION	5.175028879942833E-6	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999625795688185	WITHOUT_CLASSIFICATION	3.742043118146693E-5	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999990996328474	WITHOUT_CLASSIFICATION	9.003671525378134E-7	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999950573856311	WITHOUT_CLASSIFICATION	4.942614368818843E-6	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999995607606281	WITHOUT_CLASSIFICATION	4.392393718886498E-7	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999999672030554	WITHOUT_CLASSIFICATION	3.279694466544742E-8	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.999999847750867	WITHOUT_CLASSIFICATION	1.5224913298008838E-7	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999991394543617	WITHOUT_CLASSIFICATION	8.605456382995112E-7	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999998346773505	WITHOUT_CLASSIFICATION	1.6532264953567092E-7	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999900628270724	WITHOUT_CLASSIFICATION	9.937172927603382E-6	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999998944737317	WITHOUT_CLASSIFICATION	1.0552626828048169E-7	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999997285066352	WITHOUT_CLASSIFICATION	2.714933648288081E-7	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999897730410434	WITHOUT_CLASSIFICATION	1.0226958956624532E-5	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999951758803883	WITHOUT_CLASSIFICATION	4.82411961168681E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9999704835768066	WITHOUT_CLASSIFICATION	2.951642319327868E-5	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9914847234603976	WITHOUT_CLASSIFICATION	0.008515276539602297	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.8113693800071978	WITHOUT_CLASSIFICATION	0.18863061999280217	DESIGN
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9941164830437726	WITHOUT_CLASSIFICATION	0.0058835169562273405	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999968632390632	WITHOUT_CLASSIFICATION	3.1367609367726566E-6	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999948033194761	WITHOUT_CLASSIFICATION	5.196680523910417E-6	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999983395454785	WITHOUT_CLASSIFICATION	1.6604545216005761E-6	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999899391166145	WITHOUT_CLASSIFICATION	1.0060883385473883E-5	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.999994063041669	WITHOUT_CLASSIFICATION	5.9369583309990825E-6	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999999353842859	WITHOUT_CLASSIFICATION	6.461571420170935E-8	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.999864922662018	WITHOUT_CLASSIFICATION	1.3507733798208627E-4	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999931418264704	WITHOUT_CLASSIFICATION	6.8581735296928855E-6	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.999994263596468	WITHOUT_CLASSIFICATION	5.7364035320263964E-6	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.999997997306565	WITHOUT_CLASSIFICATION	2.002693435005752E-6	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.999995166936133	WITHOUT_CLASSIFICATION	4.833063867037135E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999996871813492	WITHOUT_CLASSIFICATION	3.128186507479345E-7	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9999521516042165	WITHOUT_CLASSIFICATION	4.784839578348839E-5	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999979576580397	WITHOUT_CLASSIFICATION	2.042341960333136E-6	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999900929271807	WITHOUT_CLASSIFICATION	9.907072819393253E-6	DESIGN
// space	WITHOUT_CLASSIFICATION	0.9999966104763108	WITHOUT_CLASSIFICATION	3.3895236892079108E-6	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999991111279772	WITHOUT_CLASSIFICATION	8.888720226972055E-7	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999975816447367	WITHOUT_CLASSIFICATION	2.4183552633325287E-6	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999657868840687	WITHOUT_CLASSIFICATION	3.421311593126478E-5	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999900929271807	WITHOUT_CLASSIFICATION	9.907072819393253E-6	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.8299658407948599	DESIGN	0.17003415920514003	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.8299658407948599	DESIGN	0.17003415920514003	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999995167448203	WITHOUT_CLASSIFICATION	4.83255179552422E-7	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999701300061473	WITHOUT_CLASSIFICATION	2.9869993852587875E-5	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9992364509560682	WITHOUT_CLASSIFICATION	7.635490439317672E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9997014393079134	WITHOUT_CLASSIFICATION	2.9856069208658516E-4	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9988897203005366	WITHOUT_CLASSIFICATION	0.0011102796994634278	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9997621950222673	WITHOUT_CLASSIFICATION	2.3780497773271027E-4	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999817787152788	WITHOUT_CLASSIFICATION	1.8221284721129178E-5	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9625540798625366	DESIGN	0.037445920137463416	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999968956667813	WITHOUT_CLASSIFICATION	3.1043332187831168E-6	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9995797432715184	WITHOUT_CLASSIFICATION	4.2025672848154487E-4	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999873164642549	WITHOUT_CLASSIFICATION	1.268353574524055E-5	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999994350625	WITHOUT_CLASSIFICATION	5.649375136323915E-10	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999942061964011	WITHOUT_CLASSIFICATION	5.793803598899559E-6	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999173260638621	WITHOUT_CLASSIFICATION	8.267393613790805E-5	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9225187379334753	WITHOUT_CLASSIFICATION	0.07748126206652481	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9860102857632388	WITHOUT_CLASSIFICATION	0.01398971423676116	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999998873087333	WITHOUT_CLASSIFICATION	1.1269126668797268E-7	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999909593800875	WITHOUT_CLASSIFICATION	9.040619912502456E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999909593800875	WITHOUT_CLASSIFICATION	9.040619912502456E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999909593800875	WITHOUT_CLASSIFICATION	9.040619912502456E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999909593800875	WITHOUT_CLASSIFICATION	9.040619912502456E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999909593800875	WITHOUT_CLASSIFICATION	9.040619912502456E-5	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999951514706797	WITHOUT_CLASSIFICATION	4.848529320355752E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999965656955309	WITHOUT_CLASSIFICATION	3.434304469101363E-5	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9992255427441581	WITHOUT_CLASSIFICATION	7.74457255841799E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999803754794527	WITHOUT_CLASSIFICATION	1.9624520547300794E-5	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9950905026964261	WITHOUT_CLASSIFICATION	0.0049094973035739165	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999996295121392	WITHOUT_CLASSIFICATION	3.7048786079264566E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.999933924073275	WITHOUT_CLASSIFICATION	6.60759267249527E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999965454283341	WITHOUT_CLASSIFICATION	3.454571665892956E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9993774733241764	WITHOUT_CLASSIFICATION	6.225266758236548E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999987683999073	WITHOUT_CLASSIFICATION	1.2316000926804543E-6	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999983472775031	WITHOUT_CLASSIFICATION	1.6527224968864252E-6	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999866196450584	WITHOUT_CLASSIFICATION	1.3380354941552536E-5	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999914067499236	WITHOUT_CLASSIFICATION	8.593250076420937E-6	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999930821421315	WITHOUT_CLASSIFICATION	6.9178578684842084E-6	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999958422546231	WITHOUT_CLASSIFICATION	4.157745376945118E-6	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.9999968342890555	WITHOUT_CLASSIFICATION	3.1657109444265217E-6	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999942825399283	WITHOUT_CLASSIFICATION	5.717460071661061E-6	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.999992171312684	WITHOUT_CLASSIFICATION	7.828687315933814E-6	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999917859744787	WITHOUT_CLASSIFICATION	8.21402552127043E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999950242039795	WITHOUT_CLASSIFICATION	4.975796020518087E-6	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999953422467666	WITHOUT_CLASSIFICATION	4.657753233433167E-6	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999925250335361	WITHOUT_CLASSIFICATION	7.474966463905598E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999976651000493	WITHOUT_CLASSIFICATION	2.3348999507776016E-6	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999960815632646	WITHOUT_CLASSIFICATION	3.91843673542168E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999974994976376	WITHOUT_CLASSIFICATION	2.500502362303792E-6	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.999995763148093	WITHOUT_CLASSIFICATION	4.236851906957876E-6	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999933538264049	WITHOUT_CLASSIFICATION	6.64617359506322E-6	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999956256902559	WITHOUT_CLASSIFICATION	4.37430974406565E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999967936465153	WITHOUT_CLASSIFICATION	3.2063534846102146E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999976589179264	WITHOUT_CLASSIFICATION	2.3410820737125686E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999954206645727	WITHOUT_CLASSIFICATION	4.579335427237325E-6	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999918421462807	WITHOUT_CLASSIFICATION	8.157853719305795E-6	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999885116643616	WITHOUT_CLASSIFICATION	1.1488335638458882E-5	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.999992539789724	WITHOUT_CLASSIFICATION	7.460210275873521E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999973466438208	WITHOUT_CLASSIFICATION	2.653356179240473E-6	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.999995089780684	WITHOUT_CLASSIFICATION	4.910219316020241E-6	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999927184181782	WITHOUT_CLASSIFICATION	7.281581821825159E-6	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.9999942522322137	WITHOUT_CLASSIFICATION	5.747767786260616E-6	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999972569402755	WITHOUT_CLASSIFICATION	2.743059724549444E-6	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999954366285854	WITHOUT_CLASSIFICATION	4.563371414618887E-6	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.999995432697063	WITHOUT_CLASSIFICATION	4.5673029369265955E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999938292789448	WITHOUT_CLASSIFICATION	6.170721055273016E-6	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999979811898444	WITHOUT_CLASSIFICATION	2.0188101557212813E-6	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999966244609664	WITHOUT_CLASSIFICATION	3.375539033728517E-6	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.9999951006414208	WITHOUT_CLASSIFICATION	4.899358579155132E-6	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999926408831434	WITHOUT_CLASSIFICATION	7.359116856539557E-6	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999964738477343	WITHOUT_CLASSIFICATION	3.526152265617212E-6	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999986142157562	WITHOUT_CLASSIFICATION	1.3857842438907966E-6	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.9999975000445291	WITHOUT_CLASSIFICATION	2.4999554707886705E-6	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999972842356412	WITHOUT_CLASSIFICATION	2.7157643587933298E-6	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9992255427441581	WITHOUT_CLASSIFICATION	7.74457255841799E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999951682143917	WITHOUT_CLASSIFICATION	4.831785608317347E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999962262005055	WITHOUT_CLASSIFICATION	3.7737994943703425E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999888178953408	WITHOUT_CLASSIFICATION	1.1182104659168909E-5	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999927391437243	WITHOUT_CLASSIFICATION	7.260856275557626E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999936055816013	WITHOUT_CLASSIFICATION	6.394418398670576E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9999957650303201	WITHOUT_CLASSIFICATION	4.234969679915092E-6	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.999983831241082	WITHOUT_CLASSIFICATION	1.616875891796707E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999930762178854	WITHOUT_CLASSIFICATION	6.923782114626906E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999932724159639	WITHOUT_CLASSIFICATION	6.727584036010401E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.9999966579805029	WITHOUT_CLASSIFICATION	3.3420194972147972E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999976266646938	WITHOUT_CLASSIFICATION	2.3733353061548967E-6	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999972816406469	WITHOUT_CLASSIFICATION	2.718359353014921E-6	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.999995043326635	WITHOUT_CLASSIFICATION	4.9566733649328525E-6	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999869116718222	WITHOUT_CLASSIFICATION	1.3088328177763418E-5	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999937142803547	WITHOUT_CLASSIFICATION	6.285719645414262E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.999997975789753	WITHOUT_CLASSIFICATION	2.024210247099282E-6	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.9999908748691801	WITHOUT_CLASSIFICATION	9.125130819829179E-6	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.9999953867860639	WITHOUT_CLASSIFICATION	4.613213936060447E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999888287211284	WITHOUT_CLASSIFICATION	1.1171278871528912E-5	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999920658825455	WITHOUT_CLASSIFICATION	7.93411745443165E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999854733709761	WITHOUT_CLASSIFICATION	1.4526629023992984E-5	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.999992842598884	WITHOUT_CLASSIFICATION	7.157401115956051E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999944675124679	WITHOUT_CLASSIFICATION	5.532487532158559E-6	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999946242923717	WITHOUT_CLASSIFICATION	5.375707628226027E-6	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999953876868478	WITHOUT_CLASSIFICATION	4.612313152201486E-6	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999973797862335	WITHOUT_CLASSIFICATION	2.620213766434235E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999981542967215	WITHOUT_CLASSIFICATION	1.8457032785223902E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999947058507485	WITHOUT_CLASSIFICATION	5.294149251540026E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999976019157194	WITHOUT_CLASSIFICATION	2.3980842805046073E-6	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999974187937811	WITHOUT_CLASSIFICATION	2.5812062189707127E-6	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999985407099029	WITHOUT_CLASSIFICATION	1.4592900970533998E-6	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.9999971455146536	WITHOUT_CLASSIFICATION	2.8544853462962993E-6	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999975621673559	WITHOUT_CLASSIFICATION	2.437832644129218E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999976325985196	WITHOUT_CLASSIFICATION	2.3674014803262824E-6	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.999995112887313	WITHOUT_CLASSIFICATION	4.88711268703984E-6	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999957243310001	WITHOUT_CLASSIFICATION	4.275668999760693E-6	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.9999972525080411	WITHOUT_CLASSIFICATION	2.7474919590299906E-6	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999961295219815	WITHOUT_CLASSIFICATION	3.870478018503697E-6	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999965819160478	WITHOUT_CLASSIFICATION	3.4180839522535E-6	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999957693381026	WITHOUT_CLASSIFICATION	4.23066189733239E-6	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.9999898737712037	WITHOUT_CLASSIFICATION	1.0126228796327413E-5	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999954198947629	WITHOUT_CLASSIFICATION	4.580105237043464E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.999998464026312	WITHOUT_CLASSIFICATION	1.5359736880154779E-6	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999967387158993	WITHOUT_CLASSIFICATION	3.2612841005730618E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.999998852297016	WITHOUT_CLASSIFICATION	1.1477029839977273E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.99999748992834	WITHOUT_CLASSIFICATION	2.5100716598676994E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999968511581174	WITHOUT_CLASSIFICATION	3.1488418825518614E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999960837672214	WITHOUT_CLASSIFICATION	3.916232778636064E-6	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999965266140606	WITHOUT_CLASSIFICATION	3.4733859394011205E-6	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999884002474512	WITHOUT_CLASSIFICATION	1.15997525489146E-5	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.9999925047283938	WITHOUT_CLASSIFICATION	7.495271606176355E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999955568878081	WITHOUT_CLASSIFICATION	4.443112191864412E-6	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999974523468411	WITHOUT_CLASSIFICATION	2.547653158813295E-6	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999977455544539	WITHOUT_CLASSIFICATION	2.254445546096278E-6	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999977077186627	WITHOUT_CLASSIFICATION	2.292281337181664E-6	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999973658382456	WITHOUT_CLASSIFICATION	2.6341617544124467E-6	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999965226495907	WITHOUT_CLASSIFICATION	3.477350409424976E-6	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999918101815922	WITHOUT_CLASSIFICATION	8.1898184077744E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.9999917807560512	WITHOUT_CLASSIFICATION	8.219243948687653E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999939555758802	WITHOUT_CLASSIFICATION	6.044424119746702E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999980317803671	WITHOUT_CLASSIFICATION	1.9682196330134594E-6	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999953964507935	WITHOUT_CLASSIFICATION	4.603549206484401E-6	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999985503025297	WITHOUT_CLASSIFICATION	1.4496974703836775E-6	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999967906197648	WITHOUT_CLASSIFICATION	3.209380235277536E-6	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999954039565873	WITHOUT_CLASSIFICATION	4.596043412754865E-6	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999952653129042	WITHOUT_CLASSIFICATION	4.734687095888695E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999974771200314	WITHOUT_CLASSIFICATION	2.5228799686658977E-6	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.999996314738912	WITHOUT_CLASSIFICATION	3.685261088064039E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999971639244066	WITHOUT_CLASSIFICATION	2.836075593288937E-6	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999921763524117	WITHOUT_CLASSIFICATION	7.823647588297371E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.999993920254429	WITHOUT_CLASSIFICATION	6.079745570995099E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999959666040682	WITHOUT_CLASSIFICATION	4.0333959317209326E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.999996630383908	WITHOUT_CLASSIFICATION	3.3696160919513014E-6	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999891687539587	WITHOUT_CLASSIFICATION	1.0831246041302776E-5	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.999997704170714	WITHOUT_CLASSIFICATION	2.2958292860702574E-6	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.999997052974885	WITHOUT_CLASSIFICATION	2.9470251149277333E-6	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999984248773828	WITHOUT_CLASSIFICATION	1.5751226172830997E-6	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999957522143839	WITHOUT_CLASSIFICATION	4.24778561618677E-6	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999969186407456	WITHOUT_CLASSIFICATION	3.0813592543645135E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999972589600403	WITHOUT_CLASSIFICATION	2.7410399596117347E-6	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999914417326579	WITHOUT_CLASSIFICATION	8.558267342098198E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.999996559023406	WITHOUT_CLASSIFICATION	3.4409765940587974E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999949984684778	WITHOUT_CLASSIFICATION	5.001531522215446E-6	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999960667300657	WITHOUT_CLASSIFICATION	3.933269934224706E-6	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999946014396235	WITHOUT_CLASSIFICATION	5.398560376476284E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999950148326734	WITHOUT_CLASSIFICATION	4.985167326648721E-6	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.9999933914627941	WITHOUT_CLASSIFICATION	6.608537205904631E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.9999957227674677	WITHOUT_CLASSIFICATION	4.277232532270278E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999986656726426	WITHOUT_CLASSIFICATION	1.334327357357331E-6	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999977585154972	WITHOUT_CLASSIFICATION	2.2414845028188377E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999979759572163	WITHOUT_CLASSIFICATION	2.0240427837794455E-6	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999963510573964	WITHOUT_CLASSIFICATION	3.648942603678662E-6	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999959577110926	WITHOUT_CLASSIFICATION	4.042288907436604E-6	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999944233232783	WITHOUT_CLASSIFICATION	5.576676721730873E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999904047364165	WITHOUT_CLASSIFICATION	9.595263583421049E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999885073846959	WITHOUT_CLASSIFICATION	1.1492615303952696E-5	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999945892126938	WITHOUT_CLASSIFICATION	5.410787306152879E-6	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999809337832062	WITHOUT_CLASSIFICATION	1.9066216793820028E-5	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.999993838129433	WITHOUT_CLASSIFICATION	6.1618705670583986E-6	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999934494437589	WITHOUT_CLASSIFICATION	6.550556241062207E-6	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999827601060227	WITHOUT_CLASSIFICATION	1.7239893977302205E-5	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999892679813828	WITHOUT_CLASSIFICATION	1.073201861732416E-5	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999912362468497	WITHOUT_CLASSIFICATION	8.763753150165654E-6	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999926047921754	WITHOUT_CLASSIFICATION	7.395207824549219E-6	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.999995417795642	WITHOUT_CLASSIFICATION	4.582204357956399E-6	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999975535885527	WITHOUT_CLASSIFICATION	2.44641144736658E-6	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999902626304503	WITHOUT_CLASSIFICATION	9.737369549631175E-6	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999936536025826	WITHOUT_CLASSIFICATION	6.3463974173922755E-6	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.9999951159840708	WITHOUT_CLASSIFICATION	4.884015929293446E-6	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999974210708922	WITHOUT_CLASSIFICATION	2.5789291078165476E-6	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.9999946632337494	WITHOUT_CLASSIFICATION	5.336766250538637E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999937283358938	WITHOUT_CLASSIFICATION	6.271664106134048E-6	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999981588271738	WITHOUT_CLASSIFICATION	1.841172826104967E-6	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999911842950892	WITHOUT_CLASSIFICATION	8.815704910829057E-6	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.9999979176946985	WITHOUT_CLASSIFICATION	2.0823053014946E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999927941140726	WITHOUT_CLASSIFICATION	7.205885927368729E-6	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.99999127877111	WITHOUT_CLASSIFICATION	8.72122888985485E-6	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999962018389044	WITHOUT_CLASSIFICATION	3.7981610956900603E-6	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999965099589895	WITHOUT_CLASSIFICATION	3.4900410104821633E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999962276982535	WITHOUT_CLASSIFICATION	3.772301746456603E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999911140749863	WITHOUT_CLASSIFICATION	8.885925013660662E-6	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999941038289002	WITHOUT_CLASSIFICATION	5.896171099730029E-6	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.999994636862593	WITHOUT_CLASSIFICATION	5.363137406970202E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999965372905194	WITHOUT_CLASSIFICATION	3.4627094804775436E-6	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999956038381478	WITHOUT_CLASSIFICATION	4.39616185223869E-6	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999955264707561	WITHOUT_CLASSIFICATION	4.4735292438713715E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999972654490448	WITHOUT_CLASSIFICATION	2.734550955200579E-6	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999932253601611	WITHOUT_CLASSIFICATION	6.774639838907005E-6	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999975005971009	WITHOUT_CLASSIFICATION	2.499402898956867E-6	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999979902674898	WITHOUT_CLASSIFICATION	2.0097325102684866E-6	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999978375558901	WITHOUT_CLASSIFICATION	2.1624441097846812E-6	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999975756334711	WITHOUT_CLASSIFICATION	2.4243665288910017E-6	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.9999936931393683	WITHOUT_CLASSIFICATION	6.306860631704048E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999969504878932	WITHOUT_CLASSIFICATION	3.0495121069008452E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999985380951963	WITHOUT_CLASSIFICATION	1.4619048035587034E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999987711597536	WITHOUT_CLASSIFICATION	1.2288402464155472E-6	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999964144763006	WITHOUT_CLASSIFICATION	3.5855236992678148E-6	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.999996854458521	WITHOUT_CLASSIFICATION	3.145541478902086E-6	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.999996990886829	WITHOUT_CLASSIFICATION	3.0091131710208664E-6	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999943250376965	WITHOUT_CLASSIFICATION	5.674962303552339E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999976651031315	WITHOUT_CLASSIFICATION	2.334896868486567E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999974828159164	WITHOUT_CLASSIFICATION	2.5171840837452363E-6	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999932645689354	WITHOUT_CLASSIFICATION	6.735431064621805E-6	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.999996953562237	WITHOUT_CLASSIFICATION	3.046437762968555E-6	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.9999987988351514	WITHOUT_CLASSIFICATION	1.2011648485651436E-6	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999961322290365	WITHOUT_CLASSIFICATION	3.867770963415298E-6	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999988027598602	WITHOUT_CLASSIFICATION	1.197240139785955E-6	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999971489249865	WITHOUT_CLASSIFICATION	2.8510750136210628E-6	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999976181296013	WITHOUT_CLASSIFICATION	2.3818703986884404E-6	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999963300091105	WITHOUT_CLASSIFICATION	3.669990889632094E-6	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999914939765577	WITHOUT_CLASSIFICATION	8.506023442298571E-6	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999895491201741	WITHOUT_CLASSIFICATION	1.045087982594771E-5	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999925758722011	WITHOUT_CLASSIFICATION	7.424127798807763E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999968477390409	WITHOUT_CLASSIFICATION	3.1522609590916615E-6	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999965662260919	WITHOUT_CLASSIFICATION	3.4337739080974523E-6	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.999993021149505	WITHOUT_CLASSIFICATION	6.978850495125954E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999931082301615	WITHOUT_CLASSIFICATION	6.891769838506895E-6	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999970842770789	WITHOUT_CLASSIFICATION	2.915722920967105E-6	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999950285840563	WITHOUT_CLASSIFICATION	4.971415943703987E-6	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999929713765436	WITHOUT_CLASSIFICATION	7.028623456355386E-6	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999918284203185	WITHOUT_CLASSIFICATION	8.171579681534977E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999949915699105	WITHOUT_CLASSIFICATION	5.008430089635605E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999972497983205	WITHOUT_CLASSIFICATION	2.750201679563978E-6	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.9999945962454359	WITHOUT_CLASSIFICATION	5.403754564173789E-6	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999878538676605	WITHOUT_CLASSIFICATION	1.2146132339427606E-5	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999915260562536	WITHOUT_CLASSIFICATION	8.473943746394838E-6	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.999995975906112	WITHOUT_CLASSIFICATION	4.0240938879644695E-6	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999880665306431	WITHOUT_CLASSIFICATION	1.1933469356868888E-5	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999901045211838	WITHOUT_CLASSIFICATION	9.89547881625681E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999916625305383	WITHOUT_CLASSIFICATION	8.337469461671875E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999968229618336	WITHOUT_CLASSIFICATION	3.177038166391906E-6	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999927017411339	WITHOUT_CLASSIFICATION	7.298258866138983E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999972091475262	WITHOUT_CLASSIFICATION	2.7908524737419404E-6	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.999995087315369	WITHOUT_CLASSIFICATION	4.9126846310871235E-6	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999967931615447	WITHOUT_CLASSIFICATION	3.2068384553812747E-6	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.999995654895664	WITHOUT_CLASSIFICATION	4.345104336037591E-6	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.9999955166775064	WITHOUT_CLASSIFICATION	4.483322493585175E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999930279410274	WITHOUT_CLASSIFICATION	6.972058972648103E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999975625780748	WITHOUT_CLASSIFICATION	2.437421925273544E-6	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.99999812475765	WITHOUT_CLASSIFICATION	1.8752423498865115E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999915464113827	WITHOUT_CLASSIFICATION	8.453588617299877E-6	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999943672876688	WITHOUT_CLASSIFICATION	5.632712331251759E-6	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999921746894876	WITHOUT_CLASSIFICATION	7.825310512328283E-6	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999968235351183	WITHOUT_CLASSIFICATION	3.1764648817735693E-6	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999923055498897	WITHOUT_CLASSIFICATION	7.69445011029221E-6	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999937580579865	WITHOUT_CLASSIFICATION	6.2419420135063785E-6	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999934781236035	WITHOUT_CLASSIFICATION	6.521876396469128E-6	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999954558746442	WITHOUT_CLASSIFICATION	4.544125355783483E-6	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999959820396375	WITHOUT_CLASSIFICATION	4.0179603625179245E-6	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999961052096229	WITHOUT_CLASSIFICATION	3.894790377082009E-6	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.9999965477137053	WITHOUT_CLASSIFICATION	3.452286294818095E-6	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999973428451273	WITHOUT_CLASSIFICATION	2.6571548726671968E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.999996224343607	WITHOUT_CLASSIFICATION	3.775656393007221E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999975339057625	WITHOUT_CLASSIFICATION	2.4660942375977416E-6	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999942415254838	WITHOUT_CLASSIFICATION	5.758474516269732E-6	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999894187242702	WITHOUT_CLASSIFICATION	1.0581275729743566E-5	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999930458700382	WITHOUT_CLASSIFICATION	6.954129961801166E-6	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.999996172209808	WITHOUT_CLASSIFICATION	3.827790191960382E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999956917680203	WITHOUT_CLASSIFICATION	4.308231979764699E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999953417737752	WITHOUT_CLASSIFICATION	4.658226224727168E-6	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999912250304691	WITHOUT_CLASSIFICATION	8.774969530905005E-6	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999895920066326	WITHOUT_CLASSIFICATION	1.0407993367291958E-5	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.9999921188587677	WITHOUT_CLASSIFICATION	7.881141232368707E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.9999921748448755	WITHOUT_CLASSIFICATION	7.825155124547929E-6	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999937559985431	WITHOUT_CLASSIFICATION	6.244001456940436E-6	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999954763569845	WITHOUT_CLASSIFICATION	4.523643015539698E-6	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.99999155314003	WITHOUT_CLASSIFICATION	8.446859969992527E-6	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999979586890948	WITHOUT_CLASSIFICATION	2.0413109051672495E-6	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.9999948988754126	WITHOUT_CLASSIFICATION	5.101124587367075E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999959558813819	WITHOUT_CLASSIFICATION	4.0441186180378E-6	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999930512155812	WITHOUT_CLASSIFICATION	6.948784418841854E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999976582088178	WITHOUT_CLASSIFICATION	2.3417911821373512E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999976157869491	WITHOUT_CLASSIFICATION	2.3842130509242143E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999981966065837	WITHOUT_CLASSIFICATION	1.8033934162039406E-6	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999932354139638	WITHOUT_CLASSIFICATION	6.764586036239819E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999982620637233	WITHOUT_CLASSIFICATION	1.73793627673458E-6	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999961681205691	WITHOUT_CLASSIFICATION	3.831879430934019E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999960512571886	WITHOUT_CLASSIFICATION	3.948742811389279E-6	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.9999968865281667	WITHOUT_CLASSIFICATION	3.113471833334913E-6	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999957933978308	WITHOUT_CLASSIFICATION	4.206602169235106E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999985892838026	WITHOUT_CLASSIFICATION	1.4107161974478453E-6	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.9999970046707255	WITHOUT_CLASSIFICATION	2.9953292744341226E-6	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999970271955655	WITHOUT_CLASSIFICATION	2.9728044345068657E-6	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999965442756384	WITHOUT_CLASSIFICATION	3.4557243616662087E-6	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999953581129712	WITHOUT_CLASSIFICATION	4.641887028756456E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999965050632296	WITHOUT_CLASSIFICATION	3.494936770483594E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999985913980906	WITHOUT_CLASSIFICATION	1.4086019094040125E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999996480951697	WITHOUT_CLASSIFICATION	3.5190483034708384E-7	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999784475826838	WITHOUT_CLASSIFICATION	2.1552417316093702E-5	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999910025003333	WITHOUT_CLASSIFICATION	8.997499666710289E-6	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999922198735404	WITHOUT_CLASSIFICATION	7.78012645964556E-6	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999976694441738	WITHOUT_CLASSIFICATION	2.330555826178822E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9304136928389007	WITHOUT_CLASSIFICATION	0.06958630716109919	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9996703015882247	WITHOUT_CLASSIFICATION	3.296984117753343E-4	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9996454182174396	WITHOUT_CLASSIFICATION	3.545817825603806E-4	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999912219887497	WITHOUT_CLASSIFICATION	8.77801125034638E-6	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9998750899263567	WITHOUT_CLASSIFICATION	1.249100736433681E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9996480876028717	WITHOUT_CLASSIFICATION	3.5191239712834574E-4	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999965356998287	WITHOUT_CLASSIFICATION	3.4643001713050347E-6	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999965494192615	WITHOUT_CLASSIFICATION	3.45058073856655E-6	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999943556872837	WITHOUT_CLASSIFICATION	5.644312716320895E-6	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999990548346785	WITHOUT_CLASSIFICATION	9.451653214976403E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998463249423892	WITHOUT_CLASSIFICATION	1.536750576107835E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999395749213873	WITHOUT_CLASSIFICATION	6.0425078612695704E-5	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998843162051829	WITHOUT_CLASSIFICATION	1.1568379481708422E-4	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.999999969404575	WITHOUT_CLASSIFICATION	3.0595424977183106E-8	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998285888269	WITHOUT_CLASSIFICATION	1.7141117313566886E-7	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999963186612875	WITHOUT_CLASSIFICATION	3.681338712402357E-6	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999967582063738	WITHOUT_CLASSIFICATION	3.2417936262323665E-6	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999933563347255	WITHOUT_CLASSIFICATION	6.643665274535535E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999956599848396	WITHOUT_CLASSIFICATION	4.340015160301901E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999956599848396	WITHOUT_CLASSIFICATION	4.340015160301901E-6	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.999593517983147	WITHOUT_CLASSIFICATION	4.064820168530418E-4	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9835927121979371	WITHOUT_CLASSIFICATION	0.01640728780206287	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999427015429474	WITHOUT_CLASSIFICATION	5.729845705254618E-5	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999977222033124	WITHOUT_CLASSIFICATION	2.277796687526526E-6	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9984565488576091	WITHOUT_CLASSIFICATION	0.001543451142390801	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999998332761977	WITHOUT_CLASSIFICATION	1.667238022136227E-7	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9967261153239695	WITHOUT_CLASSIFICATION	0.003273884676030578	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999996630045589	WITHOUT_CLASSIFICATION	3.3699544111561644E-7	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9859487772943805	WITHOUT_CLASSIFICATION	0.014051222705619476	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999962030544208	WITHOUT_CLASSIFICATION	3.7969455792816917E-6	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999998791747775	WITHOUT_CLASSIFICATION	1.2082522241433885E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999991514934413	WITHOUT_CLASSIFICATION	8.485065587611837E-7	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999041613202464	WITHOUT_CLASSIFICATION	9.583867975349426E-5	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999994479059414	WITHOUT_CLASSIFICATION	5.520940584837909E-7	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999993472651562	WITHOUT_CLASSIFICATION	6.527348439047308E-7	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999988310113008	WITHOUT_CLASSIFICATION	1.1689886992240808E-6	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999567276931146	WITHOUT_CLASSIFICATION	4.327230688535467E-5	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.99995848318546	WITHOUT_CLASSIFICATION	4.151681453991182E-5	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9990749555668657	WITHOUT_CLASSIFICATION	9.25044433134388E-4	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.999998946145629	WITHOUT_CLASSIFICATION	1.0538543709945709E-6	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999999181597	WITHOUT_CLASSIFICATION	8.184035452181987E-11	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999806519577807	WITHOUT_CLASSIFICATION	1.9348042219286384E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9921622111225945	DESIGN	0.007837788877405476	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999944910616481	WITHOUT_CLASSIFICATION	5.5089383519488435E-6	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9921622111225945	DESIGN	0.007837788877405476	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999905889677408	WITHOUT_CLASSIFICATION	9.411032259143894E-6	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.999974583861335	WITHOUT_CLASSIFICATION	2.5416138664947656E-5	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.8784099552141214	WITHOUT_CLASSIFICATION	0.12159004478587863	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999511794153498	WITHOUT_CLASSIFICATION	4.882058465022561E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999983575885105	WITHOUT_CLASSIFICATION	1.6424114894424043E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999978308956756	WITHOUT_CLASSIFICATION	2.1691043244471315E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999978308956756	WITHOUT_CLASSIFICATION	2.1691043244471315E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999978308956756	WITHOUT_CLASSIFICATION	2.1691043244471315E-6	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9998557813713282	WITHOUT_CLASSIFICATION	1.4421862867179642E-4	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9998874510019102	WITHOUT_CLASSIFICATION	1.1254899808971863E-4	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999868715259113	WITHOUT_CLASSIFICATION	1.312847408877733E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999678378923613	WITHOUT_CLASSIFICATION	3.216210763866841E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999678378923613	WITHOUT_CLASSIFICATION	3.216210763866841E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999678378923613	WITHOUT_CLASSIFICATION	3.216210763866841E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999678378923613	WITHOUT_CLASSIFICATION	3.216210763866841E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999678378923613	WITHOUT_CLASSIFICATION	3.216210763866841E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999678378923613	WITHOUT_CLASSIFICATION	3.216210763866841E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966400187521	WITHOUT_CLASSIFICATION	3.359981247904209E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966400187521	WITHOUT_CLASSIFICATION	3.359981247904209E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966400187521	WITHOUT_CLASSIFICATION	3.359981247904209E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966400187521	WITHOUT_CLASSIFICATION	3.359981247904209E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.999966400187521	WITHOUT_CLASSIFICATION	3.359981247904209E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999917192531692	WITHOUT_CLASSIFICATION	8.280746830801079E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999917192531692	WITHOUT_CLASSIFICATION	8.280746830801079E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999917192531692	WITHOUT_CLASSIFICATION	8.280746830801079E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999917192531692	WITHOUT_CLASSIFICATION	8.280746830801079E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999917192531692	WITHOUT_CLASSIFICATION	8.280746830801079E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993424354124116	WITHOUT_CLASSIFICATION	6.575645875884121E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993424354124116	WITHOUT_CLASSIFICATION	6.575645875884121E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993424354124116	WITHOUT_CLASSIFICATION	6.575645875884121E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993424354124116	WITHOUT_CLASSIFICATION	6.575645875884121E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993424354124116	WITHOUT_CLASSIFICATION	6.575645875884121E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993424354124116	WITHOUT_CLASSIFICATION	6.575645875884121E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980520285420077	WITHOUT_CLASSIFICATION	0.0019479714579922179	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980520285420077	WITHOUT_CLASSIFICATION	0.0019479714579922179	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980520285420077	WITHOUT_CLASSIFICATION	0.0019479714579922179	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980520285420077	WITHOUT_CLASSIFICATION	0.0019479714579922179	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9980520285420077	WITHOUT_CLASSIFICATION	0.0019479714579922179	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9979873685199213	WITHOUT_CLASSIFICATION	0.002012631480078704	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9979873685199213	WITHOUT_CLASSIFICATION	0.002012631480078704	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9979873685199213	WITHOUT_CLASSIFICATION	0.002012631480078704	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9979873685199213	WITHOUT_CLASSIFICATION	0.002012631480078704	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9979873685199213	WITHOUT_CLASSIFICATION	0.002012631480078704	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9992255427441581	WITHOUT_CLASSIFICATION	7.74457255841799E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9992255427441581	WITHOUT_CLASSIFICATION	7.74457255841799E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9992255427441581	WITHOUT_CLASSIFICATION	7.74457255841799E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9992255427441581	WITHOUT_CLASSIFICATION	7.74457255841799E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9992255427441581	WITHOUT_CLASSIFICATION	7.74457255841799E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999803754794527	WITHOUT_CLASSIFICATION	1.9624520547300794E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999996295121392	WITHOUT_CLASSIFICATION	3.7048786079264566E-6	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.999933924073275	WITHOUT_CLASSIFICATION	6.60759267249527E-5	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999965454283341	WITHOUT_CLASSIFICATION	3.454571665892956E-5	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9993774733241764	WITHOUT_CLASSIFICATION	6.225266758236548E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.9999956139760403	WITHOUT_CLASSIFICATION	4.386023959749398E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999950242039795	WITHOUT_CLASSIFICATION	4.975796020518087E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999974994976376	WITHOUT_CLASSIFICATION	2.500502362303792E-6	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999967936465153	WITHOUT_CLASSIFICATION	3.2063534846102146E-6	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999976589179264	WITHOUT_CLASSIFICATION	2.3410820737125686E-6	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999936083786698	WITHOUT_CLASSIFICATION	6.391621330169884E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999954206645727	WITHOUT_CLASSIFICATION	4.579335427237325E-6	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999990794333793	WITHOUT_CLASSIFICATION	9.205666207417405E-7	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999970346675804	WITHOUT_CLASSIFICATION	2.9653324196334335E-6	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999977723105921	WITHOUT_CLASSIFICATION	2.2276894078647534E-6	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999949598276733	WITHOUT_CLASSIFICATION	5.040172326797108E-6	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999965460418265	WITHOUT_CLASSIFICATION	3.453958173451248E-6	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999926236009431	WITHOUT_CLASSIFICATION	7.376399056962149E-6	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999903340588818	WITHOUT_CLASSIFICATION	9.665941118189139E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999901158040119	WITHOUT_CLASSIFICATION	9.884195988148022E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999964220760589	WITHOUT_CLASSIFICATION	3.577923941124635E-6	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999923202413401	WITHOUT_CLASSIFICATION	7.67975865992624E-6	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999935430534274	WITHOUT_CLASSIFICATION	6.456946572606587E-6	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999924717366261	WITHOUT_CLASSIFICATION	7.528263373968263E-6	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999929097456103	WITHOUT_CLASSIFICATION	7.090254389729493E-6	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999941652149723	WITHOUT_CLASSIFICATION	5.834785027721074E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999945313115642	WITHOUT_CLASSIFICATION	5.4686884356799535E-6	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999974233178002	WITHOUT_CLASSIFICATION	2.576682199885271E-6	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999948629846953	WITHOUT_CLASSIFICATION	5.1370153047570346E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.999996089082672	WITHOUT_CLASSIFICATION	3.910917328079039E-6	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.9999962372825848	WITHOUT_CLASSIFICATION	3.762717415148514E-6	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.999988251805073	WITHOUT_CLASSIFICATION	1.1748194926928216E-5	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999945697459901	WITHOUT_CLASSIFICATION	5.430254009969051E-6	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999955656655929	WITHOUT_CLASSIFICATION	4.434334407063574E-6	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999939346799185	WITHOUT_CLASSIFICATION	6.065320081537777E-6	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999941254661874	WITHOUT_CLASSIFICATION	5.874533812628652E-6	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.99999253607459	WITHOUT_CLASSIFICATION	7.46392540987261E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999927475785096	WITHOUT_CLASSIFICATION	7.252421490262096E-6	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999967552609629	WITHOUT_CLASSIFICATION	3.24473903706571E-6	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999956947483662	WITHOUT_CLASSIFICATION	4.305251633744397E-6	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.999995680319443	WITHOUT_CLASSIFICATION	4.319680557015505E-6	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999950545758562	WITHOUT_CLASSIFICATION	4.945424143674186E-6	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999959737608949	WITHOUT_CLASSIFICATION	4.026239105159482E-6	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.9999850642851188	WITHOUT_CLASSIFICATION	1.4935714881292286E-5	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999903713787858	WITHOUT_CLASSIFICATION	9.628621214288931E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999940105159765	WITHOUT_CLASSIFICATION	5.989484023540625E-6	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.9999988863038551	WITHOUT_CLASSIFICATION	1.1136961449234967E-6	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999972612161708	WITHOUT_CLASSIFICATION	2.738783829101718E-6	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999964549632416	WITHOUT_CLASSIFICATION	3.5450367582364455E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.9999962262005055	WITHOUT_CLASSIFICATION	3.7737994943703425E-6	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999888178953408	WITHOUT_CLASSIFICATION	1.1182104659168909E-5	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999927391437243	WITHOUT_CLASSIFICATION	7.260856275557626E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.9999930762178854	WITHOUT_CLASSIFICATION	6.923782114626906E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.999997975789753	WITHOUT_CLASSIFICATION	2.024210247099282E-6	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999981542967215	WITHOUT_CLASSIFICATION	1.8457032785223902E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999949482211885	WITHOUT_CLASSIFICATION	5.051778811438817E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999947058507485	WITHOUT_CLASSIFICATION	5.294149251540026E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.999998464026312	WITHOUT_CLASSIFICATION	1.5359736880154779E-6	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.999998852297016	WITHOUT_CLASSIFICATION	1.1477029839977273E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999975673124999	WITHOUT_CLASSIFICATION	2.4326875002120653E-6	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.99999748992834	WITHOUT_CLASSIFICATION	2.5100716598676994E-6	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999968511581174	WITHOUT_CLASSIFICATION	3.1488418825518614E-6	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999931959236956	WITHOUT_CLASSIFICATION	6.80407630436205E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.9999945536708281	WITHOUT_CLASSIFICATION	5.446329171954172E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999980871890052	WITHOUT_CLASSIFICATION	1.9128109949256253E-6	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999967423685365	WITHOUT_CLASSIFICATION	3.2576314635368984E-6	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999936224539554	WITHOUT_CLASSIFICATION	6.377546044591624E-6	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999970307681685	WITHOUT_CLASSIFICATION	2.9692318314703437E-6	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.999996015497758	WITHOUT_CLASSIFICATION	3.984502242100681E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999966621616699	WITHOUT_CLASSIFICATION	3.3378383300125322E-6	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999954800709894	WITHOUT_CLASSIFICATION	4.519929010606447E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999969523841308	WITHOUT_CLASSIFICATION	3.047615869179264E-6	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999985075960489	WITHOUT_CLASSIFICATION	1.492403951139124E-6	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999962204927157	WITHOUT_CLASSIFICATION	3.7795072841709073E-6	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999975580950666	WITHOUT_CLASSIFICATION	2.441904933261997E-6	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999937122432062	WITHOUT_CLASSIFICATION	6.287756793797707E-6	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999972250265569	WITHOUT_CLASSIFICATION	2.77497344313528E-6	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999940388862709	WITHOUT_CLASSIFICATION	5.961113729096171E-6	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999868965713392	WITHOUT_CLASSIFICATION	1.31034286608446E-5	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.999990329116196	WITHOUT_CLASSIFICATION	9.670883803910847E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.999994393299431	WITHOUT_CLASSIFICATION	5.6067005689941486E-6	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999956474786115	WITHOUT_CLASSIFICATION	4.352521388493479E-6	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999944830736264	WITHOUT_CLASSIFICATION	5.51692637369996E-6	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999940105490885	WITHOUT_CLASSIFICATION	5.989450911451805E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999969905289261	WITHOUT_CLASSIFICATION	3.009471073943239E-6	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999980539200418	WITHOUT_CLASSIFICATION	1.946079958113433E-6	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999957438504652	WITHOUT_CLASSIFICATION	4.2561495347271745E-6	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999941568494345	WITHOUT_CLASSIFICATION	5.843150565489317E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999918042597451	WITHOUT_CLASSIFICATION	8.195740254975455E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999974074969981	WITHOUT_CLASSIFICATION	2.592503001974764E-6	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.999997689542685	WITHOUT_CLASSIFICATION	2.3104573150579743E-6	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999940859078709	WITHOUT_CLASSIFICATION	5.914092129156297E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999942815260122	WITHOUT_CLASSIFICATION	5.718473987740371E-6	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999963724835621	WITHOUT_CLASSIFICATION	3.627516437827201E-6	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.999996194944787	WITHOUT_CLASSIFICATION	3.8050552129368904E-6	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.9999961439668661	WITHOUT_CLASSIFICATION	3.856033133922618E-6	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999956427967542	WITHOUT_CLASSIFICATION	4.357203245765281E-6	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.999997891821851	WITHOUT_CLASSIFICATION	2.1081781490670497E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999980317803671	WITHOUT_CLASSIFICATION	1.9682196330134594E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999956603827564	WITHOUT_CLASSIFICATION	4.3396172435661804E-6	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999953964507935	WITHOUT_CLASSIFICATION	4.603549206484401E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.999993920254429	WITHOUT_CLASSIFICATION	6.079745570995099E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.999996630383908	WITHOUT_CLASSIFICATION	3.3696160919513014E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999972589600403	WITHOUT_CLASSIFICATION	2.7410399596117347E-6	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999949984684778	WITHOUT_CLASSIFICATION	5.001531522215446E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999950148326734	WITHOUT_CLASSIFICATION	4.985167326648721E-6	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999979759572163	WITHOUT_CLASSIFICATION	2.0240427837794455E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999885073846959	WITHOUT_CLASSIFICATION	1.1492615303952696E-5	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999882245522045	WITHOUT_CLASSIFICATION	1.1775447795538895E-5	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.9999984831424249	WITHOUT_CLASSIFICATION	1.516857575103262E-6	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999970329083361	WITHOUT_CLASSIFICATION	2.9670916639418052E-6	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.999997465997489	WITHOUT_CLASSIFICATION	2.534002511085291E-6	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.999997367542984	WITHOUT_CLASSIFICATION	2.632457015991389E-6	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.9999971310428607	WITHOUT_CLASSIFICATION	2.8689571393853822E-6	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999973172317139	WITHOUT_CLASSIFICATION	2.6827682860285174E-6	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999955216032665	WITHOUT_CLASSIFICATION	4.478396733548193E-6	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999892740845192	WITHOUT_CLASSIFICATION	1.0725915480826655E-5	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.9999950103052472	WITHOUT_CLASSIFICATION	4.989694752870469E-6	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999951516976749	WITHOUT_CLASSIFICATION	4.8483023250096965E-6	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999974502534558	WITHOUT_CLASSIFICATION	2.549746544196711E-6	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999956181320147	WITHOUT_CLASSIFICATION	4.381867985382336E-6	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999970805913917	WITHOUT_CLASSIFICATION	2.919408608266297E-6	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.9999983543504278	WITHOUT_CLASSIFICATION	1.6456495721177626E-6	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999982084571065	WITHOUT_CLASSIFICATION	1.79154289353084E-6	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999952832721573	WITHOUT_CLASSIFICATION	4.716727842731642E-6	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999988141392744	WITHOUT_CLASSIFICATION	1.1858607256782545E-6	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999955677617391	WITHOUT_CLASSIFICATION	4.432238260913253E-6	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999983667784229	WITHOUT_CLASSIFICATION	1.6332215770954861E-6	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999982840453923	WITHOUT_CLASSIFICATION	1.7159546077287759E-6	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999952287729688	WITHOUT_CLASSIFICATION	4.77122703120885E-6	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999958049937683	WITHOUT_CLASSIFICATION	4.195006231699833E-6	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.9999967962435051	WITHOUT_CLASSIFICATION	3.2037564948450484E-6	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999961919880525	WITHOUT_CLASSIFICATION	3.808011947594129E-6	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999947715450442	WITHOUT_CLASSIFICATION	5.228454955705225E-6	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999938642052407	WITHOUT_CLASSIFICATION	6.135794759319573E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999966655851952	WITHOUT_CLASSIFICATION	3.3344148047852784E-6	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.9999934849572074	WITHOUT_CLASSIFICATION	6.5150427924914355E-6	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999682083472956	WITHOUT_CLASSIFICATION	3.1791652704375175E-5	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999900538317921	WITHOUT_CLASSIFICATION	9.946168207935239E-6	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999865406142058	WITHOUT_CLASSIFICATION	1.3459385794248169E-5	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.9999848482555063	WITHOUT_CLASSIFICATION	1.5151744493849954E-5	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999772747855621	WITHOUT_CLASSIFICATION	2.272521443795248E-5	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999925038511085	WITHOUT_CLASSIFICATION	7.496148891399399E-6	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.999995024122748	WITHOUT_CLASSIFICATION	4.975877252089332E-6	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.999983660226114	WITHOUT_CLASSIFICATION	1.6339773886041168E-5	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999858208562612	WITHOUT_CLASSIFICATION	1.4179143738776555E-5	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.999995609071443	WITHOUT_CLASSIFICATION	4.390928556970257E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999975395746965	WITHOUT_CLASSIFICATION	2.4604253033982653E-6	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999927941140726	WITHOUT_CLASSIFICATION	7.205885927368729E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999985694701355	WITHOUT_CLASSIFICATION	1.4305298644851839E-6	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.9999962276982535	WITHOUT_CLASSIFICATION	3.772301746456603E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999965372905194	WITHOUT_CLASSIFICATION	3.4627094804775436E-6	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999972654490448	WITHOUT_CLASSIFICATION	2.734550955200579E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999969504878932	WITHOUT_CLASSIFICATION	3.0495121069008452E-6	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999985380951963	WITHOUT_CLASSIFICATION	1.4619048035587034E-6	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999976651031315	WITHOUT_CLASSIFICATION	2.334896868486567E-6	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999974828159164	WITHOUT_CLASSIFICATION	2.5171840837452363E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999960023864185	WITHOUT_CLASSIFICATION	3.997613581493379E-6	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999965272696056	WITHOUT_CLASSIFICATION	3.472730394239088E-6	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999927269065964	WITHOUT_CLASSIFICATION	7.273093403552971E-6	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.9999951543149974	WITHOUT_CLASSIFICATION	4.845685002603528E-6	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999959849032906	WITHOUT_CLASSIFICATION	4.015096709501558E-6	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999842177424486	WITHOUT_CLASSIFICATION	1.578225755144929E-5	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999947705680219	WITHOUT_CLASSIFICATION	5.2294319781167635E-6	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999941889557059	WITHOUT_CLASSIFICATION	5.811044294050931E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999974127427466	WITHOUT_CLASSIFICATION	2.5872572534265607E-6	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999976038958196	WITHOUT_CLASSIFICATION	2.3961041803175956E-6	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999973010537636	WITHOUT_CLASSIFICATION	2.698946236447733E-6	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999948415187483	WITHOUT_CLASSIFICATION	5.15848125171393E-6	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.999994966879322	WITHOUT_CLASSIFICATION	5.033120678032161E-6	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999950026337421	WITHOUT_CLASSIFICATION	4.9973662580209785E-6	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999962254864703	WITHOUT_CLASSIFICATION	3.7745135297472333E-6	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999976667732259	WITHOUT_CLASSIFICATION	2.3332267742132836E-6	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999943647915114	WITHOUT_CLASSIFICATION	5.63520848856801E-6	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999971735290923	WITHOUT_CLASSIFICATION	2.826470907707069E-6	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999988491238997	WITHOUT_CLASSIFICATION	1.1508761002420295E-6	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999984778204662	WITHOUT_CLASSIFICATION	1.5221795338273443E-6	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999958159321535	WITHOUT_CLASSIFICATION	4.184067846488576E-6	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999944603781606	WITHOUT_CLASSIFICATION	5.5396218393565445E-6	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999979534454294	WITHOUT_CLASSIFICATION	2.0465545704727314E-6	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999959273866329	WITHOUT_CLASSIFICATION	4.072613367149391E-6	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.999995909059052	WITHOUT_CLASSIFICATION	4.090940947988479E-6	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999972161985418	WITHOUT_CLASSIFICATION	2.7838014582572917E-6	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999974385162872	WITHOUT_CLASSIFICATION	2.5614837127700764E-6	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999984342334329	WITHOUT_CLASSIFICATION	1.5657665671630827E-6	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999962696375736	WITHOUT_CLASSIFICATION	3.7303624262582622E-6	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999988515529817	WITHOUT_CLASSIFICATION	1.148447018225716E-6	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999961908520425	WITHOUT_CLASSIFICATION	3.8091479575416313E-6	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999975590077617	WITHOUT_CLASSIFICATION	2.440992238352195E-6	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999979771443167	WITHOUT_CLASSIFICATION	2.0228556833301383E-6	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999987090267578	WITHOUT_CLASSIFICATION	1.2909732422315313E-6	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999983819247982	WITHOUT_CLASSIFICATION	1.618075201809885E-6	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999985571063174	WITHOUT_CLASSIFICATION	1.4428936826082456E-6	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999980479595592	WITHOUT_CLASSIFICATION	1.95204044089999E-6	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999985645306626	WITHOUT_CLASSIFICATION	1.4354693374379977E-6	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999938238314446	WITHOUT_CLASSIFICATION	6.176168555274534E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.9999931082301615	WITHOUT_CLASSIFICATION	6.891769838506895E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999949915699105	WITHOUT_CLASSIFICATION	5.008430089635605E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999972497983205	WITHOUT_CLASSIFICATION	2.750201679563978E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999953938490401	WITHOUT_CLASSIFICATION	4.606150959849627E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999968229618336	WITHOUT_CLASSIFICATION	3.177038166391906E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.9999972091475262	WITHOUT_CLASSIFICATION	2.7908524737419404E-6	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999930279410274	WITHOUT_CLASSIFICATION	6.972058972648103E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.9999975625780748	WITHOUT_CLASSIFICATION	2.437421925273544E-6	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.999996224343607	WITHOUT_CLASSIFICATION	3.775656393007221E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.9999975339057625	WITHOUT_CLASSIFICATION	2.4660942375977416E-6	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.9999943292818478	WITHOUT_CLASSIFICATION	5.670718152135302E-6	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999873026979416	WITHOUT_CLASSIFICATION	1.2697302058523668E-5	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9999938565431824	WITHOUT_CLASSIFICATION	6.143456817577523E-6	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999945833882924	WITHOUT_CLASSIFICATION	5.416611707607E-6	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.999993823941987	WITHOUT_CLASSIFICATION	6.176058013007947E-6	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999947339627944	WITHOUT_CLASSIFICATION	5.2660372056542265E-6	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.999993652060434	WITHOUT_CLASSIFICATION	6.347939565936777E-6	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999961811310029	WITHOUT_CLASSIFICATION	3.8188689971928136E-6	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999918030722191	WITHOUT_CLASSIFICATION	8.19692778094841E-6	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999919647693952	WITHOUT_CLASSIFICATION	8.035230604827905E-6	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999935445879578	WITHOUT_CLASSIFICATION	6.455412042232723E-6	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999896395032609	WITHOUT_CLASSIFICATION	1.0360496739139504E-5	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.999989933085978	WITHOUT_CLASSIFICATION	1.0066914022042737E-5	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999923880321411	WITHOUT_CLASSIFICATION	7.611967858956876E-6	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999937699268202	WITHOUT_CLASSIFICATION	6.230073179825283E-6	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999912966624297	WITHOUT_CLASSIFICATION	8.703337570340319E-6	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999923698111952	WITHOUT_CLASSIFICATION	7.630188804786502E-6	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.9999914974571313	WITHOUT_CLASSIFICATION	8.502542868669728E-6	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999879295853763	WITHOUT_CLASSIFICATION	1.20704146235796E-5	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999955284011607	WITHOUT_CLASSIFICATION	4.471598839269765E-6	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999964941255661	WITHOUT_CLASSIFICATION	3.505874433964527E-6	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999970698900882	WITHOUT_CLASSIFICATION	2.930109911851043E-6	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999948284176176	WITHOUT_CLASSIFICATION	5.171582382349398E-6	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999878402917687	WITHOUT_CLASSIFICATION	1.215970823128517E-5	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999877966028188	WITHOUT_CLASSIFICATION	1.2203397181231553E-5	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999974416951387	WITHOUT_CLASSIFICATION	2.558304861195275E-6	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999943593408934	WITHOUT_CLASSIFICATION	5.640659106628199E-6	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999959059044881	WITHOUT_CLASSIFICATION	4.094095511969169E-6	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999924362805511	WITHOUT_CLASSIFICATION	7.563719448893299E-6	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999956816970071	WITHOUT_CLASSIFICATION	4.318302992902351E-6	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999894914661592	WITHOUT_CLASSIFICATION	1.0508533840679485E-5	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999965209914979	WITHOUT_CLASSIFICATION	3.4790085019349404E-6	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.999996617063192	WITHOUT_CLASSIFICATION	3.3829368081406997E-6	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.999997484707543	WITHOUT_CLASSIFICATION	2.5152924569926854E-6	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.9999954572315718	WITHOUT_CLASSIFICATION	4.542768428179909E-6	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999977273334788	WITHOUT_CLASSIFICATION	2.2726665212443015E-6	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999965430472708	WITHOUT_CLASSIFICATION	3.456952729201954E-6	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999934951005991	WITHOUT_CLASSIFICATION	6.504899400949225E-6	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999950366790156	WITHOUT_CLASSIFICATION	4.963320984536565E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999939153814524	WITHOUT_CLASSIFICATION	6.0846185475687544E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.9999956917680203	WITHOUT_CLASSIFICATION	4.308231979764699E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999953417737752	WITHOUT_CLASSIFICATION	4.658226224727168E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999976582088178	WITHOUT_CLASSIFICATION	2.3417911821373512E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999951470735199	WITHOUT_CLASSIFICATION	4.852926480134605E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999981966065837	WITHOUT_CLASSIFICATION	1.8033934162039406E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999982620637233	WITHOUT_CLASSIFICATION	1.73793627673458E-6	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999960512571886	WITHOUT_CLASSIFICATION	3.948742811389279E-6	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999965050632296	WITHOUT_CLASSIFICATION	3.494936770483594E-6	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999985913980906	WITHOUT_CLASSIFICATION	1.4086019094040125E-6	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.9999930484345	WITHOUT_CLASSIFICATION	6.951565499929389E-6	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999969007648345	WITHOUT_CLASSIFICATION	3.099235165535526E-6	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999973262176934	WITHOUT_CLASSIFICATION	2.6737823066646597E-6	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.9999965299962996	WITHOUT_CLASSIFICATION	3.470003700317095E-6	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999889639022017	WITHOUT_CLASSIFICATION	1.1036097798326399E-5	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999893042048364	WITHOUT_CLASSIFICATION	1.0695795163577605E-5	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999933962048007	WITHOUT_CLASSIFICATION	6.6037951993071285E-6	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999927276377129	WITHOUT_CLASSIFICATION	7.27236228715584E-6	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999950877152713	WITHOUT_CLASSIFICATION	4.912284728585074E-6	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999940545771213	WITHOUT_CLASSIFICATION	5.945422878577013E-6	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.99998576946824	WITHOUT_CLASSIFICATION	1.4230531759900742E-5	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999966715856032	WITHOUT_CLASSIFICATION	3.328414396736621E-6	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999984241804224	WITHOUT_CLASSIFICATION	1.575819577671018E-6	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999952354341605	WITHOUT_CLASSIFICATION	4.764565839487685E-6	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999972577947066	WITHOUT_CLASSIFICATION	2.7422052932817903E-6	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.9999986104108294	WITHOUT_CLASSIFICATION	1.3895891706924142E-6	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999932429664299	WITHOUT_CLASSIFICATION	6.757033570205449E-6	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999942506494174	WITHOUT_CLASSIFICATION	5.749350582651147E-6	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999960730076904	WITHOUT_CLASSIFICATION	3.926992309548543E-6	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999947356710506	WITHOUT_CLASSIFICATION	5.264328949433478E-6	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.999995782867061	WITHOUT_CLASSIFICATION	4.217132938883957E-6	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999978449248542	WITHOUT_CLASSIFICATION	2.155075145802735E-6	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999944795152784	WITHOUT_CLASSIFICATION	5.520484721534209E-6	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.9999955645832698	WITHOUT_CLASSIFICATION	4.435416730146692E-6	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999956707194072	WITHOUT_CLASSIFICATION	4.329280592873959E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999989458913582	WITHOUT_CLASSIFICATION	1.054108641803176E-6	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999977656961591	WITHOUT_CLASSIFICATION	2.2343038410181136E-6	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.9999976946225991	WITHOUT_CLASSIFICATION	2.305377400827631E-6	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999959963295154	WITHOUT_CLASSIFICATION	4.003670484626796E-6	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999968098655484	WITHOUT_CLASSIFICATION	3.1901344515868455E-6	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.999997836358979	WITHOUT_CLASSIFICATION	2.163641020994083E-6	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999896044514387	WITHOUT_CLASSIFICATION	1.0395548561293393E-5	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999932828371612	WITHOUT_CLASSIFICATION	6.7171628388339665E-6	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.999996018143142	WITHOUT_CLASSIFICATION	3.981856857960672E-6	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.9999966285761127	WITHOUT_CLASSIFICATION	3.371423887302157E-6	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999981713164912	WITHOUT_CLASSIFICATION	1.8286835087970305E-6	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999980767816017	WITHOUT_CLASSIFICATION	1.923218398329092E-6	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999926726998268	WITHOUT_CLASSIFICATION	7.327300173103107E-6	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999966164015183	WITHOUT_CLASSIFICATION	3.3835984816301866E-6	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9996703015882247	WITHOUT_CLASSIFICATION	3.296984117753343E-4	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9996454182174396	WITHOUT_CLASSIFICATION	3.545817825603806E-4	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999965494192615	WITHOUT_CLASSIFICATION	3.45058073856655E-6	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999990548346785	WITHOUT_CLASSIFICATION	9.451653214976403E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998463249423892	WITHOUT_CLASSIFICATION	1.536750576107835E-4	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999395749213873	WITHOUT_CLASSIFICATION	6.0425078612695704E-5	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998843162051829	WITHOUT_CLASSIFICATION	1.1568379481708422E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999585152845369	WITHOUT_CLASSIFICATION	4.148471546307691E-5	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.999996401509257	WITHOUT_CLASSIFICATION	3.598490743147029E-6	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999956574542668	WITHOUT_CLASSIFICATION	4.342545733167067E-6	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.9999989244105504	WITHOUT_CLASSIFICATION	1.0755894496675963E-6	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999973121567538	WITHOUT_CLASSIFICATION	2.6878432462796258E-6	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999956521527239	WITHOUT_CLASSIFICATION	4.3478472761434544E-6	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999978543767793	WITHOUT_CLASSIFICATION	2.14562322068086E-6	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999986390709716	WITHOUT_CLASSIFICATION	1.360929028299396E-6	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999977036367498	WITHOUT_CLASSIFICATION	2.296363250324493E-6	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999939892194821	WITHOUT_CLASSIFICATION	6.010780517866643E-6	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999976059685852	WITHOUT_CLASSIFICATION	2.3940314147450363E-6	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999950413238177	WITHOUT_CLASSIFICATION	4.958676182366375E-6	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999956620450888	WITHOUT_CLASSIFICATION	4.337954911180712E-6	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999980846328975	WITHOUT_CLASSIFICATION	1.9153671024970167E-6	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.999996553138956	WITHOUT_CLASSIFICATION	3.446861044028396E-6	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999956313241707	WITHOUT_CLASSIFICATION	4.368675829218729E-6	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.9999895434323165	WITHOUT_CLASSIFICATION	1.0456567683490142E-5	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999964446252092	WITHOUT_CLASSIFICATION	3.5553747906491924E-6	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999988314728776	WITHOUT_CLASSIFICATION	1.168527122333569E-6	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999988661486098	WITHOUT_CLASSIFICATION	1.1338513901860427E-6	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.999996668177865	WITHOUT_CLASSIFICATION	3.331822135061505E-6	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999987441837997	WITHOUT_CLASSIFICATION	1.2558162002748281E-6	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999954789864989	WITHOUT_CLASSIFICATION	4.521013501148423E-6	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999992076873683	WITHOUT_CLASSIFICATION	7.923126317752023E-7	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999964869928162	WITHOUT_CLASSIFICATION	3.5130071839315185E-6	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999995880252546	WITHOUT_CLASSIFICATION	4.119747453583156E-7	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999389182446384	WITHOUT_CLASSIFICATION	6.108175536154539E-5	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999286205018328	WITHOUT_CLASSIFICATION	7.137949816711136E-5	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999997964523141	WITHOUT_CLASSIFICATION	2.0354768602773767E-7	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999638842074801	WITHOUT_CLASSIFICATION	3.6115792519991984E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998285888269	WITHOUT_CLASSIFICATION	1.7141117313566886E-7	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999963186612875	WITHOUT_CLASSIFICATION	3.681338712402357E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999956599848396	WITHOUT_CLASSIFICATION	4.340015160301901E-6	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999956599848396	WITHOUT_CLASSIFICATION	4.340015160301901E-6	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.8295704669778071	WITHOUT_CLASSIFICATION	0.17042953302219283	DESIGN
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999996206067211	WITHOUT_CLASSIFICATION	3.793932789060885E-7	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999376379378	WITHOUT_CLASSIFICATION	6.236206218380423E-8	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999958526383854	WITHOUT_CLASSIFICATION	4.147361614623987E-6	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9987624091904977	WITHOUT_CLASSIFICATION	0.0012375908095021643	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999306530991219	WITHOUT_CLASSIFICATION	6.934690087810448E-5	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9967410567671012	WITHOUT_CLASSIFICATION	0.0032589432328988623	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999988917186777	WITHOUT_CLASSIFICATION	1.1082813222851935E-6	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999388571343771	WITHOUT_CLASSIFICATION	6.114286562291916E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999993894747554	WITHOUT_CLASSIFICATION	6.105252445946627E-7	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9994740846518627	WITHOUT_CLASSIFICATION	5.259153481372335E-4	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9998214842508283	WITHOUT_CLASSIFICATION	1.785157491718381E-4	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999353005536765	WITHOUT_CLASSIFICATION	6.469944632348274E-5	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.999943234820948	WITHOUT_CLASSIFICATION	5.676517905199337E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999353265340427	WITHOUT_CLASSIFICATION	6.467346595734498E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999353265340427	WITHOUT_CLASSIFICATION	6.467346595734498E-5	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9990752545369822	WITHOUT_CLASSIFICATION	9.247454630178422E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999872930484159	WITHOUT_CLASSIFICATION	1.2706951584184729E-5	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999998704169	WITHOUT_CLASSIFICATION	1.2958311083546013E-10	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999950915329914	WITHOUT_CLASSIFICATION	4.908467008596643E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999948474079271	WITHOUT_CLASSIFICATION	5.152592072862074E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999571003824	WITHOUT_CLASSIFICATION	4.2899617603600847E-7	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999829066776983	WITHOUT_CLASSIFICATION	1.7093322301724518E-5	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999571003824	WITHOUT_CLASSIFICATION	4.2899617603600847E-7	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999954391383182	WITHOUT_CLASSIFICATION	4.560861681788562E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9982018458201286	WITHOUT_CLASSIFICATION	0.0017981541798714595	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.735355213641327	DESIGN	0.2646447863586728	WITHOUT_CLASSIFICATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.5312167398546922	DESIGN	0.46878326014530786	WITHOUT_CLASSIFICATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9841548969398511	WITHOUT_CLASSIFICATION	0.01584510306014892	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.913912527861	WITHOUT_CLASSIFICATION	0.08608747213900005	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999987280501432	WITHOUT_CLASSIFICATION	1.271949856700529E-6	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999945990589179	WITHOUT_CLASSIFICATION	5.400941082086041E-6	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999921081397656	WITHOUT_CLASSIFICATION	7.891860234502187E-6	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.5626871418194876	DESIGN	0.43731285818051246	WITHOUT_CLASSIFICATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9865929234270104	WITHOUT_CLASSIFICATION	0.013407076572989481	DESIGN
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999995318623117	WITHOUT_CLASSIFICATION	4.6813768833655926E-7	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999999764776883	WITHOUT_CLASSIFICATION	2.352231169999175E-7	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998435089799922	WITHOUT_CLASSIFICATION	1.5649102000785798E-4	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999948369004	WITHOUT_CLASSIFICATION	5.163099608075999E-9	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999948369004	WITHOUT_CLASSIFICATION	5.163099608075999E-9	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9996612835250389	WITHOUT_CLASSIFICATION	3.387164749610586E-4	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999999925638431	WITHOUT_CLASSIFICATION	7.43615693089069E-9	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999756952986901	WITHOUT_CLASSIFICATION	2.4304701309860448E-5	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999986399666154	WITHOUT_CLASSIFICATION	1.3600333845176933E-6	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999900272555405	WITHOUT_CLASSIFICATION	9.972744459384469E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999571003824	WITHOUT_CLASSIFICATION	4.2899617603600847E-7	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999735345511771	WITHOUT_CLASSIFICATION	2.6465448822869768E-5	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999992349554442	WITHOUT_CLASSIFICATION	7.650445556871007E-7	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999251323691482	WITHOUT_CLASSIFICATION	7.486763085185174E-5	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999182344882772	WITHOUT_CLASSIFICATION	8.17655117228055E-5	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999114997677	WITHOUT_CLASSIFICATION	8.850023229159836E-8	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.999996595740605	WITHOUT_CLASSIFICATION	3.404259395069829E-6	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999998606973739	WITHOUT_CLASSIFICATION	1.3930262616800124E-7	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999930548319089	WITHOUT_CLASSIFICATION	6.945168091108537E-6	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.5159994351793126	DESIGN	0.48400056482068743	WITHOUT_CLASSIFICATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9873633727480139	WITHOUT_CLASSIFICATION	0.012636627251986025	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999967869995393	WITHOUT_CLASSIFICATION	3.2130004605690507E-6	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999976606492531	WITHOUT_CLASSIFICATION	2.3393507468342494E-6	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.831077495817147	WITHOUT_CLASSIFICATION	0.16892250418285304	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999998356086914	WITHOUT_CLASSIFICATION	1.6439130859822024E-6	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.511207907224313	WITHOUT_CLASSIFICATION	0.48879209277568714	DESIGN
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999916250659321	WITHOUT_CLASSIFICATION	8.374934067829058E-6	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.999998472808227	WITHOUT_CLASSIFICATION	1.5271917730353226E-6	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9996041573962954	WITHOUT_CLASSIFICATION	3.958426037046747E-4	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.999996338486219	WITHOUT_CLASSIFICATION	3.6615137808879065E-6	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999667150898905	WITHOUT_CLASSIFICATION	3.328491010947097E-5	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999592274242024	WITHOUT_CLASSIFICATION	4.077257579747752E-5	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999537569789916	WITHOUT_CLASSIFICATION	4.624302100849117E-5	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999593365849073	WITHOUT_CLASSIFICATION	4.066341509260532E-5	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999993887054742	WITHOUT_CLASSIFICATION	6.112945258303665E-7	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999966968631268	WITHOUT_CLASSIFICATION	3.303136873197946E-6	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999705458169226	WITHOUT_CLASSIFICATION	2.9454183077348847E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9987506028242353	WITHOUT_CLASSIFICATION	0.0012493971757645632	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999937344292621	WITHOUT_CLASSIFICATION	6.265570738025019E-6	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9996263404857129	WITHOUT_CLASSIFICATION	3.736595142871705E-4	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999911458760117	WITHOUT_CLASSIFICATION	8.854123988280506E-6	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999885613246089	WITHOUT_CLASSIFICATION	1.1438675391150013E-5	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999994445298171	WITHOUT_CLASSIFICATION	5.554701828272352E-7	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999981589403051	WITHOUT_CLASSIFICATION	1.8410596949678316E-6	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999629008568145	WITHOUT_CLASSIFICATION	3.709914318547061E-5	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999492631093098	WITHOUT_CLASSIFICATION	5.073689069022004E-5	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9993519093749804	WITHOUT_CLASSIFICATION	6.480906250195971E-4	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999922877675959	WITHOUT_CLASSIFICATION	7.712232404151515E-6	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9999948244603032	WITHOUT_CLASSIFICATION	5.1755396969053756E-6	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9986667882290188	WITHOUT_CLASSIFICATION	0.0013332117709811886	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9998915428872874	WITHOUT_CLASSIFICATION	1.0845711271260488E-4	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999585152845369	WITHOUT_CLASSIFICATION	4.148471546307691E-5	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999965496158448	WITHOUT_CLASSIFICATION	3.4503841551415268E-6	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.999997589313987	WITHOUT_CLASSIFICATION	2.4106860131014975E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999241480027927	WITHOUT_CLASSIFICATION	7.585199720724097E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999992486918707	WITHOUT_CLASSIFICATION	7.513081292646203E-7	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9982018458201286	WITHOUT_CLASSIFICATION	0.0017981541798714595	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9986469891466415	WITHOUT_CLASSIFICATION	0.0013530108533585123	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9930986458955955	WITHOUT_CLASSIFICATION	0.0069013541044044	DESIGN
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9930265157689033	WITHOUT_CLASSIFICATION	0.006973484231096682	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998815568752427	WITHOUT_CLASSIFICATION	1.1844312475725898E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998815568752427	WITHOUT_CLASSIFICATION	1.1844312475725898E-4	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9989303692197573	WITHOUT_CLASSIFICATION	0.00106963078024275	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9989303692197573	WITHOUT_CLASSIFICATION	0.00106963078024275	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9989303692197573	WITHOUT_CLASSIFICATION	0.00106963078024275	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999990349605972	WITHOUT_CLASSIFICATION	9.650394028408787E-7	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999990349605972	WITHOUT_CLASSIFICATION	9.650394028408787E-7	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999999423768736	WITHOUT_CLASSIFICATION	5.76231264223461E-8	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999999423768736	WITHOUT_CLASSIFICATION	5.76231264223461E-8	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999994282004196	WITHOUT_CLASSIFICATION	5.717995803087055E-7	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999945202075999	WITHOUT_CLASSIFICATION	5.479792399997988E-6	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999987138139569	WITHOUT_CLASSIFICATION	1.286186043184519E-6	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999987138139569	WITHOUT_CLASSIFICATION	1.286186043184519E-6	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9998219016935815	WITHOUT_CLASSIFICATION	1.780983064185519E-4	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.999896481477073	WITHOUT_CLASSIFICATION	1.0351852292695524E-4	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999904887684421	WITHOUT_CLASSIFICATION	9.511231557877601E-6	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9991619557798673	WITHOUT_CLASSIFICATION	8.380442201327285E-4	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9996659208827969	WITHOUT_CLASSIFICATION	3.3407911720302933E-4	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9990220692699815	WITHOUT_CLASSIFICATION	9.779307300185384E-4	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999568787696931	WITHOUT_CLASSIFICATION	4.3121230306926E-5	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.999708243205678	WITHOUT_CLASSIFICATION	2.917567943219536E-4	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999986419191961	WITHOUT_CLASSIFICATION	1.3580808040292485E-6	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999948716147489	WITHOUT_CLASSIFICATION	5.128385251037486E-6	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9989780900922777	WITHOUT_CLASSIFICATION	0.0010219099077223607	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.999985952397692	WITHOUT_CLASSIFICATION	1.4047602307997468E-5	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.999981252250085	WITHOUT_CLASSIFICATION	1.8747749914868212E-5	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.9999688272044702	WITHOUT_CLASSIFICATION	3.117279552971414E-5	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9998928377514035	WITHOUT_CLASSIFICATION	1.0716224859647036E-4	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9725045734459737	WITHOUT_CLASSIFICATION	0.027495426554026252	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9475773008931466	WITHOUT_CLASSIFICATION	0.05242269910685343	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999962941859506	WITHOUT_CLASSIFICATION	3.7058140492764413E-6	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999940384326315	WITHOUT_CLASSIFICATION	5.961567368650003E-6	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9393052134395765	WITHOUT_CLASSIFICATION	0.06069478656042338	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999989872781035	WITHOUT_CLASSIFICATION	1.0127218964053452E-6	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999973098994083	WITHOUT_CLASSIFICATION	2.6901005916293493E-6	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999992079754898	WITHOUT_CLASSIFICATION	7.920245101657083E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999984353134911	WITHOUT_CLASSIFICATION	1.564686508895587E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999961460436808	WITHOUT_CLASSIFICATION	3.853956319184902E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999933938250588	WITHOUT_CLASSIFICATION	6.606174941210414E-6	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998638564777	WITHOUT_CLASSIFICATION	1.3614352237085267E-7	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999992132230314	WITHOUT_CLASSIFICATION	7.867769686438973E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999995415957273	WITHOUT_CLASSIFICATION	4.584042726902781E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999988709205947	WITHOUT_CLASSIFICATION	1.1290794053054662E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999980646094635	WITHOUT_CLASSIFICATION	1.93539053654278E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999985076180787	WITHOUT_CLASSIFICATION	1.492381921261266E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996324175262	WITHOUT_CLASSIFICATION	3.6758247384555507E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999989967170549	WITHOUT_CLASSIFICATION	1.0032829451196212E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996324175262	WITHOUT_CLASSIFICATION	3.6758247384555507E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996324175262	WITHOUT_CLASSIFICATION	3.6758247384555507E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996324175262	WITHOUT_CLASSIFICATION	3.6758247384555507E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996324175262	WITHOUT_CLASSIFICATION	3.6758247384555507E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996324175262	WITHOUT_CLASSIFICATION	3.6758247384555507E-7	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996324175262	WITHOUT_CLASSIFICATION	3.6758247384555507E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999989967170549	WITHOUT_CLASSIFICATION	1.0032829451196212E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999989967170549	WITHOUT_CLASSIFICATION	1.0032829451196212E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999989967170549	WITHOUT_CLASSIFICATION	1.0032829451196212E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999989967170549	WITHOUT_CLASSIFICATION	1.0032829451196212E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999989967170549	WITHOUT_CLASSIFICATION	1.0032829451196212E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999989967170549	WITHOUT_CLASSIFICATION	1.0032829451196212E-6	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9997768581552049	WITHOUT_CLASSIFICATION	2.2314184479510184E-4	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999989798185538	WITHOUT_CLASSIFICATION	1.0201814462091473E-6	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999992148630517	WITHOUT_CLASSIFICATION	7.851369483822991E-7	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999618784471432	WITHOUT_CLASSIFICATION	3.812155285677636E-5	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999951739430768	WITHOUT_CLASSIFICATION	4.8260569232025735E-5	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999832926520555	WITHOUT_CLASSIFICATION	1.670734794448709E-5	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999989111787952	WITHOUT_CLASSIFICATION	1.0888212047476337E-6	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999991055588529	WITHOUT_CLASSIFICATION	8.944411470114535E-7	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999904434283671	WITHOUT_CLASSIFICATION	9.556571632961157E-6	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999718342083831	WITHOUT_CLASSIFICATION	2.8165791616916667E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9997466302831477	WITHOUT_CLASSIFICATION	2.533697168523152E-4	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999993766350698	WITHOUT_CLASSIFICATION	6.233649303533955E-7	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999999923142874	WITHOUT_CLASSIFICATION	7.685712600854772E-8	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9998233214771944	WITHOUT_CLASSIFICATION	1.7667852280552754E-4	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999945781851136	WITHOUT_CLASSIFICATION	5.421814886350382E-6	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.8882032613752778	WITHOUT_CLASSIFICATION	0.1117967386247222	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999049989663957	WITHOUT_CLASSIFICATION	9.500103360431708E-5	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9990453896624587	WITHOUT_CLASSIFICATION	9.546103375413199E-4	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.991960909736361	WITHOUT_CLASSIFICATION	0.008039090263639106	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999883384200427	WITHOUT_CLASSIFICATION	1.1661579957301765E-4	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.999999983502622	WITHOUT_CLASSIFICATION	1.6497377996872324E-8	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999912537748032	WITHOUT_CLASSIFICATION	8.746225196706346E-6	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999829066776983	WITHOUT_CLASSIFICATION	1.7093322301724518E-5	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.7686751356567667	WITHOUT_CLASSIFICATION	0.2313248643432332	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.8693444317908013	DESIGN	0.13065556820919857	WITHOUT_CLASSIFICATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999976134093396	WITHOUT_CLASSIFICATION	2.3865906604294522E-6	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999997000119275	WITHOUT_CLASSIFICATION	2.99988072475467E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999358375177518	WITHOUT_CLASSIFICATION	6.416248224821245E-5	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999929739836287	WITHOUT_CLASSIFICATION	7.026016371230422E-6	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999709146000099	WITHOUT_CLASSIFICATION	2.9085399990153053E-5	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999861983909978	WITHOUT_CLASSIFICATION	1.3801609002280358E-5	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999996527821666	WITHOUT_CLASSIFICATION	3.472178332979899E-7	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999371384300848	WITHOUT_CLASSIFICATION	6.286156991520604E-5	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.99999872403802	WITHOUT_CLASSIFICATION	1.2759619799862504E-6	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9907733778882651	WITHOUT_CLASSIFICATION	0.009226622111734731	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999945879743334	WITHOUT_CLASSIFICATION	5.412025666513195E-6	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9969958553103763	WITHOUT_CLASSIFICATION	0.0030041446896238266	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999268245300121	WITHOUT_CLASSIFICATION	7.317546998784257E-5	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999788703758	WITHOUT_CLASSIFICATION	2.112962413340669E-8	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999828001391	WITHOUT_CLASSIFICATION	1.719986081432874E-8	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999855477461939	WITHOUT_CLASSIFICATION	1.4452253806231526E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999980986000793	WITHOUT_CLASSIFICATION	1.9013999206462843E-6	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999993644762553	WITHOUT_CLASSIFICATION	6.355237446934866E-7	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999823464300018	WITHOUT_CLASSIFICATION	1.7653569998188682E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999823464300018	WITHOUT_CLASSIFICATION	1.7653569998188682E-5	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999949109009426	WITHOUT_CLASSIFICATION	5.089099057371579E-6	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999949109009426	WITHOUT_CLASSIFICATION	5.089099057371579E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999997183117104	WITHOUT_CLASSIFICATION	2.8168828959643027E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999997183117104	WITHOUT_CLASSIFICATION	2.8168828959643027E-7	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999950234038	WITHOUT_CLASSIFICATION	4.9765962889687425E-9	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.999925249374401	WITHOUT_CLASSIFICATION	7.475062559897886E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999513768038	WITHOUT_CLASSIFICATION	4.862319623090358E-8	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999996618397663	WITHOUT_CLASSIFICATION	3.38160233622548E-7	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999975300462675	WITHOUT_CLASSIFICATION	2.4699537325862793E-6	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9239051858059222	WITHOUT_CLASSIFICATION	0.07609481419407779	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.999982644851906	WITHOUT_CLASSIFICATION	1.7355148093951398E-5	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.999999471085557	WITHOUT_CLASSIFICATION	5.289144430760133E-7	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999966813344063	WITHOUT_CLASSIFICATION	3.318665593704918E-6	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999993524145031	WITHOUT_CLASSIFICATION	6.475854968484066E-7	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9609059260410868	WITHOUT_CLASSIFICATION	0.0390940739589133	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999983868137856	WITHOUT_CLASSIFICATION	1.6131862143913208E-6	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999811326929281	WITHOUT_CLASSIFICATION	1.886730707186748E-5	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9973027173330521	WITHOUT_CLASSIFICATION	0.0026972826669479258	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9991733397121676	WITHOUT_CLASSIFICATION	8.26660287832483E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999990517493954	WITHOUT_CLASSIFICATION	9.482506045191245E-7	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9981755325194451	WITHOUT_CLASSIFICATION	0.001824467480554955	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999308886233493	WITHOUT_CLASSIFICATION	6.911137665060045E-5	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9998843744802637	WITHOUT_CLASSIFICATION	1.156255197362518E-4	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999876805793249	WITHOUT_CLASSIFICATION	1.2319420675255078E-5	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999863604092717	WITHOUT_CLASSIFICATION	1.3639590728432725E-5	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999963493088315	WITHOUT_CLASSIFICATION	3.6506911684175493E-6	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999977747109333	WITHOUT_CLASSIFICATION	2.225289066658094E-6	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999995744133356	WITHOUT_CLASSIFICATION	4.25586664376926E-7	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9998537494751722	WITHOUT_CLASSIFICATION	1.462505248277455E-4	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999989085110829	WITHOUT_CLASSIFICATION	1.0914889171327406E-6	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9999825405268373	WITHOUT_CLASSIFICATION	1.7459473162652878E-5	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999942806433	WITHOUT_CLASSIFICATION	5.719356631953773E-9	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999942806433	WITHOUT_CLASSIFICATION	5.719356631953773E-9	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999942806433	WITHOUT_CLASSIFICATION	5.719356631953773E-9	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999907188668249	WITHOUT_CLASSIFICATION	9.28113317503054E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999907188668249	WITHOUT_CLASSIFICATION	9.28113317503054E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999998356086914	WITHOUT_CLASSIFICATION	1.6439130859822024E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999998356086914	WITHOUT_CLASSIFICATION	1.6439130859822024E-6	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999989141738	WITHOUT_CLASSIFICATION	1.0858261386888566E-9	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9975675922062621	WITHOUT_CLASSIFICATION	0.00243240779373796	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999822882877384	WITHOUT_CLASSIFICATION	1.771171226156823E-5	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999999513307311	WITHOUT_CLASSIFICATION	4.866926891277086E-7	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999942806433	WITHOUT_CLASSIFICATION	5.719356631953773E-9	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999942806433	WITHOUT_CLASSIFICATION	5.719356631953773E-9	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999942806433	WITHOUT_CLASSIFICATION	5.719356631953773E-9	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999907188668249	WITHOUT_CLASSIFICATION	9.28113317503054E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999907188668249	WITHOUT_CLASSIFICATION	9.28113317503054E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999907188668249	WITHOUT_CLASSIFICATION	9.28113317503054E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999998356086914	WITHOUT_CLASSIFICATION	1.6439130859822024E-6	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999998356086914	WITHOUT_CLASSIFICATION	1.6439130859822024E-6	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999982318559	WITHOUT_CLASSIFICATION	1.768144167795199E-9	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9996220732759237	WITHOUT_CLASSIFICATION	3.779267240763322E-4	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998633572786	WITHOUT_CLASSIFICATION	1.3664272132460537E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998633572786	WITHOUT_CLASSIFICATION	1.3664272132460537E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998633572786	WITHOUT_CLASSIFICATION	1.3664272132460537E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998633572786	WITHOUT_CLASSIFICATION	1.3664272132460537E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998633572786	WITHOUT_CLASSIFICATION	1.3664272132460537E-7	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999861896151133	WITHOUT_CLASSIFICATION	1.3810384886667061E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999984720000631	WITHOUT_CLASSIFICATION	1.5279999369235008E-6	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999539231460414	WITHOUT_CLASSIFICATION	4.607685395861816E-5	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999892404639482	WITHOUT_CLASSIFICATION	1.0759536051820269E-5	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999829482905493	WITHOUT_CLASSIFICATION	1.7051709450612837E-5	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9994253084619186	WITHOUT_CLASSIFICATION	5.746915380815585E-4	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999282217137119	WITHOUT_CLASSIFICATION	7.177828628810232E-5	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999923283117413	WITHOUT_CLASSIFICATION	7.671688258535144E-6	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999888363555647	WITHOUT_CLASSIFICATION	1.1163644435293814E-5	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999671254661876	WITHOUT_CLASSIFICATION	3.2874533812368756E-5	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999913713551329	WITHOUT_CLASSIFICATION	8.628644867116733E-6	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999978761483	WITHOUT_CLASSIFICATION	2.1238517542010994E-9	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9998882313312664	WITHOUT_CLASSIFICATION	1.117686687336802E-4	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999193800547748	WITHOUT_CLASSIFICATION	8.061994522516152E-5	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9983480220111912	WITHOUT_CLASSIFICATION	0.0016519779888087985	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999356212709175	WITHOUT_CLASSIFICATION	6.437872908251415E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999356212709175	WITHOUT_CLASSIFICATION	6.437872908251415E-4	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999356212709175	WITHOUT_CLASSIFICATION	6.437872908251415E-4	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999858178646495	WITHOUT_CLASSIFICATION	1.4182135350501719E-5	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999859312637165	WITHOUT_CLASSIFICATION	1.406873628348709E-5	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999997000392556	WITHOUT_CLASSIFICATION	2.999607443031831E-7	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999764013941349	WITHOUT_CLASSIFICATION	2.3598605865077695E-5	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999979016313307	WITHOUT_CLASSIFICATION	2.0983686692506183E-6	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999984210488894	WITHOUT_CLASSIFICATION	1.5789511106384415E-6	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999990048915455	WITHOUT_CLASSIFICATION	9.951084545532101E-7	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9999985379516604	WITHOUT_CLASSIFICATION	1.4620483395875993E-6	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999994086550851	WITHOUT_CLASSIFICATION	5.913449150094019E-7	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998377218372	WITHOUT_CLASSIFICATION	1.622781628002734E-7	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.999999883895262	WITHOUT_CLASSIFICATION	1.1610473810946679E-7	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999997783911834	WITHOUT_CLASSIFICATION	2.216088166688255E-7	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999951466986129	WITHOUT_CLASSIFICATION	4.853301387195139E-6	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999999281050028	WITHOUT_CLASSIFICATION	7.189499712444951E-8	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999998934369834	WITHOUT_CLASSIFICATION	1.065630167234668E-7	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999994219472629	WITHOUT_CLASSIFICATION	5.78052737034877E-7	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999996955725088	WITHOUT_CLASSIFICATION	3.0442749119933505E-7	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999994992634275	WITHOUT_CLASSIFICATION	5.007365724838682E-7	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999986096734856	WITHOUT_CLASSIFICATION	1.3903265143619119E-6	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999990744530702	WITHOUT_CLASSIFICATION	9.255469298702174E-7	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999887161831559	WITHOUT_CLASSIFICATION	1.1283816844085412E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999851657925757	WITHOUT_CLASSIFICATION	1.483420742431019E-5	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9763217908547265	WITHOUT_CLASSIFICATION	0.02367820914527358	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999468961333071	WITHOUT_CLASSIFICATION	5.3103866692968325E-5	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999990050846044	WITHOUT_CLASSIFICATION	9.949153956464202E-7	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999995674201303	WITHOUT_CLASSIFICATION	4.3257986978515203E-7	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.999999719129682	WITHOUT_CLASSIFICATION	2.808703179373216E-7	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.999999083826866	WITHOUT_CLASSIFICATION	9.161731339668018E-7	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.999999121091338	WITHOUT_CLASSIFICATION	8.789086619594134E-7	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999996096041974	WITHOUT_CLASSIFICATION	3.9039580252862164E-7	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999992106965441	WITHOUT_CLASSIFICATION	7.893034559730998E-7	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999984524297661	WITHOUT_CLASSIFICATION	1.5475702338321937E-6	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999989270419423	WITHOUT_CLASSIFICATION	1.07295805778936E-6	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999993529190235	WITHOUT_CLASSIFICATION	6.470809764697783E-7	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.9999991143954478	WITHOUT_CLASSIFICATION	8.85604552353769E-7	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999993046741541	WITHOUT_CLASSIFICATION	6.953258459116672E-7	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999807584264524	WITHOUT_CLASSIFICATION	1.9241573547641856E-5	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999849683822072	WITHOUT_CLASSIFICATION	1.5031617792861953E-5	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999997391504607	WITHOUT_CLASSIFICATION	2.6084953927916224E-7	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9983414042058747	WITHOUT_CLASSIFICATION	0.0016585957941253019	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999621510067	WITHOUT_CLASSIFICATION	3.784899323337215E-8	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9989857009327168	WITHOUT_CLASSIFICATION	0.0010142990672832525	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9560179886475142	WITHOUT_CLASSIFICATION	0.04398201135248583	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999338742592043	WITHOUT_CLASSIFICATION	6.612574079565212E-5	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999870015328846	WITHOUT_CLASSIFICATION	1.2998467115366215E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9848766169990357	WITHOUT_CLASSIFICATION	0.015123383000964252	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999443189716323	WITHOUT_CLASSIFICATION	5.568102836770382E-5	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999443189716323	WITHOUT_CLASSIFICATION	5.568102836770382E-5	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9986798527666412	WITHOUT_CLASSIFICATION	0.0013201472333588696	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999834566276727	WITHOUT_CLASSIFICATION	1.654337232727713E-5	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9707688502775228	WITHOUT_CLASSIFICATION	0.029231149722477267	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999644674452826	WITHOUT_CLASSIFICATION	3.553255471753048E-5	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999632390409616	WITHOUT_CLASSIFICATION	3.676095903843856E-5	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999998433741862	WITHOUT_CLASSIFICATION	1.5662581377195388E-7	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9981749981056197	WITHOUT_CLASSIFICATION	0.0018250018943802135	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999912636861	WITHOUT_CLASSIFICATION	8.736313898336545E-8	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999964708869478	WITHOUT_CLASSIFICATION	3.529113052310815E-6	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999748067161843	WITHOUT_CLASSIFICATION	2.5193283815739303E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999030706234753	WITHOUT_CLASSIFICATION	9.692937652471339E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999030706234753	WITHOUT_CLASSIFICATION	9.692937652471339E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999030706234753	WITHOUT_CLASSIFICATION	9.692937652471339E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999030706234753	WITHOUT_CLASSIFICATION	9.692937652471339E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999885097357448	WITHOUT_CLASSIFICATION	1.1490264255239529E-5	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999790024264136	WITHOUT_CLASSIFICATION	2.0997573586352096E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999474073063445	WITHOUT_CLASSIFICATION	5.259269365554739E-5	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9996786875790276	WITHOUT_CLASSIFICATION	3.2131242097239396E-4	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.8064374965139726	DESIGN	0.19356250348602733	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999945371179887	WITHOUT_CLASSIFICATION	5.462882011222807E-6	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999997986372224	WITHOUT_CLASSIFICATION	2.0136277746295071E-7	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999993182868598	WITHOUT_CLASSIFICATION	6.817131401176583E-7	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999993182868598	WITHOUT_CLASSIFICATION	6.817131401176583E-7	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999212898008	WITHOUT_CLASSIFICATION	7.871019922436894E-8	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999891703632833	WITHOUT_CLASSIFICATION	1.0829636716667715E-5	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999954019304	WITHOUT_CLASSIFICATION	4.598069557380535E-9	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999996189927093	WITHOUT_CLASSIFICATION	3.8100729070686175E-6	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999996189927093	WITHOUT_CLASSIFICATION	3.8100729070686175E-6	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999531493802	WITHOUT_CLASSIFICATION	4.685061971746185E-8	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999952807012771	WITHOUT_CLASSIFICATION	4.71929872294318E-6	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999952807012771	WITHOUT_CLASSIFICATION	4.71929872294318E-6	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999498661571368	WITHOUT_CLASSIFICATION	5.013384286314554E-5	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999986733119249	WITHOUT_CLASSIFICATION	1.3266880750862072E-6	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999972525638	WITHOUT_CLASSIFICATION	2.7474361620924415E-9	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999773225407059	WITHOUT_CLASSIFICATION	2.267745929408242E-5	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.994288476889083	WITHOUT_CLASSIFICATION	0.005711523110917077	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999404348152136	WITHOUT_CLASSIFICATION	5.956518478633364E-5	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9851486232153244	WITHOUT_CLASSIFICATION	0.014851376784675525	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999709095271094	WITHOUT_CLASSIFICATION	2.9090472890588048E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999954313311	WITHOUT_CLASSIFICATION	4.568668977315679E-9	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999999841410121	WITHOUT_CLASSIFICATION	1.5858987820623852E-8	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999964756959713	WITHOUT_CLASSIFICATION	3.524304028591773E-6	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999974455274598	WITHOUT_CLASSIFICATION	2.5544725401283723E-6	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999359990066411	WITHOUT_CLASSIFICATION	6.400099335892432E-5	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999542757076726	WITHOUT_CLASSIFICATION	4.5724292327444035E-5	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.999703028103509	WITHOUT_CLASSIFICATION	2.969718964910082E-4	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9892631065882985	WITHOUT_CLASSIFICATION	0.010736893411701462	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.9999970402408225	WITHOUT_CLASSIFICATION	2.959759177556216E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.99999763859732	WITHOUT_CLASSIFICATION	2.3614026799083908E-6	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999894539877883	WITHOUT_CLASSIFICATION	1.0546012211605137E-5	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9487886599158933	WITHOUT_CLASSIFICATION	0.05121134008410666	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999675995566291	WITHOUT_CLASSIFICATION	3.24004433710125E-5	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999982867895796	WITHOUT_CLASSIFICATION	1.7132104204789877E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999957169832475	WITHOUT_CLASSIFICATION	4.28301675251278E-6	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999996429452227	WITHOUT_CLASSIFICATION	3.570547773315053E-7	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9981258678407349	WITHOUT_CLASSIFICATION	0.0018741321592651535	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.999217835734751	WITHOUT_CLASSIFICATION	7.821642652490942E-4	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999929026969827	WITHOUT_CLASSIFICATION	7.097303017224155E-6	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999990049967438	WITHOUT_CLASSIFICATION	9.950032562501898E-7	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999994637581963	WITHOUT_CLASSIFICATION	5.362418037607555E-7	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.999899481425095	WITHOUT_CLASSIFICATION	1.0051857490499368E-4	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.999991038389697	WITHOUT_CLASSIFICATION	8.961610302897852E-6	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999999526397693	WITHOUT_CLASSIFICATION	4.736023064305357E-8	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9887737799560672	DESIGN	0.01122622004393285	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.999350584577862	WITHOUT_CLASSIFICATION	6.494154221379824E-4	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.999462121068782	WITHOUT_CLASSIFICATION	5.378789312180376E-4	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9654923736916854	WITHOUT_CLASSIFICATION	0.03450762630831464	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999995623486624	WITHOUT_CLASSIFICATION	4.37651337616616E-7	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999807112134541	WITHOUT_CLASSIFICATION	1.9288786545841752E-5	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999933129147538	WITHOUT_CLASSIFICATION	6.687085246192928E-6	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9654923736916854	WITHOUT_CLASSIFICATION	0.03450762630831464	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999995623486624	WITHOUT_CLASSIFICATION	4.37651337616616E-7	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999778718156217	WITHOUT_CLASSIFICATION	2.212818437836031E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999986109826904	WITHOUT_CLASSIFICATION	1.3890173096084906E-6	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999986109826904	WITHOUT_CLASSIFICATION	1.3890173096084906E-6	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999939387227362	WITHOUT_CLASSIFICATION	6.061277263766702E-6	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.6650948934895697	WITHOUT_CLASSIFICATION	0.3349051065104302	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999431296356	WITHOUT_CLASSIFICATION	5.6870364518344455E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999998792563657	WITHOUT_CLASSIFICATION	1.207436344235391E-7	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9990925072757381	WITHOUT_CLASSIFICATION	9.074927242620471E-4	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9951746524466507	WITHOUT_CLASSIFICATION	0.00482534755334936	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.999990822897361	WITHOUT_CLASSIFICATION	9.177102639037078E-6	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9998270878506839	WITHOUT_CLASSIFICATION	1.7291214931614894E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9997385297612216	WITHOUT_CLASSIFICATION	2.6147023877848096E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999972195091603	WITHOUT_CLASSIFICATION	2.7804908397766557E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999993446597837	WITHOUT_CLASSIFICATION	6.553402162589698E-7	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999996643626394	WITHOUT_CLASSIFICATION	3.356373605929887E-7	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.999999636938186	WITHOUT_CLASSIFICATION	3.6306181389399667E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999997505672708	WITHOUT_CLASSIFICATION	2.4943272929189547E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999997505672708	WITHOUT_CLASSIFICATION	2.4943272929189547E-7	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9886873059511103	WITHOUT_CLASSIFICATION	0.011312694048889559	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9886873059511103	WITHOUT_CLASSIFICATION	0.011312694048889559	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999998892071342	WITHOUT_CLASSIFICATION	1.1079286583157444E-7	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999959916136952	WITHOUT_CLASSIFICATION	4.008386304714875E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.999997890971617	WITHOUT_CLASSIFICATION	2.109028382972976E-6	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999971942440546	WITHOUT_CLASSIFICATION	2.805755945401059E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999996727661067	WITHOUT_CLASSIFICATION	3.2723389321857896E-7	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999970090125828	WITHOUT_CLASSIFICATION	2.9909874172257125E-6	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999431296356	WITHOUT_CLASSIFICATION	5.6870364518344455E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999998792563657	WITHOUT_CLASSIFICATION	1.207436344235391E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9997385297612216	WITHOUT_CLASSIFICATION	2.6147023877848096E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999972195091603	WITHOUT_CLASSIFICATION	2.7804908397766557E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999339016898129	WITHOUT_CLASSIFICATION	6.609831018710945E-5	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999957792395967	WITHOUT_CLASSIFICATION	4.220760403318944E-6	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999924264167125	WITHOUT_CLASSIFICATION	7.573583287482663E-6	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999999356271099	WITHOUT_CLASSIFICATION	6.437289013520635E-8	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999996250747721	WITHOUT_CLASSIFICATION	3.7492522788158165E-7	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999991541006606	WITHOUT_CLASSIFICATION	8.458993394471404E-7	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999744706319508	WITHOUT_CLASSIFICATION	2.552936804923485E-5	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999990915739866	WITHOUT_CLASSIFICATION	9.084260134293723E-7	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999998612837998	WITHOUT_CLASSIFICATION	1.3871620008382012E-7	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999900769275676	WITHOUT_CLASSIFICATION	9.923072432357607E-6	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999111214344	WITHOUT_CLASSIFICATION	8.887856564347815E-8	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999786181587	WITHOUT_CLASSIFICATION	2.1381841353314378E-8	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.9722445879178995	WITHOUT_CLASSIFICATION	0.02775541208210051	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999941599632204	WITHOUT_CLASSIFICATION	5.840036779608106E-6	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999505262912701	WITHOUT_CLASSIFICATION	4.947370872981514E-5	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9659455336355841	WITHOUT_CLASSIFICATION	0.03405446636441583	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999926215402086	WITHOUT_CLASSIFICATION	7.378459791411129E-6	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999971345400696	WITHOUT_CLASSIFICATION	2.8654599304284323E-6	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999983744848246	WITHOUT_CLASSIFICATION	1.625515175362704E-6	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999996130032283	WITHOUT_CLASSIFICATION	3.86996771742162E-7	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999992394007227	WITHOUT_CLASSIFICATION	7.605992773108476E-7	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999992394007227	WITHOUT_CLASSIFICATION	7.605992773108476E-7	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999997254687966	WITHOUT_CLASSIFICATION	2.745312034978247E-7	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999999180119048	WITHOUT_CLASSIFICATION	8.198809523943933E-8	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9995491408755564	WITHOUT_CLASSIFICATION	4.508591244436364E-4	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999945378020237	WITHOUT_CLASSIFICATION	5.4621979762587095E-6	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999945378020237	WITHOUT_CLASSIFICATION	5.4621979762587095E-6	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999924264167125	WITHOUT_CLASSIFICATION	7.573583287482663E-6	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999138063007815	WITHOUT_CLASSIFICATION	8.619369921847935E-5	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999904876134443	WITHOUT_CLASSIFICATION	9.512386555680292E-6	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999968977075252	WITHOUT_CLASSIFICATION	3.1022924747552035E-6	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999974339288094	WITHOUT_CLASSIFICATION	2.566071190692953E-6	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999879600723797	WITHOUT_CLASSIFICATION	1.2039927620351298E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996713247811153	WITHOUT_CLASSIFICATION	3.2867521888461216E-4	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.999997053472456	WITHOUT_CLASSIFICATION	2.9465275438737807E-6	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.999955063196296	WITHOUT_CLASSIFICATION	4.493680370406974E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999995690672978	WITHOUT_CLASSIFICATION	4.309327022231019E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9993708186585157	WITHOUT_CLASSIFICATION	6.291813414841452E-4	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9998888024409731	WITHOUT_CLASSIFICATION	1.1119755902692975E-4	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9979279061615652	WITHOUT_CLASSIFICATION	0.0020720938384346478	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999916784113377	WITHOUT_CLASSIFICATION	8.321588662286448E-6	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9867807905146624	WITHOUT_CLASSIFICATION	0.013219209485337573	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999943033980824	WITHOUT_CLASSIFICATION	5.696601917715568E-6	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999646288435762	WITHOUT_CLASSIFICATION	3.537115642378007E-5	DESIGN
// states	WITHOUT_CLASSIFICATION	0.999998781310465	WITHOUT_CLASSIFICATION	1.21868953491007E-6	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.999924556290029	WITHOUT_CLASSIFICATION	7.544370997108242E-5	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999686712475	WITHOUT_CLASSIFICATION	3.132875247495544E-8	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999999993150324	WITHOUT_CLASSIFICATION	6.8496759620355815E-9	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999954881569114	WITHOUT_CLASSIFICATION	4.511843088582026E-6	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.998841059635434	WITHOUT_CLASSIFICATION	0.0011589403645660193	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999983874836488	WITHOUT_CLASSIFICATION	1.612516351245808E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999747740558	WITHOUT_CLASSIFICATION	2.5225944277346608E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999992784358609	WITHOUT_CLASSIFICATION	7.215641390995532E-7	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999983278903536	WITHOUT_CLASSIFICATION	1.6721096464437719E-6	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999993362642324	WITHOUT_CLASSIFICATION	6.63735767532213E-7	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999998045137537	WITHOUT_CLASSIFICATION	1.9548624633243645E-7	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999829396651645	WITHOUT_CLASSIFICATION	1.706033483546082E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999587865122	WITHOUT_CLASSIFICATION	4.1213487928280804E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999587865122	WITHOUT_CLASSIFICATION	4.1213487928280804E-8	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.999999700860877	WITHOUT_CLASSIFICATION	2.9913912296649843E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999995456947566	WITHOUT_CLASSIFICATION	4.543052435203031E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999995456947566	WITHOUT_CLASSIFICATION	4.543052435203031E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999957905825423	WITHOUT_CLASSIFICATION	4.209417457751502E-6	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999957905825423	WITHOUT_CLASSIFICATION	4.209417457751502E-6	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999992477392857	WITHOUT_CLASSIFICATION	7.522607143109748E-7	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999851210537	WITHOUT_CLASSIFICATION	1.4878946377870748E-8	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999572240054702	WITHOUT_CLASSIFICATION	4.277599452993278E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999997907204939	WITHOUT_CLASSIFICATION	2.0927950599813998E-7	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999970959640736	WITHOUT_CLASSIFICATION	2.9040359263576137E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999942473338437	WITHOUT_CLASSIFICATION	5.752666156410259E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999942473338437	WITHOUT_CLASSIFICATION	5.752666156410259E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999747740558	WITHOUT_CLASSIFICATION	2.5225944277346608E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999747740558	WITHOUT_CLASSIFICATION	2.5225944277346608E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999747740558	WITHOUT_CLASSIFICATION	2.5225944277346608E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999992784358609	WITHOUT_CLASSIFICATION	7.215641390995532E-7	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999587865122	WITHOUT_CLASSIFICATION	4.1213487928280804E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999587865122	WITHOUT_CLASSIFICATION	4.1213487928280804E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999587865122	WITHOUT_CLASSIFICATION	4.1213487928280804E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999992477392857	WITHOUT_CLASSIFICATION	7.522607143109748E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999992477392857	WITHOUT_CLASSIFICATION	7.522607143109748E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999992477392857	WITHOUT_CLASSIFICATION	7.522607143109748E-7	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999997907204939	WITHOUT_CLASSIFICATION	2.0927950599813998E-7	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999997907204939	WITHOUT_CLASSIFICATION	2.0927950599813998E-7	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9997417719263477	WITHOUT_CLASSIFICATION	2.5822807365229904E-4	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999994404518152	WITHOUT_CLASSIFICATION	5.595481848045193E-7	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999986661276205	WITHOUT_CLASSIFICATION	1.3338723795690718E-6	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9973427848714511	DESIGN	0.002657215128548871	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999474573251734	WITHOUT_CLASSIFICATION	5.2542674826630976E-5	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9999674368536289	WITHOUT_CLASSIFICATION	3.256314637114621E-5	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9999674368536289	WITHOUT_CLASSIFICATION	3.256314637114621E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9997659651934173	WITHOUT_CLASSIFICATION	2.3403480658273307E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996713247811153	WITHOUT_CLASSIFICATION	3.2867521888461216E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996713247811153	WITHOUT_CLASSIFICATION	3.2867521888461216E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996713247811153	WITHOUT_CLASSIFICATION	3.2867521888461216E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996713247811153	WITHOUT_CLASSIFICATION	3.2867521888461216E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996713247811153	WITHOUT_CLASSIFICATION	3.2867521888461216E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999982390391531	WITHOUT_CLASSIFICATION	1.7609608469169786E-6	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999982390391531	WITHOUT_CLASSIFICATION	1.7609608469169786E-6	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999982390391531	WITHOUT_CLASSIFICATION	1.7609608469169786E-6	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999286610574	WITHOUT_CLASSIFICATION	7.133894258630436E-8	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999862477072518	WITHOUT_CLASSIFICATION	1.3752292748288874E-5	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999992784358609	WITHOUT_CLASSIFICATION	7.215641390995532E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999992477392857	WITHOUT_CLASSIFICATION	7.522607143109748E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999992477392857	WITHOUT_CLASSIFICATION	7.522607143109748E-7	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996713247811153	WITHOUT_CLASSIFICATION	3.2867521888461216E-4	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996713247811153	WITHOUT_CLASSIFICATION	3.2867521888461216E-4	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999982390391531	WITHOUT_CLASSIFICATION	1.7609608469169786E-6	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9997659651934173	WITHOUT_CLASSIFICATION	2.3403480658273307E-4	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.999972086595304	WITHOUT_CLASSIFICATION	2.7913404695936554E-5	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999998296525525	WITHOUT_CLASSIFICATION	1.703474474736175E-7	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.999988051953679	WITHOUT_CLASSIFICATION	1.1948046320951081E-5	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9860699156979369	WITHOUT_CLASSIFICATION	0.013930084302063115	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999993350230179	WITHOUT_CLASSIFICATION	6.649769822363929E-7	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999994973793931	WITHOUT_CLASSIFICATION	5.026206069410599E-7	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999822554529371	WITHOUT_CLASSIFICATION	1.774454706291898E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9996606705755013	WITHOUT_CLASSIFICATION	3.3932942449871556E-4	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999538362272115	WITHOUT_CLASSIFICATION	4.6163772788502696E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999992392236218	WITHOUT_CLASSIFICATION	7.607763782677908E-7	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9873175616927047	WITHOUT_CLASSIFICATION	0.012682438307295365	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999997799262726	WITHOUT_CLASSIFICATION	2.2007372738172914E-7	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999521661237794	WITHOUT_CLASSIFICATION	4.7833876220637714E-5	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.999997645692488	WITHOUT_CLASSIFICATION	2.3543075120877655E-6	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.999998666551647	WITHOUT_CLASSIFICATION	1.333448352997863E-6	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9995027459461038	WITHOUT_CLASSIFICATION	4.972540538962082E-4	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999867285470592	WITHOUT_CLASSIFICATION	1.3271452940760148E-5	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9940908626167979	WITHOUT_CLASSIFICATION	0.0059091373832020596	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9986617812301922	WITHOUT_CLASSIFICATION	0.001338218769807722	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999997789377523	WITHOUT_CLASSIFICATION	2.21062247640191E-7	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999823802897951	WITHOUT_CLASSIFICATION	1.7619710204946534E-5	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999974217905129	WITHOUT_CLASSIFICATION	2.578209487059956E-6	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999997784214014	WITHOUT_CLASSIFICATION	2.2157859857443003E-7	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999981108723375	WITHOUT_CLASSIFICATION	1.8891276624349527E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999431748597888	WITHOUT_CLASSIFICATION	5.6825140211194704E-5	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9973234321498199	WITHOUT_CLASSIFICATION	0.002676567850180063	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9999638272282113	WITHOUT_CLASSIFICATION	3.617277178866248E-5	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999992968617232	WITHOUT_CLASSIFICATION	7.031382768090943E-7	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.999926312492771	WITHOUT_CLASSIFICATION	7.36875072290854E-5	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9996400341628059	WITHOUT_CLASSIFICATION	3.5996583719408485E-4	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999997684277806	WITHOUT_CLASSIFICATION	2.3157221924859928E-7	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999955121928376	WITHOUT_CLASSIFICATION	4.487807162377472E-6	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999442804542475	WITHOUT_CLASSIFICATION	5.571954575257718E-5	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999988004731946	WITHOUT_CLASSIFICATION	1.199526805372817E-6	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.999972086595304	WITHOUT_CLASSIFICATION	2.7913404695936554E-5	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999997146401242	WITHOUT_CLASSIFICATION	2.853598758031108E-7	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.99999830354953	WITHOUT_CLASSIFICATION	1.696450470003822E-6	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9996403919410595	WITHOUT_CLASSIFICATION	3.596080589405476E-4	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999983306280446	WITHOUT_CLASSIFICATION	1.6693719554301874E-6	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999983306280446	WITHOUT_CLASSIFICATION	1.6693719554301874E-6	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9998917950937501	WITHOUT_CLASSIFICATION	1.0820490624981805E-4	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9998917950937501	WITHOUT_CLASSIFICATION	1.0820490624981805E-4	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.999999963462107	WITHOUT_CLASSIFICATION	3.65378929694914E-8	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999995502937254	WITHOUT_CLASSIFICATION	4.4970627451336153E-7	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999985137654884	WITHOUT_CLASSIFICATION	1.4862345115102853E-6	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.999879750159737	WITHOUT_CLASSIFICATION	1.2024984026302734E-4	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999953876170319	WITHOUT_CLASSIFICATION	4.612382968193271E-6	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9990997569599861	WITHOUT_CLASSIFICATION	9.002430400138951E-4	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999927422978948	WITHOUT_CLASSIFICATION	7.257702105278216E-6	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999127354249321	WITHOUT_CLASSIFICATION	8.726457506790205E-5	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9987982839096288	WITHOUT_CLASSIFICATION	0.001201716090371269	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999869156768002	WITHOUT_CLASSIFICATION	1.308432319980062E-5	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999992016989653	WITHOUT_CLASSIFICATION	7.983010347756331E-7	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999922742002074	WITHOUT_CLASSIFICATION	7.725799792630996E-6	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999922742002074	WITHOUT_CLASSIFICATION	7.725799792630996E-6	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999963274809	WITHOUT_CLASSIFICATION	3.6725191302479864E-9	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9995883505385879	WITHOUT_CLASSIFICATION	4.116494614120384E-4	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999998002575123	WITHOUT_CLASSIFICATION	1.9974248760819288E-7	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999998002575123	WITHOUT_CLASSIFICATION	1.9974248760819288E-7	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999983703284	WITHOUT_CLASSIFICATION	1.629671622159162E-9	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999705379147	WITHOUT_CLASSIFICATION	2.946208533833638E-8	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999254202638727	WITHOUT_CLASSIFICATION	7.45797361273096E-5	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.999994343688439	WITHOUT_CLASSIFICATION	5.65631156106907E-6	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999992440540346	WITHOUT_CLASSIFICATION	7.559459654262966E-7	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9803344370626104	WITHOUT_CLASSIFICATION	0.0196655629373896	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9999886347286339	WITHOUT_CLASSIFICATION	1.1365271366103093E-5	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999990526891175	WITHOUT_CLASSIFICATION	9.473108825716946E-7	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999972212936549	WITHOUT_CLASSIFICATION	2.7787063450555855E-6	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999999191085133	WITHOUT_CLASSIFICATION	8.089148675833517E-8	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999577979674611	WITHOUT_CLASSIFICATION	4.220203253895642E-5	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9897098464665014	WITHOUT_CLASSIFICATION	0.010290153533498637	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999801418250192	WITHOUT_CLASSIFICATION	1.9858174980890758E-5	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9998887313623178	WITHOUT_CLASSIFICATION	1.1126863768211231E-4	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999941780001972	WITHOUT_CLASSIFICATION	5.821999802820647E-6	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999993199185454	WITHOUT_CLASSIFICATION	6.800814545085276E-7	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998824966440887	WITHOUT_CLASSIFICATION	1.175033559113061E-4	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9986326205335494	WITHOUT_CLASSIFICATION	0.001367379466450606	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999878774518	WITHOUT_CLASSIFICATION	1.2122548241611912E-8	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999901784937715	WITHOUT_CLASSIFICATION	9.82150622845079E-6	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.999787119868229	DESIGN	2.1288013177110185E-4	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999942011139216	WITHOUT_CLASSIFICATION	5.798886078385938E-6	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999979594710919	WITHOUT_CLASSIFICATION	2.0405289081257895E-6	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999995466919037	WITHOUT_CLASSIFICATION	4.5330809629761895E-7	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999992328007877	WITHOUT_CLASSIFICATION	7.671992123201299E-7	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9998679897014067	WITHOUT_CLASSIFICATION	1.320102985933752E-4	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999997176224861	WITHOUT_CLASSIFICATION	2.823775138881707E-7	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999937067197837	WITHOUT_CLASSIFICATION	6.2932802161914665E-6	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9978428633304346	WITHOUT_CLASSIFICATION	0.0021571366695653637	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999693858448	WITHOUT_CLASSIFICATION	3.06141551627666E-8	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999993709548438	WITHOUT_CLASSIFICATION	6.290451562075153E-7	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999378557801	WITHOUT_CLASSIFICATION	6.214421987049833E-8	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999974049714334	WITHOUT_CLASSIFICATION	2.5950285666336075E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999995396106168	WITHOUT_CLASSIFICATION	4.6038938322575413E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999995396106168	WITHOUT_CLASSIFICATION	4.6038938322575413E-7	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999945644270236	WITHOUT_CLASSIFICATION	5.435572976422321E-6	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999186899142996	WITHOUT_CLASSIFICATION	8.131008570036466E-5	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999925300587	WITHOUT_CLASSIFICATION	7.469941299733434E-9	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999934675100149	WITHOUT_CLASSIFICATION	6.5324899851233595E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.999957768731353	WITHOUT_CLASSIFICATION	4.223126864699086E-5	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9994525175750716	WITHOUT_CLASSIFICATION	5.474824249284361E-4	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.999975018034892	WITHOUT_CLASSIFICATION	2.4981965108047848E-5	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999880362401343	WITHOUT_CLASSIFICATION	1.1963759865585396E-5	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999889251845637	WITHOUT_CLASSIFICATION	1.1074815436256817E-5	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999789587762437	WITHOUT_CLASSIFICATION	2.1041223756334723E-5	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9972630735526452	WITHOUT_CLASSIFICATION	0.00273692644735471	DESIGN
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9994042165619172	WITHOUT_CLASSIFICATION	5.957834380827162E-4	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999990755892666	WITHOUT_CLASSIFICATION	9.244107334742284E-7	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9998825200068551	WITHOUT_CLASSIFICATION	1.1747999314496587E-4	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.999985693204639	WITHOUT_CLASSIFICATION	1.4306795361058571E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.999998260033177	WITHOUT_CLASSIFICATION	1.7399668229013047E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9983742756677614	WITHOUT_CLASSIFICATION	0.0016257243322385802	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999275716072734	WITHOUT_CLASSIFICATION	7.242839272659852E-5	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9995046228045816	WITHOUT_CLASSIFICATION	4.95377195418407E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9956512218084158	WITHOUT_CLASSIFICATION	0.004348778191584211	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9961870446081919	WITHOUT_CLASSIFICATION	0.0038129553918080637	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999962997112763	WITHOUT_CLASSIFICATION	3.7002887236840543E-6	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9687185947914418	WITHOUT_CLASSIFICATION	0.031281405208558204	DESIGN
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999978206972965	WITHOUT_CLASSIFICATION	2.179302703558618E-6	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.999429570436856	WITHOUT_CLASSIFICATION	5.704295631440132E-4	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999949964964611	WITHOUT_CLASSIFICATION	5.003503538958722E-6	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999731889467	WITHOUT_CLASSIFICATION	2.6811053161425876E-8	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999739753672	WITHOUT_CLASSIFICATION	2.6024632811167913E-8	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.99964014864337	WITHOUT_CLASSIFICATION	3.5985135663004E-4	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9991757844454625	WITHOUT_CLASSIFICATION	8.242155545373674E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999997333819941	WITHOUT_CLASSIFICATION	2.66618005912568E-7	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999998471137305	WITHOUT_CLASSIFICATION	1.5288626962013006E-7	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.999999681431926	WITHOUT_CLASSIFICATION	3.1856807399471015E-7	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999998963541697	WITHOUT_CLASSIFICATION	1.0364583026988176E-7	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999977520382509	WITHOUT_CLASSIFICATION	2.247961749138989E-6	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999982882629855	WITHOUT_CLASSIFICATION	1.7117370144674799E-6	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999896158970776	WITHOUT_CLASSIFICATION	1.0384102922481538E-5	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999987790459993	WITHOUT_CLASSIFICATION	1.2209540006402335E-6	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999974360545125	WITHOUT_CLASSIFICATION	2.563945487434618E-6	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999950949769858	WITHOUT_CLASSIFICATION	4.905023014129076E-6	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999980086891933	WITHOUT_CLASSIFICATION	1.991310806651987E-6	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998831468397	WITHOUT_CLASSIFICATION	1.168531602546262E-7	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998831468397	WITHOUT_CLASSIFICATION	1.168531602546262E-7	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999998760009168	WITHOUT_CLASSIFICATION	1.2399908325046254E-7	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999987324442251	WITHOUT_CLASSIFICATION	1.267555774936563E-6	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999999024934176	WITHOUT_CLASSIFICATION	9.750658238609603E-8	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999606245325294	WITHOUT_CLASSIFICATION	3.937546747060274E-5	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999948538250251	WITHOUT_CLASSIFICATION	5.1461749749207265E-6	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999993141755933	WITHOUT_CLASSIFICATION	6.858244067653732E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9993777975326334	WITHOUT_CLASSIFICATION	6.222024673665209E-4	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9985955471843813	WITHOUT_CLASSIFICATION	0.0014044528156187126	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999999571645786	WITHOUT_CLASSIFICATION	4.283542140628749E-8	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999920731524022	WITHOUT_CLASSIFICATION	7.92684759768392E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999745226646195	WITHOUT_CLASSIFICATION	2.547733538048742E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999853728498626	WITHOUT_CLASSIFICATION	1.4627150137479528E-5	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9829044360745502	WITHOUT_CLASSIFICATION	0.01709556392544983	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999652456570438	WITHOUT_CLASSIFICATION	3.475434295626448E-5	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9997489271760928	WITHOUT_CLASSIFICATION	2.5107282390723234E-4	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9701037612749762	DESIGN	0.029896238725023845	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9983320752831752	WITHOUT_CLASSIFICATION	0.0016679247168247284	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999864120925556	WITHOUT_CLASSIFICATION	1.3587907444491603E-5	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999816016447521	WITHOUT_CLASSIFICATION	1.8398355247803727E-5	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9992281011030059	DESIGN	7.718988969941019E-4	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999908655813177	WITHOUT_CLASSIFICATION	9.134418682442905E-6	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999946643519324	WITHOUT_CLASSIFICATION	5.335648067482408E-6	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999066474669	WITHOUT_CLASSIFICATION	9.335253307364547E-8	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.6061311348086805	DESIGN	0.39386886519131953	WITHOUT_CLASSIFICATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999999969852557	WITHOUT_CLASSIFICATION	3.014744296258699E-8	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999717107572086	WITHOUT_CLASSIFICATION	2.8289242791491776E-5	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9965632053701062	WITHOUT_CLASSIFICATION	0.0034367946298937244	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9985647405968183	WITHOUT_CLASSIFICATION	0.0014352594031816627	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999972279005211	WITHOUT_CLASSIFICATION	2.772099478924126E-6	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999983679306343	WITHOUT_CLASSIFICATION	1.632069365681762E-6	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999966575256819	WITHOUT_CLASSIFICATION	3.3424743181179993E-6	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999997979736274	WITHOUT_CLASSIFICATION	2.0202637250987922E-7	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999983679306343	WITHOUT_CLASSIFICATION	1.632069365681762E-6	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999976010118137	WITHOUT_CLASSIFICATION	2.3989881863885462E-6	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9981258678407349	WITHOUT_CLASSIFICATION	0.0018741321592651535	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.999999784205363	WITHOUT_CLASSIFICATION	2.1579463712802335E-7	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9974794256686604	DESIGN	0.0025205743313396253	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999994931093175	WITHOUT_CLASSIFICATION	5.068906825409257E-7	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998633572786	WITHOUT_CLASSIFICATION	1.3664272132460537E-7	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999995878162605	WITHOUT_CLASSIFICATION	4.1218373943572845E-7	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9998988668442224	WITHOUT_CLASSIFICATION	1.0113315577755112E-4	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.6650948934895697	WITHOUT_CLASSIFICATION	0.3349051065104302	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999901784937715	WITHOUT_CLASSIFICATION	9.82150622845079E-6	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999986661276205	WITHOUT_CLASSIFICATION	1.3338723795690718E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9942949011302555	WITHOUT_CLASSIFICATION	0.005705098869744523	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999954526564313	WITHOUT_CLASSIFICATION	4.5473435687906105E-6	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999864084386245	WITHOUT_CLASSIFICATION	1.3591561375488181E-5	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999578052079992	WITHOUT_CLASSIFICATION	4.219479200083424E-5	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999994521015436	WITHOUT_CLASSIFICATION	5.47898456391712E-7	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9992819288329489	WITHOUT_CLASSIFICATION	7.180711670512342E-4	DESIGN
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9977301600231795	WITHOUT_CLASSIFICATION	0.0022698399768205247	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9997478415562795	WITHOUT_CLASSIFICATION	2.5215844372055156E-4	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999938648991926	WITHOUT_CLASSIFICATION	6.135100807347114E-6	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999995405913328	WITHOUT_CLASSIFICATION	4.594086671367654E-7	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999994879154703	WITHOUT_CLASSIFICATION	5.120845297199364E-7	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9999144941903121	WITHOUT_CLASSIFICATION	8.550580968792646E-5	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.999999204328676	WITHOUT_CLASSIFICATION	7.956713240134975E-7	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999985360159513	WITHOUT_CLASSIFICATION	1.4639840486781623E-6	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999936083786698	WITHOUT_CLASSIFICATION	6.391621330169884E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.9999938292789448	WITHOUT_CLASSIFICATION	6.170721055273016E-6	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999989043374569	WITHOUT_CLASSIFICATION	1.0956625430768156E-6	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999551843	WITHOUT_CLASSIFICATION	4.481565318450734E-11	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9993699134355684	WITHOUT_CLASSIFICATION	6.300865644316904E-4	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9993699134355684	WITHOUT_CLASSIFICATION	6.300865644316904E-4	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999994438580821	WITHOUT_CLASSIFICATION	5.561419177925794E-7	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999999999889123	WITHOUT_CLASSIFICATION	1.1087700123476468E-10	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999998731550208	WITHOUT_CLASSIFICATION	1.2684497916581154E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8928188565071663	DESIGN	0.10718114349283368	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8928188565071663	DESIGN	0.10718114349283368	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8928188565071663	DESIGN	0.10718114349283368	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8928188565071663	DESIGN	0.10718114349283368	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999263804834863	WITHOUT_CLASSIFICATION	7.361951651373299E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9995507890995514	WITHOUT_CLASSIFICATION	4.4921090044866633E-4	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999730309551637	WITHOUT_CLASSIFICATION	2.6969044836254584E-5	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.7287389679295233	WITHOUT_CLASSIFICATION	0.2712610320704767	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998130428652	WITHOUT_CLASSIFICATION	1.8695713481075819E-7	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999999961911562	WITHOUT_CLASSIFICATION	3.808843883186065E-9	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999542108560854	WITHOUT_CLASSIFICATION	4.578914391459322E-5	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999542108560854	WITHOUT_CLASSIFICATION	4.578914391459322E-5	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9987670666613045	WITHOUT_CLASSIFICATION	0.0012329333386954507	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999967728642146	WITHOUT_CLASSIFICATION	3.2271357852252706E-6	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9995005707105561	WITHOUT_CLASSIFICATION	4.994292894439716E-4	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9956246789155104	WITHOUT_CLASSIFICATION	0.004375321084489637	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999458753363104	WITHOUT_CLASSIFICATION	5.4124663689590155E-5	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999999767313854	WITHOUT_CLASSIFICATION	2.3268614548750775E-8	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999931270507135	WITHOUT_CLASSIFICATION	6.872949286442547E-6	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999977162551895	WITHOUT_CLASSIFICATION	2.28374481050746E-6	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999909593800875	WITHOUT_CLASSIFICATION	9.040619912502456E-5	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999909593800875	WITHOUT_CLASSIFICATION	9.040619912502456E-5	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999997979736274	WITHOUT_CLASSIFICATION	2.0202637250987922E-7	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999944041361878	WITHOUT_CLASSIFICATION	5.595863812289334E-6	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999954097353865	WITHOUT_CLASSIFICATION	4.590264613480844E-6	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999913412325635	WITHOUT_CLASSIFICATION	8.658767436426557E-6	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999977632514	WITHOUT_CLASSIFICATION	2.236748537478244E-9	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999968648635285	WITHOUT_CLASSIFICATION	3.135136471501435E-6	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999960399441908	WITHOUT_CLASSIFICATION	3.960055809213939E-6	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.99997281234265	WITHOUT_CLASSIFICATION	2.7187657349992523E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999988476846888	WITHOUT_CLASSIFICATION	1.1523153112077604E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999988476846888	WITHOUT_CLASSIFICATION	1.1523153112077604E-6	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9995433784770422	WITHOUT_CLASSIFICATION	4.5662152295771385E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999991092379162	WITHOUT_CLASSIFICATION	8.907620836809366E-7	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.999999949998192	WITHOUT_CLASSIFICATION	5.00018080851461E-8	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999965997959137	WITHOUT_CLASSIFICATION	3.400204086297656E-5	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9991387755884797	WITHOUT_CLASSIFICATION	8.612244115201973E-4	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999982863561215	WITHOUT_CLASSIFICATION	1.7136438784116537E-6	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9977992148949711	WITHOUT_CLASSIFICATION	0.0022007851050287576	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999407729048393	WITHOUT_CLASSIFICATION	5.922709516071431E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999407729048393	WITHOUT_CLASSIFICATION	5.922709516071431E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999407729048393	WITHOUT_CLASSIFICATION	5.922709516071431E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999407729048393	WITHOUT_CLASSIFICATION	5.922709516071431E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999854078203295	WITHOUT_CLASSIFICATION	1.4592179670398492E-5	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999990907886204	WITHOUT_CLASSIFICATION	9.092113796278418E-7	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9996685485551503	WITHOUT_CLASSIFICATION	3.314514448496648E-4	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999379570628294	WITHOUT_CLASSIFICATION	6.20429371706211E-5	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999947752732052	WITHOUT_CLASSIFICATION	5.22472679478099E-6	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999985585160354	WITHOUT_CLASSIFICATION	1.4414839645715164E-6	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.9999987242845241	WITHOUT_CLASSIFICATION	1.2757154759050444E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999940361884719	WITHOUT_CLASSIFICATION	5.9638115280467425E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999940361884719	WITHOUT_CLASSIFICATION	5.9638115280467425E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999940361884719	WITHOUT_CLASSIFICATION	5.9638115280467425E-6	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999369081800448	WITHOUT_CLASSIFICATION	6.3091819955224E-5	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999706799082639	WITHOUT_CLASSIFICATION	2.9320091736028964E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999380475817453	WITHOUT_CLASSIFICATION	6.1952418254691E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999380475817453	WITHOUT_CLASSIFICATION	6.1952418254691E-5	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999994545697765	WITHOUT_CLASSIFICATION	5.454302235474218E-7	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995554028621	WITHOUT_CLASSIFICATION	4.4459713781138587E-7	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999927245882496	WITHOUT_CLASSIFICATION	7.275411750389442E-6	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.99998569993518	WITHOUT_CLASSIFICATION	1.4300064819966084E-5	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999994755793267	WITHOUT_CLASSIFICATION	5.244206733186061E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999995335926744	WITHOUT_CLASSIFICATION	4.664073256159731E-7	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999781388127943	WITHOUT_CLASSIFICATION	2.1861187205637544E-5	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999781388127943	WITHOUT_CLASSIFICATION	2.1861187205637544E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999976439640309	WITHOUT_CLASSIFICATION	2.3560359690498757E-6	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999985561607302	WITHOUT_CLASSIFICATION	1.4438392698389083E-6	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.8937518799541464	WITHOUT_CLASSIFICATION	0.10624812004585357	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9971072926462874	WITHOUT_CLASSIFICATION	0.002892707353712536	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9997547501742122	WITHOUT_CLASSIFICATION	2.452498257878317E-4	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999982716195637	WITHOUT_CLASSIFICATION	1.7283804362849455E-6	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999992287157943	WITHOUT_CLASSIFICATION	7.712842057701517E-7	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9963593452179573	WITHOUT_CLASSIFICATION	0.0036406547820426087	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9950905026964261	WITHOUT_CLASSIFICATION	0.0049094973035739165	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999996544646229	WITHOUT_CLASSIFICATION	3.455353771083981E-7	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999980692190664	WITHOUT_CLASSIFICATION	1.930780933613461E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999987927033702	WITHOUT_CLASSIFICATION	1.2072966298220838E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9410358961553594	WITHOUT_CLASSIFICATION	0.058964103844640625	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.999974556077225	WITHOUT_CLASSIFICATION	2.5443922775038297E-5	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999989617117025	WITHOUT_CLASSIFICATION	1.0382882973689382E-6	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9941605001046709	WITHOUT_CLASSIFICATION	0.005839499895329102	DESIGN
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9995722019402479	WITHOUT_CLASSIFICATION	4.2779805975203656E-4	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9993971387746752	WITHOUT_CLASSIFICATION	6.028612253247605E-4	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999479724460586	WITHOUT_CLASSIFICATION	5.2027553941297294E-5	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999843154721585	WITHOUT_CLASSIFICATION	1.568452784149213E-5	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999997810403698	WITHOUT_CLASSIFICATION	2.1895963022946544E-7	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9990756562545895	WITHOUT_CLASSIFICATION	9.243437454106426E-4	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997350299579	WITHOUT_CLASSIFICATION	2.649700421033362E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997350299579	WITHOUT_CLASSIFICATION	2.649700421033362E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997350299579	WITHOUT_CLASSIFICATION	2.649700421033362E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997350299579	WITHOUT_CLASSIFICATION	2.649700421033362E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997350299579	WITHOUT_CLASSIFICATION	2.649700421033362E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997350299579	WITHOUT_CLASSIFICATION	2.649700421033362E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997350299579	WITHOUT_CLASSIFICATION	2.649700421033362E-7	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999997350299579	WITHOUT_CLASSIFICATION	2.649700421033362E-7	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999974315978871	WITHOUT_CLASSIFICATION	2.5684021128269577E-6	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999994920669342	WITHOUT_CLASSIFICATION	5.079330658675728E-7	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999594528073305	WITHOUT_CLASSIFICATION	4.054719266951375E-5	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999442641626992	DESIGN	5.573583730082147E-5	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9993777975326334	WITHOUT_CLASSIFICATION	6.222024673665209E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9993777975326334	WITHOUT_CLASSIFICATION	6.222024673665209E-4	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999884475820874	WITHOUT_CLASSIFICATION	1.1552417912644293E-5	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.8491177295196259	WITHOUT_CLASSIFICATION	0.15088227048037392	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999978931337	WITHOUT_CLASSIFICATION	2.106866317193831E-9	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999989780071827	WITHOUT_CLASSIFICATION	1.0219928172324587E-6	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999811494269558	WITHOUT_CLASSIFICATION	1.885057304412089E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999997616123738	WITHOUT_CLASSIFICATION	2.383876261883713E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999958531783549	WITHOUT_CLASSIFICATION	4.14682164510866E-6	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6568003241817606	DESIGN	0.34319967581823946	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999993505879304	WITHOUT_CLASSIFICATION	6.494120695272623E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999946288084628	WITHOUT_CLASSIFICATION	5.371191537191696E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999946288084628	WITHOUT_CLASSIFICATION	5.371191537191696E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999946288084628	WITHOUT_CLASSIFICATION	5.371191537191696E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9891249150480297	WITHOUT_CLASSIFICATION	0.010875084951970237	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.9999679417212284	WITHOUT_CLASSIFICATION	3.205827877160007E-5	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999999558142217	WITHOUT_CLASSIFICATION	4.418577822450474E-8	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999973120927635	WITHOUT_CLASSIFICATION	2.6879072365117884E-6	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998967473007071	WITHOUT_CLASSIFICATION	1.0325269929293114E-4	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999997853469225	WITHOUT_CLASSIFICATION	2.146530775009586E-6	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999982242408152	WITHOUT_CLASSIFICATION	1.7757591846938466E-6	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9988021899948678	WITHOUT_CLASSIFICATION	0.0011978100051322185	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999820528214841	WITHOUT_CLASSIFICATION	1.7947178515885955E-5	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999820528214841	WITHOUT_CLASSIFICATION	1.7947178515885955E-5	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999872829979431	WITHOUT_CLASSIFICATION	1.2717002056812284E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999997284167794	WITHOUT_CLASSIFICATION	2.715832205453742E-7	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9688489017028977	WITHOUT_CLASSIFICATION	0.031151098297102265	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9924229516163015	WITHOUT_CLASSIFICATION	0.007577048383698443	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999488385034	WITHOUT_CLASSIFICATION	5.116149660291627E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999488385034	WITHOUT_CLASSIFICATION	5.116149660291627E-7	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999766254773275	WITHOUT_CLASSIFICATION	2.3374522672562305E-5	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999996776242958	WITHOUT_CLASSIFICATION	3.2237570426913576E-7	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999980693322813	WITHOUT_CLASSIFICATION	1.9306677187121324E-6	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9999544570227901	WITHOUT_CLASSIFICATION	4.5542977209955715E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999993455424937	WITHOUT_CLASSIFICATION	6.544575062385856E-7	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999724664079	WITHOUT_CLASSIFICATION	2.7533592117698907E-8	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999724664079	WITHOUT_CLASSIFICATION	2.7533592117698907E-8	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999884456169185	WITHOUT_CLASSIFICATION	1.1554383081541542E-5	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9999884456169185	WITHOUT_CLASSIFICATION	1.1554383081541542E-5	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999847740919761	WITHOUT_CLASSIFICATION	1.5225908023873672E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997171035715	WITHOUT_CLASSIFICATION	2.828964285891279E-7	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.999989009176599	WITHOUT_CLASSIFICATION	1.0990823401000147E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999982223769175	WITHOUT_CLASSIFICATION	1.7776230825765775E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999994198877163	WITHOUT_CLASSIFICATION	5.801122836673076E-7	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.999745028257866	WITHOUT_CLASSIFICATION	2.5497174213393855E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9991313339416975	WITHOUT_CLASSIFICATION	8.686660583023939E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999942473338437	WITHOUT_CLASSIFICATION	5.752666156410259E-6	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999988497882435	WITHOUT_CLASSIFICATION	1.1502117565533568E-6	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999876181578226	WITHOUT_CLASSIFICATION	1.2381842177425783E-5	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9602452799655273	WITHOUT_CLASSIFICATION	0.03975472003447261	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9981918856621639	WITHOUT_CLASSIFICATION	0.0018081143378361124	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9731894816743503	WITHOUT_CLASSIFICATION	0.026810518325649745	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999858676808613	WITHOUT_CLASSIFICATION	1.4132319138702423E-4	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.5366844537240761	DESIGN	0.4633155462759238	WITHOUT_CLASSIFICATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9989435199955212	WITHOUT_CLASSIFICATION	0.0010564800044787655	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999527755995454	WITHOUT_CLASSIFICATION	4.722440045459286E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999924607109578	WITHOUT_CLASSIFICATION	7.539289042093372E-6	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999846444569	WITHOUT_CLASSIFICATION	1.5355543087598E-8	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999898451862571	WITHOUT_CLASSIFICATION	1.0154813742895934E-5	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9942949011302555	WITHOUT_CLASSIFICATION	0.005705098869744523	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9999781303471251	WITHOUT_CLASSIFICATION	2.186965287486418E-5	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999938222780915	WITHOUT_CLASSIFICATION	6.177721908411754E-6	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.999945927765921	WITHOUT_CLASSIFICATION	5.40722340790126E-5	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999992310544988	WITHOUT_CLASSIFICATION	7.689455011935405E-7	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999426150497895	WITHOUT_CLASSIFICATION	5.738495021052165E-5	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999994678618824	WITHOUT_CLASSIFICATION	5.321381174852555E-7	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999943034904382	WITHOUT_CLASSIFICATION	5.696509561771794E-6	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999545076247	WITHOUT_CLASSIFICATION	4.54923752366711E-8	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9998223643014365	WITHOUT_CLASSIFICATION	1.7763569856354082E-4	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.999953197341075	WITHOUT_CLASSIFICATION	4.680265892491069E-5	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999995935239044	WITHOUT_CLASSIFICATION	4.064760955909094E-7	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999037645785555	WITHOUT_CLASSIFICATION	9.623542144453719E-5	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999970892682007	WITHOUT_CLASSIFICATION	2.9107317992359975E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999983430849764	WITHOUT_CLASSIFICATION	1.6569150236907987E-6	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9399668273194928	DESIGN	0.06003317268050719	WITHOUT_CLASSIFICATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999868241998074	WITHOUT_CLASSIFICATION	1.3175800192652194E-5	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999840049021267	WITHOUT_CLASSIFICATION	1.599509787330714E-5	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999966821019708	WITHOUT_CLASSIFICATION	3.3178980291763764E-6	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9976251793820177	WITHOUT_CLASSIFICATION	0.002374820617982408	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.6451154321061189	WITHOUT_CLASSIFICATION	0.35488456789388123	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999996769476993	WITHOUT_CLASSIFICATION	3.2305230066728314E-7	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9998463788990007	WITHOUT_CLASSIFICATION	1.5362110099923537E-4	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.999958910652219	WITHOUT_CLASSIFICATION	4.108934778105386E-5	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9990842251997462	WITHOUT_CLASSIFICATION	9.157748002539629E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.998612807772153	WITHOUT_CLASSIFICATION	0.0013871922278470142	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9999942911146132	WITHOUT_CLASSIFICATION	5.708885386748569E-6	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999119872571	WITHOUT_CLASSIFICATION	8.801274285097689E-8	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999994975411161	WITHOUT_CLASSIFICATION	5.024588840086841E-7	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999726444384112	WITHOUT_CLASSIFICATION	2.7355561588841445E-5	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999988520123143	WITHOUT_CLASSIFICATION	1.1479876856842637E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999971752604024	WITHOUT_CLASSIFICATION	2.8247395976571927E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999971752604024	WITHOUT_CLASSIFICATION	2.8247395976571927E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998418017262	WITHOUT_CLASSIFICATION	1.5819827378899926E-7	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998418017262	WITHOUT_CLASSIFICATION	1.5819827378899926E-7	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.966471492919075	WITHOUT_CLASSIFICATION	0.033528507080925085	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.966471492919075	WITHOUT_CLASSIFICATION	0.033528507080925085	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998823314995	WITHOUT_CLASSIFICATION	1.1766850049749713E-6	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998823314995	WITHOUT_CLASSIFICATION	1.1766850049749713E-6	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999728210041	WITHOUT_CLASSIFICATION	2.7178996011435375E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999728210041	WITHOUT_CLASSIFICATION	2.7178996011435375E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999728210041	WITHOUT_CLASSIFICATION	2.7178996011435375E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999728210041	WITHOUT_CLASSIFICATION	2.7178996011435375E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999728210041	WITHOUT_CLASSIFICATION	2.7178996011435375E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999728210041	WITHOUT_CLASSIFICATION	2.7178996011435375E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999728210041	WITHOUT_CLASSIFICATION	2.7178996011435375E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999728210041	WITHOUT_CLASSIFICATION	2.7178996011435375E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999728210041	WITHOUT_CLASSIFICATION	2.7178996011435375E-8	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999083707808635	WITHOUT_CLASSIFICATION	9.162921913647921E-5	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999083707808635	WITHOUT_CLASSIFICATION	9.162921913647921E-5	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999083707808635	WITHOUT_CLASSIFICATION	9.162921913647921E-5	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999982436195866	WITHOUT_CLASSIFICATION	1.7563804134867293E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999751558839642	WITHOUT_CLASSIFICATION	2.4844116035813558E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999751558839642	WITHOUT_CLASSIFICATION	2.4844116035813558E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999751558839642	WITHOUT_CLASSIFICATION	2.4844116035813558E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998958342191	WITHOUT_CLASSIFICATION	1.0416578089680704E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998958342191	WITHOUT_CLASSIFICATION	1.0416578089680704E-7	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998958342191	WITHOUT_CLASSIFICATION	1.0416578089680704E-7	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999614967139399	WITHOUT_CLASSIFICATION	3.850328606005355E-5	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999997508357756	WITHOUT_CLASSIFICATION	2.491642244022575E-7	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9986763328076851	WITHOUT_CLASSIFICATION	0.001323667192314938	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9957144344460322	WITHOUT_CLASSIFICATION	0.004285565553967752	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9957144344460322	WITHOUT_CLASSIFICATION	0.004285565553967752	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9957144344460322	WITHOUT_CLASSIFICATION	0.004285565553967752	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999868505873958	WITHOUT_CLASSIFICATION	1.3149412604270216E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999982001251767	WITHOUT_CLASSIFICATION	1.799874823328685E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999982001251767	WITHOUT_CLASSIFICATION	1.799874823328685E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9867639630086655	WITHOUT_CLASSIFICATION	0.013236036991334346	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999345453321911	WITHOUT_CLASSIFICATION	6.545466780896928E-5	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999345453321911	WITHOUT_CLASSIFICATION	6.545466780896928E-5	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9999106451077044	DESIGN	8.935489229547018E-5	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999965496158448	WITHOUT_CLASSIFICATION	3.4503841551415268E-6	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999990425846443	WITHOUT_CLASSIFICATION	9.574153556195964E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999966341436	WITHOUT_CLASSIFICATION	3.3658564520547323E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999966341436	WITHOUT_CLASSIFICATION	3.3658564520547323E-9	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999431008484391	WITHOUT_CLASSIFICATION	5.689915156094113E-5	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999685755802	WITHOUT_CLASSIFICATION	3.1424419943245046E-8	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.7987980668661414	WITHOUT_CLASSIFICATION	0.20120193313385862	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9949441464481686	WITHOUT_CLASSIFICATION	0.005055853551831348	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.8412463508147976	WITHOUT_CLASSIFICATION	0.1587536491852024	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999966341436	WITHOUT_CLASSIFICATION	3.3658564520547323E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999966341436	WITHOUT_CLASSIFICATION	3.3658564520547323E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999966341436	WITHOUT_CLASSIFICATION	3.3658564520547323E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999966341436	WITHOUT_CLASSIFICATION	3.3658564520547323E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999966341436	WITHOUT_CLASSIFICATION	3.3658564520547323E-9	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999437868051957	WITHOUT_CLASSIFICATION	5.6213194804248116E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999930048433191	WITHOUT_CLASSIFICATION	6.995156680880695E-6	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999978634647	WITHOUT_CLASSIFICATION	2.1365351833606018E-9	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999964433493315	WITHOUT_CLASSIFICATION	3.5566506686406237E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999162026837147	WITHOUT_CLASSIFICATION	8.3797316285338E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9996103818156649	WITHOUT_CLASSIFICATION	3.8961818433503405E-4	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.647198350425621	DESIGN	0.35280164957437904	WITHOUT_CLASSIFICATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.8402708438753231	WITHOUT_CLASSIFICATION	0.15972915612467684	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999996325294338	WITHOUT_CLASSIFICATION	3.6747056616452835E-7	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.9999980108283513	WITHOUT_CLASSIFICATION	1.9891716487102494E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999992775030953	WITHOUT_CLASSIFICATION	7.224969047194674E-7	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999946643519324	WITHOUT_CLASSIFICATION	5.335648067482408E-6	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.9999969213605479	WITHOUT_CLASSIFICATION	3.078639452187143E-6	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999429834581	WITHOUT_CLASSIFICATION	5.7016541991905925E-8	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999998778162159	WITHOUT_CLASSIFICATION	1.2218378412522248E-7	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9996988206417271	WITHOUT_CLASSIFICATION	3.011793582728732E-4	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9998898165218597	WITHOUT_CLASSIFICATION	1.1018347814031992E-4	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999998055756	WITHOUT_CLASSIFICATION	1.944243042132527E-10	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.999995167244182	WITHOUT_CLASSIFICATION	4.832755817962857E-6	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999985983609156	WITHOUT_CLASSIFICATION	1.401639084449788E-6	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999983024809156	WITHOUT_CLASSIFICATION	1.697519084391272E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999857949038026	WITHOUT_CLASSIFICATION	1.4205096197333572E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999920731524022	WITHOUT_CLASSIFICATION	7.92684759768392E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999910527423491	WITHOUT_CLASSIFICATION	8.947257650868532E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999910527423491	WITHOUT_CLASSIFICATION	8.947257650868532E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999910527423491	WITHOUT_CLASSIFICATION	8.947257650868532E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999910527423491	WITHOUT_CLASSIFICATION	8.947257650868532E-6	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999926139133977	WITHOUT_CLASSIFICATION	7.3860866023546804E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999998802884579	WITHOUT_CLASSIFICATION	1.1971154201734767E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999963834130454	WITHOUT_CLASSIFICATION	3.6165869544398343E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999963834130454	WITHOUT_CLASSIFICATION	3.6165869544398343E-6	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.999997063089237	WITHOUT_CLASSIFICATION	2.9369107630198942E-6	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999995278768914	WITHOUT_CLASSIFICATION	4.7212310860657244E-7	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999950729090482	WITHOUT_CLASSIFICATION	4.927090951736237E-6	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999897427938	WITHOUT_CLASSIFICATION	1.0257206185807955E-7	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999319166399585	WITHOUT_CLASSIFICATION	6.80833600414882E-5	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999899242001827	WITHOUT_CLASSIFICATION	1.0075799817207506E-5	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9997278881195559	WITHOUT_CLASSIFICATION	2.721118804440135E-4	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999996465422677	WITHOUT_CLASSIFICATION	3.534577322453801E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999996465422677	WITHOUT_CLASSIFICATION	3.534577322453801E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999996465422677	WITHOUT_CLASSIFICATION	3.534577322453801E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999996465422677	WITHOUT_CLASSIFICATION	3.534577322453801E-7	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999982925518	WITHOUT_CLASSIFICATION	1.707448117094648E-9	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999734410980102	WITHOUT_CLASSIFICATION	2.6558901989766148E-5	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999734410980102	WITHOUT_CLASSIFICATION	2.6558901989766148E-5	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999734410980102	WITHOUT_CLASSIFICATION	2.6558901989766148E-5	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999987541027912	WITHOUT_CLASSIFICATION	1.2458972088660175E-6	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999997568140871	WITHOUT_CLASSIFICATION	2.431859128859107E-7	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9970126843860337	WITHOUT_CLASSIFICATION	0.002987315613966212	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8928188565071663	DESIGN	0.10718114349283368	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8928188565071663	DESIGN	0.10718114349283368	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999998807628	WITHOUT_CLASSIFICATION	1.1923715286942385E-10	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999954123404415	WITHOUT_CLASSIFICATION	4.587659558431604E-6	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999964056616701	WITHOUT_CLASSIFICATION	3.594338329829484E-6	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999964056616701	WITHOUT_CLASSIFICATION	3.594338329829484E-6	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.975677342966328	WITHOUT_CLASSIFICATION	0.024322657033671893	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.975677342966328	WITHOUT_CLASSIFICATION	0.024322657033671893	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.999593832572262	WITHOUT_CLASSIFICATION	4.061674277380264E-4	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9861650406376156	WITHOUT_CLASSIFICATION	0.013834959362384443	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.999999939379785	WITHOUT_CLASSIFICATION	6.062021494036263E-8	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999998931700875	WITHOUT_CLASSIFICATION	1.0682991246333374E-7	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999889829994303	WITHOUT_CLASSIFICATION	1.1017000569796671E-5	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999994075362698	WITHOUT_CLASSIFICATION	5.924637300977136E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999994970171598	WITHOUT_CLASSIFICATION	5.029828401652224E-7	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999959763987306	WITHOUT_CLASSIFICATION	4.023601269421543E-6	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.99999908076727	WITHOUT_CLASSIFICATION	9.192327300442186E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999740770650349	WITHOUT_CLASSIFICATION	2.592293496498269E-5	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999740770650349	WITHOUT_CLASSIFICATION	2.592293496498269E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999996005816705	WITHOUT_CLASSIFICATION	3.994183294840856E-7	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999996005816705	WITHOUT_CLASSIFICATION	3.994183294840856E-7	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999946555130924	WITHOUT_CLASSIFICATION	5.344486907615508E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999393026949	WITHOUT_CLASSIFICATION	6.069730510362934E-8	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999997609174794	WITHOUT_CLASSIFICATION	2.390825205302525E-7	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999965656955309	WITHOUT_CLASSIFICATION	3.434304469101363E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999965656955309	WITHOUT_CLASSIFICATION	3.434304469101363E-5	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999965656955309	WITHOUT_CLASSIFICATION	3.434304469101363E-5	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999981601480483	WITHOUT_CLASSIFICATION	1.8398519517085454E-6	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.9999940702545282	WITHOUT_CLASSIFICATION	5.929745471781713E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999937528767812	WITHOUT_CLASSIFICATION	6.24712321880869E-6	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.9999973202602832	WITHOUT_CLASSIFICATION	2.6797397167994128E-6	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999919944434899	WITHOUT_CLASSIFICATION	8.005556510073723E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999951682143917	WITHOUT_CLASSIFICATION	4.831785608317347E-6	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999962145410444	WITHOUT_CLASSIFICATION	3.7854589555367846E-6	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.999997645365238	WITHOUT_CLASSIFICATION	2.3546347619318206E-6	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9945035816506508	WITHOUT_CLASSIFICATION	0.00549641834934922	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999787713862028	WITHOUT_CLASSIFICATION	2.1228613797140116E-5	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9231657042513456	DESIGN	0.07683429574865439	WITHOUT_CLASSIFICATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9997664092324381	WITHOUT_CLASSIFICATION	2.3359076756190216E-4	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999802470168563	WITHOUT_CLASSIFICATION	1.975298314375092E-5	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8928188565071663	DESIGN	0.10718114349283368	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9979664111413018	WITHOUT_CLASSIFICATION	0.002033588858698148	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9913626793207303	WITHOUT_CLASSIFICATION	0.00863732067926972	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9993699134355684	WITHOUT_CLASSIFICATION	6.300865644316904E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999523465398821	WITHOUT_CLASSIFICATION	4.7653460117890226E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999523465398821	WITHOUT_CLASSIFICATION	4.7653460117890226E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999523465398821	WITHOUT_CLASSIFICATION	4.7653460117890226E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999523465398821	WITHOUT_CLASSIFICATION	4.7653460117890226E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999523465398821	WITHOUT_CLASSIFICATION	4.7653460117890226E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999678378923613	WITHOUT_CLASSIFICATION	3.216210763866841E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999523465398821	WITHOUT_CLASSIFICATION	4.7653460117890226E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999523465398821	WITHOUT_CLASSIFICATION	4.7653460117890226E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9999523465398821	WITHOUT_CLASSIFICATION	4.7653460117890226E-5	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9240767934805607	WITHOUT_CLASSIFICATION	0.07592320651943932	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9961320263334008	WITHOUT_CLASSIFICATION	0.0038679736665991385	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999373632690031	WITHOUT_CLASSIFICATION	6.263673099687778E-5	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9996330069413968	WITHOUT_CLASSIFICATION	3.6699305860323666E-4	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999997782416666	WITHOUT_CLASSIFICATION	2.2175833347967368E-7	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999975816447367	WITHOUT_CLASSIFICATION	2.4183552633325287E-6	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.994486980993162	WITHOUT_CLASSIFICATION	0.005513019006837958	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999985866829052	WITHOUT_CLASSIFICATION	1.4133170948562926E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999918062148326	WITHOUT_CLASSIFICATION	8.19378516742142E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999918062148326	WITHOUT_CLASSIFICATION	8.19378516742142E-6	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999968625072904	WITHOUT_CLASSIFICATION	3.137492709593346E-6	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999929246826456	WITHOUT_CLASSIFICATION	7.075317354421837E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.9999949482211885	WITHOUT_CLASSIFICATION	5.051778811438817E-6	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999960649694385	WITHOUT_CLASSIFICATION	3.935030561521153E-6	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999976325985196	WITHOUT_CLASSIFICATION	2.3674014803262824E-6	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.999995827888893	WITHOUT_CLASSIFICATION	4.172111107065479E-6	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999952863238066	WITHOUT_CLASSIFICATION	4.713676193361762E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999975673124999	WITHOUT_CLASSIFICATION	2.4326875002120653E-6	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999960837672214	WITHOUT_CLASSIFICATION	3.916232778636064E-6	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999975857239055	WITHOUT_CLASSIFICATION	2.4142760945177165E-6	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999989206738249	WITHOUT_CLASSIFICATION	1.0793261750928487E-6	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999981948479055	WITHOUT_CLASSIFICATION	1.8051520945362955E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999939555758802	WITHOUT_CLASSIFICATION	6.044424119746702E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999956603827564	WITHOUT_CLASSIFICATION	4.3396172435661804E-6	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999940632571824	WITHOUT_CLASSIFICATION	5.9367428174956685E-6	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999951457786884	WITHOUT_CLASSIFICATION	4.8542213116369755E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999959666040682	WITHOUT_CLASSIFICATION	4.0333959317209326E-6	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999950453897734	WITHOUT_CLASSIFICATION	4.95461022658517E-6	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999970596381436	WITHOUT_CLASSIFICATION	2.940361856402827E-6	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.9999983811265801	WITHOUT_CLASSIFICATION	1.6188734198151615E-6	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999981063897944	WITHOUT_CLASSIFICATION	1.893610205677532E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999986656726426	WITHOUT_CLASSIFICATION	1.334327357357331E-6	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999959720661714	WITHOUT_CLASSIFICATION	4.027933828604078E-6	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999398507687188	WITHOUT_CLASSIFICATION	6.014923128108319E-5	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.999992785001839	WITHOUT_CLASSIFICATION	7.214998161076464E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999882245522045	WITHOUT_CLASSIFICATION	1.1775447795538895E-5	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.999988762574976	WITHOUT_CLASSIFICATION	1.123742502401404E-5	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999945336740962	WITHOUT_CLASSIFICATION	5.4663259038635206E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999937283358938	WITHOUT_CLASSIFICATION	6.271664106134048E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999975395746965	WITHOUT_CLASSIFICATION	2.4604253033982653E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999985694701355	WITHOUT_CLASSIFICATION	1.4305298644851839E-6	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999911140749863	WITHOUT_CLASSIFICATION	8.885925013660662E-6	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999951505310722	WITHOUT_CLASSIFICATION	4.849468927681538E-6	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999944674195703	WITHOUT_CLASSIFICATION	5.532580429630382E-6	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999970270318365	WITHOUT_CLASSIFICATION	2.9729681635475937E-6	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.9999987711597536	WITHOUT_CLASSIFICATION	1.2288402464155472E-6	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999973588506661	WITHOUT_CLASSIFICATION	2.6411493337772045E-6	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.9999960023864185	WITHOUT_CLASSIFICATION	3.997613581493379E-6	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.9999985567376704	WITHOUT_CLASSIFICATION	1.443262329704659E-6	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999957024251083	WITHOUT_CLASSIFICATION	4.2975748916909915E-6	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999946872194045	WITHOUT_CLASSIFICATION	5.312780595417995E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999968477390409	WITHOUT_CLASSIFICATION	3.1522609590916615E-6	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999957421096874	WITHOUT_CLASSIFICATION	4.2578903125083E-6	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999855676037896	WITHOUT_CLASSIFICATION	1.4432396210440364E-5	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999954015445531	WITHOUT_CLASSIFICATION	4.598455446951413E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.9999953938490401	WITHOUT_CLASSIFICATION	4.606150959849627E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999916625305383	WITHOUT_CLASSIFICATION	8.337469461671875E-6	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999907433870432	WITHOUT_CLASSIFICATION	9.256612956859054E-6	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999979005787606	WITHOUT_CLASSIFICATION	2.099421239375948E-6	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999915464113827	WITHOUT_CLASSIFICATION	8.453588617299877E-6	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.9999952206890743	WITHOUT_CLASSIFICATION	4.779310925713908E-6	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999974496006515	WITHOUT_CLASSIFICATION	2.5503993485627754E-6	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.9999985858331638	WITHOUT_CLASSIFICATION	1.4141668362457384E-6	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999640392606228	WITHOUT_CLASSIFICATION	3.5960739377194115E-5	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999640392606228	WITHOUT_CLASSIFICATION	3.5960739377194115E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999939153814524	WITHOUT_CLASSIFICATION	6.0846185475687544E-6	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.999997420034518	WITHOUT_CLASSIFICATION	2.5799654819606907E-6	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999903838782037	WITHOUT_CLASSIFICATION	9.616121796273117E-6	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999973455277225	WITHOUT_CLASSIFICATION	2.6544722775677275E-6	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999934017532313	WITHOUT_CLASSIFICATION	6.5982467687310335E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999976157869491	WITHOUT_CLASSIFICATION	2.3842130509242143E-6	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999951470735199	WITHOUT_CLASSIFICATION	4.852926480134605E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999970253389967	WITHOUT_CLASSIFICATION	2.9746610033426716E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999985892838026	WITHOUT_CLASSIFICATION	1.4107161974478453E-6	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999978425103679	WITHOUT_CLASSIFICATION	2.1574896321040616E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999987341546419	WITHOUT_CLASSIFICATION	1.2658453581215518E-6	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999987341546419	WITHOUT_CLASSIFICATION	1.2658453581215518E-6	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999996480951697	WITHOUT_CLASSIFICATION	3.5190483034708384E-7	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999976694441738	WITHOUT_CLASSIFICATION	2.330555826178822E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9304136928389007	WITHOUT_CLASSIFICATION	0.06958630716109919	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999992798998	WITHOUT_CLASSIFICATION	7.201001823075215E-10	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998285888269	WITHOUT_CLASSIFICATION	1.7141117313566886E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998285888269	WITHOUT_CLASSIFICATION	1.7141117313566886E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998285888269	WITHOUT_CLASSIFICATION	1.7141117313566886E-7	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998285888269	WITHOUT_CLASSIFICATION	1.7141117313566886E-7	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9921622111225945	DESIGN	0.007837788877405476	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9987763468835004	WITHOUT_CLASSIFICATION	0.0012236531164996343	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.999992518901634	WITHOUT_CLASSIFICATION	7.481098366016267E-6	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999927311685444	WITHOUT_CLASSIFICATION	7.268831455604477E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999910589729898	WITHOUT_CLASSIFICATION	8.941027010237356E-6	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999911028982922	WITHOUT_CLASSIFICATION	8.897101707844837E-6	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999947490036101	WITHOUT_CLASSIFICATION	5.250996389913736E-6	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999980677628003	WITHOUT_CLASSIFICATION	1.9322371996837706E-6	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999968949760889	WITHOUT_CLASSIFICATION	3.1050239110747586E-6	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999969700209487	WITHOUT_CLASSIFICATION	3.029979051331321E-6	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999955066457362	WITHOUT_CLASSIFICATION	4.493354263760403E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999985532594295	WITHOUT_CLASSIFICATION	1.4467405703893146E-6	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999963483255737	WITHOUT_CLASSIFICATION	3.651674426284997E-6	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999900214223156	WITHOUT_CLASSIFICATION	9.978577684436259E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999941802713311	WITHOUT_CLASSIFICATION	5.81972866887035E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.999989335175434	WITHOUT_CLASSIFICATION	1.0664824565973E-5	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999952863238066	WITHOUT_CLASSIFICATION	4.713676193361762E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999964923064504	WITHOUT_CLASSIFICATION	3.507693549679832E-6	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.999995909736971	WITHOUT_CLASSIFICATION	4.090263028992462E-6	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999959584103764	WITHOUT_CLASSIFICATION	4.041589623669523E-6	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.999998799141072	WITHOUT_CLASSIFICATION	1.2008589279601057E-6	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999969770414482	WITHOUT_CLASSIFICATION	3.022958551734773E-6	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999978804233022	WITHOUT_CLASSIFICATION	2.1195766977521755E-6	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999972411801621	WITHOUT_CLASSIFICATION	2.758819838040353E-6	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999983248758471	WITHOUT_CLASSIFICATION	1.6751241529586865E-6	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.9999906576848622	WITHOUT_CLASSIFICATION	9.342315137849696E-6	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999979319941005	WITHOUT_CLASSIFICATION	2.0680058995189833E-6	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.9999920796007604	WITHOUT_CLASSIFICATION	7.920399239495517E-6	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999977338792451	WITHOUT_CLASSIFICATION	2.2661207549734652E-6	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.9999910821483973	WITHOUT_CLASSIFICATION	8.917851602792936E-6	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999958409297223	WITHOUT_CLASSIFICATION	4.159070277773158E-6	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999987400990407	WITHOUT_CLASSIFICATION	1.2599009593375123E-6	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999963236498862	WITHOUT_CLASSIFICATION	3.6763501137356395E-6	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999975856061896	WITHOUT_CLASSIFICATION	2.414393810485132E-6	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999976002257467	WITHOUT_CLASSIFICATION	2.399774253330957E-6	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999899378968161	WITHOUT_CLASSIFICATION	1.0062103183946264E-5	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999897782328621	WITHOUT_CLASSIFICATION	1.0221767137851292E-5	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999896776965832	WITHOUT_CLASSIFICATION	1.0322303416801865E-5	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999957545208393	WITHOUT_CLASSIFICATION	4.245479160750475E-6	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999937467415383	WITHOUT_CLASSIFICATION	6.253258461715386E-6	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999975378472387	WITHOUT_CLASSIFICATION	2.4621527613399795E-6	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.9999910256239519	WITHOUT_CLASSIFICATION	8.974376048153887E-6	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999939669400008	WITHOUT_CLASSIFICATION	6.033059999253169E-6	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999942172662034	WITHOUT_CLASSIFICATION	5.782733796633936E-6	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999969071623716	WITHOUT_CLASSIFICATION	3.0928376284702676E-6	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.9999958552350597	WITHOUT_CLASSIFICATION	4.1447649403198295E-6	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999839338604773	WITHOUT_CLASSIFICATION	1.606613952261662E-5	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999935634992192	WITHOUT_CLASSIFICATION	6.4365007808672E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999985400193071	WITHOUT_CLASSIFICATION	1.4599806928636499E-6	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999947911427604	WITHOUT_CLASSIFICATION	5.208857239667163E-6	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999966683042112	WITHOUT_CLASSIFICATION	3.3316957888820414E-6	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999964031323393	WITHOUT_CLASSIFICATION	3.5968676607519923E-6	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999985244313997	WITHOUT_CLASSIFICATION	1.4755686003731855E-6	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999955726368669	WITHOUT_CLASSIFICATION	4.427363133137616E-6	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.9999975274224912	WITHOUT_CLASSIFICATION	2.4725775089188897E-6	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999981263435808	WITHOUT_CLASSIFICATION	1.8736564191431383E-6	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999975876563593	WITHOUT_CLASSIFICATION	2.412343640742086E-6	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999985346571085	WITHOUT_CLASSIFICATION	1.4653428914867805E-6	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999978456310751	WITHOUT_CLASSIFICATION	2.1543689249594973E-6	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9998476261609806	WITHOUT_CLASSIFICATION	1.5237383901930716E-4	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999872930484159	WITHOUT_CLASSIFICATION	1.2706951584184729E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999948474079271	WITHOUT_CLASSIFICATION	5.152592072862074E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999948474079271	WITHOUT_CLASSIFICATION	5.152592072862074E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999948474079271	WITHOUT_CLASSIFICATION	5.152592072862074E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999948474079271	WITHOUT_CLASSIFICATION	5.152592072862074E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999948474079271	WITHOUT_CLASSIFICATION	5.152592072862074E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999948474079271	WITHOUT_CLASSIFICATION	5.152592072862074E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999948474079271	WITHOUT_CLASSIFICATION	5.152592072862074E-6	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9982018458201286	WITHOUT_CLASSIFICATION	0.0017981541798714595	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9982018458201286	WITHOUT_CLASSIFICATION	0.0017981541798714595	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9982018458201286	WITHOUT_CLASSIFICATION	0.0017981541798714595	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9982018458201286	WITHOUT_CLASSIFICATION	0.0017981541798714595	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998435089799922	WITHOUT_CLASSIFICATION	1.5649102000785798E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998435089799922	WITHOUT_CLASSIFICATION	1.5649102000785798E-4	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999541971897483	WITHOUT_CLASSIFICATION	4.580281025166427E-5	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998815568752427	WITHOUT_CLASSIFICATION	1.1844312475725898E-4	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998815568752427	WITHOUT_CLASSIFICATION	1.1844312475725898E-4	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.99996898353279	WITHOUT_CLASSIFICATION	3.1016467209975646E-5	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999744554050934	WITHOUT_CLASSIFICATION	2.5544594906612377E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999985076180787	WITHOUT_CLASSIFICATION	1.492381921261266E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999985076180787	WITHOUT_CLASSIFICATION	1.492381921261266E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999985076180787	WITHOUT_CLASSIFICATION	1.492381921261266E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999985076180787	WITHOUT_CLASSIFICATION	1.492381921261266E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999985076180787	WITHOUT_CLASSIFICATION	1.492381921261266E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999985076180787	WITHOUT_CLASSIFICATION	1.492381921261266E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999985076180787	WITHOUT_CLASSIFICATION	1.492381921261266E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996324175262	WITHOUT_CLASSIFICATION	3.6758247384555507E-7	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999989967170549	WITHOUT_CLASSIFICATION	1.0032829451196212E-6	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999358375177518	WITHOUT_CLASSIFICATION	6.416248224821245E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999358375177518	WITHOUT_CLASSIFICATION	6.416248224821245E-5	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999878551268689	WITHOUT_CLASSIFICATION	1.2144873131013255E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999855477461939	WITHOUT_CLASSIFICATION	1.4452253806231526E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999855477461939	WITHOUT_CLASSIFICATION	1.4452253806231526E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9907074672000759	WITHOUT_CLASSIFICATION	0.009292532799924126	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999614943445714	DESIGN	3.8505655428653074E-5	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9994669745091395	WITHOUT_CLASSIFICATION	5.330254908604742E-4	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9994583336995964	WITHOUT_CLASSIFICATION	5.416663004036291E-4	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999999103674301	WITHOUT_CLASSIFICATION	8.963256993751936E-8	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999995501410371	WITHOUT_CLASSIFICATION	4.4985896276670513E-7	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999820665152117	WITHOUT_CLASSIFICATION	1.7933484788328634E-5	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999030153665768	WITHOUT_CLASSIFICATION	9.69846334232E-5	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999954019304	WITHOUT_CLASSIFICATION	4.598069557380535E-9	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9964662908274527	WITHOUT_CLASSIFICATION	0.003533709172547112	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999644674452826	WITHOUT_CLASSIFICATION	3.553255471753048E-5	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9990817722466694	WITHOUT_CLASSIFICATION	9.182277533305949E-4	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999912636861	WITHOUT_CLASSIFICATION	8.736313898336545E-8	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999364016030677	WITHOUT_CLASSIFICATION	6.359839693230374E-5	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999939387227362	WITHOUT_CLASSIFICATION	6.061277263766702E-6	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9989127008459221	WITHOUT_CLASSIFICATION	0.0010872991540778983	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999868057468	WITHOUT_CLASSIFICATION	1.319425330230645E-8	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9990925072757381	WITHOUT_CLASSIFICATION	9.074927242620471E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9997385297612216	WITHOUT_CLASSIFICATION	2.6147023877848096E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9997385297612216	WITHOUT_CLASSIFICATION	2.6147023877848096E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999375989301449	WITHOUT_CLASSIFICATION	6.240106985514874E-5	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999587865122	WITHOUT_CLASSIFICATION	4.1213487928280804E-8	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999899231816418	WITHOUT_CLASSIFICATION	1.007681835822428E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9996713247811153	WITHOUT_CLASSIFICATION	3.2867521888461216E-4	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999822554529371	WITHOUT_CLASSIFICATION	1.774454706291898E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999822554529371	WITHOUT_CLASSIFICATION	1.774454706291898E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999822554529371	WITHOUT_CLASSIFICATION	1.774454706291898E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9873175616927047	WITHOUT_CLASSIFICATION	0.012682438307295365	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999823802897951	WITHOUT_CLASSIFICATION	1.7619710204946534E-5	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999630583168	WITHOUT_CLASSIFICATION	3.694168315389078E-8	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999068460572602	WITHOUT_CLASSIFICATION	9.315394273982035E-5	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999966322559473	WITHOUT_CLASSIFICATION	3.367744052737293E-6	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999969907568	WITHOUT_CLASSIFICATION	3.0092431384781305E-9	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9996423896933655	WITHOUT_CLASSIFICATION	3.576103066345227E-4	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999869156768002	WITHOUT_CLASSIFICATION	1.308432319980062E-5	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9987982839096288	WITHOUT_CLASSIFICATION	0.001201716090371269	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999989376952124	WITHOUT_CLASSIFICATION	1.06230478750815E-6	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999982709194675	WITHOUT_CLASSIFICATION	1.7290805324518997E-6	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9984806472472612	WITHOUT_CLASSIFICATION	0.001519352752738905	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.999787119868229	DESIGN	2.1288013177110185E-4	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9249150833337345	WITHOUT_CLASSIFICATION	0.07508491666626547	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999999703649	WITHOUT_CLASSIFICATION	2.9635073622835555E-11	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999996035437	WITHOUT_CLASSIFICATION	3.9645630194445755E-10	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9976067439241897	WITHOUT_CLASSIFICATION	0.0023932560758103236	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999997333819941	WITHOUT_CLASSIFICATION	2.66618005912568E-7	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9659057101898323	WITHOUT_CLASSIFICATION	0.03409428981016767	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.5537611414074385	DESIGN	0.4462388585925615	WITHOUT_CLASSIFICATION
// FIXME: move out of this class!	DESIGN	0.8229584149241376	DESIGN	0.1770415850758625	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9999948845292522	DESIGN	5.115470747740851E-6	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9891673461697282	DESIGN	0.010832653830271717	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9291383418693233	DESIGN	0.07086165813067667	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.6640079998018926	DESIGN	0.3359920001981074	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999973679547384	DESIGN	2.6320452615469526E-6	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9999515022123708	WITHOUT_CLASSIFICATION	4.8497787629082343E-5	DESIGN
// we might need to perform a DST correction	DESIGN	0.9982438502293746	WITHOUT_CLASSIFICATION	0.0017561497706254476	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9990165520303272	WITHOUT_CLASSIFICATION	9.834479696726889E-4	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9999516029798741	DESIGN	4.839702012593841E-5	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9994493929946838	WITHOUT_CLASSIFICATION	5.506070053161952E-4	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.9993217206261433	DESIGN	6.782793738567444E-4	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.9993217206261433	DESIGN	6.782793738567444E-4	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9996262202461703	DESIGN	3.7377975382966945E-4	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9998769433398284	DESIGN	1.2305666017171002E-4	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.997850118099656	DESIGN	0.0021498819003440924	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9142731031635417	DESIGN	0.08572689683645823	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999985570857378	DESIGN	1.4429142621802895E-6	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.9994625427812314	DESIGN	5.374572187686356E-4	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9703904632662277	DESIGN	0.029609536733772233	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.988008583165482	DESIGN	0.011991416834517953	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999760821245661	DESIGN	2.39178754339038E-5	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.8976890023577272	WITHOUT_CLASSIFICATION	0.1023109976422727	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9995809474460046	DESIGN	4.190525539953198E-4	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9994923538881744	DESIGN	5.076461118256166E-4	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9715508642753061	WITHOUT_CLASSIFICATION	0.028449135724693785	DESIGN
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9998248923075219	DESIGN	1.7510769247817525E-4	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9996896522855689	WITHOUT_CLASSIFICATION	3.1034771443109543E-4	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9995124375282006	DESIGN	4.8756247179938654E-4	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.7209830485069298	DESIGN	0.2790169514930702	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9929623001578733	DESIGN	0.007037699842126665	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.8968248571534169	WITHOUT_CLASSIFICATION	0.10317514284658315	DESIGN
// need to reexamine this	DESIGN	0.9978834168921938	WITHOUT_CLASSIFICATION	0.0021165831078061126	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.999362858376291	DESIGN	6.371416237088923E-4	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9998113795621938	DESIGN	1.88620437806171E-4	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9994735858158229	DESIGN	5.264141841771877E-4	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.9996865680557938	DESIGN	3.134319442062578E-4	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.999999995693712	DESIGN	4.3062879881102695E-9	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9996159154263108	DESIGN	3.840845736891575E-4	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999999938633176	DESIGN	6.13668244306349E-9	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999254522076307	DESIGN	7.454779236923911E-5	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.993622052249615	DESIGN	0.006377947750384995	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9934730202473837	WITHOUT_CLASSIFICATION	0.006526979752616401	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.9982798497478476	WITHOUT_CLASSIFICATION	0.0017201502521525384	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9970009848263051	DESIGN	0.0029990151736949714	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.6224606872077988	DESIGN	0.3775393127922011	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999992325919922	DESIGN	7.67408007885641E-7	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9151282847609461	DESIGN	0.08487171523905386	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.9800334058714611	DESIGN	0.01996659412853882	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9999825795834061	DESIGN	1.742041659392432E-5	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.987236330158137	DESIGN	0.012763669841862883	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9965422972049953	WITHOUT_CLASSIFICATION	0.003457702795004811	DESIGN
/* FIXME: finalizer should be dupped here */	DESIGN	0.9819554003146479	DESIGN	0.018044599685352124	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999457804196498	DESIGN	5.421958035016729E-5	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9999999629785875	DESIGN	3.7021412370950784E-8	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9865728687718944	WITHOUT_CLASSIFICATION	0.013427131228105656	DESIGN
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9991748013968299	DESIGN	8.251986031700552E-4	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999995688756358	DESIGN	4.311243643235394E-7	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9678668165812867	DESIGN	0.032133183418713414	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9979281880723079	DESIGN	0.0020718119276921026	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.9994126215601513	DESIGN	5.873784398486641E-4	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9999982542339907	DESIGN	1.7457660093041714E-6	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.9220615256208313	DESIGN	0.07793847437916865	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9384618220097591	WITHOUT_CLASSIFICATION	0.06153817799024077	DESIGN
// FIXME: Can get optimized for IEqlNode	DESIGN	0.9796384628609889	WITHOUT_CLASSIFICATION	0.020361537139011083	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9999999991181658	DESIGN	8.818341232342602E-10	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9991643007167182	DESIGN	8.356992832817407E-4	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9521329263461557	DESIGN	0.04786707365384438	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9960780756802974	DESIGN	0.003921924319702672	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9222025836233733	WITHOUT_CLASSIFICATION	0.07779741637662674	DESIGN
// TODO: better algorithm to set precision needed	DESIGN	0.9998348392987682	DESIGN	1.651607012319138E-4	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9927475574115326	DESIGN	0.007252442588467338	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9991416076439946	DESIGN	8.583923560054766E-4	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.94511603993591	WITHOUT_CLASSIFICATION	0.054883960064090104	DESIGN
// Yow...this is still ugly	DESIGN	0.9911319984191775	WITHOUT_CLASSIFICATION	0.008868001580822566	DESIGN
// end hack	DESIGN	0.9749392380644583	WITHOUT_CLASSIFICATION	0.025060761935541756	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.9920985075581109	DESIGN	0.007901492441889079	WITHOUT_CLASSIFICATION
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.999261040633416	DESIGN	7.389593665839611E-4	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.844657796265999	DESIGN	0.1553422037340011	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9755869618161898	DESIGN	0.024413038183810222	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999917710094878	DESIGN	8.22899051211136E-6	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999923036886	WITHOUT_CLASSIFICATION	7.696311424870016E-9	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.9994775633157558	DESIGN	5.224366842442031E-4	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9212953314334194	WITHOUT_CLASSIFICATION	0.07870466856658068	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9212953314334194	WITHOUT_CLASSIFICATION	0.07870466856658068	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9212953314334194	WITHOUT_CLASSIFICATION	0.07870466856658068	DESIGN
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.8853933470609965	WITHOUT_CLASSIFICATION	0.11460665293900342	DESIGN
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.5248415874711748	WITHOUT_CLASSIFICATION	0.4751584125288251	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9589046736925237	DESIGN	0.041095326307476296	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.9985131157897137	WITHOUT_CLASSIFICATION	0.0014868842102863367	DESIGN
// TODO: do above but not below for additional newline nodes	DESIGN	0.8421814137440041	DESIGN	0.15781858625599582	WITHOUT_CLASSIFICATION
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.9999978396700472	DESIGN	2.160329952872509E-6	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9943718470050859	DESIGN	0.005628152994914136	WITHOUT_CLASSIFICATION
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9663796255211021	DESIGN	0.03362037447889792	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9982857372568829	DESIGN	0.0017142627431171022	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.7925717056375848	WITHOUT_CLASSIFICATION	0.20742829436241508	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9940803438917842	DESIGN	0.005919656108215745	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.6416308813347521	WITHOUT_CLASSIFICATION	0.3583691186652479	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9940803438917842	DESIGN	0.005919656108215745	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9996852469825459	DESIGN	3.1475301745415566E-4	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.7644912867788625	DESIGN	0.23550871322113748	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.7644912867788625	DESIGN	0.23550871322113748	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9988403489619586	DESIGN	0.0011596510380414242	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.9999207901524816	DESIGN	7.920984751834819E-5	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.9988403489619586	DESIGN	0.0011596510380414242	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9999466265701756	DESIGN	5.3373429824394954E-5	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9778125786079118	DESIGN	0.022187421392088222	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.8653655346695847	DESIGN	0.13463446533041543	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.6670849242824131	DESIGN	0.33291507571758705	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.8946168219210181	DESIGN	0.1053831780789819	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.8946168219210181	DESIGN	0.1053831780789819	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9992098476708423	DESIGN	7.901523291575646E-4	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.929816989237563	WITHOUT_CLASSIFICATION	0.070183010762437	DESIGN
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.986837513826654	DESIGN	0.013162486173345984	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9999857451962325	DESIGN	1.4254803767488054E-5	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.946339811879852	DESIGN	0.05366018812014794	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.9998187369335602	DESIGN	1.812630664398219E-4	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.7657899282943991	DESIGN	0.23421007170560104	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9799131505753899	WITHOUT_CLASSIFICATION	0.020086849424610177	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9992273985421845	DESIGN	7.726014578155001E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.9799131505753899	WITHOUT_CLASSIFICATION	0.020086849424610177	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.7216252529310061	DESIGN	0.27837474706899384	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9997121998187394	DESIGN	2.8780018126056336E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9984118354987088	DESIGN	0.00158816450129111	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9999997443191571	DESIGN	2.5568084291019234E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.9994480435196762	DESIGN	5.519564803238134E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9989360985903992	DESIGN	0.0010639014096006942	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.9080721614201607	DESIGN	0.09192783857983937	WITHOUT_CLASSIFICATION
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9346709429086277	DESIGN	0.06532905709137234	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.7442989243222282	WITHOUT_CLASSIFICATION	0.2557010756777717	DESIGN
// SSS FIXME: Is this correct?	DESIGN	0.9989360985903992	DESIGN	0.0010639014096006942	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9986848069877939	DESIGN	0.001315193012206034	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9995438349656709	DESIGN	4.561650343292243E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9999977066934855	DESIGN	2.293306514548313E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.765850842013628	DESIGN	0.23414915798637215	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9959861445204496	DESIGN	0.0040138554795504065	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9982720594502974	DESIGN	0.001727940549702578	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9999873962212287	DESIGN	1.2603778771403462E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.861192242219547	DESIGN	0.13880775778045296	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9756522475975182	DESIGN	0.024347752402481677	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.596816002435091	DESIGN	0.4031839975649089	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.9726243340565467	WITHOUT_CLASSIFICATION	0.027375665943453312	DESIGN
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9999998450010086	DESIGN	1.549989914128574E-7	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9996936992894812	DESIGN	3.0630071051884533E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9989993129583392	DESIGN	0.001000687041660695	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9983454039747888	WITHOUT_CLASSIFICATION	0.001654596025211279	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9999976466922137	DESIGN	2.353307786317418E-6	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9434943467810416	WITHOUT_CLASSIFICATION	0.05650565321895838	DESIGN
// we basically ignore protocol. let someone report it...	DESIGN	0.9999407637782614	WITHOUT_CLASSIFICATION	5.923622173855467E-5	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9944630601625319	DESIGN	0.0055369398374680336	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9992576713264102	WITHOUT_CLASSIFICATION	7.423286735898835E-4	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9054461605678343	WITHOUT_CLASSIFICATION	0.09455383943216564	DESIGN
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9999959495486864	DESIGN	4.050451313558777E-6	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9259961526205748	WITHOUT_CLASSIFICATION	0.07400384737942525	DESIGN
// FIXME: set up a call configuration for this	DESIGN	0.8946206491864224	WITHOUT_CLASSIFICATION	0.10537935081357765	DESIGN
// TODO: make this do specific-arity calling	DESIGN	0.9780553446043648	DESIGN	0.021944655395635115	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.6379782802151235	WITHOUT_CLASSIFICATION	0.36202171978487657	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.7542108579642164	DESIGN	0.24578914203578364	WITHOUT_CLASSIFICATION
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9721330294311329	DESIGN	0.027866970568867118	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.999930644473622	WITHOUT_CLASSIFICATION	6.935552637797798E-5	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999755194324473	WITHOUT_CLASSIFICATION	2.4480567552727918E-5	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999681248115665	WITHOUT_CLASSIFICATION	3.187518843348438E-5	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.9719036328094678	WITHOUT_CLASSIFICATION	0.028096367190532334	DESIGN
// TODO: WRONG - get interfaces from class	DESIGN	0.522931583940514	WITHOUT_CLASSIFICATION	0.47706841605948613	DESIGN
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9977309544761753	WITHOUT_CLASSIFICATION	0.002269045523824768	DESIGN
// TODO: public only?	DESIGN	0.9797366097704782	DESIGN	0.02026339022952187	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.9996671821077677	WITHOUT_CLASSIFICATION	3.328178922322292E-4	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9992994590485003	DESIGN	7.005409514997667E-4	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.9998504630253657	DESIGN	1.4953697463423784E-4	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9993866068865804	DESIGN	6.133931134194681E-4	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.7936709270276946	WITHOUT_CLASSIFICATION	0.20632907297230532	DESIGN
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9559602007630359	DESIGN	0.044039799236964	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9559602007630359	DESIGN	0.044039799236964	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.9326886393206102	WITHOUT_CLASSIFICATION	0.06731136067938989	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.989715250573157	DESIGN	0.010284749426843012	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.989715250573157	DESIGN	0.010284749426843012	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9999247527718815	WITHOUT_CLASSIFICATION	7.524722811846331E-5	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9949283269956938	DESIGN	0.005071673004306187	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.98879449644398	WITHOUT_CLASSIFICATION	0.01120550355601996	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.9122043077085598	DESIGN	0.08779569229144034	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9998164093606516	DESIGN	1.8359063934835965E-4	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9469583111634213	DESIGN	0.05304168883657874	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.7175670795043019	DESIGN	0.28243292049569824	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999679014015611	DESIGN	3.209859843879468E-5	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999679014015611	DESIGN	3.209859843879468E-5	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9271446841087463	WITHOUT_CLASSIFICATION	0.07285531589125373	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.9517822168100264	DESIGN	0.04821778318997358	WITHOUT_CLASSIFICATION
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9803965150174232	DESIGN	0.01960348498257673	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.985351783892301	DESIGN	0.014648216107699053	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.8357308097693852	DESIGN	0.1642691902306148	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.9999913743189595	WITHOUT_CLASSIFICATION	8.625681040671897E-6	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9997470277544634	DESIGN	2.52972245536642E-4	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.9842384609836806	DESIGN	0.015761539016319485	WITHOUT_CLASSIFICATION
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9989043352854455	DESIGN	0.0010956647145545174	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.5280059367666142	DESIGN	0.4719940632333857	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.997561546064125	WITHOUT_CLASSIFICATION	0.002438453935875001	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9962489005030344	DESIGN	0.003751099496965528	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9434943467810416	WITHOUT_CLASSIFICATION	0.05650565321895838	DESIGN
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.91059930521844	WITHOUT_CLASSIFICATION	0.08940069478156006	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9264927221514444	DESIGN	0.0735072778485556	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.5098482567832693	DESIGN	0.4901517432167308	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.787262570319927	DESIGN	0.21273742968007303	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.7386543625547973	DESIGN	0.2613456374452028	WITHOUT_CLASSIFICATION
// Hacky: Advance position to eat newline here....	DESIGN	0.9999738058200187	DESIGN	2.6194179981221702E-5	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.552128582759257	DESIGN	0.4478714172407429	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9940553994926394	DESIGN	0.005944600507360523	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9940553994926394	DESIGN	0.005944600507360523	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.9616765028524679	WITHOUT_CLASSIFICATION	0.038323497147532165	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.7294526942738409	WITHOUT_CLASSIFICATION	0.27054730572615915	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9078573994403207	DESIGN	0.09214260055967932	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.961245157202116	DESIGN	0.03875484279788392	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.9895947154086984	DESIGN	0.010405284591301585	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9999708787926643	WITHOUT_CLASSIFICATION	2.91212073357078E-5	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8575894154017708	DESIGN	0.14241058459822917	WITHOUT_CLASSIFICATION
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.7031996964570371	DESIGN	0.296800303542963	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9009156980756537	WITHOUT_CLASSIFICATION	0.09908430192434618	DESIGN
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999910620145729	DESIGN	8.937985427053965E-6	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8581682563594223	DESIGN	0.1418317436405778	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.9999768276369688	DESIGN	2.317236303127848E-5	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8581682563594223	DESIGN	0.1418317436405778	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8581682563594223	DESIGN	0.1418317436405778	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9999876270700666	WITHOUT_CLASSIFICATION	1.2372929933350095E-5	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.9256880525578493	WITHOUT_CLASSIFICATION	0.07431194744215074	DESIGN
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999922354012891	DESIGN	7.764598710968346E-6	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.8721714487611585	DESIGN	0.12782855123884154	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9897755329787513	DESIGN	0.010224467021248736	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.9600676114457903	WITHOUT_CLASSIFICATION	0.03993238855420958	DESIGN
// TODO: This is probably BAD...	DESIGN	0.9968314499736556	DESIGN	0.003168550026344301	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9528536916619462	DESIGN	0.047146308338053874	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.999764985648322	DESIGN	2.350143516780738E-4	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999954791924361	DESIGN	4.520807563848564E-6	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9999991197764193	DESIGN	8.802235806086643E-7	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9528536916619462	DESIGN	0.047146308338053874	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9528536916619462	DESIGN	0.047146308338053874	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9528536916619462	DESIGN	0.047146308338053874	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9528536916619462	DESIGN	0.047146308338053874	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9999929240111115	DESIGN	7.075988888437811E-6	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.9992372608769144	DESIGN	7.627391230855767E-4	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.991719318281722	DESIGN	0.00828068171827804	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9679976951418942	DESIGN	0.03200230485810582	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9679976951418942	DESIGN	0.03200230485810582	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9905925940693822	WITHOUT_CLASSIFICATION	0.009407405930617882	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9990551740667901	WITHOUT_CLASSIFICATION	9.448259332098976E-4	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9970191377032877	WITHOUT_CLASSIFICATION	0.002980862296712382	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.9970191377032877	WITHOUT_CLASSIFICATION	0.002980862296712382	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9634413947653986	DESIGN	0.036558605234601436	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9834933144610916	DESIGN	0.016506685538908397	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9925090114532209	DESIGN	0.007490988546779075	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999900347886697	DESIGN	9.96521133031746E-6	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.9999900347886697	DESIGN	9.96521133031746E-6	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.5691249740586509	DESIGN	0.430875025941349	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9993492223558053	DESIGN	6.50777644194697E-4	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9999714915901663	DESIGN	2.850840983364526E-5	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999977554452817	DESIGN	2.2445547183616635E-6	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.946168342686411	DESIGN	0.05383165731358897	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999872228918485	WITHOUT_CLASSIFICATION	1.2777108151427102E-5	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9996057798250987	DESIGN	3.94220174901223E-4	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9762224509628642	DESIGN	0.023777549037135744	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9990783268871071	WITHOUT_CLASSIFICATION	9.216731128930611E-4	DESIGN
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.6670849242824131	DESIGN	0.33291507571758705	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.6670849242824131	DESIGN	0.33291507571758705	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.6263381690850816	WITHOUT_CLASSIFICATION	0.37366183091491856	DESIGN
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9992098476708423	DESIGN	7.901523291575646E-4	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.929816989237563	WITHOUT_CLASSIFICATION	0.070183010762437	DESIGN
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999481600114803	DESIGN	5.183998851972926E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999909632405687	DESIGN	9.036759431319132E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.5813046430004434	DESIGN	0.41869535699955657	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.8442714251670094	DESIGN	0.15572857483299057	WITHOUT_CLASSIFICATION
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9830305290057048	DESIGN	0.01696947099429527	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.9963454501807688	DESIGN	0.003654549819231317	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9569299936737558	WITHOUT_CLASSIFICATION	0.04307000632624433	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9271446841087463	WITHOUT_CLASSIFICATION	0.07285531589125373	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9009156980756537	WITHOUT_CLASSIFICATION	0.09908430192434618	DESIGN
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999536046943	DESIGN	4.63953057076709E-8	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.694180707923984	DESIGN	0.30581929207601594	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9940553994926394	DESIGN	0.005944600507360523	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9928072271967676	WITHOUT_CLASSIFICATION	0.007192772803232316	DESIGN
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.999666248208259	DESIGN	3.337517917410784E-4	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999999875927795	DESIGN	1.2407220481334175E-8	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999750682058	DESIGN	2.493179415326257E-8	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.8478478027609739	DESIGN	0.15215219723902615	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.8551427570011183	DESIGN	0.14485724299888164	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.8551427570011183	DESIGN	0.14485724299888164	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9297126141258681	DESIGN	0.07028738587413183	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.8630008034443679	DESIGN	0.136999196555632	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.9236954310340187	DESIGN	0.07630456896598127	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999992438353995	DESIGN	7.561646005336562E-7	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.8630008034443679	DESIGN	0.136999196555632	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.5503572025805048	DESIGN	0.4496427974194953	WITHOUT_CLASSIFICATION
// HACK: force clinit to be created	DESIGN	0.9749095336925507	DESIGN	0.025090466307449266	WITHOUT_CLASSIFICATION
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.8010481675859351	DESIGN	0.1989518324140649	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9994363328495095	DESIGN	5.636671504905486E-4	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9853631054361708	WITHOUT_CLASSIFICATION	0.014636894563829196	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.9212953314334194	WITHOUT_CLASSIFICATION	0.07870466856658068	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9940553994926394	DESIGN	0.005944600507360523	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.8853933470609965	WITHOUT_CLASSIFICATION	0.11460665293900342	DESIGN
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.999961838739775	DESIGN	3.816126022495791E-5	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.857105473128015	WITHOUT_CLASSIFICATION	0.142894526871985	DESIGN
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9929811605010433	DESIGN	0.007018839498956715	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999996573069767	DESIGN	3.426930233013026E-7	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.9999992325919922	DESIGN	7.67408007885641E-7	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.8931592678045637	DESIGN	0.10684073219543629	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9998454652646	DESIGN	1.5453473539997365E-4	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9790972751190595	DESIGN	0.020902724880940526	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9999473568909928	WITHOUT_CLASSIFICATION	5.2643109007130054E-5	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.9589046736925237	DESIGN	0.041095326307476296	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999679014015611	DESIGN	3.209859843879468E-5	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9142731031635417	DESIGN	0.08572689683645823	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9142731031635417	DESIGN	0.08572689683645823	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9142731031635417	DESIGN	0.08572689683645823	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999999993328	DESIGN	6.672918279619234E-13	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.9999160338645068	DESIGN	8.396613549327887E-5	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9731714701233724	WITHOUT_CLASSIFICATION	0.02682852987662771	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.998691842666393	DESIGN	0.0013081573336070117	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9997603459667399	DESIGN	2.396540332600887E-4	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9999996340961061	DESIGN	3.6590389378371385E-7	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9819554003146479	DESIGN	0.018044599685352124	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9879043812671192	WITHOUT_CLASSIFICATION	0.012095618732880866	DESIGN
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999457804196498	DESIGN	5.421958035016729E-5	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9779112938016064	DESIGN	0.022088706198393572	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999965764939935	DESIGN	3.4235060064168024E-6	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.9999219840527436	DESIGN	7.801594725635895E-5	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.997327926329454	DESIGN	0.0026720736705460554	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9891673461697282	DESIGN	0.010832653830271717	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.947322749092021	WITHOUT_CLASSIFICATION	0.05267725090797893	DESIGN
// end hack	DESIGN	0.9749392380644583	WITHOUT_CLASSIFICATION	0.025060761935541756	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.8036551849490245	WITHOUT_CLASSIFICATION	0.19634481505097542	DESIGN
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999750682058	DESIGN	2.493179415326257E-8	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999999999982621	DESIGN	1.7379035359428754E-12	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.9920985075581109	DESIGN	0.007901492441889079	WITHOUT_CLASSIFICATION
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.984170896482625	WITHOUT_CLASSIFICATION	0.015829103517375015	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9078573994403207	DESIGN	0.09214260055967932	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.961245157202116	DESIGN	0.03875484279788392	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9917026015567085	DESIGN	0.008297398443291462	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.7680054953241204	WITHOUT_CLASSIFICATION	0.23199450467587956	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.8575894154017708	DESIGN	0.14241058459822917	WITHOUT_CLASSIFICATION
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9150313518422983	WITHOUT_CLASSIFICATION	0.08496864815770158	DESIGN
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8581682563594223	DESIGN	0.1418317436405778	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.8581682563594223	DESIGN	0.1418317436405778	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9417656809740763	DESIGN	0.05823431902592362	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.9890752151336971	WITHOUT_CLASSIFICATION	0.010924784866302977	DESIGN
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9991531821718364	DESIGN	8.468178281636779E-4	WITHOUT_CLASSIFICATION
