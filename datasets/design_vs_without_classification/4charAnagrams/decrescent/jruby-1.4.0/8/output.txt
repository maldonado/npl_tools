// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999240382125	WITHOUT_CLASSIFICATION	7.596178754818428E-8	DESIGN
// line 335	WITHOUT_CLASSIFICATION	0.9999981278937293	WITHOUT_CLASSIFICATION	1.872106270713434E-6	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999739267833	WITHOUT_CLASSIFICATION	2.607321670007027E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999739267833	WITHOUT_CLASSIFICATION	2.607321670007027E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998584020897426	WITHOUT_CLASSIFICATION	1.415979102574129E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998584020897426	WITHOUT_CLASSIFICATION	1.415979102574129E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999535592169055	WITHOUT_CLASSIFICATION	4.644078309447932E-5	DESIGN
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999941929344206	WITHOUT_CLASSIFICATION	5.807065579361944E-6	DESIGN
// line 362	WITHOUT_CLASSIFICATION	0.9999992786631207	WITHOUT_CLASSIFICATION	7.213368794290294E-7	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999995802631395	WITHOUT_CLASSIFICATION	4.19736860431065E-7	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9994491887144248	WITHOUT_CLASSIFICATION	5.508112855752494E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9994491887144248	WITHOUT_CLASSIFICATION	5.508112855752494E-4	DESIGN
// line 391	WITHOUT_CLASSIFICATION	0.999998080635145	WITHOUT_CLASSIFICATION	1.9193648550871786E-6	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993979772593397	WITHOUT_CLASSIFICATION	6.020227406603658E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993979772593397	WITHOUT_CLASSIFICATION	6.020227406603658E-4	DESIGN
/* ^D */	WITHOUT_CLASSIFICATION	0.9999724650891327	WITHOUT_CLASSIFICATION	2.7534910867235317E-5	DESIGN
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999881791413632	WITHOUT_CLASSIFICATION	1.182085863683072E-5	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998870847730416	WITHOUT_CLASSIFICATION	1.129152269585087E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998870847730416	WITHOUT_CLASSIFICATION	1.129152269585087E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998870847730416	WITHOUT_CLASSIFICATION	1.129152269585087E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998870847730416	WITHOUT_CLASSIFICATION	1.129152269585087E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998870847730416	WITHOUT_CLASSIFICATION	1.129152269585087E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998870847730416	WITHOUT_CLASSIFICATION	1.129152269585087E-4	DESIGN
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998870847730416	WITHOUT_CLASSIFICATION	1.129152269585087E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998774547764699	WITHOUT_CLASSIFICATION	1.2254522352998098E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998774547764699	WITHOUT_CLASSIFICATION	1.2254522352998098E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998774547764699	WITHOUT_CLASSIFICATION	1.2254522352998098E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998774547764699	WITHOUT_CLASSIFICATION	1.2254522352998098E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998774547764699	WITHOUT_CLASSIFICATION	1.2254522352998098E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998774547764699	WITHOUT_CLASSIFICATION	1.2254522352998098E-4	DESIGN
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998774547764699	WITHOUT_CLASSIFICATION	1.2254522352998098E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991356563457299	WITHOUT_CLASSIFICATION	8.643436542700824E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991356563457299	WITHOUT_CLASSIFICATION	8.643436542700824E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991356563457299	WITHOUT_CLASSIFICATION	8.643436542700824E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991356563457299	WITHOUT_CLASSIFICATION	8.643436542700824E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991356563457299	WITHOUT_CLASSIFICATION	8.643436542700824E-4	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991356563457299	WITHOUT_CLASSIFICATION	8.643436542700824E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995126194207083	WITHOUT_CLASSIFICATION	4.8738057929167684E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995126194207083	WITHOUT_CLASSIFICATION	4.8738057929167684E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995126194207083	WITHOUT_CLASSIFICATION	4.8738057929167684E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995126194207083	WITHOUT_CLASSIFICATION	4.8738057929167684E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995126194207083	WITHOUT_CLASSIFICATION	4.8738057929167684E-4	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995126194207083	WITHOUT_CLASSIFICATION	4.8738057929167684E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994673022664359	WITHOUT_CLASSIFICATION	5.326977335641111E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994673022664359	WITHOUT_CLASSIFICATION	5.326977335641111E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994673022664359	WITHOUT_CLASSIFICATION	5.326977335641111E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994673022664359	WITHOUT_CLASSIFICATION	5.326977335641111E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994673022664359	WITHOUT_CLASSIFICATION	5.326977335641111E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994673022664359	WITHOUT_CLASSIFICATION	5.326977335641111E-4	DESIGN
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9994673022664359	WITHOUT_CLASSIFICATION	5.326977335641111E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9971829340005086	WITHOUT_CLASSIFICATION	0.0028170659994914003	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9971829340005086	WITHOUT_CLASSIFICATION	0.0028170659994914003	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9971829340005086	WITHOUT_CLASSIFICATION	0.0028170659994914003	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9971829340005086	WITHOUT_CLASSIFICATION	0.0028170659994914003	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999987774842558	WITHOUT_CLASSIFICATION	1.2225157442644266E-6	DESIGN
//Do nothing	WITHOUT_CLASSIFICATION	0.9999987774842558	WITHOUT_CLASSIFICATION	1.2225157442644266E-6	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// switch	WITHOUT_CLASSIFICATION	0.9999598805910836	WITHOUT_CLASSIFICATION	4.0119408916306205E-5	DESIGN
// return result	WITHOUT_CLASSIFICATION	0.9999930651786884	WITHOUT_CLASSIFICATION	6.9348213115700015E-6	DESIGN
// name	WITHOUT_CLASSIFICATION	0.9999461210169097	WITHOUT_CLASSIFICATION	5.3878983090191184E-5	DESIGN
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999990525691608	WITHOUT_CLASSIFICATION	9.474308391483932E-7	DESIGN
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999950672573371	WITHOUT_CLASSIFICATION	4.932742662926387E-6	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999182948573673	WITHOUT_CLASSIFICATION	8.170514263275655E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999182948573673	WITHOUT_CLASSIFICATION	8.170514263275655E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999182948573673	WITHOUT_CLASSIFICATION	8.170514263275655E-5	DESIGN
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999182948573673	WITHOUT_CLASSIFICATION	8.170514263275655E-5	DESIGN
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999996823205645	WITHOUT_CLASSIFICATION	3.176794354566929E-7	DESIGN
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999766246627045	WITHOUT_CLASSIFICATION	2.3375337295376293E-5	DESIGN
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999994109219231	WITHOUT_CLASSIFICATION	5.890780769792178E-7	DESIGN
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9977045725769612	WITHOUT_CLASSIFICATION	0.0022954274230387282	DESIGN
// Version information:	WITHOUT_CLASSIFICATION	0.9999692830629422	WITHOUT_CLASSIFICATION	3.071693705789743E-5	DESIGN
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999980713861496	WITHOUT_CLASSIFICATION	1.9286138503849605E-6	DESIGN
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999988740806334	WITHOUT_CLASSIFICATION	1.1259193667315962E-6	DESIGN
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999236679941	WITHOUT_CLASSIFICATION	7.633200592535581E-8	DESIGN
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9944863796142245	WITHOUT_CLASSIFICATION	0.0055136203857754735	DESIGN
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999556187377856	WITHOUT_CLASSIFICATION	4.43812622143472E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999830387474018	WITHOUT_CLASSIFICATION	1.6961252598216675E-5	DESIGN
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9997956113730717	WITHOUT_CLASSIFICATION	2.043886269283167E-4	DESIGN
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998573178576597	WITHOUT_CLASSIFICATION	1.4268214234027839E-4	DESIGN
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9998902272082627	WITHOUT_CLASSIFICATION	1.097727917372563E-4	DESIGN
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994991024332	WITHOUT_CLASSIFICATION	5.008975668192556E-7	DESIGN
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999909920734	WITHOUT_CLASSIFICATION	9.007926640865755E-9	DESIGN
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9916133280346378	DESIGN	0.008386671965362257	WITHOUT_CLASSIFICATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999182948573673	WITHOUT_CLASSIFICATION	8.170514263275655E-5	DESIGN
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999960226078344	WITHOUT_CLASSIFICATION	3.977392165637486E-6	DESIGN
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999858049363	WITHOUT_CLASSIFICATION	1.4195063707553348E-8	DESIGN
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998369059281	WITHOUT_CLASSIFICATION	1.63094071930775E-7	DESIGN
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9992957557731855	WITHOUT_CLASSIFICATION	7.042442268144076E-4	DESIGN
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9966735512176115	WITHOUT_CLASSIFICATION	0.0033264487823885447	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999664148931962	WITHOUT_CLASSIFICATION	3.3585106803937017E-5	DESIGN
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999951184072603	WITHOUT_CLASSIFICATION	4.88159273962455E-6	DESIGN
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999998819164001	WITHOUT_CLASSIFICATION	1.1808359995247285E-7	DESIGN
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9609477770467301	WITHOUT_CLASSIFICATION	0.03905222295326996	DESIGN
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999997939520663	WITHOUT_CLASSIFICATION	2.0604793359275584E-7	DESIGN
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9998873351191812	WITHOUT_CLASSIFICATION	1.1266488081880829E-4	DESIGN
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999961503264889	WITHOUT_CLASSIFICATION	3.849673511108703E-6	DESIGN
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999935758437171	WITHOUT_CLASSIFICATION	6.424156282950473E-6	DESIGN
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999983708742075	WITHOUT_CLASSIFICATION	1.6291257924758002E-6	DESIGN
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999980155135786	WITHOUT_CLASSIFICATION	1.984486421478805E-6	DESIGN
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999997983321909	WITHOUT_CLASSIFICATION	2.0166780915817612E-7	DESIGN
// RubySignal	WITHOUT_CLASSIFICATION	0.9999972366549854	WITHOUT_CLASSIFICATION	2.7633450144991094E-6	DESIGN
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999991853683265	WITHOUT_CLASSIFICATION	8.146316734428108E-7	DESIGN
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999996706543182	WITHOUT_CLASSIFICATION	3.293456818112736E-7	DESIGN
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999547310934	WITHOUT_CLASSIFICATION	4.5268906573376974E-8	DESIGN
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9907719082731732	WITHOUT_CLASSIFICATION	0.009228091726826902	DESIGN
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.999996256982161	WITHOUT_CLASSIFICATION	3.7430178390435E-6	DESIGN
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999982732231045	WITHOUT_CLASSIFICATION	1.7267768954327848E-6	DESIGN
//io.finish();	WITHOUT_CLASSIFICATION	0.9999696104406632	WITHOUT_CLASSIFICATION	3.0389559336771134E-5	DESIGN
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9998936534762101	WITHOUT_CLASSIFICATION	1.0634652378983692E-4	DESIGN
// hmm...	WITHOUT_CLASSIFICATION	0.9995774809735103	WITHOUT_CLASSIFICATION	4.225190264898189E-4	DESIGN
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999853065767002	WITHOUT_CLASSIFICATION	1.4693423299823665E-5	DESIGN
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999891859661307	WITHOUT_CLASSIFICATION	1.0814033869333343E-5	DESIGN
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.999999928911688	WITHOUT_CLASSIFICATION	7.108831200508005E-8	DESIGN
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999995504127341	WITHOUT_CLASSIFICATION	4.495872658509644E-7	DESIGN
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999999260350686	WITHOUT_CLASSIFICATION	7.396493134499432E-8	DESIGN
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999979141900643	WITHOUT_CLASSIFICATION	2.0858099356284715E-6	DESIGN
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999995241579284	WITHOUT_CLASSIFICATION	4.75842071556639E-7	DESIGN
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.999999995265134	WITHOUT_CLASSIFICATION	4.73486601257779E-9	DESIGN
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999975767495791	WITHOUT_CLASSIFICATION	2.4232504209046874E-6	DESIGN
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9997727950447016	WITHOUT_CLASSIFICATION	2.2720495529843915E-4	DESIGN
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.999998947946693	WITHOUT_CLASSIFICATION	1.052053306967106E-6	DESIGN
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999628870471	WITHOUT_CLASSIFICATION	3.7112952974585734E-8	DESIGN
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999999777741461	WITHOUT_CLASSIFICATION	2.222585386003329E-8	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997850927124988	WITHOUT_CLASSIFICATION	2.1490728750120567E-4	DESIGN
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.999998894061996	WITHOUT_CLASSIFICATION	1.1059380039222763E-6	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999844216096583	WITHOUT_CLASSIFICATION	1.557839034173243E-5	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9995670473692272	WITHOUT_CLASSIFICATION	4.329526307728532E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.999864877742408	WITHOUT_CLASSIFICATION	1.3512225759203475E-4	DESIGN
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.999864877742408	WITHOUT_CLASSIFICATION	1.3512225759203475E-4	DESIGN
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9993030676004001	WITHOUT_CLASSIFICATION	6.96932399599921E-4	DESIGN
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999989473463573	WITHOUT_CLASSIFICATION	1.052653642714274E-6	DESIGN
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999180518141044	WITHOUT_CLASSIFICATION	8.194818589557368E-5	DESIGN
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.999922998512853	WITHOUT_CLASSIFICATION	7.700148714686243E-5	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8866666886631619	WITHOUT_CLASSIFICATION	0.11333331133683802	DESIGN
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.996507024064718	WITHOUT_CLASSIFICATION	0.0034929759352819445	DESIGN
// ???	WITHOUT_CLASSIFICATION	0.9985373033529233	WITHOUT_CLASSIFICATION	0.0014626966470766539	DESIGN
// PID	WITHOUT_CLASSIFICATION	0.999984535439989	WITHOUT_CLASSIFICATION	1.5464560011068103E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999844216096583	WITHOUT_CLASSIFICATION	1.557839034173243E-5	DESIGN
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999522318396	WITHOUT_CLASSIFICATION	4.7768160409512543E-8	DESIGN
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999055279779545	WITHOUT_CLASSIFICATION	9.447202204540683E-5	DESIGN
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999993150555	WITHOUT_CLASSIFICATION	6.849445045386041E-10	DESIGN
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999864170083	WITHOUT_CLASSIFICATION	1.3582991672124388E-8	DESIGN
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999510579762	WITHOUT_CLASSIFICATION	4.894202387036373E-8	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999975320576	WITHOUT_CLASSIFICATION	2.4679423882719305E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999975320576	WITHOUT_CLASSIFICATION	2.4679423882719305E-9	DESIGN
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999975320576	WITHOUT_CLASSIFICATION	2.4679423882719305E-9	DESIGN
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9310077151765911	WITHOUT_CLASSIFICATION	0.06899228482340891	DESIGN
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.999999998468307	WITHOUT_CLASSIFICATION	1.531693070207818E-9	DESIGN
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999988476803987	WITHOUT_CLASSIFICATION	1.1523196013596748E-6	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.5165605753329602	WITHOUT_CLASSIFICATION	0.48343942466703993	DESIGN
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.8108205590977334	DESIGN	0.1891794409022665	WITHOUT_CLASSIFICATION
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999998168180682	WITHOUT_CLASSIFICATION	1.8318193177359786E-7	DESIGN
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.999879784156147	WITHOUT_CLASSIFICATION	1.2021584385306554E-4	DESIGN
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999999232679	WITHOUT_CLASSIFICATION	7.673210630565788E-11	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999966730934389	WITHOUT_CLASSIFICATION	3.3269065611875096E-6	DESIGN
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999966730934389	WITHOUT_CLASSIFICATION	3.3269065611875096E-6	DESIGN
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.999958886581833	WITHOUT_CLASSIFICATION	4.111341816713301E-5	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999513110229	WITHOUT_CLASSIFICATION	4.868897699554777E-8	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999925884287693	WITHOUT_CLASSIFICATION	7.411571230783345E-6	DESIGN
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999925884287693	WITHOUT_CLASSIFICATION	7.411571230783345E-6	DESIGN
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999295939886	WITHOUT_CLASSIFICATION	7.040601141951741E-8	DESIGN
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999998963156841	WITHOUT_CLASSIFICATION	1.0368431598127275E-7	DESIGN
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999028222585874	WITHOUT_CLASSIFICATION	9.717774141263973E-5	DESIGN
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999716477921	WITHOUT_CLASSIFICATION	2.8352207853810476E-8	DESIGN
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999980208724849	WITHOUT_CLASSIFICATION	1.979127514980992E-6	DESIGN
// extras flag	WITHOUT_CLASSIFICATION	0.9999999699713139	WITHOUT_CLASSIFICATION	3.002868598382013E-8	DESIGN
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999990528455625	WITHOUT_CLASSIFICATION	9.471544374744282E-7	DESIGN
// ...nothing	WITHOUT_CLASSIFICATION	0.9999971751782757	WITHOUT_CLASSIFICATION	2.824821724284187E-6	DESIGN
// utility method	WITHOUT_CLASSIFICATION	0.9999087859243434	WITHOUT_CLASSIFICATION	9.121407565665422E-5	DESIGN
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999997641865325	WITHOUT_CLASSIFICATION	2.3581346752638992E-7	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999844216096583	WITHOUT_CLASSIFICATION	1.557839034173243E-5	DESIGN
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999992002500996	WITHOUT_CLASSIFICATION	7.997499004865419E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999991900086247	WITHOUT_CLASSIFICATION	8.099913751955328E-7	DESIGN
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999939427573065	WITHOUT_CLASSIFICATION	6.057242693589335E-6	DESIGN
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.7842820241267272	WITHOUT_CLASSIFICATION	0.21571797587327288	DESIGN
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999627740580257	WITHOUT_CLASSIFICATION	3.722594197429225E-5	DESIGN
// MRI does it!	WITHOUT_CLASSIFICATION	0.9990077459373993	WITHOUT_CLASSIFICATION	9.922540626007403E-4	DESIGN
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.99974866881052	WITHOUT_CLASSIFICATION	2.5133118948004405E-4	DESIGN
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999790038668136	WITHOUT_CLASSIFICATION	2.099613318635632E-5	DESIGN
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999809415810209	WITHOUT_CLASSIFICATION	1.9058418979043726E-5	DESIGN
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9992527508755038	WITHOUT_CLASSIFICATION	7.472491244961898E-4	DESIGN
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999998878808168	WITHOUT_CLASSIFICATION	1.1211918314434938E-7	DESIGN
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.999901573132807	WITHOUT_CLASSIFICATION	9.842686719296142E-5	DESIGN
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.99995594401056	WITHOUT_CLASSIFICATION	4.405598944008395E-5	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999965717454611	WITHOUT_CLASSIFICATION	3.4282545390247E-6	DESIGN
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999995861425242	WITHOUT_CLASSIFICATION	4.138574758947905E-7	DESIGN
// recheck condition	WITHOUT_CLASSIFICATION	0.9999508496425161	WITHOUT_CLASSIFICATION	4.915035748382192E-5	DESIGN
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999999324904851	WITHOUT_CLASSIFICATION	6.75095149146879E-7	DESIGN
// Construct key services	WITHOUT_CLASSIFICATION	0.9999983186672208	WITHOUT_CLASSIFICATION	1.6813327792971261E-6	DESIGN
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999948410410757	WITHOUT_CLASSIFICATION	5.158958924284829E-6	DESIGN
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999631000216257	WITHOUT_CLASSIFICATION	3.68999783743345E-5	DESIGN
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999995631475501	WITHOUT_CLASSIFICATION	4.368524498768807E-7	DESIGN
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999971020866848	WITHOUT_CLASSIFICATION	2.897913315112917E-6	DESIGN
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999872228396	WITHOUT_CLASSIFICATION	1.2777160471059059E-8	DESIGN
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.999923841264646	WITHOUT_CLASSIFICATION	7.615873535406079E-5	DESIGN
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9997691205283481	WITHOUT_CLASSIFICATION	2.3087947165188174E-4	DESIGN
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9996409795429889	WITHOUT_CLASSIFICATION	3.590204570110801E-4	DESIGN
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9988699694947311	WITHOUT_CLASSIFICATION	0.0011300305052689902	DESIGN
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999987047026738	WITHOUT_CLASSIFICATION	1.2952973262574215E-6	DESIGN
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.999983210297654	WITHOUT_CLASSIFICATION	1.6789702346046378E-5	DESIGN
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999999665619055	WITHOUT_CLASSIFICATION	3.343809448617824E-8	DESIGN
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9829986504048718	WITHOUT_CLASSIFICATION	0.01700134959512829	DESIGN
// determine spacing	WITHOUT_CLASSIFICATION	0.9997897095270858	WITHOUT_CLASSIFICATION	2.1029047291428097E-4	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9985418198546109	WITHOUT_CLASSIFICATION	0.0014581801453891375	DESIGN
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9997959832602618	WITHOUT_CLASSIFICATION	2.0401673973819903E-4	DESIGN
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9998397365825819	WITHOUT_CLASSIFICATION	1.6026341741821656E-4	DESIGN
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9972726189101931	WITHOUT_CLASSIFICATION	0.0027273810898069115	DESIGN
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999834417213904	WITHOUT_CLASSIFICATION	1.6558278609546014E-5	DESIGN
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999839450358	WITHOUT_CLASSIFICATION	1.605496420591741E-8	DESIGN
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999993230659303	WITHOUT_CLASSIFICATION	6.769340697407466E-7	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9995736748721599	WITHOUT_CLASSIFICATION	4.263251278401609E-4	DESIGN
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999996900434438	WITHOUT_CLASSIFICATION	3.0995655616999147E-7	DESIGN
// Default objects	WITHOUT_CLASSIFICATION	0.9999999902021772	WITHOUT_CLASSIFICATION	9.79782284286158E-9	DESIGN
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999977830475991	WITHOUT_CLASSIFICATION	2.2169524009193804E-6	DESIGN
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999917610932932	WITHOUT_CLASSIFICATION	8.23890670686689E-6	DESIGN
// Java support	WITHOUT_CLASSIFICATION	0.999979838715372	WITHOUT_CLASSIFICATION	2.0161284628042722E-5	DESIGN
// Parser stats	WITHOUT_CLASSIFICATION	0.9999997729519168	WITHOUT_CLASSIFICATION	2.2704808326662368E-7	DESIGN
// Compilation	WITHOUT_CLASSIFICATION	0.9999992213828905	WITHOUT_CLASSIFICATION	7.786171094080796E-7	DESIGN
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999999961056297	WITHOUT_CLASSIFICATION	3.894370263201912E-9	DESIGN
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999756046005022	WITHOUT_CLASSIFICATION	2.4395399497915424E-5	DESIGN
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999891707734317	WITHOUT_CLASSIFICATION	1.0829226568349923E-5	DESIGN
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9987993931645085	WITHOUT_CLASSIFICATION	0.001200606835491485	DESIGN
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999674852923617	WITHOUT_CLASSIFICATION	3.251470763833283E-5	DESIGN
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999993493117932	WITHOUT_CLASSIFICATION	6.506882066867188E-7	DESIGN
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999317914384	WITHOUT_CLASSIFICATION	6.820856161522217E-8	DESIGN
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9989050025438996	WITHOUT_CLASSIFICATION	0.0010949974561003393	DESIGN
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.5068607988330303	WITHOUT_CLASSIFICATION	0.49313920116696985	DESIGN
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9998536950368271	WITHOUT_CLASSIFICATION	1.463049631729135E-4	DESIGN
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999983866604186	WITHOUT_CLASSIFICATION	1.613339581348356E-6	DESIGN
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999996696265708	WITHOUT_CLASSIFICATION	3.303734292594189E-7	DESIGN
// default options	WITHOUT_CLASSIFICATION	0.9999989805868752	WITHOUT_CLASSIFICATION	1.0194131247206733E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999945368643629	WITHOUT_CLASSIFICATION	5.463135637039935E-6	DESIGN
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999945368643629	WITHOUT_CLASSIFICATION	5.463135637039935E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999930540683358	WITHOUT_CLASSIFICATION	6.945931664170692E-6	DESIGN
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999930540683358	WITHOUT_CLASSIFICATION	6.945931664170692E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999959054075797	WITHOUT_CLASSIFICATION	4.094592420269353E-6	DESIGN
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999959054075797	WITHOUT_CLASSIFICATION	4.094592420269353E-6	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.999999213484978	WITHOUT_CLASSIFICATION	7.865150219641576E-7	DESIGN
// UTF-8	WITHOUT_CLASSIFICATION	0.999999213484978	WITHOUT_CLASSIFICATION	7.865150219641576E-7	DESIGN
// long name option	WITHOUT_CLASSIFICATION	0.9999999406816943	WITHOUT_CLASSIFICATION	5.931830567325831E-8	DESIGN
// conversion	WITHOUT_CLASSIFICATION	0.9999986798081233	WITHOUT_CLASSIFICATION	1.3201918767328146E-6	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997177786573981	WITHOUT_CLASSIFICATION	2.82221342602008E-4	DESIGN
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999942080019479	WITHOUT_CLASSIFICATION	5.791998052165278E-6	DESIGN
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999821936256877	WITHOUT_CLASSIFICATION	1.7806374312295388E-5	DESIGN
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999997409056756	WITHOUT_CLASSIFICATION	2.5909432446789675E-7	DESIGN
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999998100704836	WITHOUT_CLASSIFICATION	1.8992951639846836E-7	DESIGN
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999775463136	WITHOUT_CLASSIFICATION	2.245368636003226E-8	DESIGN
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999994149024853	WITHOUT_CLASSIFICATION	5.850975146523877E-7	DESIGN
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999999168013652	WITHOUT_CLASSIFICATION	8.319863475659926E-8	DESIGN
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.99999650195774	WITHOUT_CLASSIFICATION	3.4980422600014618E-6	DESIGN
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999964814461157	WITHOUT_CLASSIFICATION	3.518553884216781E-6	DESIGN
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999985888394797	WITHOUT_CLASSIFICATION	1.4111605203120601E-6	DESIGN
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999977598405916	WITHOUT_CLASSIFICATION	2.240159408495793E-6	DESIGN
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999979259705716	WITHOUT_CLASSIFICATION	2.0740294284818207E-6	DESIGN
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999988164723012	WITHOUT_CLASSIFICATION	1.1835276987686092E-6	DESIGN
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.99999999207452	WITHOUT_CLASSIFICATION	7.925480030542531E-9	DESIGN
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999577431402	WITHOUT_CLASSIFICATION	4.2256859852091266E-8	DESIGN
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999998017972401	WITHOUT_CLASSIFICATION	1.9820275981628122E-7	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6912309369358047	DESIGN	0.3087690630641954	WITHOUT_CLASSIFICATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999983563783417	WITHOUT_CLASSIFICATION	1.6436216583286774E-6	DESIGN
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999993763654552	WITHOUT_CLASSIFICATION	6.236345447219067E-7	DESIGN
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9996239782617611	WITHOUT_CLASSIFICATION	3.760217382388668E-4	DESIGN
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999913890989484	WITHOUT_CLASSIFICATION	8.610901051563683E-6	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999997487154338	WITHOUT_CLASSIFICATION	2.512845662061399E-7	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999987942046048	WITHOUT_CLASSIFICATION	1.205795395193578E-6	DESIGN
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999999448691734	WITHOUT_CLASSIFICATION	5.513082659041038E-8	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999814976352	WITHOUT_CLASSIFICATION	1.8502364792626911E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999814976352	WITHOUT_CLASSIFICATION	1.8502364792626911E-7	DESIGN
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999971046674132	WITHOUT_CLASSIFICATION	2.895332586831239E-6	DESIGN
// string given	WITHOUT_CLASSIFICATION	0.9999893075676559	WITHOUT_CLASSIFICATION	1.0692432344050252E-5	DESIGN
// hash given	WITHOUT_CLASSIFICATION	0.9999932833459712	WITHOUT_CLASSIFICATION	6.716654028847548E-6	DESIGN
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9996564585233852	WITHOUT_CLASSIFICATION	3.4354147661464597E-4	DESIGN
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999769367081569	WITHOUT_CLASSIFICATION	2.3063291843169286E-5	DESIGN
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999860512382667	WITHOUT_CLASSIFICATION	1.394876173320589E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.999948119208945	WITHOUT_CLASSIFICATION	5.188079105497569E-5	DESIGN
// nothing	WITHOUT_CLASSIFICATION	0.999948119208945	WITHOUT_CLASSIFICATION	5.188079105497569E-5	DESIGN
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999950902404325	WITHOUT_CLASSIFICATION	4.909759567514883E-6	DESIGN
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8349949780732456	WITHOUT_CLASSIFICATION	0.1650050219267544	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999377890080111	WITHOUT_CLASSIFICATION	6.221099198890571E-5	DESIGN
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999377890080111	WITHOUT_CLASSIFICATION	6.221099198890571E-5	DESIGN
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999975533438485	WITHOUT_CLASSIFICATION	2.44665615139169E-6	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999998303282397	WITHOUT_CLASSIFICATION	1.696717603145788E-7	DESIGN
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999998303282397	WITHOUT_CLASSIFICATION	1.696717603145788E-7	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999775239857863	WITHOUT_CLASSIFICATION	2.2476014213698364E-5	DESIGN
// modified	WITHOUT_CLASSIFICATION	0.9999775239857863	WITHOUT_CLASSIFICATION	2.2476014213698364E-5	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999973826295124	WITHOUT_CLASSIFICATION	2.6173704876393954E-6	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999973826295124	WITHOUT_CLASSIFICATION	2.6173704876393954E-6	DESIGN
// QTRUE	WITHOUT_CLASSIFICATION	0.99996975641596	WITHOUT_CLASSIFICATION	3.0243584040040432E-5	DESIGN
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999331080090367	WITHOUT_CLASSIFICATION	6.68919909633647E-5	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.999999720238204	WITHOUT_CLASSIFICATION	2.797617959090489E-7	DESIGN
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999979260127023	WITHOUT_CLASSIFICATION	2.0739872977197497E-6	DESIGN
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999987673935032	WITHOUT_CLASSIFICATION	1.2326064966952139E-6	DESIGN
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999985396137878	WITHOUT_CLASSIFICATION	1.4603862121468543E-6	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998495726952044	WITHOUT_CLASSIFICATION	1.5042730479570432E-4	DESIGN
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999515349977789	WITHOUT_CLASSIFICATION	4.846500222107209E-5	DESIGN
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998495726952044	WITHOUT_CLASSIFICATION	1.5042730479570432E-4	DESIGN
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999545301040584	WITHOUT_CLASSIFICATION	4.5469895941638114E-5	DESIGN
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999998532125224	WITHOUT_CLASSIFICATION	1.4678747768347587E-7	DESIGN
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999999813264984	WITHOUT_CLASSIFICATION	1.8673501547041183E-8	DESIGN
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999999941151643	WITHOUT_CLASSIFICATION	5.8848358108165305E-9	DESIGN
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.999999909812984	WITHOUT_CLASSIFICATION	9.018701596092404E-8	DESIGN
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.999996433021581	WITHOUT_CLASSIFICATION	3.5669784189643434E-6	DESIGN
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999988657078261	WITHOUT_CLASSIFICATION	1.1342921737744602E-6	DESIGN
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999992616281261	WITHOUT_CLASSIFICATION	7.383718739311391E-7	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999954865348	WITHOUT_CLASSIFICATION	4.513465111261893E-9	DESIGN
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999933864781716	WITHOUT_CLASSIFICATION	6.613521828395596E-6	DESIGN
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999969676037799	WITHOUT_CLASSIFICATION	3.0323962200441395E-6	DESIGN
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.999997436089344	WITHOUT_CLASSIFICATION	2.5639106560033985E-6	DESIGN
// file not given	WITHOUT_CLASSIFICATION	0.9999996035463149	WITHOUT_CLASSIFICATION	3.9645368511259244E-7	DESIGN
// string to eval	WITHOUT_CLASSIFICATION	0.9999443408280942	WITHOUT_CLASSIFICATION	5.5659171905721344E-5	DESIGN
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999999974222221	WITHOUT_CLASSIFICATION	2.577777825489378E-9	DESIGN
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999998223879786	WITHOUT_CLASSIFICATION	1.776120214740836E-7	DESIGN
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999999652379151	WITHOUT_CLASSIFICATION	3.47620848342298E-8	DESIGN
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999675299500516	WITHOUT_CLASSIFICATION	3.2470049948529686E-5	DESIGN
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999998562630452	WITHOUT_CLASSIFICATION	1.4373695485996677E-7	DESIGN
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999999183670502	WITHOUT_CLASSIFICATION	8.163294982750973E-8	DESIGN
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999984275955681	WITHOUT_CLASSIFICATION	1.5724044318917466E-6	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999760680638	WITHOUT_CLASSIFICATION	2.3931936221527725E-8	DESIGN
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999845929557863	WITHOUT_CLASSIFICATION	1.5407044213701893E-5	DESIGN
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9969298174889685	WITHOUT_CLASSIFICATION	0.003070182511031467	DESIGN
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999999984488912	WITHOUT_CLASSIFICATION	1.5511088263150744E-9	DESIGN
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999397183250729	WITHOUT_CLASSIFICATION	6.0281674927143526E-5	DESIGN
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.999884815380309	WITHOUT_CLASSIFICATION	1.151846196909441E-4	DESIGN
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999743677379	WITHOUT_CLASSIFICATION	2.5632262029967425E-8	DESIGN
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999998103669729	WITHOUT_CLASSIFICATION	1.896330271516328E-7	DESIGN
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999556286617	WITHOUT_CLASSIFICATION	4.43713382965174E-8	DESIGN
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999793091887211	WITHOUT_CLASSIFICATION	2.0690811278887165E-5	DESIGN
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999992712357	WITHOUT_CLASSIFICATION	7.287642320272117E-10	DESIGN
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999873890558738	WITHOUT_CLASSIFICATION	1.2610944126223666E-5	DESIGN
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999998578872651	WITHOUT_CLASSIFICATION	1.4211273488884446E-7	DESIGN
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.99999996465695	WITHOUT_CLASSIFICATION	3.53430500433154E-8	DESIGN
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999376679832	WITHOUT_CLASSIFICATION	6.233201674992324E-8	DESIGN
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999680665524	WITHOUT_CLASSIFICATION	3.193344754839831E-8	DESIGN
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999524278098	WITHOUT_CLASSIFICATION	4.7572190194464926E-8	DESIGN
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.999978507616915	WITHOUT_CLASSIFICATION	2.149238308506433E-5	DESIGN
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999989542740991	WITHOUT_CLASSIFICATION	1.0457259009337026E-6	DESIGN
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999964142256156	WITHOUT_CLASSIFICATION	3.585774384418719E-6	DESIGN
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999692028158	WITHOUT_CLASSIFICATION	3.0797184193737194E-8	DESIGN
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999249689637	WITHOUT_CLASSIFICATION	7.503103625067967E-8	DESIGN
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999898879072	WITHOUT_CLASSIFICATION	1.0112092899742938E-8	DESIGN
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999960564621	WITHOUT_CLASSIFICATION	3.9435379292669235E-9	DESIGN
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999997842322752	WITHOUT_CLASSIFICATION	2.157677248196118E-7	DESIGN
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999437015158	WITHOUT_CLASSIFICATION	5.629848427824008E-8	DESIGN
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999895693799874	WITHOUT_CLASSIFICATION	1.0430620012636493E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999984488369762	WITHOUT_CLASSIFICATION	1.5511630237443703E-6	DESIGN
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999956797340535	WITHOUT_CLASSIFICATION	4.320265946592788E-6	DESIGN
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9998796178146999	WITHOUT_CLASSIFICATION	1.2038218530014468E-4	DESIGN
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999949432651	WITHOUT_CLASSIFICATION	5.05673492161727E-9	DESIGN
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.999979584737413	WITHOUT_CLASSIFICATION	2.0415262586951193E-5	DESIGN
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9916539753834528	WITHOUT_CLASSIFICATION	0.00834602461654723	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999938620872605	WITHOUT_CLASSIFICATION	6.1379127395121626E-6	DESIGN
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999938620872605	WITHOUT_CLASSIFICATION	6.1379127395121626E-6	DESIGN
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999999971970463	WITHOUT_CLASSIFICATION	2.8029537046295335E-8	DESIGN
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999998535698632	WITHOUT_CLASSIFICATION	1.4643013677159708E-7	DESIGN
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999998011672192	WITHOUT_CLASSIFICATION	1.9883278081979688E-7	DESIGN
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999645780324365	WITHOUT_CLASSIFICATION	3.542196756347138E-5	DESIGN
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999987351271694	WITHOUT_CLASSIFICATION	1.264872830601834E-6	DESIGN
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999999855851752	WITHOUT_CLASSIFICATION	1.4414824785632782E-8	DESIGN
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999999278711017	WITHOUT_CLASSIFICATION	7.212889829449398E-8	DESIGN
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999615281372546	WITHOUT_CLASSIFICATION	3.8471862745342694E-5	DESIGN
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9994929660612712	WITHOUT_CLASSIFICATION	5.070339387287116E-4	DESIGN
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.999991975285763	WITHOUT_CLASSIFICATION	8.024714237071804E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999956544476519	WITHOUT_CLASSIFICATION	4.345552347985267E-6	DESIGN
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999956544476519	WITHOUT_CLASSIFICATION	4.345552347985267E-6	DESIGN
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9997523034449602	DESIGN	2.4769655503977217E-4	WITHOUT_CLASSIFICATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9994034226421696	WITHOUT_CLASSIFICATION	5.965773578303205E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999996175875	WITHOUT_CLASSIFICATION	3.824125589914929E-10	DESIGN
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999996509622391	WITHOUT_CLASSIFICATION	3.490377609379981E-7	DESIGN
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999974376618	WITHOUT_CLASSIFICATION	2.5623383454645132E-9	DESIGN
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999943442924	WITHOUT_CLASSIFICATION	5.6557074813732365E-9	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999998974728481	WITHOUT_CLASSIFICATION	1.0252715183561639E-7	DESIGN
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999997498565341	WITHOUT_CLASSIFICATION	2.5014346597103546E-7	DESIGN
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999996233109875	WITHOUT_CLASSIFICATION	3.766890124903445E-7	DESIGN
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999075145021153	WITHOUT_CLASSIFICATION	9.248549788464213E-5	DESIGN
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999594146730477	WITHOUT_CLASSIFICATION	4.058532695230193E-5	DESIGN
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999559770281	WITHOUT_CLASSIFICATION	4.4022971821299316E-8	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.999998073565253	WITHOUT_CLASSIFICATION	1.9264347470193105E-6	DESIGN
// Return false here	WITHOUT_CLASSIFICATION	0.999998073565253	WITHOUT_CLASSIFICATION	1.9264347470193105E-6	DESIGN
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999848810136568	WITHOUT_CLASSIFICATION	1.5118986343172289E-5	DESIGN
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9787781310346787	WITHOUT_CLASSIFICATION	0.021221868965321286	DESIGN
/* File class methods */	WITHOUT_CLASSIFICATION	0.999971826746662	WITHOUT_CLASSIFICATION	2.8173253337974618E-5	DESIGN
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.99999645424909	WITHOUT_CLASSIFICATION	3.5457509099316567E-6	DESIGN
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999064263203619	WITHOUT_CLASSIFICATION	9.357367963805495E-5	DESIGN
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.999756837622042	WITHOUT_CLASSIFICATION	2.4316237795788228E-4	DESIGN
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999999927799761	WITHOUT_CLASSIFICATION	7.220023945386292E-9	DESIGN
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999134652559	WITHOUT_CLASSIFICATION	8.653474424583151E-8	DESIGN
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999959177518372	WITHOUT_CLASSIFICATION	4.082248162788057E-6	DESIGN
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9996158685251989	WITHOUT_CLASSIFICATION	3.8413147480099655E-4	DESIGN
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999999996175875	WITHOUT_CLASSIFICATION	3.824125589914929E-10	DESIGN
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999975875744663	WITHOUT_CLASSIFICATION	2.4124255336775177E-6	DESIGN
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9934870967201908	WITHOUT_CLASSIFICATION	0.00651290327980914	DESIGN
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999863586786	WITHOUT_CLASSIFICATION	1.364132152173042E-8	DESIGN
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999199177334	WITHOUT_CLASSIFICATION	8.008226648929466E-8	DESIGN
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.999619497334367	WITHOUT_CLASSIFICATION	3.8050266563303037E-4	DESIGN
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999767280941754	WITHOUT_CLASSIFICATION	2.3271905824673253E-5	DESIGN
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999004644041811	WITHOUT_CLASSIFICATION	9.95355958188808E-5	DESIGN
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9991402957416975	WITHOUT_CLASSIFICATION	8.597042583025298E-4	DESIGN
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999788947362	WITHOUT_CLASSIFICATION	2.1105263804386566E-8	DESIGN
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999960862741438	WITHOUT_CLASSIFICATION	3.913725856255051E-6	DESIGN
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999885668331717	WITHOUT_CLASSIFICATION	1.1433166828308889E-5	DESIGN
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.5093807879385339	WITHOUT_CLASSIFICATION	0.49061921206146614	DESIGN
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999999829656961	WITHOUT_CLASSIFICATION	1.7034303775136387E-8	DESIGN
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999934458201075	WITHOUT_CLASSIFICATION	6.554179892386787E-6	DESIGN
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9996293012798722	WITHOUT_CLASSIFICATION	3.7069872012779E-4	DESIGN
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999660724983304	WITHOUT_CLASSIFICATION	3.3927501669548116E-5	DESIGN
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999777461414047	WITHOUT_CLASSIFICATION	2.2253858595349988E-5	DESIGN
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999950848861764	WITHOUT_CLASSIFICATION	4.915113823560534E-6	DESIGN
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9998466940448554	WITHOUT_CLASSIFICATION	1.5330595514469666E-4	DESIGN
// rename is successful	WITHOUT_CLASSIFICATION	0.9996415667680115	WITHOUT_CLASSIFICATION	3.584332319884875E-4	DESIGN
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9992199597344501	WITHOUT_CLASSIFICATION	7.800402655498828E-4	DESIGN
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999237782716349	WITHOUT_CLASSIFICATION	7.622172836507472E-5	DESIGN
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999960083562232	WITHOUT_CLASSIFICATION	3.991643776799935E-5	DESIGN
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999972474315597	WITHOUT_CLASSIFICATION	2.752568440293408E-5	DESIGN
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999911841702922	WITHOUT_CLASSIFICATION	8.81582970769086E-6	DESIGN
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999993658003948	WITHOUT_CLASSIFICATION	6.341996051617493E-7	DESIGN
// 16 ?	WITHOUT_CLASSIFICATION	0.999881990014696	WITHOUT_CLASSIFICATION	1.1800998530391012E-4	DESIGN
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999996210791399	WITHOUT_CLASSIFICATION	3.789208601458375E-7	DESIGN
// size + 1;	WITHOUT_CLASSIFICATION	0.9999909242272346	WITHOUT_CLASSIFICATION	9.075772765462377E-6	DESIGN
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999709310303	WITHOUT_CLASSIFICATION	2.9068969736270185E-8	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999999659769584	WITHOUT_CLASSIFICATION	3.402304156289676E-8	DESIGN
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999999659769584	WITHOUT_CLASSIFICATION	3.402304156289676E-8	DESIGN
// put implementation	WITHOUT_CLASSIFICATION	0.9999958908024995	WITHOUT_CLASSIFICATION	4.109197500536165E-6	DESIGN
// get implementation	WITHOUT_CLASSIFICATION	0.9999960493186288	WITHOUT_CLASSIFICATION	3.950681371164548E-6	DESIGN
// specialized for value	WITHOUT_CLASSIFICATION	0.9999993158340005	WITHOUT_CLASSIFICATION	6.841659995296058E-7	DESIGN
// delete implementation	WITHOUT_CLASSIFICATION	0.9999137864007308	WITHOUT_CLASSIFICATION	8.62135992691895E-5	DESIGN
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9343980170463385	WITHOUT_CLASSIFICATION	0.06560198295366151	DESIGN
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999997848813955	WITHOUT_CLASSIFICATION	2.151186045096062E-7	DESIGN
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999844216096583	WITHOUT_CLASSIFICATION	1.557839034173243E-5	DESIGN
// update the hash value	WITHOUT_CLASSIFICATION	0.999998747829535	WITHOUT_CLASSIFICATION	1.2521704649316446E-6	DESIGN
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999981339536191	WITHOUT_CLASSIFICATION	1.866046380897413E-6	DESIGN
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999922799282447	WITHOUT_CLASSIFICATION	7.720071755301264E-6	DESIGN
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999996421793729	WITHOUT_CLASSIFICATION	3.578206272465111E-7	DESIGN
// remain where we are	WITHOUT_CLASSIFICATION	0.999998069357339	WITHOUT_CLASSIFICATION	1.9306426608629893E-6	DESIGN
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999997832718508	WITHOUT_CLASSIFICATION	2.1672814910231895E-7	DESIGN
// default: don't retain	WITHOUT_CLASSIFICATION	0.9995736748721599	WITHOUT_CLASSIFICATION	4.263251278401609E-4	DESIGN
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999999225688	WITHOUT_CLASSIFICATION	7.74311351479304E-11	DESIGN
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999876040392749	WITHOUT_CLASSIFICATION	1.239596072506088E-5	DESIGN
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9998360378375248	WITHOUT_CLASSIFICATION	1.639621624750489E-4	DESIGN
// first try as directory	WITHOUT_CLASSIFICATION	0.999999939318139	WITHOUT_CLASSIFICATION	6.068186089504933E-8	DESIGN
// next as regular file	WITHOUT_CLASSIFICATION	0.999830174357208	WITHOUT_CLASSIFICATION	1.6982564279205306E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9555232959387205	WITHOUT_CLASSIFICATION	0.04447670406127948	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999862537632883	WITHOUT_CLASSIFICATION	1.374623671163073E-5	DESIGN
// NIO-based	WITHOUT_CLASSIFICATION	0.9999862537632883	WITHOUT_CLASSIFICATION	1.374623671163073E-5	DESIGN
// Stream-based	WITHOUT_CLASSIFICATION	0.9999492134024127	WITHOUT_CLASSIFICATION	5.078659758730175E-5	DESIGN
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999998495858518	WITHOUT_CLASSIFICATION	1.504141483291997E-7	DESIGN
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.999990749913261	WITHOUT_CLASSIFICATION	9.250086739007654E-6	DESIGN
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999986345230277	WITHOUT_CLASSIFICATION	1.3654769723294378E-6	DESIGN
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999998859994251	WITHOUT_CLASSIFICATION	1.1400057485738645E-7	DESIGN
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999882701968	WITHOUT_CLASSIFICATION	1.1729803262780049E-8	DESIGN
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999986001399389	WITHOUT_CLASSIFICATION	1.3998600611119886E-6	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999978441	WITHOUT_CLASSIFICATION	2.155916996237922E-12	DESIGN
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999868080752456	WITHOUT_CLASSIFICATION	1.3191924754360322E-5	DESIGN
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999992146488405	WITHOUT_CLASSIFICATION	7.853511594096656E-7	DESIGN
// re-register	WITHOUT_CLASSIFICATION	0.9999945849071905	WITHOUT_CLASSIFICATION	5.415092809403585E-6	DESIGN
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999988756797527	WITHOUT_CLASSIFICATION	1.124320247292848E-6	DESIGN
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999999151333222	WITHOUT_CLASSIFICATION	8.486667777486985E-8	DESIGN
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999915391403	WITHOUT_CLASSIFICATION	8.460859671499913E-9	DESIGN
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999999924501287	WITHOUT_CLASSIFICATION	7.549871316692503E-9	DESIGN
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9543305112516738	WITHOUT_CLASSIFICATION	0.04566948874832626	DESIGN
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999911871140601	WITHOUT_CLASSIFICATION	8.812885939869499E-6	DESIGN
// use original modes	WITHOUT_CLASSIFICATION	0.9999896201596307	WITHOUT_CLASSIFICATION	1.0379840369418151E-5	DESIGN
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999998877622239	WITHOUT_CLASSIFICATION	1.122377761149164E-7	DESIGN
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9984232015102166	WITHOUT_CLASSIFICATION	0.0015767984897833195	DESIGN
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999622622250934	WITHOUT_CLASSIFICATION	3.773777490650332E-5	DESIGN
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999994458428438	WITHOUT_CLASSIFICATION	5.541571560849704E-7	DESIGN
// isRetained=true	WITHOUT_CLASSIFICATION	0.999986412303708	WITHOUT_CLASSIFICATION	1.358769629205541E-5	DESIGN
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999897437359704	WITHOUT_CLASSIFICATION	1.025626402956001E-5	DESIGN
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999988274873911	WITHOUT_CLASSIFICATION	1.1725126089065095E-6	DESIGN
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999996515207548	WITHOUT_CLASSIFICATION	3.4847924524808877E-7	DESIGN
//Everything written	WITHOUT_CLASSIFICATION	0.9993076935336077	WITHOUT_CLASSIFICATION	6.923064663922831E-4	DESIGN
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999914382878814	WITHOUT_CLASSIFICATION	8.561712118614031E-6	DESIGN
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999975572089993	WITHOUT_CLASSIFICATION	2.44279100076487E-6	DESIGN
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9622802462716924	WITHOUT_CLASSIFICATION	0.03771975372830752	DESIGN
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999978026957828	WITHOUT_CLASSIFICATION	2.197304217315144E-6	DESIGN
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9997899763018562	WITHOUT_CLASSIFICATION	2.1002369814373007E-4	DESIGN
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9991790976899007	WITHOUT_CLASSIFICATION	8.209023100992637E-4	DESIGN
// hmmmm	WITHOUT_CLASSIFICATION	0.9998893372309929	WITHOUT_CLASSIFICATION	1.106627690070656E-4	DESIGN
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999998483547076	WITHOUT_CLASSIFICATION	1.5164529236688732E-7	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999586190189351	WITHOUT_CLASSIFICATION	4.1380981064871926E-5	DESIGN
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999982977884644	WITHOUT_CLASSIFICATION	1.7022115356748885E-6	DESIGN
// Length to read	WITHOUT_CLASSIFICATION	0.9999974238729106	WITHOUT_CLASSIFICATION	2.576127089409938E-6	DESIGN
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9998622868758874	WITHOUT_CLASSIFICATION	1.3771312411268885E-4	DESIGN
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999847832474308	WITHOUT_CLASSIFICATION	1.5216752569246393E-5	DESIGN
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999898980282208	WITHOUT_CLASSIFICATION	1.0101971779136958E-5	DESIGN
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999998624312306	WITHOUT_CLASSIFICATION	1.3756876936657224E-7	DESIGN
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999808764295	WITHOUT_CLASSIFICATION	1.9123570498593284E-8	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999055987575916	WITHOUT_CLASSIFICATION	9.440124240851414E-5	DESIGN
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999493698806083	WITHOUT_CLASSIFICATION	5.063011939168667E-5	DESIGN
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999055987575916	WITHOUT_CLASSIFICATION	9.440124240851414E-5	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999205801918	DESIGN	7.94198080859437E-8	WITHOUT_CLASSIFICATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.5840645414890221	DESIGN	0.4159354585109778	WITHOUT_CLASSIFICATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999976888421838	WITHOUT_CLASSIFICATION	2.311157816293247E-6	DESIGN
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9782009535568744	DESIGN	0.021799046443125514	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999733125316852	WITHOUT_CLASSIFICATION	2.6687468314820785E-5	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999440302925108	WITHOUT_CLASSIFICATION	5.5969707489226254E-5	DESIGN
// write	WITHOUT_CLASSIFICATION	0.9999819096897575	WITHOUT_CLASSIFICATION	1.8090310242402614E-5	DESIGN
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999986720852813	WITHOUT_CLASSIFICATION	1.3279147187176083E-6	DESIGN
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999995189691951	WITHOUT_CLASSIFICATION	4.810308049180656E-7	DESIGN
// FIXME: process options	WITHOUT_CLASSIFICATION	0.5289449351231317	WITHOUT_CLASSIFICATION	0.4710550648768683	DESIGN
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9990968948326332	WITHOUT_CLASSIFICATION	9.031051673667684E-4	DESIGN
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999638230963327	WITHOUT_CLASSIFICATION	3.617690366722601E-5	DESIGN
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9995928328562841	WITHOUT_CLASSIFICATION	4.071671437159041E-4	DESIGN
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999336607457	WITHOUT_CLASSIFICATION	6.633925436891668E-8	DESIGN
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999966357624988	WITHOUT_CLASSIFICATION	3.364237501208774E-6	DESIGN
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9629032720318584	WITHOUT_CLASSIFICATION	0.037096727968141625	DESIGN
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999988128385486	WITHOUT_CLASSIFICATION	1.187161451293119E-6	DESIGN
// The class of this object	WITHOUT_CLASSIFICATION	0.9999803285278792	WITHOUT_CLASSIFICATION	1.967147212083296E-5	DESIGN
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999960319507977	WITHOUT_CLASSIFICATION	3.968049202369994E-6	DESIGN
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999846402568661	WITHOUT_CLASSIFICATION	1.5359743133997386E-5	DESIGN
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999925649824569	WITHOUT_CLASSIFICATION	7.435017543149437E-6	DESIGN
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999993752759913	WITHOUT_CLASSIFICATION	6.247240087833229E-7	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999631642196596	WITHOUT_CLASSIFICATION	3.683578034036334E-5	DESIGN
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999990146046839	WITHOUT_CLASSIFICATION	9.853953160514573E-7	DESIGN
// for interface impls	WITHOUT_CLASSIFICATION	0.9999503465737288	WITHOUT_CLASSIFICATION	4.9653426271278835E-5	DESIGN
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9994436914375143	WITHOUT_CLASSIFICATION	5.563085624856909E-4	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999774703766625	WITHOUT_CLASSIFICATION	2.2529623337546358E-5	DESIGN
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999879695172214	WITHOUT_CLASSIFICATION	1.2030482778559422E-5	DESIGN
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999830387474018	WITHOUT_CLASSIFICATION	1.6961252598216675E-5	DESIGN
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.999997438733495	WITHOUT_CLASSIFICATION	2.561266504989985E-6	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999265874255	WITHOUT_CLASSIFICATION	7.341257444415667E-8	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999621631029	WITHOUT_CLASSIFICATION	3.7836897090752037E-8	DESIGN
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999999478168197	WITHOUT_CLASSIFICATION	5.2183180427511216E-8	DESIGN
// Struct methods	WITHOUT_CLASSIFICATION	0.9999727391792053	WITHOUT_CLASSIFICATION	2.726082079466434E-5	DESIGN
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999999957888	WITHOUT_CLASSIFICATION	4.211167700890372E-12	DESIGN
// define access methods.	WITHOUT_CLASSIFICATION	0.9999862313954834	WITHOUT_CLASSIFICATION	1.3768604516688138E-5	DESIGN
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999823724013975	WITHOUT_CLASSIFICATION	1.7627598602467507E-5	DESIGN
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.8833685182919879	WITHOUT_CLASSIFICATION	0.11663148170801209	DESIGN
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999941540784921	WITHOUT_CLASSIFICATION	5.845921507809216E-6	DESIGN
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999999572545082	WITHOUT_CLASSIFICATION	4.274549178747735E-8	DESIGN
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999979049948	WITHOUT_CLASSIFICATION	2.0950051703142587E-9	DESIGN
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999982056699354	WITHOUT_CLASSIFICATION	1.7943300645810937E-6	DESIGN
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999998539917311	WITHOUT_CLASSIFICATION	1.4600826900480563E-7	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9996343989201086	WITHOUT_CLASSIFICATION	3.6560107989146016E-4	DESIGN
// Atomic ?	WITHOUT_CLASSIFICATION	0.9996343989201086	WITHOUT_CLASSIFICATION	3.6560107989146016E-4	DESIGN
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9888478387117396	WITHOUT_CLASSIFICATION	0.011152161288260217	DESIGN
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9994796945548523	WITHOUT_CLASSIFICATION	5.203054451476943E-4	DESIGN
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9969764740654685	WITHOUT_CLASSIFICATION	0.0030235259345314323	DESIGN
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999990588515	WITHOUT_CLASSIFICATION	9.41148469387721E-10	DESIGN
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999998073495031	WITHOUT_CLASSIFICATION	1.9265049694998741E-7	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999960505589452	WITHOUT_CLASSIFICATION	3.949441054696185E-6	DESIGN
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999984678078773	WITHOUT_CLASSIFICATION	1.5321921227941338E-6	DESIGN
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999904095901797	WITHOUT_CLASSIFICATION	9.590409820322748E-6	DESIGN
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9998416851669009	WITHOUT_CLASSIFICATION	1.583148330991448E-4	DESIGN
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9987964303385787	WITHOUT_CLASSIFICATION	0.0012035696614212743	DESIGN
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999997248020879	WITHOUT_CLASSIFICATION	2.751979120877138E-7	DESIGN
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999852674033235	WITHOUT_CLASSIFICATION	1.4732596676478726E-5	DESIGN
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9990840667092612	WITHOUT_CLASSIFICATION	9.159332907386788E-4	DESIGN
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9997117877000129	WITHOUT_CLASSIFICATION	2.882122999871473E-4	DESIGN
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.999151723630721	WITHOUT_CLASSIFICATION	8.482763692789411E-4	DESIGN
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999933857394271	WITHOUT_CLASSIFICATION	6.614260572900182E-6	DESIGN
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999787883196768	WITHOUT_CLASSIFICATION	2.1211680323245924E-5	DESIGN
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999859306840276	WITHOUT_CLASSIFICATION	1.4069315972277031E-5	DESIGN
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999193214309636	WITHOUT_CLASSIFICATION	8.06785690362922E-5	DESIGN
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999941167446419	WITHOUT_CLASSIFICATION	5.883255358073357E-6	DESIGN
//FIXME warning	WITHOUT_CLASSIFICATION	0.9581985887445286	DESIGN	0.04180141125547146	WITHOUT_CLASSIFICATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.5552520943486958	WITHOUT_CLASSIFICATION	0.44474790565130407	DESIGN
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9827808706841847	WITHOUT_CLASSIFICATION	0.017219129315815204	DESIGN
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9612606801186435	WITHOUT_CLASSIFICATION	0.03873931988135652	DESIGN
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.6380833471701809	DESIGN	0.36191665282981905	WITHOUT_CLASSIFICATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999972628378438	WITHOUT_CLASSIFICATION	2.737162156183784E-6	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9998649993710299	WITHOUT_CLASSIFICATION	1.3500062896998254E-4	DESIGN
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9994103121770176	WITHOUT_CLASSIFICATION	5.896878229823933E-4	DESIGN
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.999996475174949	WITHOUT_CLASSIFICATION	3.524825050964705E-6	DESIGN
/* Module class methods */	WITHOUT_CLASSIFICATION	0.999994202265228	WITHOUT_CLASSIFICATION	5.797734772006646E-6	DESIGN
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.8811102773079397	DESIGN	0.11888972269206034	WITHOUT_CLASSIFICATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999981441368861	WITHOUT_CLASSIFICATION	1.8558631138247247E-6	DESIGN
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999951704496	WITHOUT_CLASSIFICATION	4.829550425684421E-9	DESIGN
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999876512371234	WITHOUT_CLASSIFICATION	1.2348762876541905E-5	DESIGN
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999978102153	WITHOUT_CLASSIFICATION	2.1897846677725087E-9	DESIGN
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999998942934656	WITHOUT_CLASSIFICATION	1.057065343974333E-7	DESIGN
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998058407116	WITHOUT_CLASSIFICATION	1.9415928851046914E-7	DESIGN
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999996903152345	WITHOUT_CLASSIFICATION	3.0968476541664585E-7	DESIGN
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.8551197170965105	WITHOUT_CLASSIFICATION	0.14488028290348962	DESIGN
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999999672609724	WITHOUT_CLASSIFICATION	3.273902759184257E-7	DESIGN
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9996016880185847	WITHOUT_CLASSIFICATION	3.983119814153583E-4	DESIGN
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999934220803554	WITHOUT_CLASSIFICATION	6.577919644591828E-6	DESIGN
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9996911964700024	WITHOUT_CLASSIFICATION	3.0880352999764665E-4	DESIGN
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999391587530647	WITHOUT_CLASSIFICATION	6.084124693531099E-5	DESIGN
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9995542740734786	WITHOUT_CLASSIFICATION	4.4572592652143515E-4	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999624624962	WITHOUT_CLASSIFICATION	3.7537503789021076E-8	DESIGN
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999999253120034	WITHOUT_CLASSIFICATION	7.46879966058193E-7	DESIGN
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999988088387562	WITHOUT_CLASSIFICATION	1.1911612437278618E-6	DESIGN
//reopen	WITHOUT_CLASSIFICATION	0.9999597662762971	WITHOUT_CLASSIFICATION	4.0233723702954225E-5	DESIGN
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999985903476393	WITHOUT_CLASSIFICATION	1.409652360681589E-6	DESIGN
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999863188	WITHOUT_CLASSIFICATION	1.3681199917087595E-8	DESIGN
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999987493117948	WITHOUT_CLASSIFICATION	1.2506882052774002E-6	DESIGN
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999745964187	WITHOUT_CLASSIFICATION	2.5403581404512504E-8	DESIGN
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999995845164651	WITHOUT_CLASSIFICATION	4.1548353487051966E-7	DESIGN
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999872785317078	WITHOUT_CLASSIFICATION	1.272146829228663E-5	DESIGN
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999907992384826	WITHOUT_CLASSIFICATION	9.200761517342374E-6	DESIGN
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999899590554845	WITHOUT_CLASSIFICATION	1.0040944515497802E-5	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8816297076020382	DESIGN	0.11837029239796185	WITHOUT_CLASSIFICATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9971426216181096	WITHOUT_CLASSIFICATION	0.0028573783818904163	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999835036800873	WITHOUT_CLASSIFICATION	1.6496319912754147E-5	DESIGN
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999989021833696	WITHOUT_CLASSIFICATION	1.097816630387076E-6	DESIGN
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999997860331089	WITHOUT_CLASSIFICATION	2.1396689105498975E-7	DESIGN
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999998906216642	WITHOUT_CLASSIFICATION	1.093783358251134E-7	DESIGN
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999963344471581	WITHOUT_CLASSIFICATION	3.6655528419375575E-6	DESIGN
// ignore error	WITHOUT_CLASSIFICATION	0.9999670206901425	WITHOUT_CLASSIFICATION	3.297930985750379E-5	DESIGN
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999572693176	WITHOUT_CLASSIFICATION	4.273068239534874E-8	DESIGN
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998578884283	WITHOUT_CLASSIFICATION	1.4211157178402582E-7	DESIGN
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999918269985	WITHOUT_CLASSIFICATION	8.17300158599488E-9	DESIGN
// odd	WITHOUT_CLASSIFICATION	0.9999615532390408	WITHOUT_CLASSIFICATION	3.844676095925509E-5	DESIGN
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999369556884525	WITHOUT_CLASSIFICATION	6.304431154740566E-5	DESIGN
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999977070833399	WITHOUT_CLASSIFICATION	2.2929166600471683E-6	DESIGN
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9947089671634617	WITHOUT_CLASSIFICATION	0.005291032836538329	DESIGN
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999836959323	WITHOUT_CLASSIFICATION	1.6304067615098376E-8	DESIGN
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999787147904712	WITHOUT_CLASSIFICATION	2.1285209528881286E-5	DESIGN
/*  0! */	WITHOUT_CLASSIFICATION	0.9999691509006514	WITHOUT_CLASSIFICATION	3.08490993486201E-5	DESIGN
/*  1! */	WITHOUT_CLASSIFICATION	0.9999692228572593	WITHOUT_CLASSIFICATION	3.0777142740671984E-5	DESIGN
/*  2! */	WITHOUT_CLASSIFICATION	0.9999861023458203	WITHOUT_CLASSIFICATION	1.389765417957703E-5	DESIGN
/*  3! */	WITHOUT_CLASSIFICATION	0.999924288448277	WITHOUT_CLASSIFICATION	7.571155172298069E-5	DESIGN
/*  4! */	WITHOUT_CLASSIFICATION	0.9999655306379966	WITHOUT_CLASSIFICATION	3.446936200343826E-5	DESIGN
/*  5! */	WITHOUT_CLASSIFICATION	0.9999462922145914	WITHOUT_CLASSIFICATION	5.370778540853968E-5	DESIGN
/*  6! */	WITHOUT_CLASSIFICATION	0.9999330664630331	WITHOUT_CLASSIFICATION	6.693353696689624E-5	DESIGN
/*  7! */	WITHOUT_CLASSIFICATION	0.9999633369035954	WITHOUT_CLASSIFICATION	3.6663096404578234E-5	DESIGN
/*  8! */	WITHOUT_CLASSIFICATION	0.999971826967789	WITHOUT_CLASSIFICATION	2.8173032211076657E-5	DESIGN
/*  9! */	WITHOUT_CLASSIFICATION	0.9999625410275421	WITHOUT_CLASSIFICATION	3.745897245793998E-5	DESIGN
/* 11! */	WITHOUT_CLASSIFICATION	0.9999818939760513	WITHOUT_CLASSIFICATION	1.810602394870426E-5	DESIGN
/* 12! */	WITHOUT_CLASSIFICATION	0.9999917931930886	WITHOUT_CLASSIFICATION	8.206806911349759E-6	DESIGN
/* 13! */	WITHOUT_CLASSIFICATION	0.9999562384820363	WITHOUT_CLASSIFICATION	4.3761517963723876E-5	DESIGN
/* 15! */	WITHOUT_CLASSIFICATION	0.9999789807178884	WITHOUT_CLASSIFICATION	2.101928211166057E-5	DESIGN
/* 16! */	WITHOUT_CLASSIFICATION	0.9999433475332894	WITHOUT_CLASSIFICATION	5.6652466710485416E-5	DESIGN
/* 17! */	WITHOUT_CLASSIFICATION	0.9999819892029984	WITHOUT_CLASSIFICATION	1.8010797001554602E-5	DESIGN
/* 19! */	WITHOUT_CLASSIFICATION	0.9999802198553762	WITHOUT_CLASSIFICATION	1.9780144623861908E-5	DESIGN
/* 20! */	WITHOUT_CLASSIFICATION	0.9999868249932846	WITHOUT_CLASSIFICATION	1.3175006715307674E-5	DESIGN
/* 21! */	WITHOUT_CLASSIFICATION	0.9999924046901599	WITHOUT_CLASSIFICATION	7.595309840026529E-6	DESIGN
// Static constants	WITHOUT_CLASSIFICATION	0.9999961540424683	WITHOUT_CLASSIFICATION	3.845957531725361E-6	DESIGN
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.8877811367940349	WITHOUT_CLASSIFICATION	0.112218863205965	DESIGN
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999550495474846	WITHOUT_CLASSIFICATION	4.495045251552031E-5	DESIGN
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999997849394591	WITHOUT_CLASSIFICATION	2.1506054099920993E-7	DESIGN
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999092621326502	WITHOUT_CLASSIFICATION	9.073786734982202E-5	DESIGN
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9997062062709089	WITHOUT_CLASSIFICATION	2.93793729091146E-4	DESIGN
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.99998975189042	WITHOUT_CLASSIFICATION	1.0248109579956875E-5	DESIGN
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9773510473576655	WITHOUT_CLASSIFICATION	0.02264895264233438	DESIGN
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999344793228	WITHOUT_CLASSIFICATION	6.552067720585111E-8	DESIGN
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999998179634474	WITHOUT_CLASSIFICATION	1.8203655255251988E-7	DESIGN
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8496705141414039	DESIGN	0.1503294858585961	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.999994444630965	WITHOUT_CLASSIFICATION	5.555369035062724E-6	DESIGN
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999997716442578	WITHOUT_CLASSIFICATION	2.2835574222097316E-7	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999181475424701	WITHOUT_CLASSIFICATION	8.185245752995113E-5	DESIGN
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999181475424701	WITHOUT_CLASSIFICATION	8.185245752995113E-5	DESIGN
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999769438925437	WITHOUT_CLASSIFICATION	2.30561074562805E-5	DESIGN
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9992826245347297	WITHOUT_CLASSIFICATION	7.173754652702052E-4	DESIGN
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999900787801512	WITHOUT_CLASSIFICATION	9.9212198487195E-6	DESIGN
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999237384925556	WITHOUT_CLASSIFICATION	7.626150744445834E-5	DESIGN
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9855531363861372	WITHOUT_CLASSIFICATION	0.014446863613862729	DESIGN
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9957468326433272	WITHOUT_CLASSIFICATION	0.004253167356672818	DESIGN
// sign	WITHOUT_CLASSIFICATION	0.9999825265672301	WITHOUT_CLASSIFICATION	1.747343276995424E-5	DESIGN
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999961481396696	WITHOUT_CLASSIFICATION	3.851860330360141E-6	DESIGN
// normalize the value	WITHOUT_CLASSIFICATION	0.9999918771624859	WITHOUT_CLASSIFICATION	8.12283751397527E-6	DESIGN
// base	WITHOUT_CLASSIFICATION	0.9999998708083323	WITHOUT_CLASSIFICATION	1.2919166761496275E-7	DESIGN
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.999999307073634	WITHOUT_CLASSIFICATION	6.929263659873671E-7	DESIGN
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999608470058177	WITHOUT_CLASSIFICATION	3.9152994182371967E-5	DESIGN
// eh?!	WITHOUT_CLASSIFICATION	0.9997724922890012	WITHOUT_CLASSIFICATION	2.2750771099869433E-4	DESIGN
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999983255911711	WITHOUT_CLASSIFICATION	1.674408828828947E-6	DESIGN
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9905876052585253	WITHOUT_CLASSIFICATION	0.009412394741474664	DESIGN
// the requested precision	WITHOUT_CLASSIFICATION	0.9999456917637902	WITHOUT_CLASSIFICATION	5.430823620970036E-5	DESIGN
// Proc class	WITHOUT_CLASSIFICATION	0.9999664148931962	WITHOUT_CLASSIFICATION	3.3585106803937017E-5	DESIGN
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999934855625788	WITHOUT_CLASSIFICATION	6.514437421065546E-6	DESIGN
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999985137789648	WITHOUT_CLASSIFICATION	1.48622103522883E-6	DESIGN
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9998300378003488	WITHOUT_CLASSIFICATION	1.6996219965118606E-4	DESIGN
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999947989616595	WITHOUT_CLASSIFICATION	5.201038340441167E-6	DESIGN
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9423179576419508	DESIGN	0.057682042358049135	WITHOUT_CLASSIFICATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999938377965859	WITHOUT_CLASSIFICATION	6.162203414130272E-6	DESIGN
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999906136927993	WITHOUT_CLASSIFICATION	9.386307200674473E-6	DESIGN
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999993035318	WITHOUT_CLASSIFICATION	6.964681485782832E-10	DESIGN
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999358845439345	WITHOUT_CLASSIFICATION	6.411545606553681E-5	DESIGN
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999998020237405	WITHOUT_CLASSIFICATION	1.9797625939227233E-7	DESIGN
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999996002654842	WITHOUT_CLASSIFICATION	3.997345158068214E-6	DESIGN
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.999997798455148	WITHOUT_CLASSIFICATION	2.2015448520926786E-6	DESIGN
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999998503704639	WITHOUT_CLASSIFICATION	1.496295362295725E-7	DESIGN
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999966943015667	WITHOUT_CLASSIFICATION	3.3056984332631622E-6	DESIGN
// root x is ready!	WITHOUT_CLASSIFICATION	0.9989216750316011	WITHOUT_CLASSIFICATION	0.001078324968398844	DESIGN
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999999491663736	WITHOUT_CLASSIFICATION	5.0833626385654634E-8	DESIGN
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999999167436201	WITHOUT_CLASSIFICATION	8.325637998751431E-8	DESIGN
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999888051468984	WITHOUT_CLASSIFICATION	1.119485310155813E-5	DESIGN
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999888828387112	WITHOUT_CLASSIFICATION	1.1117161288723832E-5	DESIGN
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999897135021759	WITHOUT_CLASSIFICATION	1.0286497824118484E-5	DESIGN
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999226442234	WITHOUT_CLASSIFICATION	7.735577657960809E-8	DESIGN
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999141614629106	WITHOUT_CLASSIFICATION	8.583853708944827E-5	DESIGN
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999913404024956	WITHOUT_CLASSIFICATION	8.659597504356005E-6	DESIGN
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9553202810811084	WITHOUT_CLASSIFICATION	0.044679718918891484	DESIGN
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999589104302096	WITHOUT_CLASSIFICATION	4.1089569790329366E-5	DESIGN
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999998865445726	WITHOUT_CLASSIFICATION	1.1345542738184663E-7	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999906158361125	WITHOUT_CLASSIFICATION	9.384163887487022E-6	DESIGN
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999906158361125	WITHOUT_CLASSIFICATION	9.384163887487022E-6	DESIGN
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999751107245358	WITHOUT_CLASSIFICATION	2.4889275464084917E-5	DESIGN
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999952184296331	WITHOUT_CLASSIFICATION	4.781570366875251E-6	DESIGN
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9998058899640742	WITHOUT_CLASSIFICATION	1.9411003592587338E-4	DESIGN
//consume the file name	WITHOUT_CLASSIFICATION	0.999995516612767	WITHOUT_CLASSIFICATION	4.483387233115414E-6	DESIGN
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998753861433339	WITHOUT_CLASSIFICATION	1.246138566660681E-4	DESIGN
// try cwd first	WITHOUT_CLASSIFICATION	0.999992944687785	WITHOUT_CLASSIFICATION	7.0553122150290625E-6	DESIGN
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999989187107486	WITHOUT_CLASSIFICATION	1.0812892513650399E-6	DESIGN
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999994959721173	WITHOUT_CLASSIFICATION	5.040278826277237E-7	DESIGN
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999282966343392	WITHOUT_CLASSIFICATION	7.170336566067775E-5	DESIGN
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999672502764232	WITHOUT_CLASSIFICATION	3.2749723576813064E-5	DESIGN
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999764064916767	WITHOUT_CLASSIFICATION	2.3593508323285336E-5	DESIGN
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9988603613583953	WITHOUT_CLASSIFICATION	0.0011396386416047362	DESIGN
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999878973832	WITHOUT_CLASSIFICATION	1.210261673687785E-8	DESIGN
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999896230121057	WITHOUT_CLASSIFICATION	1.0376987894176413E-5	DESIGN
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9612710656150644	WITHOUT_CLASSIFICATION	0.03872893438493554	DESIGN
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.7424605559635149	DESIGN	0.25753944403648504	WITHOUT_CLASSIFICATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.999971837878171	WITHOUT_CLASSIFICATION	2.816212182895882E-5	DESIGN
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9996921312197291	WITHOUT_CLASSIFICATION	3.0786878027099814E-4	DESIGN
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999902918961034	WITHOUT_CLASSIFICATION	9.708103896455325E-6	DESIGN
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999999839450358	WITHOUT_CLASSIFICATION	1.605496420591741E-8	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999995231876359	WITHOUT_CLASSIFICATION	4.768123641169815E-7	DESIGN
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999995231876359	WITHOUT_CLASSIFICATION	4.768123641169815E-7	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999999978801911	WITHOUT_CLASSIFICATION	2.1198088885117498E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999999978801911	WITHOUT_CLASSIFICATION	2.1198088885117498E-8	DESIGN
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999990346918	WITHOUT_CLASSIFICATION	9.65308213815947E-10	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999535854082505	WITHOUT_CLASSIFICATION	4.641459174954599E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999597228485855	WITHOUT_CLASSIFICATION	4.027715141443808E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999292268577	WITHOUT_CLASSIFICATION	7.077314228284174E-8	DESIGN
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.999999720238204	WITHOUT_CLASSIFICATION	2.797617959090489E-7	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999999989232958	WITHOUT_CLASSIFICATION	1.0767042044587192E-8	DESIGN
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.526965611279235	DESIGN	0.473034388720765	WITHOUT_CLASSIFICATION
// Profile	WITHOUT_CLASSIFICATION	0.9999884930822106	WITHOUT_CLASSIFICATION	1.150691778939358E-5	DESIGN
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999901520325765	WITHOUT_CLASSIFICATION	9.847967423557158E-6	DESIGN
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999999911716275	WITHOUT_CLASSIFICATION	8.828372520454391E-9	DESIGN
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999448709478627	WITHOUT_CLASSIFICATION	5.512905213726662E-5	DESIGN
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999900422115671	WITHOUT_CLASSIFICATION	9.957788432942802E-6	DESIGN
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999956857074	WITHOUT_CLASSIFICATION	4.314292595643428E-9	DESIGN
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.992447447602303	WITHOUT_CLASSIFICATION	0.007552552397696986	DESIGN
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9991893923414336	WITHOUT_CLASSIFICATION	8.106076585663186E-4	DESIGN
// reset the state	WITHOUT_CLASSIFICATION	0.9999929246056677	WITHOUT_CLASSIFICATION	7.0753943323221065E-6	DESIGN
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9993924284469333	WITHOUT_CLASSIFICATION	6.075715530667217E-4	DESIGN
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999988931461997	WITHOUT_CLASSIFICATION	1.1068538002723436E-6	DESIGN
//str is frozen	WITHOUT_CLASSIFICATION	0.9998287917198384	WITHOUT_CLASSIFICATION	1.7120828016150332E-4	DESIGN
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999936862027966	WITHOUT_CLASSIFICATION	6.31379720340707E-6	DESIGN
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999932334174071	WITHOUT_CLASSIFICATION	6.766582593001433E-6	DESIGN
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999990763196784	WITHOUT_CLASSIFICATION	9.236803216411192E-7	DESIGN
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999998451691501	WITHOUT_CLASSIFICATION	1.5483084983426297E-7	DESIGN
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999774703766625	WITHOUT_CLASSIFICATION	2.2529623337546358E-5	DESIGN
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999960505589452	WITHOUT_CLASSIFICATION	3.949441054696185E-6	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999717786728665	WITHOUT_CLASSIFICATION	2.8221327133503608E-5	DESIGN
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9995416867551078	WITHOUT_CLASSIFICATION	4.5831324489221584E-4	DESIGN
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999634271411	WITHOUT_CLASSIFICATION	3.657285892041274E-8	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9996386315072885	WITHOUT_CLASSIFICATION	3.6136849271155486E-4	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999095650610332	WITHOUT_CLASSIFICATION	9.043493896674632E-5	DESIGN
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999095650610332	WITHOUT_CLASSIFICATION	9.043493896674632E-5	DESIGN
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.7340887257817933	WITHOUT_CLASSIFICATION	0.2659112742182066	DESIGN
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999943066196981	WITHOUT_CLASSIFICATION	5.6933803019454345E-6	DESIGN
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999998585744918	WITHOUT_CLASSIFICATION	1.4142550825318755E-7	DESIGN
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999630507335039	WITHOUT_CLASSIFICATION	3.6949266495987836E-5	DESIGN
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999937494568045	WITHOUT_CLASSIFICATION	6.25054319550583E-6	DESIGN
// static initializing method	WITHOUT_CLASSIFICATION	0.9996443931529356	WITHOUT_CLASSIFICATION	3.5560684706436126E-4	DESIGN
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999932930535981	WITHOUT_CLASSIFICATION	6.706946401930165E-6	DESIGN
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999867637917095	WITHOUT_CLASSIFICATION	1.3236208290472367E-5	DESIGN
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999861444154281	WITHOUT_CLASSIFICATION	1.3855584571771905E-5	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999900369998711	WITHOUT_CLASSIFICATION	9.963000128863733E-6	DESIGN
// self // method name	WITHOUT_CLASSIFICATION	0.9999398018216196	WITHOUT_CLASSIFICATION	6.019817838039765E-5	DESIGN
// the default allocator	WITHOUT_CLASSIFICATION	0.9999938044761676	WITHOUT_CLASSIFICATION	6.1955238323991425E-6	DESIGN
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999994440617124	WITHOUT_CLASSIFICATION	5.55938287564362E-7	DESIGN
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999960976119342	WITHOUT_CLASSIFICATION	3.902388065772053E-6	DESIGN
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.999999979667418	WITHOUT_CLASSIFICATION	2.0332581971609523E-8	DESIGN
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997177786573981	WITHOUT_CLASSIFICATION	2.82221342602008E-4	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9603598203819964	WITHOUT_CLASSIFICATION	0.03964017961800355	DESIGN
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9998404623992526	WITHOUT_CLASSIFICATION	1.5953760074748587E-4	DESIGN
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999974068221334	WITHOUT_CLASSIFICATION	2.593177866669504E-6	DESIGN
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999998328241	WITHOUT_CLASSIFICATION	1.671759425246383E-10	DESIGN
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999988717405566	WITHOUT_CLASSIFICATION	1.1282594433442986E-6	DESIGN
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999987603277568	WITHOUT_CLASSIFICATION	1.2396722432101232E-5	DESIGN
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999996667807917	WITHOUT_CLASSIFICATION	3.3321920835482385E-7	DESIGN
// a gotcha	WITHOUT_CLASSIFICATION	0.9999825261073667	WITHOUT_CLASSIFICATION	1.7473892633281747E-5	DESIGN
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999994353490492	WITHOUT_CLASSIFICATION	5.646509508312705E-7	DESIGN
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.99999997337097	WITHOUT_CLASSIFICATION	2.6629029955776535E-8	DESIGN
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9998379745563898	WITHOUT_CLASSIFICATION	1.620254436101807E-4	DESIGN
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9998010348732138	WITHOUT_CLASSIFICATION	1.989651267862069E-4	DESIGN
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999957516504	WITHOUT_CLASSIFICATION	4.248349538468843E-9	DESIGN
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999964294084358	WITHOUT_CLASSIFICATION	3.5705915642188865E-6	DESIGN
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9993796345759317	WITHOUT_CLASSIFICATION	6.203654240682922E-4	DESIGN
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999339684299	WITHOUT_CLASSIFICATION	6.603157009989477E-5	DESIGN
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999658494093	WITHOUT_CLASSIFICATION	3.415059075640725E-8	DESIGN
// provider is not available	WITHOUT_CLASSIFICATION	0.9998201335623784	WITHOUT_CLASSIFICATION	1.798664376215412E-4	DESIGN
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.999837020453749	WITHOUT_CLASSIFICATION	1.629795462508888E-4	DESIGN
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999757019176894	WITHOUT_CLASSIFICATION	2.4298082310611557E-5	DESIGN
// RubyDigest	WITHOUT_CLASSIFICATION	0.9998350482316348	WITHOUT_CLASSIFICATION	1.6495176836526157E-4	DESIGN
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.8373753421063712	WITHOUT_CLASSIFICATION	0.1626246578936288	DESIGN
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999912188668	WITHOUT_CLASSIFICATION	8.781133148431708E-9	DESIGN
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999994692930092	WITHOUT_CLASSIFICATION	5.307069908364345E-7	DESIGN
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999960308684	WITHOUT_CLASSIFICATION	3.969131631498974E-9	DESIGN
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.99999005751293	WITHOUT_CLASSIFICATION	9.942487069999106E-6	DESIGN
// JRubyService	WITHOUT_CLASSIFICATION	0.999977112197435	WITHOUT_CLASSIFICATION	2.2887802565071576E-5	DESIGN
// while	WITHOUT_CLASSIFICATION	0.9999818816862015	WITHOUT_CLASSIFICATION	1.8118313798394463E-5	DESIGN
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999763763718299	WITHOUT_CLASSIFICATION	2.3623628170107382E-5	DESIGN
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999897578117752	WITHOUT_CLASSIFICATION	1.0242188224796644E-5	DESIGN
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999671443613	WITHOUT_CLASSIFICATION	3.2855638692557534E-8	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999973326911622	WITHOUT_CLASSIFICATION	2.6673088377882845E-6	DESIGN
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999955898123936	WITHOUT_CLASSIFICATION	4.410187606414421E-6	DESIGN
// silent ?	WITHOUT_CLASSIFICATION	0.9997654271650126	WITHOUT_CLASSIFICATION	2.3457283498733885E-4	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999715363418542	WITHOUT_CLASSIFICATION	2.8463658145780752E-5	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999969897143167	WITHOUT_CLASSIFICATION	3.0102856833300096E-6	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999970814790874	WITHOUT_CLASSIFICATION	2.9185209125772527E-6	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999968708310509	WITHOUT_CLASSIFICATION	3.129168949115858E-6	DESIGN
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999998740851214	WITHOUT_CLASSIFICATION	1.2591487874819795E-7	DESIGN
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999998806017771	WITHOUT_CLASSIFICATION	1.1939822291339396E-7	DESIGN
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999997728001174	WITHOUT_CLASSIFICATION	2.2719988255405425E-7	DESIGN
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999065833397	WITHOUT_CLASSIFICATION	9.341666026974429E-8	DESIGN
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999812461559353	WITHOUT_CLASSIFICATION	1.8753844064713883E-5	DESIGN
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.7961277579305696	DESIGN	0.20387224206943055	WITHOUT_CLASSIFICATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999941321921708	WITHOUT_CLASSIFICATION	5.867807829192691E-6	DESIGN
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999715363418542	WITHOUT_CLASSIFICATION	2.8463658145780752E-5	DESIGN
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999970814790874	WITHOUT_CLASSIFICATION	2.9185209125772527E-6	DESIGN
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999969897143167	WITHOUT_CLASSIFICATION	3.0102856833300096E-6	DESIGN
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999959299356659	WITHOUT_CLASSIFICATION	4.070064334134087E-6	DESIGN
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999910132422726	WITHOUT_CLASSIFICATION	8.98675772754877E-6	DESIGN
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999962400645018	WITHOUT_CLASSIFICATION	3.7599354980966782E-6	DESIGN
// inner switch	WITHOUT_CLASSIFICATION	0.9999700543208538	WITHOUT_CLASSIFICATION	2.994567914624116E-5	DESIGN
// newInstance here	WITHOUT_CLASSIFICATION	0.9995324870481919	WITHOUT_CLASSIFICATION	4.675129518081922E-4	DESIGN
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.999999283737937	WITHOUT_CLASSIFICATION	7.16262062962927E-7	DESIGN
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999967096056395	WITHOUT_CLASSIFICATION	3.2903943603915987E-6	DESIGN
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999996158858652	WITHOUT_CLASSIFICATION	3.8411413491198563E-7	DESIGN
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999960927085138	WITHOUT_CLASSIFICATION	3.907291486173473E-6	DESIGN
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999998052365566	WITHOUT_CLASSIFICATION	1.9476344341050962E-7	DESIGN
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999996302532962	WITHOUT_CLASSIFICATION	3.697467037789215E-7	DESIGN
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9990524958249153	WITHOUT_CLASSIFICATION	9.475041750846804E-4	DESIGN
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999970487803023	WITHOUT_CLASSIFICATION	2.9512196977269135E-6	DESIGN
// option_to_str	WITHOUT_CLASSIFICATION	0.9999992996807338	WITHOUT_CLASSIFICATION	7.003192663261992E-7	DESIGN
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999811990188072	WITHOUT_CLASSIFICATION	1.8800981192823052E-5	DESIGN
// args should be before block	WITHOUT_CLASSIFICATION	0.9993743368489225	WITHOUT_CLASSIFICATION	6.256631510775268E-4	DESIGN
// args should be at end	WITHOUT_CLASSIFICATION	0.9837321173992316	WITHOUT_CLASSIFICATION	0.01626788260076839	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.995950519348128	WITHOUT_CLASSIFICATION	0.004049480651872026	DESIGN
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.995950519348128	WITHOUT_CLASSIFICATION	0.004049480651872026	DESIGN
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999999442277949	WITHOUT_CLASSIFICATION	5.577220510483526E-8	DESIGN
// start a new populator	WITHOUT_CLASSIFICATION	0.9999714298878318	WITHOUT_CLASSIFICATION	2.857011216817835E-5	DESIGN
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999987181480383	WITHOUT_CLASSIFICATION	1.2818519617272304E-6	DESIGN
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999740767481556	WITHOUT_CLASSIFICATION	2.5923251844271575E-5	DESIGN
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999791535041952	WITHOUT_CLASSIFICATION	2.0846495804857358E-5	DESIGN
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.999915670585697	WITHOUT_CLASSIFICATION	8.432941430305566E-5	DESIGN
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999762076930275	WITHOUT_CLASSIFICATION	2.3792306972495903E-5	DESIGN
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999922376619073	WITHOUT_CLASSIFICATION	7.762338092728567E-6	DESIGN
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9990199574630523	WITHOUT_CLASSIFICATION	9.800425369477315E-4	DESIGN
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999974363024151	WITHOUT_CLASSIFICATION	2.563697584892744E-6	DESIGN
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999984043804796	WITHOUT_CLASSIFICATION	1.5956195204463858E-6	DESIGN
//                }	WITHOUT_CLASSIFICATION	0.9999968284167424	WITHOUT_CLASSIFICATION	3.1715832575092337E-6	DESIGN
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999072543311252	WITHOUT_CLASSIFICATION	9.274566887484789E-5	DESIGN
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999999988375269	WITHOUT_CLASSIFICATION	1.162473094215743E-9	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9960083889104614	WITHOUT_CLASSIFICATION	0.0039916110895386	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.999998628627429	WITHOUT_CLASSIFICATION	1.3713725709272475E-6	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999976062567384	WITHOUT_CLASSIFICATION	2.39374326149539E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999973004607092	WITHOUT_CLASSIFICATION	2.6995392907945693E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999973004607092	WITHOUT_CLASSIFICATION	2.6995392907945693E-5	DESIGN
// colon3	WITHOUT_CLASSIFICATION	0.9999967947221472	WITHOUT_CLASSIFICATION	3.2052778528061456E-6	DESIGN
// Colon3	WITHOUT_CLASSIFICATION	0.9999872953768305	WITHOUT_CLASSIFICATION	1.2704623169525159E-5	DESIGN
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9971901536679787	WITHOUT_CLASSIFICATION	0.0028098463320212	DESIGN
// For b.foo	WITHOUT_CLASSIFICATION	0.9999998790183906	WITHOUT_CLASSIFICATION	1.2098160944295946E-7	DESIGN
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999847539952573	WITHOUT_CLASSIFICATION	1.5246004742697774E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999973004607092	WITHOUT_CLASSIFICATION	2.6995392907945693E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999973004607092	WITHOUT_CLASSIFICATION	2.6995392907945693E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999976812137018	WITHOUT_CLASSIFICATION	2.3187862982084148E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999976812137018	WITHOUT_CLASSIFICATION	2.3187862982084148E-6	DESIGN
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999995963457482	WITHOUT_CLASSIFICATION	4.0365425173805835E-7	DESIGN
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999997085554817	WITHOUT_CLASSIFICATION	2.914445183727681E-7	DESIGN
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999788364095201	WITHOUT_CLASSIFICATION	2.1163590479816176E-5	DESIGN
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.8845850063873347	WITHOUT_CLASSIFICATION	0.11541499361266525	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999615573295504	WITHOUT_CLASSIFICATION	3.844267044952681E-5	DESIGN
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999615573295504	WITHOUT_CLASSIFICATION	3.844267044952681E-5	DESIGN
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999975718431678	WITHOUT_CLASSIFICATION	2.428156832202014E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997530029625	WITHOUT_CLASSIFICATION	2.4699703749283625E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999985911527057	WITHOUT_CLASSIFICATION	1.408847294274135E-6	DESIGN
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9993137450131934	WITHOUT_CLASSIFICATION	6.862549868067169E-4	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999964150090498	WITHOUT_CLASSIFICATION	3.5849909501771434E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998429203908	WITHOUT_CLASSIFICATION	1.5707960926876232E-7	DESIGN
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999247633133628	WITHOUT_CLASSIFICATION	7.52366866371911E-5	DESIGN
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.999999454661121	WITHOUT_CLASSIFICATION	5.453388790044127E-7	DESIGN
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9998201596849057	WITHOUT_CLASSIFICATION	1.7984031509446242E-4	DESIGN
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999697849336138	WITHOUT_CLASSIFICATION	3.0215066386196363E-5	DESIGN
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9768915126764003	WITHOUT_CLASSIFICATION	0.023108487323599717	DESIGN
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999946785449872	WITHOUT_CLASSIFICATION	5.321455012827046E-6	DESIGN
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999795299661283	WITHOUT_CLASSIFICATION	2.0470033871671373E-5	DESIGN
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999991952187681	WITHOUT_CLASSIFICATION	8.047812318957802E-7	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.999998628627429	WITHOUT_CLASSIFICATION	1.3713725709272475E-6	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999973004607092	WITHOUT_CLASSIFICATION	2.6995392907945693E-5	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999976812137018	WITHOUT_CLASSIFICATION	2.3187862982084148E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998429203908	WITHOUT_CLASSIFICATION	1.5707960926876232E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9971986357187347	WITHOUT_CLASSIFICATION	0.0028013642812652847	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9971986357187347	WITHOUT_CLASSIFICATION	0.0028013642812652847	DESIGN
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9998899102478794	WITHOUT_CLASSIFICATION	1.1008975212053885E-4	DESIGN
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999009157584	WITHOUT_CLASSIFICATION	9.908424151247622E-8	DESIGN
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999996077122011	WITHOUT_CLASSIFICATION	3.9228779886510596E-7	DESIGN
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999851286653	WITHOUT_CLASSIFICATION	1.4871334815204009E-8	DESIGN
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.99996627311025	WITHOUT_CLASSIFICATION	3.3726889750006814E-5	DESIGN
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9998488035923145	WITHOUT_CLASSIFICATION	1.5119640768555492E-4	DESIGN
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999972518442196	WITHOUT_CLASSIFICATION	2.748155780410247E-6	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9941370639243842	WITHOUT_CLASSIFICATION	0.005862936075615849	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.997507160944184	WITHOUT_CLASSIFICATION	0.002492839055815939	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9997557121127681	WITHOUT_CLASSIFICATION	2.442878872318799E-4	DESIGN
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9983255474150182	WITHOUT_CLASSIFICATION	0.0016744525849817283	DESIGN
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999436236526	WITHOUT_CLASSIFICATION	5.637634731383946E-8	DESIGN
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999998819157573	WITHOUT_CLASSIFICATION	1.180842427546753E-7	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999976062567384	WITHOUT_CLASSIFICATION	2.39374326149539E-6	DESIGN
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999976812137018	WITHOUT_CLASSIFICATION	2.3187862982084148E-6	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997530029625	WITHOUT_CLASSIFICATION	2.4699703749283625E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999985911527057	WITHOUT_CLASSIFICATION	1.408847294274135E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999985911527057	WITHOUT_CLASSIFICATION	1.408847294274135E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999964150090498	WITHOUT_CLASSIFICATION	3.5849909501771434E-6	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998429203908	WITHOUT_CLASSIFICATION	1.5707960926876232E-7	DESIGN
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998429203908	WITHOUT_CLASSIFICATION	1.5707960926876232E-7	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9971986357187347	WITHOUT_CLASSIFICATION	0.0028013642812652847	DESIGN
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.999985728725799	WITHOUT_CLASSIFICATION	1.4271274200964544E-5	DESIGN
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999465661975329	WITHOUT_CLASSIFICATION	5.3433802467106465E-5	DESIGN
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999928008733	WITHOUT_CLASSIFICATION	7.199126755100428E-9	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999284232883655	WITHOUT_CLASSIFICATION	7.157671163444969E-5	DESIGN
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9860079060849608	WITHOUT_CLASSIFICATION	0.01399209391503917	DESIGN
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999988617555388	WITHOUT_CLASSIFICATION	1.138244461284935E-6	DESIGN
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999993259785482	WITHOUT_CLASSIFICATION	6.740214519093E-7	DESIGN
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999995140389856	WITHOUT_CLASSIFICATION	4.859610144476781E-7	DESIGN
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999893850928	WITHOUT_CLASSIFICATION	1.0614907126318587E-8	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997530029625	WITHOUT_CLASSIFICATION	2.4699703749283625E-7	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999985911527057	WITHOUT_CLASSIFICATION	1.408847294274135E-6	DESIGN
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999985911527057	WITHOUT_CLASSIFICATION	1.408847294274135E-6	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999964150090498	WITHOUT_CLASSIFICATION	3.5849909501771434E-6	DESIGN
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9941370639243842	WITHOUT_CLASSIFICATION	0.005862936075615849	DESIGN
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9997557121127681	WITHOUT_CLASSIFICATION	2.442878872318799E-4	DESIGN
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999986556659506	WITHOUT_CLASSIFICATION	1.3443340493929353E-6	DESIGN
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999999465331356	WITHOUT_CLASSIFICATION	5.3466864414290916E-8	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.999999040618679	WITHOUT_CLASSIFICATION	9.593813210777277E-7	DESIGN
// For 'foo'	WITHOUT_CLASSIFICATION	0.999999040618679	WITHOUT_CLASSIFICATION	9.593813210777277E-7	DESIGN
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9939521590287241	WITHOUT_CLASSIFICATION	0.006047840971275796	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999989197076161	WITHOUT_CLASSIFICATION	1.0802923839611275E-6	DESIGN
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999977029958134	WITHOUT_CLASSIFICATION	2.297004186668833E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999987988693211	WITHOUT_CLASSIFICATION	1.2011306790039934E-6	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999991974249542	WITHOUT_CLASSIFICATION	8.025750457486822E-7	DESIGN
// just rethrow	WITHOUT_CLASSIFICATION	0.9999991974249542	WITHOUT_CLASSIFICATION	8.025750457486822E-7	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999958321514005	WITHOUT_CLASSIFICATION	4.167848599514509E-6	DESIGN
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999958321514005	WITHOUT_CLASSIFICATION	4.167848599514509E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999933627087945	WITHOUT_CLASSIFICATION	6.637291205497511E-6	DESIGN
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999933627087945	WITHOUT_CLASSIFICATION	6.637291205497511E-6	DESIGN
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999789163352861	WITHOUT_CLASSIFICATION	2.1083664713927585E-5	DESIGN
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999921355726307	WITHOUT_CLASSIFICATION	7.864427369382865E-6	DESIGN
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9982849125315078	WITHOUT_CLASSIFICATION	0.0017150874684923327	DESIGN
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999946733314053	WITHOUT_CLASSIFICATION	5.326668594710764E-6	DESIGN
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9993641454988804	WITHOUT_CLASSIFICATION	6.358545011196042E-4	DESIGN
// pragmas	WITHOUT_CLASSIFICATION	0.9999989458049776	WITHOUT_CLASSIFICATION	1.0541950224203534E-6	DESIGN
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999997826220545	WITHOUT_CLASSIFICATION	2.1737794549156185E-7	DESIGN
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999842341266029	WITHOUT_CLASSIFICATION	1.5765873397069893E-5	DESIGN
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999479249440857	WITHOUT_CLASSIFICATION	5.207505591439394E-5	DESIGN
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9997608396549018	WITHOUT_CLASSIFICATION	2.3916034509822184E-4	DESIGN
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999534628082802	WITHOUT_CLASSIFICATION	4.65371917197115E-5	DESIGN
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9819598961232757	WITHOUT_CLASSIFICATION	0.018040103876724316	DESIGN
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9991148503176531	WITHOUT_CLASSIFICATION	8.851496823469073E-4	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999929079199411	WITHOUT_CLASSIFICATION	7.092080058907241E-6	DESIGN
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999929079199411	WITHOUT_CLASSIFICATION	7.092080058907241E-6	DESIGN
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9996497011080813	WITHOUT_CLASSIFICATION	3.502988919186571E-4	DESIGN
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999999989232958	WITHOUT_CLASSIFICATION	1.0767042044587192E-8	DESIGN
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999457221145921	WITHOUT_CLASSIFICATION	5.4277885408058214E-5	DESIGN
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999999674342	WITHOUT_CLASSIFICATION	3.256590430095691E-11	DESIGN
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9998965531777597	WITHOUT_CLASSIFICATION	1.0344682224035089E-4	DESIGN
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999905434652293	WITHOUT_CLASSIFICATION	9.45653477073705E-6	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999984139054898	WITHOUT_CLASSIFICATION	1.5860945101221745E-6	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999994341915128	WITHOUT_CLASSIFICATION	5.65808487166672E-7	DESIGN
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999991041731	WITHOUT_CLASSIFICATION	8.958269581338721E-10	DESIGN
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999801333103	WITHOUT_CLASSIFICATION	1.986668974744488E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999401681576	WITHOUT_CLASSIFICATION	5.983184230070939E-8	DESIGN
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999665759081716	WITHOUT_CLASSIFICATION	3.342409182828436E-5	DESIGN
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999993470293994	WITHOUT_CLASSIFICATION	6.529706005388475E-7	DESIGN
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9287024637021153	WITHOUT_CLASSIFICATION	0.07129753629788467	DESIGN
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9910932465061173	WITHOUT_CLASSIFICATION	0.008906753493882792	DESIGN
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999964702296933	WITHOUT_CLASSIFICATION	3.5297703065936097E-6	DESIGN
// can't do it	WITHOUT_CLASSIFICATION	0.9999955706828814	WITHOUT_CLASSIFICATION	4.4293171186565434E-6	DESIGN
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999950338065565	WITHOUT_CLASSIFICATION	4.9661934435373476E-6	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997727557752	WITHOUT_CLASSIFICATION	2.2724422480665942E-7	DESIGN
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997727557752	WITHOUT_CLASSIFICATION	2.2724422480665942E-7	DESIGN
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.999293733074561	WITHOUT_CLASSIFICATION	7.062669254388644E-4	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999829222743232	WITHOUT_CLASSIFICATION	1.7077725676802828E-5	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9993279483150147	WITHOUT_CLASSIFICATION	6.720516849853588E-4	DESIGN
//[]	WITHOUT_CLASSIFICATION	0.9993279483150147	WITHOUT_CLASSIFICATION	6.720516849853588E-4	DESIGN
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999996204380844	WITHOUT_CLASSIFICATION	3.7956191566897445E-7	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999967884447024	WITHOUT_CLASSIFICATION	3.2115552976171082E-6	DESIGN
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999491536048042	WITHOUT_CLASSIFICATION	5.084639519583054E-5	DESIGN
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999982851528157	WITHOUT_CLASSIFICATION	1.7148471842544412E-6	DESIGN
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999431657267746	WITHOUT_CLASSIFICATION	5.683427322543786E-5	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999947848191068	WITHOUT_CLASSIFICATION	5.2151808932774165E-6	DESIGN
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999947848191068	WITHOUT_CLASSIFICATION	5.2151808932774165E-6	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999971197634494	WITHOUT_CLASSIFICATION	2.8802365506418216E-6	DESIGN
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999853886070604	WITHOUT_CLASSIFICATION	1.4611392939646022E-5	DESIGN
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999920255068666	WITHOUT_CLASSIFICATION	7.97449313333128E-6	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999355134655771	WITHOUT_CLASSIFICATION	6.448653442289254E-5	DESIGN
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999829222743232	WITHOUT_CLASSIFICATION	1.7077725676802828E-5	DESIGN
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999990177328745	WITHOUT_CLASSIFICATION	9.822671255011228E-6	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999961002608143	WITHOUT_CLASSIFICATION	3.899739185682459E-6	DESIGN
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999961002608143	WITHOUT_CLASSIFICATION	3.899739185682459E-6	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999798664114108	WITHOUT_CLASSIFICATION	2.013358858912486E-5	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993852417651	WITHOUT_CLASSIFICATION	6.147582349377363E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993852417651	WITHOUT_CLASSIFICATION	6.147582349377363E-7	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999906694332	WITHOUT_CLASSIFICATION	9.330566814624596E-9	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999906694332	WITHOUT_CLASSIFICATION	9.330566814624596E-9	DESIGN
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999906694332	WITHOUT_CLASSIFICATION	9.330566814624596E-9	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993852417651	WITHOUT_CLASSIFICATION	6.147582349377363E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993852417651	WITHOUT_CLASSIFICATION	6.147582349377363E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999798664114108	WITHOUT_CLASSIFICATION	2.013358858912486E-5	DESIGN
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999950197868004	WITHOUT_CLASSIFICATION	4.980213199696803E-6	DESIGN
// always false or nil	WITHOUT_CLASSIFICATION	0.9999960975745968	WITHOUT_CLASSIFICATION	3.902425403116272E-6	DESIGN
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999999914427803	WITHOUT_CLASSIFICATION	8.557219646070468E-9	DESIGN
// normal	WITHOUT_CLASSIFICATION	0.9999707885104376	WITHOUT_CLASSIFICATION	2.9211489562383845E-5	DESIGN
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999979209576	WITHOUT_CLASSIFICATION	2.079042456526499E-9	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999463907809332	WITHOUT_CLASSIFICATION	5.360921906692685E-5	DESIGN
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.999999518538582	WITHOUT_CLASSIFICATION	4.814614179483752E-7	DESIGN
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999310072444	WITHOUT_CLASSIFICATION	6.899275562672393E-8	DESIGN
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999401681576	WITHOUT_CLASSIFICATION	5.983184230070939E-8	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993852417651	WITHOUT_CLASSIFICATION	6.147582349377363E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993852417651	WITHOUT_CLASSIFICATION	6.147582349377363E-7	DESIGN
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999994003425	WITHOUT_CLASSIFICATION	5.996576226743946E-10	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999957749714521	WITHOUT_CLASSIFICATION	4.225028547887762E-6	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999942188762899	WITHOUT_CLASSIFICATION	5.781123710154372E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999994287784	WITHOUT_CLASSIFICATION	5.712216031353154E-9	DESIGN
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999991190117169	WITHOUT_CLASSIFICATION	8.809882830689584E-7	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999148412322505	WITHOUT_CLASSIFICATION	8.515876774950121E-5	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999999998070531	WITHOUT_CLASSIFICATION	1.929469031393589E-9	DESIGN
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999453196695	WITHOUT_CLASSIFICATION	5.468033051615571E-8	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999914514499	WITHOUT_CLASSIFICATION	8.54854998027566E-9	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999997155570904	WITHOUT_CLASSIFICATION	2.84442909517633E-7	DESIGN
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999868270598092	WITHOUT_CLASSIFICATION	1.3172940190707637E-5	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999947050156641	WITHOUT_CLASSIFICATION	5.294984335864999E-6	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999815871856466	WITHOUT_CLASSIFICATION	1.8412814353385865E-5	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999983488239692	WITHOUT_CLASSIFICATION	1.65117603080842E-6	DESIGN
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999996019461304	WITHOUT_CLASSIFICATION	3.980538696986778E-7	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999932163954393	WITHOUT_CLASSIFICATION	6.7836045607333E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999932163954393	WITHOUT_CLASSIFICATION	6.7836045607333E-6	DESIGN
// [recv]	WITHOUT_CLASSIFICATION	0.9999932163954393	WITHOUT_CLASSIFICATION	6.7836045607333E-6	DESIGN
// compile into array	WITHOUT_CLASSIFICATION	0.99998756921418	WITHOUT_CLASSIFICATION	1.2430785820020852E-5	DESIGN
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999998951461	WITHOUT_CLASSIFICATION	1.0485388055153058E-10	DESIGN
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999952332974	WITHOUT_CLASSIFICATION	4.766702577229077E-9	DESIGN
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.999966109651347	WITHOUT_CLASSIFICATION	3.389034865306263E-5	DESIGN
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999782622900727	WITHOUT_CLASSIFICATION	2.1737709927302256E-5	DESIGN
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999540487756037	WITHOUT_CLASSIFICATION	4.595122439631657E-5	DESIGN
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999992989812273	WITHOUT_CLASSIFICATION	7.010187726361562E-7	DESIGN
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999991590990229	WITHOUT_CLASSIFICATION	8.409009770003418E-7	DESIGN
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.999608790137889	WITHOUT_CLASSIFICATION	3.9120986211110635E-4	DESIGN
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999998991147933	WITHOUT_CLASSIFICATION	1.0088520673995694E-7	DESIGN
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.999710759739845	WITHOUT_CLASSIFICATION	2.8924026015496226E-4	DESIGN
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9986253199117648	WITHOUT_CLASSIFICATION	0.001374680088235092	DESIGN
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999971197634494	WITHOUT_CLASSIFICATION	2.8802365506418216E-6	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993852417651	WITHOUT_CLASSIFICATION	6.147582349377363E-7	DESIGN
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993852417651	WITHOUT_CLASSIFICATION	6.147582349377363E-7	DESIGN
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999798664114108	WITHOUT_CLASSIFICATION	2.013358858912486E-5	DESIGN
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999463907809332	WITHOUT_CLASSIFICATION	5.360921906692685E-5	DESIGN
// try optz version	WITHOUT_CLASSIFICATION	0.9999957749714521	WITHOUT_CLASSIFICATION	4.225028547887762E-6	DESIGN
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999994287784	WITHOUT_CLASSIFICATION	5.712216031353154E-9	DESIGN
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999148412322505	WITHOUT_CLASSIFICATION	8.515876774950121E-5	DESIGN
// sizes must match	WITHOUT_CLASSIFICATION	0.9999942188762899	WITHOUT_CLASSIFICATION	5.781123710154372E-6	DESIGN
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999999998070531	WITHOUT_CLASSIFICATION	1.929469031393589E-9	DESIGN
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999997155570904	WITHOUT_CLASSIFICATION	2.84442909517633E-7	DESIGN
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999999914514499	WITHOUT_CLASSIFICATION	8.54854998027566E-9	DESIGN
// done processing args	WITHOUT_CLASSIFICATION	0.9999947050156641	WITHOUT_CLASSIFICATION	5.294984335864999E-6	DESIGN
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.998764436163183	WITHOUT_CLASSIFICATION	0.001235563836816951	DESIGN
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9512070072300404	WITHOUT_CLASSIFICATION	0.04879299276995966	DESIGN
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9946478749657384	WITHOUT_CLASSIFICATION	0.0053521250342615945	DESIGN
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999962686491672	WITHOUT_CLASSIFICATION	3.7313508328209582E-6	DESIGN
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9908479477317699	WITHOUT_CLASSIFICATION	0.009152052268230244	DESIGN
// Time the compilation	WITHOUT_CLASSIFICATION	0.999999736346266	WITHOUT_CLASSIFICATION	2.6365373392949446E-7	DESIGN
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999799916837674	WITHOUT_CLASSIFICATION	2.0008316232573187E-5	DESIGN
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999750922214	WITHOUT_CLASSIFICATION	2.4907778519517748E-8	DESIGN
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999996961912222	WITHOUT_CLASSIFICATION	3.038087777953525E-7	DESIGN
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999998251168816	WITHOUT_CLASSIFICATION	1.7488311850924706E-7	DESIGN
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999986971757407	WITHOUT_CLASSIFICATION	1.3028242592289696E-6	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999561879616866	WITHOUT_CLASSIFICATION	4.3812038313453166E-5	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996593702326	WITHOUT_CLASSIFICATION	3.4062976745162145E-7	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9998816839039733	WITHOUT_CLASSIFICATION	1.1831609602675931E-4	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999988373526699	WITHOUT_CLASSIFICATION	1.1626473300218054E-6	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999982322125102	WITHOUT_CLASSIFICATION	1.767787489768954E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.998171987877035	WITHOUT_CLASSIFICATION	0.0018280121229650491	DESIGN
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999990922342602	WITHOUT_CLASSIFICATION	9.077657398235259E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999944227504903	WITHOUT_CLASSIFICATION	5.5772495097100055E-6	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9996433022596504	WITHOUT_CLASSIFICATION	3.566977403496589E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9989730031116822	WITHOUT_CLASSIFICATION	0.001026996888317771	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997495829858806	WITHOUT_CLASSIFICATION	2.504170141194235E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997495829858806	WITHOUT_CLASSIFICATION	2.504170141194235E-4	DESIGN
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9954278127097511	WITHOUT_CLASSIFICATION	0.004572187290248925	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999671080365277	WITHOUT_CLASSIFICATION	3.289196347230674E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998097683487981	WITHOUT_CLASSIFICATION	1.9023165120194443E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998097683487981	WITHOUT_CLASSIFICATION	1.9023165120194443E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998097683487981	WITHOUT_CLASSIFICATION	1.9023165120194443E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998258256446751	WITHOUT_CLASSIFICATION	1.741743553249074E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998258256446751	WITHOUT_CLASSIFICATION	1.741743553249074E-4	DESIGN
/*arg2*/	WITHOUT_CLASSIFICATION	0.9998697460298832	WITHOUT_CLASSIFICATION	1.3025397011685053E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9995168377532462	WITHOUT_CLASSIFICATION	4.8316224675379294E-4	DESIGN
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999671080365277	WITHOUT_CLASSIFICATION	3.289196347230674E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999987857074534	WITHOUT_CLASSIFICATION	1.2142925466428476E-6	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998097683487981	WITHOUT_CLASSIFICATION	1.9023165120194443E-4	DESIGN
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998097683487981	WITHOUT_CLASSIFICATION	1.9023165120194443E-4	DESIGN
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998258256446751	WITHOUT_CLASSIFICATION	1.741743553249074E-4	DESIGN
/*args*/	WITHOUT_CLASSIFICATION	0.9995168377532462	WITHOUT_CLASSIFICATION	4.8316224675379294E-4	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999988335224123	WITHOUT_CLASSIFICATION	1.1664775877223799E-6	DESIGN
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999988335224123	WITHOUT_CLASSIFICATION	1.1664775877223799E-6	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999999971008259	WITHOUT_CLASSIFICATION	2.8991740924165953E-8	DESIGN
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999999971008259	WITHOUT_CLASSIFICATION	2.8991740924165953E-8	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999936374873939	WITHOUT_CLASSIFICATION	6.3625126061412926E-6	DESIGN
// invoke	WITHOUT_CLASSIFICATION	0.9999936374873939	WITHOUT_CLASSIFICATION	6.3625126061412926E-6	DESIGN
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999999483321482	WITHOUT_CLASSIFICATION	5.1667851865229305E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999555545871	WITHOUT_CLASSIFICATION	4.444541296253234E-8	DESIGN
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999555545871	WITHOUT_CLASSIFICATION	4.444541296253234E-8	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999974215650284	WITHOUT_CLASSIFICATION	2.5784349716099074E-6	DESIGN
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999974215650284	WITHOUT_CLASSIFICATION	2.5784349716099074E-6	DESIGN
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999963799465	WITHOUT_CLASSIFICATION	3.6200534934687978E-9	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999997465922108	WITHOUT_CLASSIFICATION	2.5340778913547007E-7	DESIGN
// call site	WITHOUT_CLASSIFICATION	0.9999997465922108	WITHOUT_CLASSIFICATION	2.5340778913547007E-7	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999936375247177	WITHOUT_CLASSIFICATION	6.362475282296758E-5	DESIGN
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999998271572358	WITHOUT_CLASSIFICATION	1.7284276414116249E-7	DESIGN
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999749129547	WITHOUT_CLASSIFICATION	2.508704530141211E-8	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999936375247177	WITHOUT_CLASSIFICATION	6.362475282296758E-5	DESIGN
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.999999340947492	WITHOUT_CLASSIFICATION	6.590525080106347E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999996933671925	WITHOUT_CLASSIFICATION	3.066328074640255E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999996933671925	WITHOUT_CLASSIFICATION	3.066328074640255E-7	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999996933671925	WITHOUT_CLASSIFICATION	3.066328074640255E-7	DESIGN
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999245921810034	WITHOUT_CLASSIFICATION	7.540781899660855E-5	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999952199437924	WITHOUT_CLASSIFICATION	4.780056207710679E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991626499967	WITHOUT_CLASSIFICATION	8.373500032124074E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991626499967	WITHOUT_CLASSIFICATION	8.373500032124074E-7	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999986501372353	WITHOUT_CLASSIFICATION	1.3498627646861859E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998691712347223	WITHOUT_CLASSIFICATION	1.308287652776845E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.99999943176534	WITHOUT_CLASSIFICATION	5.682346599520796E-7	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999708472579869	WITHOUT_CLASSIFICATION	2.9152742013099284E-5	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999433521927	WITHOUT_CLASSIFICATION	5.6647807242655736E-8	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999973794612556	WITHOUT_CLASSIFICATION	2.6205387443381157E-6	DESIGN
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999973794612556	WITHOUT_CLASSIFICATION	2.6205387443381157E-6	DESIGN
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999415528970094	WITHOUT_CLASSIFICATION	5.844710299065551E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9997897754739105	WITHOUT_CLASSIFICATION	2.102245260894142E-4	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9997897754739105	WITHOUT_CLASSIFICATION	2.102245260894142E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999996933671925	WITHOUT_CLASSIFICATION	3.066328074640255E-7	DESIGN
// args	WITHOUT_CLASSIFICATION	0.9999952199437924	WITHOUT_CLASSIFICATION	4.780056207710679E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991626499967	WITHOUT_CLASSIFICATION	8.373500032124074E-7	DESIGN
// no args, no block	WITHOUT_CLASSIFICATION	0.9999986501372353	WITHOUT_CLASSIFICATION	1.3498627646861859E-6	DESIGN
// no args, with block	WITHOUT_CLASSIFICATION	0.9998691712347223	WITHOUT_CLASSIFICATION	1.308287652776845E-4	DESIGN
// with args, no block	WITHOUT_CLASSIFICATION	0.99999943176534	WITHOUT_CLASSIFICATION	5.682346599520796E-7	DESIGN
// with args, with block	WITHOUT_CLASSIFICATION	0.9999708472579869	WITHOUT_CLASSIFICATION	2.9152742013099284E-5	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9997897754739105	WITHOUT_CLASSIFICATION	2.102245260894142E-4	DESIGN
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9994703887213625	WITHOUT_CLASSIFICATION	5.296112786375505E-4	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.998616751060437	WITHOUT_CLASSIFICATION	0.001383248939562996	DESIGN
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999860581734968	WITHOUT_CLASSIFICATION	1.3941826503161713E-5	DESIGN
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999983235351627	WITHOUT_CLASSIFICATION	1.6764648373012322E-6	DESIGN
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999632727502997	WITHOUT_CLASSIFICATION	3.672724970031648E-5	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999954630964522	WITHOUT_CLASSIFICATION	4.536903547850401E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.999997309724246	WITHOUT_CLASSIFICATION	2.690275753821609E-6	DESIGN
// build descriptor string	WITHOUT_CLASSIFICATION	0.999997309724246	WITHOUT_CLASSIFICATION	2.690275753821609E-6	DESIGN
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999995778236107	WITHOUT_CLASSIFICATION	4.2217638933139107E-7	DESIGN
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.999998734933706	WITHOUT_CLASSIFICATION	1.2650662940782691E-6	DESIGN
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999699130593251	WITHOUT_CLASSIFICATION	3.0086940674804482E-5	DESIGN
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999773143109	WITHOUT_CLASSIFICATION	2.268568917765136E-8	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999976993122978	WITHOUT_CLASSIFICATION	2.3006877022105075E-6	DESIGN
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999976993122978	WITHOUT_CLASSIFICATION	2.3006877022105075E-6	DESIGN
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.999999561826296	WITHOUT_CLASSIFICATION	4.381737040157745E-7	DESIGN
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999996590037563	WITHOUT_CLASSIFICATION	3.4099624375285E-7	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999994882917419	WITHOUT_CLASSIFICATION	5.117082580854833E-7	DESIGN
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999994882917419	WITHOUT_CLASSIFICATION	5.117082580854833E-7	DESIGN
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999991333952813	WITHOUT_CLASSIFICATION	8.666047185885432E-7	DESIGN
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999964755451949	WITHOUT_CLASSIFICATION	3.5244548050864462E-6	DESIGN
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999433521927	WITHOUT_CLASSIFICATION	5.6647807242655736E-8	DESIGN
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.999093534224888	WITHOUT_CLASSIFICATION	9.064657751120405E-4	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999718311038	WITHOUT_CLASSIFICATION	2.816889613324211E-8	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999985567701529	WITHOUT_CLASSIFICATION	1.4432298471279612E-6	DESIGN
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999744758735	WITHOUT_CLASSIFICATION	2.5524126575891647E-8	DESIGN
// load Object under value	WITHOUT_CLASSIFICATION	0.9999874279406944	WITHOUT_CLASSIFICATION	1.2572059305494747E-5	DESIGN
// put under object array already present	WITHOUT_CLASSIFICATION	0.999999457634522	WITHOUT_CLASSIFICATION	5.423654779933407E-7	DESIGN
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999425263064	WITHOUT_CLASSIFICATION	5.747369363774074E-8	DESIGN
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9975571563950134	WITHOUT_CLASSIFICATION	0.002442843604986622	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999976646243446	WITHOUT_CLASSIFICATION	2.335375655345641E-6	DESIGN
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999976646243446	WITHOUT_CLASSIFICATION	2.335375655345641E-6	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999996004191	WITHOUT_CLASSIFICATION	3.9958090004541544E-7	DESIGN
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999996004191	WITHOUT_CLASSIFICATION	3.9958090004541544E-7	DESIGN
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999986755791868	WITHOUT_CLASSIFICATION	1.3244208132374091E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999974186586446	WITHOUT_CLASSIFICATION	2.581341355381503E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999974186586446	WITHOUT_CLASSIFICATION	2.581341355381503E-6	DESIGN
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999974186586446	WITHOUT_CLASSIFICATION	2.581341355381503E-6	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999950806352	WITHOUT_CLASSIFICATION	4.919364839279803E-9	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999914589573	WITHOUT_CLASSIFICATION	8.541042691460895E-8	DESIGN
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999914589573	WITHOUT_CLASSIFICATION	8.541042691460895E-8	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999960172824	WITHOUT_CLASSIFICATION	3.982717559321205E-9	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.999995145749475	WITHOUT_CLASSIFICATION	4.854250525039183E-6	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999975891561584	WITHOUT_CLASSIFICATION	2.410843841660161E-6	DESIGN
// skip catch block	WITHOUT_CLASSIFICATION	0.999999968071836	WITHOUT_CLASSIFICATION	3.1928164002092376E-8	DESIGN
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999987640745734	WITHOUT_CLASSIFICATION	1.2359254265618325E-6	DESIGN
// next jump	WITHOUT_CLASSIFICATION	0.9994887051826674	WITHOUT_CLASSIFICATION	5.112948173326151E-4	DESIGN
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999999651551131	WITHOUT_CLASSIFICATION	3.4844886910180705E-8	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996593702326	WITHOUT_CLASSIFICATION	3.4062976745162145E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996593702326	WITHOUT_CLASSIFICATION	3.4062976745162145E-7	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999950806352	WITHOUT_CLASSIFICATION	4.919364839279803E-9	DESIGN
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999960172824	WITHOUT_CLASSIFICATION	3.982717559321205E-9	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998496025048	WITHOUT_CLASSIFICATION	1.5039749514460694E-7	DESIGN
// check the condition	WITHOUT_CLASSIFICATION	0.999995145749475	WITHOUT_CLASSIFICATION	4.854250525039183E-6	DESIGN
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999975891561584	WITHOUT_CLASSIFICATION	2.410843841660161E-6	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998923125298896	WITHOUT_CLASSIFICATION	1.0768747011044009E-4	DESIGN
// break jump	WITHOUT_CLASSIFICATION	0.9999965901898821	WITHOUT_CLASSIFICATION	3.40981011780603E-6	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999991189219721	WITHOUT_CLASSIFICATION	8.810780278200949E-7	DESIGN
//[reg]	WITHOUT_CLASSIFICATION	0.9992214556084894	WITHOUT_CLASSIFICATION	7.785443915105056E-4	DESIGN
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999853353344306	WITHOUT_CLASSIFICATION	1.4664665569476523E-5	DESIGN
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999656164269829	WITHOUT_CLASSIFICATION	3.4383573017044505E-5	DESIGN
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998905839964269	WITHOUT_CLASSIFICATION	1.0941600357302444E-4	DESIGN
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998923125298896	WITHOUT_CLASSIFICATION	1.0768747011044009E-4	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999709442598502	WITHOUT_CLASSIFICATION	2.9055740149751986E-5	DESIGN
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999709442598502	WITHOUT_CLASSIFICATION	2.9055740149751986E-5	DESIGN
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.999989929936701	WITHOUT_CLASSIFICATION	1.0070063298942846E-5	DESIGN
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999331863533711	WITHOUT_CLASSIFICATION	6.681364662889783E-5	DESIGN
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9993563402452936	WITHOUT_CLASSIFICATION	6.436597547064631E-4	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9996701156133251	WITHOUT_CLASSIFICATION	3.298843866748914E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999512211866	WITHOUT_CLASSIFICATION	4.877881332583829E-8	DESIGN
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9998691163426954	WITHOUT_CLASSIFICATION	1.30883657304567E-4	DESIGN
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999964770575465	WITHOUT_CLASSIFICATION	3.522942453390717E-6	DESIGN
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.99782551276431	WITHOUT_CLASSIFICATION	0.0021744872356899594	DESIGN
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999974658186079	WITHOUT_CLASSIFICATION	2.5341813921880067E-6	DESIGN
// false // zero	WITHOUT_CLASSIFICATION	0.9999999822081792	WITHOUT_CLASSIFICATION	1.779182076490607E-8	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999738692519674	WITHOUT_CLASSIFICATION	2.6130748032650367E-5	DESIGN
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9996701156133251	WITHOUT_CLASSIFICATION	3.298843866748914E-4	DESIGN
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999512211866	WITHOUT_CLASSIFICATION	4.877881332583829E-8	DESIGN
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9998750259973352	WITHOUT_CLASSIFICATION	1.2497400266481384E-4	DESIGN
// push false	WITHOUT_CLASSIFICATION	0.9999999949675273	WITHOUT_CLASSIFICATION	5.032472671341906E-9	DESIGN
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999970757162832	WITHOUT_CLASSIFICATION	2.924283716879523E-6	DESIGN
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999997899894549	WITHOUT_CLASSIFICATION	2.1001054512725365E-7	DESIGN
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999994990894	WITHOUT_CLASSIFICATION	5.009105902273904E-10	DESIGN
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999981620480247	WITHOUT_CLASSIFICATION	1.83795197523888E-6	DESIGN
//[C]	WITHOUT_CLASSIFICATION	0.9995993873964927	WITHOUT_CLASSIFICATION	4.0061260350738296E-4	DESIGN
// push true	WITHOUT_CLASSIFICATION	0.9999982721519627	WITHOUT_CLASSIFICATION	1.7278480373771034E-6	DESIGN
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.999998430249348	WITHOUT_CLASSIFICATION	1.5697506520694085E-6	DESIGN
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999963873384031	WITHOUT_CLASSIFICATION	3.6126615968768254E-6	DESIGN
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999897241785998	WITHOUT_CLASSIFICATION	1.027582140020666E-5	DESIGN
//[boolean]	WITHOUT_CLASSIFICATION	0.9999835037632815	WITHOUT_CLASSIFICATION	1.649623671855833E-5	DESIGN
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999088682271546	WITHOUT_CLASSIFICATION	9.113177284538871E-5	DESIGN
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999992704624662	WITHOUT_CLASSIFICATION	7.295375338886838E-7	DESIGN
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.8474780545966193	DESIGN	0.15252194540338077	WITHOUT_CLASSIFICATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999941770569463	WITHOUT_CLASSIFICATION	5.822943053644871E-6	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999987336558367	WITHOUT_CLASSIFICATION	1.2663441633589883E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9998419314933469	WITHOUT_CLASSIFICATION	1.580685066530631E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999979831981942	WITHOUT_CLASSIFICATION	2.016801805742715E-6	DESIGN
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999899188918363	WITHOUT_CLASSIFICATION	1.0081108163708127E-5	DESIGN
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999987336558367	WITHOUT_CLASSIFICATION	1.2663441633589883E-6	DESIGN
// static scope	WITHOUT_CLASSIFICATION	0.9998419314933469	WITHOUT_CLASSIFICATION	1.580685066530631E-4	DESIGN
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999979831981942	WITHOUT_CLASSIFICATION	2.016801805742715E-6	DESIGN
// finally with exception	WITHOUT_CLASSIFICATION	0.9999634459875496	WITHOUT_CLASSIFICATION	3.655401245044884E-5	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999811055307705	WITHOUT_CLASSIFICATION	1.8894469229490037E-5	DESIGN
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999086557959774	WITHOUT_CLASSIFICATION	9.134420402256163E-5	DESIGN
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999983053640299	WITHOUT_CLASSIFICATION	1.6946359701318488E-6	DESIGN
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9574691478716731	WITHOUT_CLASSIFICATION	0.04253085212832696	DESIGN
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999965281422852	WITHOUT_CLASSIFICATION	3.4718577148787263E-6	DESIGN
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999965061269409	WITHOUT_CLASSIFICATION	3.493873059092514E-6	DESIGN
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999897256667628	WITHOUT_CLASSIFICATION	1.0274333237181629E-5	DESIGN
// script object	WITHOUT_CLASSIFICATION	0.9997331222484938	WITHOUT_CLASSIFICATION	2.668777515062396E-4	DESIGN
// arities	WITHOUT_CLASSIFICATION	0.9999791514870106	WITHOUT_CLASSIFICATION	2.0848512989403836E-5	DESIGN
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.8185785141040453	DESIGN	0.1814214858959546	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999962064117871	WITHOUT_CLASSIFICATION	3.7935882128916644E-6	DESIGN
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999997304261106	WITHOUT_CLASSIFICATION	2.6957388948353005E-7	DESIGN
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999999305342202	WITHOUT_CLASSIFICATION	6.946577983278138E-8	DESIGN
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999784351455	WITHOUT_CLASSIFICATION	2.1564854454880093E-8	DESIGN
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999956207617001	WITHOUT_CLASSIFICATION	4.3792382999161776E-6	DESIGN
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.999987729540034	WITHOUT_CLASSIFICATION	1.2270459965926627E-5	DESIGN
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9978797279863746	WITHOUT_CLASSIFICATION	0.0021202720136254535	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999301333387067	WITHOUT_CLASSIFICATION	6.986666129326568E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999973811597798	WITHOUT_CLASSIFICATION	2.618840220278565E-6	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998302591986	WITHOUT_CLASSIFICATION	1.6974080142728487E-7	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999996123298931	WITHOUT_CLASSIFICATION	3.876701069007181E-6	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999996123298931	WITHOUT_CLASSIFICATION	3.876701069007181E-6	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999999565619837	WITHOUT_CLASSIFICATION	4.3438016329247523E-8	DESIGN
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999999565619837	WITHOUT_CLASSIFICATION	4.3438016329247523E-8	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999920705019673	WITHOUT_CLASSIFICATION	7.929498032721119E-6	DESIGN
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999920705019673	WITHOUT_CLASSIFICATION	7.929498032721119E-6	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999540922466	WITHOUT_CLASSIFICATION	4.590775328042309E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999999845599244	WITHOUT_CLASSIFICATION	1.5440075606600676E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999998453857161	WITHOUT_CLASSIFICATION	1.5461428389955545E-6	DESIGN
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999998503469459	WITHOUT_CLASSIFICATION	1.4965305398703604E-7	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999999999883102	WITHOUT_CLASSIFICATION	1.168980365301437E-10	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999992043945845	WITHOUT_CLASSIFICATION	7.956054155871726E-7	DESIGN
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999907547278	WITHOUT_CLASSIFICATION	9.245272237456929E-9	DESIGN
// then optional args	WITHOUT_CLASSIFICATION	0.999999430939896	WITHOUT_CLASSIFICATION	5.690601040971687E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996593702326	WITHOUT_CLASSIFICATION	3.4062976745162145E-7	DESIGN
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999540922466	WITHOUT_CLASSIFICATION	4.590775328042309E-8	DESIGN
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999999845599244	WITHOUT_CLASSIFICATION	1.5440075606600676E-7	DESIGN
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999998453857161	WITHOUT_CLASSIFICATION	1.5461428389955545E-6	DESIGN
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999999999883102	WITHOUT_CLASSIFICATION	1.168980365301437E-10	DESIGN
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999992043945845	WITHOUT_CLASSIFICATION	7.956054155871726E-7	DESIGN
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999999683394852	WITHOUT_CLASSIFICATION	3.1660514789318216E-7	DESIGN
// finally, post args	WITHOUT_CLASSIFICATION	0.9999988807907819	WITHOUT_CLASSIFICATION	1.1192092181564205E-6	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997906253017861	WITHOUT_CLASSIFICATION	2.0937469821384497E-4	DESIGN
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997906253017861	WITHOUT_CLASSIFICATION	2.0937469821384497E-4	DESIGN
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.999599116875018	WITHOUT_CLASSIFICATION	4.008831249819943E-4	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999962726915392	WITHOUT_CLASSIFICATION	3.7273084607553387E-6	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999281677463634	WITHOUT_CLASSIFICATION	7.183225363653037E-5	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999881728914	WITHOUT_CLASSIFICATION	1.1827108608146781E-7	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999881728914	WITHOUT_CLASSIFICATION	1.1827108608146781E-7	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999990455713976	WITHOUT_CLASSIFICATION	9.544286023962775E-7	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999991156032858	WITHOUT_CLASSIFICATION	8.843967141029031E-7	DESIGN
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999980982706475	WITHOUT_CLASSIFICATION	1.901729352554584E-6	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999390270462174	WITHOUT_CLASSIFICATION	6.09729537826556E-5	DESIGN
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9929123492899994	WITHOUT_CLASSIFICATION	0.007087650710000697	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9998816839039733	WITHOUT_CLASSIFICATION	1.1831609602675931E-4	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999988373526699	WITHOUT_CLASSIFICATION	1.1626473300218054E-6	DESIGN
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999982322125102	WITHOUT_CLASSIFICATION	1.767787489768954E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.998171987877035	WITHOUT_CLASSIFICATION	0.0018280121229650491	DESIGN
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9996433022596504	WITHOUT_CLASSIFICATION	3.566977403496589E-4	DESIGN
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9989730031116822	WITHOUT_CLASSIFICATION	0.001026996888317771	DESIGN
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999990455713976	WITHOUT_CLASSIFICATION	9.544286023962775E-7	DESIGN
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999991156032858	WITHOUT_CLASSIFICATION	8.843967141029031E-7	DESIGN
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999390270462174	WITHOUT_CLASSIFICATION	6.09729537826556E-5	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999734434942746	WITHOUT_CLASSIFICATION	2.6556505725296755E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999281677463634	WITHOUT_CLASSIFICATION	7.183225363653037E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999281677463634	WITHOUT_CLASSIFICATION	7.183225363653037E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999738692519674	WITHOUT_CLASSIFICATION	2.6130748032650367E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999738692519674	WITHOUT_CLASSIFICATION	2.6130748032650367E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9967003632397088	WITHOUT_CLASSIFICATION	0.0032996367602913137	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9967003632397088	WITHOUT_CLASSIFICATION	0.0032996367602913137	DESIGN
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.999999866394929	WITHOUT_CLASSIFICATION	1.336050710469309E-7	DESIGN
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999989255849382	WITHOUT_CLASSIFICATION	1.0744150617900216E-6	DESIGN
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9967010537424866	WITHOUT_CLASSIFICATION	0.0032989462575133736	DESIGN
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999939435643149	WITHOUT_CLASSIFICATION	6.056435685108049E-6	DESIGN
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999950627090934	WITHOUT_CLASSIFICATION	4.937290906585898E-6	DESIGN
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999978982862965	WITHOUT_CLASSIFICATION	2.101713703541309E-6	DESIGN
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998611543149261	WITHOUT_CLASSIFICATION	1.3884568507390647E-4	DESIGN
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999993340546511	WITHOUT_CLASSIFICATION	6.659453488435363E-7	DESIGN
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999998841093011	WITHOUT_CLASSIFICATION	1.1589069885260291E-7	DESIGN
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999648017386612	WITHOUT_CLASSIFICATION	3.519826133888176E-5	DESIGN
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999975427180975	WITHOUT_CLASSIFICATION	2.457281902612378E-6	DESIGN
// verify the class	WITHOUT_CLASSIFICATION	0.9999657254108358	WITHOUT_CLASSIFICATION	3.42745891640526E-5	DESIGN
// create dir if necessary	WITHOUT_CLASSIFICATION	0.99912016720057	WITHOUT_CLASSIFICATION	8.7983279942998E-4	DESIGN
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999983606843584	WITHOUT_CLASSIFICATION	1.6393156415902886E-6	DESIGN
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999994896354	WITHOUT_CLASSIFICATION	5.103646678405197E-10	DESIGN
// thread context	WITHOUT_CLASSIFICATION	0.9999631099357513	WITHOUT_CLASSIFICATION	3.689006424870226E-5	DESIGN
// line number	WITHOUT_CLASSIFICATION	0.9999847198877726	WITHOUT_CLASSIFICATION	1.528011222732979E-5	DESIGN
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999803956149043	WITHOUT_CLASSIFICATION	1.9604385095733978E-5	DESIGN
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999929669557518	WITHOUT_CLASSIFICATION	7.0330442483153155E-6	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999988373526699	WITHOUT_CLASSIFICATION	1.1626473300218054E-6	DESIGN
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.998171987877035	WITHOUT_CLASSIFICATION	0.0018280121229650491	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997495829858806	WITHOUT_CLASSIFICATION	2.504170141194235E-4	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991626499967	WITHOUT_CLASSIFICATION	8.373500032124074E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991626499967	WITHOUT_CLASSIFICATION	8.373500032124074E-7	DESIGN
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999734434942746	WITHOUT_CLASSIFICATION	2.6556505725296755E-5	DESIGN
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999281677463634	WITHOUT_CLASSIFICATION	7.183225363653037E-5	DESIGN
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999738692519674	WITHOUT_CLASSIFICATION	2.6130748032650367E-5	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9967003632397088	WITHOUT_CLASSIFICATION	0.0032996367602913137	DESIGN
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.7503811472211852	WITHOUT_CLASSIFICATION	0.24961885277881485	DESIGN
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9540881422806714	WITHOUT_CLASSIFICATION	0.045911857719328576	DESIGN
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999982927008992	WITHOUT_CLASSIFICATION	1.7072991008009256E-6	DESIGN
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9978994749035236	WITHOUT_CLASSIFICATION	0.002100525096476369	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9998907918371335	WITHOUT_CLASSIFICATION	1.0920816286643731E-4	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9998907918371335	WITHOUT_CLASSIFICATION	1.0920816286643731E-4	DESIGN
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9998835858486679	WITHOUT_CLASSIFICATION	1.1641415133203493E-4	DESIGN
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.999999987898435	WITHOUT_CLASSIFICATION	1.2101564837683583E-8	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999992107872716	WITHOUT_CLASSIFICATION	7.892127284567372E-7	DESIGN
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999999738862322	WITHOUT_CLASSIFICATION	2.6113767749074953E-8	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999273047560079	WITHOUT_CLASSIFICATION	7.269524399217058E-5	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999273047560079	WITHOUT_CLASSIFICATION	7.269524399217058E-5	DESIGN
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9998590994196491	WITHOUT_CLASSIFICATION	1.4090058035091352E-4	DESIGN
// normal closure	WITHOUT_CLASSIFICATION	0.9999982952607227	WITHOUT_CLASSIFICATION	1.7047392773378245E-6	DESIGN
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999981011026	WITHOUT_CLASSIFICATION	1.898897431127486E-9	DESIGN
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999615420361144	WITHOUT_CLASSIFICATION	3.845796388563182E-5	DESIGN
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999430479753699	WITHOUT_CLASSIFICATION	5.695202463008987E-5	DESIGN
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999995605314352	WITHOUT_CLASSIFICATION	4.394685646697497E-7	DESIGN
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999717772173482	WITHOUT_CLASSIFICATION	2.8222782651742848E-5	DESIGN
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999012464253	WITHOUT_CLASSIFICATION	9.875357471722575E-8	DESIGN
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9972422312597087	WITHOUT_CLASSIFICATION	0.0027577687402912977	DESIGN
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9720747802096982	WITHOUT_CLASSIFICATION	0.027925219790301905	DESIGN
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999996177106169	WITHOUT_CLASSIFICATION	3.8228938318473985E-7	DESIGN
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.999920717750735	WITHOUT_CLASSIFICATION	7.928224926497309E-5	DESIGN
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999999985523736	WITHOUT_CLASSIFICATION	1.4476263886689734E-8	DESIGN
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.7634031376829843	WITHOUT_CLASSIFICATION	0.23659686231701574	DESIGN
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999984236077601	WITHOUT_CLASSIFICATION	1.5763922399350458E-6	DESIGN
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999348738626681	WITHOUT_CLASSIFICATION	6.51261373319651E-5	DESIGN
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999961469031342	WITHOUT_CLASSIFICATION	3.853096865794043E-6	DESIGN
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999503585821036	WITHOUT_CLASSIFICATION	4.964141789642971E-5	DESIGN
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.999999893768756	WITHOUT_CLASSIFICATION	1.0623124400438442E-7	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.999998920520047	WITHOUT_CLASSIFICATION	1.0794799530407876E-6	DESIGN
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999979164259765	WITHOUT_CLASSIFICATION	2.0835740234602452E-6	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9998959054094539	WITHOUT_CLASSIFICATION	1.0409459054613539E-4	DESIGN
// inline script	WITHOUT_CLASSIFICATION	0.9998959054094539	WITHOUT_CLASSIFICATION	1.0409459054613539E-4	DESIGN
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999643980608364	WITHOUT_CLASSIFICATION	3.560193916366881E-5	DESIGN
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999694985149614	WITHOUT_CLASSIFICATION	3.0501485038488037E-5	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999994341915128	WITHOUT_CLASSIFICATION	5.65808487166672E-7	DESIGN
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999994341915128	WITHOUT_CLASSIFICATION	5.65808487166672E-7	DESIGN
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999960698850923	DESIGN	3.930114907679993E-6	WITHOUT_CLASSIFICATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9998932715694364	WITHOUT_CLASSIFICATION	1.0672843056354753E-4	DESIGN
// done // done // done // done	WITHOUT_CLASSIFICATION	0.999997689012525	WITHOUT_CLASSIFICATION	2.310987475120378E-6	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999542197181	WITHOUT_CLASSIFICATION	4.5780281904325664E-7	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999542197181	WITHOUT_CLASSIFICATION	4.5780281904325664E-7	DESIGN
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9175192707670812	WITHOUT_CLASSIFICATION	0.08248072923291878	DESIGN
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999987559839	WITHOUT_CLASSIFICATION	1.2440160919664957E-9	DESIGN
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999996510458	WITHOUT_CLASSIFICATION	3.489542461223404E-10	DESIGN
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999996116003407	WITHOUT_CLASSIFICATION	3.883996594075116E-7	DESIGN
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.999999995531042	WITHOUT_CLASSIFICATION	4.468957938942747E-9	DESIGN
// get the incoming case value	WITHOUT_CLASSIFICATION	0.999999065797017	WITHOUT_CLASSIFICATION	9.342029830858725E-7	DESIGN
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998864060099032	WITHOUT_CLASSIFICATION	1.1359399009679709E-4	DESIGN
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9978996256968268	WITHOUT_CLASSIFICATION	0.002100374303173256	DESIGN
// build each "when"	WITHOUT_CLASSIFICATION	0.9999999312530659	WITHOUT_CLASSIFICATION	6.874693414494373E-8	DESIGN
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998586882085835	WITHOUT_CLASSIFICATION	1.4131179141642494E-4	DESIGN
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.999999909081465	WITHOUT_CLASSIFICATION	9.09185350208486E-8	DESIGN
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999720687101478	WITHOUT_CLASSIFICATION	2.7931289852315402E-5	DESIGN
// close it out	WITHOUT_CLASSIFICATION	0.999998428479026	WITHOUT_CLASSIFICATION	1.5715209740737488E-6	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999717345418031	WITHOUT_CLASSIFICATION	2.826545819691371E-5	DESIGN
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9244728976509751	WITHOUT_CLASSIFICATION	0.07552710234902492	DESIGN
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999675909233954	WITHOUT_CLASSIFICATION	3.2409076604658544E-5	DESIGN
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999999999666659	WITHOUT_CLASSIFICATION	3.3334103710696196E-10	DESIGN
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999980704213555	WITHOUT_CLASSIFICATION	1.9295786445491727E-6	DESIGN
// Build IR for body	WITHOUT_CLASSIFICATION	0.999997117695598	WITHOUT_CLASSIFICATION	2.882304402111993E-6	DESIGN
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999590162715497	WITHOUT_CLASSIFICATION	4.0983728450368274E-5	DESIGN
// Instance method	WITHOUT_CLASSIFICATION	0.9999918712634284	WITHOUT_CLASSIFICATION	8.12873657171574E-6	DESIGN
// Class method	WITHOUT_CLASSIFICATION	0.9999963541594451	WITHOUT_CLASSIFICATION	3.6458405548608034E-6	DESIGN
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9977295693903311	WITHOUT_CLASSIFICATION	0.0022704306096690296	DESIGN
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999596245195657	WITHOUT_CLASSIFICATION	4.037548043422452E-5	DESIGN
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999925945987502	WITHOUT_CLASSIFICATION	7.405401249889272E-6	DESIGN
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999992102003824	WITHOUT_CLASSIFICATION	7.897996176417282E-7	DESIGN
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999821852806142	WITHOUT_CLASSIFICATION	1.7814719385728544E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999801440547	WITHOUT_CLASSIFICATION	1.985594531329825E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999988481991947	WITHOUT_CLASSIFICATION	1.1518008053361236E-6	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999998659100692	WITHOUT_CLASSIFICATION	1.3408993087160526E-7	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999999289041597	WITHOUT_CLASSIFICATION	7.109584030304786E-7	DESIGN
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999717345418031	WITHOUT_CLASSIFICATION	2.826545819691371E-5	DESIGN
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999801440547	WITHOUT_CLASSIFICATION	1.985594531329825E-8	DESIGN
// Build args	WITHOUT_CLASSIFICATION	0.9999988481991947	WITHOUT_CLASSIFICATION	1.1518008053361236E-6	DESIGN
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999999289041597	WITHOUT_CLASSIFICATION	7.109584030304786E-7	DESIGN
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999984725356373	WITHOUT_CLASSIFICATION	1.5274643626933366E-6	DESIGN
// Build the new module	WITHOUT_CLASSIFICATION	0.9999985455817049	WITHOUT_CLASSIFICATION	1.4544182951151264E-6	DESIGN
// Build the module body	WITHOUT_CLASSIFICATION	0.999998514210356	WITHOUT_CLASSIFICATION	1.4857896440524654E-6	DESIGN
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999689621173	WITHOUT_CLASSIFICATION	3.103788267688979E-8	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9998590748412496	WITHOUT_CLASSIFICATION	1.4092515875046557E-4	DESIGN
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.999998823729792	WITHOUT_CLASSIFICATION	1.176270208054069E-6	DESIGN
// get attr	WITHOUT_CLASSIFICATION	0.9999973594646457	WITHOUT_CLASSIFICATION	2.640535354276963E-6	DESIGN
// call operator	WITHOUT_CLASSIFICATION	0.999997384714178	WITHOUT_CLASSIFICATION	2.6152858220746077E-6	DESIGN
// set attr	WITHOUT_CLASSIFICATION	0.9999973397051887	WITHOUT_CLASSIFICATION	2.6602948112531905E-6	DESIGN
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9937646405187388	WITHOUT_CLASSIFICATION	0.006235359481261168	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999765919886351	WITHOUT_CLASSIFICATION	2.3408011364821268E-5	DESIGN
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999765919886351	WITHOUT_CLASSIFICATION	2.3408011364821268E-5	DESIGN
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999939632107198	WITHOUT_CLASSIFICATION	6.036789280260919E-6	DESIGN
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999906290695	WITHOUT_CLASSIFICATION	9.370930491766775E-9	DESIGN
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999999513007	WITHOUT_CLASSIFICATION	4.8699162265256917E-11	DESIGN
// Top-level script!	WITHOUT_CLASSIFICATION	0.9997035084542147	WITHOUT_CLASSIFICATION	2.9649154578529876E-4	DESIGN
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999788043658	WITHOUT_CLASSIFICATION	2.119563428017464E-8	DESIGN
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999979343812422	WITHOUT_CLASSIFICATION	2.0656187577883856E-6	DESIGN
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999843123888245	WITHOUT_CLASSIFICATION	1.568761117561193E-5	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999664355418668	WITHOUT_CLASSIFICATION	3.3564458133202593E-4	DESIGN
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999398939952	WITHOUT_CLASSIFICATION	6.01060048825707E-8	DESIGN
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9996260497184859	WITHOUT_CLASSIFICATION	3.7395028151402364E-4	DESIGN
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.999920665380774	WITHOUT_CLASSIFICATION	7.933461922602133E-5	DESIGN
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9981637336684728	WITHOUT_CLASSIFICATION	0.0018362663315272447	DESIGN
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999998072974	WITHOUT_CLASSIFICATION	1.9270259245526164E-10	DESIGN
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999999340861203	WITHOUT_CLASSIFICATION	6.591387973418414E-8	DESIGN
// alu operations	WITHOUT_CLASSIFICATION	0.9999989792601818	WITHOUT_CLASSIFICATION	1.020739818206417E-6	DESIGN
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.999998768361231	WITHOUT_CLASSIFICATION	1.2316387689151507E-6	DESIGN
// closure instructions	WITHOUT_CLASSIFICATION	0.9999995566168481	WITHOUT_CLASSIFICATION	4.4338315187364337E-7	DESIGN
// eval instructions	WITHOUT_CLASSIFICATION	0.999999487461739	WITHOUT_CLASSIFICATION	5.125382610629796E-7	DESIGN
// def instructions	WITHOUT_CLASSIFICATION	0.9993284806872766	WITHOUT_CLASSIFICATION	6.715193127232661E-4	DESIGN
// exception instructions	WITHOUT_CLASSIFICATION	0.9999897848947811	WITHOUT_CLASSIFICATION	1.0215105218954924E-5	DESIGN
// Loads	WITHOUT_CLASSIFICATION	0.9999985412632171	WITHOUT_CLASSIFICATION	1.4587367828216223E-6	DESIGN
// Stores	WITHOUT_CLASSIFICATION	0.999961156240532	WITHOUT_CLASSIFICATION	3.884375946816254E-5	DESIGN
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999998617666825	WITHOUT_CLASSIFICATION	1.3823331733040747E-7	DESIGN
// others	WITHOUT_CLASSIFICATION	0.9999586425917363	WITHOUT_CLASSIFICATION	4.135740826378705E-5	DESIGN
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999672534658763	WITHOUT_CLASSIFICATION	3.274653412362774E-5	DESIGN
// optimization guards	WITHOUT_CLASSIFICATION	0.9999999790439977	WITHOUT_CLASSIFICATION	2.0956002327801922E-8	DESIGN
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.7789225644819593	WITHOUT_CLASSIFICATION	0.22107743551804068	DESIGN
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9995042110381304	WITHOUT_CLASSIFICATION	4.95788961869611E-4	DESIGN
// scripts	WITHOUT_CLASSIFICATION	0.9998721427807856	WITHOUT_CLASSIFICATION	1.2785721921433103E-4	DESIGN
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999927716929752	WITHOUT_CLASSIFICATION	7.228307024792336E-6	DESIGN
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999983393384279	WITHOUT_CLASSIFICATION	1.6606615721540846E-6	DESIGN
// methods and closures	WITHOUT_CLASSIFICATION	0.9999995677518995	WITHOUT_CLASSIFICATION	4.322481005263228E-7	DESIGN
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.999999244652993	WITHOUT_CLASSIFICATION	7.553470070028638E-7	DESIGN
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9990842814208601	WITHOUT_CLASSIFICATION	9.157185791398548E-4	DESIGN
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999745723168	WITHOUT_CLASSIFICATION	2.542768315674019E-8	DESIGN
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.999999987800501	WITHOUT_CLASSIFICATION	1.2199498995237121E-8	DESIGN
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999976624298	WITHOUT_CLASSIFICATION	2.3375701471728773E-9	DESIGN
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999888288985972	WITHOUT_CLASSIFICATION	1.1171101402889658E-5	DESIGN
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999982038887788	WITHOUT_CLASSIFICATION	1.7961112212569174E-6	DESIGN
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999999657207973	WITHOUT_CLASSIFICATION	3.4279202668902524E-8	DESIGN
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999171589101246	WITHOUT_CLASSIFICATION	8.28410898754439E-5	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.7064063830377574	WITHOUT_CLASSIFICATION	0.2935936169622427	DESIGN
// Readline	WITHOUT_CLASSIFICATION	0.9999963124303617	WITHOUT_CLASSIFICATION	3.687569638300321E-6	DESIGN
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9966578037100032	WITHOUT_CLASSIFICATION	0.0033421962899968668	DESIGN
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.99999724774906	WITHOUT_CLASSIFICATION	2.7522509399992866E-6	DESIGN
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999571960875924	WITHOUT_CLASSIFICATION	4.280391240769521E-5	DESIGN
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9875886611512308	WITHOUT_CLASSIFICATION	0.012411338848769304	DESIGN
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9998069710052319	WITHOUT_CLASSIFICATION	1.9302899476814463E-4	DESIGN
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999970125428326	WITHOUT_CLASSIFICATION	2.9874571674812913E-6	DESIGN
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999683470515579	WITHOUT_CLASSIFICATION	3.1652948442159914E-5	DESIGN
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9997917922905554	WITHOUT_CLASSIFICATION	2.082077094445808E-4	DESIGN
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999984880667423	WITHOUT_CLASSIFICATION	1.511933257729258E-6	DESIGN
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9990528070143452	WITHOUT_CLASSIFICATION	9.471929856547479E-4	DESIGN
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999996201727696	WITHOUT_CLASSIFICATION	3.798272304851148E-7	DESIGN
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.998943672037818	WITHOUT_CLASSIFICATION	0.0010563279621820117	DESIGN
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999993805371564	WITHOUT_CLASSIFICATION	6.194628436115529E-7	DESIGN
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999629678537	WITHOUT_CLASSIFICATION	3.70321462753146E-8	DESIGN
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999999970590652	WITHOUT_CLASSIFICATION	2.9409348553562426E-9	DESIGN
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.6310524849638978	DESIGN	0.36894751503610224	WITHOUT_CLASSIFICATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998568363428508	WITHOUT_CLASSIFICATION	1.431636571492112E-4	DESIGN
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998568363428508	WITHOUT_CLASSIFICATION	1.431636571492112E-4	DESIGN
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999998156820107	WITHOUT_CLASSIFICATION	1.8431798930357484E-6	DESIGN
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999983204022314	WITHOUT_CLASSIFICATION	1.6795977687246474E-6	DESIGN
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998504995399	WITHOUT_CLASSIFICATION	1.4950046008297144E-7	DESIGN
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999999324293366	WITHOUT_CLASSIFICATION	6.757066339137843E-7	DESIGN
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999942442936	WITHOUT_CLASSIFICATION	5.755706370227974E-9	DESIGN
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9852028399489504	WITHOUT_CLASSIFICATION	0.014797160051049434	DESIGN
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999953475604911	WITHOUT_CLASSIFICATION	4.652439508786683E-6	DESIGN
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999961131678091	WITHOUT_CLASSIFICATION	3.886832190837339E-6	DESIGN
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9984124159710512	WITHOUT_CLASSIFICATION	0.0015875840289487464	DESIGN
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9996700406108461	WITHOUT_CLASSIFICATION	3.2995938915392843E-4	DESIGN
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.999994713758556	WITHOUT_CLASSIFICATION	5.286241443962293E-6	DESIGN
// class or module	WITHOUT_CLASSIFICATION	0.9999996551229084	WITHOUT_CLASSIFICATION	3.448770914784839E-7	DESIGN
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999975957586351	WITHOUT_CLASSIFICATION	2.4042413648240215E-6	DESIGN
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.999989841922988	WITHOUT_CLASSIFICATION	1.0158077012115245E-5	DESIGN
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999815682989129	WITHOUT_CLASSIFICATION	1.8431701087149137E-5	DESIGN
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999994996347841	WITHOUT_CLASSIFICATION	5.003652159453687E-7	DESIGN
// IN changed!	WITHOUT_CLASSIFICATION	0.9999998559194763	WITHOUT_CLASSIFICATION	1.440805237985452E-7	DESIGN
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999897564507082	WITHOUT_CLASSIFICATION	1.0243549291748906E-5	DESIGN
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999996724126702	WITHOUT_CLASSIFICATION	3.2758732980567284E-7	DESIGN
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999950409270049	WITHOUT_CLASSIFICATION	4.959072995094721E-6	DESIGN
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999990996677579	WITHOUT_CLASSIFICATION	9.003322421850356E-7	DESIGN
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9977063257814062	WITHOUT_CLASSIFICATION	0.0022936742185937975	DESIGN
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999993276517282	WITHOUT_CLASSIFICATION	6.723482718002081E-6	DESIGN
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9986902498108947	WITHOUT_CLASSIFICATION	0.0013097501891053114	DESIGN
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999999004318877	WITHOUT_CLASSIFICATION	9.95681123845143E-8	DESIGN
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9998688689164896	WITHOUT_CLASSIFICATION	1.311310835103417E-4	DESIGN
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999483759256165	WITHOUT_CLASSIFICATION	5.162407438348006E-5	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999989910584	WITHOUT_CLASSIFICATION	1.0089415905437115E-9	DESIGN
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999833855842487	WITHOUT_CLASSIFICATION	1.6614415751334432E-5	DESIGN
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.7115165791346362	WITHOUT_CLASSIFICATION	0.2884834208653639	DESIGN
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999818219526657	WITHOUT_CLASSIFICATION	1.8178047334266394E-5	DESIGN
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999999116417945	WITHOUT_CLASSIFICATION	8.835820555984155E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999214469576	WITHOUT_CLASSIFICATION	7.855304233510877E-8	DESIGN
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999994353132018	WITHOUT_CLASSIFICATION	5.646867981976609E-7	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999214469576	WITHOUT_CLASSIFICATION	7.855304233510877E-8	DESIGN
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9995681509432298	WITHOUT_CLASSIFICATION	4.318490567701935E-4	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999884077413602	WITHOUT_CLASSIFICATION	1.1592258639688727E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999884077413602	WITHOUT_CLASSIFICATION	1.1592258639688727E-5	DESIGN
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999884077413602	WITHOUT_CLASSIFICATION	1.1592258639688727E-5	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999989670468522	WITHOUT_CLASSIFICATION	1.0329531477781254E-6	DESIGN
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999989670468522	WITHOUT_CLASSIFICATION	1.0329531477781254E-6	DESIGN
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999999542336914	WITHOUT_CLASSIFICATION	4.576630868526644E-8	DESIGN
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9995105202077568	WITHOUT_CLASSIFICATION	4.894797922431268E-4	DESIGN
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.999999984426574	WITHOUT_CLASSIFICATION	1.557342595118753E-8	DESIGN
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9929621533177232	WITHOUT_CLASSIFICATION	0.007037846682276835	DESIGN
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999991049843338	WITHOUT_CLASSIFICATION	8.95015666127221E-7	DESIGN
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999990991734802	WITHOUT_CLASSIFICATION	9.008265197961568E-7	DESIGN
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999998743532781	WITHOUT_CLASSIFICATION	1.256467219189235E-7	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999990325101228	WITHOUT_CLASSIFICATION	9.674898772136298E-7	DESIGN
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999999647975683	WITHOUT_CLASSIFICATION	3.5202431742967507E-8	DESIGN
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999998675327115	WITHOUT_CLASSIFICATION	1.324672885089706E-6	DESIGN
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999999419934246	WITHOUT_CLASSIFICATION	5.800657543249869E-8	DESIGN
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999885539557404	WITHOUT_CLASSIFICATION	1.1446044259565961E-5	DESIGN
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999998135267489	WITHOUT_CLASSIFICATION	1.864732509738573E-7	DESIGN
// root-level logic	WITHOUT_CLASSIFICATION	0.9999930910053589	WITHOUT_CLASSIFICATION	6.908994641053173E-6	DESIGN
// root-level methods	WITHOUT_CLASSIFICATION	0.9999960804016591	WITHOUT_CLASSIFICATION	3.91959834089292E-6	DESIGN
// root-level classes	WITHOUT_CLASSIFICATION	0.9999991891944312	WITHOUT_CLASSIFICATION	8.108055688306025E-7	DESIGN
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999962203999426	WITHOUT_CLASSIFICATION	3.7796000574968287E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.99999676601142	WITHOUT_CLASSIFICATION	3.2339885799730363E-6	DESIGN
// load receiver	WITHOUT_CLASSIFICATION	0.99999676601142	WITHOUT_CLASSIFICATION	3.2339885799730363E-6	DESIGN
// receiver	WITHOUT_CLASSIFICATION	0.9999953685969613	WITHOUT_CLASSIFICATION	4.631403038756081E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.999996386969023	WITHOUT_CLASSIFICATION	3.6130309770172837E-6	DESIGN
// load arguments	WITHOUT_CLASSIFICATION	0.999996386969023	WITHOUT_CLASSIFICATION	3.6130309770172837E-6	DESIGN
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999977617221761	WITHOUT_CLASSIFICATION	2.2382778239661287E-6	DESIGN
// Object[] args	WITHOUT_CLASSIFICATION	0.9999664773778874	WITHOUT_CLASSIFICATION	3.3522622112659715E-5	DESIGN
// load handle	WITHOUT_CLASSIFICATION	0.9999997806930787	WITHOUT_CLASSIFICATION	2.193069213989356E-7	DESIGN
// args array	WITHOUT_CLASSIFICATION	0.9999085620255755	WITHOUT_CLASSIFICATION	9.143797442441271E-5	DESIGN
// i'th argument	WITHOUT_CLASSIFICATION	0.9999790105856761	WITHOUT_CLASSIFICATION	2.0989414323979895E-5	DESIGN
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999949169365215	WITHOUT_CLASSIFICATION	5.083063478457601E-6	DESIGN
// Object arg0	WITHOUT_CLASSIFICATION	0.999997077863417	WITHOUT_CLASSIFICATION	2.9221365829972833E-6	DESIGN
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999637333799376	WITHOUT_CLASSIFICATION	3.6266620062303757E-5	DESIGN
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999998985896531	WITHOUT_CLASSIFICATION	1.0141034696093689E-7	DESIGN
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9903212498805692	WITHOUT_CLASSIFICATION	0.009678750119430778	DESIGN
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9997318998127904	WITHOUT_CLASSIFICATION	2.68100187209578E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.999695011908217	WITHOUT_CLASSIFICATION	3.0498809178310023E-4	DESIGN
// undo check	WITHOUT_CLASSIFICATION	0.9999717786728665	WITHOUT_CLASSIFICATION	2.8221327133503608E-5	DESIGN
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999955502996075	WITHOUT_CLASSIFICATION	4.44970039246334E-6	DESIGN
// ignore	WITHOUT_CLASSIFICATION	0.9999990325101228	WITHOUT_CLASSIFICATION	9.674898772136298E-7	DESIGN
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999565046117332	WITHOUT_CLASSIFICATION	4.349538826673876E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998871092305	WITHOUT_CLASSIFICATION	1.1289076942360499E-7	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999741317644357	WITHOUT_CLASSIFICATION	2.5868235564365032E-5	DESIGN
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999741317644357	WITHOUT_CLASSIFICATION	2.5868235564365032E-5	DESIGN
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999997552468552	WITHOUT_CLASSIFICATION	2.447531447762752E-7	DESIGN
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999911271059841	WITHOUT_CLASSIFICATION	8.872894015861086E-6	DESIGN
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999984240308402	WITHOUT_CLASSIFICATION	1.5759691598396319E-6	DESIGN
// restore position	WITHOUT_CLASSIFICATION	0.9999892483868873	WITHOUT_CLASSIFICATION	1.0751613112716703E-5	DESIGN
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999887841509539	WITHOUT_CLASSIFICATION	1.1215849046097652E-5	DESIGN
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9996418498379035	WITHOUT_CLASSIFICATION	3.5815016209645367E-4	DESIGN
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999817079575	WITHOUT_CLASSIFICATION	1.829204260407544E-8	DESIGN
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999999143177498	WITHOUT_CLASSIFICATION	8.568225018873532E-7	DESIGN
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.999973378439711	WITHOUT_CLASSIFICATION	2.6621560288976362E-5	DESIGN
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999997421997524	WITHOUT_CLASSIFICATION	2.578002476964446E-7	DESIGN
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999996504751824	WITHOUT_CLASSIFICATION	3.495248175710335E-7	DESIGN
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999207380244454	WITHOUT_CLASSIFICATION	7.926197555462089E-5	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9343670239244335	DESIGN	0.06563297607556658	WITHOUT_CLASSIFICATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.99994002655145	WITHOUT_CLASSIFICATION	5.9973448550059295E-5	DESIGN
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999591798086355	WITHOUT_CLASSIFICATION	4.082019136459456E-5	DESIGN
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999990678628751	WITHOUT_CLASSIFICATION	9.32137125046753E-7	DESIGN
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999987280988591	WITHOUT_CLASSIFICATION	1.2719011408595258E-6	DESIGN
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999978362392482	WITHOUT_CLASSIFICATION	2.1637607516962246E-6	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999441645049996	WITHOUT_CLASSIFICATION	5.583549500036913E-5	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999622549419	WITHOUT_CLASSIFICATION	3.774505812643225E-8	DESIGN
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999898458023	WITHOUT_CLASSIFICATION	1.0154197732945273E-8	DESIGN
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999937210950091	WITHOUT_CLASSIFICATION	6.278904990928413E-6	DESIGN
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999910638930422	WITHOUT_CLASSIFICATION	8.9361069577974E-6	DESIGN
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.999999986124517	WITHOUT_CLASSIFICATION	1.3875483012635623E-8	DESIGN
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999999855106118	WITHOUT_CLASSIFICATION	1.4489388252291177E-8	DESIGN
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.999998914804709	WITHOUT_CLASSIFICATION	1.0851952909139533E-6	DESIGN
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999966172023763	WITHOUT_CLASSIFICATION	3.3827976237102147E-6	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9971487321994307	WITHOUT_CLASSIFICATION	0.0028512678005693927	DESIGN
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.999978572510471	WITHOUT_CLASSIFICATION	2.1427489528991514E-5	DESIGN
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9998429679850194	WITHOUT_CLASSIFICATION	1.5703201498065396E-4	DESIGN
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9998849992375758	WITHOUT_CLASSIFICATION	1.1500076242412813E-4	DESIGN
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999979017377797	WITHOUT_CLASSIFICATION	2.0982622203211763E-6	DESIGN
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9998090513060713	WITHOUT_CLASSIFICATION	1.909486939286297E-4	DESIGN
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999921659278631	WITHOUT_CLASSIFICATION	7.834072136904938E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999991495080578	WITHOUT_CLASSIFICATION	8.504919421816252E-7	DESIGN
// $blah	WITHOUT_CLASSIFICATION	0.999999428320633	WITHOUT_CLASSIFICATION	5.716793669923986E-7	DESIGN
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9971487321994307	WITHOUT_CLASSIFICATION	0.0028512678005693927	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999972016834441	WITHOUT_CLASSIFICATION	2.798316555940554E-6	DESIGN
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999991495080578	WITHOUT_CLASSIFICATION	8.504919421816252E-7	DESIGN
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9995260693778747	WITHOUT_CLASSIFICATION	4.739306221252591E-4	DESIGN
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999996892046431	WITHOUT_CLASSIFICATION	3.1079535697555076E-7	DESIGN
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999311205587	WITHOUT_CLASSIFICATION	6.887944130660519E-8	DESIGN
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999963895431663	WITHOUT_CLASSIFICATION	3.6104568337754705E-6	DESIGN
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999982105344825	WITHOUT_CLASSIFICATION	1.7894655175589396E-6	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999405993707131	WITHOUT_CLASSIFICATION	5.940062928683842E-5	DESIGN
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999405993707131	WITHOUT_CLASSIFICATION	5.940062928683842E-5	DESIGN
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998210230430152	WITHOUT_CLASSIFICATION	1.7897695698466652E-4	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999992437560314	WITHOUT_CLASSIFICATION	7.562439686419425E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998608542001	WITHOUT_CLASSIFICATION	1.3914579994329002E-7	DESIGN
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998608542001	WITHOUT_CLASSIFICATION	1.3914579994329002E-7	DESIGN
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999529621887052	WITHOUT_CLASSIFICATION	4.70378112948127E-5	DESIGN
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999821558541793	WITHOUT_CLASSIFICATION	1.7844145820740683E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9999589166122992	WITHOUT_CLASSIFICATION	4.108338770090702E-5	DESIGN
//AF_INET	WITHOUT_CLASSIFICATION	0.9999589166122992	WITHOUT_CLASSIFICATION	4.108338770090702E-5	DESIGN
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999183240856329	WITHOUT_CLASSIFICATION	8.167591436715826E-5	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.999999022697613	WITHOUT_CLASSIFICATION	9.773023869591834E-7	DESIGN
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999998091876753	WITHOUT_CLASSIFICATION	1.9081232472664975E-7	DESIGN
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999980599915672	WITHOUT_CLASSIFICATION	1.9400084327983846E-6	DESIGN
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999194825121809	WITHOUT_CLASSIFICATION	8.051748781909804E-4	DESIGN
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9990754058420223	WITHOUT_CLASSIFICATION	9.245941579776997E-4	DESIGN
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9998039019205387	WITHOUT_CLASSIFICATION	1.9609807946127636E-4	DESIGN
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999563828837185	WITHOUT_CLASSIFICATION	4.361711628162358E-5	DESIGN
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9998692590394535	WITHOUT_CLASSIFICATION	1.3074096054658364E-4	DESIGN
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999875886284451	WITHOUT_CLASSIFICATION	1.241137155496332E-5	DESIGN
// host and port given	WITHOUT_CLASSIFICATION	0.999918718434773	WITHOUT_CLASSIFICATION	8.128156522703207E-5	DESIGN
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9997183097622433	WITHOUT_CLASSIFICATION	2.8169023775674183E-4	DESIGN
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999748414602	WITHOUT_CLASSIFICATION	2.515853972696561E-8	DESIGN
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999754875490257	WITHOUT_CLASSIFICATION	2.4512450974316516E-5	DESIGN
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999999839115832	WITHOUT_CLASSIFICATION	1.608841689919159E-8	DESIGN
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9998424705321767	WITHOUT_CLASSIFICATION	1.5752946782329386E-4	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9958591658988384	WITHOUT_CLASSIFICATION	0.004140834101161602	DESIGN
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999839106515327	WITHOUT_CLASSIFICATION	1.608934846733764E-5	DESIGN
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9947613216623399	WITHOUT_CLASSIFICATION	0.00523867833766014	DESIGN
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999059672285444	WITHOUT_CLASSIFICATION	9.403277145558367E-5	DESIGN
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999897756711558	WITHOUT_CLASSIFICATION	1.0224328844223108E-5	DESIGN
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.999999893053432	WITHOUT_CLASSIFICATION	1.0694656808586153E-7	DESIGN
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999690890122631	WITHOUT_CLASSIFICATION	3.0910987736877024E-5	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999995523555846	WITHOUT_CLASSIFICATION	4.476444155224161E-7	DESIGN
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999994515432923	WITHOUT_CLASSIFICATION	5.484567076278261E-7	DESIGN
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999997478349757	WITHOUT_CLASSIFICATION	2.5216502429344676E-6	DESIGN
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9659915908704325	WITHOUT_CLASSIFICATION	0.03400840912956747	DESIGN
// line 323	WITHOUT_CLASSIFICATION	0.9999985847761003	WITHOUT_CLASSIFICATION	1.4152238998040265E-6	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999835036800873	WITHOUT_CLASSIFICATION	1.6496319912754147E-5	DESIGN
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999835036800873	WITHOUT_CLASSIFICATION	1.6496319912754147E-5	DESIGN
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9998505862364054	WITHOUT_CLASSIFICATION	1.494137635945398E-4	DESIGN
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.999999981651467	WITHOUT_CLASSIFICATION	1.834853304120192E-8	DESIGN
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999714991897218	WITHOUT_CLASSIFICATION	2.8500810278175853E-5	DESIGN
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9995861760837913	WITHOUT_CLASSIFICATION	4.1382391620860753E-4	DESIGN
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999995859128141	WITHOUT_CLASSIFICATION	4.140871858903335E-7	DESIGN
// RubySocket	WITHOUT_CLASSIFICATION	0.9998246068004203	WITHOUT_CLASSIFICATION	1.7539319957965302E-4	DESIGN
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9982312444811601	WITHOUT_CLASSIFICATION	0.0017687555188399017	DESIGN
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998887705795	WITHOUT_CLASSIFICATION	1.1122942050562668E-7	DESIGN
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999997982124317	WITHOUT_CLASSIFICATION	2.0178756831221727E-7	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999990430169912	WITHOUT_CLASSIFICATION	9.569830089147737E-7	DESIGN
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999999914068978	WITHOUT_CLASSIFICATION	8.593102105349848E-9	DESIGN
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999843986148965	WITHOUT_CLASSIFICATION	1.5601385103465015E-5	DESIGN
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999964757713009	WITHOUT_CLASSIFICATION	3.524228699173683E-6	DESIGN
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9985875220856465	WITHOUT_CLASSIFICATION	0.0014124779143535517	DESIGN
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999588617173537	WITHOUT_CLASSIFICATION	4.113828264634666E-5	DESIGN
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999962554463915	WITHOUT_CLASSIFICATION	3.744553608465479E-6	DESIGN
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999586465639083	WITHOUT_CLASSIFICATION	4.135343609156049E-5	DESIGN
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999943613699818	WITHOUT_CLASSIFICATION	5.638630018203797E-5	DESIGN
// be dead	WITHOUT_CLASSIFICATION	0.9990509034341117	WITHOUT_CLASSIFICATION	9.490965658881258E-4	DESIGN
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999470759707078	WITHOUT_CLASSIFICATION	5.292402929229119E-5	DESIGN
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999709874336615	WITHOUT_CLASSIFICATION	2.9012566338497098E-5	DESIGN
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999886276423694	WITHOUT_CLASSIFICATION	1.1372357630602931E-5	DESIGN
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999967324065606	WITHOUT_CLASSIFICATION	3.2675934394508577E-6	DESIGN
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999998949543882	WITHOUT_CLASSIFICATION	1.050456117494034E-7	DESIGN
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999532356008	WITHOUT_CLASSIFICATION	4.676439913178789E-8	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999999497970544	WITHOUT_CLASSIFICATION	5.020294560667462E-7	DESIGN
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.8879869743628918	WITHOUT_CLASSIFICATION	0.11201302563710827	DESIGN
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.99674661535266	WITHOUT_CLASSIFICATION	0.003253384647339973	DESIGN
// main body	WITHOUT_CLASSIFICATION	0.9999994512229529	WITHOUT_CLASSIFICATION	5.487770471002995E-7	DESIGN
// return jump handling	WITHOUT_CLASSIFICATION	0.9999906089745845	WITHOUT_CLASSIFICATION	9.39102541552828E-6	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999947058567416	WITHOUT_CLASSIFICATION	5.294143258371379E-6	DESIGN
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999996596381778	WITHOUT_CLASSIFICATION	3.4036182223651294E-7	DESIGN
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999731564554585	WITHOUT_CLASSIFICATION	2.6843544541561182E-5	DESIGN
// clear the redo	WITHOUT_CLASSIFICATION	0.9999955918322417	WITHOUT_CLASSIFICATION	4.408167758273396E-6	DESIGN
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999993343069262	WITHOUT_CLASSIFICATION	6.656930738199978E-7	DESIGN
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999312315273414	WITHOUT_CLASSIFICATION	6.876847265864232E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999952679854399	WITHOUT_CLASSIFICATION	4.732014560031376E-6	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9985546597534669	WITHOUT_CLASSIFICATION	0.0014453402465330785	DESIGN
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999970825916	WITHOUT_CLASSIFICATION	2.9174085202668226E-9	DESIGN
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999774299136124	WITHOUT_CLASSIFICATION	2.257008638766665E-5	DESIGN
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9982479928376986	WITHOUT_CLASSIFICATION	0.0017520071623014666	DESIGN
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9997991692887	WITHOUT_CLASSIFICATION	2.0083071129997428E-4	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999995088865322	WITHOUT_CLASSIFICATION	4.911134677601915E-7	DESIGN
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999995088865322	WITHOUT_CLASSIFICATION	4.911134677601915E-7	DESIGN
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999657917912378	WITHOUT_CLASSIFICATION	3.4208208762232905E-5	DESIGN
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9998244684863906	WITHOUT_CLASSIFICATION	1.75531513609401E-4	DESIGN
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999964085231718	WITHOUT_CLASSIFICATION	3.591476828086164E-6	DESIGN
// return	WITHOUT_CLASSIFICATION	0.9999824045936632	WITHOUT_CLASSIFICATION	1.759540633686808E-5	DESIGN
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999301333387067	WITHOUT_CLASSIFICATION	6.986666129326568E-5	DESIGN
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999973811597798	WITHOUT_CLASSIFICATION	2.618840220278565E-6	DESIGN
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999761464595984	WITHOUT_CLASSIFICATION	2.3853540401589753E-5	DESIGN
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999879432385951	WITHOUT_CLASSIFICATION	1.2056761404989504E-5	DESIGN
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999716676865875	WITHOUT_CLASSIFICATION	2.8332313412389604E-5	DESIGN
// tc	WITHOUT_CLASSIFICATION	0.9999546103792111	WITHOUT_CLASSIFICATION	4.53896207888476E-5	DESIGN
// self // name	WITHOUT_CLASSIFICATION	0.9999749454959562	WITHOUT_CLASSIFICATION	2.505450404379731E-5	DESIGN
// no args	WITHOUT_CLASSIFICATION	0.9999748195352449	WITHOUT_CLASSIFICATION	2.5180464755141215E-5	DESIGN
// variable args with block	WITHOUT_CLASSIFICATION	0.9999968983214826	WITHOUT_CLASSIFICATION	3.101678517360707E-6	DESIGN
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999994736794641	WITHOUT_CLASSIFICATION	5.263205359394729E-7	DESIGN
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999999701750412	WITHOUT_CLASSIFICATION	2.9824958802204996E-7	DESIGN
// one arg with block	WITHOUT_CLASSIFICATION	0.9999979063701365	WITHOUT_CLASSIFICATION	2.0936298634192235E-6	DESIGN
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999999681195981	WITHOUT_CLASSIFICATION	3.188040189815191E-7	DESIGN
// two args with block	WITHOUT_CLASSIFICATION	0.9999702888481362	WITHOUT_CLASSIFICATION	2.9711151863802682E-5	DESIGN
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999956164589291	WITHOUT_CLASSIFICATION	4.383541070919489E-6	DESIGN
// three args with block	WITHOUT_CLASSIFICATION	0.9999531659795575	WITHOUT_CLASSIFICATION	4.683402044245441E-5	DESIGN
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999938112710942	WITHOUT_CLASSIFICATION	6.188728905845805E-6	DESIGN
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999998095620094	WITHOUT_CLASSIFICATION	1.9043799059838208E-7	DESIGN
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999356027997383	WITHOUT_CLASSIFICATION	6.439720026174726E-5	DESIGN
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999366395646846	WITHOUT_CLASSIFICATION	6.336043531548441E-5	DESIGN
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997329492734	WITHOUT_CLASSIFICATION	2.6705072653752016E-7	DESIGN
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999980930260522	WITHOUT_CLASSIFICATION	1.9069739477246438E-6	DESIGN
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999966094442122	WITHOUT_CLASSIFICATION	3.390555787765662E-6	DESIGN
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999950627009	WITHOUT_CLASSIFICATION	4.937299096084224E-9	DESIGN
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999997992901501	WITHOUT_CLASSIFICATION	2.007098497391385E-7	DESIGN
// static invocation	WITHOUT_CLASSIFICATION	0.9999873954983477	WITHOUT_CLASSIFICATION	1.260450165235159E-5	DESIGN
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999626941192	WITHOUT_CLASSIFICATION	3.730588090935654E-8	DESIGN
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999899008979399	WITHOUT_CLASSIFICATION	1.009910206012028E-5	DESIGN
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9997940849518601	WITHOUT_CLASSIFICATION	2.0591504814002504E-4	DESIGN
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999486534072385	WITHOUT_CLASSIFICATION	5.1346592761661695E-5	DESIGN
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9985546597534669	WITHOUT_CLASSIFICATION	0.0014453402465330785	DESIGN
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999985809542612	WITHOUT_CLASSIFICATION	1.4190457388658208E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999954796614634	WITHOUT_CLASSIFICATION	4.520338536543949E-6	DESIGN
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999954796614634	WITHOUT_CLASSIFICATION	4.520338536543949E-6	DESIGN
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9841186916470707	WITHOUT_CLASSIFICATION	0.015881308352929367	DESIGN
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9993955267402803	WITHOUT_CLASSIFICATION	6.044732597196723E-4	DESIGN
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999941537937286	WITHOUT_CLASSIFICATION	5.846206271416476E-6	DESIGN
// never reached	WITHOUT_CLASSIFICATION	0.9999094291814427	WITHOUT_CLASSIFICATION	9.05708185573854E-5	DESIGN
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.999941207283444	WITHOUT_CLASSIFICATION	5.879271655596263E-5	DESIGN
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999939803393335	WITHOUT_CLASSIFICATION	6.0196606665399E-6	DESIGN
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999139409495551	WITHOUT_CLASSIFICATION	8.605905044483726E-5	DESIGN
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999584506428681	WITHOUT_CLASSIFICATION	4.1549357131812545E-5	DESIGN
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999766372044402	WITHOUT_CLASSIFICATION	2.3362795559792974E-5	DESIGN
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9997583614252983	WITHOUT_CLASSIFICATION	2.416385747018174E-4	DESIGN
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9998387600507708	WITHOUT_CLASSIFICATION	1.6123994922924223E-4	DESIGN
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.999669425645246	WITHOUT_CLASSIFICATION	3.3057435475409636E-4	DESIGN
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999159072733036	WITHOUT_CLASSIFICATION	8.40927266963967E-5	DESIGN
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9998416310842099	WITHOUT_CLASSIFICATION	1.5836891579018033E-4	DESIGN
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9842189105582111	WITHOUT_CLASSIFICATION	0.01578108944178886	DESIGN
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999756212888531	WITHOUT_CLASSIFICATION	2.437871114691474E-5	DESIGN
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999784210313907	WITHOUT_CLASSIFICATION	2.1578968609372416E-5	DESIGN
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999130727419482	WITHOUT_CLASSIFICATION	8.692725805177555E-5	DESIGN
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999692486679512	WITHOUT_CLASSIFICATION	3.0751332048777076E-5	DESIGN
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9996819646387112	WITHOUT_CLASSIFICATION	3.180353612888092E-4	DESIGN
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9998152593466021	WITHOUT_CLASSIFICATION	1.8474065339787522E-4	DESIGN
// promise to implement three	WITHOUT_CLASSIFICATION	0.9989575673266333	WITHOUT_CLASSIFICATION	0.0010424326733666745	DESIGN
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999792636813529	WITHOUT_CLASSIFICATION	2.0736318647091944E-5	DESIGN
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999998206105054	WITHOUT_CLASSIFICATION	1.7938949466705556E-7	DESIGN
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999981086261449	WITHOUT_CLASSIFICATION	1.8913738551513385E-6	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9996190443777573	WITHOUT_CLASSIFICATION	3.8095562224264455E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999997208734801	WITHOUT_CLASSIFICATION	2.7912651995889345E-7	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999141813713817	WITHOUT_CLASSIFICATION	8.581862861839956E-5	DESIGN
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999999588095426	WITHOUT_CLASSIFICATION	4.1190457364474516E-8	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998016581094252	WITHOUT_CLASSIFICATION	1.983418905746653E-4	DESIGN
// start setup method	WITHOUT_CLASSIFICATION	0.999924010975165	WITHOUT_CLASSIFICATION	7.598902483494334E-5	DESIGN
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999963290420505	WITHOUT_CLASSIFICATION	3.670957949585762E-6	DESIGN
// set Ruby	WITHOUT_CLASSIFICATION	0.9999738117001941	WITHOUT_CLASSIFICATION	2.6188299805976436E-5	DESIGN
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999980521383066	WITHOUT_CLASSIFICATION	1.9478616933436593E-6	DESIGN
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.998724026809776	WITHOUT_CLASSIFICATION	0.0012759731902240513	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999764540225404	WITHOUT_CLASSIFICATION	2.354597745955563E-5	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999441552918	WITHOUT_CLASSIFICATION	5.584470818124408E-8	DESIGN
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9996190443777573	WITHOUT_CLASSIFICATION	3.8095562224264455E-4	DESIGN
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999997208734801	WITHOUT_CLASSIFICATION	2.7912651995889345E-7	DESIGN
// create constructor	WITHOUT_CLASSIFICATION	0.9999141813713817	WITHOUT_CLASSIFICATION	8.581862861839956E-5	DESIGN
// end constructor	WITHOUT_CLASSIFICATION	0.9998016581094252	WITHOUT_CLASSIFICATION	1.983418905746653E-4	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9962311855594584	WITHOUT_CLASSIFICATION	0.003768814440541575	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999959579442393	WITHOUT_CLASSIFICATION	4.042055760692637E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997667425528811	WITHOUT_CLASSIFICATION	2.332574471190026E-4	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999998374184942	WITHOUT_CLASSIFICATION	1.6258150585092173E-7	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.999816698558498	WITHOUT_CLASSIFICATION	1.8330144150216398E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999999210254	WITHOUT_CLASSIFICATION	7.897464729488904E-11	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.999994549091488	WITHOUT_CLASSIFICATION	5.450908511962049E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999978402495426	WITHOUT_CLASSIFICATION	2.1597504574708286E-6	DESIGN
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999933065155249	WITHOUT_CLASSIFICATION	6.693484475184087E-6	DESIGN
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999997096894491	WITHOUT_CLASSIFICATION	2.9031055093308746E-7	DESIGN
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999999653673936	WITHOUT_CLASSIFICATION	3.463260641429616E-8	DESIGN
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999952221511027	WITHOUT_CLASSIFICATION	4.7778488972837874E-6	DESIGN
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9998983675475237	WITHOUT_CLASSIFICATION	1.016324524762291E-4	DESIGN
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9997159058729171	WITHOUT_CLASSIFICATION	2.84094127082896E-4	DESIGN
// store it	WITHOUT_CLASSIFICATION	0.9999865867285165	WITHOUT_CLASSIFICATION	1.3413271483552232E-5	DESIGN
// end of try block	WITHOUT_CLASSIFICATION	0.9999926345207064	WITHOUT_CLASSIFICATION	7.365479293528216E-6	DESIGN
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9996660086386094	WITHOUT_CLASSIFICATION	3.339913613906477E-4	DESIGN
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999996651623457	WITHOUT_CLASSIFICATION	3.348376542465178E-7	DESIGN
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999967316481385	WITHOUT_CLASSIFICATION	3.268351861357808E-6	DESIGN
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999441552918	WITHOUT_CLASSIFICATION	5.584470818124408E-8	DESIGN
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999959579442393	WITHOUT_CLASSIFICATION	4.042055760692637E-6	DESIGN
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997667425528811	WITHOUT_CLASSIFICATION	2.332574471190026E-4	DESIGN
// invoke method	WITHOUT_CLASSIFICATION	0.999816698558498	WITHOUT_CLASSIFICATION	1.8330144150216398E-4	DESIGN
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999999210254	WITHOUT_CLASSIFICATION	7.897464729488904E-11	DESIGN
// end setup method	WITHOUT_CLASSIFICATION	0.999994549091488	WITHOUT_CLASSIFICATION	5.450908511962049E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999978402495426	WITHOUT_CLASSIFICATION	2.1597504574708286E-6	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999847768844411	WITHOUT_CLASSIFICATION	1.5223115559014407E-5	DESIGN
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999877345319134	WITHOUT_CLASSIFICATION	1.2265468086654017E-5	DESIGN
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999952350518	WITHOUT_CLASSIFICATION	4.764948195239004E-9	DESIGN
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999986675264	WITHOUT_CLASSIFICATION	1.332473600399533E-9	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999950256782998	WITHOUT_CLASSIFICATION	4.9743217002112136E-5	DESIGN
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999950256782998	WITHOUT_CLASSIFICATION	4.9743217002112136E-5	DESIGN
// setup the class	WITHOUT_CLASSIFICATION	0.9999927521953502	WITHOUT_CLASSIFICATION	7.247804649852704E-6	DESIGN
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999995511103311	WITHOUT_CLASSIFICATION	4.488896688275026E-7	DESIGN
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999986985080106	WITHOUT_CLASSIFICATION	1.3014919894054772E-6	DESIGN
// probably a primitive	WITHOUT_CLASSIFICATION	0.9998499549213571	WITHOUT_CLASSIFICATION	1.5004507864290254E-4	DESIGN
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999980809086643	WITHOUT_CLASSIFICATION	1.9190913357260487E-6	DESIGN
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999945839458135	WITHOUT_CLASSIFICATION	5.41605418639891E-6	DESIGN
// set the full name	WITHOUT_CLASSIFICATION	0.9999941815298948	WITHOUT_CLASSIFICATION	5.818470105187059E-6	DESIGN
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999468914009974	WITHOUT_CLASSIFICATION	5.310859900257197E-5	DESIGN
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999983704698	WITHOUT_CLASSIFICATION	1.6295302421305049E-9	DESIGN
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999743637669937	WITHOUT_CLASSIFICATION	2.5636233006228867E-5	DESIGN
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9855319792546877	WITHOUT_CLASSIFICATION	0.014468020745312282	DESIGN
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9998916550230093	WITHOUT_CLASSIFICATION	1.0834497699077523E-4	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999914135112984	WITHOUT_CLASSIFICATION	8.586488701623911E-6	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9944406184354408	WITHOUT_CLASSIFICATION	0.005559381564559109	DESIGN
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999971808196123	WITHOUT_CLASSIFICATION	2.8191803876702675E-6	DESIGN
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999994973989237	WITHOUT_CLASSIFICATION	5.026010762759913E-7	DESIGN
// add all static variables	WITHOUT_CLASSIFICATION	0.9993047157125456	WITHOUT_CLASSIFICATION	6.952842874544525E-4	DESIGN
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999995058667543	WITHOUT_CLASSIFICATION	4.941332456048626E-7	DESIGN
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999993956384516	WITHOUT_CLASSIFICATION	6.043615482599194E-7	DESIGN
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999831117166775	WITHOUT_CLASSIFICATION	1.6888283322525107E-5	DESIGN
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9385590379156326	DESIGN	0.06144096208436749	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999997219018086	WITHOUT_CLASSIFICATION	2.7809819130764685E-7	DESIGN
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999831121931	WITHOUT_CLASSIFICATION	1.688780687933144E-8	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9988022167492668	DESIGN	0.0011977832507331823	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997738322837	WITHOUT_CLASSIFICATION	2.2616771631989096E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9998817956075519	WITHOUT_CLASSIFICATION	1.1820439244806539E-4	DESIGN
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999900095584	WITHOUT_CLASSIFICATION	9.990441457273566E-9	DESIGN
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998213197652417	WITHOUT_CLASSIFICATION	1.7868023475835142E-4	DESIGN
// line 326	WITHOUT_CLASSIFICATION	0.9999968424160532	WITHOUT_CLASSIFICATION	3.157583946786224E-6	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997738322837	WITHOUT_CLASSIFICATION	2.2616771631989096E-7	DESIGN
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9998817956075519	WITHOUT_CLASSIFICATION	1.1820439244806539E-4	DESIGN
// too much array creation!	WITHOUT_CLASSIFICATION	0.9944406184354408	WITHOUT_CLASSIFICATION	0.005559381564559109	DESIGN
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999893106026172	WITHOUT_CLASSIFICATION	1.0689397382741449E-5	DESIGN
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999962317356238	WITHOUT_CLASSIFICATION	3.768264376159683E-6	DESIGN
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9991083485655075	WITHOUT_CLASSIFICATION	8.916514344924403E-4	DESIGN
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999924394085806	WITHOUT_CLASSIFICATION	7.560591419254502E-6	DESIGN
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999028617170543	WITHOUT_CLASSIFICATION	9.713828294565962E-5	DESIGN
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999921829624759	WITHOUT_CLASSIFICATION	7.81703752403688E-6	DESIGN
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999954124556871	WITHOUT_CLASSIFICATION	4.587544312929763E-6	DESIGN
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999981126844381	WITHOUT_CLASSIFICATION	1.8873155620024037E-6	DESIGN
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9403967269743407	WITHOUT_CLASSIFICATION	0.05960327302565933	DESIGN
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.999722495220271	WITHOUT_CLASSIFICATION	2.775047797289933E-4	DESIGN
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999980889883049	WITHOUT_CLASSIFICATION	1.911011695081239E-6	DESIGN
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.999202389352266	WITHOUT_CLASSIFICATION	7.976106477338983E-4	DESIGN
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999997835184687	WITHOUT_CLASSIFICATION	2.164815311825983E-7	DESIGN
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999995898672441	WITHOUT_CLASSIFICATION	4.101327558139003E-7	DESIGN
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9909814551253061	WITHOUT_CLASSIFICATION	0.009018544874693932	DESIGN
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999486073750515	WITHOUT_CLASSIFICATION	5.1392624948523777E-5	DESIGN
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999426296545616	WITHOUT_CLASSIFICATION	5.7370345438434647E-5	DESIGN
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9017766965191111	WITHOUT_CLASSIFICATION	0.09822330348088891	DESIGN
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999979670839839	WITHOUT_CLASSIFICATION	2.0329160161212554E-6	DESIGN
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9744221771644019	WITHOUT_CLASSIFICATION	0.02557782283559799	DESIGN
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999945347082697	WITHOUT_CLASSIFICATION	5.4652917303471965E-6	DESIGN
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9998025298335049	WITHOUT_CLASSIFICATION	1.9747016649510383E-4	DESIGN
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999974137898773	WITHOUT_CLASSIFICATION	2.5862101228134074E-6	DESIGN
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9988299247950404	WITHOUT_CLASSIFICATION	0.001170075204959586	DESIGN
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999906476384419	WITHOUT_CLASSIFICATION	9.352361558041002E-6	DESIGN
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9997191067279292	WITHOUT_CLASSIFICATION	2.8089327207076777E-4	DESIGN
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9915094682129728	WITHOUT_CLASSIFICATION	0.00849053178702726	DESIGN
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.8177569484220425	WITHOUT_CLASSIFICATION	0.18224305157795753	DESIGN
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9989283456390389	WITHOUT_CLASSIFICATION	0.0010716543609610894	DESIGN
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9986734033962842	WITHOUT_CLASSIFICATION	0.0013265966037158943	DESIGN
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999755399394714	WITHOUT_CLASSIFICATION	2.4460060528529342E-5	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999977124577235	WITHOUT_CLASSIFICATION	2.2875422765104828E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999977124577235	WITHOUT_CLASSIFICATION	2.2875422765104828E-6	DESIGN
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999914135112984	WITHOUT_CLASSIFICATION	8.586488701623911E-6	DESIGN
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.999924601940624	WITHOUT_CLASSIFICATION	7.539805937595219E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999997098424811	WITHOUT_CLASSIFICATION	2.9015751884168287E-7	DESIGN
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999786156736729	WITHOUT_CLASSIFICATION	2.1384326327113152E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999819860415	WITHOUT_CLASSIFICATION	1.8013958553390594E-8	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999819860415	WITHOUT_CLASSIFICATION	1.8013958553390594E-8	DESIGN
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999996977681622	WITHOUT_CLASSIFICATION	3.022318376739589E-7	DESIGN
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999950999548487	WITHOUT_CLASSIFICATION	4.900045151349321E-6	DESIGN
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999703641398	WITHOUT_CLASSIFICATION	2.9635860181363816E-8	DESIGN
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999825103563771	WITHOUT_CLASSIFICATION	1.7489643622961267E-5	DESIGN
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9953699227934169	WITHOUT_CLASSIFICATION	0.004630077206583234	DESIGN
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999996037825409	WITHOUT_CLASSIFICATION	3.9621745910323794E-7	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999995684225338	WITHOUT_CLASSIFICATION	4.3157746609511086E-7	DESIGN
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999989981260004	WITHOUT_CLASSIFICATION	1.001873999596529E-5	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999975574425	WITHOUT_CLASSIFICATION	2.442557472317239E-9	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999844223297817	WITHOUT_CLASSIFICATION	1.5577670218290046E-5	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999819949547	WITHOUT_CLASSIFICATION	1.8005045384131118E-8	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999516867041	WITHOUT_CLASSIFICATION	4.831329598724087E-8	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999999984569764	WITHOUT_CLASSIFICATION	1.543023598902554E-8	DESIGN
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999375636927538	WITHOUT_CLASSIFICATION	6.243630724618112E-5	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9995129348641437	WITHOUT_CLASSIFICATION	4.8706513585629406E-4	DESIGN
// something?	WITHOUT_CLASSIFICATION	0.9760700673173078	WITHOUT_CLASSIFICATION	0.023929932682692157	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999955411184736	WITHOUT_CLASSIFICATION	4.4588815264612585E-6	DESIGN
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999955411184736	WITHOUT_CLASSIFICATION	4.4588815264612585E-6	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999902214645	WITHOUT_CLASSIFICATION	9.778535513549826E-9	DESIGN
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999902214645	WITHOUT_CLASSIFICATION	9.778535513549826E-9	DESIGN
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999974764249	WITHOUT_CLASSIFICATION	2.5235751240697806E-9	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9998729064921392	WITHOUT_CLASSIFICATION	1.2709350786088342E-4	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999953041057696	WITHOUT_CLASSIFICATION	4.69589423041528E-6	DESIGN
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999798691236684	WITHOUT_CLASSIFICATION	2.01308763315546E-5	DESIGN
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999638710305522	WITHOUT_CLASSIFICATION	3.6128969447810654E-5	DESIGN
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.999994097935513	WITHOUT_CLASSIFICATION	5.902064487052071E-6	DESIGN
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999997006076823	WITHOUT_CLASSIFICATION	2.99392317716005E-7	DESIGN
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999516867041	WITHOUT_CLASSIFICATION	4.831329598724087E-8	DESIGN
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999999984569764	WITHOUT_CLASSIFICATION	1.543023598902554E-8	DESIGN
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9995129348641437	WITHOUT_CLASSIFICATION	4.8706513585629406E-4	DESIGN
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999178813839	WITHOUT_CLASSIFICATION	8.211861605008127E-8	DESIGN
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9740444623535672	WITHOUT_CLASSIFICATION	0.025955537646432728	DESIGN
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9993306111283301	WITHOUT_CLASSIFICATION	6.693888716698832E-4	DESIGN
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9991539437343996	WITHOUT_CLASSIFICATION	8.460562656004607E-4	DESIGN
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.999962038086023	WITHOUT_CLASSIFICATION	3.796191397700238E-5	DESIGN
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999179533000139	WITHOUT_CLASSIFICATION	8.204669998609806E-5	DESIGN
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999996762006763	WITHOUT_CLASSIFICATION	3.237993236457597E-7	DESIGN
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999966697958413	WITHOUT_CLASSIFICATION	3.3302041585813555E-6	DESIGN
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999998942287667	WITHOUT_CLASSIFICATION	1.057712332624174E-7	DESIGN
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999952089562	WITHOUT_CLASSIFICATION	4.791043755368926E-9	DESIGN
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9808549215389054	DESIGN	0.019145078461094624	WITHOUT_CLASSIFICATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999953723092346	WITHOUT_CLASSIFICATION	4.62769076547745E-6	DESIGN
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999997903992977	WITHOUT_CLASSIFICATION	2.0960070240801567E-7	DESIGN
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9997320070976925	WITHOUT_CLASSIFICATION	2.679929023075258E-4	DESIGN
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.7160914926979982	DESIGN	0.28390850730200184	WITHOUT_CLASSIFICATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999996938713195	WITHOUT_CLASSIFICATION	3.0612868053992096E-7	DESIGN
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999984823841805	WITHOUT_CLASSIFICATION	1.5176158194399578E-6	DESIGN
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.999999992341268	WITHOUT_CLASSIFICATION	7.658731974408405E-9	DESIGN
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999863819096	WITHOUT_CLASSIFICATION	1.3618090405843554E-8	DESIGN
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999778271011	WITHOUT_CLASSIFICATION	2.2172898796786976E-8	DESIGN
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999987141066193	WITHOUT_CLASSIFICATION	1.2858933806936316E-6	DESIGN
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999969765211697	WITHOUT_CLASSIFICATION	3.0234788304056627E-6	DESIGN
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9994828555300382	WITHOUT_CLASSIFICATION	5.171444699617213E-4	DESIGN
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999960764440267	WITHOUT_CLASSIFICATION	3.9235559733345105E-6	DESIGN
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999995187624686	WITHOUT_CLASSIFICATION	4.812375313776868E-7	DESIGN
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999999075395328	WITHOUT_CLASSIFICATION	9.246046720399158E-8	DESIGN
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999998821794152	WITHOUT_CLASSIFICATION	1.1782058482544239E-7	DESIGN
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9998820472644061	WITHOUT_CLASSIFICATION	1.1795273559398682E-4	DESIGN
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999983327811105	WITHOUT_CLASSIFICATION	1.6672188894718676E-6	DESIGN
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999995309377355	WITHOUT_CLASSIFICATION	4.69062264367358E-7	DESIGN
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9994294932233484	WITHOUT_CLASSIFICATION	5.705067766515052E-4	DESIGN
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9998425180293262	WITHOUT_CLASSIFICATION	1.5748197067372448E-4	DESIGN
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999151419412147	WITHOUT_CLASSIFICATION	8.485805878531506E-5	DESIGN
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999813832565282	WITHOUT_CLASSIFICATION	1.8616743471806535E-5	DESIGN
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999986792565129	WITHOUT_CLASSIFICATION	1.3207434871543616E-6	DESIGN
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999940979775432	WITHOUT_CLASSIFICATION	5.9020224567999825E-6	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999984464299921	WITHOUT_CLASSIFICATION	1.5535700079160233E-6	DESIGN
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.999966054173637	WITHOUT_CLASSIFICATION	3.3945826363089794E-5	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999981010903514	WITHOUT_CLASSIFICATION	1.8989096485815057E-6	DESIGN
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999803046082502	WITHOUT_CLASSIFICATION	1.9695391749869388E-5	DESIGN
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999279627665734	WITHOUT_CLASSIFICATION	7.203723342663359E-5	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999997098424811	WITHOUT_CLASSIFICATION	2.9015751884168287E-7	DESIGN
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999984464299921	WITHOUT_CLASSIFICATION	1.5535700079160233E-6	DESIGN
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9992867208786963	WITHOUT_CLASSIFICATION	7.132791213036964E-4	DESIGN
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9811949104811135	WITHOUT_CLASSIFICATION	0.01880508951888647	DESIGN
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999735555859957	WITHOUT_CLASSIFICATION	2.6444414004285647E-5	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999996015986956	WITHOUT_CLASSIFICATION	3.984013044261167E-7	DESIGN
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999996015986956	WITHOUT_CLASSIFICATION	3.984013044261167E-7	DESIGN
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9944852772839484	WITHOUT_CLASSIFICATION	0.005514722716051561	DESIGN
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9998998353402173	WITHOUT_CLASSIFICATION	1.0016465978267864E-4	DESIGN
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.7903864025255656	WITHOUT_CLASSIFICATION	0.20961359747443453	DESIGN
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999993678993325	WITHOUT_CLASSIFICATION	6.321006673872602E-7	DESIGN
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9993730932531911	WITHOUT_CLASSIFICATION	6.269067468088447E-4	DESIGN
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999456155712	WITHOUT_CLASSIFICATION	5.4384428878398276E-8	DESIGN
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999630698702334	WITHOUT_CLASSIFICATION	3.6930129766526674E-5	DESIGN
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999936133648731	WITHOUT_CLASSIFICATION	6.386635126919049E-6	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999982844461117	WITHOUT_CLASSIFICATION	1.7155538883408907E-6	DESIGN
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999982844461117	WITHOUT_CLASSIFICATION	1.7155538883408907E-6	DESIGN
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999912211687656	WITHOUT_CLASSIFICATION	8.778831234430947E-6	DESIGN
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999899602287678	WITHOUT_CLASSIFICATION	1.003977123214007E-5	DESIGN
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999817948365964	WITHOUT_CLASSIFICATION	1.8205163403586146E-5	DESIGN
// must be a public method	WITHOUT_CLASSIFICATION	0.9918306863717469	WITHOUT_CLASSIFICATION	0.008169313628253136	DESIGN
// must be a public class	WITHOUT_CLASSIFICATION	0.9978248240830068	WITHOUT_CLASSIFICATION	0.0021751759169931725	DESIGN
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9992316315960731	WITHOUT_CLASSIFICATION	7.683684039268168E-4	DESIGN
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9976822198883368	WITHOUT_CLASSIFICATION	0.002317780111663148	DESIGN
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.999999554302371	WITHOUT_CLASSIFICATION	4.456976290789591E-7	DESIGN
// no matching method found	WITHOUT_CLASSIFICATION	0.9999886591960563	WITHOUT_CLASSIFICATION	1.134080394374593E-5	DESIGN
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999551794298671	WITHOUT_CLASSIFICATION	4.482057013287343E-5	DESIGN
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9991181693396305	WITHOUT_CLASSIFICATION	8.81830660369427E-4	DESIGN
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999897187496135	WITHOUT_CLASSIFICATION	1.0281250386425795E-5	DESIGN
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.999978489474586	WITHOUT_CLASSIFICATION	2.151052541401965E-5	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999940666781988	WITHOUT_CLASSIFICATION	5.933321801178613E-6	DESIGN
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999940666781988	WITHOUT_CLASSIFICATION	5.933321801178613E-6	DESIGN
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999989197076161	WITHOUT_CLASSIFICATION	1.0802923839611275E-6	DESIGN
// end class	WITHOUT_CLASSIFICATION	0.9999978402495426	WITHOUT_CLASSIFICATION	2.1597504574708286E-6	DESIGN
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999986254248282	WITHOUT_CLASSIFICATION	1.3745751718484038E-6	DESIGN
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999617479041202	WITHOUT_CLASSIFICATION	3.8252095879739185E-5	DESIGN
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999995766925429	WITHOUT_CLASSIFICATION	4.2330745703032466E-7	DESIGN
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9895860518765515	WITHOUT_CLASSIFICATION	0.01041394812344841	DESIGN
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999995344932546	WITHOUT_CLASSIFICATION	4.655067453992804E-6	DESIGN
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999979567483435	WITHOUT_CLASSIFICATION	2.0432516564482447E-6	DESIGN
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.99999962395492	WITHOUT_CLASSIFICATION	3.760450799623782E-7	DESIGN
/* package scope */	WITHOUT_CLASSIFICATION	0.9999617121551486	WITHOUT_CLASSIFICATION	3.8287844851398945E-5	DESIGN
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999999112533389	WITHOUT_CLASSIFICATION	8.8746661205482E-8	DESIGN
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999927675194139	WITHOUT_CLASSIFICATION	7.232480586143804E-6	DESIGN
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999714491061076	WITHOUT_CLASSIFICATION	2.8550893892456745E-5	DESIGN
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998649217335376	WITHOUT_CLASSIFICATION	1.3507826646235466E-4	DESIGN
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999991172944387	WITHOUT_CLASSIFICATION	8.827055613640934E-7	DESIGN
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999954077413775	WITHOUT_CLASSIFICATION	4.5922586224504226E-6	DESIGN
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999850443169134	WITHOUT_CLASSIFICATION	1.4955683086684803E-5	DESIGN
// statically initialized below	WITHOUT_CLASSIFICATION	0.999987965398978	WITHOUT_CLASSIFICATION	1.2034601022067318E-5	DESIGN
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999986133542028	WITHOUT_CLASSIFICATION	1.3866457971162576E-6	DESIGN
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999923410516806	WITHOUT_CLASSIFICATION	7.658948319459606E-6	DESIGN
// should not happen!	WITHOUT_CLASSIFICATION	0.9994910465082717	WITHOUT_CLASSIFICATION	5.08953491728335E-4	DESIGN
// start class	WITHOUT_CLASSIFICATION	0.9999900357918255	WITHOUT_CLASSIFICATION	9.964208174429897E-6	DESIGN
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999038481098343	WITHOUT_CLASSIFICATION	9.615189016564818E-5	DESIGN
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9990957698211009	WITHOUT_CLASSIFICATION	9.042301788990141E-4	DESIGN
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.999863788057807	WITHOUT_CLASSIFICATION	1.3621194219304476E-4	DESIGN
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.99962174612136	WITHOUT_CLASSIFICATION	3.7825387863998314E-4	DESIGN
// create static private method field	WITHOUT_CLASSIFICATION	0.9997242325930132	WITHOUT_CLASSIFICATION	2.757674069867062E-4	DESIGN
// load static empty array	WITHOUT_CLASSIFICATION	0.9997795672832216	WITHOUT_CLASSIFICATION	2.2043271677844498E-4	DESIGN
// box arguments	WITHOUT_CLASSIFICATION	0.9999995603833663	WITHOUT_CLASSIFICATION	4.396166335921436E-7	DESIGN
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9975917156038938	WITHOUT_CLASSIFICATION	0.002408284396106134	DESIGN
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999952811604305	WITHOUT_CLASSIFICATION	4.718839569587164E-6	DESIGN
// do a void return	WITHOUT_CLASSIFICATION	0.9998982647643178	WITHOUT_CLASSIFICATION	1.017352356823072E-4	DESIGN
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999970913885224	WITHOUT_CLASSIFICATION	2.908611477557642E-6	DESIGN
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9962234697209175	WITHOUT_CLASSIFICATION	0.0037765302790825966	DESIGN
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9992876773189604	WITHOUT_CLASSIFICATION	7.123226810396665E-4	DESIGN
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999894324875559	WITHOUT_CLASSIFICATION	1.0567512444085616E-5	DESIGN
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999997905603975	WITHOUT_CLASSIFICATION	2.0943960245690578E-7	DESIGN
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999010580839859	WITHOUT_CLASSIFICATION	9.894191601407122E-5	DESIGN
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999155104604	WITHOUT_CLASSIFICATION	8.448953964171667E-8	DESIGN
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999524614582838	WITHOUT_CLASSIFICATION	4.7538541716335666E-5	DESIGN
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999869093516263	WITHOUT_CLASSIFICATION	1.3090648373700283E-5	DESIGN
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9984756162558129	WITHOUT_CLASSIFICATION	0.001524383744187151	DESIGN
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9998722222664786	WITHOUT_CLASSIFICATION	1.277777335213573E-4	DESIGN
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.5864727720767892	DESIGN	0.41352722792321095	WITHOUT_CLASSIFICATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999923545405119	WITHOUT_CLASSIFICATION	7.645459487979163E-6	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999597228485855	WITHOUT_CLASSIFICATION	4.027715141443808E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999292268577	WITHOUT_CLASSIFICATION	7.077314228284174E-8	DESIGN
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.997507160944184	WITHOUT_CLASSIFICATION	0.002492839055815939	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999284232883655	WITHOUT_CLASSIFICATION	7.157671163444969E-5	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997738322837	WITHOUT_CLASSIFICATION	2.2616771631989096E-7	DESIGN
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997738322837	WITHOUT_CLASSIFICATION	2.2616771631989096E-7	DESIGN
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9994588722296143	WITHOUT_CLASSIFICATION	5.411277703857065E-4	DESIGN
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999808711667882	WITHOUT_CLASSIFICATION	1.9128833211706408E-5	DESIGN
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999980654050642	WITHOUT_CLASSIFICATION	1.9345949358400598E-6	DESIGN
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.962231266773502	DESIGN	0.03776873322649795	WITHOUT_CLASSIFICATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999996517904728	WITHOUT_CLASSIFICATION	3.482095272202738E-7	DESIGN
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999976770019595	WITHOUT_CLASSIFICATION	2.322998040407332E-6	DESIGN
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999804736881341	WITHOUT_CLASSIFICATION	1.9526311865769116E-5	DESIGN
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999999847214	WITHOUT_CLASSIFICATION	1.5278572561737783E-11	DESIGN
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999921405593	WITHOUT_CLASSIFICATION	7.859440707845346E-9	DESIGN
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9993324303999821	WITHOUT_CLASSIFICATION	6.67569600017898E-4	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999625515571622	WITHOUT_CLASSIFICATION	3.744844283780826E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999625515571622	WITHOUT_CLASSIFICATION	3.744844283780826E-5	DESIGN
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999625515571622	WITHOUT_CLASSIFICATION	3.744844283780826E-5	DESIGN
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999826079964	WITHOUT_CLASSIFICATION	1.739200362812367E-8	DESIGN
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999896266630283	WITHOUT_CLASSIFICATION	1.0373336971801586E-5	DESIGN
// Single node in list	WITHOUT_CLASSIFICATION	0.9999421412841241	WITHOUT_CLASSIFICATION	5.785871587591593E-5	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999968098596	WITHOUT_CLASSIFICATION	3.190140482996446E-9	DESIGN
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999968098596	WITHOUT_CLASSIFICATION	3.190140482996446E-9	DESIGN
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999989569436114	WITHOUT_CLASSIFICATION	1.0430563886460428E-6	DESIGN
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.99994411800606	WITHOUT_CLASSIFICATION	5.588199394013346E-5	DESIGN
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.999999913931873	WITHOUT_CLASSIFICATION	8.606812693421616E-8	DESIGN
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999999929287353	WITHOUT_CLASSIFICATION	7.071264690779939E-8	DESIGN
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999361825913147	WITHOUT_CLASSIFICATION	6.381740868536909E-5	DESIGN
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999960012092173	WITHOUT_CLASSIFICATION	3.998790782762599E-6	DESIGN
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999992991143717	WITHOUT_CLASSIFICATION	7.008856284298704E-7	DESIGN
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999917095211256	WITHOUT_CLASSIFICATION	8.290478874373E-6	DESIGN
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999969412635	WITHOUT_CLASSIFICATION	3.0587364396535867E-9	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999961817890537	WITHOUT_CLASSIFICATION	3.818210946358759E-6	DESIGN
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999961817890537	WITHOUT_CLASSIFICATION	3.818210946358759E-6	DESIGN
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.999995723153139	WITHOUT_CLASSIFICATION	4.2768468609930974E-6	DESIGN
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9998929693368735	WITHOUT_CLASSIFICATION	1.0703066312640173E-4	DESIGN
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.999999819908306	WITHOUT_CLASSIFICATION	1.8009169389276933E-7	DESIGN
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.999967418235793	WITHOUT_CLASSIFICATION	3.258176420694776E-5	DESIGN
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999996225265513	WITHOUT_CLASSIFICATION	3.7747344871786907E-7	DESIGN
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999973540344388	WITHOUT_CLASSIFICATION	2.6459655611297045E-6	DESIGN
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999991920865007	WITHOUT_CLASSIFICATION	8.079134994486338E-7	DESIGN
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999861085489632	WITHOUT_CLASSIFICATION	1.3891451036807717E-5	DESIGN
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999322623566751	WITHOUT_CLASSIFICATION	6.773764332490366E-5	DESIGN
// POP	WITHOUT_CLASSIFICATION	0.9999956285133547	WITHOUT_CLASSIFICATION	4.371486645344425E-6	DESIGN
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998973160893635	WITHOUT_CLASSIFICATION	1.0268391063643695E-4	DESIGN
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999980081441501	WITHOUT_CLASSIFICATION	1.9918558499303172E-6	DESIGN
// SET_P	WITHOUT_CLASSIFICATION	0.9999937559947211	WITHOUT_CLASSIFICATION	6.244005278974396E-6	DESIGN
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999686125612071	WITHOUT_CLASSIFICATION	3.138743879300467E-5	DESIGN
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999814601212897	WITHOUT_CLASSIFICATION	1.8539878710272886E-5	DESIGN
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999998135253881	WITHOUT_CLASSIFICATION	1.8647461189185698E-7	DESIGN
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999956694140426	WITHOUT_CLASSIFICATION	4.330585957402411E-6	DESIGN
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999888758824552	WITHOUT_CLASSIFICATION	1.1124117544735612E-5	DESIGN
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999921459976737	WITHOUT_CLASSIFICATION	7.854002326225638E-6	DESIGN
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999008896243	WITHOUT_CLASSIFICATION	9.911037564758135E-8	DESIGN
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9831051208136886	DESIGN	0.01689487918631142	WITHOUT_CLASSIFICATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9947277792554592	WITHOUT_CLASSIFICATION	0.005272220744540818	DESIGN
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999999910976315	WITHOUT_CLASSIFICATION	8.902368472392979E-9	DESIGN
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.999889666101608	WITHOUT_CLASSIFICATION	1.103338983918949E-4	DESIGN
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999997825166851	WITHOUT_CLASSIFICATION	2.1748331501858048E-7	DESIGN
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9994749316489178	WITHOUT_CLASSIFICATION	5.250683510822715E-4	DESIGN
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999992917967602	WITHOUT_CLASSIFICATION	7.082032397705832E-7	DESIGN
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999884163247833	WITHOUT_CLASSIFICATION	1.1583675216781282E-5	DESIGN
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9359003559680594	WITHOUT_CLASSIFICATION	0.06409964403194048	DESIGN
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.999999018689472	WITHOUT_CLASSIFICATION	9.813105279718039E-7	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999707595265244	WITHOUT_CLASSIFICATION	2.9240473475698824E-5	DESIGN
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999555095342418	WITHOUT_CLASSIFICATION	4.449046575806207E-5	DESIGN
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999917145690046	WITHOUT_CLASSIFICATION	8.285430995407459E-6	DESIGN
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999707595265244	WITHOUT_CLASSIFICATION	2.9240473475698824E-5	DESIGN
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999991792475499	WITHOUT_CLASSIFICATION	8.207524502179672E-7	DESIGN
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999758457150157	WITHOUT_CLASSIFICATION	2.4154284984157484E-5	DESIGN
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9991300744220456	WITHOUT_CLASSIFICATION	8.699255779543463E-4	DESIGN
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9998324575408516	WITHOUT_CLASSIFICATION	1.675424591484662E-4	DESIGN
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999995977047675	WITHOUT_CLASSIFICATION	4.0229523241062623E-7	DESIGN
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999999166977671	WITHOUT_CLASSIFICATION	8.330223285312934E-8	DESIGN
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999998861869998	WITHOUT_CLASSIFICATION	1.1381300027616955E-7	DESIGN
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999925643118558	WITHOUT_CLASSIFICATION	7.435688144214024E-6	DESIGN
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999865114735589	WITHOUT_CLASSIFICATION	1.3488526441162278E-5	DESIGN
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999289542449425	WITHOUT_CLASSIFICATION	7.104575505744741E-5	DESIGN
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9903634184905851	WITHOUT_CLASSIFICATION	0.009636581509414889	DESIGN
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9940242852448686	WITHOUT_CLASSIFICATION	0.005975714755131318	DESIGN
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9987699875287477	WITHOUT_CLASSIFICATION	0.001230012471252253	DESIGN
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9991699898348162	WITHOUT_CLASSIFICATION	8.300101651838836E-4	DESIGN
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9978141285260267	WITHOUT_CLASSIFICATION	0.0021858714739733443	DESIGN
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.995393171413154	WITHOUT_CLASSIFICATION	0.0046068285868461085	DESIGN
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9992122212755654	WITHOUT_CLASSIFICATION	7.877787244345251E-4	DESIGN
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9971767834749229	WITHOUT_CLASSIFICATION	0.00282321652507707	DESIGN
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999940542723518	WITHOUT_CLASSIFICATION	5.945727648229299E-6	DESIGN
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9997851712262206	WITHOUT_CLASSIFICATION	2.1482877377953607E-4	DESIGN
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999307010857085	WITHOUT_CLASSIFICATION	6.929891429155219E-5	DESIGN
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.999997368758179	WITHOUT_CLASSIFICATION	2.6312418210160346E-6	DESIGN
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999985982264831	WITHOUT_CLASSIFICATION	1.4017735169372184E-6	DESIGN
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999994267777418	WITHOUT_CLASSIFICATION	5.732222581793469E-7	DESIGN
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999294270001	WITHOUT_CLASSIFICATION	7.05729998653828E-8	DESIGN
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999629050264021	WITHOUT_CLASSIFICATION	3.70949735979939E-5	DESIGN
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999992563122371	WITHOUT_CLASSIFICATION	7.436877628341961E-7	DESIGN
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999990372543991	WITHOUT_CLASSIFICATION	9.627456008802218E-7	DESIGN
// block (primary)	WITHOUT_CLASSIFICATION	0.9999882638309521	WITHOUT_CLASSIFICATION	1.1736169047890047E-5	DESIGN
// block (expr)	WITHOUT_CLASSIFICATION	0.9999973950514174	WITHOUT_CLASSIFICATION	2.604948582640269E-6	DESIGN
// hash	WITHOUT_CLASSIFICATION	0.9999063258753493	WITHOUT_CLASSIFICATION	9.367412465063343E-5	DESIGN
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9947011320334301	WITHOUT_CLASSIFICATION	0.005298867966569873	DESIGN
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9412745834874298	DESIGN	0.058725416512570155	WITHOUT_CLASSIFICATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9710929211024245	WITHOUT_CLASSIFICATION	0.02890707889757542	DESIGN
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999942800687698	WITHOUT_CLASSIFICATION	5.719931230229358E-6	DESIGN
// binary	WITHOUT_CLASSIFICATION	0.9999677664143714	WITHOUT_CLASSIFICATION	3.223358562869148E-5	DESIGN
// decimal	WITHOUT_CLASSIFICATION	0.9999808833021718	WITHOUT_CLASSIFICATION	1.9116697828109535E-5	DESIGN
//Octal	WITHOUT_CLASSIFICATION	0.9999925204399596	WITHOUT_CLASSIFICATION	7.479560040366336E-6	DESIGN
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999691270956684	WITHOUT_CLASSIFICATION	3.08729043315702E-5	DESIGN
// backslash	WITHOUT_CLASSIFICATION	0.9999999659048339	WITHOUT_CLASSIFICATION	3.409516624360373E-8	DESIGN
// newline	WITHOUT_CLASSIFICATION	0.9999661751154167	WITHOUT_CLASSIFICATION	3.382488458325237E-5	DESIGN
// horizontal tab	WITHOUT_CLASSIFICATION	0.9998855885108013	WITHOUT_CLASSIFICATION	1.1441148919856198E-4	DESIGN
// form feed	WITHOUT_CLASSIFICATION	0.9999823325483991	WITHOUT_CLASSIFICATION	1.76674516009342E-5	DESIGN
// vertical tab	WITHOUT_CLASSIFICATION	0.99997742409804	WITHOUT_CLASSIFICATION	2.2575901959971978E-5	DESIGN
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999988750798451	WITHOUT_CLASSIFICATION	1.1249201549222119E-6	DESIGN
// escape	WITHOUT_CLASSIFICATION	0.9999985918070157	WITHOUT_CLASSIFICATION	1.4081929842964021E-6	DESIGN
// hex constant	WITHOUT_CLASSIFICATION	0.9998356233266007	WITHOUT_CLASSIFICATION	1.6437667339930812E-4	DESIGN
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999998783080506	WITHOUT_CLASSIFICATION	1.2169194934972506E-7	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999998466695074	WITHOUT_CLASSIFICATION	1.5333049276024314E-7	DESIGN
// space	WITHOUT_CLASSIFICATION	0.999992248475274	WITHOUT_CLASSIFICATION	7.751524726017375E-6	DESIGN
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999338182229923	WITHOUT_CLASSIFICATION	6.618177700773002E-5	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999988445154979	WITHOUT_CLASSIFICATION	1.1554845020990731E-5	DESIGN
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999970209969823	WITHOUT_CLASSIFICATION	2.97900301764305E-6	DESIGN
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999998466695074	WITHOUT_CLASSIFICATION	1.5333049276024314E-7	DESIGN
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9997729875193385	DESIGN	2.2701248066155932E-4	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9997729875193385	DESIGN	2.2701248066155932E-4	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999971359300518	WITHOUT_CLASSIFICATION	2.864069948177199E-6	DESIGN
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999997048567105	WITHOUT_CLASSIFICATION	2.9514328956448346E-7	DESIGN
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9998247337642999	WITHOUT_CLASSIFICATION	1.752662357000499E-4	DESIGN
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999353733490861	WITHOUT_CLASSIFICATION	6.462665091383199E-5	DESIGN
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999754997035536	WITHOUT_CLASSIFICATION	2.4500296446404943E-5	DESIGN
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999958121614716	WITHOUT_CLASSIFICATION	4.187838528390701E-6	DESIGN
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999982425284472	WITHOUT_CLASSIFICATION	1.757471552886907E-6	DESIGN
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.5003580902438597	DESIGN	0.49964190975614026	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999594652773353	WITHOUT_CLASSIFICATION	4.0534722664717864E-5	DESIGN
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999223449222484	WITHOUT_CLASSIFICATION	7.765507775149878E-5	DESIGN
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999968009936605	WITHOUT_CLASSIFICATION	3.1990063393845263E-6	DESIGN
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999966047185	WITHOUT_CLASSIFICATION	3.3952814970699633E-9	DESIGN
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.999996143053106	WITHOUT_CLASSIFICATION	3.8569468939257994E-6	DESIGN
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9998312620684945	WITHOUT_CLASSIFICATION	1.6873793150547927E-4	DESIGN
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.7116972173178469	WITHOUT_CLASSIFICATION	0.28830278268215315	DESIGN
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9513218791109562	WITHOUT_CLASSIFICATION	0.048678120889043885	DESIGN
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999998160068237	WITHOUT_CLASSIFICATION	1.839931763308598E-7	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997474851041327	WITHOUT_CLASSIFICATION	2.525148958673442E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997474851041327	WITHOUT_CLASSIFICATION	2.525148958673442E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997474851041327	WITHOUT_CLASSIFICATION	2.525148958673442E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997474851041327	WITHOUT_CLASSIFICATION	2.525148958673442E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997474851041327	WITHOUT_CLASSIFICATION	2.525148958673442E-4	DESIGN
// line 329	WITHOUT_CLASSIFICATION	0.9999987246671912	WITHOUT_CLASSIFICATION	1.2753328088152755E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999111807402	WITHOUT_CLASSIFICATION	8.881925973269395E-8	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998483245898487	WITHOUT_CLASSIFICATION	1.5167541015127347E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999936927957536	WITHOUT_CLASSIFICATION	6.307204246396712E-6	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999809834185117	WITHOUT_CLASSIFICATION	1.9016581488305903E-5	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999853310777319	WITHOUT_CLASSIFICATION	1.4668922268118476E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9956853498565754	WITHOUT_CLASSIFICATION	0.004314650143424516	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9986928128598579	WITHOUT_CLASSIFICATION	0.0013071871401420909	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998242435873369	WITHOUT_CLASSIFICATION	1.7575641266317867E-4	DESIGN
// line 271	WITHOUT_CLASSIFICATION	0.9999998734310631	WITHOUT_CLASSIFICATION	1.2656893692555897E-7	DESIGN
// line 274	WITHOUT_CLASSIFICATION	0.9999998274037004	WITHOUT_CLASSIFICATION	1.725962996145758E-7	DESIGN
// line 303	WITHOUT_CLASSIFICATION	0.9999971756591515	WITHOUT_CLASSIFICATION	2.8243408484227094E-6	DESIGN
// line 311	WITHOUT_CLASSIFICATION	0.9999976873755885	WITHOUT_CLASSIFICATION	2.312624411425435E-6	DESIGN
// line 314	WITHOUT_CLASSIFICATION	0.9999985572976032	WITHOUT_CLASSIFICATION	1.4427023967928086E-6	DESIGN
// line 317	WITHOUT_CLASSIFICATION	0.9999990153220364	WITHOUT_CLASSIFICATION	9.846779636502785E-7	DESIGN
// line 332	WITHOUT_CLASSIFICATION	0.999999372590852	WITHOUT_CLASSIFICATION	6.274091479453619E-7	DESIGN
// line 338	WITHOUT_CLASSIFICATION	0.9999982227073667	WITHOUT_CLASSIFICATION	1.7772926332075821E-6	DESIGN
// line 341	WITHOUT_CLASSIFICATION	0.9999983875473892	WITHOUT_CLASSIFICATION	1.6124526106978089E-6	DESIGN
// line 344	WITHOUT_CLASSIFICATION	0.9999979217247804	WITHOUT_CLASSIFICATION	2.0782752196821064E-6	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999989935671642	WITHOUT_CLASSIFICATION	1.0064328359135824E-6	DESIGN
// line 358	WITHOUT_CLASSIFICATION	0.9999988469436206	WITHOUT_CLASSIFICATION	1.1530563794245114E-6	DESIGN
// line 367	WITHOUT_CLASSIFICATION	0.9999972599874439	WITHOUT_CLASSIFICATION	2.7400125561865296E-6	DESIGN
// line 372	WITHOUT_CLASSIFICATION	0.9999995802631395	WITHOUT_CLASSIFICATION	4.19736860431065E-7	DESIGN
// line 378	WITHOUT_CLASSIFICATION	0.9999988633808856	WITHOUT_CLASSIFICATION	1.1366191144560567E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999996682589426	WITHOUT_CLASSIFICATION	3.3174105731735244E-7	DESIGN
// line 407	WITHOUT_CLASSIFICATION	0.9999994314171001	WITHOUT_CLASSIFICATION	5.685828998066904E-7	DESIGN
// line 411	WITHOUT_CLASSIFICATION	0.9999989127264852	WITHOUT_CLASSIFICATION	1.087273514761128E-6	DESIGN
// line 414	WITHOUT_CLASSIFICATION	0.9999993265407356	WITHOUT_CLASSIFICATION	6.734592642610016E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999995435550624	WITHOUT_CLASSIFICATION	4.564449375641994E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999998137852364	WITHOUT_CLASSIFICATION	1.8621476360164437E-7	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999987549791959	WITHOUT_CLASSIFICATION	1.2450208042156019E-6	DESIGN
// line 434	WITHOUT_CLASSIFICATION	0.9999983338197959	WITHOUT_CLASSIFICATION	1.6661802041666567E-6	DESIGN
// line 443	WITHOUT_CLASSIFICATION	0.9999978049479528	WITHOUT_CLASSIFICATION	2.1950520471447513E-6	DESIGN
// line 446	WITHOUT_CLASSIFICATION	0.9999979090327052	WITHOUT_CLASSIFICATION	2.090967294739662E-6	DESIGN
// line 452	WITHOUT_CLASSIFICATION	0.9999997744485776	WITHOUT_CLASSIFICATION	2.2555142258095759E-7	DESIGN
// line 457	WITHOUT_CLASSIFICATION	0.9999992172157208	WITHOUT_CLASSIFICATION	7.827842791832959E-7	DESIGN
// line 464	WITHOUT_CLASSIFICATION	0.9999984731883572	WITHOUT_CLASSIFICATION	1.5268116427517975E-6	DESIGN
// line 467	WITHOUT_CLASSIFICATION	0.999998756300218	WITHOUT_CLASSIFICATION	1.2436997820652267E-6	DESIGN
// line 470	WITHOUT_CLASSIFICATION	0.9999996297672977	WITHOUT_CLASSIFICATION	3.702327022549909E-7	DESIGN
// line 479	WITHOUT_CLASSIFICATION	0.9999989790738587	WITHOUT_CLASSIFICATION	1.0209261413454381E-6	DESIGN
// line 484	WITHOUT_CLASSIFICATION	0.9999992725033024	WITHOUT_CLASSIFICATION	7.274966976139061E-7	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.999998558487132	WITHOUT_CLASSIFICATION	1.4415128679780252E-6	DESIGN
// line 492	WITHOUT_CLASSIFICATION	0.9999997869748228	WITHOUT_CLASSIFICATION	2.130251771324506E-7	DESIGN
// line 498	WITHOUT_CLASSIFICATION	0.9999994138791688	WITHOUT_CLASSIFICATION	5.861208311309791E-7	DESIGN
// line 501	WITHOUT_CLASSIFICATION	0.999998906704528	WITHOUT_CLASSIFICATION	1.093295472047258E-6	DESIGN
// line 504	WITHOUT_CLASSIFICATION	0.9999980293809164	WITHOUT_CLASSIFICATION	1.970619083500564E-6	DESIGN
// line 507	WITHOUT_CLASSIFICATION	0.9999989831192571	WITHOUT_CLASSIFICATION	1.0168807429446914E-6	DESIGN
// line 510	WITHOUT_CLASSIFICATION	0.9999998235738998	WITHOUT_CLASSIFICATION	1.7642610016956132E-7	DESIGN
// line 519	WITHOUT_CLASSIFICATION	0.999999265553748	WITHOUT_CLASSIFICATION	7.34446252118594E-7	DESIGN
// line 525	WITHOUT_CLASSIFICATION	0.9999993378189701	WITHOUT_CLASSIFICATION	6.621810299302151E-7	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998483245898487	WITHOUT_CLASSIFICATION	1.5167541015127347E-4	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999980609587783	WITHOUT_CLASSIFICATION	1.939041221736576E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.999999376200732	WITHOUT_CLASSIFICATION	6.237992680059172E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999959061090844	WITHOUT_CLASSIFICATION	4.093890915635686E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999961007831839	WITHOUT_CLASSIFICATION	3.899216816041779E-6	DESIGN
// line 556	WITHOUT_CLASSIFICATION	0.9999959338776749	WITHOUT_CLASSIFICATION	4.066122325021394E-6	DESIGN
// line 559	WITHOUT_CLASSIFICATION	0.9999979535344083	WITHOUT_CLASSIFICATION	2.0464655916406966E-6	DESIGN
// line 563	WITHOUT_CLASSIFICATION	0.9999875016308097	WITHOUT_CLASSIFICATION	1.249836919026947E-5	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.999995036027338	WITHOUT_CLASSIFICATION	4.963972662059774E-6	DESIGN
// line 569	WITHOUT_CLASSIFICATION	0.9999959560365846	WITHOUT_CLASSIFICATION	4.043963415279223E-6	DESIGN
// line 575	WITHOUT_CLASSIFICATION	0.999998703435986	WITHOUT_CLASSIFICATION	1.2965640139855732E-6	DESIGN
// line 578	WITHOUT_CLASSIFICATION	0.9999991470419677	WITHOUT_CLASSIFICATION	8.529580323557861E-7	DESIGN
// line 587	WITHOUT_CLASSIFICATION	0.9999991157610956	WITHOUT_CLASSIFICATION	8.842389042945164E-7	DESIGN
// line 596	WITHOUT_CLASSIFICATION	0.9999949181818082	WITHOUT_CLASSIFICATION	5.081818191834308E-6	DESIGN
// line 604	WITHOUT_CLASSIFICATION	0.9999969925416331	WITHOUT_CLASSIFICATION	3.0074583668222098E-6	DESIGN
// line 607	WITHOUT_CLASSIFICATION	0.9999984099852812	WITHOUT_CLASSIFICATION	1.5900147187897054E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999997845426553	WITHOUT_CLASSIFICATION	2.154573448477346E-7	DESIGN
// line 613	WITHOUT_CLASSIFICATION	0.999997776390599	WITHOUT_CLASSIFICATION	2.223609401046046E-6	DESIGN
// line 616	WITHOUT_CLASSIFICATION	0.999998389441252	WITHOUT_CLASSIFICATION	1.6105587480385086E-6	DESIGN
// line 634	WITHOUT_CLASSIFICATION	0.9999965110893443	WITHOUT_CLASSIFICATION	3.488910655683911E-6	DESIGN
// line 638	WITHOUT_CLASSIFICATION	0.9999967267767526	WITHOUT_CLASSIFICATION	3.273223247508031E-6	DESIGN
// line 643	WITHOUT_CLASSIFICATION	0.9999963520979749	WITHOUT_CLASSIFICATION	3.647902025132747E-6	DESIGN
// line 646	WITHOUT_CLASSIFICATION	0.9999978979475314	WITHOUT_CLASSIFICATION	2.1020524686649722E-6	DESIGN
// line 655	WITHOUT_CLASSIFICATION	0.9999985153885889	WITHOUT_CLASSIFICATION	1.4846114111715688E-6	DESIGN
// line 660	WITHOUT_CLASSIFICATION	0.9999991546013272	WITHOUT_CLASSIFICATION	8.453986727725478E-7	DESIGN
// line 667	WITHOUT_CLASSIFICATION	0.9999985852506197	WITHOUT_CLASSIFICATION	1.4147493803640941E-6	DESIGN
// line 670	WITHOUT_CLASSIFICATION	0.9999994693416381	WITHOUT_CLASSIFICATION	5.306583619046694E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999996593949215	WITHOUT_CLASSIFICATION	3.4060507842544074E-7	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999977291484599	WITHOUT_CLASSIFICATION	2.2708515402031106E-6	DESIGN
// line 701	WITHOUT_CLASSIFICATION	0.9999995760320995	WITHOUT_CLASSIFICATION	4.239679004724665E-7	DESIGN
// line 717	WITHOUT_CLASSIFICATION	0.9999995052061562	WITHOUT_CLASSIFICATION	4.947938438408747E-7	DESIGN
// line 720	WITHOUT_CLASSIFICATION	0.9999998192126546	WITHOUT_CLASSIFICATION	1.8078734538617854E-7	DESIGN
// line 726	WITHOUT_CLASSIFICATION	0.999998454393497	WITHOUT_CLASSIFICATION	1.5456065029679039E-6	DESIGN
// line 729	WITHOUT_CLASSIFICATION	0.9999995108839228	WITHOUT_CLASSIFICATION	4.891160772296358E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999995663410519	WITHOUT_CLASSIFICATION	4.3365894820137396E-7	DESIGN
// line 735	WITHOUT_CLASSIFICATION	0.9999987083505248	WITHOUT_CLASSIFICATION	1.2916494752139746E-6	DESIGN
// line 738	WITHOUT_CLASSIFICATION	0.9999987734954587	WITHOUT_CLASSIFICATION	1.2265045412901985E-6	DESIGN
// line 751	WITHOUT_CLASSIFICATION	0.999999440535495	WITHOUT_CLASSIFICATION	5.594645050176649E-7	DESIGN
// line 754	WITHOUT_CLASSIFICATION	0.9999991071368382	WITHOUT_CLASSIFICATION	8.928631617837259E-7	DESIGN
// line 757	WITHOUT_CLASSIFICATION	0.9999991182865288	WITHOUT_CLASSIFICATION	8.817134712145023E-7	DESIGN
// line 760	WITHOUT_CLASSIFICATION	0.9999992255098684	WITHOUT_CLASSIFICATION	7.744901315440761E-7	DESIGN
// line 763	WITHOUT_CLASSIFICATION	0.999995813188295	WITHOUT_CLASSIFICATION	4.186811705029445E-6	DESIGN
// line 769	WITHOUT_CLASSIFICATION	0.9999983279864689	WITHOUT_CLASSIFICATION	1.6720135311550385E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999997659622	WITHOUT_CLASSIFICATION	2.3403780002229156E-7	DESIGN
// line 775	WITHOUT_CLASSIFICATION	0.9999991298770566	WITHOUT_CLASSIFICATION	8.701229433653967E-7	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999998659328788	WITHOUT_CLASSIFICATION	1.3406712112715849E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999994021670998	WITHOUT_CLASSIFICATION	5.978329000627844E-7	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999992163182139	WITHOUT_CLASSIFICATION	7.836817860629664E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999990181691732	WITHOUT_CLASSIFICATION	9.818308267408096E-7	DESIGN
// line 797	WITHOUT_CLASSIFICATION	0.9999990200765355	WITHOUT_CLASSIFICATION	9.799234644816224E-7	DESIGN
// line 803	WITHOUT_CLASSIFICATION	0.9999978141773934	WITHOUT_CLASSIFICATION	2.1858226065193434E-6	DESIGN
// line 806	WITHOUT_CLASSIFICATION	0.999997087002009	WITHOUT_CLASSIFICATION	2.912997991077421E-6	DESIGN
// line 809	WITHOUT_CLASSIFICATION	0.9999992070251165	WITHOUT_CLASSIFICATION	7.929748835500101E-7	DESIGN
// line 815	WITHOUT_CLASSIFICATION	0.9999996234876299	WITHOUT_CLASSIFICATION	3.7651236998930303E-7	DESIGN
// line 818	WITHOUT_CLASSIFICATION	0.9999997089086	WITHOUT_CLASSIFICATION	2.910914000124748E-7	DESIGN
// line 821	WITHOUT_CLASSIFICATION	0.9999997533094209	WITHOUT_CLASSIFICATION	2.466905790405239E-7	DESIGN
// line 824	WITHOUT_CLASSIFICATION	0.9999997071749462	WITHOUT_CLASSIFICATION	2.9282505370617334E-7	DESIGN
// line 830	WITHOUT_CLASSIFICATION	0.9999996178078417	WITHOUT_CLASSIFICATION	3.821921582922033E-7	DESIGN
// line 833	WITHOUT_CLASSIFICATION	0.9999981992677867	WITHOUT_CLASSIFICATION	1.800732213319426E-6	DESIGN
// line 836	WITHOUT_CLASSIFICATION	0.999997170664052	WITHOUT_CLASSIFICATION	2.8293359480011474E-6	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999984265377352	WITHOUT_CLASSIFICATION	1.5734622647266037E-6	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999998180232769	WITHOUT_CLASSIFICATION	1.8197672317568317E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999992145923843	WITHOUT_CLASSIFICATION	7.854076158524711E-7	DESIGN
// line 852	WITHOUT_CLASSIFICATION	0.9999998577143424	WITHOUT_CLASSIFICATION	1.422856575378667E-7	DESIGN
// line 858	WITHOUT_CLASSIFICATION	0.9999993893057106	WITHOUT_CLASSIFICATION	6.106942892839158E-7	DESIGN
// line 861	WITHOUT_CLASSIFICATION	0.9999990944440966	WITHOUT_CLASSIFICATION	9.055559033671858E-7	DESIGN
// line 868	WITHOUT_CLASSIFICATION	0.9999987966331689	WITHOUT_CLASSIFICATION	1.2033668310740991E-6	DESIGN
// line 871	WITHOUT_CLASSIFICATION	0.9999995948239496	WITHOUT_CLASSIFICATION	4.051760502999588E-7	DESIGN
// line 876	WITHOUT_CLASSIFICATION	0.9999987453743494	WITHOUT_CLASSIFICATION	1.2546256505357463E-6	DESIGN
// line 879	WITHOUT_CLASSIFICATION	0.9999993657348424	WITHOUT_CLASSIFICATION	6.342651575659021E-7	DESIGN
// line 883	WITHOUT_CLASSIFICATION	0.9999983758672722	WITHOUT_CLASSIFICATION	1.6241327277933241E-6	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999985305654563	WITHOUT_CLASSIFICATION	1.4694345436230282E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999985298925329	WITHOUT_CLASSIFICATION	1.470107467030628E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999992696411424	WITHOUT_CLASSIFICATION	7.303588576423644E-7	DESIGN
// line 903	WITHOUT_CLASSIFICATION	0.9999973413589425	WITHOUT_CLASSIFICATION	2.658641057644889E-6	DESIGN
// line 907	WITHOUT_CLASSIFICATION	0.9999994666595541	WITHOUT_CLASSIFICATION	5.333404459460715E-7	DESIGN
// line 915	WITHOUT_CLASSIFICATION	0.9999994098306013	WITHOUT_CLASSIFICATION	5.901693986472723E-7	DESIGN
// line 920	WITHOUT_CLASSIFICATION	0.9999998299922511	WITHOUT_CLASSIFICATION	1.7000774891209716E-7	DESIGN
// line 923	WITHOUT_CLASSIFICATION	0.9999990710210622	WITHOUT_CLASSIFICATION	9.289789379135682E-7	DESIGN
// line 926	WITHOUT_CLASSIFICATION	0.9999988666417636	WITHOUT_CLASSIFICATION	1.1333582363529734E-6	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999995614821381	WITHOUT_CLASSIFICATION	4.385178619065474E-7	DESIGN
// line 936	WITHOUT_CLASSIFICATION	0.9999964496760695	WITHOUT_CLASSIFICATION	3.55032393042549E-6	DESIGN
// line 940	WITHOUT_CLASSIFICATION	0.9999996865402173	WITHOUT_CLASSIFICATION	3.1345978267513286E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999990185453026	WITHOUT_CLASSIFICATION	9.814546974448028E-7	DESIGN
// line 948	WITHOUT_CLASSIFICATION	0.9999993686310212	WITHOUT_CLASSIFICATION	6.313689787457495E-7	DESIGN
// line 956	WITHOUT_CLASSIFICATION	0.9999980215259452	WITHOUT_CLASSIFICATION	1.9784740548697668E-6	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999992196039252	WITHOUT_CLASSIFICATION	7.803960747058477E-7	DESIGN
// line 964	WITHOUT_CLASSIFICATION	0.999998445586857	WITHOUT_CLASSIFICATION	1.5544131429696006E-6	DESIGN
// line 967	WITHOUT_CLASSIFICATION	0.999998694703414	WITHOUT_CLASSIFICATION	1.305296585939684E-6	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999998203762647	WITHOUT_CLASSIFICATION	1.7962373536104524E-7	DESIGN
// line 978	WITHOUT_CLASSIFICATION	0.9999995112472032	WITHOUT_CLASSIFICATION	4.887527968638476E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999997684641823	WITHOUT_CLASSIFICATION	2.3153581772057833E-7	DESIGN
// line 984	WITHOUT_CLASSIFICATION	0.9999993700137012	WITHOUT_CLASSIFICATION	6.299862987376558E-7	DESIGN
// line 986	WITHOUT_CLASSIFICATION	0.9999987156260641	WITHOUT_CLASSIFICATION	1.2843739358673507E-6	DESIGN
// line 996	WITHOUT_CLASSIFICATION	0.9999978833767604	WITHOUT_CLASSIFICATION	2.116623239504339E-6	DESIGN
// line 1001	WITHOUT_CLASSIFICATION	0.9999979659133569	WITHOUT_CLASSIFICATION	2.034086643095659E-6	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999972620850618	WITHOUT_CLASSIFICATION	2.7379149383194105E-6	DESIGN
// line 1008	WITHOUT_CLASSIFICATION	0.9999990708994044	WITHOUT_CLASSIFICATION	9.291005956014642E-7	DESIGN
// line 1014	WITHOUT_CLASSIFICATION	0.9999948281932413	WITHOUT_CLASSIFICATION	5.171806758822126E-6	DESIGN
// line 1029	WITHOUT_CLASSIFICATION	0.9999989216887522	WITHOUT_CLASSIFICATION	1.0783112478334628E-6	DESIGN
// line 1032	WITHOUT_CLASSIFICATION	0.9999988911856984	WITHOUT_CLASSIFICATION	1.1088143016304995E-6	DESIGN
// line 1034	WITHOUT_CLASSIFICATION	0.9999960432372058	WITHOUT_CLASSIFICATION	3.956762794155034E-6	DESIGN
// line 1045	WITHOUT_CLASSIFICATION	0.9999981081935237	WITHOUT_CLASSIFICATION	1.8918064763582048E-6	DESIGN
// line 1048	WITHOUT_CLASSIFICATION	0.9999984814735882	WITHOUT_CLASSIFICATION	1.5185264118537249E-6	DESIGN
// line 1051	WITHOUT_CLASSIFICATION	0.9999983216861933	WITHOUT_CLASSIFICATION	1.6783138066619863E-6	DESIGN
// line 1058	WITHOUT_CLASSIFICATION	0.9999990675758071	WITHOUT_CLASSIFICATION	9.324241928999043E-7	DESIGN
// line 1070	WITHOUT_CLASSIFICATION	0.9999994664936248	WITHOUT_CLASSIFICATION	5.3350637528796E-7	DESIGN
// line 1073	WITHOUT_CLASSIFICATION	0.9999972017180537	WITHOUT_CLASSIFICATION	2.798281946295955E-6	DESIGN
// line 1076	WITHOUT_CLASSIFICATION	0.9999971961974707	WITHOUT_CLASSIFICATION	2.8038025293179867E-6	DESIGN
// line 1079	WITHOUT_CLASSIFICATION	0.999998585797268	WITHOUT_CLASSIFICATION	1.4142027320038524E-6	DESIGN
// line 1082	WITHOUT_CLASSIFICATION	0.9999997483606019	WITHOUT_CLASSIFICATION	2.516393981255767E-7	DESIGN
// line 1089	WITHOUT_CLASSIFICATION	0.999998814251238	WITHOUT_CLASSIFICATION	1.1857487619636388E-6	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999983930125846	WITHOUT_CLASSIFICATION	1.6069874153859038E-6	DESIGN
// line 1100	WITHOUT_CLASSIFICATION	0.9999998127472028	WITHOUT_CLASSIFICATION	1.8725279704279054E-7	DESIGN
// line 1103	WITHOUT_CLASSIFICATION	0.9999985301846988	WITHOUT_CLASSIFICATION	1.469815301307644E-6	DESIGN
// line 1107	WITHOUT_CLASSIFICATION	0.999999668790823	WITHOUT_CLASSIFICATION	3.312091769640834E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999979554759157	WITHOUT_CLASSIFICATION	2.0445240843188065E-6	DESIGN
// line 1113	WITHOUT_CLASSIFICATION	0.9999978391013329	WITHOUT_CLASSIFICATION	2.1608986670643257E-6	DESIGN
// line 1115	WITHOUT_CLASSIFICATION	0.9999991308609796	WITHOUT_CLASSIFICATION	8.69139020387545E-7	DESIGN
// line 1119	WITHOUT_CLASSIFICATION	0.9999991323923744	WITHOUT_CLASSIFICATION	8.676076255374555E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.999999520644435	WITHOUT_CLASSIFICATION	4.793555650483767E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999977515284957	WITHOUT_CLASSIFICATION	2.248471504252084E-6	DESIGN
// line 1135	WITHOUT_CLASSIFICATION	0.9999986982619741	WITHOUT_CLASSIFICATION	1.3017380259249432E-6	DESIGN
// line 1137	WITHOUT_CLASSIFICATION	0.9999986475878292	WITHOUT_CLASSIFICATION	1.3524121708446332E-6	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999996827980728	WITHOUT_CLASSIFICATION	3.1720192723666086E-7	DESIGN
// line 1151	WITHOUT_CLASSIFICATION	0.9999990363050918	WITHOUT_CLASSIFICATION	9.636949081499502E-7	DESIGN
// line 1154	WITHOUT_CLASSIFICATION	0.9999991430352065	WITHOUT_CLASSIFICATION	8.56964793375145E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999994587656318	WITHOUT_CLASSIFICATION	5.412343682934388E-7	DESIGN
// line 1164	WITHOUT_CLASSIFICATION	0.9999981678282266	WITHOUT_CLASSIFICATION	1.8321717734174602E-6	DESIGN
// line 1175	WITHOUT_CLASSIFICATION	0.9999994428611448	WITHOUT_CLASSIFICATION	5.571388551523329E-7	DESIGN
// line 1178	WITHOUT_CLASSIFICATION	0.9999995763811792	WITHOUT_CLASSIFICATION	4.236188208286725E-7	DESIGN
// line 1187	WITHOUT_CLASSIFICATION	0.9999996512178203	WITHOUT_CLASSIFICATION	3.4878217970228994E-7	DESIGN
// line 1189	WITHOUT_CLASSIFICATION	0.9999995696944464	WITHOUT_CLASSIFICATION	4.303055536439628E-7	DESIGN
// line 1193	WITHOUT_CLASSIFICATION	0.999998301405099	WITHOUT_CLASSIFICATION	1.6985949009706537E-6	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999995037803721	WITHOUT_CLASSIFICATION	4.962196280426257E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999997426852041	WITHOUT_CLASSIFICATION	2.573147958522633E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.999999889756542	WITHOUT_CLASSIFICATION	1.1024345811343432E-7	DESIGN
// line 1214	WITHOUT_CLASSIFICATION	0.9999994080406368	WITHOUT_CLASSIFICATION	5.919593632270737E-7	DESIGN
// line 1234	WITHOUT_CLASSIFICATION	0.9999994457171021	WITHOUT_CLASSIFICATION	5.542828980216295E-7	DESIGN
// line 1239	WITHOUT_CLASSIFICATION	0.9999991121456425	WITHOUT_CLASSIFICATION	8.878543574441966E-7	DESIGN
// line 1243	WITHOUT_CLASSIFICATION	0.9999990643286158	WITHOUT_CLASSIFICATION	9.356713841502668E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999996084301102	WITHOUT_CLASSIFICATION	3.9156988980470584E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999995888480644	WITHOUT_CLASSIFICATION	4.111519355880339E-7	DESIGN
// line 1263	WITHOUT_CLASSIFICATION	0.9999978754780914	WITHOUT_CLASSIFICATION	2.1245219085746585E-6	DESIGN
// line 1269	WITHOUT_CLASSIFICATION	0.999999151568012	WITHOUT_CLASSIFICATION	8.484319879760664E-7	DESIGN
// line 1280	WITHOUT_CLASSIFICATION	0.999999888983667	WITHOUT_CLASSIFICATION	1.1101633292072393E-7	DESIGN
// line 1283	WITHOUT_CLASSIFICATION	0.9999993586688659	WITHOUT_CLASSIFICATION	6.413311341348247E-7	DESIGN
// line 1290	WITHOUT_CLASSIFICATION	0.9999998577378765	WITHOUT_CLASSIFICATION	1.4226212358461643E-7	DESIGN
// line 1296	WITHOUT_CLASSIFICATION	0.9999991336313767	WITHOUT_CLASSIFICATION	8.663686232929701E-7	DESIGN
// line 1299	WITHOUT_CLASSIFICATION	0.9999995695826189	WITHOUT_CLASSIFICATION	4.304173810179894E-7	DESIGN
// line 1302	WITHOUT_CLASSIFICATION	0.9999995816364516	WITHOUT_CLASSIFICATION	4.1836354845690953E-7	DESIGN
// line 1309	WITHOUT_CLASSIFICATION	0.9999980562727495	WITHOUT_CLASSIFICATION	1.9437272504964444E-6	DESIGN
// line 1313	WITHOUT_CLASSIFICATION	0.9999970415783105	WITHOUT_CLASSIFICATION	2.9584216895111587E-6	DESIGN
// line 1315	WITHOUT_CLASSIFICATION	0.9999978451470288	WITHOUT_CLASSIFICATION	2.1548529711546653E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999995421454239	WITHOUT_CLASSIFICATION	4.5785457609086913E-7	DESIGN
// line 1328	WITHOUT_CLASSIFICATION	0.9999992694958867	WITHOUT_CLASSIFICATION	7.305041132870586E-7	DESIGN
// line 1335	WITHOUT_CLASSIFICATION	0.9999981613612374	WITHOUT_CLASSIFICATION	1.8386387626986407E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.999998656653969	WITHOUT_CLASSIFICATION	1.343346030918257E-6	DESIGN
// line 1352	WITHOUT_CLASSIFICATION	0.9999995900654788	WITHOUT_CLASSIFICATION	4.0993452118970193E-7	DESIGN
// line 1358	WITHOUT_CLASSIFICATION	0.9999988407084178	WITHOUT_CLASSIFICATION	1.159291582246356E-6	DESIGN
// line 1374	WITHOUT_CLASSIFICATION	0.9999983292946197	WITHOUT_CLASSIFICATION	1.6707053802256913E-6	DESIGN
// line 1381	WITHOUT_CLASSIFICATION	0.9999977677451515	WITHOUT_CLASSIFICATION	2.2322548485978336E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999986709711158	WITHOUT_CLASSIFICATION	1.3290288841386683E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999994538041174	WITHOUT_CLASSIFICATION	5.461958826914523E-7	DESIGN
// line 1415	WITHOUT_CLASSIFICATION	0.999998762211007	WITHOUT_CLASSIFICATION	1.2377889928891283E-6	DESIGN
// line 1431	WITHOUT_CLASSIFICATION	0.9999968639939523	WITHOUT_CLASSIFICATION	3.1360060478671154E-6	DESIGN
// line 1434	WITHOUT_CLASSIFICATION	0.9999978759612417	WITHOUT_CLASSIFICATION	2.1240387582494073E-6	DESIGN
// line 1440	WITHOUT_CLASSIFICATION	0.9999995635167402	WITHOUT_CLASSIFICATION	4.3648325973040325E-7	DESIGN
// line 1443	WITHOUT_CLASSIFICATION	0.9999971334982779	WITHOUT_CLASSIFICATION	2.8665017221712075E-6	DESIGN
// line 1453	WITHOUT_CLASSIFICATION	0.9999980714164206	WITHOUT_CLASSIFICATION	1.928583579446565E-6	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999972579444125	WITHOUT_CLASSIFICATION	2.7420555875734755E-6	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999995663416221	WITHOUT_CLASSIFICATION	4.3365837790783246E-7	DESIGN
// line 1465	WITHOUT_CLASSIFICATION	0.9999982123340639	WITHOUT_CLASSIFICATION	1.7876659359977233E-6	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.999999493996834	WITHOUT_CLASSIFICATION	5.060031660017914E-7	DESIGN
// line 1477	WITHOUT_CLASSIFICATION	0.9999987245155423	WITHOUT_CLASSIFICATION	1.275484457757975E-6	DESIGN
// line 1480	WITHOUT_CLASSIFICATION	0.9999996491352935	WITHOUT_CLASSIFICATION	3.5086470647482605E-7	DESIGN
// line 1485	WITHOUT_CLASSIFICATION	0.999999300587061	WITHOUT_CLASSIFICATION	6.994129389833366E-7	DESIGN
// line 1488	WITHOUT_CLASSIFICATION	0.999999178748874	WITHOUT_CLASSIFICATION	8.212511259562424E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999973361062748	WITHOUT_CLASSIFICATION	2.6638937252314636E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.999999775969755	WITHOUT_CLASSIFICATION	2.240302450363965E-7	DESIGN
// line 1510	WITHOUT_CLASSIFICATION	0.9999997946473664	WITHOUT_CLASSIFICATION	2.053526336474644E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999978708391529	WITHOUT_CLASSIFICATION	2.1291608470937892E-6	DESIGN
// line 1516	WITHOUT_CLASSIFICATION	0.9999974437988696	WITHOUT_CLASSIFICATION	2.556201130440742E-6	DESIGN
// line 1533	WITHOUT_CLASSIFICATION	0.9999979147995877	WITHOUT_CLASSIFICATION	2.0852004123677205E-6	DESIGN
// line 1550	WITHOUT_CLASSIFICATION	0.9999996173999168	WITHOUT_CLASSIFICATION	3.826000831982906E-7	DESIGN
// line 1553	WITHOUT_CLASSIFICATION	0.9999980790142106	WITHOUT_CLASSIFICATION	1.9209857894115254E-6	DESIGN
// line 1556	WITHOUT_CLASSIFICATION	0.9999973810987022	WITHOUT_CLASSIFICATION	2.6189012977401895E-6	DESIGN
// line 1565	WITHOUT_CLASSIFICATION	0.9999979497182413	WITHOUT_CLASSIFICATION	2.0502817586983306E-6	DESIGN
// line 1568	WITHOUT_CLASSIFICATION	0.9999987028023767	WITHOUT_CLASSIFICATION	1.297197623244983E-6	DESIGN
// line 1571	WITHOUT_CLASSIFICATION	0.9999989424892509	WITHOUT_CLASSIFICATION	1.0575107489881083E-6	DESIGN
// line 1574	WITHOUT_CLASSIFICATION	0.9999991948011931	WITHOUT_CLASSIFICATION	8.051988067789502E-7	DESIGN
// line 1577	WITHOUT_CLASSIFICATION	0.999999105007624	WITHOUT_CLASSIFICATION	8.94992376086234E-7	DESIGN
// line 1587	WITHOUT_CLASSIFICATION	0.9999994294300919	WITHOUT_CLASSIFICATION	5.705699081003887E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999988665694894	WITHOUT_CLASSIFICATION	1.1334305105707606E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.999999248589555	WITHOUT_CLASSIFICATION	7.51410445022697E-7	DESIGN
// line 1600	WITHOUT_CLASSIFICATION	0.9999983256730118	WITHOUT_CLASSIFICATION	1.6743269881216166E-6	DESIGN
// line 1609	WITHOUT_CLASSIFICATION	0.9999956777343011	WITHOUT_CLASSIFICATION	4.322265698957219E-6	DESIGN
// line 1623	WITHOUT_CLASSIFICATION	0.9999970209856935	WITHOUT_CLASSIFICATION	2.9790143063904794E-6	DESIGN
// line 1626	WITHOUT_CLASSIFICATION	0.9999977415165409	WITHOUT_CLASSIFICATION	2.2584834592355894E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.99999854983862	WITHOUT_CLASSIFICATION	1.4501613799467299E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999979404480115	WITHOUT_CLASSIFICATION	2.0595519885872247E-6	DESIGN
// line 1638	WITHOUT_CLASSIFICATION	0.9999925259401835	WITHOUT_CLASSIFICATION	7.4740598163956805E-6	DESIGN
// line 1641	WITHOUT_CLASSIFICATION	0.9999955495134517	WITHOUT_CLASSIFICATION	4.450486548294207E-6	DESIGN
// line 1644	WITHOUT_CLASSIFICATION	0.999996808091141	WITHOUT_CLASSIFICATION	3.191908859067128E-6	DESIGN
// line 1649	WITHOUT_CLASSIFICATION	0.999996799865969	WITHOUT_CLASSIFICATION	3.2001340310484833E-6	DESIGN
// line 1655	WITHOUT_CLASSIFICATION	0.9999971548356903	WITHOUT_CLASSIFICATION	2.8451643096977086E-6	DESIGN
// line 1658	WITHOUT_CLASSIFICATION	0.9999980446960884	WITHOUT_CLASSIFICATION	1.955303911533774E-6	DESIGN
// line 1661	WITHOUT_CLASSIFICATION	0.9999958169200556	WITHOUT_CLASSIFICATION	4.1830799444575815E-6	DESIGN
// line 1672	WITHOUT_CLASSIFICATION	0.9999993734187802	WITHOUT_CLASSIFICATION	6.265812198578495E-7	DESIGN
// line 1677	WITHOUT_CLASSIFICATION	0.999997239138143	WITHOUT_CLASSIFICATION	2.7608618570604935E-6	DESIGN
// line 1687	WITHOUT_CLASSIFICATION	0.9999982886247268	WITHOUT_CLASSIFICATION	1.7113752731364954E-6	DESIGN
// line 1694	WITHOUT_CLASSIFICATION	0.9999967856916842	WITHOUT_CLASSIFICATION	3.214308315815492E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999994618051555	WITHOUT_CLASSIFICATION	5.381948443933612E-7	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999994767436454	WITHOUT_CLASSIFICATION	5.232563546029971E-7	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999996628269069	WITHOUT_CLASSIFICATION	3.371730930415544E-7	DESIGN
// line 1733	WITHOUT_CLASSIFICATION	0.9999978585133293	WITHOUT_CLASSIFICATION	2.141486670596009E-6	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999998045203297	WITHOUT_CLASSIFICATION	1.9547967041132642E-7	DESIGN
// line 1745	WITHOUT_CLASSIFICATION	0.9999993069414078	WITHOUT_CLASSIFICATION	6.930585920835E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999991361857716	WITHOUT_CLASSIFICATION	8.638142283628817E-7	DESIGN
// line 1757	WITHOUT_CLASSIFICATION	0.99999916214986	WITHOUT_CLASSIFICATION	8.378501401288953E-7	DESIGN
// line 1769	WITHOUT_CLASSIFICATION	0.9999983951047855	WITHOUT_CLASSIFICATION	1.6048952144211542E-6	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999997590813509	WITHOUT_CLASSIFICATION	2.409186491756459E-7	DESIGN
// line 1775	WITHOUT_CLASSIFICATION	0.999999076103812	WITHOUT_CLASSIFICATION	9.238961879988107E-7	DESIGN
// line 1784	WITHOUT_CLASSIFICATION	0.9999993372783813	WITHOUT_CLASSIFICATION	6.627216187053354E-7	DESIGN
// line 1808	WITHOUT_CLASSIFICATION	0.9999994662434472	WITHOUT_CLASSIFICATION	5.337565528199839E-7	DESIGN
// line 1814	WITHOUT_CLASSIFICATION	0.9999993147908871	WITHOUT_CLASSIFICATION	6.852091128609527E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999993636015029	WITHOUT_CLASSIFICATION	6.363984970953211E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999998819304329	WITHOUT_CLASSIFICATION	1.1806956706407724E-7	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999896065643634	WITHOUT_CLASSIFICATION	1.0393435636476019E-5	DESIGN
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9921898809827043	WITHOUT_CLASSIFICATION	0.007810119017295623	DESIGN
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999953583011297	WITHOUT_CLASSIFICATION	4.6416988701679026E-6	DESIGN
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999843334018197	WITHOUT_CLASSIFICATION	1.5666598180380916E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999978553050942	WITHOUT_CLASSIFICATION	2.144694905817302E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9544916329851041	WITHOUT_CLASSIFICATION	0.04550836701489587	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9966891217893471	WITHOUT_CLASSIFICATION	0.00331087821065296	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9951408274665234	WITHOUT_CLASSIFICATION	0.0048591725334766545	DESIGN
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999954965498027	WITHOUT_CLASSIFICATION	4.50345019737134E-6	DESIGN
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9994446572115004	WITHOUT_CLASSIFICATION	5.553427884994685E-4	DESIGN
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9993648976317517	WITHOUT_CLASSIFICATION	6.351023682482344E-4	DESIGN
// line 529	WITHOUT_CLASSIFICATION	0.9999990612047694	WITHOUT_CLASSIFICATION	9.387952304892859E-7	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999981096391919	WITHOUT_CLASSIFICATION	1.8903608080451401E-6	DESIGN
/* XXX*/	WITHOUT_CLASSIFICATION	0.9840623275344941	WITHOUT_CLASSIFICATION	0.015937672465505884	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999992255502279	WITHOUT_CLASSIFICATION	7.744497721398308E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999910010159595	WITHOUT_CLASSIFICATION	8.998984040532188E-6	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9993608159214524	WITHOUT_CLASSIFICATION	6.391840785475223E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999826910598849	WITHOUT_CLASSIFICATION	1.7308940115143035E-5	DESIGN
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.99999999995745	WITHOUT_CLASSIFICATION	4.254994020390107E-11	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999998730633432	WITHOUT_CLASSIFICATION	1.2693665680106097E-6	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999948359694	WITHOUT_CLASSIFICATION	5.164030609674855E-9	DESIGN
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999998370905676	WITHOUT_CLASSIFICATION	1.6290943231117412E-7	DESIGN
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999762642641218	WITHOUT_CLASSIFICATION	2.3735735878264434E-5	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999997131601894	WITHOUT_CLASSIFICATION	2.8683981053528956E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999997131601894	WITHOUT_CLASSIFICATION	2.8683981053528956E-7	DESIGN
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9988262330675696	WITHOUT_CLASSIFICATION	0.0011737669324303655	DESIGN
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9953346600369956	WITHOUT_CLASSIFICATION	0.004665339963004374	DESIGN
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999555502031352	WITHOUT_CLASSIFICATION	4.444979686491469E-5	DESIGN
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.999436403398108	WITHOUT_CLASSIFICATION	5.635966018919722E-4	DESIGN
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999291328474402	WITHOUT_CLASSIFICATION	7.086715255981497E-5	DESIGN
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.999999923195145	WITHOUT_CLASSIFICATION	7.680485503314827E-8	DESIGN
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999875681096103	WITHOUT_CLASSIFICATION	1.243189038963927E-5	DESIGN
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999999402189944	WITHOUT_CLASSIFICATION	5.978100555099308E-8	DESIGN
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.5213682600210663	WITHOUT_CLASSIFICATION	0.47863173997893366	DESIGN
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999999890794947	WITHOUT_CLASSIFICATION	1.0920505253417302E-8	DESIGN
// Parser states:	WITHOUT_CLASSIFICATION	0.9999995752393332	WITHOUT_CLASSIFICATION	4.247606667852926E-7	DESIGN
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999996036122359	WITHOUT_CLASSIFICATION	3.963877640817043E-7	DESIGN
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999865476713257	WITHOUT_CLASSIFICATION	1.3452328674250855E-5	DESIGN
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999997199923316	WITHOUT_CLASSIFICATION	2.8000766845553547E-7	DESIGN
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999997461466417	WITHOUT_CLASSIFICATION	2.5385335834384796E-7	DESIGN
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999999815336182	WITHOUT_CLASSIFICATION	1.8466381777964743E-8	DESIGN
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999999845598015	WITHOUT_CLASSIFICATION	1.5440198455220713E-8	DESIGN
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999147958986521	WITHOUT_CLASSIFICATION	8.520410134786716E-5	DESIGN
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.993796919921514	WITHOUT_CLASSIFICATION	0.006203080078486035	DESIGN
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999967052942984	WITHOUT_CLASSIFICATION	3.2947057015228415E-6	DESIGN
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999999983326	WITHOUT_CLASSIFICATION	1.6674562598612855E-12	DESIGN
// Node	WITHOUT_CLASSIFICATION	0.9999820555988577	WITHOUT_CLASSIFICATION	1.794440114242364E-5	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9919904807590783	DESIGN	0.008009519240921751	WITHOUT_CLASSIFICATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.999999406232331	WITHOUT_CLASSIFICATION	5.937676691178794E-7	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9919904807590783	DESIGN	0.008009519240921751	WITHOUT_CLASSIFICATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999996648092259	WITHOUT_CLASSIFICATION	3.351907741509765E-7	DESIGN
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999965136669683	WITHOUT_CLASSIFICATION	3.4863330318478805E-6	DESIGN
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.6424355583586095	WITHOUT_CLASSIFICATION	0.35756444164139045	DESIGN
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999801396304285	WITHOUT_CLASSIFICATION	1.98603695714706E-5	DESIGN
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999996303482878	WITHOUT_CLASSIFICATION	3.6965171218749767E-7	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999988510519842	WITHOUT_CLASSIFICATION	1.1489480157921024E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999988510519842	WITHOUT_CLASSIFICATION	1.1489480157921024E-6	DESIGN
// foo()	WITHOUT_CLASSIFICATION	0.9999988510519842	WITHOUT_CLASSIFICATION	1.1489480157921024E-6	DESIGN
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999594441655864	WITHOUT_CLASSIFICATION	4.0555834413632055E-5	DESIGN
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999970936094114	WITHOUT_CLASSIFICATION	2.906390588754606E-6	DESIGN
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999153380593092	WITHOUT_CLASSIFICATION	8.46619406907947E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999501570686385	WITHOUT_CLASSIFICATION	4.984293136148132E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999501570686385	WITHOUT_CLASSIFICATION	4.984293136148132E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999501570686385	WITHOUT_CLASSIFICATION	4.984293136148132E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999501570686385	WITHOUT_CLASSIFICATION	4.984293136148132E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999501570686385	WITHOUT_CLASSIFICATION	4.984293136148132E-5	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999501570686385	WITHOUT_CLASSIFICATION	4.984293136148132E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999739267833	WITHOUT_CLASSIFICATION	2.607321670007027E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999739267833	WITHOUT_CLASSIFICATION	2.607321670007027E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999739267833	WITHOUT_CLASSIFICATION	2.607321670007027E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999739267833	WITHOUT_CLASSIFICATION	2.607321670007027E-5	DESIGN
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999739267833	WITHOUT_CLASSIFICATION	2.607321670007027E-5	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998584020897426	WITHOUT_CLASSIFICATION	1.415979102574129E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998584020897426	WITHOUT_CLASSIFICATION	1.415979102574129E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998584020897426	WITHOUT_CLASSIFICATION	1.415979102574129E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998584020897426	WITHOUT_CLASSIFICATION	1.415979102574129E-4	DESIGN
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998584020897426	WITHOUT_CLASSIFICATION	1.415979102574129E-4	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999535592169055	WITHOUT_CLASSIFICATION	4.644078309447932E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999535592169055	WITHOUT_CLASSIFICATION	4.644078309447932E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999535592169055	WITHOUT_CLASSIFICATION	4.644078309447932E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999535592169055	WITHOUT_CLASSIFICATION	4.644078309447932E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999535592169055	WITHOUT_CLASSIFICATION	4.644078309447932E-5	DESIGN
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999535592169055	WITHOUT_CLASSIFICATION	4.644078309447932E-5	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9994491887144248	WITHOUT_CLASSIFICATION	5.508112855752494E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9994491887144248	WITHOUT_CLASSIFICATION	5.508112855752494E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9994491887144248	WITHOUT_CLASSIFICATION	5.508112855752494E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9994491887144248	WITHOUT_CLASSIFICATION	5.508112855752494E-4	DESIGN
//yySindex 945	WITHOUT_CLASSIFICATION	0.9994491887144248	WITHOUT_CLASSIFICATION	5.508112855752494E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993979772593397	WITHOUT_CLASSIFICATION	6.020227406603658E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993979772593397	WITHOUT_CLASSIFICATION	6.020227406603658E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993979772593397	WITHOUT_CLASSIFICATION	6.020227406603658E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993979772593397	WITHOUT_CLASSIFICATION	6.020227406603658E-4	DESIGN
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993979772593397	WITHOUT_CLASSIFICATION	6.020227406603658E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998483245898487	WITHOUT_CLASSIFICATION	1.5167541015127347E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998483245898487	WITHOUT_CLASSIFICATION	1.5167541015127347E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998483245898487	WITHOUT_CLASSIFICATION	1.5167541015127347E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998483245898487	WITHOUT_CLASSIFICATION	1.5167541015127347E-4	DESIGN
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998483245898487	WITHOUT_CLASSIFICATION	1.5167541015127347E-4	DESIGN
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999936927957536	WITHOUT_CLASSIFICATION	6.307204246396712E-6	DESIGN
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999853310777319	WITHOUT_CLASSIFICATION	1.4668922268118476E-5	DESIGN
// shift to yyN	WITHOUT_CLASSIFICATION	0.9956853498565754	WITHOUT_CLASSIFICATION	0.004314650143424516	DESIGN
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9986928128598579	WITHOUT_CLASSIFICATION	0.0013071871401420909	DESIGN
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998242435873369	WITHOUT_CLASSIFICATION	1.7575641266317867E-4	DESIGN
// line 321	WITHOUT_CLASSIFICATION	0.999999022697613	WITHOUT_CLASSIFICATION	9.773023869591834E-7	DESIGN
// line 351	WITHOUT_CLASSIFICATION	0.9999989935671642	WITHOUT_CLASSIFICATION	1.0064328359135824E-6	DESIGN
// line 382	WITHOUT_CLASSIFICATION	0.9999996682589426	WITHOUT_CLASSIFICATION	3.3174105731735244E-7	DESIGN
// line 417	WITHOUT_CLASSIFICATION	0.9999995435550624	WITHOUT_CLASSIFICATION	4.564449375641994E-7	DESIGN
// line 420	WITHOUT_CLASSIFICATION	0.9999998137852364	WITHOUT_CLASSIFICATION	1.8621476360164437E-7	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999989563358836	WITHOUT_CLASSIFICATION	1.0436641164322997E-6	DESIGN
// line 426	WITHOUT_CLASSIFICATION	0.9999987549791959	WITHOUT_CLASSIFICATION	1.2450208042156019E-6	DESIGN
// line 280	WITHOUT_CLASSIFICATION	0.9999999337954788	WITHOUT_CLASSIFICATION	6.620452113279768E-8	DESIGN
// line 283	WITHOUT_CLASSIFICATION	0.9999996166961092	WITHOUT_CLASSIFICATION	3.833038908886627E-7	DESIGN
// line 296	WITHOUT_CLASSIFICATION	0.9999994579318883	WITHOUT_CLASSIFICATION	5.420681117465729E-7	DESIGN
// line 324	WITHOUT_CLASSIFICATION	0.9999988364867695	WITHOUT_CLASSIFICATION	1.1635132305406574E-6	DESIGN
// line 327	WITHOUT_CLASSIFICATION	0.9999990893575834	WITHOUT_CLASSIFICATION	9.10642416525498E-7	DESIGN
// line 331	WITHOUT_CLASSIFICATION	0.9999979742081267	WITHOUT_CLASSIFICATION	2.025791873200674E-6	DESIGN
// line 333	WITHOUT_CLASSIFICATION	0.9999969566713771	WITHOUT_CLASSIFICATION	3.043328622834077E-6	DESIGN
// line 336	WITHOUT_CLASSIFICATION	0.9999949103356839	WITHOUT_CLASSIFICATION	5.089664316112261E-6	DESIGN
// line 342	WITHOUT_CLASSIFICATION	0.9999995311384738	WITHOUT_CLASSIFICATION	4.6886152626866266E-7	DESIGN
// line 345	WITHOUT_CLASSIFICATION	0.9999984140200043	WITHOUT_CLASSIFICATION	1.5859799956393819E-6	DESIGN
// line 348	WITHOUT_CLASSIFICATION	0.9999986638791	WITHOUT_CLASSIFICATION	1.3361209000214126E-6	DESIGN
// line 354	WITHOUT_CLASSIFICATION	0.9999982330088	WITHOUT_CLASSIFICATION	1.766991200013216E-6	DESIGN
// line 368	WITHOUT_CLASSIFICATION	0.9999978305485522	WITHOUT_CLASSIFICATION	2.169451447716604E-6	DESIGN
// line 377	WITHOUT_CLASSIFICATION	0.9999981505409552	WITHOUT_CLASSIFICATION	1.8494590449092783E-6	DESIGN
// line 388	WITHOUT_CLASSIFICATION	0.9999984951776913	WITHOUT_CLASSIFICATION	1.5048223086203818E-6	DESIGN
// line 392	WITHOUT_CLASSIFICATION	0.9999994571927115	WITHOUT_CLASSIFICATION	5.428072883191152E-7	DESIGN
// line 397	WITHOUT_CLASSIFICATION	0.9999981150074436	WITHOUT_CLASSIFICATION	1.8849925563632508E-6	DESIGN
// line 429	WITHOUT_CLASSIFICATION	0.9999994957737004	WITHOUT_CLASSIFICATION	5.042262996712985E-7	DESIGN
// line 432	WITHOUT_CLASSIFICATION	0.999999548677838	WITHOUT_CLASSIFICATION	4.513221619743484E-7	DESIGN
// line 436	WITHOUT_CLASSIFICATION	0.999996342093095	WITHOUT_CLASSIFICATION	3.6579069049377017E-6	DESIGN
// line 445	WITHOUT_CLASSIFICATION	0.9999991590503705	WITHOUT_CLASSIFICATION	8.409496294281785E-7	DESIGN
// line 448	WITHOUT_CLASSIFICATION	0.9999993095118318	WITHOUT_CLASSIFICATION	6.90488168080413E-7	DESIGN
// line 454	WITHOUT_CLASSIFICATION	0.9999989614146731	WITHOUT_CLASSIFICATION	1.0385853268657922E-6	DESIGN
// line 459	WITHOUT_CLASSIFICATION	0.9999987842036326	WITHOUT_CLASSIFICATION	1.2157963673864003E-6	DESIGN
// line 466	WITHOUT_CLASSIFICATION	0.9999980345450398	WITHOUT_CLASSIFICATION	1.9654549602182827E-6	DESIGN
// line 469	WITHOUT_CLASSIFICATION	0.9999983906544121	WITHOUT_CLASSIFICATION	1.609345587875511E-6	DESIGN
// line 478	WITHOUT_CLASSIFICATION	0.9999994024017458	WITHOUT_CLASSIFICATION	5.975982542060984E-7	DESIGN
// line 481	WITHOUT_CLASSIFICATION	0.9999995149635477	WITHOUT_CLASSIFICATION	4.850364523632374E-7	DESIGN
// line 488	WITHOUT_CLASSIFICATION	0.9999993773213988	WITHOUT_CLASSIFICATION	6.226786012041624E-7	DESIGN
// line 494	WITHOUT_CLASSIFICATION	0.9999990103035103	WITHOUT_CLASSIFICATION	9.896964895983222E-7	DESIGN
// line 497	WITHOUT_CLASSIFICATION	0.9999992428716729	WITHOUT_CLASSIFICATION	7.571283271306826E-7	DESIGN
// line 503	WITHOUT_CLASSIFICATION	0.999995458393066	WITHOUT_CLASSIFICATION	4.541606933953406E-6	DESIGN
// line 506	WITHOUT_CLASSIFICATION	0.9999939749622373	WITHOUT_CLASSIFICATION	6.025037762781145E-6	DESIGN
// line 509	WITHOUT_CLASSIFICATION	0.9999983961200203	WITHOUT_CLASSIFICATION	1.6038799797333176E-6	DESIGN
// line 512	WITHOUT_CLASSIFICATION	0.99999984295684	WITHOUT_CLASSIFICATION	1.5704316000110536E-7	DESIGN
// line 521	WITHOUT_CLASSIFICATION	0.9999993688558918	WITHOUT_CLASSIFICATION	6.311441081587463E-7	DESIGN
// line 526	WITHOUT_CLASSIFICATION	0.9999979711515498	WITHOUT_CLASSIFICATION	2.0288484501670905E-6	DESIGN
// line 540	WITHOUT_CLASSIFICATION	0.999999376200732	WITHOUT_CLASSIFICATION	6.237992680059172E-7	DESIGN
// line 543	WITHOUT_CLASSIFICATION	0.9999959061090844	WITHOUT_CLASSIFICATION	4.093890915635686E-6	DESIGN
// line 546	WITHOUT_CLASSIFICATION	0.9999961007831839	WITHOUT_CLASSIFICATION	3.899216816041779E-6	DESIGN
// line 566	WITHOUT_CLASSIFICATION	0.999995036027338	WITHOUT_CLASSIFICATION	4.963972662059774E-6	DESIGN
// line 610	WITHOUT_CLASSIFICATION	0.9999997845426553	WITHOUT_CLASSIFICATION	2.154573448477346E-7	DESIGN
// line 672	WITHOUT_CLASSIFICATION	0.9999996593949215	WITHOUT_CLASSIFICATION	3.4060507842544074E-7	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.99999861606749	WITHOUT_CLASSIFICATION	1.3839325100635598E-6	DESIGN
// line 696	WITHOUT_CLASSIFICATION	0.9999977291484599	WITHOUT_CLASSIFICATION	2.2708515402031106E-6	DESIGN
// line 772	WITHOUT_CLASSIFICATION	0.9999997659622	WITHOUT_CLASSIFICATION	2.3403780002229156E-7	DESIGN
// line 782	WITHOUT_CLASSIFICATION	0.9999998659328788	WITHOUT_CLASSIFICATION	1.3406712112715849E-7	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999994823892087	WITHOUT_CLASSIFICATION	5.176107913531336E-7	DESIGN
// line 788	WITHOUT_CLASSIFICATION	0.9999994021670998	WITHOUT_CLASSIFICATION	5.978329000627844E-7	DESIGN
// line 791	WITHOUT_CLASSIFICATION	0.9999992163182139	WITHOUT_CLASSIFICATION	7.836817860629664E-7	DESIGN
// line 534	WITHOUT_CLASSIFICATION	0.9999977579069532	WITHOUT_CLASSIFICATION	2.2420930467178465E-6	DESIGN
// line 549	WITHOUT_CLASSIFICATION	0.999998045766083	WITHOUT_CLASSIFICATION	1.9542339169097393E-6	DESIGN
// line 552	WITHOUT_CLASSIFICATION	0.9999996202595215	WITHOUT_CLASSIFICATION	3.79740478543436E-7	DESIGN
// line 558	WITHOUT_CLASSIFICATION	0.9999989295374575	WITHOUT_CLASSIFICATION	1.070462542493788E-6	DESIGN
// line 561	WITHOUT_CLASSIFICATION	0.9999971691941013	WITHOUT_CLASSIFICATION	2.8308058985811015E-6	DESIGN
// line 571	WITHOUT_CLASSIFICATION	0.9999990847590955	WITHOUT_CLASSIFICATION	9.152409045359516E-7	DESIGN
// line 574	WITHOUT_CLASSIFICATION	0.9999987519279856	WITHOUT_CLASSIFICATION	1.2480720144317698E-6	DESIGN
// line 579	WITHOUT_CLASSIFICATION	0.9999985672764994	WITHOUT_CLASSIFICATION	1.4327235005184875E-6	DESIGN
// line 586	WITHOUT_CLASSIFICATION	0.9999975743593745	WITHOUT_CLASSIFICATION	2.42564062550478E-6	DESIGN
// line 589	WITHOUT_CLASSIFICATION	0.9999989093005895	WITHOUT_CLASSIFICATION	1.0906994105179856E-6	DESIGN
// line 592	WITHOUT_CLASSIFICATION	0.9999994830505161	WITHOUT_CLASSIFICATION	5.169494839143776E-7	DESIGN
// line 595	WITHOUT_CLASSIFICATION	0.9999978534948796	WITHOUT_CLASSIFICATION	2.1465051205106893E-6	DESIGN
// line 598	WITHOUT_CLASSIFICATION	0.9999985844392316	WITHOUT_CLASSIFICATION	1.4155607683837254E-6	DESIGN
// line 623	WITHOUT_CLASSIFICATION	0.9999983796833447	WITHOUT_CLASSIFICATION	1.6203166552646484E-6	DESIGN
// line 627	WITHOUT_CLASSIFICATION	0.9999994521491162	WITHOUT_CLASSIFICATION	5.478508838406636E-7	DESIGN
// line 630	WITHOUT_CLASSIFICATION	0.9999988826326357	WITHOUT_CLASSIFICATION	1.1173673643183688E-6	DESIGN
// line 633	WITHOUT_CLASSIFICATION	0.9999950134359119	WITHOUT_CLASSIFICATION	4.986564088162426E-6	DESIGN
// line 639	WITHOUT_CLASSIFICATION	0.9999956427871284	WITHOUT_CLASSIFICATION	4.357212871601716E-6	DESIGN
// line 648	WITHOUT_CLASSIFICATION	0.9999988793490261	WITHOUT_CLASSIFICATION	1.1206509739699786E-6	DESIGN
// line 657	WITHOUT_CLASSIFICATION	0.9999987461723238	WITHOUT_CLASSIFICATION	1.2538276761560889E-6	DESIGN
// line 661	WITHOUT_CLASSIFICATION	0.9999987221478028	WITHOUT_CLASSIFICATION	1.2778521970720918E-6	DESIGN
// line 666	WITHOUT_CLASSIFICATION	0.9999977014479343	WITHOUT_CLASSIFICATION	2.298552065662548E-6	DESIGN
// line 678	WITHOUT_CLASSIFICATION	0.9999991257547197	WITHOUT_CLASSIFICATION	8.74245280308469E-7	DESIGN
// line 682	WITHOUT_CLASSIFICATION	0.9999997582780423	WITHOUT_CLASSIFICATION	2.417219577120197E-7	DESIGN
// line 688	WITHOUT_CLASSIFICATION	0.9999989067153409	WITHOUT_CLASSIFICATION	1.0932846590736359E-6	DESIGN
// line 699	WITHOUT_CLASSIFICATION	0.9999981328121617	WITHOUT_CLASSIFICATION	1.867187838273815E-6	DESIGN
// line 706	WITHOUT_CLASSIFICATION	0.9999954128765512	WITHOUT_CLASSIFICATION	4.587123448804515E-6	DESIGN
// line 708	WITHOUT_CLASSIFICATION	0.9999994563043758	WITHOUT_CLASSIFICATION	5.436956242227267E-7	DESIGN
// line 727	WITHOUT_CLASSIFICATION	0.9999995836832776	WITHOUT_CLASSIFICATION	4.163167224529281E-7	DESIGN
// line 737	WITHOUT_CLASSIFICATION	0.9999982848188183	WITHOUT_CLASSIFICATION	1.7151811818191773E-6	DESIGN
// line 753	WITHOUT_CLASSIFICATION	0.9999984323474687	WITHOUT_CLASSIFICATION	1.567652531320721E-6	DESIGN
// line 779	WITHOUT_CLASSIFICATION	0.9999988993268019	WITHOUT_CLASSIFICATION	1.1006731981334145E-6	DESIGN
// line 801	WITHOUT_CLASSIFICATION	0.9999994724395833	WITHOUT_CLASSIFICATION	5.27560416740415E-7	DESIGN
// line 808	WITHOUT_CLASSIFICATION	0.999999340011561	WITHOUT_CLASSIFICATION	6.599884390330835E-7	DESIGN
// line 811	WITHOUT_CLASSIFICATION	0.9999992700340913	WITHOUT_CLASSIFICATION	7.299659087661684E-7	DESIGN
// line 817	WITHOUT_CLASSIFICATION	0.9999996897304637	WITHOUT_CLASSIFICATION	3.1026953631635833E-7	DESIGN
// line 842	WITHOUT_CLASSIFICATION	0.9999998180232769	WITHOUT_CLASSIFICATION	1.8197672317568317E-7	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999993552429534	WITHOUT_CLASSIFICATION	6.447570466601175E-7	DESIGN
// line 848	WITHOUT_CLASSIFICATION	0.9999992145923843	WITHOUT_CLASSIFICATION	7.854076158524711E-7	DESIGN
// line 893	WITHOUT_CLASSIFICATION	0.9999985305654563	WITHOUT_CLASSIFICATION	1.4694345436230282E-6	DESIGN
// line 899	WITHOUT_CLASSIFICATION	0.9999992696411424	WITHOUT_CLASSIFICATION	7.303588576423644E-7	DESIGN
// line 932	WITHOUT_CLASSIFICATION	0.9999995614821381	WITHOUT_CLASSIFICATION	4.385178619065474E-7	DESIGN
// line 944	WITHOUT_CLASSIFICATION	0.9999990185453026	WITHOUT_CLASSIFICATION	9.814546974448028E-7	DESIGN
// line 960	WITHOUT_CLASSIFICATION	0.9999992196039252	WITHOUT_CLASSIFICATION	7.803960747058477E-7	DESIGN
// line 980	WITHOUT_CLASSIFICATION	0.9999997684641823	WITHOUT_CLASSIFICATION	2.3153581772057833E-7	DESIGN
// line 1004	WITHOUT_CLASSIFICATION	0.9999972620850618	WITHOUT_CLASSIFICATION	2.7379149383194105E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999968774386643	WITHOUT_CLASSIFICATION	3.1225613358514396E-6	DESIGN
// line 820	WITHOUT_CLASSIFICATION	0.999999881363994	WITHOUT_CLASSIFICATION	1.1863600609696689E-7	DESIGN
// line 826	WITHOUT_CLASSIFICATION	0.9999992074773089	WITHOUT_CLASSIFICATION	7.925226911575997E-7	DESIGN
// line 829	WITHOUT_CLASSIFICATION	0.9999996791860387	WITHOUT_CLASSIFICATION	3.2081396123158277E-7	DESIGN
// line 832	WITHOUT_CLASSIFICATION	0.999999649998068	WITHOUT_CLASSIFICATION	3.5000193208393155E-7	DESIGN
// line 851	WITHOUT_CLASSIFICATION	0.999999600317629	WITHOUT_CLASSIFICATION	3.996823709747339E-7	DESIGN
// line 857	WITHOUT_CLASSIFICATION	0.9999995063031961	WITHOUT_CLASSIFICATION	4.936968038474427E-7	DESIGN
// line 860	WITHOUT_CLASSIFICATION	0.9999994020941384	WITHOUT_CLASSIFICATION	5.979058615834796E-7	DESIGN
// line 863	WITHOUT_CLASSIFICATION	0.9999967566134713	WITHOUT_CLASSIFICATION	3.243386528771432E-6	DESIGN
// line 866	WITHOUT_CLASSIFICATION	0.999998412480609	WITHOUT_CLASSIFICATION	1.5875193911614176E-6	DESIGN
// line 869	WITHOUT_CLASSIFICATION	0.9999986984985247	WITHOUT_CLASSIFICATION	1.301501475341982E-6	DESIGN
// line 875	WITHOUT_CLASSIFICATION	0.9999994985899422	WITHOUT_CLASSIFICATION	5.014100577667869E-7	DESIGN
// line 884	WITHOUT_CLASSIFICATION	0.9999992334038557	WITHOUT_CLASSIFICATION	7.665961444574127E-7	DESIGN
// line 887	WITHOUT_CLASSIFICATION	0.9999994302689729	WITHOUT_CLASSIFICATION	5.697310271870566E-7	DESIGN
// line 890	WITHOUT_CLASSIFICATION	0.999999769944273	WITHOUT_CLASSIFICATION	2.3005572701181878E-7	DESIGN
// line 902	WITHOUT_CLASSIFICATION	0.9999997924426043	WITHOUT_CLASSIFICATION	2.075573956923447E-7	DESIGN
// line 909	WITHOUT_CLASSIFICATION	0.9999989897068663	WITHOUT_CLASSIFICATION	1.0102931336412538E-6	DESIGN
// line 912	WITHOUT_CLASSIFICATION	0.9999998860788581	WITHOUT_CLASSIFICATION	1.1392114189033854E-7	DESIGN
// line 916	WITHOUT_CLASSIFICATION	0.9999984064756843	WITHOUT_CLASSIFICATION	1.5935243157523875E-6	DESIGN
// line 922	WITHOUT_CLASSIFICATION	0.9999997857148505	WITHOUT_CLASSIFICATION	2.1428514966361744E-7	DESIGN
// line 928	WITHOUT_CLASSIFICATION	0.9999997303868938	WITHOUT_CLASSIFICATION	2.696131062418378E-7	DESIGN
// line 941	WITHOUT_CLASSIFICATION	0.9999992373206673	WITHOUT_CLASSIFICATION	7.626793325660703E-7	DESIGN
// line 947	WITHOUT_CLASSIFICATION	0.9999991407846621	WITHOUT_CLASSIFICATION	8.592153378601449E-7	DESIGN
// line 951	WITHOUT_CLASSIFICATION	0.999999481043969	WITHOUT_CLASSIFICATION	5.189560310622855E-7	DESIGN
// line 955	WITHOUT_CLASSIFICATION	0.9999992327285281	WITHOUT_CLASSIFICATION	7.672714719017877E-7	DESIGN
// line 965	WITHOUT_CLASSIFICATION	0.9999985752760071	WITHOUT_CLASSIFICATION	1.4247239929292897E-6	DESIGN
// line 969	WITHOUT_CLASSIFICATION	0.9999982384318467	WITHOUT_CLASSIFICATION	1.7615681534186668E-6	DESIGN
// line 977	WITHOUT_CLASSIFICATION	0.9999992054580913	WITHOUT_CLASSIFICATION	7.945419086037068E-7	DESIGN
// line 983	WITHOUT_CLASSIFICATION	0.999998665292632	WITHOUT_CLASSIFICATION	1.3347073678850057E-6	DESIGN
// line 1013	WITHOUT_CLASSIFICATION	0.9999891765150937	WITHOUT_CLASSIFICATION	1.0823484906460252E-5	DESIGN
// line 1023	WITHOUT_CLASSIFICATION	0.9999978773417544	WITHOUT_CLASSIFICATION	2.1226582455895214E-6	DESIGN
// line 1035	WITHOUT_CLASSIFICATION	0.9999967115863261	WITHOUT_CLASSIFICATION	3.288413673831847E-6	DESIGN
// line 1041	WITHOUT_CLASSIFICATION	0.999996522318435	WITHOUT_CLASSIFICATION	3.4776815649025164E-6	DESIGN
// line 1043	WITHOUT_CLASSIFICATION	0.9999950496258628	WITHOUT_CLASSIFICATION	4.9503741371083785E-6	DESIGN
// line 1054	WITHOUT_CLASSIFICATION	0.9999985234293254	WITHOUT_CLASSIFICATION	1.4765706746456973E-6	DESIGN
// line 1057	WITHOUT_CLASSIFICATION	0.999998854943173	WITHOUT_CLASSIFICATION	1.1450568270351138E-6	DESIGN
// line 1060	WITHOUT_CLASSIFICATION	0.9999961909867254	WITHOUT_CLASSIFICATION	3.8090132746647302E-6	DESIGN
// line 1069	WITHOUT_CLASSIFICATION	0.9999947489905338	WITHOUT_CLASSIFICATION	5.251009466254807E-6	DESIGN
// line 1075	WITHOUT_CLASSIFICATION	0.9999988774724599	WITHOUT_CLASSIFICATION	1.122527540153725E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999996579834556	WITHOUT_CLASSIFICATION	3.4201654433833624E-7	DESIGN
// line 1111	WITHOUT_CLASSIFICATION	0.9999979554759157	WITHOUT_CLASSIFICATION	2.0445240843188065E-6	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999998326525317	WITHOUT_CLASSIFICATION	1.6734746827271642E-7	DESIGN
// line 1130	WITHOUT_CLASSIFICATION	0.999999520644435	WITHOUT_CLASSIFICATION	4.793555650483767E-7	DESIGN
// line 1140	WITHOUT_CLASSIFICATION	0.9999996827980728	WITHOUT_CLASSIFICATION	3.1720192723666086E-7	DESIGN
// line 1158	WITHOUT_CLASSIFICATION	0.9999994587656318	WITHOUT_CLASSIFICATION	5.412343682934388E-7	DESIGN
// line 1204	WITHOUT_CLASSIFICATION	0.9999995037803721	WITHOUT_CLASSIFICATION	4.962196280426257E-7	DESIGN
// line 1207	WITHOUT_CLASSIFICATION	0.9999997426852041	WITHOUT_CLASSIFICATION	2.573147958522633E-7	DESIGN
// line 1247	WITHOUT_CLASSIFICATION	0.9999996084301102	WITHOUT_CLASSIFICATION	3.9156988980470584E-7	DESIGN
// line 1251	WITHOUT_CLASSIFICATION	0.9999995888480644	WITHOUT_CLASSIFICATION	4.111519355880339E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.999998939681531	WITHOUT_CLASSIFICATION	1.0603184690712387E-6	DESIGN
// line 1078	WITHOUT_CLASSIFICATION	0.9999991575219753	WITHOUT_CLASSIFICATION	8.424780245836204E-7	DESIGN
// line 1084	WITHOUT_CLASSIFICATION	0.9999987037199632	WITHOUT_CLASSIFICATION	1.2962800368432486E-6	DESIGN
// line 1087	WITHOUT_CLASSIFICATION	0.999999036610003	WITHOUT_CLASSIFICATION	9.633899970815877E-7	DESIGN
// line 1090	WITHOUT_CLASSIFICATION	0.9999992093275551	WITHOUT_CLASSIFICATION	7.906724448484052E-7	DESIGN
// line 1093	WITHOUT_CLASSIFICATION	0.9999955354125064	WITHOUT_CLASSIFICATION	4.464587493556655E-6	DESIGN
// line 1114	WITHOUT_CLASSIFICATION	0.9999989709439787	WITHOUT_CLASSIFICATION	1.0290560213001767E-6	DESIGN
// line 1116	WITHOUT_CLASSIFICATION	0.9999974056954937	WITHOUT_CLASSIFICATION	2.5943045063484862E-6	DESIGN
// line 1118	WITHOUT_CLASSIFICATION	0.9999995585083203	WITHOUT_CLASSIFICATION	4.4149167966140564E-7	DESIGN
// line 1124	WITHOUT_CLASSIFICATION	0.9999996899798482	WITHOUT_CLASSIFICATION	3.1002015175849305E-7	DESIGN
// line 1126	WITHOUT_CLASSIFICATION	0.9999991552022705	WITHOUT_CLASSIFICATION	8.447977294469285E-7	DESIGN
// line 1138	WITHOUT_CLASSIFICATION	0.9999987639157281	WITHOUT_CLASSIFICATION	1.2360842719461272E-6	DESIGN
// line 1144	WITHOUT_CLASSIFICATION	0.9999989831288348	WITHOUT_CLASSIFICATION	1.016871165114521E-6	DESIGN
// line 1149	WITHOUT_CLASSIFICATION	0.9999990061625492	WITHOUT_CLASSIFICATION	9.938374508510284E-7	DESIGN
// line 1155	WITHOUT_CLASSIFICATION	0.9999992074830715	WITHOUT_CLASSIFICATION	7.925169285274373E-7	DESIGN
// line 1162	WITHOUT_CLASSIFICATION	0.9999995925993111	WITHOUT_CLASSIFICATION	4.0740068896148416E-7	DESIGN
// line 1173	WITHOUT_CLASSIFICATION	0.9999985977446125	WITHOUT_CLASSIFICATION	1.4022553875729375E-6	DESIGN
// line 1179	WITHOUT_CLASSIFICATION	0.9999992716207196	WITHOUT_CLASSIFICATION	7.283792804317582E-7	DESIGN
// line 1182	WITHOUT_CLASSIFICATION	0.9999999090348247	WITHOUT_CLASSIFICATION	9.096517522777071E-8	DESIGN
// line 1190	WITHOUT_CLASSIFICATION	0.9999997554738669	WITHOUT_CLASSIFICATION	2.4452613303975616E-7	DESIGN
// line 1196	WITHOUT_CLASSIFICATION	0.9999983028827747	WITHOUT_CLASSIFICATION	1.6971172252354658E-6	DESIGN
// line 1213	WITHOUT_CLASSIFICATION	0.9999988627162903	WITHOUT_CLASSIFICATION	1.137283709639047E-6	DESIGN
// line 1217	WITHOUT_CLASSIFICATION	0.9999995975367191	WITHOUT_CLASSIFICATION	4.024632809339257E-7	DESIGN
// line 1231	WITHOUT_CLASSIFICATION	0.9999990040307238	WITHOUT_CLASSIFICATION	9.959692760888735E-7	DESIGN
// line 1236	WITHOUT_CLASSIFICATION	0.9999985571834958	WITHOUT_CLASSIFICATION	1.4428165042021844E-6	DESIGN
// line 1244	WITHOUT_CLASSIFICATION	0.9999995536049529	WITHOUT_CLASSIFICATION	4.463950470910863E-7	DESIGN
// line 1254	WITHOUT_CLASSIFICATION	0.9999996335417781	WITHOUT_CLASSIFICATION	3.6645822186528356E-7	DESIGN
// line 1258	WITHOUT_CLASSIFICATION	0.9999997685495945	WITHOUT_CLASSIFICATION	2.3145040543548342E-7	DESIGN
// line 1264	WITHOUT_CLASSIFICATION	0.9999992152918881	WITHOUT_CLASSIFICATION	7.847081119922211E-7	DESIGN
// line 1270	WITHOUT_CLASSIFICATION	0.9999998708217259	WITHOUT_CLASSIFICATION	1.2917827408941204E-7	DESIGN
// line 1273	WITHOUT_CLASSIFICATION	0.9999992681997637	WITHOUT_CLASSIFICATION	7.318002362891067E-7	DESIGN
// line 1276	WITHOUT_CLASSIFICATION	0.9999992591129103	WITHOUT_CLASSIFICATION	7.408870897077879E-7	DESIGN
// line 1279	WITHOUT_CLASSIFICATION	0.9999996006328015	WITHOUT_CLASSIFICATION	3.9936719854289E-7	DESIGN
// line 1282	WITHOUT_CLASSIFICATION	0.9999998594428919	WITHOUT_CLASSIFICATION	1.4055710805982882E-7	DESIGN
// line 1289	WITHOUT_CLASSIFICATION	0.9999997228395083	WITHOUT_CLASSIFICATION	2.771604916706427E-7	DESIGN
// line 1292	WITHOUT_CLASSIFICATION	0.9999997887980775	WITHOUT_CLASSIFICATION	2.1120192252364307E-7	DESIGN
// line 1295	WITHOUT_CLASSIFICATION	0.9999996810014958	WITHOUT_CLASSIFICATION	3.1899850405499384E-7	DESIGN
// line 1298	WITHOUT_CLASSIFICATION	0.9999997569334793	WITHOUT_CLASSIFICATION	2.430665207325343E-7	DESIGN
// line 1305	WITHOUT_CLASSIFICATION	0.9999987945953035	WITHOUT_CLASSIFICATION	1.2054046964875115E-6	DESIGN
// line 1348	WITHOUT_CLASSIFICATION	0.999998656653969	WITHOUT_CLASSIFICATION	1.343346030918257E-6	DESIGN
// line 1387	WITHOUT_CLASSIFICATION	0.9999986709711158	WITHOUT_CLASSIFICATION	1.3290288841386683E-6	DESIGN
// line 1392	WITHOUT_CLASSIFICATION	0.9999994538041174	WITHOUT_CLASSIFICATION	5.461958826914523E-7	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.999999076818414	WITHOUT_CLASSIFICATION	9.231815859638174E-7	DESIGN
// line 1462	WITHOUT_CLASSIFICATION	0.9999995663416221	WITHOUT_CLASSIFICATION	4.3365837790783246E-7	DESIGN
// line 1470	WITHOUT_CLASSIFICATION	0.999999493996834	WITHOUT_CLASSIFICATION	5.060031660017914E-7	DESIGN
// line 1496	WITHOUT_CLASSIFICATION	0.9999973361062748	WITHOUT_CLASSIFICATION	2.6638937252314636E-6	DESIGN
// line 1502	WITHOUT_CLASSIFICATION	0.999999775969755	WITHOUT_CLASSIFICATION	2.240302450363965E-7	DESIGN
// line 1595	WITHOUT_CLASSIFICATION	0.9999988665694894	WITHOUT_CLASSIFICATION	1.1334305105707606E-6	DESIGN
// line 1598	WITHOUT_CLASSIFICATION	0.999999248589555	WITHOUT_CLASSIFICATION	7.51410445022697E-7	DESIGN
// line 1308	WITHOUT_CLASSIFICATION	0.999998939939554	WITHOUT_CLASSIFICATION	1.0600604459704005E-6	DESIGN
// line 1311	WITHOUT_CLASSIFICATION	0.9999958219483376	WITHOUT_CLASSIFICATION	4.178051662494486E-6	DESIGN
// line 1317	WITHOUT_CLASSIFICATION	0.9999982209406874	WITHOUT_CLASSIFICATION	1.779059312707787E-6	DESIGN
// line 1323	WITHOUT_CLASSIFICATION	0.9999986179955577	WITHOUT_CLASSIFICATION	1.3820044423264322E-6	DESIGN
// line 1326	WITHOUT_CLASSIFICATION	0.9999969323783087	WITHOUT_CLASSIFICATION	3.067621691298547E-6	DESIGN
// line 1329	WITHOUT_CLASSIFICATION	0.9999987610025755	WITHOUT_CLASSIFICATION	1.238997424637363E-6	DESIGN
// line 1337	WITHOUT_CLASSIFICATION	0.9999980858409019	WITHOUT_CLASSIFICATION	1.914159098108731E-6	DESIGN
// line 1342	WITHOUT_CLASSIFICATION	0.9999995286030827	WITHOUT_CLASSIFICATION	4.713969172303167E-7	DESIGN
// line 1345	WITHOUT_CLASSIFICATION	0.9999984054437518	WITHOUT_CLASSIFICATION	1.5945562481248328E-6	DESIGN
// line 1354	WITHOUT_CLASSIFICATION	0.9999982234537237	WITHOUT_CLASSIFICATION	1.7765462763411872E-6	DESIGN
// line 1359	WITHOUT_CLASSIFICATION	0.9999977953305735	WITHOUT_CLASSIFICATION	2.20466942655259E-6	DESIGN
// line 1366	WITHOUT_CLASSIFICATION	0.9999954526869113	WITHOUT_CLASSIFICATION	4.547313088774811E-6	DESIGN
// line 1369	WITHOUT_CLASSIFICATION	0.9999963026304712	WITHOUT_CLASSIFICATION	3.6973695288054923E-6	DESIGN
// line 1373	WITHOUT_CLASSIFICATION	0.9999978514764568	WITHOUT_CLASSIFICATION	2.148523543134273E-6	DESIGN
// line 1377	WITHOUT_CLASSIFICATION	0.9999981429823032	WITHOUT_CLASSIFICATION	1.8570176968443082E-6	DESIGN
// line 1383	WITHOUT_CLASSIFICATION	0.9999978528799736	WITHOUT_CLASSIFICATION	2.147120026368543E-6	DESIGN
// line 1399	WITHOUT_CLASSIFICATION	0.9999973999897566	WITHOUT_CLASSIFICATION	2.6000102433666828E-6	DESIGN
// line 1401	WITHOUT_CLASSIFICATION	0.999998621860621	WITHOUT_CLASSIFICATION	1.378139379005992E-6	DESIGN
// line 1406	WITHOUT_CLASSIFICATION	0.9999959461297729	WITHOUT_CLASSIFICATION	4.053870227083813E-6	DESIGN
// line 1417	WITHOUT_CLASSIFICATION	0.9999989735540463	WITHOUT_CLASSIFICATION	1.0264459536595828E-6	DESIGN
// line 1424	WITHOUT_CLASSIFICATION	0.9999993662741826	WITHOUT_CLASSIFICATION	6.337258173917075E-7	DESIGN
// line 1427	WITHOUT_CLASSIFICATION	0.9999995495438135	WITHOUT_CLASSIFICATION	4.5045618650195623E-7	DESIGN
// line 1430	WITHOUT_CLASSIFICATION	0.9999993692284539	WITHOUT_CLASSIFICATION	6.307715460709843E-7	DESIGN
// line 1433	WITHOUT_CLASSIFICATION	0.9999970378872728	WITHOUT_CLASSIFICATION	2.9621127272209385E-6	DESIGN
// line 1436	WITHOUT_CLASSIFICATION	0.9999953369198792	WITHOUT_CLASSIFICATION	4.6630801208181315E-6	DESIGN
// line 1442	WITHOUT_CLASSIFICATION	0.9999996900458663	WITHOUT_CLASSIFICATION	3.099541336846732E-7	DESIGN
// line 1445	WITHOUT_CLASSIFICATION	0.9999989018098396	WITHOUT_CLASSIFICATION	1.0981901602926336E-6	DESIGN
// line 1458	WITHOUT_CLASSIFICATION	0.9999992845306785	WITHOUT_CLASSIFICATION	7.154693215290648E-7	DESIGN
// line 1464	WITHOUT_CLASSIFICATION	0.9999979924756427	WITHOUT_CLASSIFICATION	2.0075243572949246E-6	DESIGN
// line 1489	WITHOUT_CLASSIFICATION	0.9999991447916843	WITHOUT_CLASSIFICATION	8.552083156558502E-7	DESIGN
// line 1493	WITHOUT_CLASSIFICATION	0.9999973336840875	WITHOUT_CLASSIFICATION	2.6663159125870547E-6	DESIGN
// line 1507	WITHOUT_CLASSIFICATION	0.9999993586475495	WITHOUT_CLASSIFICATION	6.413524505058975E-7	DESIGN
// line 1519	WITHOUT_CLASSIFICATION	0.9999991451352254	WITHOUT_CLASSIFICATION	8.548647745499841E-7	DESIGN
// line 1532	WITHOUT_CLASSIFICATION	0.9999995946897455	WITHOUT_CLASSIFICATION	4.0531025456470987E-7	DESIGN
// line 1538	WITHOUT_CLASSIFICATION	0.999998888651379	WITHOUT_CLASSIFICATION	1.1113486210571967E-6	DESIGN
// line 1542	WITHOUT_CLASSIFICATION	0.9999997458843379	WITHOUT_CLASSIFICATION	2.541156619960184E-7	DESIGN
// line 1557	WITHOUT_CLASSIFICATION	0.9999991506864394	WITHOUT_CLASSIFICATION	8.493135607104007E-7	DESIGN
// line 1573	WITHOUT_CLASSIFICATION	0.9999981784427588	WITHOUT_CLASSIFICATION	1.8215572410785046E-6	DESIGN
// line 1591	WITHOUT_CLASSIFICATION	0.9999982240118925	WITHOUT_CLASSIFICATION	1.7759881075112799E-6	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999970524681868	WITHOUT_CLASSIFICATION	2.9475318132018715E-6	DESIGN
// line 1629	WITHOUT_CLASSIFICATION	0.99999854983862	WITHOUT_CLASSIFICATION	1.4501613799467299E-6	DESIGN
// line 1632	WITHOUT_CLASSIFICATION	0.9999979404480115	WITHOUT_CLASSIFICATION	2.0595519885872247E-6	DESIGN
// line 1705	WITHOUT_CLASSIFICATION	0.9999994618051555	WITHOUT_CLASSIFICATION	5.381948443933612E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999974159702125	WITHOUT_CLASSIFICATION	2.584029787555939E-6	DESIGN
// line 1725	WITHOUT_CLASSIFICATION	0.9999996628269069	WITHOUT_CLASSIFICATION	3.371730930415544E-7	DESIGN
// line 1742	WITHOUT_CLASSIFICATION	0.9999998045203297	WITHOUT_CLASSIFICATION	1.9547967041132642E-7	DESIGN
// line 1749	WITHOUT_CLASSIFICATION	0.9999991361857716	WITHOUT_CLASSIFICATION	8.638142283628817E-7	DESIGN
// line 1818	WITHOUT_CLASSIFICATION	0.9999993636015029	WITHOUT_CLASSIFICATION	6.363984970953211E-7	DESIGN
// line 1822	WITHOUT_CLASSIFICATION	0.9999998819304329	WITHOUT_CLASSIFICATION	1.1806956706407724E-7	DESIGN
// line 1607	WITHOUT_CLASSIFICATION	0.99999710139842	WITHOUT_CLASSIFICATION	2.8986015798739144E-6	DESIGN
// line 1610	WITHOUT_CLASSIFICATION	0.9999992899202669	WITHOUT_CLASSIFICATION	7.10079733056242E-7	DESIGN
// line 1622	WITHOUT_CLASSIFICATION	0.9999992935516684	WITHOUT_CLASSIFICATION	7.064483315464213E-7	DESIGN
// line 1625	WITHOUT_CLASSIFICATION	0.999998936302217	WITHOUT_CLASSIFICATION	1.0636977830305535E-6	DESIGN
// line 1636	WITHOUT_CLASSIFICATION	0.9999899054720071	WITHOUT_CLASSIFICATION	1.0094527993039218E-5	DESIGN
// line 1639	WITHOUT_CLASSIFICATION	0.9999907415630745	WITHOUT_CLASSIFICATION	9.258436925529208E-6	DESIGN
// line 1647	WITHOUT_CLASSIFICATION	0.9999972014631667	WITHOUT_CLASSIFICATION	2.7985368332305006E-6	DESIGN
// line 1651	WITHOUT_CLASSIFICATION	0.9999965184872692	WITHOUT_CLASSIFICATION	3.4815127308990224E-6	DESIGN
// line 1657	WITHOUT_CLASSIFICATION	0.9999975988036479	WITHOUT_CLASSIFICATION	2.4011963520723526E-6	DESIGN
// line 1660	WITHOUT_CLASSIFICATION	0.9999984547743281	WITHOUT_CLASSIFICATION	1.5452256718179955E-6	DESIGN
// line 1663	WITHOUT_CLASSIFICATION	0.9999916470554329	WITHOUT_CLASSIFICATION	8.352944567077308E-6	DESIGN
// line 1678	WITHOUT_CLASSIFICATION	0.9999983917285341	WITHOUT_CLASSIFICATION	1.6082714658489613E-6	DESIGN
// line 1702	WITHOUT_CLASSIFICATION	0.9999997866468295	WITHOUT_CLASSIFICATION	2.1335317052475565E-7	DESIGN
// line 1711	WITHOUT_CLASSIFICATION	0.9999986457095913	WITHOUT_CLASSIFICATION	1.3542904087981382E-6	DESIGN
// line 1719	WITHOUT_CLASSIFICATION	0.9999991938499198	WITHOUT_CLASSIFICATION	8.061500803510249E-7	DESIGN
// line 1722	WITHOUT_CLASSIFICATION	0.999999776923041	WITHOUT_CLASSIFICATION	2.2307695914875592E-7	DESIGN
// line 1731	WITHOUT_CLASSIFICATION	0.9999977334872971	WITHOUT_CLASSIFICATION	2.2665127028472277E-6	DESIGN
// line 1734	WITHOUT_CLASSIFICATION	0.9999985330323404	WITHOUT_CLASSIFICATION	1.4669676595970369E-6	DESIGN
// line 1738	WITHOUT_CLASSIFICATION	0.9999988227300814	WITHOUT_CLASSIFICATION	1.1772699185156117E-6	DESIGN
// line 1746	WITHOUT_CLASSIFICATION	0.9999982800829588	WITHOUT_CLASSIFICATION	1.7199170412730448E-6	DESIGN
// line 1756	WITHOUT_CLASSIFICATION	0.9999979734480239	WITHOUT_CLASSIFICATION	2.0265519760260603E-6	DESIGN
// line 1758	WITHOUT_CLASSIFICATION	0.9999994632732152	WITHOUT_CLASSIFICATION	5.367267847989911E-7	DESIGN
// line 1761	WITHOUT_CLASSIFICATION	0.9999979874293075	WITHOUT_CLASSIFICATION	2.0125706925380053E-6	DESIGN
// line 1767	WITHOUT_CLASSIFICATION	0.999998294575493	WITHOUT_CLASSIFICATION	1.7054245069517916E-6	DESIGN
// line 1776	WITHOUT_CLASSIFICATION	0.9999976882332089	WITHOUT_CLASSIFICATION	2.311766791037497E-6	DESIGN
// line 1782	WITHOUT_CLASSIFICATION	0.9999998713146372	WITHOUT_CLASSIFICATION	1.2868536277698272E-7	DESIGN
// line 1785	WITHOUT_CLASSIFICATION	0.9999995031672723	WITHOUT_CLASSIFICATION	4.968327277268422E-7	DESIGN
// line 1788	WITHOUT_CLASSIFICATION	0.999999426165458	WITHOUT_CLASSIFICATION	5.738345420563383E-7	DESIGN
// line 1791	WITHOUT_CLASSIFICATION	0.9999986167142958	WITHOUT_CLASSIFICATION	1.3832857041860048E-6	DESIGN
// line 1797	WITHOUT_CLASSIFICATION	0.9999990323501834	WITHOUT_CLASSIFICATION	9.676498166295817E-7	DESIGN
// line 1800	WITHOUT_CLASSIFICATION	0.9999997515384594	WITHOUT_CLASSIFICATION	2.4846154059205127E-7	DESIGN
// line 1803	WITHOUT_CLASSIFICATION	0.9999982322455804	WITHOUT_CLASSIFICATION	1.7677544196479116E-6	DESIGN
// line 1806	WITHOUT_CLASSIFICATION	0.9999976441520122	WITHOUT_CLASSIFICATION	2.3558479878441823E-6	DESIGN
// line 1809	WITHOUT_CLASSIFICATION	0.999999358692477	WITHOUT_CLASSIFICATION	6.413075230564523E-7	DESIGN
// line 1815	WITHOUT_CLASSIFICATION	0.999999421273543	WITHOUT_CLASSIFICATION	5.787264570277665E-7	DESIGN
// line 1825	WITHOUT_CLASSIFICATION	0.9999998134140468	WITHOUT_CLASSIFICATION	1.865859531717226E-7	DESIGN
// line 1828	WITHOUT_CLASSIFICATION	0.9999997625478378	WITHOUT_CLASSIFICATION	2.3745216226180325E-7	DESIGN
// line 1831	WITHOUT_CLASSIFICATION	0.9999984763113363	WITHOUT_CLASSIFICATION	1.5236886636870547E-6	DESIGN
// line 1847	WITHOUT_CLASSIFICATION	0.9999994332752593	WITHOUT_CLASSIFICATION	5.667247407876954E-7	DESIGN
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9966891217893471	WITHOUT_CLASSIFICATION	0.00331087821065296	DESIGN
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9951408274665234	WITHOUT_CLASSIFICATION	0.0048591725334766545	DESIGN
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999981096391919	WITHOUT_CLASSIFICATION	1.8903608080451401E-6	DESIGN
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999992255502279	WITHOUT_CLASSIFICATION	7.744497721398308E-7	DESIGN
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999910010159595	WITHOUT_CLASSIFICATION	8.998984040532188E-6	DESIGN
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9993608159214524	WITHOUT_CLASSIFICATION	6.391840785475223E-4	DESIGN
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999826910598849	WITHOUT_CLASSIFICATION	1.7308940115143035E-5	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999897652533	WITHOUT_CLASSIFICATION	1.0234746788705473E-8	DESIGN
// line 1854	WITHOUT_CLASSIFICATION	0.9999994882375574	WITHOUT_CLASSIFICATION	5.117624425895881E-7	DESIGN
// line 1869	WITHOUT_CLASSIFICATION	0.9999989573999428	WITHOUT_CLASSIFICATION	1.0426000571918577E-6	DESIGN
// line 1872	WITHOUT_CLASSIFICATION	0.99999988787731	WITHOUT_CLASSIFICATION	1.121226900640418E-7	DESIGN
// line 1877	WITHOUT_CLASSIFICATION	0.9999995059606146	WITHOUT_CLASSIFICATION	4.940393854033608E-7	DESIGN
// line 1886	WITHOUT_CLASSIFICATION	0.9999987437202013	WITHOUT_CLASSIFICATION	1.256279798702031E-6	DESIGN
// line 1898	WITHOUT_CLASSIFICATION	0.9999995104165434	WITHOUT_CLASSIFICATION	4.895834565986794E-7	DESIGN
// line 1902	WITHOUT_CLASSIFICATION	0.9999998103117927	WITHOUT_CLASSIFICATION	1.8968820721991057E-7	DESIGN
// line 1905	WITHOUT_CLASSIFICATION	0.9999994346323745	WITHOUT_CLASSIFICATION	5.653676254873227E-7	DESIGN
// line 1911	WITHOUT_CLASSIFICATION	0.9999980417335511	WITHOUT_CLASSIFICATION	1.95826644886913E-6	DESIGN
// line 1918	WITHOUT_CLASSIFICATION	0.9999994861578934	WITHOUT_CLASSIFICATION	5.138421065400717E-7	DESIGN
// line 1935	WITHOUT_CLASSIFICATION	0.9999986121253643	WITHOUT_CLASSIFICATION	1.3878746356538166E-6	DESIGN
// line 1938	WITHOUT_CLASSIFICATION	0.9999986823661735	WITHOUT_CLASSIFICATION	1.3176338264533212E-6	DESIGN
// line 1942	WITHOUT_CLASSIFICATION	0.9999997636893246	WITHOUT_CLASSIFICATION	2.3631067545815926E-7	DESIGN
// line 1948	WITHOUT_CLASSIFICATION	0.9999993280463675	WITHOUT_CLASSIFICATION	6.719536325739702E-7	DESIGN
// line 1960	WITHOUT_CLASSIFICATION	0.9999991717506496	WITHOUT_CLASSIFICATION	8.282493505586378E-7	DESIGN
// line 1963	WITHOUT_CLASSIFICATION	0.999995527185821	WITHOUT_CLASSIFICATION	4.472814179056463E-6	DESIGN
// line 1968	WITHOUT_CLASSIFICATION	0.9999989037019757	WITHOUT_CLASSIFICATION	1.0962980243564573E-6	DESIGN
// line 1972	WITHOUT_CLASSIFICATION	0.9999998127571641	WITHOUT_CLASSIFICATION	1.8724283594228732E-7	DESIGN
// line 1982	WITHOUT_CLASSIFICATION	0.9999998645517765	WITHOUT_CLASSIFICATION	1.3544822351379094E-7	DESIGN
// line 1995	WITHOUT_CLASSIFICATION	0.9999991745442596	WITHOUT_CLASSIFICATION	8.254557403777918E-7	DESIGN
// line 2000	WITHOUT_CLASSIFICATION	0.9999998013813075	WITHOUT_CLASSIFICATION	1.9861869247397183E-7	DESIGN
// line 2006	WITHOUT_CLASSIFICATION	0.9999980885725956	WITHOUT_CLASSIFICATION	1.911427404342836E-6	DESIGN
// line 2010	WITHOUT_CLASSIFICATION	0.9999999477347266	WITHOUT_CLASSIFICATION	5.226527331843371E-8	DESIGN
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999868979928022	WITHOUT_CLASSIFICATION	1.3102007197752413E-5	DESIGN
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999927936400194	WITHOUT_CLASSIFICATION	7.2063599805631645E-6	DESIGN
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999961897198923	WITHOUT_CLASSIFICATION	3.810280107713499E-6	DESIGN
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999203439799444	WITHOUT_CLASSIFICATION	7.965602005558779E-5	DESIGN
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999922998423	WITHOUT_CLASSIFICATION	7.700157640361032E-9	DESIGN
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999765691743832	WITHOUT_CLASSIFICATION	2.343082561686519E-5	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999998730633432	WITHOUT_CLASSIFICATION	1.2693665680106097E-6	DESIGN
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999999948359694	WITHOUT_CLASSIFICATION	5.164030609674855E-9	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999997131601894	WITHOUT_CLASSIFICATION	2.8683981053528956E-7	DESIGN
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999997131601894	WITHOUT_CLASSIFICATION	2.8683981053528956E-7	DESIGN
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.6760340944070053	DESIGN	0.3239659055929946	WITHOUT_CLASSIFICATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999918574724768	WITHOUT_CLASSIFICATION	8.142527523151381E-6	DESIGN
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999972109488	WITHOUT_CLASSIFICATION	2.789051173211198E-9	DESIGN
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999998741709142	WITHOUT_CLASSIFICATION	1.258290857482834E-7	DESIGN
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999317108497916	WITHOUT_CLASSIFICATION	6.828915020833857E-5	DESIGN
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999999670150088	WITHOUT_CLASSIFICATION	3.298499123105498E-8	DESIGN
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9950373397797169	WITHOUT_CLASSIFICATION	0.004962660220283088	DESIGN
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999942319989144	WITHOUT_CLASSIFICATION	5.768001085707077E-6	DESIGN
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999809821477141	WITHOUT_CLASSIFICATION	1.901785228581967E-5	DESIGN
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999992437590014	WITHOUT_CLASSIFICATION	7.562409985660368E-7	DESIGN
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9934006024865493	WITHOUT_CLASSIFICATION	0.006599397513450687	DESIGN
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9996881207021426	WITHOUT_CLASSIFICATION	3.118792978573388E-4	DESIGN
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.999999204900083	WITHOUT_CLASSIFICATION	7.950999169210612E-7	DESIGN
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999444375194875	WITHOUT_CLASSIFICATION	5.5562480512595236E-5	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999798867926612	WITHOUT_CLASSIFICATION	2.0113207338800132E-4	DESIGN
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999798867926612	WITHOUT_CLASSIFICATION	2.0113207338800132E-4	DESIGN
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9792993906266942	WITHOUT_CLASSIFICATION	0.02070060937330576	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999912754152377	WITHOUT_CLASSIFICATION	8.724584762188946E-6	DESIGN
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999991867321	WITHOUT_CLASSIFICATION	8.132678387155421E-10	DESIGN
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999848603949402	WITHOUT_CLASSIFICATION	1.51396050598822E-5	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984255328591131	WITHOUT_CLASSIFICATION	0.0015744671408869071	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999995671262478	WITHOUT_CLASSIFICATION	4.328737521522384E-7	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999976190375193	WITHOUT_CLASSIFICATION	2.380962480798429E-6	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999995671262478	WITHOUT_CLASSIFICATION	4.328737521522384E-7	DESIGN
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9942624274864845	WITHOUT_CLASSIFICATION	0.005737572513515409	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9992704551666933	WITHOUT_CLASSIFICATION	7.295448333067644E-4	DESIGN
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.8757380417576142	WITHOUT_CLASSIFICATION	0.12426195824238577	DESIGN
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.6334986091195379	DESIGN	0.36650139088046213	WITHOUT_CLASSIFICATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9985116366672385	WITHOUT_CLASSIFICATION	0.001488363332761494	DESIGN
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9988683418783103	WITHOUT_CLASSIFICATION	0.001131658121689712	DESIGN
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999644826561054	WITHOUT_CLASSIFICATION	3.551734389460839E-5	DESIGN
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999998098645112	WITHOUT_CLASSIFICATION	1.9013548874972122E-7	DESIGN
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999999583939677	WITHOUT_CLASSIFICATION	4.160603229703825E-8	DESIGN
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9962388103567296	WITHOUT_CLASSIFICATION	0.00376118964327048	DESIGN
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.5167230336484901	DESIGN	0.48327696635150996	WITHOUT_CLASSIFICATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999967119891565	WITHOUT_CLASSIFICATION	3.2880108433572787E-6	DESIGN
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999937992752232	WITHOUT_CLASSIFICATION	6.200724776740723E-6	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999546202879812	WITHOUT_CLASSIFICATION	4.537971201880683E-4	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999989080458	WITHOUT_CLASSIFICATION	1.0919541869145962E-9	DESIGN
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999989080458	WITHOUT_CLASSIFICATION	1.0919541869145962E-9	DESIGN
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999961049989292	WITHOUT_CLASSIFICATION	3.895001070763628E-6	DESIGN
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999984529761456	WITHOUT_CLASSIFICATION	1.5470238543663111E-6	DESIGN
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999998001403514	WITHOUT_CLASSIFICATION	1.998596486176415E-7	DESIGN
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999985763709114	WITHOUT_CLASSIFICATION	1.423629088690207E-6	DESIGN
// required and optional only	WITHOUT_CLASSIFICATION	0.9999995730142531	WITHOUT_CLASSIFICATION	4.269857468925194E-7	DESIGN
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999995671262478	WITHOUT_CLASSIFICATION	4.328737521522384E-7	DESIGN
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999995153062773	WITHOUT_CLASSIFICATION	4.846937227030834E-7	DESIGN
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999999895193	WITHOUT_CLASSIFICATION	1.048072148333531E-11	DESIGN
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999957445880299	WITHOUT_CLASSIFICATION	4.2554119700958014E-5	DESIGN
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999991666002387	WITHOUT_CLASSIFICATION	8.333997612290527E-7	DESIGN
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999998849286081	WITHOUT_CLASSIFICATION	1.150713918904912E-7	DESIGN
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999991498254	WITHOUT_CLASSIFICATION	8.501747392241612E-10	DESIGN
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999999969980361	WITHOUT_CLASSIFICATION	3.0019638380250207E-9	DESIGN
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.999999927173429	WITHOUT_CLASSIFICATION	7.282657099101188E-8	DESIGN
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9987919992753431	WITHOUT_CLASSIFICATION	0.0012080007246569146	DESIGN
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.8706032887939141	WITHOUT_CLASSIFICATION	0.12939671120608592	DESIGN
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999642775929303	WITHOUT_CLASSIFICATION	3.572240706971409E-5	DESIGN
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999997826052435	WITHOUT_CLASSIFICATION	2.173947565141409E-7	DESIGN
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9629211899764369	WITHOUT_CLASSIFICATION	0.03707881002356312	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999762100812425	WITHOUT_CLASSIFICATION	2.378991875753904E-5	DESIGN
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9438125666542032	DESIGN	0.056187433345796824	WITHOUT_CLASSIFICATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9997872637352767	WITHOUT_CLASSIFICATION	2.1273626472331157E-4	DESIGN
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999978414375439	WITHOUT_CLASSIFICATION	2.1585624561330406E-6	DESIGN
// id must always be even	WITHOUT_CLASSIFICATION	0.9998029770498472	WITHOUT_CLASSIFICATION	1.9702295015282755E-4	DESIGN
// with block pass	WITHOUT_CLASSIFICATION	0.9999984514944356	WITHOUT_CLASSIFICATION	1.5485055644358225E-6	DESIGN
// no block	WITHOUT_CLASSIFICATION	0.9999947425670948	WITHOUT_CLASSIFICATION	5.2574329052363596E-6	DESIGN
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999955450075403	WITHOUT_CLASSIFICATION	4.454992459735381E-6	DESIGN
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999939901824971	WITHOUT_CLASSIFICATION	6.009817502847887E-6	DESIGN
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999430642612867	WITHOUT_CLASSIFICATION	5.6935738713379105E-5	DESIGN
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999990432971644	WITHOUT_CLASSIFICATION	9.567028356047859E-7	DESIGN
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999993464386897	WITHOUT_CLASSIFICATION	6.535613104149608E-7	DESIGN
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.999975148182757	WITHOUT_CLASSIFICATION	2.485181724298435E-5	DESIGN
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9993241058039	WITHOUT_CLASSIFICATION	6.758941961000542E-4	DESIGN
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999993022363376	WITHOUT_CLASSIFICATION	6.977636624237171E-7	DESIGN
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9884387541697081	WITHOUT_CLASSIFICATION	0.01156124583029192	DESIGN
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999845849571201	WITHOUT_CLASSIFICATION	1.541504287995568E-5	DESIGN
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999973704342321	WITHOUT_CLASSIFICATION	2.629565768005756E-6	DESIGN
// Lastline	WITHOUT_CLASSIFICATION	0.9999994384468555	WITHOUT_CLASSIFICATION	5.615531446025144E-7	DESIGN
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999956089001377	WITHOUT_CLASSIFICATION	4.391099862356689E-6	DESIGN
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999982554124698	WITHOUT_CLASSIFICATION	1.7445875303396368E-6	DESIGN
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999430432614608	WITHOUT_CLASSIFICATION	5.6956738539290204E-5	DESIGN
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9980886589591107	WITHOUT_CLASSIFICATION	0.0019113410408892154	DESIGN
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999898412400955	WITHOUT_CLASSIFICATION	1.0158759904444847E-5	DESIGN
// silently ignore	WITHOUT_CLASSIFICATION	0.9998964857648099	WITHOUT_CLASSIFICATION	1.035142351900741E-4	DESIGN
// used by compiler	WITHOUT_CLASSIFICATION	0.9992744316383669	WITHOUT_CLASSIFICATION	7.255683616330818E-4	DESIGN
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9967728362747669	WITHOUT_CLASSIFICATION	0.003227163725233141	DESIGN
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999897652533	WITHOUT_CLASSIFICATION	1.0234746788705473E-8	DESIGN
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999984896172	WITHOUT_CLASSIFICATION	1.510382908939377E-9	DESIGN
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999535854082505	WITHOUT_CLASSIFICATION	4.641459174954599E-5	DESIGN
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999597228485855	WITHOUT_CLASSIFICATION	4.027715141443808E-5	DESIGN
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999292268577	WITHOUT_CLASSIFICATION	7.077314228284174E-8	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9992704551666933	WITHOUT_CLASSIFICATION	7.295448333067644E-4	DESIGN
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999479941915017	WITHOUT_CLASSIFICATION	5.2005808498303524E-5	DESIGN
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9993877824593006	DESIGN	6.122175406995133E-4	WITHOUT_CLASSIFICATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9989732363547077	WITHOUT_CLASSIFICATION	0.0010267636452923226	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999934087901685	WITHOUT_CLASSIFICATION	6.591209831465743E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999934087901685	WITHOUT_CLASSIFICATION	6.591209831465743E-6	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999699643992617	WITHOUT_CLASSIFICATION	3.00356007383782E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999699643992617	WITHOUT_CLASSIFICATION	3.00356007383782E-5	DESIGN
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999699643992617	WITHOUT_CLASSIFICATION	3.00356007383782E-5	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9998429740972925	WITHOUT_CLASSIFICATION	1.5702590270756425E-4	DESIGN
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9998429740972925	WITHOUT_CLASSIFICATION	1.5702590270756425E-4	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999963482940056	WITHOUT_CLASSIFICATION	3.651705994456786E-6	DESIGN
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999963482940056	WITHOUT_CLASSIFICATION	3.651705994456786E-6	DESIGN
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999998998355	WITHOUT_CLASSIFICATION	1.0016443320859369E-10	DESIGN
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999997805803672	WITHOUT_CLASSIFICATION	2.19419632866743E-7	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999990703316197	WITHOUT_CLASSIFICATION	9.296683802420935E-7	DESIGN
// prefill ?	WITHOUT_CLASSIFICATION	0.9999990703316197	WITHOUT_CLASSIFICATION	9.296683802420935E-7	DESIGN
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999429691878173	WITHOUT_CLASSIFICATION	5.703081218263803E-5	DESIGN
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9989010962773142	WITHOUT_CLASSIFICATION	0.001098903722685857	DESIGN
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999931008983499	WITHOUT_CLASSIFICATION	6.899101650102181E-6	DESIGN
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999977777943719	WITHOUT_CLASSIFICATION	2.222205627942463E-6	DESIGN
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999996305107979	WITHOUT_CLASSIFICATION	3.694892020724959E-7	DESIGN
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9660745548709299	WITHOUT_CLASSIFICATION	0.0339254451290701	DESIGN
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999989994610992	WITHOUT_CLASSIFICATION	1.0005389007684798E-6	DESIGN
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999217854768536	WITHOUT_CLASSIFICATION	7.821452314648424E-5	DESIGN
// caller	WITHOUT_CLASSIFICATION	0.9999995991366006	WITHOUT_CLASSIFICATION	4.0086339940829704E-7	DESIGN
// calltype // block	WITHOUT_CLASSIFICATION	0.9999987983216992	WITHOUT_CLASSIFICATION	1.2016783008430275E-6	DESIGN
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9971529740873626	WITHOUT_CLASSIFICATION	0.002847025912637506	DESIGN
// load arity for check	WITHOUT_CLASSIFICATION	0.9999862143285861	WITHOUT_CLASSIFICATION	1.3785671413834633E-5	DESIGN
// throw	WITHOUT_CLASSIFICATION	0.999994429575836	WITHOUT_CLASSIFICATION	5.570424164087275E-6	DESIGN
// load arity for error	WITHOUT_CLASSIFICATION	0.99694393516789	WITHOUT_CLASSIFICATION	0.003056064832109874	DESIGN
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999038553854201	WITHOUT_CLASSIFICATION	9.614461457985369E-5	DESIGN
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9989233292013955	WITHOUT_CLASSIFICATION	0.0010766707986045391	DESIGN
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9901431991649151	WITHOUT_CLASSIFICATION	0.009856800835084945	DESIGN
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999998529181394	WITHOUT_CLASSIFICATION	1.4708186057390894E-7	DESIGN
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999999813849768	WITHOUT_CLASSIFICATION	1.8615023135437315E-8	DESIGN
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999442863434888	WITHOUT_CLASSIFICATION	5.571365651120371E-4	DESIGN
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999997625887765	WITHOUT_CLASSIFICATION	2.3741122333266223E-7	DESIGN
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999992564893121	WITHOUT_CLASSIFICATION	7.435106879121759E-7	DESIGN
// load the encoding	WITHOUT_CLASSIFICATION	0.9999994552162481	WITHOUT_CLASSIFICATION	5.447837518191637E-7	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999977634165262	WITHOUT_CLASSIFICATION	2.2365834737758165E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999955125365962	WITHOUT_CLASSIFICATION	4.487463403727346E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999769518976613	WITHOUT_CLASSIFICATION	2.3048102338628095E-5	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999518306734	WITHOUT_CLASSIFICATION	4.816932651246984E-8	DESIGN
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999062435585	WITHOUT_CLASSIFICATION	9.375644142912965E-8	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999974825545732	WITHOUT_CLASSIFICATION	2.5174454267515584E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999949490188215	WITHOUT_CLASSIFICATION	5.050981178532734E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999740576692663	WITHOUT_CLASSIFICATION	2.594233073367727E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999964605146362	WITHOUT_CLASSIFICATION	3.5394853637948457E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999928984138541	WITHOUT_CLASSIFICATION	7.101586145831566E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999466641551157	WITHOUT_CLASSIFICATION	5.333584488417802E-5	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999928984138541	WITHOUT_CLASSIFICATION	7.101586145831566E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999928984138541	WITHOUT_CLASSIFICATION	7.101586145831566E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999928984138541	WITHOUT_CLASSIFICATION	7.101586145831566E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999928984138541	WITHOUT_CLASSIFICATION	7.101586145831566E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999928984138541	WITHOUT_CLASSIFICATION	7.101586145831566E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999928984138541	WITHOUT_CLASSIFICATION	7.101586145831566E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999466641551157	WITHOUT_CLASSIFICATION	5.333584488417802E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999466641551157	WITHOUT_CLASSIFICATION	5.333584488417802E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999466641551157	WITHOUT_CLASSIFICATION	5.333584488417802E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999466641551157	WITHOUT_CLASSIFICATION	5.333584488417802E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999466641551157	WITHOUT_CLASSIFICATION	5.333584488417802E-5	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999466641551157	WITHOUT_CLASSIFICATION	5.333584488417802E-5	DESIGN
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999955293423265	WITHOUT_CLASSIFICATION	4.4706576734937655E-6	DESIGN
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999999161952633	WITHOUT_CLASSIFICATION	8.38047366841926E-8	DESIGN
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999995939684464	WITHOUT_CLASSIFICATION	4.0603155355843004E-7	DESIGN
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999886648490333	WITHOUT_CLASSIFICATION	1.1335150966615732E-5	DESIGN
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999459079881761	WITHOUT_CLASSIFICATION	5.409201182384563E-5	DESIGN
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999766051085982	WITHOUT_CLASSIFICATION	2.339489140177805E-5	DESIGN
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999975400850265	WITHOUT_CLASSIFICATION	2.4599149734291937E-6	DESIGN
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999999863408808	WITHOUT_CLASSIFICATION	1.3659119199105297E-7	DESIGN
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9996348579418358	WITHOUT_CLASSIFICATION	3.6514205816419454E-4	DESIGN
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999833514044484	WITHOUT_CLASSIFICATION	1.664859555154558E-5	DESIGN
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9987883181726275	WITHOUT_CLASSIFICATION	0.001211681827372535	DESIGN
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999657018598	WITHOUT_CLASSIFICATION	3.4298140316321243E-8	DESIGN
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999999915810222	WITHOUT_CLASSIFICATION	8.418977804118959E-8	DESIGN
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999920455629611	WITHOUT_CLASSIFICATION	7.954437038969376E-6	DESIGN
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999214930522795	WITHOUT_CLASSIFICATION	7.850694772041927E-5	DESIGN
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.7136422571792225	WITHOUT_CLASSIFICATION	0.2863577428207774	DESIGN
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999951868082485	WITHOUT_CLASSIFICATION	4.813191751474764E-6	DESIGN
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9993689509122717	WITHOUT_CLASSIFICATION	6.31049087728139E-4	DESIGN
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9946354203901934	WITHOUT_CLASSIFICATION	0.00536457960980656	DESIGN
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999998836499074	WITHOUT_CLASSIFICATION	1.1635009252469428E-7	DESIGN
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.999999996612473	WITHOUT_CLASSIFICATION	3.3875270626583793E-9	DESIGN
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.999986864144214	WITHOUT_CLASSIFICATION	1.3135855786030303E-5	DESIGN
// source extensions	WITHOUT_CLASSIFICATION	0.9999976190375193	WITHOUT_CLASSIFICATION	2.380962480798429E-6	DESIGN
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9822872514466122	WITHOUT_CLASSIFICATION	0.01771274855338777	DESIGN
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9497510949787661	WITHOUT_CLASSIFICATION	0.05024890502123382	DESIGN
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999997293427637	WITHOUT_CLASSIFICATION	2.706572361980884E-7	DESIGN
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999906349164	WITHOUT_CLASSIFICATION	9.365083612556852E-9	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999994911513407	WITHOUT_CLASSIFICATION	5.088486593853387E-7	DESIGN
// extension extensions	WITHOUT_CLASSIFICATION	0.9999993423062	WITHOUT_CLASSIFICATION	6.576938000957929E-7	DESIGN
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999992387002518	WITHOUT_CLASSIFICATION	7.612997482373918E-7	DESIGN
// try all extensions	WITHOUT_CLASSIFICATION	0.9999994305364097	WITHOUT_CLASSIFICATION	5.694635902668374E-7	DESIGN
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999887080623	WITHOUT_CLASSIFICATION	1.1291937688505284E-8	DESIGN
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.999993532098089	WITHOUT_CLASSIFICATION	6.467901910968279E-6	DESIGN
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999129063302	WITHOUT_CLASSIFICATION	8.709366975404915E-8	DESIGN
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999345362935363	WITHOUT_CLASSIFICATION	6.546370646358261E-5	DESIGN
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999633790657726	WITHOUT_CLASSIFICATION	3.662093422739414E-5	DESIGN
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.999980539479154	WITHOUT_CLASSIFICATION	1.9460520846031974E-5	DESIGN
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999753418880022	WITHOUT_CLASSIFICATION	2.4658111997839263E-5	DESIGN
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999980571803	WITHOUT_CLASSIFICATION	1.9428197948467343E-9	DESIGN
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.999999993736816	WITHOUT_CLASSIFICATION	6.263183916289597E-9	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999781543105561	WITHOUT_CLASSIFICATION	2.1845689443801422E-5	DESIGN
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999999059313439	WITHOUT_CLASSIFICATION	9.406865609955298E-8	DESIGN
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999994168443596	WITHOUT_CLASSIFICATION	5.831556404216386E-7	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999814256819106	WITHOUT_CLASSIFICATION	1.8574318089480007E-5	DESIGN
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999814256819106	WITHOUT_CLASSIFICATION	1.8574318089480007E-5	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999991891466445	WITHOUT_CLASSIFICATION	8.108533555408059E-7	DESIGN
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999991891466445	WITHOUT_CLASSIFICATION	8.108533555408059E-7	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999982715309998	WITHOUT_CLASSIFICATION	1.728469000152344E-6	DESIGN
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999982715309998	WITHOUT_CLASSIFICATION	1.728469000152344E-6	DESIGN
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999999997854807	WITHOUT_CLASSIFICATION	2.1451930546325728E-9	DESIGN
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999651414871658	WITHOUT_CLASSIFICATION	3.485851283423761E-5	DESIGN
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.999999795362001	WITHOUT_CLASSIFICATION	2.046379989483617E-7	DESIGN
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999972182669091	WITHOUT_CLASSIFICATION	2.781733090885739E-6	DESIGN
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9998894304619202	WITHOUT_CLASSIFICATION	1.1056953807972729E-4	DESIGN
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9975364055829588	WITHOUT_CLASSIFICATION	0.002463594417041112	DESIGN
// signed short, native	WITHOUT_CLASSIFICATION	0.9995190764244155	WITHOUT_CLASSIFICATION	4.8092357558448124E-4	DESIGN
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999697898961	WITHOUT_CLASSIFICATION	3.021010381778552E-8	DESIGN
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9996959310606791	WITHOUT_CLASSIFICATION	3.0406893932082593E-4	DESIGN
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999896158332154	WITHOUT_CLASSIFICATION	1.03841667846282E-5	DESIGN
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999423224267182	WITHOUT_CLASSIFICATION	5.7677573281713506E-5	DESIGN
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999989033989773	WITHOUT_CLASSIFICATION	1.096601022626343E-6	DESIGN
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999992341759248	WITHOUT_CLASSIFICATION	7.658240751174148E-7	DESIGN
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9992315563142851	WITHOUT_CLASSIFICATION	7.684436857149676E-4	DESIGN
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9996603673467123	WITHOUT_CLASSIFICATION	3.3963265328776E-4	DESIGN
//            write('S');	WITHOUT_CLASSIFICATION	0.9999966842854746	WITHOUT_CLASSIFICATION	3.315714525449247E-6	DESIGN
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9883962636007737	WITHOUT_CLASSIFICATION	0.011603736399226175	DESIGN
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999728808167573	WITHOUT_CLASSIFICATION	2.7119183242698602E-5	DESIGN
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.999873018174364	WITHOUT_CLASSIFICATION	1.2698182563597972E-4	DESIGN
// w_symbol	WITHOUT_CLASSIFICATION	0.9999870005036	WITHOUT_CLASSIFICATION	1.2999496399990957E-5	DESIGN
// w_unique	WITHOUT_CLASSIFICATION	0.9999962977106587	WITHOUT_CLASSIFICATION	3.7022893413144676E-6	DESIGN
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999998432530454	WITHOUT_CLASSIFICATION	1.56746954595206E-7	DESIGN
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999897829072782	WITHOUT_CLASSIFICATION	1.0217092721720452E-5	DESIGN
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999953033231	WITHOUT_CLASSIFICATION	4.696676916007783E-9	DESIGN
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999645767234104	WITHOUT_CLASSIFICATION	3.542327658954521E-5	DESIGN
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999969510178042	WITHOUT_CLASSIFICATION	3.048982195853384E-6	DESIGN
// sic	WITHOUT_CLASSIFICATION	0.9998733784891655	WITHOUT_CLASSIFICATION	1.2662151083458207E-4	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999961548827841	WITHOUT_CLASSIFICATION	3.8451172158855595E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999961548827841	WITHOUT_CLASSIFICATION	3.8451172158855595E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999961548827841	WITHOUT_CLASSIFICATION	3.8451172158855595E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997766845435837	WITHOUT_CLASSIFICATION	2.233154564163004E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997766845435837	WITHOUT_CLASSIFICATION	2.233154564163004E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999762100812425	WITHOUT_CLASSIFICATION	2.378991875753904E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999762100812425	WITHOUT_CLASSIFICATION	2.378991875753904E-5	DESIGN
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.999999998192661	WITHOUT_CLASSIFICATION	1.8073390236588765E-9	DESIGN
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.6064015181190454	WITHOUT_CLASSIFICATION	0.3935984818809546	DESIGN
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9993133706620455	WITHOUT_CLASSIFICATION	6.866293379544895E-4	DESIGN
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999945974860662	WITHOUT_CLASSIFICATION	5.40251393380989E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999961548827841	WITHOUT_CLASSIFICATION	3.8451172158855595E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999961548827841	WITHOUT_CLASSIFICATION	3.8451172158855595E-6	DESIGN
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999961548827841	WITHOUT_CLASSIFICATION	3.8451172158855595E-6	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997766845435837	WITHOUT_CLASSIFICATION	2.233154564163004E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997766845435837	WITHOUT_CLASSIFICATION	2.233154564163004E-4	DESIGN
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997766845435837	WITHOUT_CLASSIFICATION	2.233154564163004E-4	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999762100812425	WITHOUT_CLASSIFICATION	2.378991875753904E-5	DESIGN
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999762100812425	WITHOUT_CLASSIFICATION	2.378991875753904E-5	DESIGN
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999036319411	WITHOUT_CLASSIFICATION	9.636805891853384E-8	DESIGN
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9979151122340504	WITHOUT_CLASSIFICATION	0.002084887765949585	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999895116652426	WITHOUT_CLASSIFICATION	1.0488334757365134E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999895116652426	WITHOUT_CLASSIFICATION	1.0488334757365134E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999895116652426	WITHOUT_CLASSIFICATION	1.0488334757365134E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999895116652426	WITHOUT_CLASSIFICATION	1.0488334757365134E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999895116652426	WITHOUT_CLASSIFICATION	1.0488334757365134E-5	DESIGN
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999213788593578	WITHOUT_CLASSIFICATION	7.862114064212225E-5	DESIGN
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999997541986687	WITHOUT_CLASSIFICATION	2.4580133132718765E-7	DESIGN
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9997674999883298	WITHOUT_CLASSIFICATION	2.325000116702068E-4	DESIGN
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999995696671231	WITHOUT_CLASSIFICATION	4.303328768619014E-7	DESIGN
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999697845773998	WITHOUT_CLASSIFICATION	3.021542260021752E-5	DESIGN
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999615565826719	WITHOUT_CLASSIFICATION	3.8443417328108795E-5	DESIGN
// not enough bytes	WITHOUT_CLASSIFICATION	0.99992287485202	WITHOUT_CLASSIFICATION	7.712514797992923E-5	DESIGN
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999996796540478	WITHOUT_CLASSIFICATION	3.203459521755133E-7	DESIGN
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999815187168125	WITHOUT_CLASSIFICATION	1.8481283187439595E-5	DESIGN
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999983401957065	WITHOUT_CLASSIFICATION	1.6598042935133964E-6	DESIGN
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999950911429759	WITHOUT_CLASSIFICATION	4.90885702408802E-6	DESIGN
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999807067257	WITHOUT_CLASSIFICATION	1.9293274301516972E-8	DESIGN
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999717342910984	WITHOUT_CLASSIFICATION	2.8265708901650883E-5	DESIGN
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999941867476199	WITHOUT_CLASSIFICATION	5.8132523800824065E-6	DESIGN
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9961059130270185	WITHOUT_CLASSIFICATION	0.0038940869729815943	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9958715819438833	WITHOUT_CLASSIFICATION	0.004128418056116769	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9958715819438833	WITHOUT_CLASSIFICATION	0.004128418056116769	DESIGN
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9958715819438833	WITHOUT_CLASSIFICATION	0.004128418056116769	DESIGN
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9996628247956421	WITHOUT_CLASSIFICATION	3.371752043579907E-4	DESIGN
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9996641774433144	WITHOUT_CLASSIFICATION	3.358225566856725E-4	DESIGN
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999987619769932	WITHOUT_CLASSIFICATION	1.2380230068177973E-6	DESIGN
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999955209802	WITHOUT_CLASSIFICATION	4.479019818932504E-9	DESIGN
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999620722465	WITHOUT_CLASSIFICATION	3.792775339831158E-8	DESIGN
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9998336298469411	WITHOUT_CLASSIFICATION	1.663701530589057E-4	DESIGN
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999920335158063	WITHOUT_CLASSIFICATION	7.966484193625012E-6	DESIGN
// single precision, native	WITHOUT_CLASSIFICATION	0.9994660805773656	WITHOUT_CLASSIFICATION	5.339194226343196E-4	DESIGN
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999891818469711	WITHOUT_CLASSIFICATION	1.081815302889651E-4	DESIGN
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999985867039001	WITHOUT_CLASSIFICATION	1.4132960999109505E-6	DESIGN
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999172082171	WITHOUT_CLASSIFICATION	8.279178285877257E-8	DESIGN
// double precision, native	WITHOUT_CLASSIFICATION	0.9999909394034452	WITHOUT_CLASSIFICATION	9.060596554818151E-6	DESIGN
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999275277142043	WITHOUT_CLASSIFICATION	7.247228579565809E-5	DESIGN
// signed char	WITHOUT_CLASSIFICATION	0.9999991753174503	WITHOUT_CLASSIFICATION	8.246825496053492E-7	DESIGN
// unsigned char	WITHOUT_CLASSIFICATION	0.9999987381641108	WITHOUT_CLASSIFICATION	1.2618358892646516E-6	DESIGN
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999935833995534	WITHOUT_CLASSIFICATION	6.416600446723015E-6	DESIGN
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999998615460259	WITHOUT_CLASSIFICATION	1.3845397415199815E-7	DESIGN
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999684924943454	WITHOUT_CLASSIFICATION	3.150750565463302E-5	DESIGN
// int, native	WITHOUT_CLASSIFICATION	0.9999873342218778	WITHOUT_CLASSIFICATION	1.266577812218453E-5	DESIGN
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999957543351895	WITHOUT_CLASSIFICATION	4.245664810580369E-6	DESIGN
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999024595191683	WITHOUT_CLASSIFICATION	9.754048083172874E-5	DESIGN
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999941065737473	WITHOUT_CLASSIFICATION	5.893426252677048E-6	DESIGN
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.8300576823924682	WITHOUT_CLASSIFICATION	0.1699423176075317	DESIGN
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999976278352074	WITHOUT_CLASSIFICATION	2.372164792697428E-6	DESIGN
// obtain a	WITHOUT_CLASSIFICATION	0.9999993238615653	WITHOUT_CLASSIFICATION	6.761384346694172E-7	DESIGN
// obtain b	WITHOUT_CLASSIFICATION	0.9999988335540503	WITHOUT_CLASSIFICATION	1.1664459496517113E-6	DESIGN
// obtain c	WITHOUT_CLASSIFICATION	0.9999996092723987	WITHOUT_CLASSIFICATION	3.907276013323965E-7	DESIGN
// obtain d	WITHOUT_CLASSIFICATION	0.9999978117188212	WITHOUT_CLASSIFICATION	2.1882811789159145E-6	DESIGN
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999990755434465	WITHOUT_CLASSIFICATION	9.244565535403463E-7	DESIGN
/* 1 */	WITHOUT_CLASSIFICATION	0.9999934979024229	WITHOUT_CLASSIFICATION	6.502097577105176E-6	DESIGN
/* 2 */	WITHOUT_CLASSIFICATION	0.9999905725323933	WITHOUT_CLASSIFICATION	9.427467606676395E-6	DESIGN
/* 3 */	WITHOUT_CLASSIFICATION	0.9999707985172969	WITHOUT_CLASSIFICATION	2.9201482703109296E-5	DESIGN
/* 4 */	WITHOUT_CLASSIFICATION	0.9999854064145708	WITHOUT_CLASSIFICATION	1.4593585429312248E-5	DESIGN
/* 5 */	WITHOUT_CLASSIFICATION	0.9999858090640572	WITHOUT_CLASSIFICATION	1.4190935942836984E-5	DESIGN
/* 6 */	WITHOUT_CLASSIFICATION	0.999986677444725	WITHOUT_CLASSIFICATION	1.3322555275097233E-5	DESIGN
/* 7 */	WITHOUT_CLASSIFICATION	0.9999877362312992	WITHOUT_CLASSIFICATION	1.2263768700762836E-5	DESIGN
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9996072876011803	WITHOUT_CLASSIFICATION	3.9271239881969746E-4	DESIGN
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9961033723672128	WITHOUT_CLASSIFICATION	0.0038966276327872494	DESIGN
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999998674355132	WITHOUT_CLASSIFICATION	1.3256448689302267E-7	DESIGN
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999982174646554	WITHOUT_CLASSIFICATION	1.7825353446289247E-6	DESIGN
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999997542945415	WITHOUT_CLASSIFICATION	2.4570545851737035E-7	DESIGN
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999348917647242	WITHOUT_CLASSIFICATION	6.510823527587333E-5	DESIGN
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9980325617224163	WITHOUT_CLASSIFICATION	0.0019674382775836893	DESIGN
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999955557277168	WITHOUT_CLASSIFICATION	4.4442722831032545E-6	DESIGN
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999943262186641	WITHOUT_CLASSIFICATION	5.673781335873221E-6	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.999075514955643	WITHOUT_CLASSIFICATION	9.2448504435713E-4	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999997564463067	WITHOUT_CLASSIFICATION	2.4355369330836074E-7	DESIGN
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999997564463067	WITHOUT_CLASSIFICATION	2.4355369330836074E-7	DESIGN
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9992069493889078	WITHOUT_CLASSIFICATION	7.930506110923182E-4	DESIGN
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9998542521993172	WITHOUT_CLASSIFICATION	1.457478006827426E-4	DESIGN
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9998407691696533	WITHOUT_CLASSIFICATION	1.5923083034673606E-4	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999000529256453	WITHOUT_CLASSIFICATION	9.994707435462197E-5	DESIGN
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9996227142243443	WITHOUT_CLASSIFICATION	3.7728577565561547E-4	DESIGN
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999993571503621	WITHOUT_CLASSIFICATION	6.428496379636055E-7	DESIGN
// are we recursing?	WITHOUT_CLASSIFICATION	0.9877285113746699	WITHOUT_CLASSIFICATION	0.012271488625330106	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999995165133321	WITHOUT_CLASSIFICATION	4.8348666789628E-7	DESIGN
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999592735710038	WITHOUT_CLASSIFICATION	4.07264289961713E-5	DESIGN
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999993837015074	WITHOUT_CLASSIFICATION	6.162984926865976E-7	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999868291805629	WITHOUT_CLASSIFICATION	1.317081943709005E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999868291805629	WITHOUT_CLASSIFICATION	1.317081943709005E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999868291805629	WITHOUT_CLASSIFICATION	1.317081943709005E-5	DESIGN
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999868291805629	WITHOUT_CLASSIFICATION	1.317081943709005E-5	DESIGN
// try both	WITHOUT_CLASSIFICATION	0.9999885945994201	WITHOUT_CLASSIFICATION	1.1405400579746079E-5	DESIGN
// just unix	WITHOUT_CLASSIFICATION	0.9999856784235663	WITHOUT_CLASSIFICATION	1.432157643371447E-5	DESIGN
// just windows	WITHOUT_CLASSIFICATION	0.9999856057267092	WITHOUT_CLASSIFICATION	1.4394273290702642E-5	DESIGN
// neither	WITHOUT_CLASSIFICATION	0.9987439056959564	WITHOUT_CLASSIFICATION	0.001256094304043599	DESIGN
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.7631450181715821	DESIGN	0.23685498182841788	WITHOUT_CLASSIFICATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999177031311	WITHOUT_CLASSIFICATION	8.229686891009227E-8	DESIGN
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.99999994053175	WITHOUT_CLASSIFICATION	5.946824986739913E-8	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998105320145	WITHOUT_CLASSIFICATION	1.8946798550646714E-7	DESIGN
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998105320145	WITHOUT_CLASSIFICATION	1.8946798550646714E-7	DESIGN
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999996745194225	WITHOUT_CLASSIFICATION	3.254805775128625E-7	DESIGN
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999938593078592	WITHOUT_CLASSIFICATION	6.1406921407347284E-6	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999998854990024	WITHOUT_CLASSIFICATION	1.1450099761221608E-7	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999994544350047	WITHOUT_CLASSIFICATION	5.455649952575008E-7	DESIGN
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999994544350047	WITHOUT_CLASSIFICATION	5.455649952575008E-7	DESIGN
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999998918477603	WITHOUT_CLASSIFICATION	1.0815223978375881E-7	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9998968242570896	WITHOUT_CLASSIFICATION	1.0317574291043624E-4	DESIGN
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9998968242570896	WITHOUT_CLASSIFICATION	1.0317574291043624E-4	DESIGN
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999998889967598	WITHOUT_CLASSIFICATION	1.1100324022982206E-7	DESIGN
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999906035333	WITHOUT_CLASSIFICATION	9.396466792036923E-9	DESIGN
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999999067125	WITHOUT_CLASSIFICATION	9.328756473552774E-11	DESIGN
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9989084240258215	WITHOUT_CLASSIFICATION	0.0010915759741785584	DESIGN
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.999893267106885	WITHOUT_CLASSIFICATION	1.067328931150204E-4	DESIGN
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999997177060873	WITHOUT_CLASSIFICATION	2.822939126174726E-7	DESIGN
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9913051617160434	WITHOUT_CLASSIFICATION	0.008694838283956658	DESIGN
//sequential	WITHOUT_CLASSIFICATION	0.9999742362201052	WITHOUT_CLASSIFICATION	2.5763779894865543E-5	DESIGN
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999999633378	WITHOUT_CLASSIFICATION	3.666211906457761E-11	DESIGN
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999997399281743	WITHOUT_CLASSIFICATION	2.60071825721406E-7	DESIGN
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999773829352	WITHOUT_CLASSIFICATION	2.2617064806634128E-8	DESIGN
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999790624404454	WITHOUT_CLASSIFICATION	2.093755955463964E-5	DESIGN
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999733894395455	WITHOUT_CLASSIFICATION	2.6610560454586956E-5	DESIGN
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999862940224553	WITHOUT_CLASSIFICATION	1.3705977544602165E-5	DESIGN
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999999536902526	WITHOUT_CLASSIFICATION	4.630974740091003E-8	DESIGN
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.7455184828039182	WITHOUT_CLASSIFICATION	0.2544815171960818	DESIGN
// Args	WITHOUT_CLASSIFICATION	0.999995826879456	WITHOUT_CLASSIFICATION	4.17312054396404E-6	DESIGN
// static methods only	WITHOUT_CLASSIFICATION	0.9998973632539456	WITHOUT_CLASSIFICATION	1.0263674605439107E-4	DESIGN
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999787151511	WITHOUT_CLASSIFICATION	2.1284848936937557E-8	DESIGN
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.8251110462674364	WITHOUT_CLASSIFICATION	0.17488895373256355	DESIGN
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999990840070059	WITHOUT_CLASSIFICATION	9.159929940433127E-7	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999961607873857	WITHOUT_CLASSIFICATION	3.839212614312702E-6	DESIGN
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999996606242217	WITHOUT_CLASSIFICATION	3.3937577825705877E-7	DESIGN
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9996599122623605	WITHOUT_CLASSIFICATION	3.400877376394605E-4	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9997893548377234	WITHOUT_CLASSIFICATION	2.1064516227669103E-4	DESIGN
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9949916563416279	WITHOUT_CLASSIFICATION	0.0050083436583721955	DESIGN
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999844009154845	WITHOUT_CLASSIFICATION	1.559908451550861E-5	DESIGN
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999992277269506	WITHOUT_CLASSIFICATION	7.72273049388044E-7	DESIGN
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9982032325791615	WITHOUT_CLASSIFICATION	0.001796767420838422	DESIGN
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.999961070631974	WITHOUT_CLASSIFICATION	3.892936802599624E-5	DESIGN
// ..	WITHOUT_CLASSIFICATION	0.9999881342450416	WITHOUT_CLASSIFICATION	1.1865754958330342E-5	DESIGN
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999999679531728	WITHOUT_CLASSIFICATION	3.2046827203823024E-7	DESIGN
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999994524857264	DESIGN	5.475142735222504E-7	WITHOUT_CLASSIFICATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.99998810335105	WITHOUT_CLASSIFICATION	1.1896648949936124E-5	DESIGN
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999997227774763	WITHOUT_CLASSIFICATION	2.772225237386719E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9952532904021621	WITHOUT_CLASSIFICATION	0.00474670959783791	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999983601580557	WITHOUT_CLASSIFICATION	1.6398419443773617E-6	DESIGN
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999991683624	WITHOUT_CLASSIFICATION	8.316376328757263E-10	DESIGN
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999998456155615	WITHOUT_CLASSIFICATION	1.543844384982945E-7	DESIGN
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9952532904021621	WITHOUT_CLASSIFICATION	0.00474670959783791	DESIGN
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999983601580557	WITHOUT_CLASSIFICATION	1.6398419443773617E-6	DESIGN
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999996243175335	WITHOUT_CLASSIFICATION	3.7568246645731556E-7	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999806476328927	WITHOUT_CLASSIFICATION	1.9352367107275992E-5	DESIGN
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999806476328927	WITHOUT_CLASSIFICATION	1.9352367107275992E-5	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999996509541734	WITHOUT_CLASSIFICATION	3.4904582656631227E-7	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9883550634078521	WITHOUT_CLASSIFICATION	0.011644936592148023	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999764520837	WITHOUT_CLASSIFICATION	2.3547916354293695E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999726123439	WITHOUT_CLASSIFICATION	2.7387656063800172E-8	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9992669344899413	WITHOUT_CLASSIFICATION	7.330655100586437E-4	DESIGN
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9687937756825534	WITHOUT_CLASSIFICATION	0.03120622431744654	DESIGN
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999816714058904	WITHOUT_CLASSIFICATION	1.8328594109567926E-5	DESIGN
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999995548373591	WITHOUT_CLASSIFICATION	4.4516264089076324E-7	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996300171518996	WITHOUT_CLASSIFICATION	3.6998284810048826E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999949765596627	WITHOUT_CLASSIFICATION	5.023440337263846E-6	DESIGN
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999985852872527	WITHOUT_CLASSIFICATION	1.4147127473579391E-6	DESIGN
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999969452314027	WITHOUT_CLASSIFICATION	3.054768597250164E-6	DESIGN
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999997535432994	WITHOUT_CLASSIFICATION	2.464567006229476E-7	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999002931281	WITHOUT_CLASSIFICATION	9.970687191944667E-8	DESIGN
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999002931281	WITHOUT_CLASSIFICATION	9.970687191944667E-8	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998439948516271	WITHOUT_CLASSIFICATION	1.5600514837281457E-4	DESIGN
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998439948516271	WITHOUT_CLASSIFICATION	1.5600514837281457E-4	DESIGN
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999995960213961	WITHOUT_CLASSIFICATION	4.0397860394542865E-7	DESIGN
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.99999691843309	WITHOUT_CLASSIFICATION	3.0815669099713837E-6	DESIGN
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999960656542763	WITHOUT_CLASSIFICATION	3.934345723683683E-6	DESIGN
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999954879889447	WITHOUT_CLASSIFICATION	4.51201105526604E-6	DESIGN
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999986379532263	WITHOUT_CLASSIFICATION	1.3620467736947538E-6	DESIGN
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.999999996751794	WITHOUT_CLASSIFICATION	3.2482060150266406E-9	DESIGN
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999764520837	WITHOUT_CLASSIFICATION	2.3547916354293695E-8	DESIGN
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999726123439	WITHOUT_CLASSIFICATION	2.7387656063800172E-8	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996300171518996	WITHOUT_CLASSIFICATION	3.6998284810048826E-4	DESIGN
// '.'	WITHOUT_CLASSIFICATION	0.9999949765596627	WITHOUT_CLASSIFICATION	5.023440337263846E-6	DESIGN
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999987838611379	WITHOUT_CLASSIFICATION	1.2161388621034095E-5	DESIGN
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999897545802	WITHOUT_CLASSIFICATION	1.024541998451265E-8	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999894681407541	WITHOUT_CLASSIFICATION	1.0531859246046552E-5	DESIGN
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999993488388667	WITHOUT_CLASSIFICATION	6.511611334148343E-7	DESIGN
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999999747663176	WITHOUT_CLASSIFICATION	2.5233682458272718E-8	DESIGN
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999998182883462	WITHOUT_CLASSIFICATION	1.8171165378205236E-7	DESIGN
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999952948760495	WITHOUT_CLASSIFICATION	4.705123950414033E-6	DESIGN
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999998678235713	WITHOUT_CLASSIFICATION	1.321764287051319E-6	DESIGN
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999999943309659	WITHOUT_CLASSIFICATION	5.66903421467101E-9	DESIGN
// negative values	WITHOUT_CLASSIFICATION	0.9999536773244115	WITHOUT_CLASSIFICATION	4.632267558854954E-5	DESIGN
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999919650978	WITHOUT_CLASSIFICATION	8.034902273761263E-9	DESIGN
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999783573787	WITHOUT_CLASSIFICATION	2.1642621249607986E-8	DESIGN
// no such luck...	WITHOUT_CLASSIFICATION	0.8236346978780029	WITHOUT_CLASSIFICATION	0.17636530212199705	DESIGN
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999883184918439	WITHOUT_CLASSIFICATION	1.1681508156046796E-5	DESIGN
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9994206029847348	WITHOUT_CLASSIFICATION	5.793970152651209E-4	DESIGN
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9988000754058394	WITHOUT_CLASSIFICATION	0.0011999245941605435	DESIGN
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999893268944416	WITHOUT_CLASSIFICATION	1.0673105558439887E-5	DESIGN
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999908204776975	WITHOUT_CLASSIFICATION	9.179522302432102E-6	DESIGN
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999956468996137	WITHOUT_CLASSIFICATION	4.353100386306904E-5	DESIGN
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999971850364832	WITHOUT_CLASSIFICATION	2.8149635168697406E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999942126472564	WITHOUT_CLASSIFICATION	5.787352743567736E-6	DESIGN
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999942126472564	WITHOUT_CLASSIFICATION	5.787352743567736E-6	DESIGN
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999999924982583	WITHOUT_CLASSIFICATION	7.501741609442674E-9	DESIGN
/* Tempering */	WITHOUT_CLASSIFICATION	0.999999219457728	WITHOUT_CLASSIFICATION	7.805422719803104E-7	DESIGN
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.999999833608818	WITHOUT_CLASSIFICATION	1.6639118203443805E-7	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999898881087	WITHOUT_CLASSIFICATION	1.0111891403016225E-8	DESIGN
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999898881087	WITHOUT_CLASSIFICATION	1.0111891403016225E-8	DESIGN
// \v	WITHOUT_CLASSIFICATION	0.9999894681407541	WITHOUT_CLASSIFICATION	1.0531859246046552E-5	DESIGN
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999992633730684	WITHOUT_CLASSIFICATION	7.366269316202417E-7	DESIGN
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999743401558	WITHOUT_CLASSIFICATION	2.565984427791851E-8	DESIGN
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999979397688	WITHOUT_CLASSIFICATION	2.0602311850059837E-9	DESIGN
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999972658025	WITHOUT_CLASSIFICATION	2.7341976216692415E-9	DESIGN
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999781586301	WITHOUT_CLASSIFICATION	2.1841370016870867E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988650814476515	WITHOUT_CLASSIFICATION	0.001134918552348537	DESIGN
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.99999998053808	WITHOUT_CLASSIFICATION	1.946191995844395E-8	DESIGN
// no number	WITHOUT_CLASSIFICATION	0.9999447631259716	WITHOUT_CLASSIFICATION	5.523687402850055E-5	DESIGN
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999998529744373	WITHOUT_CLASSIFICATION	1.470255627776461E-7	DESIGN
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999989304777386	WITHOUT_CLASSIFICATION	1.0695222613970582E-6	DESIGN
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999174646840191	WITHOUT_CLASSIFICATION	8.2535315980978E-5	DESIGN
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9998169370886653	WITHOUT_CLASSIFICATION	1.8306291133471226E-4	DESIGN
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999922539253019	WITHOUT_CLASSIFICATION	7.746074698133878E-6	DESIGN
// goto next bucket	WITHOUT_CLASSIFICATION	0.9987418552934682	WITHOUT_CLASSIFICATION	0.0012581447065319398	DESIGN
// we reached the end	WITHOUT_CLASSIFICATION	0.9999912117696046	WITHOUT_CLASSIFICATION	8.78823039543151E-6	DESIGN
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999313155254554	WITHOUT_CLASSIFICATION	6.86844745445578E-5	DESIGN
// states	WITHOUT_CLASSIFICATION	0.9999934172852171	WITHOUT_CLASSIFICATION	6.582714782819023E-6	DESIGN
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999986947089325	WITHOUT_CLASSIFICATION	1.3052910675538678E-6	DESIGN
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999999969388	WITHOUT_CLASSIFICATION	3.0612227592939446E-12	DESIGN
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999999996501	WITHOUT_CLASSIFICATION	3.4990852225751764E-13	DESIGN
// drop through for sign	WITHOUT_CLASSIFICATION	0.9998395494722578	WITHOUT_CLASSIFICATION	1.6045052774212785E-4	DESIGN
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9616506308929332	WITHOUT_CLASSIFICATION	0.03834936910706673	DESIGN
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.999992229437693	WITHOUT_CLASSIFICATION	7.770562307035475E-6	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999676502876	WITHOUT_CLASSIFICATION	3.2349712400045094E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999590518025	WITHOUT_CLASSIFICATION	4.094819741843232E-8	DESIGN
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999865877164	WITHOUT_CLASSIFICATION	1.3412283690147964E-8	DESIGN
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999999403389159	WITHOUT_CLASSIFICATION	5.966108397899446E-8	DESIGN
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999991786159	WITHOUT_CLASSIFICATION	8.213840598632097E-10	DESIGN
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999934099129107	WITHOUT_CLASSIFICATION	6.590087089298934E-6	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999994333757	WITHOUT_CLASSIFICATION	5.666243950082638E-10	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999994333757	WITHOUT_CLASSIFICATION	5.666243950082638E-10	DESIGN
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999971538715906	WITHOUT_CLASSIFICATION	2.8461284093534234E-6	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999993860025475	WITHOUT_CLASSIFICATION	6.139974526469631E-7	DESIGN
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999993860025475	WITHOUT_CLASSIFICATION	6.139974526469631E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998947897227	WITHOUT_CLASSIFICATION	1.0521027730360997E-7	DESIGN
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998947897227	WITHOUT_CLASSIFICATION	1.0521027730360997E-7	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999689314894205	WITHOUT_CLASSIFICATION	3.106851057966426E-5	DESIGN
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999561564867	WITHOUT_CLASSIFICATION	4.384351315652556E-8	DESIGN
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999982682890991	WITHOUT_CLASSIFICATION	1.73171090091885E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999913327473089	WITHOUT_CLASSIFICATION	8.667252691085176E-6	DESIGN
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999964730936495	WITHOUT_CLASSIFICATION	3.526906350471869E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991626499967	WITHOUT_CLASSIFICATION	8.373500032124074E-7	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991626499967	WITHOUT_CLASSIFICATION	8.373500032124074E-7	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999676502876	WITHOUT_CLASSIFICATION	3.2349712400045094E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999676502876	WITHOUT_CLASSIFICATION	3.2349712400045094E-8	DESIGN
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999676502876	WITHOUT_CLASSIFICATION	3.2349712400045094E-8	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999590518025	WITHOUT_CLASSIFICATION	4.094819741843232E-8	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999994333757	WITHOUT_CLASSIFICATION	5.666243950082638E-10	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999994333757	WITHOUT_CLASSIFICATION	5.666243950082638E-10	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999994333757	WITHOUT_CLASSIFICATION	5.666243950082638E-10	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999689314894205	WITHOUT_CLASSIFICATION	3.106851057966426E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999689314894205	WITHOUT_CLASSIFICATION	3.106851057966426E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999689314894205	WITHOUT_CLASSIFICATION	3.106851057966426E-5	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999913327473089	WITHOUT_CLASSIFICATION	8.667252691085176E-6	DESIGN
// switch // if	WITHOUT_CLASSIFICATION	0.9999913327473089	WITHOUT_CLASSIFICATION	8.667252691085176E-6	DESIGN
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999582677494849	WITHOUT_CLASSIFICATION	4.1732250515012834E-5	DESIGN
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999851468689931	WITHOUT_CLASSIFICATION	1.4853131006953847E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999984997110519	WITHOUT_CLASSIFICATION	1.500288948180967E-6	DESIGN
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9979736892137372	DESIGN	0.002026310786262846	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9989634189803631	WITHOUT_CLASSIFICATION	0.0010365810196368644	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9999052240659417	WITHOUT_CLASSIFICATION	9.477593405828616E-5	DESIGN
// too big for us	WITHOUT_CLASSIFICATION	0.9999052240659417	WITHOUT_CLASSIFICATION	9.477593405828616E-5	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999977152920308	WITHOUT_CLASSIFICATION	2.2847079691953587E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988650814476515	WITHOUT_CLASSIFICATION	0.001134918552348537	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988650814476515	WITHOUT_CLASSIFICATION	0.001134918552348537	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988650814476515	WITHOUT_CLASSIFICATION	0.001134918552348537	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988650814476515	WITHOUT_CLASSIFICATION	0.001134918552348537	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988650814476515	WITHOUT_CLASSIFICATION	0.001134918552348537	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999243939146	WITHOUT_CLASSIFICATION	7.560608540246387E-8	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999243939146	WITHOUT_CLASSIFICATION	7.560608540246387E-8	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999243939146	WITHOUT_CLASSIFICATION	7.560608540246387E-8	DESIGN
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999923382743279	WITHOUT_CLASSIFICATION	7.661725672091685E-6	DESIGN
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999962882179255	WITHOUT_CLASSIFICATION	3.7117820744358795E-6	DESIGN
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999590518025	WITHOUT_CLASSIFICATION	4.094819741843232E-8	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999689314894205	WITHOUT_CLASSIFICATION	3.106851057966426E-5	DESIGN
// switch // for	WITHOUT_CLASSIFICATION	0.9999689314894205	WITHOUT_CLASSIFICATION	3.106851057966426E-5	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988650814476515	WITHOUT_CLASSIFICATION	0.001134918552348537	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988650814476515	WITHOUT_CLASSIFICATION	0.001134918552348537	DESIGN
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999243939146	WITHOUT_CLASSIFICATION	7.560608540246387E-8	DESIGN
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999977152920308	WITHOUT_CLASSIFICATION	2.2847079691953587E-5	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999839457581	WITHOUT_CLASSIFICATION	1.605424202505917E-8	DESIGN
// switch //while	WITHOUT_CLASSIFICATION	0.9999896630589505	WITHOUT_CLASSIFICATION	1.0336941049366832E-5	DESIGN
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999177566584776	WITHOUT_CLASSIFICATION	8.22433415223206E-5	DESIGN
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9995746484284557	WITHOUT_CLASSIFICATION	4.253515715443187E-4	DESIGN
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999996102527494	WITHOUT_CLASSIFICATION	3.8974725067566477E-7	DESIGN
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999993984749719	WITHOUT_CLASSIFICATION	6.015250280894123E-7	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999629529075977	WITHOUT_CLASSIFICATION	3.704709240228031E-5	DESIGN
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9970895535382992	WITHOUT_CLASSIFICATION	0.002910446461700742	DESIGN
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999303342877001	WITHOUT_CLASSIFICATION	6.966571229996695E-5	DESIGN
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999997572211237	WITHOUT_CLASSIFICATION	2.4277887629983935E-6	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9553645471401001	WITHOUT_CLASSIFICATION	0.04463545285989993	DESIGN
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999921629946	WITHOUT_CLASSIFICATION	7.83700547964325E-9	DESIGN
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999804341022355	WITHOUT_CLASSIFICATION	1.9565897764532972E-5	DESIGN
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999948090296686	WITHOUT_CLASSIFICATION	5.190970331379685E-6	DESIGN
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999993336296696	WITHOUT_CLASSIFICATION	6.663703303256011E-7	DESIGN
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999458039995358	WITHOUT_CLASSIFICATION	5.419600046411749E-5	DESIGN
// advance to first entry	WITHOUT_CLASSIFICATION	0.9998850534332907	WITHOUT_CLASSIFICATION	1.149465667093396E-4	DESIGN
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999985164532169	WITHOUT_CLASSIFICATION	1.4835467830440434E-6	DESIGN
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999234836343249	WITHOUT_CLASSIFICATION	7.651636567504452E-5	DESIGN
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.999999838353743	WITHOUT_CLASSIFICATION	1.6164625702722364E-7	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999877639044263	WITHOUT_CLASSIFICATION	1.2236095573570496E-5	DESIGN
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999577845816	WITHOUT_CLASSIFICATION	4.221541845706354E-8	DESIGN
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999944646446	WITHOUT_CLASSIFICATION	5.535355417311446E-9	DESIGN
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999966499112557	WITHOUT_CLASSIFICATION	3.35008874439304E-6	DESIGN
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999806537919951	WITHOUT_CLASSIFICATION	1.9346208004953326E-5	DESIGN
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9887048740123796	WITHOUT_CLASSIFICATION	0.01129512598762044	DESIGN
// unread back	WITHOUT_CLASSIFICATION	0.9999907356416148	WITHOUT_CLASSIFICATION	9.264358385268442E-6	DESIGN
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999998618136	WITHOUT_CLASSIFICATION	1.3818637313350893E-10	DESIGN
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999816165106095	WITHOUT_CLASSIFICATION	1.8383489390548024E-5	DESIGN
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999996979821526	WITHOUT_CLASSIFICATION	3.0201784737256694E-7	DESIGN
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999691551901	WITHOUT_CLASSIFICATION	3.0844809828367807E-8	DESIGN
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999918396615	WITHOUT_CLASSIFICATION	8.160338416113593E-9	DESIGN
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999874675609	WITHOUT_CLASSIFICATION	1.2532438980502146E-8	DESIGN
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999790460979	WITHOUT_CLASSIFICATION	2.0953902064718908E-8	DESIGN
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999839457581	WITHOUT_CLASSIFICATION	1.605424202505917E-8	DESIGN
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999994535463	WITHOUT_CLASSIFICATION	5.464536994506383E-10	DESIGN
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999973843839772	WITHOUT_CLASSIFICATION	2.6156160227408462E-6	DESIGN
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9592681441520128	WITHOUT_CLASSIFICATION	0.04073185584798719	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999170591738415	WITHOUT_CLASSIFICATION	8.294082615841574E-5	DESIGN
// silence	WITHOUT_CLASSIFICATION	0.9999170591738415	WITHOUT_CLASSIFICATION	8.294082615841574E-5	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999451947539625	WITHOUT_CLASSIFICATION	5.480524603739295E-5	DESIGN
// Don't bother	WITHOUT_CLASSIFICATION	0.9999451947539625	WITHOUT_CLASSIFICATION	5.480524603739295E-5	DESIGN
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999821779296	WITHOUT_CLASSIFICATION	1.78220703953355E-8	DESIGN
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999925416783857	WITHOUT_CLASSIFICATION	7.458321614217049E-6	DESIGN
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999766857985	WITHOUT_CLASSIFICATION	2.3314201474201053E-8	DESIGN
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999997924071262	WITHOUT_CLASSIFICATION	2.0759287386570713E-7	DESIGN
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999943119499	WITHOUT_CLASSIFICATION	5.688050097957657E-9	DESIGN
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999352595658347	WITHOUT_CLASSIFICATION	6.474043416523376E-5	DESIGN
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999186164676	WITHOUT_CLASSIFICATION	8.138353232524245E-8	DESIGN
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999999992878304	WITHOUT_CLASSIFICATION	7.12169597930286E-9	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999731623880525	WITHOUT_CLASSIFICATION	2.6837611947584878E-5	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999999968982677	WITHOUT_CLASSIFICATION	3.1017322948400546E-8	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.999999998547184	WITHOUT_CLASSIFICATION	1.4528159549462552E-9	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999996170783465	WITHOUT_CLASSIFICATION	3.8292165353400346E-7	DESIGN
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999996170783465	WITHOUT_CLASSIFICATION	3.8292165353400346E-7	DESIGN
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999999681966	WITHOUT_CLASSIFICATION	3.180346944591934E-11	DESIGN
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.999999998394381	WITHOUT_CLASSIFICATION	1.6056189249644486E-9	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999987657430646	WITHOUT_CLASSIFICATION	1.2342569354559643E-6	DESIGN
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999987657430646	WITHOUT_CLASSIFICATION	1.2342569354559643E-6	DESIGN
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999995629826	WITHOUT_CLASSIFICATION	4.3701735671427295E-10	DESIGN
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999820537534	WITHOUT_CLASSIFICATION	1.794624660679377E-8	DESIGN
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9945233785501983	WITHOUT_CLASSIFICATION	0.005476621449801677	DESIGN
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999992997756916	WITHOUT_CLASSIFICATION	7.002243083783185E-7	DESIGN
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999467000406	WITHOUT_CLASSIFICATION	5.3299959451021266E-8	DESIGN
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9958212070726778	WITHOUT_CLASSIFICATION	0.004178792927322088	DESIGN
// save the ungot	WITHOUT_CLASSIFICATION	0.9998915362633339	WITHOUT_CLASSIFICATION	1.0846373666608201E-4	DESIGN
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999807617062082	WITHOUT_CLASSIFICATION	1.923829379188678E-5	DESIGN
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.999999315829693	WITHOUT_CLASSIFICATION	6.841703069603978E-7	DESIGN
// flush first	WITHOUT_CLASSIFICATION	0.9999993966239122	WITHOUT_CLASSIFICATION	6.033760877780218E-7	DESIGN
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999913949973627	WITHOUT_CLASSIFICATION	8.60500263731847E-6	DESIGN
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9998249600211278	WITHOUT_CLASSIFICATION	1.7503997887230216E-4	DESIGN
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999999854728655	WITHOUT_CLASSIFICATION	1.4527134581565885E-8	DESIGN
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999999425246348	WITHOUT_CLASSIFICATION	5.747536525745396E-8	DESIGN
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999972997193	WITHOUT_CLASSIFICATION	2.700280728896296E-9	DESIGN
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999998951199075	WITHOUT_CLASSIFICATION	1.0488009245927918E-7	DESIGN
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999798420210237	WITHOUT_CLASSIFICATION	2.0157978976159487E-5	DESIGN
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999081549167438	WITHOUT_CLASSIFICATION	9.184508325622929E-5	DESIGN
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999946074499	WITHOUT_CLASSIFICATION	5.392550019859683E-9	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999301411203141	WITHOUT_CLASSIFICATION	6.985887968585482E-5	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997643946762425	DESIGN	2.3560532375746848E-4	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999988511213809	WITHOUT_CLASSIFICATION	1.148878619108679E-6	DESIGN
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999996829396	WITHOUT_CLASSIFICATION	3.17060400088346E-7	DESIGN
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999992773263106	WITHOUT_CLASSIFICATION	7.226736893902271E-7	DESIGN
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999763941346672	WITHOUT_CLASSIFICATION	2.360586533283352E-5	DESIGN
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999828450384448	WITHOUT_CLASSIFICATION	1.715496155521303E-5	DESIGN
// else leave it null	WITHOUT_CLASSIFICATION	0.9999996783570836	WITHOUT_CLASSIFICATION	3.2164291638474497E-7	DESIGN
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999558174920217	WITHOUT_CLASSIFICATION	4.418250797832373E-5	DESIGN
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9996747226764694	WITHOUT_CLASSIFICATION	3.2527732353063214E-4	DESIGN
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999960843402	WITHOUT_CLASSIFICATION	3.915659765597112E-9	DESIGN
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999937028872	WITHOUT_CLASSIFICATION	6.297112845438205E-9	DESIGN
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999437948579	WITHOUT_CLASSIFICATION	5.6205142049380034E-8	DESIGN
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999973431682003	WITHOUT_CLASSIFICATION	2.65683179976533E-6	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999990481039435	WITHOUT_CLASSIFICATION	9.51896056629397E-7	DESIGN
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999990481039435	WITHOUT_CLASSIFICATION	9.51896056629397E-7	DESIGN
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999855736835	WITHOUT_CLASSIFICATION	1.4426316490313412E-8	DESIGN
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999936039600916	WITHOUT_CLASSIFICATION	6.3960399083072915E-6	DESIGN
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999999999953142	WITHOUT_CLASSIFICATION	4.685803917798306E-11	DESIGN
// Init	WITHOUT_CLASSIFICATION	0.9999959431895097	WITHOUT_CLASSIFICATION	4.056810490275506E-6	DESIGN
// Block	WITHOUT_CLASSIFICATION	0.9999954686816557	WITHOUT_CLASSIFICATION	4.531318344311761E-6	DESIGN
// Copy constructor	WITHOUT_CLASSIFICATION	0.9982942329271685	WITHOUT_CLASSIFICATION	0.0017057670728314513	DESIGN
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9959696019357511	WITHOUT_CLASSIFICATION	0.004030398064248919	DESIGN
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9977908245712013	WITHOUT_CLASSIFICATION	0.00220917542879879	DESIGN
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9998508457284487	WITHOUT_CLASSIFICATION	1.491542715512761E-4	DESIGN
// ok	WITHOUT_CLASSIFICATION	0.9999919888791704	WITHOUT_CLASSIFICATION	8.011120829564875E-6	DESIGN
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.6434194502116674	DESIGN	0.3565805497883326	WITHOUT_CLASSIFICATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9995681522313008	WITHOUT_CLASSIFICATION	4.3184776869918494E-4	DESIGN
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999708438505861	WITHOUT_CLASSIFICATION	2.915614941396055E-5	DESIGN
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999985033156101	WITHOUT_CLASSIFICATION	1.4966843899020038E-5	DESIGN
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.999980225320052	WITHOUT_CLASSIFICATION	1.9774679948000455E-5	DESIGN
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999983744367155	WITHOUT_CLASSIFICATION	1.6255632845185046E-6	DESIGN
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9988155859071062	WITHOUT_CLASSIFICATION	0.0011844140928938497	DESIGN
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999853444676843	WITHOUT_CLASSIFICATION	1.4655532315874208E-5	DESIGN
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9995451068045886	WITHOUT_CLASSIFICATION	4.548931954113873E-4	DESIGN
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999598757101452	WITHOUT_CLASSIFICATION	4.012428985484873E-5	DESIGN
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999999086805977	WITHOUT_CLASSIFICATION	9.131940215877056E-8	DESIGN
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999987942046048	WITHOUT_CLASSIFICATION	1.205795395193578E-6	DESIGN
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.8839935024075634	DESIGN	0.11600649759243667	WITHOUT_CLASSIFICATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999917037881272	WITHOUT_CLASSIFICATION	8.296211872809497E-6	DESIGN
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9957048021852686	WITHOUT_CLASSIFICATION	0.004295197814731464	DESIGN
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999999301697918	WITHOUT_CLASSIFICATION	6.983020819806683E-7	DESIGN
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999994387876	WITHOUT_CLASSIFICATION	5.612123763570406E-10	DESIGN
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999999998364438	WITHOUT_CLASSIFICATION	1.6355620525081451E-9	DESIGN
// void methods should work	WITHOUT_CLASSIFICATION	0.9997006647062258	WITHOUT_CLASSIFICATION	2.993352937741681E-4	DESIGN
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999994603373462	WITHOUT_CLASSIFICATION	5.39662653825423E-7	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999999985159067	WITHOUT_CLASSIFICATION	1.4840933033702945E-8	DESIGN
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999999955570272	WITHOUT_CLASSIFICATION	4.442972824925847E-9	DESIGN
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999996515337801	WITHOUT_CLASSIFICATION	3.4846621997135096E-7	DESIGN
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999992901265085	WITHOUT_CLASSIFICATION	7.098734916692594E-7	DESIGN
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999990151980912	WITHOUT_CLASSIFICATION	9.84801908736655E-7	DESIGN
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999558141625	WITHOUT_CLASSIFICATION	4.4185837592016957E-8	DESIGN
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9992515931606032	WITHOUT_CLASSIFICATION	7.484068393967644E-4	DESIGN
// value equality	WITHOUT_CLASSIFICATION	0.9999990049889734	WITHOUT_CLASSIFICATION	9.950110265910653E-7	DESIGN
// identity equality	WITHOUT_CLASSIFICATION	0.9999775592887523	WITHOUT_CLASSIFICATION	2.2440711247704557E-5	DESIGN
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999996327370086	WITHOUT_CLASSIFICATION	3.6726299134891894E-7	DESIGN
// bench Integer fib	WITHOUT_CLASSIFICATION	0.999999385978405	WITHOUT_CLASSIFICATION	6.140215950400036E-7	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999367726781	WITHOUT_CLASSIFICATION	6.322732188849653E-8	DESIGN
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999367726781	WITHOUT_CLASSIFICATION	6.322732188849653E-8	DESIGN
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.999999553094599	WITHOUT_CLASSIFICATION	4.4690540093093597E-7	DESIGN
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999800007746	WITHOUT_CLASSIFICATION	1.999922537727644E-8	DESIGN
// bench Long fib	WITHOUT_CLASSIFICATION	0.999999988417746	WITHOUT_CLASSIFICATION	1.1582254000696153E-8	DESIGN
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.999246215452628	WITHOUT_CLASSIFICATION	7.537845473720032E-4	DESIGN
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999072281073048	WITHOUT_CLASSIFICATION	9.277189269510352E-5	DESIGN
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999995495070535	WITHOUT_CLASSIFICATION	4.5049294650362673E-7	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997495829858806	WITHOUT_CLASSIFICATION	2.504170141194235E-4	DESIGN
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9938303055238117	WITHOUT_CLASSIFICATION	0.0061696944761883395	DESIGN
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999536794706472	WITHOUT_CLASSIFICATION	4.632052935289288E-5	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9991631288033771	WITHOUT_CLASSIFICATION	8.368711966228818E-4	DESIGN
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999355134655771	WITHOUT_CLASSIFICATION	6.448653442289254E-5	DESIGN
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999987857074534	WITHOUT_CLASSIFICATION	1.2142925466428476E-6	DESIGN
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.953138242336522	WITHOUT_CLASSIFICATION	0.04686175766347792	DESIGN
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999760640613907	WITHOUT_CLASSIFICATION	2.3935938609262135E-5	DESIGN
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999959957896635	WITHOUT_CLASSIFICATION	4.004210336559881E-6	DESIGN
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999262755467175	DESIGN	7.372445328251709E-5	WITHOUT_CLASSIFICATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9811949104811135	WITHOUT_CLASSIFICATION	0.01880508951888647	DESIGN
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999997490833618	WITHOUT_CLASSIFICATION	2.509166382831699E-7	DESIGN
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999907604557504	WITHOUT_CLASSIFICATION	9.239544249621013E-6	DESIGN
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999858827869365	DESIGN	1.4117213063424755E-5	WITHOUT_CLASSIFICATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999833583696965	WITHOUT_CLASSIFICATION	1.6641630303453618E-5	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999843083544342	WITHOUT_CLASSIFICATION	1.569164556587738E-5	DESIGN
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999988572438	WITHOUT_CLASSIFICATION	1.1427563091546522E-9	DESIGN
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.8278096334475853	WITHOUT_CLASSIFICATION	0.17219036655241485	DESIGN
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999975574425	WITHOUT_CLASSIFICATION	2.442557472317239E-9	DESIGN
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999998827600332	WITHOUT_CLASSIFICATION	1.1723996676051566E-7	DESIGN
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999988392795313	WITHOUT_CLASSIFICATION	1.1607204688194719E-6	DESIGN
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999013186454667	WITHOUT_CLASSIFICATION	9.868135453324345E-5	DESIGN
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999942449252	WITHOUT_CLASSIFICATION	5.7550747263263795E-9	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999971178627173	WITHOUT_CLASSIFICATION	2.882137282746209E-6	DESIGN
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999957278541	WITHOUT_CLASSIFICATION	4.272145880920595E-9	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999993822054014	WITHOUT_CLASSIFICATION	6.177945985933061E-7	DESIGN
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999971178627173	WITHOUT_CLASSIFICATION	2.882137282746209E-6	DESIGN
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999802721779677	WITHOUT_CLASSIFICATION	1.9727822032366496E-5	DESIGN
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9997893548377234	WITHOUT_CLASSIFICATION	2.1064516227669103E-4	DESIGN
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999072270069	WITHOUT_CLASSIFICATION	9.277299315556335E-8	DESIGN
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9990318663252417	DESIGN	9.681336747582889E-4	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999691633438539	WITHOUT_CLASSIFICATION	3.083665614604742E-5	DESIGN
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999895116652426	WITHOUT_CLASSIFICATION	1.0488334757365134E-5	DESIGN
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999949323390163	WITHOUT_CLASSIFICATION	5.0676609837742646E-6	DESIGN
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.939330602025148	WITHOUT_CLASSIFICATION	0.060669397974851935	DESIGN
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9883550634078521	WITHOUT_CLASSIFICATION	0.011644936592148023	DESIGN
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999301411203141	WITHOUT_CLASSIFICATION	6.985887968585482E-5	DESIGN
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999984997110519	WITHOUT_CLASSIFICATION	1.500288948180967E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9971986357187347	WITHOUT_CLASSIFICATION	0.0028013642812652847	DESIGN
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999996803592214	WITHOUT_CLASSIFICATION	3.196407786943575E-7	DESIGN
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999908343987866	WITHOUT_CLASSIFICATION	9.165601213373893E-6	DESIGN
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.999999969052691	WITHOUT_CLASSIFICATION	3.094730905149316E-8	DESIGN
// switch // while	WITHOUT_CLASSIFICATION	0.9999596728901515	WITHOUT_CLASSIFICATION	4.032710984844957E-5	DESIGN
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9777912802485613	DESIGN	0.022208719751438646	WITHOUT_CLASSIFICATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9058021456980014	WITHOUT_CLASSIFICATION	0.09419785430199853	DESIGN
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9809153563777332	WITHOUT_CLASSIFICATION	0.019084643622266754	DESIGN
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9997612930259799	WITHOUT_CLASSIFICATION	2.3870697401997664E-4	DESIGN
// expected	WITHOUT_CLASSIFICATION	0.9999999665789384	WITHOUT_CLASSIFICATION	3.342106151816494E-8	DESIGN
// Do nothing	WITHOUT_CLASSIFICATION	0.9999989398807124	WITHOUT_CLASSIFICATION	1.0601192875386797E-6	DESIGN
// constructor	WITHOUT_CLASSIFICATION	0.9998663074308671	WITHOUT_CLASSIFICATION	1.3369256913285972E-4	DESIGN
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999969875635104	WITHOUT_CLASSIFICATION	3.012436489474539E-6	DESIGN
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999014063032464	WITHOUT_CLASSIFICATION	9.85936967536484E-5	DESIGN
// line 423	WITHOUT_CLASSIFICATION	0.9999989563358836	WITHOUT_CLASSIFICATION	1.0436641164322997E-6	DESIGN
// line 486	WITHOUT_CLASSIFICATION	0.999998558487132	WITHOUT_CLASSIFICATION	1.4415128679780252E-6	DESIGN
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.999942364361053	WITHOUT_CLASSIFICATION	5.763563894705195E-5	DESIGN
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999999978441	WITHOUT_CLASSIFICATION	2.155916996237922E-12	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8816297076020382	DESIGN	0.11837029239796185	WITHOUT_CLASSIFICATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8816297076020382	DESIGN	0.11837029239796185	WITHOUT_CLASSIFICATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997727557752	WITHOUT_CLASSIFICATION	2.2724422480665942E-7	DESIGN
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999999897181	WITHOUT_CLASSIFICATION	1.0281772540485553E-11	DESIGN
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999992437560314	WITHOUT_CLASSIFICATION	7.562439686419425E-7	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9988022167492668	DESIGN	0.0011977832507331823	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9988022167492668	DESIGN	0.0011977832507331823	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9988022167492668	DESIGN	0.0011977832507331823	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9988022167492668	DESIGN	0.0011977832507331823	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999992371436308	WITHOUT_CLASSIFICATION	7.628563691974449E-7	DESIGN
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999983488239692	WITHOUT_CLASSIFICATION	1.65117603080842E-6	DESIGN
// "else" body	WITHOUT_CLASSIFICATION	0.9999983013551467	WITHOUT_CLASSIFICATION	1.698644853266794E-6	DESIGN
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.99732492893057	DESIGN	0.002675071069429935	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997738322837	WITHOUT_CLASSIFICATION	2.2616771631989096E-7	DESIGN
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999999545204966	WITHOUT_CLASSIFICATION	4.5479503381568005E-8	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9985418198546109	WITHOUT_CLASSIFICATION	0.0014581801453891375	DESIGN
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9985418198546109	WITHOUT_CLASSIFICATION	0.0014581801453891375	DESIGN
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9894283952156012	WITHOUT_CLASSIFICATION	0.01057160478439882	DESIGN
/* 10! */	WITHOUT_CLASSIFICATION	0.9999760097826319	WITHOUT_CLASSIFICATION	2.3990217368063116E-5	DESIGN
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9973506167567515	WITHOUT_CLASSIFICATION	0.0026493832432485116	DESIGN
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.999999998864923	WITHOUT_CLASSIFICATION	1.1350769776815781E-9	DESIGN
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999815871856466	WITHOUT_CLASSIFICATION	1.8412814353385865E-5	DESIGN
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999998673455761	WITHOUT_CLASSIFICATION	1.326544238625167E-7	DESIGN
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999935437972	WITHOUT_CLASSIFICATION	6.456202876826497E-9	DESIGN
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999999856250363	WITHOUT_CLASSIFICATION	1.4374963642383505E-8	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997474851041327	WITHOUT_CLASSIFICATION	2.525148958673442E-4	DESIGN
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997474851041327	WITHOUT_CLASSIFICATION	2.525148958673442E-4	DESIGN
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999993822054014	WITHOUT_CLASSIFICATION	6.177945985933061E-7	DESIGN
// line 449	WITHOUT_CLASSIFICATION	0.9999989520114771	WITHOUT_CLASSIFICATION	1.0479885227955048E-6	DESIGN
// line 495	WITHOUT_CLASSIFICATION	0.9999992293521617	WITHOUT_CLASSIFICATION	7.706478382969015E-7	DESIGN
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999436193014893	WITHOUT_CLASSIFICATION	5.638069851069189E-5	DESIGN
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999997984	WITHOUT_CLASSIFICATION	2.0163668738015677E-13	DESIGN
/* 14! */	WITHOUT_CLASSIFICATION	0.9999753791620045	WITHOUT_CLASSIFICATION	2.4620837995595205E-5	DESIGN
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999997000827234	WITHOUT_CLASSIFICATION	2.9991727654066777E-7	DESIGN
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999630316641281	WITHOUT_CLASSIFICATION	3.696833587179341E-5	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998302591986	WITHOUT_CLASSIFICATION	1.6974080142728487E-7	DESIGN
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998302591986	WITHOUT_CLASSIFICATION	1.6974080142728487E-7	DESIGN
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9994117732500354	WITHOUT_CLASSIFICATION	5.882267499646147E-4	DESIGN
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999860764164	WITHOUT_CLASSIFICATION	1.392358352315124E-8	DESIGN
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999945951764	WITHOUT_CLASSIFICATION	5.404823517172346E-9	DESIGN
// index for the item	WITHOUT_CLASSIFICATION	0.999996123298931	WITHOUT_CLASSIFICATION	3.876701069007181E-6	DESIGN
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999852568725659	WITHOUT_CLASSIFICATION	1.4743127434115363E-5	DESIGN
/* 18! */	WITHOUT_CLASSIFICATION	0.9999888355889783	WITHOUT_CLASSIFICATION	1.1164411021730567E-5	DESIGN
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9960083889104614	WITHOUT_CLASSIFICATION	0.0039916110895386	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999561879616866	WITHOUT_CLASSIFICATION	4.3812038313453166E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999561879616866	WITHOUT_CLASSIFICATION	4.3812038313453166E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999561879616866	WITHOUT_CLASSIFICATION	4.3812038313453166E-5	DESIGN
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999561879616866	WITHOUT_CLASSIFICATION	4.3812038313453166E-5	DESIGN
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999542197181	WITHOUT_CLASSIFICATION	4.5780281904325664E-7	DESIGN
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999992571612	WITHOUT_CLASSIFICATION	7.428388571821156E-10	DESIGN
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9958591658988384	WITHOUT_CLASSIFICATION	0.004140834101161602	DESIGN
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999914092855001	WITHOUT_CLASSIFICATION	8.590714499936419E-6	DESIGN
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999996616875656	WITHOUT_CLASSIFICATION	3.3831243444304493E-7	DESIGN
/* 22! */	WITHOUT_CLASSIFICATION	0.9999889765995178	WITHOUT_CLASSIFICATION	1.1023400482245249E-5	DESIGN
// attribute set.	WITHOUT_CLASSIFICATION	0.999998628627429	WITHOUT_CLASSIFICATION	1.3713725709272475E-6	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996593702326	WITHOUT_CLASSIFICATION	3.4062976745162145E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996593702326	WITHOUT_CLASSIFICATION	3.4062976745162145E-7	DESIGN
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999996593702326	WITHOUT_CLASSIFICATION	3.4062976745162145E-7	DESIGN
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999962726915392	WITHOUT_CLASSIFICATION	3.7273084607553387E-6	DESIGN
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999836244533007	WITHOUT_CLASSIFICATION	1.6375546699259893E-5	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999214469576	WITHOUT_CLASSIFICATION	7.855304233510877E-8	DESIGN
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999214469576	WITHOUT_CLASSIFICATION	7.855304233510877E-8	DESIGN
// AF_INET	WITHOUT_CLASSIFICATION	0.9999995523555846	WITHOUT_CLASSIFICATION	4.476444155224161E-7	DESIGN
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997203334652	WITHOUT_CLASSIFICATION	2.796665347823949E-7	DESIGN
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999969507556	WITHOUT_CLASSIFICATION	3.0492443672603322E-9	DESIGN
// BASE64	WITHOUT_CLASSIFICATION	0.9999700345868573	WITHOUT_CLASSIFICATION	2.996541314265573E-5	DESIGN
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999995684435	WITHOUT_CLASSIFICATION	4.315565500719994E-10	DESIGN
// element set	WITHOUT_CLASSIFICATION	0.9999976062567384	WITHOUT_CLASSIFICATION	2.39374326149539E-6	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9998816839039733	WITHOUT_CLASSIFICATION	1.1831609602675931E-4	DESIGN
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9998816839039733	WITHOUT_CLASSIFICATION	1.1831609602675931E-4	DESIGN
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999881728914	WITHOUT_CLASSIFICATION	1.1827108608146781E-7	DESIGN
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999987526378	WITHOUT_CLASSIFICATION	1.2473621756639057E-9	DESIGN
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999997805037282	WITHOUT_CLASSIFICATION	2.1949627190662886E-7	DESIGN
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9992976081339635	WITHOUT_CLASSIFICATION	7.023918660365453E-4	DESIGN
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9998165305920195	WITHOUT_CLASSIFICATION	1.8346940798045133E-4	DESIGN
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999999059714	WITHOUT_CLASSIFICATION	9.402853234953906E-11	DESIGN
// carriage return	WITHOUT_CLASSIFICATION	0.9999997903245939	WITHOUT_CLASSIFICATION	2.096754061419852E-7	DESIGN
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9991356563457299	WITHOUT_CLASSIFICATION	8.643436542700824E-4	DESIGN
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999809834185117	WITHOUT_CLASSIFICATION	1.9016581488305903E-5	DESIGN
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999991619971232	WITHOUT_CLASSIFICATION	8.380028767142767E-7	DESIGN
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999593606935	WITHOUT_CLASSIFICATION	4.0639306569690765E-8	DESIGN
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999988373526699	WITHOUT_CLASSIFICATION	1.1626473300218054E-6	DESIGN
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9967003632397088	WITHOUT_CLASSIFICATION	0.0032996367602913137	DESIGN
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999999961563609	WITHOUT_CLASSIFICATION	3.843639014528159E-9	DESIGN
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999990430169912	WITHOUT_CLASSIFICATION	9.569830089147737E-7	DESIGN
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.8369389249544122	DESIGN	0.16306107504558776	WITHOUT_CLASSIFICATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999904597308417	WITHOUT_CLASSIFICATION	9.540269158357798E-6	DESIGN
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999991446587272	WITHOUT_CLASSIFICATION	8.553412727746081E-7	DESIGN
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999944227504903	WITHOUT_CLASSIFICATION	5.5772495097100055E-6	DESIGN
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999994766471292	WITHOUT_CLASSIFICATION	5.233528707939399E-7	DESIGN
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999998659100692	WITHOUT_CLASSIFICATION	1.3408993087160526E-7	DESIGN
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9962311855594584	WITHOUT_CLASSIFICATION	0.003768814440541575	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999977124577235	WITHOUT_CLASSIFICATION	2.2875422765104828E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999977124577235	WITHOUT_CLASSIFICATION	2.2875422765104828E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999977124577235	WITHOUT_CLASSIFICATION	2.2875422765104828E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999977124577235	WITHOUT_CLASSIFICATION	2.2875422765104828E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999977124577235	WITHOUT_CLASSIFICATION	2.2875422765104828E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999977124577235	WITHOUT_CLASSIFICATION	2.2875422765104828E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999977124577235	WITHOUT_CLASSIFICATION	2.2875422765104828E-6	DESIGN
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999977124577235	WITHOUT_CLASSIFICATION	2.2875422765104828E-6	DESIGN
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999953041057696	WITHOUT_CLASSIFICATION	4.69589423041528E-6	DESIGN
/* fall through */	WITHOUT_CLASSIFICATION	0.9999949056498391	WITHOUT_CLASSIFICATION	5.094350160953624E-6	DESIGN
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9996165542290211	WITHOUT_CLASSIFICATION	3.834457709789384E-4	DESIGN
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999205801918	DESIGN	7.94198080859437E-8	WITHOUT_CLASSIFICATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997495829858806	WITHOUT_CLASSIFICATION	2.504170141194235E-4	DESIGN
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9997495829858806	WITHOUT_CLASSIFICATION	2.504170141194235E-4	DESIGN
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9998952494357388	WITHOUT_CLASSIFICATION	1.047505642611192E-4	DESIGN
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.8887941380101758	WITHOUT_CLASSIFICATION	0.11120586198982418	DESIGN
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999944012092	WITHOUT_CLASSIFICATION	5.598790744778126E-9	DESIGN
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999997277445818	WITHOUT_CLASSIFICATION	2.72255418233003E-7	DESIGN
// get current context	WITHOUT_CLASSIFICATION	0.9999764540225404	WITHOUT_CLASSIFICATION	2.354597745955563E-5	DESIGN
// octal constant	WITHOUT_CLASSIFICATION	0.9999996560347498	WITHOUT_CLASSIFICATION	3.439652501478852E-7	DESIGN
// read	WITHOUT_CLASSIFICATION	0.9999784051735084	WITHOUT_CLASSIFICATION	2.1594826491497942E-5	DESIGN
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.6912309369358047	DESIGN	0.3087690630641954	WITHOUT_CLASSIFICATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999998179634474	WITHOUT_CLASSIFICATION	1.8203655255251988E-7	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999973004607092	WITHOUT_CLASSIFICATION	2.6995392907945693E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999973004607092	WITHOUT_CLASSIFICATION	2.6995392907945693E-5	DESIGN
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999973004607092	WITHOUT_CLASSIFICATION	2.6995392907945693E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9998907918371335	WITHOUT_CLASSIFICATION	1.0920816286643731E-4	DESIGN
// at end	WITHOUT_CLASSIFICATION	0.999695011908217	WITHOUT_CLASSIFICATION	3.0498809178310023E-4	DESIGN
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999997487154338	WITHOUT_CLASSIFICATION	2.512845662061399E-7	DESIGN
// save blocking state	WITHOUT_CLASSIFICATION	0.9999440302925108	WITHOUT_CLASSIFICATION	5.5969707489226254E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999208931019409	WITHOUT_CLASSIFICATION	7.910689805908627E-5	DESIGN
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999992107872716	WITHOUT_CLASSIFICATION	7.892127284567372E-7	DESIGN
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9998590748412496	WITHOUT_CLASSIFICATION	1.4092515875046557E-4	DESIGN
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.99955477783575	WITHOUT_CLASSIFICATION	4.4522216424993077E-4	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999999497970544	WITHOUT_CLASSIFICATION	5.020294560667462E-7	DESIGN
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999999497970544	WITHOUT_CLASSIFICATION	5.020294560667462E-7	DESIGN
// load null block	WITHOUT_CLASSIFICATION	0.9999998374184942	WITHOUT_CLASSIFICATION	1.6258150585092173E-7	DESIGN
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999997098424811	WITHOUT_CLASSIFICATION	2.9015751884168287E-7	DESIGN
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999976852988028	WITHOUT_CLASSIFICATION	2.3147011971243856E-6	DESIGN
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9995009759521113	WITHOUT_CLASSIFICATION	4.990240478886758E-4	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999814976352	WITHOUT_CLASSIFICATION	1.8502364792626911E-7	DESIGN
// block given	WITHOUT_CLASSIFICATION	0.999999814976352	WITHOUT_CLASSIFICATION	1.8502364792626911E-7	DESIGN
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.8645268494080622	WITHOUT_CLASSIFICATION	0.1354731505919378	DESIGN
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999961342031	WITHOUT_CLASSIFICATION	3.865796902377124E-9	DESIGN
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999997530029625	WITHOUT_CLASSIFICATION	2.4699703749283625E-7	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
/*self*/	WITHOUT_CLASSIFICATION	0.9995842849142562	WITHOUT_CLASSIFICATION	4.157150857438303E-4	DESIGN
// declare the field	WITHOUT_CLASSIFICATION	0.9999273047560079	WITHOUT_CLASSIFICATION	7.269524399217058E-5	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998871092305	WITHOUT_CLASSIFICATION	1.1289076942360499E-7	DESIGN
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998871092305	WITHOUT_CLASSIFICATION	1.1289076942360499E-7	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9998966477948341	WITHOUT_CLASSIFICATION	1.0335220516590744E-4	DESIGN
// check arity	WITHOUT_CLASSIFICATION	0.9998966477948341	WITHOUT_CLASSIFICATION	1.0335220516590744E-4	DESIGN
// create the class	WITHOUT_CLASSIFICATION	0.9999847768844411	WITHOUT_CLASSIFICATION	1.5223115559014407E-5	DESIGN
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999819860415	WITHOUT_CLASSIFICATION	1.8013958553390594E-8	DESIGN
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999993460641563	WITHOUT_CLASSIFICATION	6.539358436667874E-7	DESIGN
// 1.8	WITHOUT_CLASSIFICATION	0.9999973826295124	WITHOUT_CLASSIFICATION	2.6173704876393954E-6	DESIGN
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999631642196596	WITHOUT_CLASSIFICATION	3.683578034036334E-5	DESIGN
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999187018779557	WITHOUT_CLASSIFICATION	8.129812204429984E-5	DESIGN
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999964150090498	WITHOUT_CLASSIFICATION	3.5849909501771434E-6	DESIGN
// block	WITHOUT_CLASSIFICATION	0.9999991626499967	WITHOUT_CLASSIFICATION	8.373500032124074E-7	DESIGN
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999992787594786	WITHOUT_CLASSIFICATION	7.212405213648339E-7	DESIGN
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999972159488	WITHOUT_CLASSIFICATION	2.7840511366068475E-9	DESIGN
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9343670239244335	DESIGN	0.06563297607556658	WITHOUT_CLASSIFICATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.99674661535266	WITHOUT_CLASSIFICATION	0.003253384647339973	DESIGN
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999515889917842	WITHOUT_CLASSIFICATION	4.841100821593246E-5	DESIGN
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999995684225338	WITHOUT_CLASSIFICATION	4.3157746609511086E-7	DESIGN
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9955744457200737	WITHOUT_CLASSIFICATION	0.004425554279926255	DESIGN
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999380858934487	WITHOUT_CLASSIFICATION	6.191410655131137E-5	DESIGN
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999883922778974	WITHOUT_CLASSIFICATION	1.1607722102502758E-5	DESIGN
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999954865348	WITHOUT_CLASSIFICATION	4.513465111261893E-9	DESIGN
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999719319126	WITHOUT_CLASSIFICATION	2.806808746807455E-8	DESIGN
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999946037122326	WITHOUT_CLASSIFICATION	5.3962877674524694E-6	DESIGN
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9971986357187347	WITHOUT_CLASSIFICATION	0.0028013642812652847	DESIGN
/*arg*/	WITHOUT_CLASSIFICATION	0.9997897754739105	WITHOUT_CLASSIFICATION	2.102245260894142E-4	DESIGN
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999999580295877	WITHOUT_CLASSIFICATION	4.1970412296298944E-8	DESIGN
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999599448716582	WITHOUT_CLASSIFICATION	4.00551283417211E-5	DESIGN
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999982261145631	WITHOUT_CLASSIFICATION	1.7738854369447553E-6	DESIGN
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9859209548677644	WITHOUT_CLASSIFICATION	0.014079045132235622	DESIGN
/* expected */	WITHOUT_CLASSIFICATION	0.9999981010903514	WITHOUT_CLASSIFICATION	1.8989096485815057E-6	DESIGN
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.998706055024176	WITHOUT_CLASSIFICATION	0.0012939449758239574	DESIGN
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999778643283	WITHOUT_CLASSIFICATION	2.213567170761946E-8	DESIGN
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999530592872	WITHOUT_CLASSIFICATION	4.69407127640599E-8	DESIGN
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999996001234441	WITHOUT_CLASSIFICATION	3.9987655596927404E-7	DESIGN
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999951156943017	WITHOUT_CLASSIFICATION	4.884305698389783E-6	DESIGN
// use numbered access method	WITHOUT_CLASSIFICATION	0.998616751060437	WITHOUT_CLASSIFICATION	0.001383248939562996	DESIGN
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999997827558792	WITHOUT_CLASSIFICATION	2.1724412091168114E-7	DESIGN
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999760680638	WITHOUT_CLASSIFICATION	2.3931936221527725E-8	DESIGN
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.8830864534555475	WITHOUT_CLASSIFICATION	0.11691354654445246	DESIGN
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9998018730564134	WITHOUT_CLASSIFICATION	1.9812694358651613E-4	DESIGN
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9984467558936859	WITHOUT_CLASSIFICATION	0.001553244106314114	DESIGN
// build scope names string	WITHOUT_CLASSIFICATION	0.9999954630964522	WITHOUT_CLASSIFICATION	4.536903547850401E-6	DESIGN
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999664355418668	WITHOUT_CLASSIFICATION	3.3564458133202593E-4	DESIGN
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9880132256324196	WITHOUT_CLASSIFICATION	0.011986774367580378	DESIGN
// finally	WITHOUT_CLASSIFICATION	0.9999947058567416	WITHOUT_CLASSIFICATION	5.294143258371379E-6	DESIGN
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999679525308	WITHOUT_CLASSIFICATION	3.204746930956187E-8	DESIGN
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999992749270138	WITHOUT_CLASSIFICATION	7.250729862340034E-7	DESIGN
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9998250278273322	WITHOUT_CLASSIFICATION	1.749721726679008E-4	DESIGN
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999284232883655	WITHOUT_CLASSIFICATION	7.157671163444969E-5	DESIGN
// specific arity	WITHOUT_CLASSIFICATION	0.9998121860086019	WITHOUT_CLASSIFICATION	1.8781399139810608E-4	DESIGN
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999852624802	WITHOUT_CLASSIFICATION	1.4737519694705755E-8	DESIGN
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999219518556	WITHOUT_CLASSIFICATION	7.804814441115145E-8	DESIGN
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999265874255	WITHOUT_CLASSIFICATION	7.341257444415667E-8	DESIGN
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9988515647099923	WITHOUT_CLASSIFICATION	0.001148435290007824	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999987988693211	WITHOUT_CLASSIFICATION	1.2011306790039934E-6	DESIGN
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999987988693211	WITHOUT_CLASSIFICATION	1.2011306790039934E-6	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999718311038	WITHOUT_CLASSIFICATION	2.816889613324211E-8	DESIGN
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999718311038	WITHOUT_CLASSIFICATION	2.816889613324211E-8	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.7064063830377574	WITHOUT_CLASSIFICATION	0.2935936169622427	DESIGN
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.7064063830377574	WITHOUT_CLASSIFICATION	0.2935936169622427	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997850927124988	WITHOUT_CLASSIFICATION	2.1490728750120567E-4	DESIGN
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997850927124988	WITHOUT_CLASSIFICATION	2.1490728750120567E-4	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999999978801911	WITHOUT_CLASSIFICATION	2.1198088885117498E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999999978801911	WITHOUT_CLASSIFICATION	2.1198088885117498E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999999978801911	WITHOUT_CLASSIFICATION	2.1198088885117498E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999999978801911	WITHOUT_CLASSIFICATION	2.1198088885117498E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999999978801911	WITHOUT_CLASSIFICATION	2.1198088885117498E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999999978801911	WITHOUT_CLASSIFICATION	2.1198088885117498E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999999978801911	WITHOUT_CLASSIFICATION	2.1198088885117498E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999999978801911	WITHOUT_CLASSIFICATION	2.1198088885117498E-8	DESIGN
// write-volatile	WITHOUT_CLASSIFICATION	0.999999978801911	WITHOUT_CLASSIFICATION	2.1198088885117498E-8	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999985567701529	WITHOUT_CLASSIFICATION	1.4432298471279612E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999985567701529	WITHOUT_CLASSIFICATION	1.4432298471279612E-6	DESIGN
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999985567701529	WITHOUT_CLASSIFICATION	1.4432298471279612E-6	DESIGN
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999844223297817	WITHOUT_CLASSIFICATION	1.5577670218290046E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999844216096583	WITHOUT_CLASSIFICATION	1.557839034173243E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999844216096583	WITHOUT_CLASSIFICATION	1.557839034173243E-5	DESIGN
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999844216096583	WITHOUT_CLASSIFICATION	1.557839034173243E-5	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999984488369762	WITHOUT_CLASSIFICATION	1.5511630237443703E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999984488369762	WITHOUT_CLASSIFICATION	1.5511630237443703E-6	DESIGN
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999984488369762	WITHOUT_CLASSIFICATION	1.5511630237443703E-6	DESIGN
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999999621631029	WITHOUT_CLASSIFICATION	3.7836897090752037E-8	DESIGN
// backspace	WITHOUT_CLASSIFICATION	0.9999998969934256	WITHOUT_CLASSIFICATION	1.0300657437979371E-7	DESIGN
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995126194207083	WITHOUT_CLASSIFICATION	4.8738057929167684E-4	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9971829340005086	WITHOUT_CLASSIFICATION	0.0028170659994914003	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9971829340005086	WITHOUT_CLASSIFICATION	0.0028170659994914003	DESIGN
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9971829340005086	WITHOUT_CLASSIFICATION	0.0028170659994914003	DESIGN
/* package-private */	WITHOUT_CLASSIFICATION	0.9999874429644443	WITHOUT_CLASSIFICATION	1.2557035555643118E-5	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999957204854546	WITHOUT_CLASSIFICATION	4.279514545430825E-6	DESIGN
// fall through	WITHOUT_CLASSIFICATION	0.9999957204854546	WITHOUT_CLASSIFICATION	4.279514545430825E-6	DESIGN
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9995670473692272	WITHOUT_CLASSIFICATION	4.329526307728532E-4	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999999899513578	WITHOUT_CLASSIFICATION	1.0048642192310321E-7	DESIGN
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999999899513578	WITHOUT_CLASSIFICATION	1.0048642192310321E-7	DESIGN
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.8277901391194238	DESIGN	0.17220986088057624	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999999984896172	WITHOUT_CLASSIFICATION	1.510382908939377E-9	DESIGN
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999999532054599	WITHOUT_CLASSIFICATION	4.679454012974023E-8	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999950806352	WITHOUT_CLASSIFICATION	4.919364839279803E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999950806352	WITHOUT_CLASSIFICATION	4.919364839279803E-9	DESIGN
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.8866666886631619	WITHOUT_CLASSIFICATION	0.11333331133683802	DESIGN
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999998522967323	WITHOUT_CLASSIFICATION	1.47703267811053E-7	DESIGN
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.6031913092378539	WITHOUT_CLASSIFICATION	0.39680869076214614	DESIGN
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999921858509873	WITHOUT_CLASSIFICATION	7.814149012649605E-6	DESIGN
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.908512415326169	WITHOUT_CLASSIFICATION	0.09148758467383102	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999950806352	WITHOUT_CLASSIFICATION	4.919364839279803E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999950806352	WITHOUT_CLASSIFICATION	4.919364839279803E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999950806352	WITHOUT_CLASSIFICATION	4.919364839279803E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999950806352	WITHOUT_CLASSIFICATION	4.919364839279803E-9	DESIGN
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999950806352	WITHOUT_CLASSIFICATION	4.919364839279803E-9	DESIGN
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999441645049996	WITHOUT_CLASSIFICATION	5.583549500036913E-5	DESIGN
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999952679854399	WITHOUT_CLASSIFICATION	4.732014560031376E-6	DESIGN
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999995451832546	WITHOUT_CLASSIFICATION	4.5481674538781117E-7	DESIGN
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999819949547	WITHOUT_CLASSIFICATION	1.8005045384131118E-8	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999764766574029	WITHOUT_CLASSIFICATION	2.352334259712271E-5	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// not reached	WITHOUT_CLASSIFICATION	0.9998931558503449	WITHOUT_CLASSIFICATION	1.0684414965509837E-4	DESIGN
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9239217369373272	WITHOUT_CLASSIFICATION	0.07607826306267289	DESIGN
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9996386315072885	WITHOUT_CLASSIFICATION	3.6136849271155486E-4	DESIGN
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998496025048	WITHOUT_CLASSIFICATION	1.5039749514460694E-7	DESIGN
// get "self"	WITHOUT_CLASSIFICATION	0.999998920520047	WITHOUT_CLASSIFICATION	1.0794799530407876E-6	DESIGN
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999622549419	WITHOUT_CLASSIFICATION	3.774505812643225E-8	DESIGN
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999843083544342	WITHOUT_CLASSIFICATION	1.569164556587738E-5	DESIGN
// only public methods	WITHOUT_CLASSIFICATION	0.999893158077244	WITHOUT_CLASSIFICATION	1.068419227560837E-4	DESIGN
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999513110229	WITHOUT_CLASSIFICATION	4.868897699554777E-8	DESIGN
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999840899420555	WITHOUT_CLASSIFICATION	1.5910057944524123E-5	DESIGN
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999977119237646	WITHOUT_CLASSIFICATION	2.288076235361122E-6	DESIGN
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999781121519314	WITHOUT_CLASSIFICATION	2.188784806853157E-5	DESIGN
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999800675077	WITHOUT_CLASSIFICATION	1.9932492269598392E-8	DESIGN
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999984532244632	WITHOUT_CLASSIFICATION	1.5467755366827837E-6	DESIGN
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999998974728481	WITHOUT_CLASSIFICATION	1.0252715183561639E-7	DESIGN
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999964387037165	WITHOUT_CLASSIFICATION	3.5612962835281414E-6	DESIGN
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999900369998711	WITHOUT_CLASSIFICATION	9.963000128863733E-6	DESIGN
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9991631288033771	WITHOUT_CLASSIFICATION	8.368711966228818E-4	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999991189219721	WITHOUT_CLASSIFICATION	8.810780278200949E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999991189219721	WITHOUT_CLASSIFICATION	8.810780278200949E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999991189219721	WITHOUT_CLASSIFICATION	8.810780278200949E-7	DESIGN
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999991189219721	WITHOUT_CLASSIFICATION	8.810780278200949E-7	DESIGN
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.999998858065829	WITHOUT_CLASSIFICATION	1.1419341709510855E-6	DESIGN
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999974310545098	WITHOUT_CLASSIFICATION	2.5689454901814753E-6	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999999353784891	WITHOUT_CLASSIFICATION	6.46215108989678E-7	DESIGN
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999999353784891	WITHOUT_CLASSIFICATION	6.46215108989678E-7	DESIGN
// set self to the class	WITHOUT_CLASSIFICATION	0.9999941770569463	WITHOUT_CLASSIFICATION	5.822943053644871E-6	DESIGN
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999983764776048	WITHOUT_CLASSIFICATION	1.6235223951995745E-6	DESIGN
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999972016834441	WITHOUT_CLASSIFICATION	2.798316555940554E-6	DESIGN
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997501669861	WITHOUT_CLASSIFICATION	2.498330138982949E-7	DESIGN
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9998729064921392	WITHOUT_CLASSIFICATION	1.2709350786088342E-4	DESIGN
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999998282598016	WITHOUT_CLASSIFICATION	1.7174019846113644E-7	DESIGN
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999998614466863	WITHOUT_CLASSIFICATION	1.3855331369943662E-7	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999912638370979	WITHOUT_CLASSIFICATION	8.736162902048307E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999912638370979	WITHOUT_CLASSIFICATION	8.736162902048307E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999912638370979	WITHOUT_CLASSIFICATION	8.736162902048307E-6	DESIGN
// do nothing	WITHOUT_CLASSIFICATION	0.9999912638370979	WITHOUT_CLASSIFICATION	8.736162902048307E-6	DESIGN
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999997153438113	WITHOUT_CLASSIFICATION	2.8465618868374495E-7	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9998649993710299	WITHOUT_CLASSIFICATION	1.3500062896998254E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9998649993710299	WITHOUT_CLASSIFICATION	1.3500062896998254E-4	DESIGN
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9998649993710299	WITHOUT_CLASSIFICATION	1.3500062896998254E-4	DESIGN
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999984139054898	WITHOUT_CLASSIFICATION	1.5860945101221745E-6	DESIGN
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999757609574524	WITHOUT_CLASSIFICATION	2.4239042547626005E-5	DESIGN
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9981855556908454	WITHOUT_CLASSIFICATION	0.001814444309154446	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9988022167492668	DESIGN	0.0011977832507331823	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9988022167492668	DESIGN	0.0011977832507331823	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999999833427	WITHOUT_CLASSIFICATION	1.6657315356968347E-11	DESIGN
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999368272432293	WITHOUT_CLASSIFICATION	6.317275677065525E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999781176631302	WITHOUT_CLASSIFICATION	2.1882336869847303E-5	DESIGN
/* not a class */	WITHOUT_CLASSIFICATION	0.9999781176631302	WITHOUT_CLASSIFICATION	2.1882336869847303E-5	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9603598203819964	WITHOUT_CLASSIFICATION	0.03964017961800355	DESIGN
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9603598203819964	WITHOUT_CLASSIFICATION	0.03964017961800355	DESIGN
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999985975326431	WITHOUT_CLASSIFICATION	1.4024673569484936E-6	DESIGN
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999994451927195	WITHOUT_CLASSIFICATION	5.548072805017256E-7	DESIGN
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999246222779	WITHOUT_CLASSIFICATION	7.537772209462847E-8	DESIGN
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999997389217676	WITHOUT_CLASSIFICATION	2.610782323077221E-7	DESIGN
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999996093650064	WITHOUT_CLASSIFICATION	3.9063499360970845E-7	DESIGN
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999992644724135	WITHOUT_CLASSIFICATION	7.355275865672172E-7	DESIGN
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999991900086247	WITHOUT_CLASSIFICATION	8.099913751955328E-7	DESIGN
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9996871922488921	WITHOUT_CLASSIFICATION	3.1280775110785843E-4	DESIGN
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999998818894463	WITHOUT_CLASSIFICATION	1.1811055366008526E-7	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999973326911622	WITHOUT_CLASSIFICATION	2.6673088377882845E-6	DESIGN
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999973326911622	WITHOUT_CLASSIFICATION	2.6673088377882845E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999965717454611	WITHOUT_CLASSIFICATION	3.4282545390247E-6	DESIGN
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999965717454611	WITHOUT_CLASSIFICATION	3.4282545390247E-6	DESIGN
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999988417061701	WITHOUT_CLASSIFICATION	1.1582938298675967E-6	DESIGN
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999624624962	WITHOUT_CLASSIFICATION	3.7537503789021076E-8	DESIGN
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999968708310509	WITHOUT_CLASSIFICATION	3.129168949115858E-6	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999111807402	WITHOUT_CLASSIFICATION	8.881925973269395E-8	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999111807402	WITHOUT_CLASSIFICATION	8.881925973269395E-8	DESIGN
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999111807402	WITHOUT_CLASSIFICATION	8.881925973269395E-8	DESIGN
// line 286	WITHOUT_CLASSIFICATION	0.9999996311231888	WITHOUT_CLASSIFICATION	3.688768111425103E-7	DESIGN
// line 476	WITHOUT_CLASSIFICATION	0.999997980529713	WITHOUT_CLASSIFICATION	2.0194702870658E-6	DESIGN
// line 513	WITHOUT_CLASSIFICATION	0.9999981707580761	WITHOUT_CLASSIFICATION	1.829241924050714E-6	DESIGN
// line 530	WITHOUT_CLASSIFICATION	0.999999477525572	WITHOUT_CLASSIFICATION	5.224744280151109E-7	DESIGN
// line 533	WITHOUT_CLASSIFICATION	0.9999967819104745	WITHOUT_CLASSIFICATION	3.218089525517714E-6	DESIGN
// line 537	WITHOUT_CLASSIFICATION	0.9999980609587783	WITHOUT_CLASSIFICATION	1.939041221736576E-6	DESIGN
// line 551	WITHOUT_CLASSIFICATION	0.9999989333042257	WITHOUT_CLASSIFICATION	1.0666957741849488E-6	DESIGN
// end loop	WITHOUT_CLASSIFICATION	0.9999996195603122	WITHOUT_CLASSIFICATION	3.8043968777813154E-7	DESIGN
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9996519619991342	WITHOUT_CLASSIFICATION	3.480380008657671E-4	DESIGN
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999811055307705	WITHOUT_CLASSIFICATION	1.8894469229490037E-5	DESIGN
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.5767110451829326	DESIGN	0.42328895481706735	WITHOUT_CLASSIFICATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.99999925934185	WITHOUT_CLASSIFICATION	7.406581500078427E-7	DESIGN
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999969705799848	WITHOUT_CLASSIFICATION	3.0294200152015803E-6	DESIGN
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9988022167492668	DESIGN	0.0011977832507331823	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9991139804803418	WITHOUT_CLASSIFICATION	8.860195196582796E-4	DESIGN
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9555232959387205	WITHOUT_CLASSIFICATION	0.04447670406127948	DESIGN
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.8816297076020382	DESIGN	0.11837029239796185	WITHOUT_CLASSIFICATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998945858954876	WITHOUT_CLASSIFICATION	1.0541410451243278E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998945858954876	WITHOUT_CLASSIFICATION	1.0541410451243278E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998945858954876	WITHOUT_CLASSIFICATION	1.0541410451243278E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998945858954876	WITHOUT_CLASSIFICATION	1.0541410451243278E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998945858954876	WITHOUT_CLASSIFICATION	1.0541410451243278E-4	DESIGN
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999501570686385	WITHOUT_CLASSIFICATION	4.984293136148132E-5	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998945858954876	WITHOUT_CLASSIFICATION	1.0541410451243278E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998945858954876	WITHOUT_CLASSIFICATION	1.0541410451243278E-4	DESIGN
/*value*/	WITHOUT_CLASSIFICATION	0.9998945858954876	WITHOUT_CLASSIFICATION	1.0541410451243278E-4	DESIGN
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9995421517825687	WITHOUT_CLASSIFICATION	4.5784821743133705E-4	DESIGN
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9998769342517954	WITHOUT_CLASSIFICATION	1.2306574820464456E-4	DESIGN
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999987788831	WITHOUT_CLASSIFICATION	1.22111691108337E-9	DESIGN
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9685972862545826	WITHOUT_CLASSIFICATION	0.031402713745417275	DESIGN
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999998933897644	WITHOUT_CLASSIFICATION	1.0661023563300835E-7	DESIGN
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999988445154979	WITHOUT_CLASSIFICATION	1.1554845020990731E-5	DESIGN
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9998767358817804	WITHOUT_CLASSIFICATION	1.23264118219656E-4	DESIGN
// line 572	WITHOUT_CLASSIFICATION	0.9999996851613273	WITHOUT_CLASSIFICATION	3.148386726958164E-7	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999984325428353	WITHOUT_CLASSIFICATION	1.5674571646467743E-6	DESIGN
// line 601	WITHOUT_CLASSIFICATION	0.9999984325428353	WITHOUT_CLASSIFICATION	1.5674571646467743E-6	DESIGN
// line 625	WITHOUT_CLASSIFICATION	0.9999994214442929	WITHOUT_CLASSIFICATION	5.785557070720929E-7	DESIGN
// line 649	WITHOUT_CLASSIFICATION	0.9999982583627555	WITHOUT_CLASSIFICATION	1.7416372445731872E-6	DESIGN
// line 691	WITHOUT_CLASSIFICATION	0.99999861606749	WITHOUT_CLASSIFICATION	1.3839325100635598E-6	DESIGN
// line 723	WITHOUT_CLASSIFICATION	0.9999990353096531	WITHOUT_CLASSIFICATION	9.646903468792407E-7	DESIGN
// line 732	WITHOUT_CLASSIFICATION	0.9999995663410519	WITHOUT_CLASSIFICATION	4.3365894820137396E-7	DESIGN
// line 745	WITHOUT_CLASSIFICATION	0.999999251522544	WITHOUT_CLASSIFICATION	7.484774561184909E-7	DESIGN
// line 766	WITHOUT_CLASSIFICATION	0.9999979476860217	WITHOUT_CLASSIFICATION	2.0523139782852772E-6	DESIGN
// line 785	WITHOUT_CLASSIFICATION	0.9999994823892087	WITHOUT_CLASSIFICATION	5.176107913531336E-7	DESIGN
// line 794	WITHOUT_CLASSIFICATION	0.9999990181691732	WITHOUT_CLASSIFICATION	9.818308267408096E-7	DESIGN
// line 800	WITHOUT_CLASSIFICATION	0.9999996933397647	WITHOUT_CLASSIFICATION	3.0666023531986836E-7	DESIGN
// line 812	WITHOUT_CLASSIFICATION	0.9999999165155424	WITHOUT_CLASSIFICATION	8.348445751554942E-8	DESIGN
// line 827	WITHOUT_CLASSIFICATION	0.9999997894370365	WITHOUT_CLASSIFICATION	2.1056296358803494E-7	DESIGN
// line 839	WITHOUT_CLASSIFICATION	0.9999984265377352	WITHOUT_CLASSIFICATION	1.5734622647266037E-6	DESIGN
// line 845	WITHOUT_CLASSIFICATION	0.9999993552429534	WITHOUT_CLASSIFICATION	6.447570466601175E-7	DESIGN
// line 864	WITHOUT_CLASSIFICATION	0.9999988038442659	WITHOUT_CLASSIFICATION	1.196155734111342E-6	DESIGN
// line 886	WITHOUT_CLASSIFICATION	0.9999984380421559	WITHOUT_CLASSIFICATION	1.5619578440405343E-6	DESIGN
// line 896	WITHOUT_CLASSIFICATION	0.9999985298925329	WITHOUT_CLASSIFICATION	1.470107467030628E-6	DESIGN
// line 911	WITHOUT_CLASSIFICATION	0.9999989668967615	WITHOUT_CLASSIFICATION	1.0331032384354395E-6	DESIGN
// line 929	WITHOUT_CLASSIFICATION	0.9999995217433777	WITHOUT_CLASSIFICATION	4.782566223284745E-7	DESIGN
// line 952	WITHOUT_CLASSIFICATION	0.999999814902538	WITHOUT_CLASSIFICATION	1.8509746203701483E-7	DESIGN
// line 970	WITHOUT_CLASSIFICATION	0.9999997206677592	WITHOUT_CLASSIFICATION	2.793322408482256E-7	DESIGN
// line 972	WITHOUT_CLASSIFICATION	0.9999998203762647	WITHOUT_CLASSIFICATION	1.7962373536104524E-7	DESIGN
// line 991	WITHOUT_CLASSIFICATION	0.9999992205545613	WITHOUT_CLASSIFICATION	7.794454387875959E-7	DESIGN
// line 1011	WITHOUT_CLASSIFICATION	0.9999650855128781	WITHOUT_CLASSIFICATION	3.491448712191274E-5	DESIGN
// line 1026	WITHOUT_CLASSIFICATION	0.9999973374677094	WITHOUT_CLASSIFICATION	2.662532290616234E-6	DESIGN
// line 1038	WITHOUT_CLASSIFICATION	0.9999968774386643	WITHOUT_CLASSIFICATION	3.1225613358514396E-6	DESIGN
// line 1067	WITHOUT_CLASSIFICATION	0.9999959295987518	WITHOUT_CLASSIFICATION	4.0704012481000264E-6	DESIGN
// line 1085	WITHOUT_CLASSIFICATION	0.9999990277849703	WITHOUT_CLASSIFICATION	9.722150296175963E-7	DESIGN
// line 1097	WITHOUT_CLASSIFICATION	0.9999983930125846	WITHOUT_CLASSIFICATION	1.6069874153859038E-6	DESIGN
// line 1105	WITHOUT_CLASSIFICATION	0.9999996579834556	WITHOUT_CLASSIFICATION	3.4201654433833624E-7	DESIGN
// line 1122	WITHOUT_CLASSIFICATION	0.9999998326525317	WITHOUT_CLASSIFICATION	1.6734746827271642E-7	DESIGN
// line 1133	WITHOUT_CLASSIFICATION	0.9999977515284957	WITHOUT_CLASSIFICATION	2.248471504252084E-6	DESIGN
// line 1145	WITHOUT_CLASSIFICATION	0.9999992025377421	WITHOUT_CLASSIFICATION	7.974622578607256E-7	DESIGN
// line 1169	WITHOUT_CLASSIFICATION	0.9999980178674976	WITHOUT_CLASSIFICATION	1.9821325023129245E-6	DESIGN
// line 1201	WITHOUT_CLASSIFICATION	0.9999994521945718	WITHOUT_CLASSIFICATION	5.478054282144146E-7	DESIGN
// line 1210	WITHOUT_CLASSIFICATION	0.999999889756542	WITHOUT_CLASSIFICATION	1.1024345811343432E-7	DESIGN
// line 1229	WITHOUT_CLASSIFICATION	0.9999994990609895	WITHOUT_CLASSIFICATION	5.009390104588563E-7	DESIGN
// line 1261	WITHOUT_CLASSIFICATION	0.999998939681531	WITHOUT_CLASSIFICATION	1.0603184690712387E-6	DESIGN
// line 1287	WITHOUT_CLASSIFICATION	0.999999775010051	WITHOUT_CLASSIFICATION	2.2498994890173198E-7	DESIGN
// line 1293	WITHOUT_CLASSIFICATION	0.9999991340279465	WITHOUT_CLASSIFICATION	8.659720535923758E-7	DESIGN
// line 1307	WITHOUT_CLASSIFICATION	0.9999987575557625	WITHOUT_CLASSIFICATION	1.2424442375142087E-6	DESIGN
// line 1320	WITHOUT_CLASSIFICATION	0.9999995421454239	WITHOUT_CLASSIFICATION	4.5785457609086913E-7	DESIGN
// line 1325	WITHOUT_CLASSIFICATION	0.9999991249782485	WITHOUT_CLASSIFICATION	8.7502175157277E-7	DESIGN
// line 1363	WITHOUT_CLASSIFICATION	0.9999947267662314	WITHOUT_CLASSIFICATION	5.273233768709424E-6	DESIGN
// line 1398	WITHOUT_CLASSIFICATION	0.9999985317134753	WITHOUT_CLASSIFICATION	1.4682865247020063E-6	DESIGN
// line 1448	WITHOUT_CLASSIFICATION	0.999999076818414	WITHOUT_CLASSIFICATION	9.231815859638174E-7	DESIGN
// line 1456	WITHOUT_CLASSIFICATION	0.9999972579444125	WITHOUT_CLASSIFICATION	2.7420555875734755E-6	DESIGN
// line 1473	WITHOUT_CLASSIFICATION	0.9999973933956181	WITHOUT_CLASSIFICATION	2.606604381852124E-6	DESIGN
// line 1492	WITHOUT_CLASSIFICATION	0.9999997278404902	WITHOUT_CLASSIFICATION	2.7215950985333836E-7	DESIGN
// line 1513	WITHOUT_CLASSIFICATION	0.9999978708391529	WITHOUT_CLASSIFICATION	2.1291608470937892E-6	DESIGN
// line 1523	WITHOUT_CLASSIFICATION	0.999998949653839	WITHOUT_CLASSIFICATION	1.0503461610504859E-6	DESIGN
// line 1562	WITHOUT_CLASSIFICATION	0.9999995651150491	WITHOUT_CLASSIFICATION	4.348849509858923E-7	DESIGN
// line 1582	WITHOUT_CLASSIFICATION	0.999999850902757	WITHOUT_CLASSIFICATION	1.4909724305574534E-7	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999850044156566	WITHOUT_CLASSIFICATION	1.499558434348275E-5	DESIGN
// line 1603	WITHOUT_CLASSIFICATION	0.9999850044156566	WITHOUT_CLASSIFICATION	1.499558434348275E-5	DESIGN
// line 1615	WITHOUT_CLASSIFICATION	0.9999970524681868	WITHOUT_CLASSIFICATION	2.9475318132018715E-6	DESIGN
// line 1620	WITHOUT_CLASSIFICATION	0.9999994413778769	WITHOUT_CLASSIFICATION	5.58622123175001E-7	DESIGN
// line 1635	WITHOUT_CLASSIFICATION	0.9999938656617168	WITHOUT_CLASSIFICATION	6.134338283246015E-6	DESIGN
// line 1652	WITHOUT_CLASSIFICATION	0.9999993079633835	WITHOUT_CLASSIFICATION	6.920366165092272E-7	DESIGN
// line 1681	WITHOUT_CLASSIFICATION	0.9999971254300767	WITHOUT_CLASSIFICATION	2.874569923290217E-6	DESIGN
// line 1708	WITHOUT_CLASSIFICATION	0.9999994767436454	WITHOUT_CLASSIFICATION	5.232563546029971E-7	DESIGN
// line 1716	WITHOUT_CLASSIFICATION	0.9999974159702125	WITHOUT_CLASSIFICATION	2.584029787555939E-6	DESIGN
// line 1755	WITHOUT_CLASSIFICATION	0.9999992140834197	WITHOUT_CLASSIFICATION	7.859165802399198E-7	DESIGN
// line 1772	WITHOUT_CLASSIFICATION	0.9999997590813509	WITHOUT_CLASSIFICATION	2.409186491756459E-7	DESIGN
// line 1789	WITHOUT_CLASSIFICATION	0.9999994122987983	WITHOUT_CLASSIFICATION	5.877012017493459E-7	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999999245118102	WITHOUT_CLASSIFICATION	7.548818988430447E-8	DESIGN
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999999245118102	WITHOUT_CLASSIFICATION	7.548818988430447E-8	DESIGN
/* force for args */	WITHOUT_CLASSIFICATION	0.9999896065643634	WITHOUT_CLASSIFICATION	1.0393435636476019E-5	DESIGN
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999978553050942	WITHOUT_CLASSIFICATION	2.144694905817302E-6	DESIGN
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9544916329851041	WITHOUT_CLASSIFICATION	0.04550836701489587	DESIGN
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999999583721	WITHOUT_CLASSIFICATION	4.1627918649588725E-11	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999998730633432	WITHOUT_CLASSIFICATION	1.2693665680106097E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999998730633432	WITHOUT_CLASSIFICATION	1.2693665680106097E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999998730633432	WITHOUT_CLASSIFICATION	1.2693665680106097E-6	DESIGN
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999998730633432	WITHOUT_CLASSIFICATION	1.2693665680106097E-6	DESIGN
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9919904807590783	DESIGN	0.008009519240921751	WITHOUT_CLASSIFICATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.7760046164356105	WITHOUT_CLASSIFICATION	0.22399538356438956	DESIGN
// line 313	WITHOUT_CLASSIFICATION	0.9999983142453663	WITHOUT_CLASSIFICATION	1.6857546336220636E-6	DESIGN
// line 339	WITHOUT_CLASSIFICATION	0.9999971740938335	WITHOUT_CLASSIFICATION	2.825906166430429E-6	DESIGN
// line 361	WITHOUT_CLASSIFICATION	0.9999975249883188	WITHOUT_CLASSIFICATION	2.475011681192326E-6	DESIGN
// line 413	WITHOUT_CLASSIFICATION	0.9999986255338587	WITHOUT_CLASSIFICATION	1.3744661413192872E-6	DESIGN
// line 451	WITHOUT_CLASSIFICATION	0.9999993662809007	WITHOUT_CLASSIFICATION	6.33719099356136E-7	DESIGN
// line 472	WITHOUT_CLASSIFICATION	0.9999997756532032	WITHOUT_CLASSIFICATION	2.2434679676080723E-7	DESIGN
// line 500	WITHOUT_CLASSIFICATION	0.9999993610146161	WITHOUT_CLASSIFICATION	6.389853839847355E-7	DESIGN
// line 515	WITHOUT_CLASSIFICATION	0.9999991581101164	WITHOUT_CLASSIFICATION	8.418898835317785E-7	DESIGN
// line 555	WITHOUT_CLASSIFICATION	0.9999983968165065	WITHOUT_CLASSIFICATION	1.6031834935549814E-6	DESIGN
// line 582	WITHOUT_CLASSIFICATION	0.9999997689369673	WITHOUT_CLASSIFICATION	2.310630327826044E-7	DESIGN
// line 619	WITHOUT_CLASSIFICATION	0.9999991077625074	WITHOUT_CLASSIFICATION	8.922374925861165E-7	DESIGN
// line 636	WITHOUT_CLASSIFICATION	0.9999952493031895	WITHOUT_CLASSIFICATION	4.750696810457225E-6	DESIGN
// line 669	WITHOUT_CLASSIFICATION	0.9999981784310236	WITHOUT_CLASSIFICATION	1.8215689764180075E-6	DESIGN
// line 703	WITHOUT_CLASSIFICATION	0.9999970280332198	WITHOUT_CLASSIFICATION	2.971966780160038E-6	DESIGN
// line 776	WITHOUT_CLASSIFICATION	0.9999978227840819	WITHOUT_CLASSIFICATION	2.1772159179868265E-6	DESIGN
// line 814	WITHOUT_CLASSIFICATION	0.9999995542112972	WITHOUT_CLASSIFICATION	4.4578870291396684E-7	DESIGN
// line 823	WITHOUT_CLASSIFICATION	0.999999368175104	WITHOUT_CLASSIFICATION	6.318248958926952E-7	DESIGN
// line 854	WITHOUT_CLASSIFICATION	0.9999993633692731	WITHOUT_CLASSIFICATION	6.366307269534484E-7	DESIGN
// line 872	WITHOUT_CLASSIFICATION	0.9999998606213439	WITHOUT_CLASSIFICATION	1.3937865601114477E-7	DESIGN
// line 905	WITHOUT_CLASSIFICATION	0.9999993813730989	WITHOUT_CLASSIFICATION	6.186269010702089E-7	DESIGN
// line 925	WITHOUT_CLASSIFICATION	0.9999996761266665	WITHOUT_CLASSIFICATION	3.2387333351843077E-7	DESIGN
// line 958	WITHOUT_CLASSIFICATION	0.9999994760065405	WITHOUT_CLASSIFICATION	5.239934594859345E-7	DESIGN
// line 992	WITHOUT_CLASSIFICATION	0.9999997845682873	WITHOUT_CLASSIFICATION	2.1543171273368602E-7	DESIGN
// line 1047	WITHOUT_CLASSIFICATION	0.999997931375298	WITHOUT_CLASSIFICATION	2.068624701946569E-6	DESIGN
// line 1072	WITHOUT_CLASSIFICATION	0.9999996469424237	WITHOUT_CLASSIFICATION	3.530575762664961E-7	DESIGN
// line 1081	WITHOUT_CLASSIFICATION	0.999998364486719	WITHOUT_CLASSIFICATION	1.6355132811127528E-6	DESIGN
// line 1108	WITHOUT_CLASSIFICATION	0.9999997065191194	WITHOUT_CLASSIFICATION	2.934808806695354E-7	DESIGN
// line 1136	WITHOUT_CLASSIFICATION	0.999996487564305	WITHOUT_CLASSIFICATION	3.5124356950746037E-6	DESIGN
// line 1168	WITHOUT_CLASSIFICATION	0.9999987834665395	WITHOUT_CLASSIFICATION	1.21653346055867E-6	DESIGN
// line 1192	WITHOUT_CLASSIFICATION	0.9999998294413175	WITHOUT_CLASSIFICATION	1.7055868251420863E-7	DESIGN
// line 1241	WITHOUT_CLASSIFICATION	0.9999993871959996	WITHOUT_CLASSIFICATION	6.128040004043181E-7	DESIGN
// line 1267	WITHOUT_CLASSIFICATION	0.9999993425551275	WITHOUT_CLASSIFICATION	6.574448725630573E-7	DESIGN
// line 1286	WITHOUT_CLASSIFICATION	0.9999993828077627	WITHOUT_CLASSIFICATION	6.17192237196278E-7	DESIGN
// line 1301	WITHOUT_CLASSIFICATION	0.9999977273762228	WITHOUT_CLASSIFICATION	2.2726237772241425E-6	DESIGN
// line 1314	WITHOUT_CLASSIFICATION	0.9999973935718454	WITHOUT_CLASSIFICATION	2.6064281546475224E-6	DESIGN
// line 1333	WITHOUT_CLASSIFICATION	0.9999970106774032	WITHOUT_CLASSIFICATION	2.9893225967507674E-6	DESIGN
// line 1362	WITHOUT_CLASSIFICATION	0.9999992495969047	WITHOUT_CLASSIFICATION	7.50403095404608E-7	DESIGN
// line 1395	WITHOUT_CLASSIFICATION	0.9999980657201649	WITHOUT_CLASSIFICATION	1.934279835151558E-6	DESIGN
// line 1420	WITHOUT_CLASSIFICATION	0.9999997506087831	WITHOUT_CLASSIFICATION	2.4939121694546035E-7	DESIGN
// line 1439	WITHOUT_CLASSIFICATION	0.999997410944308	WITHOUT_CLASSIFICATION	2.58905569195253E-6	DESIGN
// line 1476	WITHOUT_CLASSIFICATION	0.9999973942980515	WITHOUT_CLASSIFICATION	2.6057019485149174E-6	DESIGN
// line 1535	WITHOUT_CLASSIFICATION	0.9999986217869948	WITHOUT_CLASSIFICATION	1.378213005179195E-6	DESIGN
// line 1588	WITHOUT_CLASSIFICATION	0.9999993238992968	WITHOUT_CLASSIFICATION	6.7610070317896E-7	DESIGN
// line 1618	WITHOUT_CLASSIFICATION	0.999998499859193	WITHOUT_CLASSIFICATION	1.5001408069276047E-6	DESIGN
// line 1643	WITHOUT_CLASSIFICATION	0.9999932972513	WITHOUT_CLASSIFICATION	6.7027487000377585E-6	DESIGN
// line 1669	WITHOUT_CLASSIFICATION	0.9999966769580774	WITHOUT_CLASSIFICATION	3.3230419225309804E-6	DESIGN
// line 1728	WITHOUT_CLASSIFICATION	0.9999997173954291	WITHOUT_CLASSIFICATION	2.8260457085675515E-7	DESIGN
// line 1753	WITHOUT_CLASSIFICATION	0.9999985076901969	WITHOUT_CLASSIFICATION	1.4923098030046085E-6	DESIGN
// line 1779	WITHOUT_CLASSIFICATION	0.9999988313056618	WITHOUT_CLASSIFICATION	1.16869433825751E-6	DESIGN
// line 1794	WITHOUT_CLASSIFICATION	0.9999990323397078	WITHOUT_CLASSIFICATION	9.676602923014976E-7	DESIGN
// line 1812	WITHOUT_CLASSIFICATION	0.9999998680862604	WITHOUT_CLASSIFICATION	1.3191373957337953E-7	DESIGN
// line 1837	WITHOUT_CLASSIFICATION	0.9999991313638505	WITHOUT_CLASSIFICATION	8.686361494040425E-7	DESIGN
// line 1895	WITHOUT_CLASSIFICATION	0.999999563296899	WITHOUT_CLASSIFICATION	4.367031009985988E-7	DESIGN
// line 1925	WITHOUT_CLASSIFICATION	0.9999996601456329	WITHOUT_CLASSIFICATION	3.398543670463922E-7	DESIGN
// line 1950	WITHOUT_CLASSIFICATION	0.9999996893040142	WITHOUT_CLASSIFICATION	3.106959858107671E-7	DESIGN
// line 1992	WITHOUT_CLASSIFICATION	0.9999997722654231	WITHOUT_CLASSIFICATION	2.2773457678816314E-7	DESIGN
// line 2014	WITHOUT_CLASSIFICATION	0.9999997914788956	WITHOUT_CLASSIFICATION	2.0852110447578846E-7	DESIGN
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9943304446523534	WITHOUT_CLASSIFICATION	0.0056695553476465215	DESIGN
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999912754152377	WITHOUT_CLASSIFICATION	8.724584762188946E-6	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984255328591131	WITHOUT_CLASSIFICATION	0.0015744671408869071	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984255328591131	WITHOUT_CLASSIFICATION	0.0015744671408869071	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984255328591131	WITHOUT_CLASSIFICATION	0.0015744671408869071	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984255328591131	WITHOUT_CLASSIFICATION	0.0015744671408869071	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984255328591131	WITHOUT_CLASSIFICATION	0.0015744671408869071	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984255328591131	WITHOUT_CLASSIFICATION	0.0015744671408869071	DESIGN
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9984255328591131	WITHOUT_CLASSIFICATION	0.0015744671408869071	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9992704551666933	WITHOUT_CLASSIFICATION	7.295448333067644E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9992704551666933	WITHOUT_CLASSIFICATION	7.295448333067644E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9992704551666933	WITHOUT_CLASSIFICATION	7.295448333067644E-4	DESIGN
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9992704551666933	WITHOUT_CLASSIFICATION	7.295448333067644E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999546202879812	WITHOUT_CLASSIFICATION	4.537971201880683E-4	DESIGN
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999546202879812	WITHOUT_CLASSIFICATION	4.537971201880683E-4	DESIGN
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.999999945087238	WITHOUT_CLASSIFICATION	5.4912761996077755E-8	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999934087901685	WITHOUT_CLASSIFICATION	6.591209831465743E-6	DESIGN
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999934087901685	WITHOUT_CLASSIFICATION	6.591209831465743E-6	DESIGN
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9612395484982328	WITHOUT_CLASSIFICATION	0.03876045150176722	DESIGN
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999794562666782	WITHOUT_CLASSIFICATION	2.0543733321923167E-5	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999964605146362	WITHOUT_CLASSIFICATION	3.5394853637948457E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999964605146362	WITHOUT_CLASSIFICATION	3.5394853637948457E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999964605146362	WITHOUT_CLASSIFICATION	3.5394853637948457E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999964605146362	WITHOUT_CLASSIFICATION	3.5394853637948457E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999964605146362	WITHOUT_CLASSIFICATION	3.5394853637948457E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999964605146362	WITHOUT_CLASSIFICATION	3.5394853637948457E-6	DESIGN
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999964605146362	WITHOUT_CLASSIFICATION	3.5394853637948457E-6	DESIGN
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999928984138541	WITHOUT_CLASSIFICATION	7.101586145831566E-6	DESIGN
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999466641551157	WITHOUT_CLASSIFICATION	5.333584488417802E-5	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999994911513407	WITHOUT_CLASSIFICATION	5.088486593853387E-7	DESIGN
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999994911513407	WITHOUT_CLASSIFICATION	5.088486593853387E-7	DESIGN
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999816532208866	WITHOUT_CLASSIFICATION	1.8346779113386918E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999781543105561	WITHOUT_CLASSIFICATION	2.1845689443801422E-5	DESIGN
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999781543105561	WITHOUT_CLASSIFICATION	2.1845689443801422E-5	DESIGN
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999991843296	WITHOUT_CLASSIFICATION	8.156703537219797E-10	DESIGN
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.999999999325814	DESIGN	6.741861627150817E-10	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999820348744831	WITHOUT_CLASSIFICATION	1.7965125516932878E-5	DESIGN
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999448944024457	WITHOUT_CLASSIFICATION	5.5105597554301574E-5	DESIGN
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999981649310932	WITHOUT_CLASSIFICATION	1.8350689068322862E-6	DESIGN
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999994487180386	WITHOUT_CLASSIFICATION	5.512819613515746E-7	DESIGN
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999999596451464	WITHOUT_CLASSIFICATION	4.035485364337251E-8	DESIGN
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999992506066435	WITHOUT_CLASSIFICATION	7.493933566141454E-7	DESIGN
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999998854990024	WITHOUT_CLASSIFICATION	1.1450099761221608E-7	DESIGN
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9973818630553142	WITHOUT_CLASSIFICATION	0.0026181369446858184	DESIGN
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999000529256453	WITHOUT_CLASSIFICATION	9.994707435462197E-5	DESIGN
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9998102083630982	WITHOUT_CLASSIFICATION	1.8979163690180872E-4	DESIGN
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999995165133321	WITHOUT_CLASSIFICATION	4.8348666789628E-7	DESIGN
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9605323131784664	WITHOUT_CLASSIFICATION	0.039467686821533586	DESIGN
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999996509541734	WITHOUT_CLASSIFICATION	3.4904582656631227E-7	DESIGN
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999905277665896	WITHOUT_CLASSIFICATION	9.472233410488496E-6	DESIGN
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999998269027	WITHOUT_CLASSIFICATION	1.7309726409296277E-10	DESIGN
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9992669344899413	WITHOUT_CLASSIFICATION	7.330655100586437E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996300171518996	WITHOUT_CLASSIFICATION	3.6998284810048826E-4	DESIGN
// now some data...	WITHOUT_CLASSIFICATION	0.9996300171518996	WITHOUT_CLASSIFICATION	3.6998284810048826E-4	DESIGN
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998822049107506	WITHOUT_CLASSIFICATION	1.1779508924930828E-4	DESIGN
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999994333757	WITHOUT_CLASSIFICATION	5.666243950082638E-10	DESIGN
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999420423639	WITHOUT_CLASSIFICATION	5.795763601560562E-8	DESIGN
//switch	WITHOUT_CLASSIFICATION	0.9988650814476515	WITHOUT_CLASSIFICATION	0.001134918552348537	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999629529075977	WITHOUT_CLASSIFICATION	3.704709240228031E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999629529075977	WITHOUT_CLASSIFICATION	3.704709240228031E-5	DESIGN
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999629529075977	WITHOUT_CLASSIFICATION	3.704709240228031E-5	DESIGN
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9553645471401001	WITHOUT_CLASSIFICATION	0.04463545285989993	DESIGN
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999877639044263	WITHOUT_CLASSIFICATION	1.2236095573570496E-5	DESIGN
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999985927248858	WITHOUT_CLASSIFICATION	1.407275114166816E-6	DESIGN
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999832823105554	WITHOUT_CLASSIFICATION	1.6717689444645677E-5	DESIGN
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999998921771494	WITHOUT_CLASSIFICATION	1.0782285067461061E-7	DESIGN
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999999992519	WITHOUT_CLASSIFICATION	7.479894907493019E-13	DESIGN
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999953543625	WITHOUT_CLASSIFICATION	4.6456375565474755E-9	DESIGN
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999999968982677	WITHOUT_CLASSIFICATION	3.1017322948400546E-8	DESIGN
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999731623880525	WITHOUT_CLASSIFICATION	2.6837611947584878E-5	DESIGN
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.999999642878004	WITHOUT_CLASSIFICATION	3.5712199592327035E-7	DESIGN
// reset buffer	WITHOUT_CLASSIFICATION	0.9999961235112297	WITHOUT_CLASSIFICATION	3.876488770378572E-6	DESIGN
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9994102837505621	WITHOUT_CLASSIFICATION	5.897162494378902E-4	DESIGN
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997643946762425	DESIGN	2.3560532375746848E-4	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9009186865671535	WITHOUT_CLASSIFICATION	0.0990813134328466	DESIGN
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999998979002	WITHOUT_CLASSIFICATION	1.0209968467612046E-10	DESIGN
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999886501	WITHOUT_CLASSIFICATION	1.1349962981788229E-11	DESIGN
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9992911056865083	WITHOUT_CLASSIFICATION	7.088943134918546E-4	DESIGN
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999999985159067	WITHOUT_CLASSIFICATION	1.4840933033702945E-8	DESIGN
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999904346228477	WITHOUT_CLASSIFICATION	9.565377152296146E-5	DESIGN
// Fixme: Do we need the check or does Main.java not call this...they should consolidate 	DESIGN	0.8716187173298418	DESIGN	0.12838128267015822	WITHOUT_CLASSIFICATION
// FIXME: move out of this class!	DESIGN	0.9986567731906955	DESIGN	0.00134322680930461	WITHOUT_CLASSIFICATION
// this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI // we search all keys for a case-insensitive match, and use that	DESIGN	0.9999967928878375	DESIGN	3.2071121625908733E-6	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9998870206526529	DESIGN	1.1297934734716263E-4	WITHOUT_CLASSIFICATION
// FIXME: Don't allow multiple threads to do this at once	DESIGN	0.9999038642707551	DESIGN	9.613572924500616E-5	WITHOUT_CLASSIFICATION
// TODO: eliminate?	DESIGN	0.8659575353006176	DESIGN	0.13404246469938233	WITHOUT_CLASSIFICATION
// TODO: People extending GzipWriter/reader will break.  Find better way here.	DESIGN	0.9999994505086816	DESIGN	5.494913185128489E-7	WITHOUT_CLASSIFICATION
// For JRUBY-2759, when MET choose CET timezone to work around Joda	DESIGN	0.9450996897756676	WITHOUT_CLASSIFICATION	0.054900310224332394	DESIGN
// we might need to perform a DST correction	DESIGN	0.9999438842162244	WITHOUT_CLASSIFICATION	5.611578377556052E-5	DESIGN
// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999535015299368	WITHOUT_CLASSIFICATION	4.6498470063173994E-5	DESIGN
/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */	DESIGN	0.9999951758158777	DESIGN	4.824184122365849E-6	WITHOUT_CLASSIFICATION
// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..	DESIGN	0.9999520941466806	WITHOUT_CLASSIFICATION	4.790585331924632E-5	DESIGN
//TODO: ary_sort_check should be done here	DESIGN	0.996673955775196	DESIGN	0.0033260442248039773	WITHOUT_CLASSIFICATION
//TODO: ary_sort_check should be done here	DESIGN	0.996673955775196	DESIGN	0.0033260442248039773	WITHOUT_CLASSIFICATION
// TODO: is this correct ?	DESIGN	0.9995537796800802	DESIGN	4.462203199198794E-4	WITHOUT_CLASSIFICATION
// TODO: make more efficient by not creating IRubyArray[]	DESIGN	0.9999573129577467	DESIGN	4.268704225325554E-5	WITHOUT_CLASSIFICATION
// TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. // How can we support this operation?	DESIGN	0.9999642457706273	DESIGN	3.575422937264648E-5	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9875009998004147	DESIGN	0.012499000199585181	WITHOUT_CLASSIFICATION
// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.	DESIGN	0.9999999997562622	DESIGN	2.4373777588512916E-10	WITHOUT_CLASSIFICATION
// The implementations of these are all bonus (see TODO above)  I was going // to throw an error from these, but it appears to be the wrong place to // do it.	DESIGN	0.9868396055795782	DESIGN	0.013160394420421757	WITHOUT_CLASSIFICATION
// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?	DESIGN	0.9999821605342282	DESIGN	1.7839465771885375E-5	WITHOUT_CLASSIFICATION
// TODO: remove	DESIGN	0.9960748640976721	DESIGN	0.003925135902327858	WITHOUT_CLASSIFICATION
// FIXME moved this here to get what's obviously a utility method out of IRubyObject. // perhaps security methods should find their own centralized home at some point.	DESIGN	0.9999999846756283	DESIGN	1.5324371702973754E-8	WITHOUT_CLASSIFICATION
// FIXME: Get rid of laziness and handle restricted access elsewhere	DESIGN	0.5546497316409307	WITHOUT_CLASSIFICATION	0.44535026835906927	DESIGN
// TODO: Should frozen error have its own distinct class?  If not should more share?	DESIGN	0.9992166988209333	DESIGN	7.833011790666899E-4	WITHOUT_CLASSIFICATION
// TODO: this is kinda gross	DESIGN	0.9999406941228792	DESIGN	5.9305877120852955E-5	WITHOUT_CLASSIFICATION
// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.	DESIGN	0.9958833896809034	DESIGN	0.004116610319096616	WITHOUT_CLASSIFICATION
// TODO: exec should replace the current process. // This could be possible with JNA. 	DESIGN	0.9999901588218592	DESIGN	9.84117814091398E-6	WITHOUT_CLASSIFICATION
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.	DESIGN	0.9597055011470874	WITHOUT_CLASSIFICATION	0.04029449885291263	DESIGN
// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.	DESIGN	0.9996328383430632	DESIGN	3.671616569367847E-4	WITHOUT_CLASSIFICATION
// FIXME: There's some code duplication here with RubyObject#inspect	DESIGN	0.9980842036605367	DESIGN	0.0019157963394632307	WITHOUT_CLASSIFICATION
// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)	DESIGN	0.9999999896977977	DESIGN	1.0302202294807432E-8	WITHOUT_CLASSIFICATION
// TODO: no java stringity	DESIGN	0.9940341782099762	DESIGN	0.005965821790023881	WITHOUT_CLASSIFICATION
// need to reexamine this	DESIGN	0.9856664044977959	WITHOUT_CLASSIFICATION	0.014333595502204081	DESIGN
// TODO: These were missing, so we're not handling them elsewhere?	DESIGN	0.9965966149597427	DESIGN	0.0034033850402572182	WITHOUT_CLASSIFICATION
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.	DESIGN	0.9574151084041437	DESIGN	0.04258489159585636	WITHOUT_CLASSIFICATION
// TODO: this method is not present in MRI!	DESIGN	0.9999112236342586	DESIGN	8.877636574145904E-5	WITHOUT_CLASSIFICATION
// TODO: This is also defined in the MetaClass too...Consolidate somewhere.	DESIGN	0.999987992953207	DESIGN	1.2007046793169798E-5	WITHOUT_CLASSIFICATION
// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov	DESIGN	0.9999999572888129	DESIGN	4.271118724386663E-8	WITHOUT_CLASSIFICATION
/*     * Fixme:  This does not have exact same semantics as RubyArray.join, but they     * probably could be consolidated (perhaps as join(args[], sep, doChomp)).     */	DESIGN	0.9999999969161472	DESIGN	3.0838528774562156E-9	WITHOUT_CLASSIFICATION
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)	DESIGN	0.9999999999261752	DESIGN	7.382488088572406E-11	WITHOUT_CLASSIFICATION
// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.	DESIGN	0.9999999999329277	DESIGN	6.707229725876653E-11	WITHOUT_CLASSIFICATION
// TODO: better error handling	DESIGN	0.999431990166564	DESIGN	5.680098334359207E-4	WITHOUT_CLASSIFICATION
// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?	DESIGN	0.9980310850770531	WITHOUT_CLASSIFICATION	0.001968914922946959	DESIGN
// IN FACT, we should probably raise an error, yes?	DESIGN	0.7868004850170923	WITHOUT_CLASSIFICATION	0.21319951498290776	DESIGN
// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again	DESIGN	0.9955302782398257	DESIGN	0.004469721760174424	WITHOUT_CLASSIFICATION
// FIXME we should probably still be dyncalling 'write' here	DESIGN	0.9997487491809443	DESIGN	2.5125081905573167E-4	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.999999996874298	DESIGN	3.125701913193052E-9	WITHOUT_CLASSIFICATION
// FIXME: I don't like the null checks here	DESIGN	0.9948019218901593	DESIGN	0.005198078109840827	WITHOUT_CLASSIFICATION
// TODO: handle writing into original buffer better	DESIGN	0.896917696060759	DESIGN	0.10308230393924096	WITHOUT_CLASSIFICATION
// TODO: is this the right thing to do?	DESIGN	0.9999799331283007	DESIGN	2.0066871699339075E-5	WITHOUT_CLASSIFICATION
// TODO: This isn't an exact port of MRI's pipe behavior, so revisit	DESIGN	0.9992717293548834	DESIGN	7.2827064511646E-4	WITHOUT_CLASSIFICATION
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415	DESIGN	0.9978660167468318	DESIGN	0.002133983253168167	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999826890662021	DESIGN	1.7310933797951878E-5	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999999800758993	DESIGN	1.992410068176683E-8	WITHOUT_CLASSIFICATION
// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.	DESIGN	0.9999996104296597	DESIGN	3.8957034037170175E-7	WITHOUT_CLASSIFICATION
// Workaround for JRUBY-4149	DESIGN	0.9691134651034066	DESIGN	0.0308865348965935	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415	DESIGN	0.9999893008733923	DESIGN	1.0699126607750907E-5	WITHOUT_CLASSIFICATION
// FIXME: This is copied code from RubyArray.  Both RE, Struct, and Array should share one impl // This is also hacky since I construct ruby objects to access ruby arrays through aref instead // of something lower.	DESIGN	0.9999999999981902	DESIGN	1.809754939513211E-12	WITHOUT_CLASSIFICATION
// FIXME: We should not be regenerating this over and over	DESIGN	0.9996328374885568	DESIGN	3.6716251144322163E-4	WITHOUT_CLASSIFICATION
// FIXME: This is probably not very efficient, since it loads all methods for each call	DESIGN	0.9999998705269679	DESIGN	1.2947303210254898E-7	WITHOUT_CLASSIFICATION
// TODO: Consider a better way of synchronizing 	DESIGN	0.999991484834151	DESIGN	8.515165849065603E-6	WITHOUT_CLASSIFICATION
// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?	DESIGN	0.9999997191167427	DESIGN	2.8088325721591015E-7	WITHOUT_CLASSIFICATION
// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable	DESIGN	0.5674391291743968	DESIGN	0.4325608708256031	WITHOUT_CLASSIFICATION
// FIXME: figure out why we get null sometimes	DESIGN	0.9720449799277239	DESIGN	0.02795502007227607	WITHOUT_CLASSIFICATION
// FIXME: Can get optimized for IEqlNode	DESIGN	0.5406346195980921	WITHOUT_CLASSIFICATION	0.4593653804019078	DESIGN
/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */	DESIGN	0.9999999994892133	DESIGN	5.107866999585777E-10	WITHOUT_CLASSIFICATION
// FIXME: these descriptions should probably be moved out, // to Constantine project which deals with all platform-dependent constants.	DESIGN	0.9999999831594779	DESIGN	1.6840522036737306E-8	WITHOUT_CLASSIFICATION
// TODO: what about n arg?	DESIGN	0.9883252755787908	DESIGN	0.011674724421209148	WITHOUT_CLASSIFICATION
// TODO: rounding mode should not be hard-coded. See #mode.	DESIGN	0.9996736019742962	DESIGN	3.263980257037299E-4	WITHOUT_CLASSIFICATION
// regular division with some default precision // TODO: proper algorithm to set the precision	DESIGN	0.9702044922889647	DESIGN	0.02979550771103538	WITHOUT_CLASSIFICATION
// TODO: better algorithm to set precision needed	DESIGN	0.9998884384257487	DESIGN	1.1156157425120378E-4	WITHOUT_CLASSIFICATION
// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;	DESIGN	0.9999999177310676	DESIGN	8.226893240582963E-8	WITHOUT_CLASSIFICATION
// FIXME: what should this really be?       assert x instanceof RubyComplex;	DESIGN	0.9999999761187572	DESIGN	2.3881242719832628E-8	WITHOUT_CLASSIFICATION
// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.	DESIGN	0.829865653371571	DESIGN	0.17013434662842905	WITHOUT_CLASSIFICATION
// Yow...this is still ugly	DESIGN	0.9211350557981326	WITHOUT_CLASSIFICATION	0.07886494420186738	DESIGN
// end hack	DESIGN	0.9916188216339272	WITHOUT_CLASSIFICATION	0.008381178366072812	DESIGN
//TODO: Should next and return also catch here?	DESIGN	0.7486672396016992	WITHOUT_CLASSIFICATION	0.2513327603983008	DESIGN
// TODO: Generalize this type-checking code into IRubyObject helper.	DESIGN	0.9991793334631427	DESIGN	8.206665368572688E-4	WITHOUT_CLASSIFICATION
// TODO: newTypeError does not offer enough for ruby error string...	DESIGN	0.9992370103335126	DESIGN	7.629896664873179E-4	WITHOUT_CLASSIFICATION
// FIXME: If true array is common enough we should pre-allocate and stick somewhere	DESIGN	0.9998056132303488	DESIGN	1.9438676965115317E-4	WITHOUT_CLASSIFICATION
// TODO: This is almost RubyModule#instance_methods on the metaClass.  Perhaps refactor.	DESIGN	0.9999988518289595	DESIGN	1.1481710404837819E-6	WITHOUT_CLASSIFICATION
// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.	DESIGN	0.9999999990082755	WITHOUT_CLASSIFICATION	9.917244667478642E-10	DESIGN
// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  	DESIGN	0.99999989716756	DESIGN	1.0283244001837374E-7	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8275904485219664	DESIGN	0.1724095514780337	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8275904485219664	DESIGN	0.1724095514780337	WITHOUT_CLASSIFICATION
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8275904485219664	DESIGN	0.1724095514780337	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.6052934980898342	DESIGN	0.39470650191016593	WITHOUT_CLASSIFICATION
// TODO: Split this into two sub-classes so that name and constNode can be specified seperately.	DESIGN	0.9834456514879054	DESIGN	0.01655434851209454	WITHOUT_CLASSIFICATION
// TODO: wire into new exception handling mechanism	DESIGN	0.5474073760687443	DESIGN	0.4525926239312556	WITHOUT_CLASSIFICATION
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.	DESIGN	0.988879189328168	DESIGN	0.011120810671832	WITHOUT_CLASSIFICATION
// TODO: do above but not below for additional newline nodes	DESIGN	0.9621664882370964	WITHOUT_CLASSIFICATION	0.0378335117629035	DESIGN
// TODO: Figure out how this can happen and possibly remove	DESIGN	0.999961895782451	DESIGN	3.810421754895872E-5	WITHOUT_CLASSIFICATION
// TODO: At least ParserSupport.attrset passes argsNode as null.  ImplicitNil is wrong magic for  // setupArgs since it will IRubyObject[] { nil }.  So we need to figure out a nice fast // null pattern for setupArgs. // assert argsNode != null : "receiverNode is not null";	DESIGN	0.9520366739509525	WITHOUT_CLASSIFICATION	0.04796332604904753	DESIGN
// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it	DESIGN	0.9999657405069104	DESIGN	3.4259493089558956E-5	WITHOUT_CLASSIFICATION
// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.	DESIGN	0.9999290372307534	DESIGN	7.096276924657372E-5	WITHOUT_CLASSIFICATION
// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope	DESIGN	0.9324577932733226	WITHOUT_CLASSIFICATION	0.06754220672667734	DESIGN
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9738448068504405	DESIGN	0.026155193149559452	WITHOUT_CLASSIFICATION
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better	DESIGN	0.9998537282270583	DESIGN	1.462717729417044E-4	WITHOUT_CLASSIFICATION
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)	DESIGN	0.9738448068504405	DESIGN	0.026155193149559452	WITHOUT_CLASSIFICATION
// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?	DESIGN	0.9992799520805281	DESIGN	7.200479194719304E-4	WITHOUT_CLASSIFICATION
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8371583566225537	WITHOUT_CLASSIFICATION	0.16284164337744633	DESIGN
// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.	DESIGN	0.8371583566225537	WITHOUT_CLASSIFICATION	0.16284164337744633	DESIGN
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.999999994248516	DESIGN	5.751483996188358E-9	WITHOUT_CLASSIFICATION
// TODO: This filtering is kind of gross...it would be nice to get some parser help here	DESIGN	0.999994276276668	DESIGN	5.723723332006689E-6	WITHOUT_CLASSIFICATION
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode	DESIGN	0.999999994248516	DESIGN	5.751483996188358E-9	WITHOUT_CLASSIFICATION
// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array	DESIGN	0.9999999974916881	DESIGN	2.5083119151269048E-9	WITHOUT_CLASSIFICATION
// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.	DESIGN	0.9995679297138749	DESIGN	4.3207028612506207E-4	WITHOUT_CLASSIFICATION
// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?	DESIGN	0.9999733337196609	DESIGN	2.666628033906118E-5	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9992128518595866	DESIGN	7.87148140413402E-4	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9107200511113592	DESIGN	0.08927994888864077	WITHOUT_CLASSIFICATION
// TODO: cache?	DESIGN	0.9107200511113592	DESIGN	0.08927994888864077	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9999870955514628	DESIGN	1.2904448537253038E-5	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.8879331363031335	DESIGN	0.11206686369686655	WITHOUT_CLASSIFICATION
// FIXME: this really ought to be in clinit, but it doesn't matter much	DESIGN	0.9999502028245313	DESIGN	4.979717546878075E-5	WITHOUT_CLASSIFICATION
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface	DESIGN	0.9934819791966555	DESIGN	0.0065180208033444745	WITHOUT_CLASSIFICATION
// FIXME: This isn't right for within ensured/rescued code	DESIGN	0.9998451698510864	DESIGN	1.5483014891361755E-4	WITHOUT_CLASSIFICATION
// SSS FIXME: Deprecated!  Going forward, all instructions should come from the CFG	DESIGN	0.997762773821872	DESIGN	0.0022372261781280845	WITHOUT_CLASSIFICATION
/* SSS FIXME: Do we need to check if l is same as whatever popped? */	DESIGN	0.9984754733032567	DESIGN	0.0015245266967433132	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.7625887689135874	WITHOUT_CLASSIFICATION	0.23741123108641268	DESIGN
// SSS FIXME: I added this in.  Is this correct?	DESIGN	0.9999698214009453	DESIGN	3.0178599054741225E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode	DESIGN	0.7625887689135874	WITHOUT_CLASSIFICATION	0.23741123108641268	DESIGN
// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?	DESIGN	0.9196239108774779	DESIGN	0.08037608912252216	WITHOUT_CLASSIFICATION
// SSS FIXME: Can this return anything other than nil?	DESIGN	0.9999931860325039	DESIGN	6.813967496114835E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: What happens to the add class in this case??	DESIGN	0.9999899371925174	DESIGN	1.0062807482619072E-5	WITHOUT_CLASSIFICATION
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?	DESIGN	0.9999998609761712	DESIGN	1.3902382886749528E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Where is this set up?  How is this diff from ClassVarDeclNode??	DESIGN	0.999946266203471	DESIGN	5.3733796528866894E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9999898463844104	DESIGN	1.015361558975281E-5	WITHOUT_CLASSIFICATION
/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/	DESIGN	0.5173087658504085	WITHOUT_CLASSIFICATION	0.48269123414959153	DESIGN
// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);	DESIGN	0.9998104633142157	DESIGN	1.895366857841944E-4	WITHOUT_CLASSIFICATION
// self = args[0] // SSS FIXME: Verify that this is correct	DESIGN	0.9818084310862463	DESIGN	0.018191568913753738	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correct?	DESIGN	0.9999898463844104	DESIGN	1.015361558975281E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: 1. Is the ordering correct? (poll before next)	DESIGN	0.9997753524416745	DESIGN	2.2464755832546235E-4	WITHOUT_CLASSIFICATION
// add a "self" recv here // TODO: is this right?	DESIGN	0.9999982441060299	DESIGN	1.7558939701151037E-6	WITHOUT_CLASSIFICATION
// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?	DESIGN	0.9999996711333476	DESIGN	3.288666523545517E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());	DESIGN	0.6035897649272021	DESIGN	0.3964102350727979	WITHOUT_CLASSIFICATION
// SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...	DESIGN	0.9999999934553908	DESIGN	6.5446091752764015E-9	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be a string literal or a string? // Dummy class for the script	DESIGN	0.9999564879863857	DESIGN	4.351201361429396E-5	WITHOUT_CLASSIFICATION
// SSS FIXME: Does int suffice, or do we need long?	DESIGN	0.9999997468047777	DESIGN	2.5319522230425884E-7	WITHOUT_CLASSIFICATION
// SSS FIXME: Correct?  Where does closure arg come from?	DESIGN	0.9957467302217254	DESIGN	0.004253269778274539	WITHOUT_CLASSIFICATION
// SSS FIXME: Should I have a reference to the IR_loop that is being retried?	DESIGN	0.9996459586913784	DESIGN	3.540413086215955E-4	WITHOUT_CLASSIFICATION
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.	DESIGN	0.8817411786399585	DESIGN	0.11825882136004146	WITHOUT_CLASSIFICATION
// SSS FIXME: This should never get called for constant svalues	DESIGN	0.8956590046814401	DESIGN	0.1043409953185599	WITHOUT_CLASSIFICATION
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings?   // Or can it happen during optimizations that this becomes a generic operand?	DESIGN	0.9999983153239113	DESIGN	1.684676088663252E-6	WITHOUT_CLASSIFICATION
// TODO: need to get this back into the method signature...now is too late...	DESIGN	0.9997440251420265	DESIGN	2.5597485797350123E-4	WITHOUT_CLASSIFICATION
/* Hack in to replace usual readline with this */	DESIGN	0.9938283589087942	DESIGN	0.006171641091205816	WITHOUT_CLASSIFICATION
// bit risky if someone changes completor, but useful for method calls	DESIGN	0.9998805730119027	WITHOUT_CLASSIFICATION	1.19426988097316E-4	DESIGN
// FIXME:  This determine module is in a strange location and should somehow be in block	DESIGN	0.9999997497777159	DESIGN	2.5022228412909783E-7	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9950132672225801	DESIGN	0.004986732777419824	WITHOUT_CLASSIFICATION
// we basically ignore protocol. let someone report it...	DESIGN	0.9986815238119272	WITHOUT_CLASSIFICATION	0.0013184761880728126	DESIGN
// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753	DESIGN	0.9999995464958146	DESIGN	4.5350418547513383E-7	WITHOUT_CLASSIFICATION
// context is null, wipe out the SoftReference (this could be done with a reference queue)	DESIGN	0.9907908683854436	WITHOUT_CLASSIFICATION	0.009209131614556311	DESIGN
// FIXME we want to eliminate these type casts when possible	DESIGN	0.9655505455520548	DESIGN	0.034449454447945296	WITHOUT_CLASSIFICATION
// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass	DESIGN	0.9999976232537795	DESIGN	2.3767462205103835E-6	WITHOUT_CLASSIFICATION
// FIXME: set up a CallConfiguration for this	DESIGN	0.9989128425511768	DESIGN	0.001087157448823172	WITHOUT_CLASSIFICATION
// FIXME: set up a call configuration for this	DESIGN	0.9967213127342314	DESIGN	0.0032786872657685345	WITHOUT_CLASSIFICATION
// TODO: make this do specific-arity calling	DESIGN	0.9997865418333182	DESIGN	2.1345816668169509E-4	WITHOUT_CLASSIFICATION
// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9685813680276796	WITHOUT_CLASSIFICATION	0.03141863197232047	DESIGN
// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature	DESIGN	0.9305321876371606	WITHOUT_CLASSIFICATION	0.06946781236283936	DESIGN
// FIXME This whole thing could probably be implemented as a module and // mixed into appropriate classes, especially if it uses either // IOInput/OutputStream or is smart about the kind of IO-like object // it's being used against.	DESIGN	0.9999988297750225	DESIGN	1.1702249774847511E-6	WITHOUT_CLASSIFICATION
// using IOInputStream may not be the most performance way, but it's easy.	DESIGN	0.9999987675753889	WITHOUT_CLASSIFICATION	1.2324246111324796E-6	DESIGN
// using IOOutputStream may not be the most performance way, but it's easy.	DESIGN	0.9999993089531899	WITHOUT_CLASSIFICATION	6.910468100907582E-7	DESIGN
// using IOChannel may not be the most performant way, but it's easy.	DESIGN	0.9999963381617447	WITHOUT_CLASSIFICATION	3.6618382552132827E-6	DESIGN
// these extra arrays are really unfortunate; split some of these paths out to eliminate?	DESIGN	0.7989150042738742	DESIGN	0.2010849957261259	WITHOUT_CLASSIFICATION
// TODO: WRONG - get interfaces from class	DESIGN	0.5965546218340286	WITHOUT_CLASSIFICATION	0.4034453781659713	DESIGN
// TODO: catch exception if constant is already set by other // thread	DESIGN	0.9939075598113892	WITHOUT_CLASSIFICATION	0.006092440188610774	DESIGN
// TODO: public only?	DESIGN	0.9979324129927248	DESIGN	0.002067587007275124	WITHOUT_CLASSIFICATION
// see note below re: 2-field kludge	DESIGN	0.8873937331986776	WITHOUT_CLASSIFICATION	0.11260626680132238	DESIGN
// TODO: protected methods.  this is going to require a rework // of some of the mechanism.	DESIGN	0.9999384828460485	DESIGN	6.151715395151766E-5	WITHOUT_CLASSIFICATION
// TODO: protected methods.  this is going to require a rework of some of the mechanism.	DESIGN	0.999971913682014	DESIGN	2.8086317986013492E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods	DESIGN	0.9999961951720431	DESIGN	3.8048279569525815E-6	WITHOUT_CLASSIFICATION
// FIXME: This doesn't actually support anything but String	DESIGN	0.963816031001348	DESIGN	0.03618396899865185	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9119894033223348	DESIGN	0.08801059667766521	WITHOUT_CLASSIFICATION
// again, shouldn't happen. TODO: might want to throw exception instead.	DESIGN	0.9119894033223348	DESIGN	0.08801059667766521	WITHOUT_CLASSIFICATION
// this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics	DESIGN	0.5770158563104839	WITHOUT_CLASSIFICATION	0.42298414368951615	DESIGN
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9415724502377977	DESIGN	0.05842754976220237	WITHOUT_CLASSIFICATION
// TODO: decompose getJavaPackageModule so we don't parse fullName	DESIGN	0.9415724502377977	DESIGN	0.05842754976220237	WITHOUT_CLASSIFICATION
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)	DESIGN	0.9999604932159607	WITHOUT_CLASSIFICATION	3.9506784039252234E-5	DESIGN
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found 	DESIGN	0.9999896331680679	DESIGN	1.0366831931989292E-5	WITHOUT_CLASSIFICATION
// TODO: check for Java reserved names and raise exception if encountered	DESIGN	0.9419242528025691	WITHOUT_CLASSIFICATION	0.058075747197430944	DESIGN
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at #getProxyOrPackageUnderPackage // re: future approach below the top-level.	DESIGN	0.998122990742865	DESIGN	0.0018770092571349414	WITHOUT_CLASSIFICATION
// FIXME: wtf is this? Why would these use the class?	DESIGN	0.9999999998517787	DESIGN	1.4822135447126638E-10	WITHOUT_CLASSIFICATION
// FIXME: needs to be rethought	DESIGN	0.9999464901296541	DESIGN	5.350987034599364E-5	WITHOUT_CLASSIFICATION
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)	DESIGN	0.7766416171453896	DESIGN	0.22335838285461035	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9909301110036002	DESIGN	0.009069888996399784	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9909301110036002	DESIGN	0.009069888996399784	WITHOUT_CLASSIFICATION
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9998416031943719	WITHOUT_CLASSIFICATION	1.5839680562815465E-4	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)	DESIGN	0.5008985577440664	WITHOUT_CLASSIFICATION	0.4991014422559336	DESIGN
// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);	DESIGN	0.9996516232025915	DESIGN	3.48376797408493E-4	WITHOUT_CLASSIFICATION
// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414	DESIGN	0.9999032205685271	DESIGN	9.677943147291851E-5	WITHOUT_CLASSIFICATION
// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.	DESIGN	0.999844706266485	DESIGN	1.552937335150622E-4	WITHOUT_CLASSIFICATION
// don't bother to check if final method, it won't // be there (not generated, can't be!)	DESIGN	0.99999944723696	WITHOUT_CLASSIFICATION	5.52763040007727E-7	DESIGN
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?	DESIGN	0.9999996860986589	DESIGN	3.1390134118673346E-7	WITHOUT_CLASSIFICATION
// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed	DESIGN	0.8708541654458078	DESIGN	0.12914583455419207	WITHOUT_CLASSIFICATION
// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414	DESIGN	0.9998550278869437	DESIGN	1.4497211305631054E-4	WITHOUT_CLASSIFICATION
// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.	DESIGN	0.9944611627610659	DESIGN	0.0055388372389342105	WITHOUT_CLASSIFICATION
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.	DESIGN	0.9999959595297606	WITHOUT_CLASSIFICATION	4.040470239347318E-6	DESIGN
// TODO: Only used by interface implementation; eliminate it	DESIGN	0.9982772294810005	DESIGN	0.0017227705189994912	WITHOUT_CLASSIFICATION
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes	DESIGN	0.9950132672225801	DESIGN	0.004986732777419824	WITHOUT_CLASSIFICATION
// modules are included with a shim class; we must find that shim to handle super() appropriately	DESIGN	0.9976280791190657	WITHOUT_CLASSIFICATION	0.0023719208809342644	DESIGN
// lame generics issues: making Segment class static and manually // inserting cache reference to work around various problems generically // referencing methods/vars across classes.	DESIGN	0.9999997420104864	DESIGN	2.5798951371943953E-7	WITHOUT_CLASSIFICATION
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)	DESIGN	0.9945669892955469	DESIGN	0.00543301070445323	WITHOUT_CLASSIFICATION
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return	DESIGN	0.9998970757669448	DESIGN	1.0292423305520023E-4	WITHOUT_CLASSIFICATION
// ruby constants for strings (should this be moved somewhere else?)	DESIGN	0.9959505927243193	DESIGN	0.004049407275680606	WITHOUT_CLASSIFICATION
// Hacky: Advance position to eat newline here....	DESIGN	0.9999350387126773	DESIGN	6.496128732262244E-5	WITHOUT_CLASSIFICATION
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));	DESIGN	0.9998889735800204	DESIGN	1.110264199795867E-4	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9991419187042261	DESIGN	8.580812957739476E-4	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9991419187042261	DESIGN	8.580812957739476E-4	WITHOUT_CLASSIFICATION
// ENEBO: Totally weird naming (in MRI is not allocated and is a local var name)	DESIGN	0.8638829293566752	WITHOUT_CLASSIFICATION	0.1361170706433248	DESIGN
// FIXME: Remove this from grammars.	DESIGN	0.999632948001617	DESIGN	3.670519983830682E-4	WITHOUT_CLASSIFICATION
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9998702610696064	DESIGN	1.297389303936165E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999916076904893	DESIGN	8.392309510695763E-6	WITHOUT_CLASSIFICATION
/* FIXME: lose syntactical elements here (and others like this)*/	DESIGN	0.992435127005742	DESIGN	0.007564872994257998	WITHOUT_CLASSIFICATION
/* ENEBO: Lots of optz in 1.9 parser here*/	DESIGN	0.9999952417171779	WITHOUT_CLASSIFICATION	4.7582828220052435E-6	DESIGN
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9118871551901275	DESIGN	0.08811284480987248	WITHOUT_CLASSIFICATION
// This is a dummy scope; we should find a way to make that more explicit	DESIGN	0.9422002214226916	DESIGN	0.0577997785773084	WITHOUT_CLASSIFICATION
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9524484666689601	DESIGN	0.04755153333103982	WITHOUT_CLASSIFICATION
// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.	DESIGN	0.9999999983739215	DESIGN	1.626078591390581E-9	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9990921377659624	DESIGN	9.07862234037703E-4	WITHOUT_CLASSIFICATION
// FIXME: I think we need these pushed somewhere?	DESIGN	0.999999996563004	DESIGN	3.436996114063629E-9	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9990921377659624	DESIGN	9.07862234037703E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9990921377659624	DESIGN	9.07862234037703E-4	WITHOUT_CLASSIFICATION
// XXX: Again, screwy evaling under previous frame's scope	DESIGN	0.9973169051873961	WITHOUT_CLASSIFICATION	0.0026830948126039694	DESIGN
/** * FIXME: This version is faster than the previous, but both suffer from a * crucial flaw: It is impossible to create an ObjectSpace with an iterator * that doesn't either: a. hold on to objects that might otherwise be collected * or b. have no way to guarantee that a call to hasNext() will be correct or * that a subsequent call to next() will produce an object. For our purposes, * for now, this may be acceptable. */	DESIGN	0.98898105260779	DESIGN	0.011018947392210049	WITHOUT_CLASSIFICATION
// FIXME: Maybe not best place, but move it to a good home	DESIGN	0.9999999999811627	DESIGN	1.8837205862117838E-11	WITHOUT_CLASSIFICATION
// FIXME: This is gross. Don't do this.	DESIGN	0.9942232395235342	DESIGN	0.0057767604764658404	WITHOUT_CLASSIFICATION
/** * * @author headius * FIXME convert to enum ? */	DESIGN	0.9998523620017212	DESIGN	1.476379982788686E-4	WITHOUT_CLASSIFICATION
// FIXME: No, I don't like it.	DESIGN	0.9554655441409837	DESIGN	0.0445344558590163	WITHOUT_CLASSIFICATION
// TODO: This is probably BAD...	DESIGN	0.9999221740730533	DESIGN	7.782592694671358E-5	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999988629705643	DESIGN	1.1370294356366058E-6	WITHOUT_CLASSIFICATION
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...	DESIGN	0.9999872865065383	DESIGN	1.2713493461622301E-5	WITHOUT_CLASSIFICATION
// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.	DESIGN	0.9999999461876927	DESIGN	5.381230722784641E-8	WITHOUT_CLASSIFICATION
// FIXME: inefficient; constructing a bignum just for dumping?	DESIGN	0.9999999883501329	DESIGN	1.1649867054827648E-8	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999988629705643	DESIGN	1.1370294356366058E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999988629705643	DESIGN	1.1370294356366058E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999988629705643	DESIGN	1.1370294356366058E-6	WITHOUT_CLASSIFICATION
// FIXME: not very efficient	DESIGN	0.9999988629705643	DESIGN	1.1370294356366058E-6	WITHOUT_CLASSIFICATION
// FIXME: this should go somewhere more generic -- maybe IdUtil	DESIGN	0.9999999651418466	DESIGN	3.4858153352596654E-8	WITHOUT_CLASSIFICATION
// FIXME: potentially could just use ByteList here?	DESIGN	0.999999188689758	DESIGN	8.113102420805806E-7	WITHOUT_CLASSIFICATION
// FIXME: This is almost entirely duplicated from Main.java	DESIGN	0.9999882391018053	DESIGN	1.1760898194656627E-5	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9918825049030351	DESIGN	0.008117495096965004	WITHOUT_CLASSIFICATION
// TODO: factor this chunk as in MRI/YARV GETASTER	DESIGN	0.9918825049030351	DESIGN	0.008117495096965004	WITHOUT_CLASSIFICATION
// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.	DESIGN	0.9906776245588286	WITHOUT_CLASSIFICATION	0.009322375441171357	DESIGN
// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: 	DESIGN	0.9996465423633119	WITHOUT_CLASSIFICATION	3.534576366881168E-4	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.6647465238990014	WITHOUT_CLASSIFICATION	0.3352534761009987	DESIGN
// This is GROSS, but Java API's aren't ISO 8601 compliant at all	DESIGN	0.6647465238990014	WITHOUT_CLASSIFICATION	0.3352534761009987	DESIGN
// TODO: get rid of this (lax returns 0.0, strict will throw)	DESIGN	0.9952621538087545	DESIGN	0.004737846191245537	WITHOUT_CLASSIFICATION
// TODO: turn off the negative? will return -0.0 in lax mode	DESIGN	0.9996374664866416	DESIGN	3.6253351335837437E-4	WITHOUT_CLASSIFICATION
// FIXME: this probably belongs in a different package.	DESIGN	0.9999875034146709	DESIGN	1.2496585329009505E-5	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.999999975283378	DESIGN	2.4716622068116346E-8	WITHOUT_CLASSIFICATION
// TODO: It would be nice to throw a better error for this	DESIGN	0.999999975283378	DESIGN	2.4716622068116346E-8	WITHOUT_CLASSIFICATION
// FIXME: I don't like this	DESIGN	0.9999452995624936	DESIGN	5.470043750636736E-5	WITHOUT_CLASSIFICATION
// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON	DESIGN	0.9997379948560348	DESIGN	2.6200514396522683E-4	WITHOUT_CLASSIFICATION
// FIXME: Clearing read buffer here...is this appropriate?	DESIGN	0.9999988207911416	DESIGN	1.1792088583919865E-6	WITHOUT_CLASSIFICATION
// TODO this should entry into error handling somewhere	DESIGN	0.9999666900798339	DESIGN	3.330992016614543E-5	WITHOUT_CLASSIFICATION
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength	DESIGN	0.9999919429362951	DESIGN	8.057063704884046E-6	WITHOUT_CLASSIFICATION
// We use a highly uncommon string to represent the paragraph delimiter (100% soln not worth it) 	DESIGN	0.9999991790237414	WITHOUT_CLASSIFICATION	8.209762585241037E-7	DESIGN
// TODO: Ruby does not seem to care about invalid numeric mode values // I am not sure if ruby overflows here also...	DESIGN	0.9993347195029514	DESIGN	6.652804970485146E-4	WITHOUT_CLASSIFICATION
// TODO: Make this more intelligible value	DESIGN	0.9882932879045302	DESIGN	0.01170671209546979	WITHOUT_CLASSIFICATION
// XXX: do something?	DESIGN	0.9919708884245544	DESIGN	0.008029111575445615	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9992128518595866	DESIGN	7.87148140413402E-4	WITHOUT_CLASSIFICATION
// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately	DESIGN	0.9992128518595866	DESIGN	7.87148140413402E-4	WITHOUT_CLASSIFICATION
// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?	DESIGN	0.999941766580182	DESIGN	5.8233419818104694E-5	WITHOUT_CLASSIFICATION
// index for the item // this could probably be more efficient, bailing out on assigning args past the end?	DESIGN	0.9999870955514628	DESIGN	1.2904448537253038E-5	WITHOUT_CLASSIFICATION
// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.	DESIGN	0.8879331363031335	DESIGN	0.11206686369686655	WITHOUT_CLASSIFICATION
// SSS FIXME: These should get normally compiled or initialized some other way ...  // SSS FIXME: Parent/super-type info is incorrect! // These are just placeholders for now .. this needs to be updated with *real* class objects later!	DESIGN	0.9999999996681498	DESIGN	3.318502156703652E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!	DESIGN	0.9999999479591575	DESIGN	5.20408424959403E-8	WITHOUT_CLASSIFICATION
// SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. // It calls regular to_ary on the object.  But, if it encounters a method_missing, the value // is inserted into an 1-element array! // try "a,b,c = 1" first; then define Fixnum.to_ary method and try it again. // Ex: http://gist.github.com/163551	DESIGN	0.9999999932522255	DESIGN	6.747774474098332E-9	WITHOUT_CLASSIFICATION
// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?	DESIGN	0.5949485016608056	WITHOUT_CLASSIFICATION	0.4050514983391945	DESIGN
// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff	DESIGN	0.9533465386067785	DESIGN	0.04665346139322138	WITHOUT_CLASSIFICATION
// exit monitor before making call // FIXME: this not being in a finally is a little worrisome	DESIGN	0.999988176892675	DESIGN	1.1823107324896686E-5	WITHOUT_CLASSIFICATION
// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...	DESIGN	0.9696534512741211	WITHOUT_CLASSIFICATION	0.03034654872587901	DESIGN
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search	DESIGN	0.9998416031943719	WITHOUT_CLASSIFICATION	1.5839680562815465E-4	DESIGN
// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate	DESIGN	0.9524484666689601	DESIGN	0.04755153333103982	WITHOUT_CLASSIFICATION
// TODO: This is actually now returning the scope of whoever called Method#to_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.	DESIGN	0.9999999975574396	DESIGN	2.4425604016158713E-9	WITHOUT_CLASSIFICATION
// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());	DESIGN	0.5241933771749392	WITHOUT_CLASSIFICATION	0.47580662282506087	DESIGN
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9991419187042261	DESIGN	8.580812957739476E-4	WITHOUT_CLASSIFICATION
// This is a fairly specific hack for empty string, but it does the job	DESIGN	0.9885873726268927	DESIGN	0.011412627373107363	WITHOUT_CLASSIFICATION
// XXX This constructor is a hack to implement the __END__ syntax. //     Converting a reader back into an InputStream doesn't generally work.	DESIGN	0.9999999926971826	DESIGN	7.302817406362166E-9	WITHOUT_CLASSIFICATION
// FIXME:  Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need // to totally change marshalling to work with overridden core classes.	DESIGN	0.9999999999999598	DESIGN	4.021896414664362E-14	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999999837	DESIGN	1.6394597220406016E-14	WITHOUT_CLASSIFICATION
// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227	DESIGN	0.9977798323952218	DESIGN	0.0022201676047782413	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999938881216297	DESIGN	6.111878370267456E-6	WITHOUT_CLASSIFICATION
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser	DESIGN	0.9999938881216297	DESIGN	6.111878370267456E-6	WITHOUT_CLASSIFICATION
// hack to get right style for input	DESIGN	0.9996997753512429	DESIGN	3.0022464875706806E-4	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9976281328403956	DESIGN	0.002371867159604414	WITHOUT_CLASSIFICATION
// small hack to save a cast later on	DESIGN	0.7469215639171558	DESIGN	0.25307843608284414	WITHOUT_CLASSIFICATION
// temporary hack to handle non-Ruby values // will come up with better solution shortly	DESIGN	0.9999999249311571	DESIGN	7.506884291663248E-8	WITHOUT_CLASSIFICATION
// Object#to_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.	DESIGN	0.9976281328403956	DESIGN	0.002371867159604414	WITHOUT_CLASSIFICATION
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync	DESIGN	0.9969707610373109	WITHOUT_CLASSIFICATION	0.0030292389626891303	DESIGN
// HACK: force clinit to be created	DESIGN	0.8960950169324595	DESIGN	0.10390498306754051	WITHOUT_CLASSIFICATION
// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined	DESIGN	0.9999999171747832	DESIGN	8.282521677538574E-8	WITHOUT_CLASSIFICATION
// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null	DESIGN	0.9999946108082644	DESIGN	5.38919173558633E-6	WITHOUT_CLASSIFICATION
// TODO: set our metaclass to target's class (i.e. scary!)	DESIGN	0.9980954553037966	WITHOUT_CLASSIFICATION	0.0019045446962034434	DESIGN
// TODO: confirm expected args are IRubyObject (or similar)	DESIGN	0.8275904485219664	DESIGN	0.1724095514780337	WITHOUT_CLASSIFICATION
// ignore...bean doesn't get registered // TODO: Why does that bother me?	DESIGN	0.9991419187042261	DESIGN	8.580812957739476E-4	WITHOUT_CLASSIFICATION
// optional args, so we have IRubyObject[] // TODO: confirm	DESIGN	0.6052934980898342	DESIGN	0.39470650191016593	WITHOUT_CLASSIFICATION
// not intended to be called directly by users (private) // OLD TODO from Ruby code: // This should be implemented in JavaClass.java, where we can // check for reserved Ruby names, conflicting methods, etc.	DESIGN	0.9999997074561264	DESIGN	2.925438735288773E-7	WITHOUT_CLASSIFICATION
// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())	DESIGN	0.5702112664825788	DESIGN	0.42978873351742125	WITHOUT_CLASSIFICATION
// TODO: Make callCoerced work in block context...then fix downto, step, and upto.	DESIGN	0.9992337975070262	DESIGN	7.662024929737631E-4	WITHOUT_CLASSIFICATION
// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?	DESIGN	0.9999999927937097	DESIGN	7.206290327404356E-9	WITHOUT_CLASSIFICATION
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?	DESIGN	0.999999996874298	DESIGN	3.125701913193052E-9	WITHOUT_CLASSIFICATION
// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteList#set not to be begin aware	DESIGN	0.994167488580767	DESIGN	0.005832511419233026	WITHOUT_CLASSIFICATION
// ignore; job was cancelled // FIXME: Is this ok?	DESIGN	0.9999967763463739	DESIGN	3.2236536261111962E-6	WITHOUT_CLASSIFICATION
// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.	DESIGN	0.9999834463915976	DESIGN	1.6553608402410515E-5	WITHOUT_CLASSIFICATION
// Must be called from main thread (it is currently, but this bothers me)	DESIGN	0.9999663077522213	WITHOUT_CLASSIFICATION	3.369224777876842E-5	DESIGN
// TODO: wire into new exception handling mechanism	DESIGN	0.5474073760687443	DESIGN	0.4525926239312556	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9909301110036002	DESIGN	0.009069888996399784	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9875009998004147	DESIGN	0.012499000199585181	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9875009998004147	DESIGN	0.012499000199585181	WITHOUT_CLASSIFICATION
// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415	DESIGN	0.9875009998004147	DESIGN	0.012499000199585181	WITHOUT_CLASSIFICATION
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415	DESIGN	0.9999999998378425	DESIGN	1.62157537454017E-10	WITHOUT_CLASSIFICATION
// SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method // But, if the mehod is modified, we create a new method object which in turn gets a new token.  What makes sense??  Intuitively, // it seems the first one ... but let us see ... // Current code version token for this method -- can change during execution as methods get redefined!	DESIGN	0.999999999992556	DESIGN	7.444097803974659E-12	WITHOUT_CLASSIFICATION
// FIXME weakref.rb also does caller(2) here for the backtrace	DESIGN	0.9969768503734568	WITHOUT_CLASSIFICATION	0.003023149626543082	DESIGN
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).	DESIGN	0.999999999559537	DESIGN	4.404629544291407E-10	WITHOUT_CLASSIFICATION
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map	DESIGN	0.9999937784779366	DESIGN	6.221522063476808E-6	WITHOUT_CLASSIFICATION
// TODO: we should be able to optimize this quite a bit post-1.0.  JavaClass already // has all the methods organized by method name; the next version (supporting protected // methods/fields) will have them organized even further. So collectMethods here can // just lookup the overridden methods in the JavaClass map, should be much faster.	DESIGN	0.9779382156836539	DESIGN	0.022061784316346103	WITHOUT_CLASSIFICATION
/* FIXME: finalizer should be dupped here */	DESIGN	0.9999826890662021	DESIGN	1.7310933797951878E-5	WITHOUT_CLASSIFICATION
// FIXME: null check is removable once we figure out how to assign to unset named block args	DESIGN	0.9346815589380814	DESIGN	0.06531844106191853	WITHOUT_CLASSIFICATION
/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */	DESIGN	0.9999999800758993	DESIGN	1.992410068176683E-8	WITHOUT_CLASSIFICATION
// TODO: Bleeding runtime into parser.  Arity may be should be in parser (to keep bleeding oneway)	DESIGN	0.9985247928160755	DESIGN	0.0014752071839244636	WITHOUT_CLASSIFICATION
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C  //   ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //    private int _lexicalNestingLevel;	DESIGN	0.9999940149609934	DESIGN	5.985039006631985E-6	WITHOUT_CLASSIFICATION
// Sometimes the value can be retrieved at "compile time".  If we succeed, nothing like it!   // We might not .. for the following reasons: // 1. The constant is missing, // 2. The reference is a forward-reference, // 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) // 4. Our compiler isn't able to right away infer that this is a constant. // // SSS FIXME: // 1. The operand can be a literal array, range, or hash -- hence Operand //    because Array, Range, and Hash derive from Operand and not Constant ... //    Is there a way to fix this impedance mismatch? // 2. It should be possible to handle the forward-reference case by creating a new //    ForwardReference operand and then inform the scope of the forward reference //    which the scope can fix up when the reference gets defined.  At code-gen time, //    if the reference is unresolved, when a value is retrieved for the forward-ref //    and we get a null, we can throw a ConstMissing exception!  Not sure! //	DESIGN	0.999980510150675	DESIGN	1.9489849325062773E-5	WITHOUT_CLASSIFICATION
// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector	DESIGN	0.999920265577953	DESIGN	7.973442204707335E-5	WITHOUT_CLASSIFICATION
// FIXME: legal here? may want UnsupportedOperationException	DESIGN	0.9998870206526529	DESIGN	1.1297934734716263E-4	WITHOUT_CLASSIFICATION
// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.	DESIGN	0.9576176971612427	WITHOUT_CLASSIFICATION	0.042382302838757255	DESIGN
// end hack	DESIGN	0.9916188216339272	WITHOUT_CLASSIFICATION	0.008381178366072812	DESIGN
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	DESIGN	0.9600608715870055	DESIGN	0.03993912841299461	WITHOUT_CLASSIFICATION
// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it	DESIGN	0.9999999999999837	DESIGN	1.6394597220406016E-14	WITHOUT_CLASSIFICATION
/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */	DESIGN	0.9999999999999998	DESIGN	2.9153990783050473E-16	WITHOUT_CLASSIFICATION
//TODO: Should next and return also catch here?	DESIGN	0.7486672396016992	WITHOUT_CLASSIFICATION	0.2513327603983008	DESIGN
// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?	DESIGN	0.9999987394629435	WITHOUT_CLASSIFICATION	1.2605370565607538E-6	DESIGN
/* FIXME: Consider fixing node_assign itself rather than single case*/	DESIGN	0.9998702610696064	DESIGN	1.297389303936165E-4	WITHOUT_CLASSIFICATION
/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/	DESIGN	0.9999916076904893	DESIGN	8.392309510695763E-6	WITHOUT_CLASSIFICATION
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.	DESIGN	0.9999670206128781	DESIGN	3.2979387121903236E-5	WITHOUT_CLASSIFICATION
/* FIXME: Resolve what the hell is going on*/	DESIGN	0.9997384759765023	DESIGN	2.615240234976543E-4	WITHOUT_CLASSIFICATION
// This is perhaps innefficient timewise?  Optimal spacewise	DESIGN	0.9118871551901275	DESIGN	0.08811284480987248	WITHOUT_CLASSIFICATION
// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.	DESIGN	0.9800205597013635	DESIGN	0.01997944029863651	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9990921377659624	DESIGN	9.07862234037703E-4	WITHOUT_CLASSIFICATION
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope	DESIGN	0.9990921377659624	DESIGN	9.07862234037703E-4	WITHOUT_CLASSIFICATION
// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.	DESIGN	0.9964814768625813	DESIGN	0.003518523137418644	WITHOUT_CLASSIFICATION
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. 	DESIGN	0.5526559544831845	WITHOUT_CLASSIFICATION	0.44734404551681545	DESIGN
/**     * Process streams get Channel.newChannel()ed into FileChannel but are not actually     * seekable. So instead of just the isSeekable check doing instanceof FileChannel,     * we must also add this boolean to check, which we set to false when it's known     * that the incoming channel is from a process.     *      * FIXME: This is gross, and it's NIO's fault for not providing a nice way to     * tell if a channel is "really" seekable.     */	DESIGN	0.9999968522313518	DESIGN	3.1477686481937333E-6	WITHOUT_CLASSIFICATION
